CREATE OR REPLACE PACKAGE BODY PKG_DB_FUNCTIONS

-------------
-- $HeadURL:   BASE_API.PKG_DB_FUNCTIONS.PBK  $
-- $Revision:   1.57  $
--   $Author:   dugupta  $

--     $Date:   30 Sep 2013 13:12:02  $
-------------
as

-----------------------------------------------------------------------------------------------------------------------------------------------------
--   Package Constants ...
-----------------------------------------------------------------------------------------------------------------------------------------------------

v_current_date                object_bv_value.business_variable_value%type;
pkg_name            constant  system_log.program_name%type                  :=   'pkg_db_functions.';

g_policy_payer_tab            pkg_db_multipayer.t_policy_payer_tab;  -- #MP. Cashed list of payers for a policy. Indexed by PTP ID or Policy Term ID

-- OSPRODUCT-2406
type t_policy_term_id_cache   is table of object.object_id%type index by long; -- a table of TermIDs indexed by in_policy_id:in_transaction_id:MMDDYY
g_policy_term_id_cache        t_policy_term_id_cache;
-- /OSPRODUCT-2406 

procedure show_version
is

begin

     dbms_output.put_line     ('$HeadURL:   BASE_API.PKG_DB_FUNCTIONS.PBK  $');
     dbms_output.put_line     ('$Revision:   1.57  $');
     dbms_output.put_line     ('$Author:   dugupta  $');
     dbms_output.put_line     ('$Date:   30 Sep 2013 13:12:02  $');

exception
     when others then

          dbms_output.put_line (sqlerrm (sqlcode));

end show_version;

function fn_get_cashpost_apply_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type -- BillingAccountTrxSet


)
return number
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_cashpost_apply_amt';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                number := 0;
     v_fitrx_list                  pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_fitrx_indx                  number;
     v_fitransaction_amount        number;
     v_fitransaction_type          number;
     v_cash_post_amt               number;
     v_cash_post_apply_amt         number;
     v_rollup_object_list          pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_rollup_object_indx          number;
     v_rollup_total_due            number;

begin

     -- Get FITransactions
     v_fitrx_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_object_id,
          gObjType_FITransaction,
          v_fitrx_list
     );


     v_fitrx_indx := v_fitrx_list.first;

     while (v_fitrx_indx is not null)
     loop

          v_fitransaction_amount := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitrx_list(v_fitrx_indx), gbv_FITransaction_Amount);

          v_fitransaction_type := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitrx_list(v_fitrx_indx), gbv_FITransaction_Type);

          if v_fitransaction_type = gFITrxType_Cash_Post
          then

               v_cash_post_amt := nvl(v_fitransaction_amount,0);

          end if;

          v_fitrx_indx := v_fitrx_list.next(v_fitrx_indx);

     end loop;

     v_rollup_object_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_object_id,
          gObjType_CustomerRecon,
          v_rollup_object_list
     );


     v_rollup_object_indx := v_rollup_object_list.first;

     while (v_rollup_object_indx is not null)
     loop

          v_rollup_total_due := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               v_rollup_object_list(v_rollup_object_indx),
               gbv_Recon_PaidAmount
          );


          v_cash_post_apply_amt := nvl(v_cash_post_apply_amt,0)+nvl(v_rollup_total_due,0);

          v_rollup_object_indx := v_rollup_object_list.next(v_rollup_object_indx);

     end loop;

     v_return_value := v_cash_post_amt - v_cash_post_apply_amt;

     return v_return_value;

end fn_get_cashpost_apply_amt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_billingbatch_trx_cnt
--
--   %USAGE
--        This function returns the count of transactions added in the batch
--
--   %ALGORITHM
--        Return the count of transactions for the batch with status <> created.
--
--
--   %PARAM   in_billing_batch_id                BillingAccountTransactionSet ID
--   %PARAM   in_batch_type                      Cash Apply Batch/ Cash Post Batch/ Single Transaction Batch
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_billingbatch_trx_cnt
(
     in_billing_batch_id           in        object.object_id%type,
     in_batch_type                 in        object_bv_value.business_variable_value%type

)
return number
is

     v_transaction_count      number  := 0;
     v_batch_type             object_bv_value.business_variable_value%type;

begin

     if in_billing_batch_id is null
     then

          return    null;

     end if;

     if   in_batch_type  =    gBatchType
     then

          v_transaction_count := 1;

     elsif in_batch_type in (gBatch_Manual_Cash_apply, gBatch_AutoCashApply)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_Cash_Apply;

     elsif in_batch_type in (gBatch_AutoWriteOff, gBatch_ManualWriteOff)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_WriteOff;

     elsif in_batch_type in (gBatch_PayableAdjust, gBatch_DisburseAdjust, gBatch_CashTransferBatch,gBatch_CashUnapply)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          ;
     ---Added logic for cash roll back OSBILLING-467
     elsif in_batch_type in (gBatch_CashRollback)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
a.fitransaction_type_id = gFITrxType_CashRollback
          and
               a.status_enum <> gGenericStatus_Created


                  ;


     else

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
            ;

     end if;

     return v_transaction_count;

end fn_billingbatch_trx_cnt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_billingbatch_trx_amount
--
--   %USAGE
--        This function returns the amount of transactions added in the batch
--
--   %ALGORITHM
--        Return the total amount of transactions added for the batch with status <> created.
--
--
--   %PARAM    in_billing_batch_id                BillingAccountTransactionSet ID
--   %PARAM    in_batch_type                      Cash Apply Batch/ Cash Post Batch/ Single Transaction Batch
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_billingbatch_trx_amount
(
     in_billing_batch_id           in        object.object_id%type,
     in_batch_type                 in        object_bv_value.business_variable_value%type
)
return number
is



     v_transaction_amount     number  := 0;

begin

     if in_billing_batch_id is null
     then

          return    null;

     end if;


     if in_batch_type in (gBatch_Manual_Cash_apply, gBatch_AutoCashApply)
     then

          select
               nvl(sum(a.amount),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_Cash_Apply;

     elsif in_batch_type in (gBatch_AutoWriteOff, gBatch_ManualWriteOff)
     then

          select
               nvl(sum(a.amount),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_WriteOff;

     elsif in_batch_type in (gBatch_PayableAdjust,gBatch_DisburseAdjust,gBatch_CashTransferBatch,gBatch_CashUnapply)
     then

          select
               nvl(sum(abs(a.amount)),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          ;
     ---Added logic for cash roll back OSBILLING-467
     elsif in_batch_type in (gBatch_CashRollback)
     then

          select
               nvl(sum(abs(a.amount)),0)--nvl(sum(a.amount),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_CashRollback;


     else

          select
               nvl(sum(a.amount),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum <> gGenericStatus_Created
          and
               a.fitransaction_type_id = gFITrxType_Cash_Post;


     end if;

     return v_transaction_amount;

end fn_billingbatch_trx_amount;

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_batch_processtrx_count
--
--   %USAGE
--        This function returns the count of processed transactions added in the batch
--
--   %ALGORITHM
--        Return the count of transactions added for the batch with status = processed.
--
--
--   %PARAM    in_billing_batch_id                BillingAccountTransactionSet ID
--   %PARAM    in_batch_type                      Cash Apply Batch/ Cash Post Batch/ Single Transaction Batch
-----------------------------------------------------------------------------------------------------------------------------------------------------


function  fn_batch_processtrx_count
(
     in_billing_batch_id           in        object.object_id%type,
     in_batch_type                 in        object_bv_value.business_variable_value%type
)
return number
is

     v_transaction_count     number  := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_batch_processtrx_count';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(92817907856, 189356198) ;

begin

     if in_billing_batch_id is null
     then

          return null;

     end if;

     if in_batch_type = gBatchType
     then

          v_transaction_count := 1;

     elsif in_batch_type in (gBatch_Manual_Cash_apply, gBatch_AutoCashApply)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_Cash_Apply;

     elsif in_batch_type in (gBatch_AutoWriteOff,gBatch_ManualWriteOff)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_WriteOff;

elsif in_batch_type in (gBatch_CashTransferBatch)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
    and
      fitransaction_type_id=401;



/* OSBILLING-1244 - Added PKG_DB_REVERSE_APPLY.gBatchType_DisburseReversal,  PKG_DB_REVERSAL.gBatchType_ReverseCashTrans
*/


     elsif in_batch_type in (PKG_DB_REVERSE_APPLY.gBatchType_DisburseReversal
                             ,gBatch_PayableAdjust,gBatch_DisburseAdjust)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          ;

     --GCNA-933 add separate fork for Cash/Credit Transfer Reversal to calculate correctly

     elsif in_batch_type in ( PKG_DB_REVERSAL.gBatchType_ReverseCashTrans )

     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.transaction_type = pkg_os_lookup.fn_lookup_list_text_get
                              (
                                   FITransactionTypeList,
                                   1301
                              )

          ;

       /*       Added as part of OSBilling-670               */
       elsif in_batch_type = gBatch_CashUnapply
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
         and
            transaction_type = pkg_os_lookup.fn_lookup_list_text_get
                              (
                                   FITransactionTypeList,
                                   201
                              )
          ;

     ---Added logic for cash roll back OSBILLING-467
     elsif in_batch_type in (gBatch_CashRollback)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_CashRollback
          ;

     elsif in_batch_type in (gFITrxType_ReversalWriteOff)
     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.generic_instance_number = 1
          and
               a.fitransaction_type_id = gFITrxType_Writeoff_Reversal;

    elsif in_batch_type in (gFITrxType_AdhocJournal , gBatch_Adhoc_Journal)
    then
          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id in (gFITrxType_AdhocJournal,gFITrxType_ExternalCredits);--PMADEV-564 logic for external credits

    elsif in_batch_type in (gBatch_AdhocJournalReversal , gBatch_DishAdhocJournal)
    then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_AdhocReversal;

     --Added logic for Dish Fee -- Serhii GCNA-632
     elsif in_batch_type in (gBatchType_Dish)

     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_Dish
          and
               a.billing_account_id     = pkg_os_object.fn_object_parent_get(92817907856, 189356198, in_billing_batch_id); --selecting only debit Dish fee that applied to current account


     --Added logic for Dish Cash Apply -- Serhii GCNA-632
     elsif in_batch_type in (gBatchType_DishCashApply)

     then

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_CashApply_Reversal;

     --- OSBILLING- 1845 Added logic for Manual Credit Apply Batch


     elsif in_batch_type in (gBatch_ManualCreditApply,gBatch_AutoCreditApply)
     then

           select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_CreditApply;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask gcna added additional check
     elsif in_batch_type in (gBatch_EFTPayment)
     then
          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_Cash_Post;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
  --GCNA-2666
     elsif in_batch_type in (gBatch_DISHSinglePayment)--3001
     then
          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and
               a.fitransaction_type_id = gFITrxType_CashRollback;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

     else

          select
               count(*)
          into
               v_transaction_count
          from
               dragon_fitransaction a
          where
               a.batch_ref_no = in_billing_batch_id
          and
               a.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          and 
               a.fitransaction_type_id <> gFITrxType_PayableEarning;--OSPRODUCT-8778

     end if;

     return v_transaction_count;

end fn_batch_processtrx_count;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_batch_processtrx_amount
--
--   %USAGE
--        This function returns the amount of processed transactions added in the batch
--
--   %ALGORITHM
--        If a batch (batch type) creates financials, the amount should be taken
--        from initial_amount column of the dragon_fitem table. Otherwise (ie when batch does not create any financials)
--        the amount is taken from amount column of the dragon_fitransaction table.
--        Two differentiate the two cases a batch type will be analyzed.
--
--
--   %PARAM    in_billing_trx_set_id                BillingAccountTransactionSet ID
--   %PARAM    in_billing_trx_set_type_id           BillingAccountTransactionSet_type_ID
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_batch_processtrx_amount
(
     in_session_id                   in        object.object_id%type,
     in_transaction_id               in        object.object_id%type,
     in_billing_trx_set_id           in        object.object_id%type,
     in_billing_trx_set_type_id      in        object_bv_value.business_variable_value%type,
     in_gross_amount_tf              in        char default 'F'
)
return number
is

     v_transaction_amount     number  := 0;
     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_batch_processtrx_amount';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_trx_set_parent_BA_id   object_bv_value.business_variable_value%type;
     v_rollbacked_trx_id      object.object_id%type;
     v_rollback_trx_type_id   object.object_id%type;

begin

     if in_billing_trx_set_id is null
     then
          
          ----return  NULL;
          return 0; -- changed 20170801 to send 0 instead of null Cheryl
          
     end if;

     v_rollbacked_trx_id := pkg_os_object_io.fn_object_bv_get ( in_session_id,in_transaction_id,in_billing_trx_set_id,pkg_db_reversal.gbv_BillAccTrxSet_RollBckTrx);

     if v_rollbacked_trx_id is not null
     then
          
          v_rollback_trx_type_id := pkg_os_object_io.fn_object_bv_get ( in_session_id,in_transaction_id,v_rollbacked_trx_id,pkg_db_object.gbv_FITrxSet_BatchType);

     end if;

     v_trx_set_parent_BA_id := pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, in_billing_trx_set_id);


     if in_billing_trx_set_type_id in
        (
               --
               -- The following batches do not create fitems, take amount from fitransaction level
               --
               gBatch_Manual_Cash_apply,   -- 701
               gBatchType_AgencyStatement, -- 801
               gBatch_Current_Account_Stmt, --1201
               --gBatch_Invoice,              --1801    -- Commented UTPRODUCT-2036
               gBatch_CashUnapply,          --2501
               gBatchType_DishCashApply,    --3101
               gBatch_ManualCreditApply,    --3301
               --gBatch_AutoCreditApply,      --3401  --OSBILLING-6959
               --gbatch_late_notice2,                   --OSPRODUCT-1882 -- Commented UTPRODUCT-2036
               --gBatch_NOIC,                 --4212    -- Commented UTPRODUCT-2036
               gBatch_NOIC_Rescind,         --5046
               --gBatch_Late_Notice,          --5146    -- Commented UTPRODUCT-2036
               gBatch_Aging_Status_Update,  --6007
               gBatch_Second_Reminder_Note, --6731
               -- gBatch_Credit_Apply_Reversal, --7301 -- OSPRODUCT-4115
               --gFITrxType_Reversal,
               gBatch_CheckPayment,
               gBatch_EFTBatchPayment,
               gBatch_CreditCardBatch,
               g_Batch_InvceRollupStmt, --9801
               g_BatchLte1RollupStmt,--9802
               g_BatchLte2RollupStmt,--9803
               pkg_db_object.gbv_FITrx_Amount,--2401
               pkg_db_constant.g_SetType_AccountStatement --UTPRODUCT2-5				
        )
        or
        (
               v_rollback_trx_type_id is not null and v_rollback_trx_type_id in
               (
               --
               -- The following batches do not create fitems, take amount from fitransaction level
               --
                    gBatch_Manual_Cash_apply,   -- 701
                    gBatchType_AgencyStatement, -- 801
                    gBatch_Current_Account_Stmt, --1201
                    --gBatch_Invoice,              --1801  -- Commented UTPRODUCT-2036
                    gBatch_CashUnapply,          --2501
                    gBatchType_DishCashApply,    --3101
                    gBatch_ManualCreditApply,    --3301
                    -- gBatch_AutoCreditApply,      --3401 -- OSPRODUCT-4115
                    --gBatch_NOIC,                 --4212   -- Commented UTPRODUCT-2036
                    gBatch_NOIC_Rescind,         --5046
                    --gBatch_Late_Notice,          --5146  -- Commented UTPRODUCT-2036
                    gBatch_Aging_Status_Update,  --6007
                    gBatch_Second_Reminder_Note, --6731
                    -- gBatch_Credit_Apply_Reversal, --7301 -- OSPRODUCT-4115
                    --gFITrxType_Reversal,
                    gBatch_CheckPayment,
                    gBatch_EFTBatchPayment,
                    gBatch_CreditCardBatch,

                    g_Batch_InvceRollupStmt, --9801
                    g_BatchLte1RollupStmt,--9802
                    g_BatchLte2RollupStmt,--9803
                    pkg_db_object.gbv_FITrx_Amount--2401
               )
          )
     then

          -- Take amount from fitransaction level
          --

          select
                 NVL(SUM(trx.amount),0)
            into
                 v_transaction_amount
            from
                 dragon_fitransaction  trx
           where
                 trx.batch_ref_no   = in_billing_trx_set_id
             and
             (
                 trx.fitransaction_type_id <> gFITrxType_CashCreditTransfer
                 and
                 nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, trx.fitransaction_id,pkg_db_reversal.gbv_RefReversedFitrxId),gbv_FITransaction_Type),0)<> gFITrxType_CashCreditTransfer
             )
             and
                 trx.status_enum in (  gFITrxStatus_Processed,gFITrxStatus_RollBacked)
             ;
     
     
     elsif     in_billing_trx_set_type_id in(gBatch_AutoCashApply)  --UTXPRODUCT-580
               or
               (
                    v_rollback_trx_type_id is not null 
                    and 
                    v_rollback_trx_type_id in (gBatch_AutoCashApply  )
               )
     then
          -- Take amount from fitransaction level
          --

          select
                    NVL(SUM(trx.amount),0)
          into
                    v_transaction_amount
          from
                    dragon_fitransaction  trx
          where
                    trx.batch_ref_no   = in_billing_trx_set_id
          and
                    trx.fitransaction_type_id not in ( gFITrxType_CashCreditTransfer ,  gFITrxType_Invoice)
          and
                    nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, trx.fitransaction_id,pkg_db_reversal.gbv_RefReversedFitrxId),gbv_FITransaction_Type),0)<> gFITrxType_CashCreditTransfer
          and
                    trx.status_enum in (  gFITrxStatus_Processed,gFITrxStatus_RollBacked)
          ;
     -- UTPRODUCT-2036       
     elsif in_billing_trx_set_type_id in
           (  
                --
                -- The following batches do not create fitems, take amount from fitransaction level
                --
                --gBatch_Invoice,              --1801 /*UTPRODUCT-4682 */
                gbatch_late_notice2,                   --OSPRODUCT-1882 -- Commented UTPRODUCT-2036
                gBatch_NOIC,                 --4212    -- Commented UTPRODUCT-2036 
                gBatch_Late_Notice,           --5146
                PKG_DB_CONSTANT.g_SetType_AccountRollUpInvoice    ---9804
           )
           or
           (
                v_rollback_trx_type_id is not null 
                and 
                v_rollback_trx_type_id in
                ( 
                     --
                     -- The following batches do not create fitems, take amount from fitransaction level
                     --
                     --gBatch_Invoice,              --1801 /*UTPRODUCT-4682 */
                     gBatch_NOIC,                 --4212   -- Commented UTPRODUCT-2036
                     gBatch_Late_Notice,           --5146
                     PKG_DB_CONSTANT.g_SetType_AccountRollUpInvoice 
                )
          )
     then
          -- Take amount from fitransaction level
          --

          select
                 NVL(SUM(trx.amount),0)
            into
                 v_transaction_amount
            from
                 dragon_fitransaction  trx
           where
                 trx.batch_ref_no = in_billing_trx_set_id
             and
             (
                 trx.fitransaction_type_id <> gFITrxType_CashCreditTransfer
                 and
                 nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, trx.fitransaction_id,pkg_db_reversal.gbv_RefReversedFitrxId),gbv_FITransaction_Type),0)<> gFITrxType_CashCreditTransfer
             )
             and
                 trx.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
             and 
                 trx.fitransaction_type_id <> gFITrxType_Cr_Generate    
             ;

        /*UTPRODUCT-4682 Start*/
     elsif in_billing_trx_set_type_id in
           (
                --
                -- The following batches do not create fitems, take amount from fitransaction level
                --
                gBatch_Invoice              --1801
           )
           or
           (
                v_rollback_trx_type_id is not null
                and
                v_rollback_trx_type_id in
                (
                     --
                     -- The following batches do not create fitems, take amount from fitransaction level
                     --
                     gBatch_Invoice              --1801
                )
          )
     then
          -- Take amount from fitransaction level
          --

          select
                 NVL(SUM(trx.amount),0)
            into
                 v_transaction_amount
            from
                 dragon_fitransaction  trx
           where
                 trx.batch_ref_no = in_billing_trx_set_id
             and
          (
                 trx.fitransaction_type_id <> gFITrxType_CashCreditTransfer
                 and
                 nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, trx.fitransaction_id,pkg_db_reversal.gbv_RefReversedFitrxId),gbv_FITransaction_Type),0)<> gFITrxType_CashCreditTransfer
             )
             and
                 trx.status_enum in (gFITrxStatus_Processed,gFITrxStatus_RollBacked)
             and
                 trx.fitransaction_type_id not in (gFITrxType_Dr_Generate, gFITrxType_Cr_Generate)
             ;
        /*UTPRODUCT-4682 End*/

     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     --Need to ask as some additional code added and condition and select query change in gcna
     elsif ((in_billing_trx_set_type_id = gBatch_CashTransferBatch) or (v_rollback_trx_type_id = gBatch_CashTransferBatch))
     then

          select
               NVL(SUM(trx.amount),0)
          into
               v_transaction_amount
          from
               dragon_fitransaction trx
          where
               trx.batch_ref_no = in_billing_trx_set_id 
          and
               --trx.fitransaction_type_id = gFITrxType_CashCreditTransfer    -- OSBILLING-6901 OSPRODUCT-4534
               --trx.fitransaction_type_id in ( gFITrxType_CashCreditTransfer, gFITransactionType_Reversal) --OSPRODUCT-4534
          ( trx.fitransaction_type_id = gFITrxType_CashCreditTransfer 
               or ( trx.fitransaction_type_id = gFITransactionType_Reversal
                    and pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id , trx.fitransaction_id, '33826646.29708346') = gFITrxType_CashCreditTransfer 
                  )
          ) -- OSPRODUCT-15125
          and
               trx.status_enum in (  gFITrxStatus_Processed,gFITrxStatus_RollBacked) ;

     elsif --  OSPRODUCT-4115 starts           
           -- in_billing_trx_set_type_id = gBatch_AutoCreditApply      --3401  --OSBILLING-6959    commented  OSPRODUCT-4115      
           in_billing_trx_set_type_id in ( gBatch_AutoCreditApply, gBatch_Credit_Apply_Reversal)
           or 
           (
                v_rollback_trx_type_id  is not null 
                and 
                v_rollback_trx_type_id in ( gBatch_AutoCreditApply,gBatch_Credit_Apply_Reversal ) 
           )
           --  OSPRODUCT-4115 ends 
     then
          
          /*OSPRODUCT-2112 */
          select 
               nvl(sum(trx.amount), 0)
          into 
               v_transaction_amount
          from 
               dragon_fitransaction trx , dragon_fichange fc
          where 
               trx.batch_ref_no = in_billing_trx_set_id
          and 
               trx.fitransaction_type_id <> gFITrxType_CashCreditTransfer
          and (trx.refreversed_fitrx_id is null ---OSPRODUCT-31226
              or
               nvl( pkg_os_object_io.fn_object_bv_get
                    (
                         in_session_id, -- OSPRODUCT-7309
                         in_transaction_id, -- OSPRODUCT-7309
                         trx.refreversed_fitrx_id,  ---OSPRODUCT-31226
                         gbv_FITransaction_Type
                    ),
                    0) <> gFITrxType_CashCreditTransfer)
          and 
               trx.status_enum in (gFITrxStatus_Processed, gFITrxStatus_RollBacked)
          and 
               fc.fitransaction = trx.fitransaction_id -- OSPRODUCT-7309
          and 
               NVL(fc.fitem_category_id,0) not in ( 
                                                       pkg_db_object.gFItem_Cat_Commission, 
                                                       pkg_db_functions.gFItem_Category_DefPremComm 
                                                  ) 
          and fc.action_delta > 0 --OSPRODUCT-3282
               -- OSPRODUCT-4115 starts
               /* and not exists (
                                   select 
                                        1 
                                   from 
                                        dragon_fichange fc 
                                   where 
                                        fc.fitransaction = trx.fitransaction_id  
                                        and NVL(fc.fitem_category_id,0) in 
                                        ( 
                                             pkg_db_object.gFItem_Cat_Commission, 
                                             pkg_db_functions.gFItem_Category_DefPremComm
                                        )
                             ) */
               -- OSPRODUCT-4115 ends
          ;
     elsif --  UTXPRODUCT-108
           -- 
           in_billing_trx_set_type_id = gFITrxType_Reversal
           and
           nvl(v_rollback_trx_type_id,0) = pkg_db_reversal.gBatchType_Disbursement
     then          
          select
                 NVL(SUM(fi.initial_amount),0)
            into
                 v_transaction_amount
            from
                 dragon_fitem fi
           where
                 fi.creator_fitransactionset_id = in_billing_trx_set_id
             and
                 fi.billing_account_id = v_trx_set_parent_BA_id
             and
                 not(
                        nvl(fitem_category_id,0)     in (pkg_db_object.gfitem_cat_commission, pkg_db_functions.gfitem_category_defpremcomm)
                        and
                        nvl(fitem_sub_category_id,0) in (g_FItem_SubCat_Commission, g_FItem_SubCat_CommPayable, g_FItem_SubCat_CommCedingRec, g_FItem_SubCat_PLRDef_Comm, g_FItem_SubCat_ILRDef_Comm)
                    )
             ;
             -- / UTXPRODUCT-108          
     else
          -- Take amount from fitem level
          --
          select
                 NVL(SUM(fi.initial_amount),0)
            into
                 v_transaction_amount
            from
                 dragon_fitem fi
           where
                 fi.creator_fitransactionset_id = in_billing_trx_set_id
             and
                 fi.billing_account_id = v_trx_set_parent_BA_id
             and
             (
                  in_gross_amount_tf = 'F'
                  or
                  ( 
                       in_gross_amount_tf = 'T' 
                       and   
                       nvl(fitem_category_id,0) not in ( pkg_db_object.gfitem_cat_commission, pkg_db_functions. gfitem_category_defpremcomm)
                       and 
                       nvl(fitem_sub_category_id,0) not in (g_FItem_SubCat_Commission , g_FItem_SubCat_CommPayable,g_FItem_SubCat_CommCedingRec,g_FItem_SubCat_PLRDef_Comm,g_FItem_SubCat_ILRDef_Comm)
                  )
             )
             ;

     end if;

     return v_transaction_amount;

end fn_batch_processtrx_amount;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_amt_cash_applied_or_posted
--
--   %USAGE
--        This function returns the cash applied/posted amount for billing account , policy and policy transaction Objects
--
--   %ALGORITHM
--        1. If passed object is Billing Account
--             1. If passed transaction type is cash posted
--                  1. Return the total of amount posted for the billing account object
--             2. If passed transaction type is cash applied
--                  1. Return the total of amount applied for the billing account object
--        2. If passed object is Policy
--             1. If passed transaction type is cash posted
--                  1. Return the total of amount posted for the policy object
--             2. If passed transaction type is cash applied
--                  1. Return the total of amount applied for the policy object
--        3. If passed object is Policy Transaction
--             1. If passed transaction type is cash posted
--                  1. Return the total of amount posted for the policy transaction object
--             2. If passed transaction type is cash applied
--                  1. Return the total of amount applied for the policy transaction object
--
--   %PARAM    in_object_id        Object ID
--   %PARAM    in_object_type_id   Billing Account/ Policy/ Policy Transaction
--   %PARAM    in_trx_type         Cash Post/ Cash Apply
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_amt_cash_applied_or_posted
(
     in_object_id             in        object.object_id%type,
     in_object_type_id        in        object.object_type_id%type,
     in_fi_trx_type              in        number,
     in_policy_term_id        in        object.object_id%type default null,
     in_category_id           in        number default null,
     in_sub_category_id       in        number default null
)
return number
is


     v_amount     number  := 0;
     v_fitrxn_type           varchar2(500);

begin


     if in_object_type_id = gObjType_BillingAccount
     then
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code change below until end of function
          /* select
               nvl(sum(action_delta),0)
          into
               v_amount
          from
               dragon_fichange
          where
               billing_account_id = in_object_id
          and
       --
       -- Replaced to Enum ticket OSBILLING-1340 to optimize performance by doing ID comparison instead.
       --

               fitem_transaction_type_id = in_fi_trx_type
          and
               (
                    (
                         action_delta < 0
                         and
                         in_fi_trx_type = gFITrxType_Cash_Post
                    )
                    or
                    (
                         (
                              action_delta > 0
                              and
                              in_fi_trx_type = gFITrxType_Cash_Apply
                          )
                          or
                          (
                              action_delta < 0
                              and
                              fitem_transaction_type_id = 301
                          )
                    )
               )
          and
               processing_date is not null
          ;
         */ -- KR 02/05 OSPRODUCT-2043
          select
               nvl(sum(action_delta),0)
          into
               v_amount
          from
               dragon_fichange fc, dragon_fitransaction fi
          where
               fc.billing_account_id = in_object_id
          and
               fc.fitem_transaction_type_id = in_fi_trx_type
          and 

              fc.fitransaction = fi.fitransaction_id 
          and
              fi.status_enum = 37646

          and
               (
                    (
                         action_delta < 0
                         and
                         in_fi_trx_type = gFITrxType_Cash_Post
                    )
                    or
                    (
                         (
                              action_delta > 0
                              and
                              in_fi_trx_type = gFITrxType_Cash_Apply
                          )

                    )
               )
          and
                processing_date is not null;

     elsif in_object_type_id = pkg_os_constant.gObjType_Policy
     then

          select
               nvl(abs(sum(action_delta)),0)
          into
               v_amount
          from
               dragon_fichange f, dragon_fitransaction fi -- KR 02/05  OSPRODUCT-2043
          where
               f.policy_id = in_object_id
          and
          --
          -- Replaced to enum under ticket OSBILLING-1340 to optimize performance by doing ID comparison instead.
          --
               f.fitransaction = fi.fitransaction_id  -- KR 02/05  OSPRODUCT-2043
          and 
               fi.status_enum = 37646 -- KR 02/05  OSPRODUCT-2043
          and

          f.fitem_transaction_type_id = in_fi_trx_type
          and
               (
                    (
                         f.action_delta < 0
                         and
                         in_fi_trx_type = gFITrxType_Cash_Post
                    )
                    or
                    (
                         (
                              f.action_delta < 0
                              and
                              in_fi_trx_type = gFITrxType_Cash_Apply
                         )
                         /* or
                         (
                              f.action_delta > 0
                              and
                              fitem_transaction_type_id = 301
                         )*/---- KR 02/05   OSPRODUCT-2043
                    )
               )

           and --Add This if we want term specific
               (
                    in_policy_term_id is null
                    or
                    f.policy_term_id = in_policy_term_id
               )
           and
               f.processing_date is not null

           and
               (
                    nvl(in_category_id,0) = 0
                    or
                    in_category_id = f.fitem_category_id
               )
          and
               (
                    nvl(in_sub_category_id,0) = 0
                    or
                    in_sub_category_id = f.Fitem_Sub_Category_Id
               )
            ;


     elsif in_object_type_id = pkg_os_constant.gObjType_PolicyTransaction
     then
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code added below in gcna
          select
               nvl(sum(action_delta),0)
          into
               v_amount
          from
               dragon_fichange fc, dragon_fitransaction fi -- KR 02/05  OSPRODUCT-2043
          where
               (fc.policy_transaction_id = in_object_id
               or
               fc.action_policy_transaction_id = in_object_id)
          and
        -- Replaced to enum under ticket OSBILLING-1340 to optimize performance by doing ID comparison instead.
          
              fc.fitransaction = fi.fitransaction_id  -- KR 02/05   OSPRODUCT-2043
          and 
              fi.status_enum = 37646 -- KR 02/05   OSPRODUCT-2043
          and






               fc.fitem_transaction_type_id = in_fi_trx_type
          and
               (
                    (
                         action_delta < 0
                         and
                         in_fi_trx_type = gFITrxType_Cash_Post
                    )
                    or
                    (
                         (
                              action_delta > 0
                              and
                              in_fi_trx_type = gFITrxType_Cash_Apply
                         )
                         /* and
                         (
                              action_delta < 0
                              and
                              fitem_transaction_type_id = 301
                         ) */--KR 02/05   OSPRODUCT-2043
                    )

               )

          and
               fc.policy_id is not null
          and
               fc.policy_transaction_id is not null
          and
               fc.processing_date is not null
          ;


     end if;

     return v_amount;

end fn_amt_cash_applied_or_posted;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_amt_cash_available
--
--   %USAGE
--        This function returns the cash amount available for billing account , policy and policy transaction Objects
--
--   %ALGORITHM
--        1. If cash level is Account
--             Passed object id is for billing account and policy and policy transactions are null
--                  Return the total of amount available for the billing account object
--        2. If cash level is Policy
--             Passed object id is for billing account and policy is not null
--                  Return the total of amount available for the policy
--
--   %PARAM    in_object_id        Object ID
--   %PARAM    in_cash_level       Cash Post
--
--  2015/08/12  Cheryl Dextradeur  osbilling-1053 - per durgesh, use the abs function
-----------------------------------------------------------------------------------------------------------------------------------------------------









function  fn_amt_cash_available
(
     in_object_id             in        object.object_id%type, -- Billing Account ID
     in_cash_level            in        number  -- Account - 1,Policy - 2, Statment - 3
)
return number
is

     v_amount     number  := 0;

begin

     if in_cash_level = gCash_Level_Customer
     then

          select
               nvl(nvl(sum(balance),0) - sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is null
          and
               policy_transaction_id is null
          and
               cash_associated_with is null
          and
               fitem_category_id = gFItem_Category_Cash
          and
               value_stream is null -- [KR]
          --and
               --disbursement_batch_id is null --OSPRODUCT-3712
          ;

     elsif in_cash_level = gCash_Level_Policy
     then

          select
                nvl(nvl(sum(balance),0) - sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id = gFItem_Category_Cash
          and
               value_stream is null -- [KR]
          --and
               --disbursement_batch_id is null --OSPRODUCT-3712
          ;

    elsif in_cash_level = gCash_Level_Statement
     then

          select
                nvl(ABS(nvl(sum(balance),0)) - ABS(sum(nvl( CURR_DISBURSEMENT_AMOUNT,0))),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               cash_associated_with is not null
          and
               fitem_category_id = gFItem_Category_Cash
          and
               value_stream is null -- [KR]
          --and
               --disbursement_batch_id is null --OSPRODUCT-3712
          ;

     end if;

     return v_amount;

end fn_amt_cash_available;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_tot_cash_available
--
--   %USAGE
--        This function returns the total cash balance available for a billing account.
--
--   %ALGORITHM
--        1. If cash level is Account
--             Passed object id is for billing account
--                  Return the total of amount available for the billing account object

--   %PARAM    in_object_id        Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_tot_cash_available
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_amount     number  := 0;

begin

          select
               nvl(sum(balance),0)*(-1)
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as additional condition added in gcna
               fitem_category_id = gFItem_Category_Cash
          and
               balance <= -0.01
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;

     return v_amount;

end fn_tot_cash_available;

-----------------------------------------------------------------------------------------------------------------------------------------------------

--   %NAME
--        fn_billacc_due_amounts
--
--   %USAGE
--        This function returns the past/current/future due receivable amounts for the billing account
--        Receivable ( Fitem of type Debit with +ve Balance)
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as there are some difference in each if clause code
function  fn_billacc_due_amounts
(
     in_object_id             in        object.object_id%type,
     in_billacc_type          in        number,
     in_due_type              in        number,
     in_due_days              in        number default 0
)
return number
is

     v_amount                 number    :=   0;

begin

     if in_due_type = PastDue
     then

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df
          where
               billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.aging_status_id = gfitem_past_due
          and
               ( aging_status_days_id = in_due_days or in_due_days = 0)
          and
               df.balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;

     elsif in_due_type = CurrentDue
     then

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df
          where
               billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
              df.aging_status_id = gfitem_current_due
          and
               df.balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;

     elsif in_due_type = FutureDue
     then

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df
          where
               df.policy_id is not null
          and
               billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.aging_status_id = gfitem_future_due
          and
               balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373  --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     elsif  in_due_type = TotalDue
     then
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df
          where
               df.policy_id is not null
          and
               billing_account_id = in_object_id
          and
               (
               df.fitem_type_id = gFItemType_Debit
               --OSPRODUCT-3773 start
                or
                (
                    df.fitem_type_id = gFItemType_Credit
                    and
                    df.fitem_category_id = gFItem_Category_Comm
                )
                --OSPRODUCT-3773 end
                )
          and
               balance >= 0.01
          and 
               df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     end if;

     return v_amount;

end fn_billacc_due_amounts;

-- OSBILLING-7723
-----------------------------------------------------------------------------------------------------------------------------------------------------
--   %NAME
--        fn_billacc_due_amounts_no_canc
--
--   %USAGE
--        This function returns the past/current/future due receivable amounts for the billing account without cancelled policies dues
--        Receivable ( Fitem of type Debit with +ve Balance)
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as there are some difference in each if clause code
function  fn_billacc_due_amounts_no_canc
(
     in_object_id             in        object.object_id%type,
     in_billacc_type          in        number,
     in_due_type              in        number,
     in_due_days              in        number default 0
)
return number
is
     v_amount                 number    :=   0;
begin
     if in_due_type = PastDue
     then
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df, dragon_policy dp
          where
               df.policy_id = dp.policy_id
            and
                  policy_object_state_id <> 73
            and
                  billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.aging_status_id = gfitem_past_due
          and
               ( aging_status_days_id = in_due_days or in_due_days = 0)
          and
               df.balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     elsif in_due_type = CurrentDue
     then
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df, dragon_policy dp
          where
               df.policy_id = dp.policy_id
            and
                  policy_object_state_id <> 73
            and
                  billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
              df.aging_status_id = gfitem_current_due
          and
               df.balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     elsif in_due_type = FutureDue
     then
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df, dragon_policy dp
          where
               df.policy_id is not null
          and
               df.policy_id = dp.policy_id
            and
                  policy_object_state_id <> 73
            and
                  billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.aging_status_id = gfitem_future_due
          and
               balance >= 0.01
          --and df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373  --OSBILLING-6052
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     elsif  in_due_type = TotalDue
     then
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df, dragon_policy dp
          where
               df.policy_id is not null
          and
               df.policy_id = dp.policy_id
            and
                  policy_object_state_id <> 73
            and
                  billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               balance >= 0.01
          and 
               df.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;
     end if;
     return v_amount;
end fn_billacc_due_amounts_no_canc;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_billacc_due_credit_amounts
--
--   %USAGE
--        This function returns the past/current/future due credit amounts for the account
--
--   %ALGORITHM
--        1. Get the grace period from the Biling Account of Partner
--        2. Get the total credit due amount for the Billing Account with the consideration
--           of Grace period for the Account and Due Type ( Past/Current/Future).
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_billacc_due_credit_amounts
(
     in_object_id             in        object.object_id%type,
     in_due_type              in        number,
     in_due_days              in        number default 0
)
return number
is

     v_amount                 number    :=   0;
     v_grace_period_days      number    :=   0;
     v_current_sys_date    number;

begin

     --
     -- Get the grace period from the Billing Account of Partner
     --

     v_grace_period_days := nvl(pkg_os_object_io.fn_object_bv_get
                            (
                                 100,
                                 100,
                                 in_object_id,
                                 gbv_BillingAcc_PayGraceDays
                            ),0);

     v_current_sys_date := to_number
                           (
                                to_char
                                (
                                     pkg_os_time.fn_os_sysdate
                                     (
                                        1,
                                        1,
                                        in_object_id
                                     ),'YYYYMMDD'
                                )
                           );

     if in_due_type = PastDue
     then

          -- GCNA-1272 - Broker Billing Account summary Receivables should show only direct billed commissions

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem , dragon_policy policy
          where
               fitem.billing_account_id = in_object_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number(to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) < to_number(to_char(to_date(v_current_sys_date,'YYYYMMDD')-in_due_days,'YYYYMMDD'))
          and
               fitem.policy_id = policy.policy_id
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;

          -- GCNA-1272 - Broker Billing Account summary Receivables should show only direct billed commissions

     elsif in_due_type = CurrentDue
     then

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem, dragon_policy policy
          where
               fitem.billing_account_id = in_object_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number(to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) = v_current_sys_date
          and
               fitem.policy_id = policy.policy_id
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          and
               policy.billing_method_id = 1; -- Direct Billed Policy

          -- GCNA-1272 - Broker Billing Account summary Receivables should show only direct billed commissions

     elsif in_due_type = FutureDue
     then

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem, dragon_policy policy
          where
               fitem.billing_account_id = in_object_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number (to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) > v_current_sys_date
          and
               fitem.policy_id = policy.policy_id
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          ;

     elsif in_due_type = TotalDue
     then
          select /*+ NO_BATCH_TABLE_ACCESS_BY_ROWID(dragon_fitem)*/
                 nvl(sum(fitem.balance),0)
          into
                 v_amount
          from
                 dragon_fitem fitem, dragon_policy policy
          where
                 fitem.billing_account_id = in_object_id
          and
                 fitem.fitem_type_id = gFItemType_Credit
          and
                 fitem.policy_id = policy.policy_id
          and
                 fitem.balance <> 0 -- OSPRODUCT-11583 Added to bring down the query cost
          and
                 value_stream is null ; -- [KR]
     end if;

     return v_amount;

end fn_billacc_due_credit_amounts;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   fn_count_of_notes
--
--   %USAGE
--   This function will return the count of notes added to rollup and rollup member objects
--
--   %ALGORITHM
--   1.   Get the count of notes created for the Object from the DRAGON_TASK table.
--
--
--   %PARAM         in_object_id     Action Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_count_of_notes
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_count     number  := 0;

begin

     select
          nvl(count(1),0)
     into
          v_count
     from
          dragon_task
     where
          task_object_id = in_object_id;

     return v_count;

end fn_count_of_notes;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   fn_past_due_days
--
--   %USAGE
--   This functions will return the past due days for the billing account of customer and partner
--
--   %ALGORITHM
--   1.   Get the grace period from the Billing Account of Partner
--   2.   Get the past due days for the due items of the Billing Account,
--        where due item with least due date is considered
--
--
--   %PARAM         in_object_id     Action Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_past_due_days
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_past_due_days     number  := 0;
     v_grace_period_days number  := 0;

begin

     --
     -- Get the grace period from the Billing Account of Partner
     --

     v_grace_period_days   :=      nvl(pkg_os_object_io.fn_object_bv_get
                                   (
                                        100,
                                        100,
                                        in_object_id,
                                        gbv_BillingAcc_RecGraceDays
                                   ),0);
          begin

               select
                    GREATEST
                    (
                         to_char
                         (
                              pkg_os_time.fn_os_sysdate
                              (
                                   1,
                                   1,
                                   in_object_id
                              ),'YYYYMMDD'
                         )

                         -
                         (
                              to_char
                              (
                                   (
                                        min(due_date)
                                        +
                                        nvl(v_grace_period_days,0)
                                   )
                                   ,'YYYYMMDD'
                              )

                         )
                         ,0
                    )
               into
                    v_past_due_days
               from
                    dragon_fitem
               where
                    billing_account_id = in_object_id
               and
                    fitem_type_id       =    gFItemType_Debit
               and
                    balance >= 0.01
               ;

          exception
               when others then

                    v_past_due_days := 0;
          end;

     return v_past_due_days;

end fn_past_due_days;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_amount_due_get
--
--   %USAGE
--        This function returns the amount due for a fitem against the fichanges referring to that fitem.
--
--   %ALGORITHM
--        Get the sum of amounts from all FIChange having reference to Fitem object.
--
--
--   %PARAM     in_object_id        Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-7922
function fn_fitem_amount_due_get
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                  in   object.object_id%type
)
return number
is

     v_return_value                number := null;
     v_most_recent_fichange        object.object_id%type;
     v_idx                         varchar2(500);
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_fitem_amount_due_get';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     
begin
     
     -- get the recent fichange     
     v_most_recent_fichange := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_object_id,
                                    pkg_db_object.gbv_FItem_Recent_FIChange
                               );
                               
     -- Get the value from cache
     v_idx := in_transaction_id || ':' || in_object_id || ':' || v_most_recent_fichange;
     
     if pkg_db_object_cache_io.g_fitem_due_amount_cache.exists(v_idx) then
          
          v_return_value := pkg_db_object_cache_io.g_fitem_due_amount_cache(v_idx);
     
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Fitem Due Amount from cache: ' || v_return_value ||
                   '.. Index: '                       || v_idx
               );
                    
          end if;
          
     else

          select
               sum(action_delta)
          into
               v_return_value
          from
               dragon_fichange
          where
               fitem_id = in_object_id
          and
               -- OSBILLING-148 : Changed the references to pkg_db_billing to pkg_db_billing_modify
               sum_include_tf = pkg_db_billing_modify.gFIChange_Yes;
               -- 2016-07-27 Cheryl osbilling-2419 used in rule 9767046 for sum so cannot return null
          
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Fitem Due Amount recalculated: ' || v_return_value ||
                   '.. Index: '                         || v_idx
               );
                    
          end if;
          
          -- Load the cache
          pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);          
          pkg_db_object_cache_io.g_fitem_due_amount_cache(v_idx) := v_return_value;
  
     end if;

     return nvl(v_return_value,0);

exception

     when no_data_found then
          -- 2016-07-27 Cheryl osbilling-2419 used in rule 9767046 for sum so cannot return null
          -- return null;
          return 0;

end fn_fitem_amount_due_get;

--VAULTDEV-7854
  -----------------------------------------------------------------------------------------------------------------------------------------------------
  --
  --   %NAME
  --        fn_acctbill_fitem_amt_due_get
  --
  --   %USAGE
  --        This function returns the amount due for a fitem against the fichanges referring to that fitem.
  --
  --   %ALGORITHM
  --        Get the sum of amounts from all FIChange having reference to Fitem object.
  --
  --
  --   %PARAM     in_object_id        Object ID
  --
  -----------------------------------------------------------------------------------------------------------------------------------------------------
    function fn_acctbill_fitem_amt_due_get
     (
          in_session_id     in object.object_id%type,
          in_transaction_id in object.object_id%type,
          in_object_id      in object.object_id%type
     )
  return number is
      v_return_value number := null;
     begin
          select
            sum(action_delta)
          into
      v_return_value
          from
      dragon_fichange df
          where
      fitem_id = in_object_id
          and
          -- OSBILLING-148 : Changed the references to pkg_db_billing to pkg_db_billing_modify
            sum_include_tf = pkg_db_billing_modify.gFIChange_Yes
          and
      df.fitem_transaction_type_id not in (1601); --VAULTDEV-7854 Exclude Applied Credit
     return nvl(v_return_value, 0);
     exception
     when no_data_found
  then
      return 0;
     end fn_acctbill_fitem_amt_due_get;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_object_id
--
--   %USAGE
--        This function returns the object id as per the object type and value
--
--   %ALGORITHM
--        Get the object ids based on the object type and its value
--
--
--   %PARAM     in_object_id        Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_object_id
(
    in_object_value          in    object_bv_value.business_variable_value%type,
    in_object_type_id        in    object.object_type_id%type
)
return number
is

     v_return_value     number := null;

begin

     if in_object_type_id     =   pkg_os_constant.gObjType_Policy
     then

          select
               policy_id
          into
               v_return_value
          from
               dragon_policy
          where
                upper(policy_number) =  upper(trim(in_object_value))
          and
               rownum = 1;

     elsif in_object_type_id =  gObjType_BillingAccount
     then

          select
               billingaccount_id
          into
               v_return_value
          from
               dragon_billingaccount
          where
               upper(replace(partner_name,chr(32),'')) = upper(replace(in_object_value,chr(32),''))
          and
               rownum = 1;
     end if;

     return v_return_value;

exception

     when no_data_found then
          return null;

end fn_get_object_id;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_validate_customer_policy
--
--   %USAGE
--        This function validates the customer and policy for a record in excel
--
--   %ALGORITHM
--        Get the count of policies based on the customer validation
--
--
--   %PARAM     in_customer_name        Object BV Value
--   %PARAM     in_policy_no            Object BV Value
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_validate_customer_Policy
(
    in_customer_name                    in             object_bv_value.business_variable_value%type,
    in_policy_no                        in             object_bv_value.business_variable_value%type
)
return number
is

     v_return_value     number := null;

begin

     select
          count(policy_id)
     into
          v_return_value
     from
          dragon_policy
     where
          (
               trim(policy_number) = in_policy_no
               or
               in_policy_no is null
          )
     and
          upper(replace(primary_entity_full_name,chr(32),'')) = upper(replace(in_customer_name,chr(32),''))
     ;

     return v_return_value;

exception

     when no_data_found then
          return null;

end fn_validate_customer_policy;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_initial_amt_get
--
--   %USAGE
--        This function returns the initial amount for a fitem.
--
--   %ALGORITHM
--        Get the initial amount for fitem
--
--
--   %PARAM     in_object_id        Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-7922
function fn_fitem_initial_amt_get
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                  in   object.object_id%type
)
return number
is

     v_return_value                number := null;
     v_idx                         varchar2(500);
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_fitem_initial_amt_get';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     

begin

     -- Get the value from cache
     v_idx := in_transaction_id || ':' || in_object_id;

     if pkg_db_object_cache_io.g_fitem_initial_amount_cache.exists(v_idx) then

          v_return_value := pkg_db_object_cache_io.g_fitem_initial_amount_cache(v_idx);

          if v_session_control.gLogging_Full 
          then

               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Fitem Initial Amount from cache: ' || v_return_value ||
                   '.. Index: '                           || v_idx
               );

          end if;
          
          if v_return_value is not null then
             return v_return_value;
          end if;   

     end if;

     begin

          select
               action_delta
          into
               v_return_value
          from
               dragon_fichange
          where
               fitem_id       = in_object_id
          and
               sum_include_tf = pkg_db_billing_modify.gFIChange_Yes
          and
               action_id      = gFIChange_Create;               

     exception

          when no_data_found then
               v_return_value := null;

          when too_many_rows then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' The Fitem ID ' || in_object_id || ' has two FIchanges of type Create'
               );

               v_return_value := null;
               -- raise;

     end;

     if v_session_control.gLogging_Full 
     then

          pkg_os_logging.sp_log
          (
              in_session_id, 
              in_transaction_id, 
              v_procedure_name,
              '.. Fitem initial Amount recalculated: ' || v_return_value ||
              '.. Index: '                             || v_idx
          );

     end if;

     -- Load the cache
     pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);          
     pkg_db_object_cache_io.g_fitem_initial_amount_cache(v_idx) := v_return_value;



     return v_return_value;

end fn_fitem_initial_amt_get;



-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_current_date
--
--   %USAGE
--        This function returns the current date for a policy, based on the time zone roll.
--
--   %ALGORITHM
--       1. Get the policy current date from timezone_policy_map.
--       2. Get the policy current date from timezone_date_map.
--       3. Return the maximum of the 2 dates above.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_current_date
(
     in_session_id              in             object.object_id%type,
     in_transaction_id          in             object.object_id%type,
     in_policy_id               in             object.object_id%type
)
return date
is
     v_input_object_type_id     object.object_type_id%type;
     v_searched_object_type_id  object.object_type_id%type;
     v_object_id                object.object_id%type;
     v_searched_object_id       object.object_id%type;
     v_procedure_name           constant  system_log.program_name%type := pkg_name||'fn_get_policy_current_date';
     v_session_control          pkg_os_session.r_dragon_session_control
                                     := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_timezone_roll_date       timezone_date_map.rolled_date%type;
     v_policy_roll_date         timezone_policy_map.rolled_date%type;
     v_timezone_id              timezone_date_map.timezone_id%type;
     v_current_policy_date      timezone_date_map.rolled_date%type;
     v_sys_date                 date;

     v_idx                       varchar2(20); -- in_session_id

begin
     --This function has been re-written as part of OSBILLING-6124

     --If Input ObjectId is null
     if in_policy_id is null
     then
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name,
                    'InputObjId is null, so returning null date');

          end if;
          return null;

     else
          --If Input ObjectId is not null, the get the type of it
          v_input_object_type_id := pkg_os_object.fn_object_type_get( in_session_id, in_transaction_id, in_policy_id);
     end if;

     if v_input_object_type_id is null
     then
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name, 'For InputObjId:'
                    ||in_policy_id||' InputObjType is unknown, so returning null date');

          end if;
          return null;
     --If type of InputObject is either of UserSession, BillingAccount or PTP, return null date
     --if any new type is added to the below list, pls adjust logging stmt also
     elsif v_input_object_type_id in ( 310, 2365346, 2276904 ) --US-310, BA-23-65346, PTP-2276904

     then
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name, 'InputObjId:'
                    ||in_policy_id ||' InputObjTypeId: '||v_input_object_type_id ||' i.e. '
                    || case v_input_object_type_id when  310 then 'UserSession' when  2365346
                    then 'BillingAccount' when  2276904 then 'PTP' else 'Other' end
                    ||', so returning null date');

          end if;
          return null;
     --If type of InputObject is Policy
     elsif v_input_object_type_id = pkg_os_constant.gObjType_Policy
     then
          v_object_id := in_policy_id;
     --If type of InputObject is not null, and type is other than null, UserSession, BillingAccount or PTP
     else
          v_searched_object_id := pkg_os_object_search.fn_object_get_parent_of_type(
                                   in_session_id, in_transaction_id, in_policy_id, pkg_os_constant.gObjType_Policy );
          v_searched_object_type_id:= pkg_os_object.fn_object_type_get(
                                   in_session_id, in_transaction_id, v_searched_object_id) ;

          if v_searched_object_id is not null and v_searched_object_type_id = pkg_os_constant.gObjType_Policy
          then
               v_object_id := v_searched_object_id;
          else
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name, 'InputObjId:'||in_policy_id
                    ||' InputObjTypeId:'||v_input_object_type_id || ' SearchedObjId:'||v_searched_object_id
                    ||' SearchedObjTypeId:'||v_searched_object_type_id
                    ||' returning null date as SearchedObjId is null or is not a Policy');

               end if;
               return null;
          end if;

     end if;

     -- get timezone id
     begin
          select
               timezone_id
          into
               v_timezone_id
          from
               dragon_policy
          where
               policy_id = v_object_id;

     exception
          when others
          then
               -- re-raise all the exceptions and goto final exception block of the process
               -- from final exception block return sysdate
               -- in case of no_data_found, don't log any error into system_log table
               -- for exception other than no_data_found, log error into system_log table
               raise;
     end;

     if v_timezone_id is not null 
     then
        --OSPROFUCT-6700
        pkg_db_object_cache_io.sp_clear_transaction_cache(in_session_id,in_transaction_id);

        v_idx   :=  in_transaction_id || '.' ||  v_timezone_id;

        if v_idx is  null or  (not pkg_db_object_cache_io.g_timzone_date_cache.exists(v_idx))
        then

              -- get tz roll date
               -- v_timezone_roll_date  := fn_get_policy_tzone_date (in_session_id,in_transaction_id, v_object_id );
               -- timezoneid is already known so commented the function call and added logic to this function itself
               select
                    max(rolled_date)
               into
                    v_timezone_roll_date
               from
                    timezone_date_map
               where
                    timezone_id = v_timezone_id;

               -- Add to the cache
               pkg_db_object_cache_io.g_timzone_date_cache (v_idx) := to_char(v_timezone_roll_date,'YYYYMMDD') ;

               if v_session_control.gLogging_Full 
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id, 
                         in_transaction_id, 
                         v_procedure_name,
                         ' |||||| TimeZone Date : The 1st call for v_idx=' || v_idx ||
                         case when v_timezone_roll_date is null
                         then 'NULL'
                         else ''
                         end || '. Added to the cache.' || to_char(v_timezone_roll_date,'YYYYMMDD') 
                    );
               end if;

        else
            
           v_timezone_roll_date := to_date( pkg_db_object_cache_io.g_timzone_date_cache (v_idx),pkg_os_constant.DragonDateFormatDefault) ;

          if v_session_control.gLogging_Full 
          then
              pkg_os_logging.sp_log
              (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   ' |||||| Getting TimeZone Date  from the cache for v_idx=' || v_idx ||
                   ', found date=' || to_char(v_timezone_roll_date,'YYYYMMDD') 
              );
          end if;

        end if;

       
     
     end if;
        

     v_sys_date := pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_object_id ,v_timezone_id );


     if v_timezone_roll_date is null or  v_timezone_roll_date < v_sys_date
     then
          v_timezone_roll_date := v_sys_date;
     end if;

      -- get policy roll date
     select
          max(rolled_date)
     into
          v_policy_roll_date
     from
          timezone_policy_map
     where
         ---timezone_id = v_timezone_id and -- KR 09/18
          policy_id = v_object_id;

     -- calc policy current date

     if (v_timezone_roll_date is not null and v_policy_roll_date is not null and v_timezone_roll_date >= v_policy_roll_date)
     then
          v_current_policy_date   := v_timezone_roll_date;
     elsif  (v_timezone_roll_date is not null and v_policy_roll_date is not null and v_timezone_roll_date < v_policy_roll_date)
     then
          v_current_policy_date   := v_policy_roll_date;
     elsif  (v_timezone_roll_date is not null and v_policy_roll_date is null)
     then
          v_current_policy_date   := v_timezone_roll_date;
     elsif  (v_timezone_roll_date is null and v_policy_roll_date is not null)
     then
          v_current_policy_date   := v_policy_roll_date;
     else
          v_current_policy_date   := v_sys_date;
     end if;
     --
     -- 2016-11-16 Cheryl osbilling-3116 because of the transaction synchronization process
     -- we need the date to have the timestamp as 00:01:00 like other
     -- transactions to keep the correct sequence order. The rolled date
     -- do not have a timestamp and sysdate pulls the full timestamp
     --
     v_current_policy_date := trunc(v_current_policy_date)+ interval '1' minute;


     if v_session_control.gLogging_Full
     then
           pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name, 'InputObjId: '|| in_policy_id
               || ' InputObjTypeId:'|| v_input_object_type_id|| ' SearchedObjId: '|| v_searched_object_id
               || ' SearchedObjTypeId: '|| v_searched_object_type_id || ' TimezoneId: '|| v_timezone_id
               || ' PolicyRolledDate: '|| v_policy_roll_date|| ' TimeZoneRolledDate: '|| v_timezone_roll_date
               ||' SysDate: '||v_sys_date || ' PolicyCurrentDate: '|| v_current_policy_date );
     end if;

     return v_current_policy_date;
exception
     when no_data_found
     then
          v_current_policy_date := pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_object_id ,v_timezone_id );
          v_current_policy_date := trunc(v_current_policy_date)+ interval '1' minute;
          --Error message will not be logged into system_log table.This scenario is due to when this function is called
          --before inserting record into dragon_policy datamart.
          return v_current_policy_date;

     when others
     then
          v_current_policy_date := pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, NVL(v_object_id,in_policy_id) ,v_timezone_id );
          v_current_policy_date := trunc(v_current_policy_date)+ interval '1' minute;

          pkg_os_logging.sp_log_error(in_session_id,in_transaction_id,v_procedure_name,'...Unable to get current policy date for InputObjId:'
               ||in_policy_id ||' InputObjTypeId: '||v_input_object_type_id
               ||' using timezone setting. so,returning sysdate using pkg_os_time.fn_os_sysdate. Error:'
               ||SQLERRM|| ' caused by line ' ||dbms_utility.format_error_backtrace || ' callstack:'||dbms_utility.format_call_stack );

          return v_current_policy_date;

end fn_get_policy_current_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_tzone_date
--
--   %USAGE
--        This function returns the current date for a policy's time zone.
--
--   %ALGORITHM
--       1. Get the policy current date from timezone_date_map and if not null return it, else return sysdate
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_policy_tzone_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type
)
return date
is
     v_session_control                       pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                        constant  system_log.program_name%type                 := pkg_name||'fn_get_policy_tzone_date';

     v_return_value                char;
     v_timezone_roll_date          timezone_date_map.rolled_date%type;
     v_timezone_id                 timezone_date_map.timezone_id%type;
     v_sys_date                    date;


begin

     select
          timezone_id
     into
          v_timezone_id
     from
          dragon_policy
     where
          policy_id = in_policy_id;


     select
          max(rolled_date)
     into
          v_timezone_roll_date
     from
          timezone_date_map
     where
          timezone_id = v_timezone_id;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Policy ID: '
               || in_policy_id
               || ' Timezone ID: '
               || v_timezone_id
               || ' TimeZone rolled Date: '
               || v_timezone_roll_date
          );

     end if;



     v_sys_date  :=    pkg_os_time.fn_os_sysdate
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_id,
                              v_timezone_id
                         );

     if v_timezone_roll_date < v_sys_date

  then

          v_timezone_roll_date   :=  v_sys_date ;

  end if;

     if v_timezone_roll_date is not null
     then

          return v_timezone_roll_date;

  else

          v_timezone_roll_date   :=   v_sys_date ;

    return v_timezone_roll_date;

     end if;

     exception

    when NO_DATA_FOUND then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... No data found in fn_get_policy_tzone_date'
        ||SQLCODE||'-'||SQLERRM||'-'
                    ||dbms_utility.format_error_backtrace
               );

    v_timezone_roll_date   :=    v_sys_date;

     return v_timezone_roll_date;
          when others then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... policy record doesnt exist in timezone_date_map, check nightly process'
               );

     v_timezone_roll_date   :=   v_sys_date ;

     return v_timezone_roll_date;

end fn_get_policy_tzone_date;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_current_susp_id
--
--   %USAGE
--        This function returns the suspended object that needs to be resumed.
--
--   %ALGORITHM
--       1. Get all the supension object of this in_action_bject id  i.e. suspension object id.
--       2. Check if the state is suspend billing then return the suspension id.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_action_object_id        suspension ID
--   %PARAM     in_action_type_id          action object type ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_current_susp_id
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in             object.object_id%type,
  in_object_type_id      in       object.object_id%type
)
return object.object_id%type
is


     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_current_susp_id';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_current_term_id             object.object_id%type;
     v_current_susp_id             object.object_id%type;
     v_object_index                number;
     v_count                       number;
     v_current_policy_date         varchar2(100);
     v_current_suspension_state    varchar2(100);

     v_current_suspension          r_suspension;
     v_rec_null                    r_suspension;
     v_object_list                 pkg_os_object.t_object_list;

begin



     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
               ' |||||| Identifying currrent active suspension ID: ' || in_object_type_id);

     end if;

     --
     -- Get the Policy current date in Dragon Native Format
     --

     --v_current_policy_date := to_char(pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, in_policy_id ), pkg_os_constant.DragonDateFormatDefault );

     --
     -- Get the Suspension objects under the policy, billing or exchange
     --

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_action_object_id,
          in_object_type_id,
          v_object_list
     );

  if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
               '...Object ID: ' || in_action_object_id || ' has number of suspension objects: ' || v_object_list.count);

     end if;

     --
     -- Loop through the terms fetched and identify the current term (max effective date less than the policy current date)
     --

     if v_object_list.count > 0
     then

          v_object_index := v_object_list.first;
          v_current_suspension := v_rec_null;

          while v_object_index is not null loop

               v_current_suspension_state := pkg_os_object_io.fn_object_bv_path_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_object_list(v_object_index),
                    pkg_os_constant_bv.gbv_GenObjObjectState
               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                              '......Object ID: ' || in_action_object_id ||

                              ' has suspension id: '  || v_object_list(v_object_index) ||

                              ' that has got a suspension state : ' || v_current_suspension_state  );

               end if;


               if v_current_suspension_state = 54346
               then
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                              '......Suspension object id : ' || v_object_list(v_object_index) );
                    end if;

                    v_current_suspension.object_id := v_object_list(v_object_index);
        v_current_susp_id := v_current_suspension.object_id;
               end if;

               v_object_index := v_object_list.next(v_object_index);

          end loop; -- end loop of v_object_index

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                         '......The Given object : ' || in_action_object_id ||

                         '  has got a suspended state suspension id : ' || v_current_susp_id );

          end if;

          return v_current_susp_id;

     else
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                         '......The Given object : ' || in_action_object_id ||

                         '  hasn''t got any suspended object');

          end if;
    return null;

     end if;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Not able to identify the suspension object for the object ID: '
               ||in_action_object_id
               || ' Error: '
               ||sqlerrm (sqlcode)
          );

          return null;

end fn_get_current_susp_id;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_billing_account
--
--   %USAGE
--        Given a Policy, this function gets the Ultimate Customer-> Primary Entity -> Billing Acccount
--          This function can be used for any object.
--
--   %ALGORITHM
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_policy_billing_account
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type
)
return object.object_id%type
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_policy_billing_account';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_ultimate_customer_id          object.object_id%type;
     v_primary_entity_id               object.object_id%type;
     v_cust_billing_acc_id          object.object_id%type;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
               ' |||||| Identifying Customer Billing Account for Object ID: ' || in_policy_id);

     end if;

     --
     -- Get Ultimate Customer ID
     --

     v_ultimate_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get(in_session_id, in_transaction_id, in_policy_id);



     --
     -- Get the Primary Customer Entity
     --

     v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          v_ultimate_customer_id,
          gbv_CustRefPrimaryEntity
     );

     --
     -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
     --

     v_cust_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
     (
          in_session_id,
          in_transaction_id,
          v_primary_entity_id,
          gObjType_BillingAccount
     );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
               '... Ultimate Customer: '||v_ultimate_customer_id ||
               ' Primary Customer Entity: '||v_primary_entity_id ||
               ' Customer Billing Account: ' || v_cust_billing_acc_id);

     end if;

     return v_cust_billing_acc_id;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Unable to identify the Billing Account for Object ID: ' ||in_policy_id ||
               ' Error: ' ||sqlerrm (sqlcode)
          );

          return null;

end fn_get_policy_billing_account;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_rollup_level_string
--
--   %USAGE
--        This function returns the string for rollup level
--
--   %ALGORITHM
--        Get the rollup details in string
--
--
--   %PARAM     in_rollup_level_value
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_rollup_level_string
(
     in_session_id                 in         object.object_id%type,
     in_transaction_id             in         object.object_id%type,
     in_rollup_level_value         in         object_bv_value.business_variable_value%type
)
return varchar2
is

     v_return_value           varchar2(100)  :=   null;
     v_rollup_level_value     varchar2(100);
     v_rollup_level_enum      varchar2(20);

begin

     v_rollup_level_value :=  in_rollup_level_value;

     while v_rollup_level_value is not null
     loop

          if instr(v_rollup_level_value,',') <> 0
          then

               v_rollup_level_enum      :=   substr
                                             (
                                                  v_rollup_level_value,
                                                  1,
                                                  instr
                                                  (
                                                  v_rollup_level_value,
                                                  ','
                                                  )-1
                                             );

               v_rollup_level_value     :=   substr
                                             (
                                                 v_rollup_level_value,
                                                 instr
                                                 (
                                                 v_rollup_level_value,
                                                 ','
                                                 )+1
                                             );

          else

               v_rollup_level_enum      :=   v_rollup_level_value;

               v_rollup_level_value     :=   null;

          end if;

          v_return_value      :=   v_return_value||'-'||pkg_os_lookup.fn_lookup_list_text_get
                                                        (
                                                             BillingAccountRollupLevel,
                                                             v_rollup_level_enum
                                                        );

     end loop;-- End Loop

     if substr(v_return_value,1,1)  =  '-'
     then

          v_return_value      :=   substr(v_return_value,2);

     end if;

     return v_return_value;

exception
     when no_data_found then

          return null;

end fn_get_rollup_level_string;

---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_policy_due_amounts
--
--   %USAGE
--        This function returns the past/current/future due amounts for the policy
--
--   %ALGORITHM
--         Get the total debit due amount for the Policy with the consideration
--         of Agency/Customer due dates for the Policy and Due Type ( Past/Current/Future).
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_polbillmeth_type number
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number

---------------------------------------------------------------------------------------------------------------------------------------


function fn_policy_due_amounts
(
     in_object_id             in        object.object_id%type,
     in_polbillmeth_type      in        number,
     in_due_type              in        number,
     in_due_days              in        number default 0,
     in_business_relation_id  in        object.object_id%type default null -- OSPRODUCT-29008
)
return number
is

     v_amount                 number    :=   0;
     v_object_type_id         object.object_id%type := pkg_os_object.fn_object_type_get (in_object_id, in_object_id, in_object_id); --OSPRODUCT-17970


begin
     
     if nvl(v_object_type_id,0) = pkg_os_constant.gObjType_Policy
     then
     
          if in_due_type = pkg_db_functions.PastDue
          then

               if in_due_days = 0  --OSPRODUCT-17970
               then
               
                    select
                         nvl(sum(balance),0)
                    into
                         v_amount
                    from
                         dragon_fitem df
                    where
                         policy_id           =    in_object_id
                    and
                         fitem_type_id       =    pkg_db_functions.gFItemType_Debit
                    and
                         aging_status_id     =    pkg_db_functions.gfitem_past_due
                    and
                         (balance > 0 )-- OSBILLING-1235or balance <=-0.01)
                    and
                         (in_business_relation_id is null or
                         df.fitem_business_relationship = in_business_relation_id
                         )
                    and
                         value_stream is null -- [KR] --OSPRODUCT-2071
                    --and fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
                    --OSBILLING-6633 - replaced not in condition with not exists
                    and  not exists (select 1
                                     from
                                          dragon_billingaccount
                                     where
                                          billingaccount_id = df.billing_account_id
                                     and
                                          NVL(account_type_id,0)  in (1501,0)); -- UTPRODUCT-2513-- exclude debit fitems on writing company
               
               else
                    select
                         nvl(sum(balance),0)
                    into
                         v_amount
                    from
                         dragon_fitem df
                    where
                         policy_id           =    in_object_id
                    and
                         fitem_type_id       =    pkg_db_functions.gFItemType_Debit
                    and
                         aging_status_id     =    pkg_db_functions.gfitem_past_due
                    and
                         aging_status_days_id = in_due_days

                    and
                         balance > 0 -- OSBILLING-1235or balance <=-0.01)
                    and
                         (in_business_relation_id is null or
                         df.fitem_business_relationship = in_business_relation_id
                         )
                    and
                         value_stream is null -- [KR] --OSPRODUCT-2071
                    --and fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373 --OSBILLING-6052
                    --OSBILLING-6633 - replaced not in condition with not exists
                    and  not exists (select 1
                                     from
                                          dragon_billingaccount
                                     where
                                          billingaccount_id = df.billing_account_id
                                     and
                                          NVL(account_type_id,0)  in (1501,0)); -- UTPRODUCT-2513-- exclude debit fitems on writing company

               end if;
               
               
          elsif in_due_type = 4
          then

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem
               where
                    policy_id           =    in_object_id
               and
                    fitem_type_id       =    pkg_db_functions.gFItemType_Debit
               and
                    fitem_category_id = 946
               and
                    value_stream is null -- [KR] --OSPRODUCT-2071
               and
                    (in_business_relation_id is null or
                    fitem_business_relationship = in_business_relation_id
                    )
               ;

          else

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem df
               where
                    policy_id           =    in_object_id
               and
                    fitem_type_id       =    pkg_db_functions.gFItemType_Debit
               and
                   aging_status_id      =    decode (in_due_type,pkg_db_functions.CurrentDue, pkg_db_functions.gfitem_current_due, pkg_db_functions.FutureDue, pkg_db_functions.gfitem_future_due)
               and
                    (balance > 0 )
               and
                    value_stream is null -- [KR] --OSPRODUCT-2071
               and fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff)   --OSBILLING-5373
               --OSBILLING-6633 - replaced not in condition with not exists
               and
                    (in_business_relation_id is null or
                    df.fitem_business_relationship = in_business_relation_id
                    )
               and  not exists (select 1
                                from
                                     dragon_billingaccount
                                where
                                     billingaccount_id = df.billing_account_id
                                and
                                     NVL(account_type_id,0)  in (1501,0)); -- UTPRODUCT-2513-- exclude debit fitems on writing company


                    --OSBILLING-4983

          end if; -- end of due_type check
     
     end if;
     
     return v_amount;

end fn_policy_due_amounts;


---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_policy_cash_detail
--
--   %USAGE
--        This function returns  cash available for each policy
--
--   %ALGORITHM
--       1. Capture cash available balance of a policy
--
--   %PARAM     in_object_id              object ID
--
----------------------------------------------------------------------------------------------------------------------------------

function fn_policy_cash_detail
(
     in_object_id        in        object.object_id%type,
     in_business_relation_id  in        object.object_id%type default null -- OSPRODUCT-29008
)
return varchar2
as
     v_policywise_cash        varchar2(4000) := null;

begin

     select
          abs(nvl(sum(balance),0)) -  abs(sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)))--OSPRODUCT-3715
     into
          v_policywise_cash
     from
          dragon_fitem f
     join
          dragon_policy p on (p.policy_id = f.policy_id)
     where
          f.policy_id  =  in_object_id
     and          
          fitem_category_id = gFItem_Category_Cash
     and  
          value_stream is null -- [KR]
     and
          (
             f.billing_account_id = p.responsible_billing_account
             -- OSPRODUCT-5716
             or
             exists (    
                      select 
                           1
                      from  
                           dragon_policy_term_payer tp
                      where
                           tp.payer_entity_id = f.entity_id --  do not remove !!! if not used, there will be the FULL SCAN of dragon_policy_term_payer
                      and
                           tp.policy_id= f.policy_id                                
                      and 
                           tp.payer_billing_account_id =  f.billing_account_id 
                    ) 
            -- /OSPRODUCT-5716
          )
     and
               (in_business_relation_id is null or
               f.fitem_business_relationship = in_business_relation_id
               ) 
      ;

return v_policywise_cash;

end fn_policy_cash_detail;

---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_policywise_cash_available
--
--   %USAGE
--        This function returns the policy wise cash available for each billing account
--
--   %ALGORITHM
--       1. Capture cash available balance of all the policies for a particular billing account
--       2. Display policy wise cash available for the billing account.
--
--   %PARAM     in_object_id              object ID
--
----------------------------------------------------------------------------------------------------------------------------------
function  fn_policywise_cash_available
(
     in_object_id              in         object.object_id%type
)
return varchar2
as

     v_policywise_cash        varchar2(4000) :=   null;
     v_policy_no              varchar2(4000);
     v_sum_balance            number;

     cursor    c_policy_cash
     is
          select
               policy_no,
               abs(sum(balance)) cash
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id  = gFItem_Category_Cash
          and
               balance < 0
          and
               value_stream is null -- [KR] --OSPRODUCT-2071
          group by policy_no;

begin

     for  r_policy_cash  in   c_policy_cash loop

          v_policywise_cash := v_policywise_cash || chr(13) ||r_policy_cash.policy_no || ' - ' || r_policy_cash.cash;

     end loop;

     If substr (v_policywise_cash,1)  =    chr(13)
     then

          v_policywise_cash := substr(v_policywise_cash,length(v_policywise_cash)-1);

     else

          v_policywise_cash := v_policywise_cash;

     end if;

return v_policywise_cash;

end  fn_policywise_cash_available;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_current_term
--
--   %USAGE
--        This function returns the current term for a policy based on
--        policy current date ().
--
--   %ALGORITHM
--       1. Get the policy current date from pkg_db_functions.fn_get_policy_current_date
--       2. Get all the PolicyTerm objects for this policy effective before policy current date.
--       3. Get the PolicyTerm object with the maximum eff date from he above list, this is the active PolicyTerm
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_current_term
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type,     
     in_date                       in date default null --OSPRODUCT-2475
)
return object.object_id%type
is


     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_policy_current_term';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_current_term_id             object.object_id%type;
     
     v_object_type_id              object.object_id%type := pkg_os_object.fn_object_type_get (in_session_id, in_transaction_id, in_policy_id); --MUSTDEV-41816  OSPRODUCT-2475

     v_object_index                number;
     v_count                       number;
     v_current_policy_date         date;    -- OSBILLING-4795 TBD Gagan & Prabesh
     v_policy_effective_date       date;    -- OSBILLING-4795 TBD Gagan & Prabesh
     v_term_eff_date               date;
     v_term_exp_date               date;

     v_current_term                r_policy_term;
     v_last_term                   r_policy_term;
     v_rec_null                    r_policy_term;
     v_object_list                 pkg_os_object.t_object_list;

     /* Modified for OSBILLING - 1822 */
     -- Using Datamart instead of object model to fetch PolicyTerm objects for tuning purposes.
     cursor fetchpolicyterm IS
          select pol_term.policy_term_id,
               trunc(pol_term.policy_term_eff_date),
               trunc(pol_term.policy_term_exp_date)
          from
               dragon_policy_term pol_term
          where
               pol_term.policy_id = in_policy_id
               --2017-03-28 Cheryl osbilling-3805 _do not include rollback
               and 
                        pol_term.policy_term_pas_status <> 'Rolledback'
                  and 
                    (
                         pol_term.policy_term_billing_method_id is not null
                         or
                         pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, pol_term.policy_term_id,33820346) is not null
                    );
     --order by pol_term.policy_term_id asc;
     
begin

    if v_object_type_id = 24 THEN   --MUSTDEV-41816  OSPRODUCT-2475
          
           if v_session_control.gLogging_Full 
           then

               pkg_os_logging.sp_log
               (
                    in_session_id, 
                    in_transaction_id, 
                    v_procedure_name,
                    ' |||||| Identifying currrent Policy term for Policy ID: ' || in_policy_id
               );

          end if;

          --
          -- Get the Policy current date in Dragon Native Format
          --   

          /* MUSTDEV-41816 OSPRODUCT-2475*/
          if in_date is not null 
          then
                v_current_policy_date:= in_date;
          else 
                v_current_policy_date := trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, in_policy_id ));
          end if; 
          /* MUSTDEV--41816 OSPRODUCT-2475*/

          --
          -- Modified for OSBILLING - 1822
          -- Fetch The policy effective date, this will be used to check whether future booked policy or not.
          --

          v_policy_effective_date := trunc(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_id, 504),pkg_os_constant.DragonDateFormatDefault));

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' |||||| Current Policy Date is : ' ||
                    v_current_policy_date ||
                    ' |||||| Policy Effective Date is : ' ||
                    v_policy_effective_date
               );

          end if;

          v_current_term := v_rec_null;
          v_last_term := v_rec_null;

          --
          -- Fetch The Policy Term Objects.
          --
          open fetchpolicyterm;
          loop
               
               fetch fetchpolicyterm into v_current_term_id, v_term_eff_date, v_term_exp_date;
               exit when fetchpolicyterm%NOTFOUND;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Considering term ID: ' ||v_current_term_id ||
                         '...Effective Date: '      ||v_term_eff_date   ||
                         '...Expiry Date: '         ||v_term_exp_date
                    );

               end if;

               --
               -- Loop through the terms fetched and identify the current term
               -- If term expiration date is less then policy current date, it's a past term
               --
               if v_current_policy_date >= v_term_exp_date then -- past term --OSPRODUCT-1822(added equal condition)
                    
                    --
                    -- Out of past terms, choose the 1 with maximum effective date and that will be last va_last_term.
                    --
                    if (v_term_eff_date >= nvl(v_last_term.date_eff, v_term_eff_date)) then               

                         v_last_term.date_eff  := v_term_eff_date;
                         v_last_term.object_id := v_current_term_id;

                    end if;

               else -- current or future term
                    
                    --
                    -- Out of Current or future terms, choose the 1 with minimum effective date and that will be last va_current_term.
                    --
                    if (v_term_eff_date <= nvl(v_current_term.date_eff, v_term_eff_date)) then               

                         v_current_term.date_eff  := v_term_eff_date;
                         v_current_term.object_id := v_current_term_id;

                    end if;

               end if;

          end loop;

          close fetchpolicyterm;

          -- If there is a current term, return that, else return v_last_term. If it's also null, then return null.

          if v_current_term.object_id is not null then
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Current term: ' || v_current_term.object_id 
                    );

               end if;  

               return v_current_term.object_id;

          elsif v_last_term.object_id is not null then
                
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Current term: ' || v_last_term.object_id 
                    );

               end if;    

               return v_last_term.object_id;
                
          else

               return null;

          end if;
     else
          return null; 
     end if; --MUSTDEV-41816  OSPRODUCT-2475


exception
     
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Not able to identify the current policy term for policy ID: '
               ||in_policy_id
               || ' Error: '
               ||sqlerrm (sqlcode)
          );

          return null;

end fn_get_policy_current_term;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_policy_curr_term_cacheReset
--
--   %USAGE
--        This procedure resets cache for a policy after any change for in the DRAGON_POLICY_TERM datamart
--
--   %ALGORITHM
--      Having a PolicyTerm Id, find it's policy. Reset cache for this policy.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_term_id          policy Term ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_policy_curr_term_cacheReset -- OSPRODUCT-5020
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_term_id             in             object.object_id%type
)
is
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'sp_policy_curr_term_cacheReset';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_policy_id                   object.object_id%type;
     v_idx_to_delete_list          pkg_db_functions.t_policy_term_id_cache; 
     v_idx                         long;    -- the cache is indexed by in_policy_id:in_transaction_id:MMDDYY          
begin
       
     v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type  -- get policy from the Term
                    (
                         in_session_id,
                         in_transaction_id,
                         in_policy_term_id,
                         pkg_os_constant.gobjType_Policy
                    );
                              
     if ( v_session_control.gLogging_Full )
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....... Updated DRAGON_POLICY_TERM datamrt for PolcyTerm='|| in_policy_term_id ||'. Resetting cache for policy='||v_policy_id
          );
     end if;

     -- find all indexes in the cache that related to a policy
     --   
     v_idx := PKG_DB_FUNCTIONS.g_policy_term_id_cache.first;
     while v_idx is not null
     loop
          if instr(v_idx, v_policy_id||':') <> 0
          then
               -- add this index to a 'delete' list
               --
               v_idx_to_delete_list(v_idx) := PKG_DB_FUNCTIONS.g_policy_term_id_cache(v_idx);
          end if;
          
          v_idx := PKG_DB_FUNCTIONS.g_policy_term_id_cache.next(v_idx);
     end loop;
     
     -- now delete from the cache
     --  
     v_idx := v_idx_to_delete_list.first;
     while v_idx is not null
     loop
          PKG_DB_FUNCTIONS.g_policy_term_id_cache.delete(v_idx);
                    
          if ( v_session_control.gLogging_Full )
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....... PolcyTerm='||  v_idx_to_delete_list(v_idx) ||' deleted from cache for policy='||v_policy_id ||', cache index=' || v_idx
               );
          end if;
                    
          v_idx := v_idx_to_delete_list.next(v_idx);
     end loop;
     
end sp_policy_curr_term_cacheReset;

-----------------------------------------------------------------------------------------------------------------------------------------------------
-- 
--   %NAME
--        fn_policy_curr_term_cache_get
--
--   %USAGE
--        This function returns the current term from a cache. The cache is getting reset by sp_policy_curr_term_cacheReset.
--
--   %ALGORITHM
--      Search in cache, if not found, call the fn_get_policy_current_term and put to the cache.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_policy_curr_term_cache_get -- OSPRODUCT-2406
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type,
     in_date                       in             date default null 
)
return object.object_id%type
is


     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_policy_curr_term_cache_get';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_policy_current_term_id      object.object_id%type;
     v_idx                         long; -- in_policy_id:in_transaction_id:MMDDYY
     
begin

     if v_session_control.gLogging_Full 
     then
         pkg_os_logging.sp_log
         (
              in_session_id, 
              in_transaction_id, 
              v_procedure_name,
              ' |||||| Starting fn_policy_curr_term_cache_get : ' || 
              ' for in_policy_id=' || in_policy_id ||
              ', in_transaction_id=' ||in_transaction_id ||
              ', in_date=' || to_char(trunc(in_date),'MMDDYYY')
         );
     end if;
          
     v_idx := in_policy_id||':'||in_transaction_id||':';

     if in_date is not null 
     then
           v_idx :=v_idx || to_char(trunc(in_date),'MMDDYYY');
     else 
           v_idx :=v_idx || 'NULL';
     end if;    
          
     if v_idx is null
     then                
          v_policy_current_term_id := pkg_db_functions.fn_get_policy_current_term
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_policy_id,
                                           in_date
                                      );
          
          if v_session_control.gLogging_Full 
          then
              pkg_os_logging.sp_log
              (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   ' ||||| v_idx IS NULL. Skipping cache and calling direclty. Found Term ID='|| v_policy_current_term_id
              );
          end if;
                                      
     elsif not g_policy_term_id_cache.exists(v_idx)
     then     
          v_policy_current_term_id := pkg_db_functions.fn_get_policy_current_term
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_policy_id,
                                           in_date
                                      );
          
          g_policy_term_id_cache(v_idx) := v_policy_current_term_id;
               
          if v_session_control.gLogging_Full 
          then
              pkg_os_logging.sp_log
              (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   ' |||||| The 1st call for v_idx=' || v_idx ||', calculated Term ID='|| v_policy_current_term_id ||
                   case when v_policy_current_term_id is null
                        then 'NULL'
                        else ''
                     end || '. Added to the cache.'
              );
          end if;
     else    
          v_policy_current_term_id := g_policy_term_id_cache(v_idx);
          
          if v_session_control.gLogging_Full 
          then
              pkg_os_logging.sp_log
              (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   ' |||||| Getting from the cache for v_idx=' || v_idx ||
                   ', found Term ID=' || v_policy_current_term_id
              );
          end if;
     end if;
     
     return v_policy_current_term_id;
     
end fn_policy_curr_term_cache_get;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_prior_term
--
--   %USAGE
--        This function returns the prior term for a policy based on
--        policy current date ().
--
--   %ALGORITHM
--       1. Get the policy current date from pkg_db_functions.fn_get_policy_current_date
--       2. Get all the PolicyTerm objects for this policy effective before policy current date.
--       3. Get the PolicyTerm object with the maximum eff date from he above list, this is the active PolicyTerm
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
--VAULTDEV-9936
  -----------------------------------------------------------------------------------------------------------------------------------------------------
  --
  --   %NAME
  --        fn_get_policy_prior_term
  --
  --   %USAGE
  --        This function returns the prior term for a policy based on
  --        policy current date ().
  --
  --   %ALGORITHM
  --       1. Get the policy current date from pkg_db_functions.fn_get_policy_current_date
  --       2. Get all the PolicyTerm objects for this policy effective before policy current date.
  --       3. Get the PolicyTerm object with the maximum eff date from he above list, this is the active PolicyTerm
  --
  --   %PARAM     in_session_id              session ID
  --   %PARAM     in_transaction_id          transaction ID
  --   %PARAM     in_policy_id               policy ID
  --
  -----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_prior_term
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type,
     in_policy_term_id             in             object.object_id%type default null
)
return object.object_id%type
is

     v_session_control              pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name     constant  system_log.program_name%type                 :=  'fn_get_policy_prior_term';
     v_current_term_id              object.object_id%type;
     v_prior_term_return             object.object_id%type;
     v_object_list                  pkg_os_object.t_object_list;
     v_prior_term                   r_policy_term;
     v_rec_null                     r_policy_term;
     v_object_index                 number;
     v_count                        number;
     v_current_term_effective_date  varchar2(100);
     v_term_eff_date                varchar2(100);

begin

     if v_session_control.gLogging_Full then
     
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Identifying Prior Policy term For Policy ID: ' || in_policy_id
               
          );

     end if;
     
     if in_policy_term_id is null then
          
          --
          -- Get the Policy current term effective date
          --
          v_current_term_id := pkg_db_functions.fn_get_policy_current_term
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_id
                               );
     else
          
          v_current_term_id := in_policy_term_id;
          
     end if;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Current Policy Term object id: ' || v_current_term_id             
          );

     end if;
     
     begin
          
           select 
                max(pol_term.policy_term_id)
           into
                v_prior_term_return
           from
               dragon_policy_term pol_term
           where
               pol_term.policy_id = in_policy_id              
           and 
               pol_term.policy_term_pas_status <> 'Rolledback'
           and 
               pol_term.policy_term_billing_method_id is not null
           and 
               pol_term.policy_term_id < v_current_term_id
           order by 
               trunc(pol_term.policy_term_eff_date), pol_term.policy_term_id asc;
               
           if v_prior_term_return is null then
                
                if v_session_control.gLogging_Full then                    

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......Policy has no prior Policy Term..'
                    );

                end if;
                
                return null;
           
           else
                if v_session_control.gLogging_Full then
                     
                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '..Prior Term ID: ' || v_prior_term_return
                     );
                     
                end if;
                
                return v_prior_term_return;
                
           end if;
                
     end;

exception
     
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... not able to identify the prior policy term for policy ID: '
               ||in_policy_id
               || ' Error: '
               ||sqlerrm (sqlcode)
          );

          return null;

end fn_get_policy_prior_term;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_next_term
--
--   %USAGE
--        This function returns the next term for a policy based on
--        policy current date ().
--
--   %ALGORITHM
--       1. Get the policy current date from pkg_db_functions.fn_get_policy_current_date
--       2. Get all the PolicyTerm objects for this policy effective before policy current date.
--       3. Get the PolicyTerm object with the maximum eff date from he above list, this is the active PolicyTerm
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_next_term
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type
)
return object.object_id%type
is

     v_session_control              pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name     constant  system_log.program_name%type                 :=  'fn_get_policy_next_term';
     v_current_term_id              object.object_id%type;
     v_next_term_return             object.object_id%type;
     v_term_id                      object.object_id%type;
     v_object_list                  pkg_os_object.t_object_list;
     v_next_term                    r_policy_term;
     v_rec_null                     r_policy_term;
     v_object_index                 number;
     v_count                        number;
     v_current_term_effective_date  varchar2(100);
     v_term_eff_date                varchar2(100);
     v_term_status                  varchar2(100);

begin

     if v_session_control.gLogging_Full
     then
          
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Identifying next Policy term For Policy ID: ' || in_policy_id                
          );

     end if;
     
     v_current_term_id := pkg_db_functions.fn_get_policy_current_term
                          (
                               in_session_id,
                               in_transaction_id,
                               in_policy_id
                          );
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Current Policy Term object id: ' || v_current_term_id             
          );

     end if;
     
     begin
          
           select 
                min(pol_term.policy_term_id)
           into
                v_next_term_return
           from
               dragon_policy_term pol_term
           where
               pol_term.policy_id = in_policy_id              
           and 
               pol_term.policy_term_pas_status <> 'Rolledback'
           and 
               pol_term.policy_term_billing_method_id is not null
           and 
               pol_term.policy_term_id > v_current_term_id
           order by 
               trunc(pol_term.policy_term_eff_date), pol_term.policy_term_id asc;
               
           if v_next_term_return is null then
                
                if v_session_control.gLogging_Full then                    

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......Policy has no prior Policy Term..'
                    );

                end if;
                
                return null;
           
           else
                if v_session_control.gLogging_Full then
                     
                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '..Next Term ID: ' || v_next_term_return
                     );
                     
                end if;
                
                return v_next_term_return;
                
           end if;
                
     end;

exception
     
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... not able to identify the next policy term for policy ID: '
               ||in_policy_id
               || ' Error: '
               ||sqlerrm (sqlcode)
          );

          return null;

end fn_get_policy_next_term;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_policy_amount_due_get
--
--   %USAGE
--        This function returns the amount due for a policy against the fichanges referring to that policy.
--
--   %ALGORITHM
--        Get the sum of amounts from all FIChange having reference to policy object.
--
--
--   %PARAM     in_session_id      Session ID
--   %PARAM     in_transaction_id  Transaction ID
--   %PARAM     in_object_id       Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_policy_amount_due_get
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type
)
return number
is

     v_return_value     number := null;

begin

     select
          sum( action_delta)
     into
          v_return_value
     from
          dragon_fichange
     where
          policy_id                =    in_object_id
     and
    -- OSBILLING-148 : Changed the references to pkg_db_billing to pkg_db_billing_modify
          sum_include_tf           =    pkg_db_billing_modify.gFIChange_Yes
     and
          policy_transaction_type  <>   pkg_os_lookup.fn_lookup_list_text_get
                                        (
                                             PolicyTrxtypeList,
                                             gPolicyTrxType_Latetrx
                                        )
     and
          trunc(due_date)          <=   pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id ,
                                             in_transaction_id ,
                                             in_object_id
                                        )
     and
          fitem_type               =    pkg_os_lookup.fn_lookup_list_text_get
                                        (
                                             FItemDebitCreditList,
                                             gFItemType_Debit
                                        );

     return v_return_value;

exception

     when no_data_found then

          return null;

end fn_policy_amount_due_get;
------------------------------------------------------------------------------------------------------------------------------------
  -- VAULTDEV-8269
function fn_get_pif_balance
  (
    in_session_id         in object.object_id%type,
    in_transaction_id     in object.object_id%type,
    in_billing_account_id in object.object_id%type,
    in_policy_id      in object.object_id%type default null
  ) return number is

    v_amount number := 0;
  begin
     select
    nvl(sum(balance), 0)
     into
    v_amount
     from
    dragon_fitem  f, dragon_policy dp
     where
    f.POLICY_ID = dp.POLICY_ID
     and
    f.billing_account_id = in_billing_account_id
     and
    dp.billing_method_id =      pkg_db_stmt.g_BillingMethod_Direct
     and
          (
            (
        f.policy_id = in_policy_id and in_policy_id is not null
      )
            or
               (
        dp.direct_billed_to_id = pkg_db_stmt.g_Direct_CustomerBill   and in_policy_id  is null
      )
    );
    return v_amount;
  end fn_get_pif_balance;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_earned_unearned_amt
--
--   %USAGE
--        This function returns the earned and unearned amounts
--        for Fees , Surcharges , Commissions and taxes
--
--   %ALGORITHM
--       Get the earned amount as a summation of all earned amounts and the unearned amount as
--       summation of balances where earned amount is null.
--
--   %PARAM     in_object_id              object ID
--   %PARAM     in_earning_type           earning type
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_earned_unearned_amt
(
     in_object_id              in         object.object_id%type,
     in_earning_type           in         number
)
return number
is

     v_amount     number  := 0;

begin

     if   in_earning_type     =    gEarning_Type_Earned
     then

          select
                    nvl(sum(earned_amount),0)
          into
                    v_amount
          from
                    dragon_fitem
          where
                    policy_id = in_object_id
          and
                    fitem_type_id = gFItemType_Credit
          and
                    fitem_category_id in
                                        (
                                             gFItem_Category_Tax,
                                             gFItem_Category_Surcharge,
                                             gFItem_Category_Fee,
                                             gFItem_Category_Comm
                                        )    ;

     elsif  in_earning_type    =    gEarning_Type_Unearned
     then

          select
                    nvl(sum(unearned_amount),0)
          into
                    v_amount
          from
                    dragon_fitem
          where
                    policy_id      =    in_object_id
          and
                    fitem_type_id  =    gFItemType_Credit
          and
                    fitem_category_id   in
                                        (
                                             gFItem_Category_Tax,
                                             gFItem_Category_Surcharge,
                                             gFItem_Category_Fee,
                                             gFItem_Category_Comm
                                        );

     end if; -- end of in_earning_type check

return    v_amount;

end  fn_get_earned_unearned_amt;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_count_stat_profile
--
--   %USAGE
--       This function returns count of statement profile objects under Billing Account with attribute  Billing Type set to "Customer".
--
--   %ALGORITHM
--       Get count of statement profile under Billing Account for Customer.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billing_account_id    billing account
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_get_count_stat_profile
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_id         in             object.object_id%type
)
return number
is

     v_session_control              pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name               constant  system_log.program_name%type       :=   'fn_get_count_stat_profile';

     v_current_term_id              object.object_id%type;
     v_object_list                  object_tt :=   new  object_tt();

     v_count_statement_profile      number;
     v_object_index                 number;

begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Create Statement Profile for Billing Account id: '
                || in_billing_account_id
          );

     end if;

     /*pkg_os_object_search.sp_object_with_attribute_get
     (
          in_session_id,
          in_transaction_id ,
          in_billing_account_id,
          gObjType_StatementProfile ,
          gbv_StmtPrfl_BillingType   ,
          '1'     ,
          v_object_list
     );
     */
     
     v_object_list      := new object_tt(); --OSPRODUCT-21391
     
     for prof in (
                    select     --OSPRODUCT-21391 replaced pkg_os_object_search.sp_object_with_attribute_get with select query                                    
                          STATEMENTPROFILE_id
                     from
                          DRAGON_STATEMENTPROFILE
                     where
                         billingaccount_id = in_billing_account_id
                     and
                         pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id ,STATEMENTPROFILE_id,gbv_StmtPrfl_BillingType) = 1
                 ) loop
          v_object_list.extend;
          v_object_list(v_object_list.count) := new object_ot(prof.STATEMENTPROFILE_id,2866546,in_billing_account_id, null);

     end loop;

     --
     -- Get the Count of StatementProfile Objects
     --

     v_count_statement_profile       :=  v_object_list.Count;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Statement profile object count is: '
               || v_count_statement_profile
          );

     end if;

return   v_count_statement_profile;

end fn_get_count_stat_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_validate_profile_for_LOB
--
--   %USAGE
--        Validate dragon statement profile based on the input parameters.
--
--   %ALGORITHM
--        Validate dragon statement profile based on the input parameters.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billingaccount_id     billingaccount id
--   %PARAM    in_billingtype_id        billingtype id
--   %PARAM    in_profiletype_id        billingaccount id
--   %PARAM    in_lob_value             lob value

-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_validate_profile_for_LOB
(
     in_session_id            in    object.object_id%type,
     in_transaction_id        in    object.object_id%type,
     in_billingaccount_id     in    object.object_id%type,
     in_billingtype_id        in    object.object_id%type,
     in_profiletype_id        in    object.object_id%type,
     in_lob_value             in    object_bv_value.business_variable_value%type
)
return number
is

     v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_count                 number;
     v_lob_value             varchar2(100);
     v_lob_enum              varchar2(20);

begin

     v_lob_value   :=   in_lob_value;

     while v_lob_value is not null
     loop

          if instr(v_lob_value,',') <> 0
          then

               v_lob_enum      :=   substr
                                             (
                                                  v_lob_value,
                                                  1,
                                                  instr
                                                  (
                                                  v_lob_value,
                                                  ','
                                                  )-1
                                             );

               v_lob_value     :=   substr
                                            (
                                                v_lob_value,
                                                instr
                                                (
                                                v_lob_value,
                                                ','
                                                )+1
                                            );

          else

               v_lob_enum      :=   v_lob_value;

               v_lob_value     :=   null;

          end if; -- end of v_lob_value check

          select
                count(*)
          into
                v_count
          from
                dragon_statementprofile
          where
                billingaccount_id = in_billingaccount_id
          and
                profile_type_id = in_profiletype_id
          and
                billing_type_id   = in_billingtype_id
          and
                instr (items_lob ,v_lob_enum) > 0;

          if v_count > 0 then

             exit;

          end if;

     end loop; -- end of while loop

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'fn_validate_profile_for_LOB',
               '...v_count'||v_count
          );

     end if;

return v_count;

end fn_validate_profile_for_LOB;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_validate_profile_for_policy
--
--   %USAGE
--       Validate dragon statement profile based on the policy.
--
--   %ALGORITHM
--       Validate dragon statement profile based on the policy.
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_lob_level_value       lob value

-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_validate_profile_for_policy
(
     in_session_id            in    object.object_id%type,
     in_transaction_id        in    object.object_id%type,
     in_billingaccount_id     in    object.object_id%type,
     in_profiletype_id        in    object.object_id%type,
     in_policy_id             in    object.object_id%type
)
return number
is

     v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_count                 number;

begin

     select
          count(*)
     into
          v_count
     from
          dragon_statementprofile
     where
          billingaccount_id = in_billingaccount_id
     and
          profile_type_id   = in_profiletype_id
     and
          policy_id = in_policy_id;

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'fn_validate_profile_for_policy',
               '...v_count'||v_count
          );

     end if;

return v_count;

end fn_validate_profile_for_policy;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_value_for_LOB
--
--   %USAGE
--       This function returns LOB short code in case diffrent LOBs are selected and ALL in case of All insurance line.
--
--   %ALGORITHM
--       Get the input lob's shot code.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_lob_level_value       lob value
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_value_for_LOB
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_lob_level_value            in             object_bv_value.business_variable_value%type
)
return varchar2
is

     v_return_value        varchar2(100)  :=   null;
     v_lob_level_value     varchar2(100);
     v_lob_level_enum      varchar2(20);
     v_lob_level_return    varchar2(100);
     v_lob_level_return1   varchar2(100);

begin

     v_lob_level_value :=  in_lob_level_value;

     if instr(v_lob_level_value,to_char(gAll_Lines_Insurance)) > 0
     then

          v_return_value      :=   upper(substr(pkg_os_lookup.fn_lookup_list_text_get
                                   (
                                        StatementProfileLOB,
                                        gAll_Lines_Insurance
                                   ),1,3));

     else

          while v_lob_level_value is not null
          loop

               if instr(v_lob_level_value,',') <> 0
               then

                    v_lob_level_enum      :=      substr
                                                  (
                                                       v_lob_level_value,
                                                       1,
                                                       instr
                                                       (
                                                            v_lob_level_value,
                                                            ','
                                                       )-1
                                                  );

                    v_lob_level_value     :=      substr
                                                  (
                                                       v_lob_level_value,
                                                       instr
                                                       (
                                                            v_lob_level_value,
                                                            ','
                                                       )+1
                                                  );

               else

                    v_lob_level_enum       :=   v_lob_level_value;

                    v_lob_level_value      :=   null;

               end if; -- end of v_lob_level_value check

               v_lob_level_return1         :=   pkg_os_lookup.fn_lookup_list_text_get
                                                (
                                                      StatementProfileLOB,
                                                      v_lob_level_enum
                                                );


               v_lob_level_return          :=  replace(regexp_replace(v_lob_level_return1,'([[:lower:]])',''),chr(32),'');
               v_return_value              :=  v_return_value||'-'||substr(v_lob_level_return,1,3);

          end loop; -- end of while loop

          if substr(v_return_value,1,1) = '-'
          then

               v_return_value      :=   substr(v_return_value,2);

          end if;

     end if; -- end of first end if

return v_return_value;

exception

     when no_data_found then
          return null;

end fn_get_value_for_LOB;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_cal_due_date
--
--   %USAGE
--       This function calculates the due date based on property 11746(Number of days for Billing Due Date)
--
--   %ALGORITHM
--       If in_stmt_date is null, use current date.
--       Add no of days mention in propery
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_stmnt_date            object_bv_value.business_variable_value%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_cal_due_date
(
     in_session_id       in   object.object_id%type,
     in_transaction_id   in   object.object_id%type,
     in_stmnt_date       in   object_bv_value.business_variable_value%type
)
return  varchar2
is

     v_billing_days      object_bv_value.business_variable_value%type;
     v_output_date       object_bv_value.business_variable_value%type;
     v_input_date        date;

begin
     if in_stmnt_date is not null
     then
          v_input_date := to_date(in_stmnt_date,pkg_os_constant.DragonDateFormatDefault);
     else
          v_input_date := pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_session_id);
     end if;

     v_billing_days    := NVL(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_session_id,11746),0);

     v_output_date     := to_char((add_months(v_input_date,floor(v_billing_days/30)) + mod(v_billing_days,30)),pkg_os_constant.DragonDateFormatDefault)  ;

return v_output_date ;

exception
     when others then

          return v_output_date ;

end fn_cal_due_date;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_cal_due_date
--
--   %USAGE
--       This function calculate the agency due date based on the input parameters
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billing_id            object.object_id%type
--   %PARAM    in_actual_due            object_bv_value.business_variable_value%type
--   %PARAM    in_billing_due           object_bv_value.business_variable_value%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_fitem_cal_due_date
(
     in_session_id       in   object.object_id%type,
     in_transaction_id   in   object.object_id%type,
     in_billing_id       in   object.object_id%type,
     in_actual_due       in   object_bv_value.business_variable_value%type,
     in_billing_due      in   object_bv_value.business_variable_value%type,
     in_stmnt_date       in   date
)
return  varchar2
is

     v_date_use_ind      object_bv_value.business_variable_value%type;
     v_billing_days     object_bv_value.business_variable_value%type;
     v_billing_date      object_bv_value.business_variable_value%type;
     v_agency_due_date   object_bv_value.business_variable_value%type;
     v_input_date        date;

begin

    v_billing_days    :=      pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_billing_id,
                                     gbv_billing_due_days
                                );






    if in_billing_id is not null and in_actual_due is not null and in_billing_due is not null
     then

          if  nvl
              (
                   pkg_os_object_io.fn_object_bv_get
                   (
                        in_session_id,
                        in_transaction_id,
                        in_billing_id,
                        gbv_billing_date_ind
                   ),0
              )   = 1
          then
                        pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'fn_fitem_cal_due_date',
               '...in_actual_due'||in_actual_due
          );
               v_input_date := to_date(in_actual_due);
                                       pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'fn_fitem_cal_due_date',
               '...v_input_date'||v_input_date
          );

          elsif nvl
                (
                           pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_billing_id,
                                gbv_billing_date_ind
                           ),0
                      )   = 2
          then

               v_input_date := to_date(in_billing_due);
          else
             if in_stmnt_date is not null
                 then
                   v_input_date := to_date(in_stmnt_date);
                 else
                   v_input_date := to_date(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_id));
                end if;
          end if; -- end of in_billing_id check

          if v_billing_days is not null
          then

               v_agency_due_date :=to_char((to_date(v_input_date , 'DD-MON-YY') + v_billing_days),pkg_os_constant.DragonDateFormatDefault)  ;

          else
               v_billing_days := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_billing_id,11746);

               v_agency_due_date :=to_char((to_date(v_input_date , 'DD-MON-YY') + v_billing_days),pkg_os_constant.DragonDateFormatDefault)  ;

          end if; -- end of v_billing_days check

     end if; -- end of in_billing_id check

return v_agency_due_date ;

exception
     when others then

          return v_agency_due_date ;

end fn_fitem_cal_due_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_receivable_amt
--
--   %USAGE
--       This function calculate the Policy receivable amount based on policy id.
--
--   %ALGORITHM
--       Get policy receivable amount for input policy.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_object_id             object.object_id%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_policy_receivable_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type
)
return number
is

     v_return_value     number := null;

begin

     select
          sum( initial_amount)
     into
          v_return_value
     from
          dragon_fitem
     where
          policy_id      =    in_object_id
     and
          fitem_type_id  =    gFItemType_Debit
     and
          value_stream is null -- [KR] --OSPRODUCT-2071
     and 
          fitem_category_id not in (gFItem_Category_Disburse, gFItem_Category_Writeoff, gFItem_Category_Comm, gFItem_Category_Cash, gFitem_category_LossGain);--OSPRODUCT-8667 --OSPRODUCT-12759

return v_return_value;

exception

     when no_data_found then
          return null;

end fn_get_policy_receivable_amt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_validate_invoice_profile
--
--   %USAGE
--       This function validate invoice profile based on the input parameter.
--
--   %ALGORITHM
--       Validate invoice profile based on the input parameter.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billingaccount_id     varchar2
--   %PARAM    in_profiletype_id        object.object_id%type
--   %PARAM    in_policy_id             object.object_id%type
--   %PARAM    in_billing_type_id       object.object_id%type
--   %PARAM    in_items_lob             varchar2
--   %PARAM    in_statementprofile_id   varchar2
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_validate_invoice_profile
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_billingaccount_id     in        varchar2,
     in_profiletype_id        in        object.object_id%type,
     in_policy_id             in        object.object_id%type,
     in_billing_type_id       in        object.object_id%type,
     in_items_lob             in        varchar2,
     in_statementprofile_id   in        varchar2
)
return number
is

     v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
     v_count                 number;
     v_token_index           number;
     v_token_table           pkg_os_token.t_string_table;

begin

     if   in_billing_type_id = gCash_Level_Policy
     then

          select
                 count(1)
          into
                 v_count
          from
                 DRAGON_STATEMENTPROFILE
          where
                 billingaccount_id = in_billingaccount_id
          and
                 profile_type_id   = gStmt_Profile_Type_Inv
          and
                 policy_id         = in_policy_id
          and
                 status_id <> gProfileStatus_Inactive
          and
                 billing_Type_id   = in_billing_type_id
          and
                 statementprofile_id <> in_statementprofile_id;

          if   v_count > 0
          then

               return 3;

          else

               return 2;

          end if;

     elsif     in_billing_type_id = gCash_Level_Customer
     then

          if instr(in_items_lob, '999999') > 0
          then
               select
                    count(1)
               into
                    v_count
               from
                    DRAGON_STATEMENTPROFILE
               where
                    billingaccount_id = in_billingaccount_id
               and
                    profile_type_id   = gStmt_Profile_Type_Inv
               and
                    status_id <> gProfileStatus_Inactive
               and
                    billing_Type_id   = in_billing_Type_id
               and
                    statementprofile_id <> in_statementprofile_id;

               if v_count > 0
               then

                    return 3;

               else

                    return 1;

               end if;

          else

               pkg_os_token.sp_tokenize_string
               (
                    nvl
                    (
                         in_items_lob,
                         999999
                    ),
                    ',',
                    v_token_table
               );

               v_token_index  :=  v_token_table.first;

               while v_token_index is not null
               loop

                    select
                         count(1)
                    into
                         v_count
                    from
                         DRAGON_STATEMENTPROFILE
                    where
                         billingaccount_id = in_billingaccount_id
                    and
                         profile_type_id   = gStmt_Profile_Type_Inv
                    and
                         (items_lob like '%' || v_token_table(v_token_index) || '%'
                         or
                         items_lob like '%999999%')
                    and
                    status_id <> gProfileStatus_Inactive
                    and
                    billing_Type_id = in_billing_Type_id
                    and
                    statementprofile_id <> in_statementprofile_id;

                    if v_count > 0
                    then

                         return 3;

                    end if;

               v_token_index := v_token_table.next(v_token_index);

               end loop; -- end of while loop

               return 1;

          end if; -- end of in_items_lob check

     end if; -- end of in_billing_type_id check

exception

     when others then

          return  null;

end fn_validate_invoice_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_current_term_values
--
--   %USAGE
--       This function calculates current term values for policy.
--
--   %ALGORITHM
--       calculates current term value for policy.
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_policy_id             object.object_id%type
--   %PARAM    in_earned_unearned_flag  varchar2
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_current_term_values
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type,
     in_earned_unearned_flag       in             varchar2
)
return number
is

     v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name               constant system_log.program_name%type      :=     pkg_name||'fn_get_current_term_values';
     v_rounding_precision           number                                  := 5;

     v_policy_term_id               object.object_id%type;

     v_date                         varchar2(50);
     v_out_earned_premium           number;
     v_out_unearned_premium         number;
     v_out_written_premium          number;
     v_output                       number;

begin

     v_policy_term_id :=   pkg_db_functions.fn_get_policy_current_term
                           (
                             in_session_id,
                             in_transaction_id,
                             in_policy_id,
                             TO_DATE(v_date,'YYYYMMDDHH24MISS')      --MUSTDEV-41816 OSPRODUCT-2475
                           );             

     v_date           :=   to_char(to_date(fn_get_policy_current_date
                           (
                               in_session_id,
                               in_transaction_id,
                               in_policy_id
                           )),'YYYYMMDDHH24MISS');

     pkg_base_policy_stat.sp_term_earned_premium_get
     (
          in_session_id,
          in_transaction_id,
          v_policy_term_id,
          v_date,
          v_rounding_precision,
          v_out_earned_premium,
          v_out_unearned_premium,
          v_out_written_premium
     );

     if v_session_control.gLogging_Full
     then

           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '... v_out_earned_premium : '||v_out_earned_premium
                ||' v_out_unearned_premium : '||v_out_unearned_premium
                ||' v_out_written_premium : '||v_out_written_premium
           );

     end if;

     if in_earned_unearned_flag = 'U' Then

          v_output := v_out_unearned_premium;

     else
          v_output := v_out_earned_premium;

     end if;

     return v_output;

exception

     when no_data_found then

          return null;

end fn_get_current_term_values;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_billingaccount_timezone_id
--
--   %USAGE
--       This function calculates time zone of Billing Account.
--
--   %ALGORITHM
--       calculates time zone of Billing Account.
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billing_account_id    object.object_id%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_billingaccount_timezone_id
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_id         in             object.object_id%type
)
return number
is

     v_session_control                       pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name              constant  system_log.program_name%type            :=   pkg_name||'fn_billingaccount_timezone_id';

     v_parent_partner_id                     object.object_id%type;
     v_timezone_id                           object.object_id%type;
     v_billaccount_Parent_id                 object.object_id%type;
  v_billaccount_ParentCust_id             object.object_id%type;

     v_billaccount_account_type              object_bv_value.business_variable_value%type;
     v_ref_primary_address                   object_bv_value.business_variable_value%type;
     v_address_country                       object_bv_value.business_variable_value%type;
     v_address_stateprovince                 object_bv_value.business_variable_value%type;

begin

     --
     -- Get the account type of billing account Object
     --

     v_billaccount_account_type    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountType
                                        );

     --
     -- Get the parent entity id of billing account Object
     --

     v_billaccount_Parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountParent
                                        );

     if v_billaccount_account_type = gBillAccType_Customer
     then

          --
          -- Get the reference primary address of parent entity id
          --

          v_ref_primary_address    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billaccount_Parent_id,
                                             gbv_Entity_RefRrimaryAddress
                                        );

          --
          -- Get the address country of primary address
          --

          v_address_country        :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_Country
                                        );

          --
          -- Get the address state/province of primary address
          --

          v_address_stateprovince  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_StateProvince
                                        );

     elsif v_billaccount_account_type in ( gBillAccType_Agency,1546,pkg_db_constant.gBillAccType_Payer) --21648 added under OSPRODUCT-28820
     then

          --
          -- Get the reference primary address of parent entity id
          --

          v_ref_primary_address    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billaccount_Parent_id,
                                             gbv_Partner_RefRrimaryAddress
                                        );

          --
          -- Get the address country of primary address
          --

          v_address_country        :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_Country
                                        );

          --
          -- Get the address state/province of primary address
          --

          v_address_stateprovince  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_StateProvince
                                        );

     elsif v_billaccount_account_type = gBillAccType_Producer
     then

          --
          -- Get the parent partner id of parent entity id
          --

          v_parent_partner_id      :=   pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billaccount_Parent_id
                                        );

          --
          -- Get the reference primary address of parent partner id
          --

          v_ref_primary_address    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_parent_partner_id,
                                             gbv_Partner_RefRrimaryAddress
                                        );

          --
          -- Get the address country of primary address
          --

          v_address_country        :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_Country
                                        );

          --
          -- Get the address state/province of primary address
          --

          v_address_stateprovince  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_StateProvince
                                        );

  elsif v_billaccount_account_type in (gBillAccType_Policy , gBillAccType_Investment )
     then
        -- As the Policy CashAccount and Investment account is created under Policy, hence we are fetching the parent of Policy

     v_billaccount_ParentCust_id  := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billaccount_Parent_id,
                                             gbv_PolicyParent
                                        );

          --
          -- Get the reference primary address of parent entity id
          --

          v_ref_primary_address    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billaccount_ParentCust_id,
                                             gbv_Entity_RefRrimaryAddress
                                        );

          --
          -- Get the address country of primary address
          --

          v_address_country        :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_Country
                                        );

          --
          -- Get the address state/province of primary address
          --

          v_address_stateprovince  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_primary_address,
                                             gbv_Address_StateProvince
                                        );

     end if; -- end of v_billaccount_account_type check

     --
     -- Get the timezone id for the country / StateProvince
     --

     v_timezone_id                 :=   pkg_os_time.fn_os_timezone_long
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_address_country,
                                             v_address_stateprovince
                                        );

return v_timezone_id;

exception
     when others then

          return null;

end fn_billingaccount_timezone_id;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_billacc_current_date
--
--   %USAGE
--        This function returns the current date for a billing account, based on the time zone roll.
--
--   %ALGORITHM
--       1. Get the billing account current date from timezone_billaccount_map.
--       2. Get the billing account current date from timezone_date_map.
--       3. Return the maximum of the 2 dates above.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_billing_account_id      billing account ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_billacc_current_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_id         in             object.object_id%type
)
return date
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_billacc_current_date';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_timezone_roll_date          timezone_date_map.rolled_date%type;
     v_billaccount_roll_date       timezone_billaccount_map.rolled_date%type;
     v_timezone_id                 timezone_date_map.timezone_id%type;
     v_current_billaccount_date    timezone_date_map.rolled_date%type;
     v_return_value                char;

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as I noticed two begin in base
begin

begin
     select
          timezone_id
     into
          v_timezone_id
     from
          dragon_billingaccount
     where
          billingaccount_id = in_billing_account_id;

     exception when others then
     
             -- OSPRODUCT-27576   
             if v_session_control.gLogging_Full
             then
        
                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       'For Billing Account ID: '
                       || in_billing_account_id
                       || ' Datamart is not updated. Getting the Timezone ID: from BV'
                       || v_timezone_id
                  );
        
             end if;     
             
             v_timezone_id          :=   pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_billing_account_id,
                                                31811346 --	Billing Account Timezone
                                           );
                                           
              If v_timezone_id is null then -- OSPRODUCT-27576                             

                   pkg_os_logging.sp_log_error
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        ' .... The input object id ' || in_billing_account_id || ' does not exists in dragon_billinaccount ' ||
                        ' the object type of the input object is ' ||  pkg_os_object.fn_object_type_name_get( in_session_id, in_transaction_id, in_billing_account_id )
                   );
    
                   raise;
              end if; -- OSPRODUCT-27576


     end;

    select
          max(rolled_date)
     into
          v_billaccount_roll_date
     from
          timezone_billaccount_map
     where
         -- timezone_id = v_timezone_id -- KR 09/18
    -- and

          billing_account_id = in_billing_account_id;

     v_timezone_roll_date     :=   pkg_db_functions.fn_get_billacc_tzone_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id
                                   );

     if (v_timezone_roll_date is not null and v_billaccount_roll_date is not null and v_timezone_roll_date >= v_billaccount_roll_date)
     then
          v_current_billaccount_date     :=   v_timezone_roll_date;

     elsif  (v_timezone_roll_date is not null and v_billaccount_roll_date is not null and v_timezone_roll_date < v_billaccount_roll_date)
     then
          v_current_billaccount_date     :=   v_billaccount_roll_date;

     elsif  (v_timezone_roll_date is not null and v_billaccount_roll_date is null)
     then
          v_current_billaccount_date     :=   v_timezone_roll_date;

     elsif  (v_timezone_roll_date is null and v_billaccount_roll_date is not null)
     then
          v_current_billaccount_date     :=   v_billaccount_roll_date;

     else
          v_current_billaccount_date     :=   pkg_os_time.fn_os_sysdate
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_billing_account_id,
                                                   v_timezone_id
                                               );

     end if; -- end of roll date check

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Billing Account ID: '
               || in_billing_account_id
               || ' Timezone ID: '
               || v_timezone_id
               || 'Billing Account rolled Date: '
               || v_billaccount_roll_date
               || 'TimeZone rolled Date: '
               || v_timezone_roll_date
               || 'Billing Account current Date: '
               || v_current_billaccount_date
          );

     end if;

return v_current_billaccount_date;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Exception when fetching the timezone rolled date for billing account ' || in_billing_account_id ||' '||sqlerrm
          );

          v_current_billaccount_date  :=  pkg_os_time.fn_os_sysdate
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_billing_account_id,
                                              v_timezone_id
                                          );

          return v_current_billaccount_date;

end fn_get_billacc_current_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_billacc_tzone_date
--
--   %USAGE
--        This function returns the current date for a policy's time zone.
--
--   %ALGORITHM
--       1. Get the policy current date from timezone_date_map and if not null return it, else return sysdate
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_billing_account_id      billing account ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_billacc_tzone_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_id         in             object.object_id%type
)
return date
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type                 :=   pkg_name||'fn_get_billacc_tzone_date';

     v_timezone_roll_date          timezone_date_map.rolled_date%type;
     v_timezone_id                 timezone_date_map.timezone_id%type;
     v_return_value                char;
     v_sys_date                    date;
     v_idx                         varchar2(50);

begin

     select
          timezone_id
     into
          v_timezone_id
     from
          dragon_billingaccount
     where
          billingaccount_id = in_billing_account_id;
        -- OSPRODUCT-6700  
     pkg_db_object_cache_io.sp_clear_transaction_cache(in_session_id,in_transaction_id);
      
     v_idx   :=  in_transaction_id ||'.'|| v_timezone_id; 

     if v_idx is  null or  (not pkg_db_object_cache_io.g_timzone_date_cache.exists(v_idx))
     then
  
          select
              max(rolled_date)
          into
              v_timezone_roll_date
          from
              timezone_date_map
          where
              timezone_id = v_timezone_id;

              -- Add to the cache
              pkg_db_object_cache_io.g_timzone_date_cache (v_idx) := to_char(v_timezone_roll_date,'YYYYMMDD') ;

          if v_session_control.gLogging_Full 
          then
          pkg_os_logging.sp_log
          (
               in_session_id, 
               in_transaction_id, 
               v_procedure_name,
               ' |||||| TimeZone Date : The 1st call for v_idx=' || v_idx ||
               case when v_timezone_roll_date is null
               then 'NULL'
               else ''
               end || '. Added to the cache.' || to_char(v_timezone_roll_date,'YYYYMMDD') 
          );
          end if;

     else

          v_timezone_roll_date := to_date( pkg_db_object_cache_io.g_timzone_date_cache (v_idx),pkg_os_constant.DragonDateFormatDefault) ;

          if v_session_control.gLogging_Full 
          then
              pkg_os_logging.sp_log
              (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   ' |||||| Getting TimeZone Date  from the cache for v_idx=' || v_idx ||
                   ', found date=' || to_char(v_timezone_roll_date,'YYYYMMDD') 
              );
          end if;

      end if;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Billing Account ID: '
               || in_billing_account_id
               || ' Timezone ID: '
               || v_timezone_id
               || ' TimeZone rolled Date: '
               || v_timezone_roll_date
          );

     end if;
     -- 2017-11-02 Cheryl Use same logic as fin_get_policy_tzone_date
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some small changes in code

     v_sys_date  :=    pkg_os_time.fn_os_sysdate
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              v_timezone_id
                         );

     if v_timezone_roll_date < v_sys_date
     then
          v_timezone_roll_date   :=  v_sys_date ;
     end if;

     if v_timezone_roll_date is not null
     then

          return v_timezone_roll_date;
     else

          v_timezone_roll_date   :=   v_sys_date ;
          return v_timezone_roll_date;

     end if;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... billing account record doesnt exist in timezone_date_map, check nightly process'
          );

          v_timezone_roll_date  :=  pkg_os_time.fn_os_sysdate
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_billing_account_id,
                                         v_timezone_id
                                    );
          return v_timezone_roll_date;

end fn_get_billacc_tzone_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_initialize_billing_address
--
--   %USAGE
--        This function initialize the billing address based on PTP id.
--
--   %ALGORITHM
--       Initialize the billing address based on PTP id.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_ptp_id                  object.object_id%type
--
-----------------------------------------------------------------------------------------------------------------------------------------------------


function fn_initialize_billing_address
(
     in_session_id            in  object.object_id%type,
     in_transaction_id        in  object.object_id%type,
     in_ptp_id                in  object.object_id%type
)
return number
is

     v_count                        number;
     v_address_id                   number;
     v_ultimate_parent_id           object.object_id%type;

begin

     --
     -- Get the parent of Object Type Customer
     --

     v_ultimate_parent_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                  (
                                       in_session_id ,
                                       in_transaction_id ,
                                       in_ptp_id,
                                       pkg_os_wf_task.gobjType_ParentCustomer
                                  );

     select
          count(1)
     into
          v_count
     from
          dragon_address
     where
          address_parent_object_id   =   v_ultimate_parent_id;

     if v_count   =   2
     then

          select
               address_id
          into
               v_address_id
          from
               dragon_address
          where
               address_parent_object_id=v_ultimate_parent_id
          and
               zip_code is not null;

     end if;

return v_address_id;

exception
     when others then

          return  null;

end fn_initialize_billing_address;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_exchange_current_date
--
--   %USAGE
--        This function returns the current date for system, based on the time zone roll.
--
--   %ALGORITHM
--       1. Get the system current date from timezone_exchange_map.
--       2. Get the system current date from timezone_date_map.
--       3. Return the maximum of the 2 dates above.
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_exchange_id             exchange ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_exchange_current_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_exchange_id                in             object.object_id%type
)
return date
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_exchange_current_date';

     v_return_value                char;

     v_timezone_roll_date          timezone_date_map.rolled_date%type;
     v_exchange_roll_date          timezone_exchange_map.rolled_date%type;
     v_timezone_id                 timezone_date_map.timezone_id%type;
     v_current_exchange_date       timezone_date_map.rolled_date%type;

begin

     v_timezone_id            :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_exchange_id,
                                        gbv_ExchangeTimezone
                                   );

     select
          max(rolled_date)
     into
          v_exchange_roll_date
     from
          timezone_exchange_map
     where
          timezone_id = v_timezone_id
     and
          exchange_id = in_exchange_id;

     v_timezone_roll_date     :=   pkg_db_functions.fn_get_exchange_tzone_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_exchange_id
                                   );

     if (v_timezone_roll_date is not null and v_exchange_roll_date is not null and v_timezone_roll_date >= v_exchange_roll_date)
     then
          v_current_exchange_date        :=   v_timezone_roll_date;

     elsif  (v_timezone_roll_date is not null and v_exchange_roll_date is not null and v_timezone_roll_date < v_exchange_roll_date)
     then
          v_current_exchange_date        :=   v_exchange_roll_date;

     elsif  (v_timezone_roll_date is not null and v_exchange_roll_date is null)
     then
          v_current_exchange_date        :=   v_timezone_roll_date;

     elsif  (v_timezone_roll_date is null and v_exchange_roll_date is not null)
     then
          v_current_exchange_date        :=   v_exchange_roll_date;

     else
          v_current_exchange_date        :=   pkg_os_time.fn_os_sysdate
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_exchange_id,
                                                   v_timezone_id
                                               );

     end if; -- end of roll date check

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Exchange ID: '
               || in_exchange_id
               || ' Timezone ID: '
               || v_timezone_id
               || 'Exchange rolled Date: '
               || v_exchange_roll_date
               || 'TimeZone rolled Date: '
               || v_timezone_roll_date
               || 'Exchange current Date: '
               || v_current_exchange_date
          );

     end if;

return v_current_exchange_date;

exception
     when others then

     pkg_os_logging.sp_log_error
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '... exchange record doesnt exist in timezone_date_map and timezone_exchange_map, check nightly process which updates this'
     );

     v_current_exchange_date :=    pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_exchange_id,
                                        v_timezone_id
                                   );

return v_current_exchange_date;

end fn_get_exchange_current_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_exchange_tzone_date
--
--   %USAGE
--        This function returns the current date for a policy's time zone.
--
--   %ALGORITHM
--       1. Get the policy current date from timezone_date_map and if not null return it, else return sysdate
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_exchange_id             exchange ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_exchange_tzone_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_exchange_id                in             object.object_id%type
)
return date
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_exchange_tzone_date';
     v_return_value                char;
     v_timezone_roll_date          timezone_date_map.rolled_date%type;
     v_timezone_id                 timezone_date_map.timezone_id%type;

begin

     v_timezone_id            :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_exchange_id,
                                        gbv_ExchangeTimezone
                                   );

     select
          max(rolled_date)
     into
          v_timezone_roll_date
     from
          timezone_date_map
     where
          timezone_id = v_timezone_id;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Exchange ID: '
               || in_exchange_id
               || ' Timezone ID: '
               || v_timezone_id
               || ' TimeZone rolled Date: '
               || v_timezone_roll_date

          );

     end if;

     if v_timezone_roll_date is not null
     then

           return v_timezone_roll_date;

     end if;

     v_timezone_roll_date    :=     pkg_os_time.fn_os_sysdate
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_exchange_id,
                                         v_timezone_id
                                     );

     return v_timezone_roll_date;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... exchange record doesnt exist in timezone_date_map, check nightly process'
          );

          v_timezone_roll_date   :=   pkg_os_time.fn_os_sysdate
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_exchange_id,
                                           v_timezone_id
                                      );
return v_timezone_roll_date;

end fn_get_exchange_tzone_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_installment_initial_amt
--
--   %USAGE
--        This function returns the initial amount for installment.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                session ID
--   %PARAM     in_transaction_id            transaction ID
--   %PARAM     in_installment_id            installment ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_installment_initial_amt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_installment_id                  in             object.object_id%type
)
return number
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_installment_initial_amt';
     v_initial_amount              number := 0;

begin

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as select query changed in gcna
     select
          nvl(sum(initial_amount),0)
     into
          v_initial_amount
     from
          dragon_fitem
     where
          fitem_type_id = gFItemType_Debit
     and
          fitem_category_id not in  (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm,gFItem_Category_DefPremComm,gFitem_category_LossGain)--OSPRODUCT-12759
     and
          fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj) --PMADEV-565 exclude PLR Retro Adj
     and
          fitem_transaction_type_id <> gFITransactionType_Reversal --OSBILLING-7354
      and
          installment_id = in_installment_id;--to_char(in_installment_id); -- OSBILLING-3709

     return v_initial_amount;

exception when others then

     pkg_os_logging.sp_log_error
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '... error in fn_get_installment_initial_amt '||sqlerrm
     );

     return v_initial_amount;

end fn_get_installment_initial_amt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_installment_balance_amt
--
--   %USAGE
--        This function returns the balance amount for installment.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                session ID
--   %PARAM     in_transaction_id            transaction ID
--   %PARAM     in_installment_id            installment ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_installment_balance_amt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_installment_id                  in             object.object_id%type,
      in_policy_id                       in             object.OBJECT_ID%type    --OSPRODUCT-1764
)
return number
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_installment_balance_amt';
     v_balance_amount              number := 0;

begin

     select
          nvl(sum(balance),0)
     into
          v_balance_amount
     from
          dragon_fitem
     where
           policy_id= in_policy_id  --OSPRODUCT-1764
      and
          fitem_type_id = gFItemType_Debit
     and
          fitem_category_id not in  (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm,gFItem_Category_DefPremComm,gFitem_category_LossGain)--OSPRODUCT-12759
     and
          fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj) --PMADEV-565 exclude PLR Retro Adj
     and
          installment_id = in_installment_id; -- to_char(in_installment_id);-- OSBILLING-3709

     return v_balance_amount;

exception when others then

     pkg_os_logging.sp_log_error
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '... error in fn_get_installment_balance_amt '||sqlerrm
     );

     return v_balance_amount;

end fn_get_installment_balance_amt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_stub_installment_number
--
--   %USAGE
--        This function returns the stub installment number.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_current_stub_id         current stub ID
--   %PARAM     in_installment_start_num   installment start num
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_stub_installment_number
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_current_stub_id                 in             object.object_id%type,
     in_installment_start_num           in             number
)
return number
is

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_stub_installment_number';
     v_next_stub_number            number;
     v_current_stub_number         number;
     v_current_stub_inst           number;
     v_current_stub_count          number;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Current Stub ID: '
               || in_current_stub_id
               || ' Installment Start Number: '
               || in_installment_start_num
          );

     end if;

     v_current_stub_number    :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_current_stub_id,
                                        gbv_payplanschpay_inst_num
                                   );

     v_current_stub_inst      :=   substr(v_current_stub_number,1,instr(v_current_stub_number,'.')-1);
     v_current_stub_count     :=   substr(v_current_stub_number,instr(v_current_stub_number,'.')+1);


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' current stub installment : '
               || v_current_stub_inst
               || ' current stub count : '
               || v_current_stub_count
          );

     end if;

     if (in_installment_start_num-1) = v_current_stub_inst
     then
          v_next_stub_number  :=   to_number((in_installment_start_num-1)||'.'||(v_current_stub_count+1));
     else
          v_next_stub_number  :=   to_number((in_installment_start_num-1)||'.'||1);
     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' next stub number : '
               || v_next_stub_number
          );

     end if;

     return v_next_stub_number;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... error while getting next stub number '
          );

          v_next_stub_number    :=   999;

return v_next_stub_number;

end fn_get_stub_installment_number;



-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_accounting_period

--
--   %USAGE
--        Generic code that takes the effective and process dates of an object, and returns the accounting period. This includes a call to a
--        customer specific override procedure.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_current_stub_id         current stub ID
--   %PARAM     in_object_id               fitem object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_accounting_period
(
     in_session_id            in   object.object_id%type,
     in_transaction_id        in   object.object_id%type,
     in_object_id             in   object.object_id%type,
     in_effective_date        in   date,
     in_process_date          in   date
)
return varchar2 is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_accounting_period';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_accounting_date        date;
     v_source_type            number;
     v_return_value           varchar2(100);
     v_idx                    varchar2(100); -- 

begin

     --
     --   Take the greater of process or effective date ...
     --

     if  (in_effective_date is not null and in_process_date is not  null and trunc(in_effective_date) >= trunc(in_process_date) )
     then

          v_accounting_date := trunc(in_effective_date);

     elsif ( in_effective_date is not null and in_process_date is not  null and in_process_date > in_effective_date )
     then

          v_accounting_date := trunc(in_process_date);

     elsif (in_effective_date is not null and in_process_date is   null)
     then

          v_accounting_date   :=   in_effective_date;

     elsif (in_effective_date is  null and in_process_date is  not null)
     then

          v_accounting_date   :=   in_process_date;
     else

          -- Something is VERY wrong!

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Unable to find accounting date for  Billing Account Trx Set ID:'
               || in_object_id
               || ' Effective Date:'
               || in_effective_date
               || ' Process Date: '
               || in_process_date
          );

          raise no_data_found;

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Accounting Date: '
               || v_accounting_date
          );

     end if;
     
     -- OSPRODUCT-6983
     v_idx := in_transaction_id || ':' || to_char(v_accounting_date, 'yyyymmddhh24miss');
     
     if pkg_db_object_cache_io.g_formatted_acct_date_cache.exists(v_idx) then
     
          v_return_value := pkg_db_object_cache_io.g_formatted_acct_date_cache (v_idx);
                   
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Value found from cache: ' || v_return_value
               );
                    
          end if;
     
     end if;
     
     if v_return_value is null then

          --
          --   Our handling is evidently different for legacy policies. @@@VG: Why?
          --

          v_source_type := nvl(pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               in_object_id,
               27926602 -- Origin/Source Type
          ),0);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Transaction Source: '
                    || v_source_type
               );

          end if;

          if v_source_type = 1 then -- Legacy Policies

               v_return_value := fn_get_acct_prd_formatted(in_session_id, in_transaction_id, in_process_date);

          else

               --
               -- See if the installation has some specific accounting period definitions ...
               --
               -- OSBILLING-4795 TBD function has new paramter.
               -- OSPRODUCT-6983
               v_return_value := pkg_cs_db_functions.fn_get_acct_prd_formatted(in_session_id, in_transaction_id, in_object_id, in_effective_date, in_process_date, v_accounting_date);

               if v_return_value is not null then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Custom Accounting Period: '
                              || v_return_value
                         );

                    end if;
                    
               else

                    v_return_value := fn_get_acct_prd_formatted(in_session_id, in_transaction_id, v_accounting_date);

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Standard GR(Eff,Proc) Accounting Period:'
                              || v_return_value
                         );

                    end if;

               end if; -- if there is no custom accounting period defined for the date in question ...

          end if; -- For non-legacy transactions sets ...
          
          -- Load the cache
          pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);
          
          pkg_db_object_cache_io.g_formatted_acct_date_cache(v_idx) := v_return_value;
          
     end if;

     return v_return_value;

end fn_get_accounting_period;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitem_acct_prd
--
--   %USAGE
--        This function returns the accounting period for the fitem
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_current_stub_id         current stub ID
--   %PARAM     in_object_id               fitem object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_fitem_acct_prd
(
     in_session_id            in   object.object_id%type,
     in_transaction_id        in   object.object_id%type,
     in_object_id             in   object.object_id%type
)
return varchar2
is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_fitem_acct_prd';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value           varchar2(100);
     v_effective_date         date;
     v_creation_date          date;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_accounting_date        date;
     v_source_type            number;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
begin

     v_effective_date :=       to_date(pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   29710446
                              ),'YYYYMMDDHH24MISS');

     v_creation_date :=      to_date(pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   210151
                              ),'YYYYMMDDHH24MISS');

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| For FItemID: '
               || in_object_id
               || ' v_effective_date: '
               || v_effective_date
               || ' v_creation_date: '
               || v_creation_date
          );

     end if;

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code change
     v_return_value := fn_get_accounting_period
     (
          in_session_id,
          in_transaction_id,
          in_object_id,
          v_effective_date,
          v_creation_date
     );

     return v_return_value;

end fn_get_fitem_acct_prd;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitransaction_acct_prd
--
--   %USAGE
--        This function returns the accounting period for the fitransaction
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_current_stub_id         current stub ID
--   %PARAM     in_object_id               fitransaction object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code change in below function similar to above function
function fn_get_fitransaction_acct_prd
(
     in_session_id            in   object.object_id%type,
     in_transaction_id        in   object.object_id%type,
     in_object_id             in   object.object_id%type
)
return varchar2
is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_fitransaction_acct_prd';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value           varchar2(100);
     v_effective_date         date;
     v_process_date           date;


begin

     v_effective_date :=      to_date(pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   29709246            -- @@VG Provide a proper constant
                              ),'YYYYMMDDHH24MISS');

     v_process_date :=      to_date(pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   29708446            -- @@VG Provide a proper constant
                              ),'YYYYMMDDHH24MISS');

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| For FITrxID:'
               || in_object_id
               || ' Effective Date: '
               || v_effective_date
               || ' Process Date: '
               || v_process_date
          );

     end if;

     v_return_value := fn_get_accounting_period
     (
          in_session_id,
          in_transaction_id,
          in_object_id,
          v_effective_date,
          v_process_date
     );

     return v_return_value;

end fn_get_fitransaction_acct_prd;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitransset_acct_prd
--
--   %USAGE
--        This function returns the accounting period for the fitransactionset
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_current_stub_id         current stub ID
--   %PARAM     in_object_id               fitransactionset object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code change in below function similar to above function

function fn_get_fitransset_acct_prd
(
     in_session_id            in   object.object_id%type,
     in_transaction_id        in   object.object_id%type,
     in_object_id             in   object.object_id%type
)
return varchar2
is


     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_fitransset_acct_prd';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value           varchar2(100) := null;
     v_effective_date         date;
     v_processed_date         date;


begin

     v_effective_date :=      to_date(pkg_os_object_io.fn_object_bv_path_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   '32502146.212029' -- @@@ What the hell is this?
                              ),'YYYYMMDDHH24MISS');

     if ( v_effective_date is null)
     then
           v_effective_date :=      to_date(pkg_os_object_io.fn_object_bv_path_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        29707646 -- Date Posted
                                   ),'YYYYMMDDHH24MISS');

     end if;

     v_processed_date :=      to_date(pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   29707246
                              ),'YYYYMMDDHH24MISS');

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| For BillingAccountTrxSetID: '
               || in_object_id
               || ' Effective Date: '
               || v_effective_date
               || ' Process Date: '
               || v_processed_date
          );

     end if;

     v_return_value := fn_get_accounting_period
     (
          in_session_id,
          in_transaction_id,
          in_object_id,
          v_effective_date,
          v_processed_date
     );

     return v_return_value;

end fn_get_fitransset_acct_prd;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_gl_acct_prd  -- UTPRODUCT-3402
(
     in_session_id            in   object.object_id%type,
     in_transaction_id        in   object.object_id%type,
     in_gl_object_id          in   object.object_id%type
)
return varchar2
is
     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_gl_acct_prd';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_return_value           varchar2(100) := null;
     
     v_gl_date                date;
     
begin
     v_gl_date :=  to_date(pkg_os_object_io.fn_object_bv_path_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_gl_object_id,
                                pkg_db_gl_transaction.gbv_GLDate
                           ),
                           pkg_os_constant.DragonDateFormatDefault
                    );
                    
     v_return_value := fn_get_accounting_period
                       (
                            in_session_id,
                            in_transaction_id,
                            in_gl_object_id,
                            v_gl_date,
                            null
                       );

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..... For GL object '|| in_gl_object_id ||
               'the GL_Date='|| to_char(v_gl_date,pkg_os_constant.DragonDateFormatNative) ||
               ', Accounting Period=' || v_return_value
          );
     end if;
     
     return v_return_value;  
                       
end fn_get_gl_acct_prd; 
-----------------------------------------------------------------------------------------------------------------------------------------------------

--
--   %NAME
--        fn_validate_auto_apply_policy

--
--   %USAGE
--        This function returns the accounting period for the fitransactionset

--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               billing account object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_validate_auto_apply_policy


(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_id                       in             object.object_id%type


)
return varchar2
as

     cursor c1 is
          select
               policy_id
          from
               dragon_policy
          where
               responsible_billing_account = in_object_id;

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_validate_auto_apply_policy';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_val             varchar2(1) := 'F';
     v_true_count             number := 0;
     v_policywise_cash        number;
     v_policy_past_due        number;
     v_policy_current_due     number;
     v_total_due              number;

begin

     for i in c1 loop

          v_policywise_cash        := fn_policy_cash_detail(i.policy_id );
          v_policy_past_due        := fn_policy_due_amounts(i.policy_id, gPolicy_BillMeth_Direct, PastDue);
          v_policy_current_due     := fn_policy_due_amounts(i.policy_id, gPolicy_BillMeth_Direct, CurrentDue);
          v_total_due              := nvl(v_policy_past_due,0) + nvl(v_policy_current_due,0);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'For Policy ID: '
                    || i.policy_id
                    || ' v_policywise_cash: '
                    || v_policywise_cash
                    || 'v_policy_past_due: '
                    || v_policy_past_due
                    || 'v_policy_current_due: '
                    || v_policy_current_due
                    || 'v_total_due: '
                    || v_total_due
               );

          end if;

          if nvl(v_policywise_cash,0) >= nvl(v_total_due,0) and nvl(v_policywise_cash,0) <> 0
          then

               v_true_count := v_true_count + 1;

          end if;

     end loop;

     if v_true_count >= 1 then

          v_return_val := 'T';

     else

          v_return_val := 'F';

     end if;

     return v_return_val;


exception when others
then
     v_return_val := 'F';








  return v_return_val;


end fn_validate_auto_apply_policy;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_payment_details
--
--   %USAGE
--        This function returns the payment details for the fitransaction
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               billing account object ID

--
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code change in below function

function fn_fitem_payment_details
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                  in   object.object_id%type
)
return varchar2
is

     v_payment_type                number;
     v_check_no                   object_bv_value.business_variable_value%type;
     v_check_reference_details    object_bv_value.business_variable_value%type;
     v_ref_no                      object_bv_value.business_variable_value%type;
     v_reference_details           object_bv_value.business_variable_value%type;
     v_other_no                    object_bv_value.business_variable_value%type;
     v_credit_card_no              object_bv_value.business_variable_value%type;
     v_money_order                 object_bv_value.business_variable_value%type;
     v_bank_code                   object_bv_value.business_variable_value%type;
     v_description                 object_bv_value.business_variable_value%type;
     v_return_value                object_bv_value.business_variable_value%type;
      v_eft_acc_no                 object_bv_value.business_variable_value%type;
Begin

     v_payment_type          :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   gbv_FITrx_Payment_Type       ---   Payment Type
                              );


      ----OSBILLING-7437(to be used only in utica env) payment modes added-Check Insured, Check Agent, Check Mortgagee, Check Other, Premium Finance, Utica First, Manual Lockbox
     if   v_payment_type in (101,gFITrxPay_Check,gFITrxPay_Returned_Check,gFITrxPay_Broker_Check,gFITrxPay_Certified_Check,gFITrxPay_Check_Insured,gFITrxPay_Check_Agent,gFITrxPay_Check_Mortgagee,gFITrxPay_Check_Other,gFITrxPay_Premium_Finance,gFITrxPay_Utica_First,gFITrxPay_Manual_Lockbox) -- Check,Returned Check,Broker Check,Certified Check
     then



          v_Check_no    :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   gbv_FITrx_Check_No           --Check No
                              );

          v_Check_reference_details        :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_object_id,
                                                  gbv_FITrx_Check_Ref_Details           --Check Reference Details
                                             );

          if      v_Check_no is null and v_Check_reference_details is not null
          then

               v_return_value :=   'Check Reference Details - '||v_Check_reference_details;

          elsif v_Check_no is not null and v_Check_reference_details is null
          then

               v_return_value :=   'Check No. - '||v_Check_no;

          elsif v_Check_no is not null and v_Check_reference_details is not null
          then

               v_return_value :=  'Check No. - '||v_Check_no||', '|| v_Check_reference_details;

          else
                 v_return_value := 'Check';
      end if;

     elsif  v_payment_type = gFITrxPay_Internet_Payment --Internet_payment
     then

          v_ref_no  :=   pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,


                              in_object_id,
                              gbv_FITrx_Ref_No           --  Ref No.
                         );

          v_reference_details :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        gbv_FITrx_Ref_Details               --  Reference Details
                                   );


          if       v_ref_no is null and v_reference_details is not null
          then

               v_return_value :=   'Internet Payment Reference Details - '||v_reference_details;

          elsif v_ref_no is not null and v_reference_details is null
          then

               v_return_value :=   'Internet Payment Ref No. - '||v_ref_no;

          elsif v_ref_no is not null and v_reference_details is not null
          then

               v_return_value :=  'Internet Payment Ref No. - '||v_ref_no||',  '|| v_reference_details;

          end if;

     elsif v_payment_type = gFITrxPay_Money_Order--Money_order
     then


          v_money_order  :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,


                                   in_object_id,
                                   gbv_FITrx_Money_Order           -- Money Order no.
                              );


          v_reference_details :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        gbv_FITrx_Check_Ref_Details -- UTPRODUCT-2657 gbv_FITrx_Ref_Details  -- Reference Details
                                   );


          if       v_money_order is null and v_reference_details is not null
          then

               v_return_value :=   'Money order Reference Details - '||v_reference_details;

          elsif v_money_order is not null and v_reference_details is null
          then

               v_return_value :=   'Money order No. - '||v_money_order;

          elsif v_money_order is not null and v_reference_details is not null
          then

               v_return_value :=   'Money Order No. - '||v_money_order||',  '|| v_reference_details;

          end if;


     elsif v_payment_type = gFITrxPay_Other--Other
     then


          v_other_no     :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   gbv_FITrx_Other_No           ---  Other No.
                              );

          v_reference_details :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        gbv_FITrx_Ref_Details           --  Reference Details
                                   );


          if       v_other_no is null and v_reference_details is not null
          then




               v_return_value :=  'Other Reference Details - '||v_reference_details;

          elsif v_other_no is not null and v_reference_details is null
          then

               v_return_value :=  'Other No. - '||v_other_no;

          elsif v_other_no is not null and v_reference_details is not null
          then

               v_return_value :=  'Other No. - '||v_other_no||',  '||v_reference_details;

          end if;


     elsif v_payment_type = gFITrxPay_Wire_Transfer -- Wire Transfer
     then


          v_bank_code    :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   gbv_FITrx_Bank_Code --    Bank Code
                              );

          v_description  :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id,
                                   gbv_FITrx_Description --   Description
                              );


          if       v_bank_code is null and v_description is not null
          then

               v_return_value :=  'Wire transfer Description - '||v_description;

          elsif v_bank_code is not null and v_description is null
          then

               v_return_value :=  'Wire transfer Bank Code. - '|| v_bank_code;

          elsif v_bank_code is not null and v_description is not null
          then

               v_return_value :=  'Wire transfer Bank Code. - '||v_bank_code||', Description - '||v_description;

          end if;




-- Utica specific agent and customer portal payment modes --OSBILLING-7764
     elsif v_payment_type in (gFITrxPay_Credit_Card, g_FITrx_Pay_AgntPrtl_CC, g_FITrx_Pay_CustPrtl_CC) --Credit Card
     then

         ----OSBILLING-1732
         v_credit_card_no    :=   NVL(
                                    pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Credit_Card_No --    Credit card number
                                     ),
                                      pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Credit_Card_No_New --    New Credit card number
                                     )
                                     );


          if       v_credit_card_no is not null
          then

               v_return_value :=    'Card ending with ' || SUBSTR(v_credit_card_no, -4);

          end if;
-- Utica specific agent and customer portal payment modes --OSBILLING-7764
           elsif v_payment_type in (gFITrxPay_Eft_type, g_FITrx_Pay_AgntPrtl_EFT, g_FITrx_Pay_CustPrtl_EFT) --EFT payment
     then


         ----OSBILLING-1732
          v_eft_acc_no    :=  NVL(
                                     pkg_os_object_io.fn_object_bv_get

                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,


                                          gbv_FITrx_eft_acc_no --    EFT account number

                                     ),
                                     pkg_os_object_io.fn_object_bv_get

                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_eft_acc_no_new --    EFT account number new

                                     )
                                     );

          if       v_eft_acc_no is not null
          then


               v_return_value :=    'Account ending with ' || SUBSTR(v_eft_acc_no, -4);


          end if;


     elsif v_payment_type = gFITrxPay_Cash --Cash
     then



          v_return_value :=  'Cash';



     elsif v_payment_type = gFITrxPay_Journal --Journal
     then


          v_return_value :=  'Journal';

     --GCNA-945 start EFT Scheduled withdrawal
     elsif v_payment_type = 301 --EFT payment
     then

         v_return_value :=  'EFT Payment';

     elsif v_payment_type = 201 --CC payment
     then

         v_return_value :=  'Credit Card Payment';
     --GCNA-945 end

     end if;

     return v_return_value;

exception
   when others then

     return null;

end fn_fitem_payment_details;

-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-6983
function fn_fitem_bill_trx_details

(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                  in   object.object_id%type,
     batch_type_id                 in   number
)
return varchar2
is

     -- 2016-07-14 osbilling-1446 Cheryl
     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_fitem_bill_trx_details';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_payment_type                number;
     v_Check_type                 varchar2(100);
     v_cc_last_first_names         varchar2(200);
     v_eft_last_first_names        varchar2(200);
     v_cc_exp_month_year           varchar2(12);
     v_Check_no                    object_bv_value.business_variable_value%type;
     v_Check_reference_details     object_bv_value.business_variable_value%type;
     v_ref_no                      object_bv_value.business_variable_value%type;
     v_reference_details           object_bv_value.business_variable_value%type;
     v_other_no                    object_bv_value.business_variable_value%type;
     v_credit_card_no              object_bv_value.business_variable_value%type;
     v_cc_last_name                object_bv_value.business_variable_value%type;
     v_cc_first_name               object_bv_value.business_variable_value%type;
     v_cc_exp_month                object_bv_value.business_variable_value%type;
     v_cc_exp_year                 object_bv_value.business_variable_value%type;
     v_cc_type                     object_bv_value.business_variable_value%type;
     v_money_order                 object_bv_value.business_variable_value%type;
     v_bank_code                   object_bv_value.business_variable_value%type;
     v_description                 object_bv_value.business_variable_value%type;
     v_return_value                object_bv_value.business_variable_value%type;
     v_eft_postal                  object_bv_value.business_variable_value%type;
     v_eft_transit                 object_bv_value.business_variable_value%type;
     v_eft_bank_name               object_bv_value.business_variable_value%type;
     v_eft_id_no                   object_bv_value.business_variable_value%type;
     v_eft_acc_no                  object_bv_value.business_variable_value%type;
     v_eft_first_name              object_bv_value.business_variable_value%type;
     v_eft_last_name               object_bv_value.business_variable_value%type;
     v_eft_address1                object_bv_value.business_variable_value%type;

     v_ref_createdBy               object_bv_value.business_variable_value%type;
     v_original_payment            object_bv_value.business_variable_value%type;
     v_rel_disb_prf                object_bv_value.business_variable_value%type;
     v_rel_cash_trnsfr_prf         object_bv_value.business_variable_value%type;
     v_FITrxSet_Created_by         object_bv_value.business_variable_value%type;   --OSPRODUCT-10284
     v_batch_type_id               object_bv_value.business_variable_value%type;

     v_rev_reason                  varchar2(50);

     v_eft_currency                object_bv_value.business_variable_value%type;

     v_policy_transaction_id       object.object_id%type;
     --2016-10-18 Cheryl osbilling-3209
     v_fitem_id                    object.object_id%type;
     v_category_id                 object.object_id%type;
     v_ref_cur_fitrxn_id           object.object_id%type;     --OSPRODUCT-10284

     --OSBILLING-5269
     v_parent_object_id            object.object_id%type :=  pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,in_object_id);
     v_ctf_object_id               object.object_id%type :=  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_parent_object_id,32828640);  -- 32828640 gbv_Reference_Ass_Profile
     v_idx                         varchar2(500);
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log   -- VAULTDEV-9020 OSBILLING-5594
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For object ID: '
               || in_object_id
               || ' batch_type_id '
               || batch_type_id
               || ' v_rev_reason: '
               || v_rev_reason
          );

     end if;
          
     -- Get the value from cache
     if batch_type_id in (601,701,6001,6002)
     then
         v_idx := in_transaction_id || ':' || in_object_id || ':' || v_ctf_object_id; --OSPRODUCT-10717
     else
         v_idx := in_transaction_id || ':' || in_object_id;
     end if;    
     
     if pkg_db_object_cache_io.g_bill_trx_details.exists(v_idx) then
          
          v_return_value := pkg_db_object_cache_io.g_bill_trx_details(v_idx);
          
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Value found from cache: ' || v_return_value
               );
                    
          end if;
     
     end if;

     --  2016-07-14 Cheryl osbilling-1446 added 701 Manual Cash Apply
     if v_return_value is null then

          if batch_type_id in ( 601, 
                                701,
                                6001,  --Scheduled EFT   -- OSBILLING-5269
                                6002   --Scheduled CC/DC -- OSBILLING-5269
                              ) 
          then
                              
               v_payment_type := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Payment_Type       ---   Payment Type
                                     );
                                     
               v_FITrxSet_Created_by := pkg_os_object_io.fn_object_bv_get   --OSPRODUCT-10284
										 (
											  in_session_id,
											  in_transaction_id,
											  v_parent_object_id,
											  pkg_db_object.gbv_FITrxSet_CreatedbyBatch     
										 );   
										 
			   v_batch_type_id     := pkg_os_object_io.fn_object_bv_get   --OSPRODUCT-10284
										 (
											  in_session_id,
											  in_transaction_id,
											  v_FITrxSet_Created_by,
											  gbv_FITrxSet_BatchType   
										 );						 
     
               ----OSBILLING-7437(to be used only in utica env) payment modes added-Check Insured, Check Agent, Check Mortgagee, Check Other, Premium Finance, Utica First, Manual Lockbox
               if v_payment_type in (gFITrxPay_Check,gFITrxPay_Returned_Check,gFITrxPay_Broker_Check,gFITrxPay_Certified_Check,gFITrxPay_Check_Insured,gFITrxPay_Check_Agent,gFITrxPay_Check_Mortgagee,gFITrxPay_Check_Other,gFITrxPay_Premium_Finance,gFITrxPay_Utica_First,gFITrxPay_Manual_Lockbox) -- Check,Returned Check,Broker Check,Certified Check
               then
     
     
                    ----OSBILLING-7437(Used function instead of case when)
                    v_Check_type := nvl(pkg_os_lookup.fn_lookup_list_text_get( gFITransaction_Payment_Type, v_payment_type),'Check'); --OSPRODUCT-1337 Cheque to Check
                    --CASE v_payment_type
                    --WHEN gFITrxPay_Check THEN 'Check'
                    --WHEN gFITrxPay_Returned_Check THEN 'Returned Check'
                    --WHEN gFITrxPay_Broker_Check THEN 'Broker Check'
                    --WHEN gFITrxPay_Certified_Check THEN 'Certified Check'
                    --ELSE 'Check'
                    --END;
                    v_Check_no := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Check_No           --Check No
                                     );
     
                    v_Check_reference_details := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_object_id,
                                                         gbv_FITrx_Check_Ref_Details           --Check Reference Details
                                                    );
     
                    if v_Check_no is null and v_Check_reference_details is not null
                    then
     
                         v_return_value :=   v_Check_type || ', ' || v_Check_reference_details;
     
                    elsif v_Check_no is not null and v_Check_reference_details is null
                    then
     
                         v_return_value :=   v_Check_type || ', ' || v_Check_no;
     
                    elsif v_Check_no is not null and v_Check_reference_details is not null
                    then
     
                         v_return_value :=  v_Check_type || ', ' || v_Check_no || ', ' || v_Check_reference_details;
     
                    else
     
                         v_return_value :=  v_Check_type;
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Internet_Payment --Internet_payment
               then
     
                    v_ref_no  := pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_object_id,
                                     gbv_FITrx_Ref_No           --  Ref No.
                                   );
     
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                             (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_Ref_Details               --  Reference Details
                                             );
     
     
                    if v_ref_no is null and v_reference_details is not null
                    then
     
                         v_return_value :=   'Internet Payment, '||v_reference_details;
     
                    elsif v_ref_no is not null and v_reference_details is null
                    then
     
                         v_return_value :=   'Internet Payment, '||v_ref_no;
     
                    elsif v_ref_no is not null and v_reference_details is not null
                    then
     
                         v_return_value :=  'Internet Payment, '||v_ref_no||', '|| v_reference_details;
     
                    else
     
                         v_return_value :=  'Internet Payment';
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Money_Order--Money_order
               then
     
                    v_money_order := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Money_Order           -- Money Order no.
                                     );
                                     
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                             (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_Ref_Details           -- Reference Details
                                             );
     
     
                    if v_money_order is null and v_reference_details is not null
                    then
     
                         v_return_value :=   'Money Order, '||v_reference_details;
     
                    elsif v_money_order is not null and v_reference_details is null
                    then
     
                         v_return_value :=   'Money Order, '||v_money_order;
     
                    elsif v_money_order is not null and v_reference_details is not null
                    then
     
                         v_return_value :=   'Money Order, '||v_money_order||', '|| v_reference_details;
     
                    else
     
                         v_return_value :=   'Money Order';
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Other--Other
               then
     
                    v_other_no := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Other_No           ---  Other No.
                                     );
     
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                             (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_Ref_Details           --  Reference Details
     
     
                                             );
     
     
                    if v_other_no is null and v_reference_details is not null
                    then
     
                         v_return_value :=  'Other, '||v_reference_details;
     
                    elsif v_other_no is not null and v_reference_details is null
                    then
     
                         v_return_value :=  'Other, '||v_other_no;
     
                    elsif v_other_no is not null and v_reference_details is not null
                    then
     
                         v_return_value :=  'Other, '||v_other_no||', '||v_reference_details;
     
                    else
     
                         v_return_value :=  'Other';
                    end if;
     
     
               --
               -- 2016-11-08 Cheryl osbilling-2222 add the bank code into v_return_value
               --                                  change wording from wire transfer to just wire
               --
               elsif v_payment_type = gFITrxPay_Wire_Transfer -- Wire Transfer
               then
     
                    v_bank_code    :=  pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Bank_Code --    Bank Code
                                     );
     
     
     
     
                    v_description  :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_object_id,
                                          gbv_FITrx_Description --   Description
                                     );
     
                    --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
                    --Need to ask as some part is commented
                    if     v_bank_code is not null and v_description is not null
                    then
     
                         v_return_value :=  'Wire, ' || v_bank_code || ',' ||v_description;
     
                    elsif v_bank_code is not null
                    then
                         v_return_value :=  'Wire,' || v_bank_code ;
                    elsif  v_description is not null
                    then
                         v_return_value :=  'Wire,' || v_description ;
                    else
     
                         v_return_value :=  'Wire';
     
     
     
                    end if;
               -- Utica specific agent and customer portal payment modes --OSBILLING-7764
               elsif v_payment_type in (gFITrxPay_Credit_Card, g_FITrx_Pay_AgntPrtl_CC, g_FITrx_Pay_CustPrtl_CC) --Credit Card
               then
     
                    ----OSBILLING-1732
                    v_credit_card_no    :=   NVL(
                                         pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_Credit_Card_No --    Credit card number
                                          ),
                                           pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_Credit_Card_No_New --    New Credit card number
                                          )
                                          );
                    -- OSBILLING-5269
                    if  v_credit_card_no is null then
     
                         v_credit_card_no :=  pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ctf_object_id,
                                                    gbv_CTF_Credit_Card_No_4digit   --  Credit card number 4 digit
                                               ) ;
                    end if;
     
     
                    /* OSBILLING-5269   Commented for Credit Card.
                    v_cc_last_name    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_CC_Last_Name --    Credit card last name
                                          );
     
     
     
                    v_cc_first_name    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_CC_First_Name --    Credit card first name
     
     
                                          );
     
                    */
     
                    v_cc_exp_month    :=   NVL(
                                               pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_object_id,
                                                    gbv_FITrx_CC_Exp_Month --    Credit card exp month
                                               ),
                                               pkg_os_object_io.fn_object_bv_get  --OSBILLING-5269
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ctf_object_id,
                                                    gbv_CTF_CC_Exp_Month --    Credit card exp month
                                               )
                                            );
     
                    v_cc_exp_year    :=   NVL(
                                            pkg_os_object_io.fn_object_bv_get
     
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_object_id,
                                                    gbv_FITrx_CC_Exp_Year --    Credit card exp year
     
                                               ),
                                               pkg_os_object_io.fn_object_bv_get --OSBILLING-5269
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ctf_object_id,
                                                    gbv_CTF_CC_Exp_Year --    Credit card exp year
                                               )
                                           );
     
                    v_cc_type := NVL(
                                           pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_object_id,
                                                    gbv_FITrx_CC_Type --    Credit card Type
                                               ),
                                               pkg_os_object_io.fn_object_bv_get --OSBILLING-5269
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ctf_object_id,
                                                    gbv_CTF_CC_Type --     Credit card Type
                                               )
                                           );
     
                    v_cc_last_first_names := TRIM(v_cc_first_name||' '||v_cc_last_name);
     
                    if v_cc_exp_month is not null and v_cc_exp_year is not null and LENGTH(v_cc_exp_year)>1
                    then
                         v_cc_exp_month_year := 'Exp '||LPAD(v_cc_exp_month,2,'0')||'/'||SUBSTR(v_cc_exp_year, -2);
                    else
                         v_cc_exp_month_year := null;
                    end if;
     
                    if v_credit_card_no is not null and LENGTH(v_credit_card_no)>3
                    then
     
                         v_return_value :=    'Credit Card, ' || pkg_os_lookup.fn_lookup_list_text_get(110,v_cc_type) || ', ' || SUBSTR(v_credit_card_no, -4)||', '||v_cc_exp_month_year;
                    else
                         v_return_value :=    'Credit Card, ' || pkg_os_lookup.fn_lookup_list_text_get(110,v_cc_type) || ', ' ||v_cc_exp_month_year;
     
                    end if;
                    
               -- Utica specific agent and customer portal payment modes --OSBILLING-7764
               elsif v_payment_type in (gFITrxPay_Eft_type, g_FITrx_Pay_AgntPrtl_EFT, g_FITrx_Pay_CustPrtl_EFT) --EFT payment
               then
               
                    v_eft_postal    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_eft_Postal --    EFT Postal code
                                          );
     
     
     
     
     
     
                    v_eft_transit   :=  nvl(
                                             pkg_os_object_io.fn_object_bv_get  --OSBILLING-5269
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_object_id,
                                                  gbv_FITrx_eft_Routing_Number -- Routing Number
                                             )
                                             ,
                                             pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_id,
                                                       gbv_FITrx_eft_id_no --gbv_FITrx_eft_BankID  --    Bank ID
                                                  )
                                            || '-'||
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_object_id,
                                                  gbv_FITrx_eft_Tran_no --    Transit number
                                             )
                                         );
     
                    if v_eft_transit is null or v_eft_transit = '-'  then
                         v_eft_transit    := nvl(
                                                  pkg_os_object_io.fn_object_bv_get  --OSBILLING-5269
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ctf_object_id,
                                                       gbv_CTF_eft_Routing_Number    -- Routing Number
                                                  )
                                                  ,
                                                  pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ctf_object_id,
                                                       gbv_CTF_eft_BankID --    Bank ID
                                                  )
                                                  || '-'||
                                                  pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ctf_object_id,
                                                       gbv_CTF_eft_tran_no  --  Transit number
                                                  )
                                              );
                    end if;

     
                    v_eft_bank_name    :=  pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_eft_Bank_name --    EFT Bank Name
                                          );
     
     
                    v_eft_id_no    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_eft_id_no --    EFT id number
                                          );
     
     
                    ----OSBILLING-1732
                    v_eft_acc_no  :=    NVL(
                                          pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                               gbv_FITrx_eft_acc_no --    EFT account number
     
                                          ),
                                          nvl(
                                               pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_object_id,
                                                         gbv_FITrx_eft_acc_no_new --    EFT account number new
                                                    ),
                                              pkg_os_object_io.fn_object_bv_get   -- OSBILLING-5269
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_ctf_object_id,
                                                         gbv_CTF_eft_acc_no  -- EFT account number
                                                     )
                                             )
                                          );
     
     
                    v_eft_first_name    :=   NVL
                                              (
                                                    pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_object_id,
                                                         gbv_FITrx_eft_name_f --    EFT first name
                                                    ),
                                                    pkg_os_object_io.fn_object_bv_get  -- OSBILLING-5269
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_ctf_object_id,
                                                         gbv_CTF_eft_name_f --    EFT first name
                                                    )
                                               )
                                               ;
     
     
                    v_eft_last_name    :=  NVL
                                               (
                                                  pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_id,
                                                       gbv_FITrx_eft_name_l --    EFT last name
                                                  ),
                                                   pkg_os_object_io.fn_object_bv_get   -- OSBILLING-5269
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ctf_object_id,
                                                       gbv_CTF_eft_name_l --    EFT last name
                                                  )
                                               );
     
                    v_eft_address1    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                              gbv_FITrx_eft_addr1 --    EFT address 1
                                          );
     
                    v_eft_currency    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_object_id,
                                              gbv_FITrx_eft_curre --    EFT Currency
                                          );
     
                    v_eft_last_first_names := TRIM(v_eft_first_name||' '||v_eft_last_name);
                    if  v_eft_acc_no is not null and LENGTH( v_eft_acc_no)>3
                    then
     
     
                         v_return_value :=    'EFT Payment, ' ||v_eft_last_first_names||', '|| SUBSTR(v_eft_acc_no, -4)||', '|| v_eft_transit;
                    else
                         v_return_value :=    'EFT Payment, ' ||v_eft_last_first_names||', ' ||v_eft_transit;
     
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Cash --Cash
               then

                    v_return_value :=  'Cash'; -- OSPRODUCT-12847
     
               elsif v_payment_type = gFITrxPay_Journal --Journal
               then
                    v_return_value :=  'NA';
               
               -- OSPRODUCT-12847
               else
                    v_return_value := 'Detail';
               end if;
     
               --return v_return_value;
               if v_FITrxSet_Created_by is not null  --OSPRODUCT-10284
               then 
                    -- OSPRODUCT-12847
                    /*v_ref_cur_fitrxn_id := pkg_os_object_io.fn_object_bv_get
										 (
											  in_session_id,
											  in_transaction_id,
											  v_FITrxSet_Created_by,
											  PKG_DB_OBJECT.gbv_BillAccTrxSet_CurrTrx       
										 );*/
                    v_payment_type := pkg_os_object_io.fn_object_bv_get
										 (
											  in_session_id,
											  in_transaction_id,
											  in_object_id,
											  gbv_FITrx_Payment_Type       
										 );

                    if v_payment_type = gFITrxPay_Eft_type
                    then
                         v_return_value := 'EFT Payment, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
                    elsif v_payment_type = gFITrxPay_Credit_Card
                    then
                         v_return_value := 'Credit Card, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
                    else
                         v_return_value := 'Check, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
                    end if;
                                            
               end if;

               --  2016-07-14 Cheryl osbilling-1446 - added other reversals (7801)
         elsif batch_type_id in ( 2601,7801) then
               
               v_ref_createdBy :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          pkg_os_object_io.fn_object_bv_get
                                          (in_session_id,in_transaction_id,in_object_id,
                                           29703446),     ---   Parent_FITransactionSet
                                          31756346       ---   Reference_FITrxSet Created by
                                     );
     
               v_original_payment := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ref_createdBy,
                                          29743646       ---   Reference_Current Transaction
                                     );
     
               v_payment_type := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Payment_Type       ---   Payment Type
                                     );
     
     
               ----OSBILLING-7437(to be used only in utica env) payment modes added-Check Insured, Check Agent, Check Mortgagee, Check Other, Premium Finance, Utica First, Manual Lockbox
               if v_payment_type in (gFITrxPay_Check,gFITrxPay_Returned_Check,gFITrxPay_Broker_Check,gFITrxPay_Certified_Check,gFITrxPay_Check_Insured,gFITrxPay_Check_Agent,gFITrxPay_Check_Mortgagee,gFITrxPay_Check_Other,gFITrxPay_Premium_Finance,gFITrxPay_Utica_First,gFITrxPay_Manual_Lockbox) -- Check,Returned Check,Broker Check,Certified Check
               then
                    
                    ----OSBILLING-7437(Used function instead of case when)
                    v_Check_type := nvl(pkg_os_lookup.fn_lookup_list_text_get( gFITransaction_Payment_Type, v_payment_type),'Check');  --OSPRODUCT-1337 Cheque to Check
                    --CASE v_payment_type
                    --WHEN gFITrxPay_Check THEN 'Check'
                    --WHEN gFITrxPay_Returned_Check THEN 'Returned Check'
                    --WHEN gFITrxPay_Broker_Check THEN 'Broker Check'
                    --WHEN gFITrxPay_Certified_Check THEN 'Certified Check'
                    --ELSE 'Check'
                    --END;
                    v_Check_no := pkg_os_object_io.fn_object_bv_get
                                  (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Check_No           --Check No
                                  );
                    
                    v_Check_reference_details := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_original_payment,
                                                         gbv_FITrx_Check_Ref_Details           --Check Reference Details
                                                    );
     
                    if v_Check_no is null and v_Check_reference_details is not null
                    then
                         
                         v_return_value := v_Check_type || ', ' || v_Check_reference_details;
     
                    elsif v_Check_no is not null and v_Check_reference_details is null
                    then
                         
                         v_return_value :=   v_Check_type || ', ' || v_Check_no;
     
                    elsif v_Check_no is not null and v_Check_reference_details is not null
                    then
                         
                         v_return_value :=  v_Check_type || ', ' || v_Check_no || ', ' || v_Check_reference_details;
     
                    else
     
                         v_return_value :=  v_Check_type;
     
                    end if;
     
     
               elsif v_payment_type = gFITrxPay_Internet_Payment --Internet_payment
               then
                    
                    v_ref_no := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_original_payment,
                                     gbv_FITrx_Ref_No           --  Ref No.
                                );
     
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_Ref_Details               --  Reference Details
                                           );
     
     
                    if v_ref_no is null and v_reference_details is not null
                    then
                         
                         v_return_value :=   'Internet Payment, '||v_reference_details;
     
                    elsif v_ref_no is not null and v_reference_details is null
                    then
                         
                         v_return_value :=   'Internet Payment, '||v_ref_no;
     
                    elsif v_ref_no is not null and v_reference_details is not null
                    then
                         
                         v_return_value :=  'Internet Payment, '||v_ref_no||', '|| v_reference_details;
     
                    else
     
                         v_return_value :=  'Internet Payment';
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Money_Order--Money_order
               then
                    
                    v_money_order := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Money_Order           -- Money Order no.
                                     );
                    
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_Ref_Details           -- Reference Details
                                           );
     
     
                    if v_money_order is null and v_reference_details is not null
                    then
                         
                         v_return_value :=   'Money Order, '||v_reference_details;
     
                    elsif v_money_order is not null and v_reference_details is null
                    then
                         
                         v_return_value :=   'Money Order, '||v_money_order;
     
                    elsif v_money_order is not null and v_reference_details is not null
                    then
                         
                         v_return_value :=   'Money Order, '||v_money_order||', '|| v_reference_details;
     
                    else
     
                         v_return_value :=   'Money Order';
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Other--Other
               then
                    
                    v_other_no := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Other_No           ---  Other No.
                                     );
     
                    v_reference_details := pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_Ref_Details           --  Reference Details
     
     
                                           );
     
     
                    if v_other_no is null and v_reference_details is not null
                    then
     
                      v_return_value :=  'Other, '||v_reference_details;
     
                    elsif v_other_no is not null and v_reference_details is null
                    then
     
                      v_return_value :=  'Other, '||v_other_no;
     
                    elsif v_other_no is not null and v_reference_details is not null
                    then
     
                      v_return_value :=  'Other, '||v_other_no||', '||v_reference_details;
     
                    else
     
                      v_return_value :=  'Other';
                      
                    end if;
     
     
               elsif v_payment_type = gFITrxPay_Wire_Transfer -- Wire Transfer
               then
                    
                    v_bank_code := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Bank_Code --    Bank Code
                                     );
                                     
                    v_description  := pkg_os_object_io.fn_object_bv_get
                                      (
                                          in_session_id,
                                          in_transaction_id,
                                          v_original_payment,
                                          gbv_FITrx_Description --   Description
                                      );
     
     
                    if v_description is not null
                    then
     
                      v_return_value :=  'Wire Transfer, '||v_description;
     
                    else
     
                      v_return_value :=  'Wire Transfer';
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Credit_Card --Credit Card
               then
                    
                    ----OSBILLING-1732
                    v_credit_card_no := NVL(
                                              pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_original_payment,
                                                    gbv_FITrx_Credit_Card_No --    Credit card number
                                               ),
                                                pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_original_payment,
                                                    gbv_FITrx_Credit_Card_No_New --    New Credit card number
                                               )
                                          );
     
                    v_cc_last_name := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_CC_Last_Name --    Credit card last name
                                          );
     
                    v_cc_first_name := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_CC_First_Name --    Credit card first name
                                          );
                    
                    v_cc_exp_month := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_CC_Exp_Month --    Credit card exp month
                                          );
     
                    v_cc_exp_year := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_CC_Exp_Year --    Credit card exp year
     
                                          );
     
                    v_cc_type := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_CC_Type --    Credit card exp year
                                          );
     
     
                    v_cc_last_first_names := TRIM(v_cc_first_name||' '||v_cc_last_name);
     
                    if v_cc_exp_month is not null and v_cc_exp_year is not null and LENGTH(v_cc_exp_year)>1
                    then
                       v_cc_exp_month_year := 'Exp '||LPAD(v_cc_exp_month,2,'0')||'/'||SUBSTR(v_cc_exp_year, -2);
                    else
                       v_cc_exp_month_year := null;
                    end if;
     
                    if v_credit_card_no is not null and LENGTH(v_credit_card_no)>3
                    then
     
                      v_return_value :=    'Credit Card, ' ||v_cc_last_first_names||', '|| pkg_os_lookup.fn_lookup_list_text_get(110,v_cc_type) || ', ' || SUBSTR(v_credit_card_no, -4)||', '||v_cc_exp_month_year;
                    
                    else
                      
                      v_return_value :=    'Credit Card, ' ||v_cc_last_first_names||', '|| pkg_os_lookup.fn_lookup_list_text_get(110,v_cc_type) || ', ' ||v_cc_exp_month_year;
     
                    end if;
     
     
               elsif v_payment_type = gFITrxPay_Eft_type --EFT payment
               then
                    v_eft_postal    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_Postal --    EFT Postal code
                                          );
     
                    v_eft_transit   :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_Tran_no --    Transit number
                                          );
     
                    v_eft_bank_name    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_Bank_name --    EFT Bank Name
                                          );
     
                    v_eft_id_no    :=   pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_id_no --    EFT id number
                                          );
     
                    ----OSBILLING-1732
                    v_eft_acc_no  :=  NVL(
                                          pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_acc_no --    EFT account number
     
                                          ),
                                          pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                               gbv_FITrx_eft_acc_no_new --    EFT account number new
     
                                          )
                                          );
     
                    v_eft_first_name    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                              gbv_FITrx_eft_name_f --    EFT first name
                                          );
     
     
                    v_eft_last_name    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                              gbv_FITrx_eft_name_l --    EFT last name
     
     
                                          );
                    v_eft_address1    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                              gbv_FITrx_eft_addr1 --    EFT address 1
     
     
                                          );
     
                    v_eft_currency    :=   pkg_os_object_io.fn_object_bv_get
     
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_original_payment,
                                              gbv_FITrx_eft_curre --    EFT Currency
     
     
                                          );
     
                    v_eft_last_first_names := TRIM(v_eft_first_name||' '||v_eft_last_name);
     
                    if  v_eft_acc_no is not null and LENGTH( v_eft_acc_no)>3
                    then
                         
                         v_return_value :=    'EFT Payment, ' ||v_eft_last_first_names||', '|| SUBSTR(v_eft_acc_no, -4)||', '|| v_eft_transit;
                    else
                         
                         v_return_value :=    'EFT Payment, ' ||v_eft_last_first_names||', ' ||v_eft_transit;
     
                    end if;
     
               elsif v_payment_type = gFITrxPay_Cash --Cash
               then

                    v_return_value :=  'Cash'; -- OSPRODUCT-12847

               elsif v_payment_type = gFITrxPay_Journal --Journal
               then

                    v_return_value :=  'NA';
                    
               -- OSPRODUCT-12847
               else
                    v_return_value := 'Detail';                

               end if;
     
               v_rev_reason := pkg_os_lookup.fn_lookup_list_text_get
                                           (5401340,
                                            pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                v_ref_createdBy,
                                                32235640       ---  Reverse Reason Code
                                                )
                                           );
     
               --return v_rev_reason||' - '||v_return_value;
               v_return_value := v_rev_reason||' - '||v_return_value;
               --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
          
               --Need to ask as additional value included

            --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
            --Need to ask as additional value included
          elsif batch_type_id = 3001 then
               
               v_ref_createdBy := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          pkg_os_object_io.fn_object_bv_get
                                          (in_session_id,in_transaction_id,in_object_id,
                                           29703446),     ---   Parent_FITransactionSet
                                          31756346       ---   Reference_FITrxSet Created by
                                     );
     
               v_rev_reason := pkg_os_lookup.fn_lookup_list_text_get
                                           (5401340,
                                            pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                v_ref_createdBy,
                                                32235640       ---  Reverse Reason Code
                                                )
                                           );
     
               --return v_rev_reason;
               v_return_value := v_rev_reason;

          elsif batch_type_id = 2101 then
     
               v_rev_reason := pkg_os_lookup.fn_lookup_list_text_get
                                           (5389446,
                                            pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                pkg_os_object_io.fn_object_bv_get
                                                (in_session_id,in_transaction_id,in_object_id,
                                                 29703446),
                                                31875246       ---  Reverse Reason Code
                                                )
                                           );
     
               --return v_rev_reason;
               v_return_value := v_rev_reason;

            --  2016-07-14 Cheryl osbilling-1446 - added transfer
          elsif batch_type_id in ( 2401) then
               
               v_rev_reason := pkg_os_lookup.fn_lookup_list_text_get
                                           (5386246,
                                            pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                in_object_id,
                                                gbv_FiTrx_transfer_reason                                              )
                                           );
     
               if v_session_control.gLogging_Full
               then
     
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'in 2401 For object ID: '
                         || in_object_id
                         || ' BV Number: '
                         || ' v_rev_reason: '
                         || v_rev_reason
                    );
     
               end if;
     
               --return v_rev_reason;
               v_return_value := v_rev_reason;

          elsif batch_type_id =  2301 then
               
               v_rel_disb_prf := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_object_id,
                                           29703446
                                      ),    ---   Parent_FITransactionSet
                                      31711146       ---  Ref_Disb_profile
                                 );
     
               v_rel_cash_trnsfr_prf := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_rel_disb_prf,
                                             30013446       ---  Ref_Disb_profile_used
                                        );
     
               v_payment_type := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_rel_cash_trnsfr_prf,
                                          30010546       ---   Disbursement Mode
                                     );
     
               if v_payment_type = 2 then ---credit card
     
                    v_cc_first_name          :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  32472146       ---   First Name
                                                 );
     
                    v_cc_last_name           :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  32472246       ---   Last Name
                                                 );
     
                    v_cc_type                 :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30010846       ---   Credit/Debit Card - Type
                                                 );
     
                    v_cc_exp_month            :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30011246       ---   Credit/Debit Card - Type
                                                 );
     
                    v_cc_exp_year              :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30011146       ---   Credit/Debit Card - Type
                                                 );
     
                    v_credit_card_no         :=   SUBSTR(pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30011046       ---   Disbursement Mode
                                                 ),-4,4) ;
     
                    v_return_value := 'Credit Card'
                                    ||'-'||v_cc_first_name
                                    ||' '||v_cc_last_name
                                    ||'-'||pkg_os_lookup.fn_lookup_list_text_get(110,v_cc_type)
                                    ||'-'||v_credit_card_no
                                    ||'-'||v_cc_exp_month
                                    ||'/'||v_cc_exp_year;
     
               elsif v_payment_type = 3 then ---EFT
     
                    v_eft_first_name         :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30743846       ---   Account Holder First Name
                                                 ) ;
     
                    v_eft_last_name          :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30743946       ---   Account Holder Last Name
                                                 ) ;
     
                    v_eft_bank_name          :=   pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30011446       ---   Bank Name
                                                 ) ;
     
                    v_eft_acc_no             :=   SUBSTR(pkg_os_object_io.fn_object_bv_get
                                                 (in_session_id,
                                                  in_transaction_id,
                                                  v_rel_cash_trnsfr_prf,
                                                  30011946       ---   Account Number
                                                 ),-4,4) ;
                    --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
                    --Need to ask as some additional code added
     
                    v_return_value := 'EFT'
                                     ||'-'||v_eft_first_name
                                     ||' '||v_eft_last_name
                                     ||'-'||v_eft_bank_name
                                     ||'-'||v_eft_acc_no
                                     ;
     
     
               elsif v_payment_type = 1 then ---Cash/Check

                    v_return_value := 'Check Refund';
               
               -- OSPRODUCT-12847
               else
                    v_return_value := 'Detail';
                    
               end if;
     
               -- return v_return_value;

          elsif batch_type_id = 4 then --GCNA-1300 add details for Endorsment with Subtype
               
               v_policy_transaction_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                             in_session_id, in_transaction_id, in_object_id, 29703446
                                             ), --parent FITransaction set
                                             32502146     --associated PolicyTransaction
                                        );
     
               if ( pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_transaction_id, 26542407) is not null ) --Policy Transaction Subtype is not null
               then
                    v_return_value := pkg_os_lookup.fn_lookup_list_text_get(5303209,pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_transaction_id, 26542407));
               else
                    v_return_value := '';
               end if;
     
             -- return v_return_value;
             -- 2016-10-18 Cheryl osbilling-3214- added adhoc journal
             
          elsif batch_type_id in ( gBatch_Adhoc_Journal,gBatch_AdhocJournalReversal,gBatch_DishAdhocJournal) then
               
               v_fitem_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FiTran_reffitem);
               v_category_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem_id, gbv_Fitem_category);
               v_return_value := pkg_os_lookup.fn_lookup_list_text_get(5366946,v_category_id);
               --return v_return_value;
               
          elsif batch_type_id in ( gBatch_CheckPayment,gBatch_EFTBatchPayment,gBatch_CreditCardBatch) then  --OSPRODUCT-10284
		
               v_payment_type := pkg_os_object_io.fn_object_bv_get
										 (
											  in_session_id,
											  in_transaction_id,
											  in_object_id,
											  gbv_FITrx_Payment_Type       
										 );
               
               -- -- OSPRODUCT-12847
               if v_payment_type = gFITrxPay_Eft_type
               then
                    v_return_value := 'EFT Payment, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
               elsif v_payment_type = gFITrxPay_Credit_Card
               then
                     v_return_value := 'Credit Card, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
               else
                     v_return_value := 'Check, '||pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_FITrx_Check_Ref_Details);
               end if;                
          
          else
               
               -- return 'Detail';
               -- return v_rev_reason;
               v_return_value := 'Detail';
               
          end if;
          
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   'Value not found in cache.. Recalculated.. ' || v_return_value
               );
                    
          end if;
          
          -- Load the cache
          pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);
          
          pkg_db_object_cache_io.g_bill_trx_details(v_idx) := v_return_value;
          
     end if;
     
     return v_return_value;
exception
   when others then

     return null;

end fn_fitem_bill_trx_details;



-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_next_due_date
--
--   %USAGE
--        This function returns the policy next due date
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               policyterm object ID

--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_term_next_due_date
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_object_id             in        object.object_id%type,
     in_billing_account_id    in        object.object_id%type  default null  -- #MP
)
return varchar2
is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_term_next_due_date';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_installment_init_amt   number;
     v_installment_bal_amt    number;
     v_return_value           varchar2(20);
     v_installment_number     number;
     v_aging_date_criteria    char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_object_id,19446);-- 1: Billing Due Date, 2: Withdrawal Date
     v_aging_invoice_tf       char(1) := nvl(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_object_id,PKG_DB_NIGHTLY_PROCESS.gAging_In_Invoice),'T'); --OSPRODUCT-6972
     
     v_policy_id              object.object_id%type                         := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,in_object_id );

     cursor c_policyterm_installments (in_policy_id object.object_id%type) is

          select
               distinct df.installment_id,
               df.installment_number,
               decode(v_aging_date_criteria,2,dst.withdrawal_date,dst.billing_due_date) as due_date, --OSBilling-6812 Fetching due date from Scheduled Installment
               df.aging_status_id
          from
               dragon_fitem df , dragon_scheduled_installment dst --OSBilling-6812 Added join of scheduled installment to fetch correct due date
          where
               df.installment_id = dst.installment_id --OSBilling-6812
          and
               df.policy_id = in_policy_id
          and
               df.policy_term_id = in_object_id
          and
               df.installment_id is not null
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.fitem_category_id not in  (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm,gFItem_Category_DefPremComm)
          and
               df.fitem_sub_category_id not in ( g_FItem_SubCat_InstFee_Pay,g_FItem_SubCat_InvFee_Rec)
          and
               df.balance <> 0
          and
--               df.billing_account_id = nvl(in_billing_account_id, billing_account_id) -- #MP
               df.billing_account_id = nvl(in_billing_account_id, df.billing_account_id) -- #MP  --OSPRODUCT-1541
          order by
               installment_number;

Begin


     for r_policyterm_installments in c_policyterm_installments(v_policy_id) loop

          v_installment_init_amt   :=   fn_get_installment_initial_amt

                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             r_policyterm_installments.installment_id


                                        );

          v_installment_bal_amt    :=   fn_get_installment_balance_amt

                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             r_policyterm_installments.installment_id,
                                                        v_policy_id     --OSPRODUCT-1764


                                        );


          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'For PolicyTerm ID: '
                    || in_object_id
                    || ' And Installment Number: '
                    || r_policyterm_installments.installment_number
                    || ' Installment Initial Amount: '
                    || v_installment_init_amt
                    || ' Installment Balance Amount: '
                    || v_installment_bal_amt
               );

          end if;

          if nvl(v_installment_init_amt,0) - nvl(v_installment_bal_amt,0) = 0
												
          then

               v_return_value := to_char(r_policyterm_installments.due_date,pkg_os_constant.DragonDateFormatDefault);
               exit;

          elsif (
                     nvl(v_installment_init_amt,0) - nvl(v_installment_bal_amt,0) > 0
                     or
                     -- 
                     -- OSPRODUCT-13740
                     -- For reinstatement balance amount can be greater that initial amount
                     (
                          nvl(v_installment_bal_amt,0) > 0 
                          and
                          nvl(v_installment_init_amt,0) - nvl(v_installment_bal_amt,0) < 0
                     )
                )
                and 
                (
                     r_policyterm_installments.aging_status_id  in (gfitem_current_due,gfitem_future_due) 
                )  --OSPRODUCT-12033
          then

               v_return_value := to_char(r_policyterm_installments.due_date,pkg_os_constant.DragonDateFormatDefault);
               exit;

          else


               v_return_value := null;


          end if;

     end loop;

     return v_return_value;

exception
   when others then

     return null;

end fn_get_term_next_due_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_policy_next_due_amt
--
--   %USAGE
--        This function returns the policy next due amount
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               policyterm object ID

--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_term_next_due_amt
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_object_id             in        object.object_id%type,
     in_billing_account_id    in        object.object_id%type  default null  -- #MP
)
return number
is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_term_next_due_amt';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_next_due_date          date;
     v_next_due_amount        number;
     v_policy_id              object.object_id%type                         := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,in_object_id );
      v_aging_date_criteria    char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_object_id,19446);-- 1: Billing Due Date, 2: Withdrawal Date

Begin

     v_next_due_date     :=   to_date
                              (
                                   fn_get_term_next_due_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        in_billing_account_id --#MP
                                   ),
                                   pkg_os_constant.DragonDateFormatDefault
                              );

     select
          sum(balance)
     into
          v_next_due_amount
     from
          dragon_fitem
     where
          policy_id = v_policy_id
     and
          policy_term_id = in_object_id
     and
          fitem_type_id = gFItemType_Debit
     and 
          aging_status_id <> 3 --(Past due)OSPRODUCT-8101
     and
          fitem_category_id not in  (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm,gFItem_Category_DefPremComm, gFitem_category_LossGain)--OSPRODUCT-12759
     and
          trunc(decode(v_aging_date_criteria,2,withdrawal_date,due_date)) <= trunc(v_next_due_date)
     and
          billing_account_id = nvl(in_billing_account_id, billing_account_id) -- #MP
     and
          billing_account_id not in (select billingaccount_id from dragon_billingaccount where NVL(account_type_id,0)  in (1501,0))-- UTPRODUCT-2513-- to exclude debit fitems on writing company
      ;

     return v_next_due_amount;

exception
   when others then

     return null;

end fn_get_term_next_due_amt;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitem_element_name
--
--   %USAGE
--        This function returns element name based on element md id
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               fitem object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_fitem_element_name
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_element_md_id                   in             db_billing_element.db_billing_element_id%type
)
return varchar2
is
     v_return_value                varchar2(100);
begin

     select
          a.billing_element_name
     into
          v_return_value
     from
          db_billing_element a
     where
          a.db_billing_element_id = in_element_md_id;

     return v_return_value;

exception
  when others then

  return null;

end fn_get_fitem_element_name;


-----------------------------------------------------------------------------------------------------------------------------------------------------

--
--   %NAME

--        sp_create_task
--
--   %USAGE

--        This procedure creates the task for the Billing CSR of the Customer's Billing Account.
--

--
--   %ALGORITHM
--          1.   Get the Primary Billing CSR of the billing account
--          2.   Get the Account Holder Name of the billing accoun
--          3.   Create object of Type TASK ...
--          4.   Holler to session that a new object has been created
--          5.   Get the Current User
--          6.   Set the business variables for Task object. Assign the task to the Primary Billing CSR
--             if exists or to the current user.
--          7.   Update the Task Datamart

--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_task_object_id             Task Object ID
--   %PARAM    in_billing_accnt_id           Billing Account ID
--   %PARAM    in_amount                     The Billing Transaction amount
--
--------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_task
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_task_object_id                  in             object.object_id%type,    /* Tasked Object ID */
     in_billing_accnt_id                in             object.object_id%type,
  in_task_type          in      object.object_id%type
)

as

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_create_task';

     v_primary_billing_csr_id           object.object_id%type;
    v_underwriter_id               object.object_id%type;
     v_new_task_id                      object.object_id%type         := null;
     v_current_user_object_id           object.object_id%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_account_holder_name              object_bv_value.business_variable_value%type;
     v_datamart_tf                      char(1)                       := 'T';


begin




     --
     -- 1. Get the Primary Billing CSR of the billing account
     --











  v_underwriter_id       :=        pkg_os_object_io.fn_object_bv_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_task_object_id,
                                                 26590807 --GenericObject - xReference - _Reference_Underwriter6

                                             );


          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,


               v_procedure_name,
               '...... v_underwriter_id...'||v_underwriter_id
          );


                  --OneShieldReference26590807GenericObject - xReference - _Reference_Underwriter--
     --
     -- 2. Get the Account Holder Name of the billing account
     --

     v_account_holder_name         :=        pkg_os_object_io.fn_object_bv_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_billing_accnt_id,
                                                 gbv_BillingAcc_AccHldr_Name    --29974846

                                             );


         pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
      v_procedure_name,
               '...... v_account_holder_name...'||v_account_holder_name
          );
     --
     --   3. Create object of Type NOTE ...
     --


     pkg_os_object.sp_object_create
     (
          in_session_id,
          in_transaction_id,


          pkg_os_wf_task.gObjType_Task,
          null,
          v_new_task_id
     );

  pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,


               v_procedure_name,
               '...... v_new_task_id...'||v_new_task_id
          );


     --
     --   4. Holler to session that a new object has been created
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_session_id,
          pkg_os_constant_bv.gbv_SessionNewObject, -- 210395
          v_new_task_id
     );

    pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,


               v_procedure_name,
               '...... v_new_task_id...'||v_new_task_id
          );

     --
     --   5. Get the Current User
     --

     v_current_user_object_id      :=        pkg_os_wf_session.fn_user_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id
                                             );


  pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,


               v_procedure_name,
               '...... v_current_user_object_id...'||v_current_user_object_id
          );

     --
     -- 6. Set the business variables for Task object
     --

     v_bv_table.delete;


     v_bv_table (pkg_os_wf_task.gbv_taskassociatedobject    ).business_variable_value :=  in_task_object_id;
     v_bv_table (pkg_os_constant_bv.gbv_genobjcreator       ).business_variable_value :=  v_current_user_object_id;
     v_bv_table (pkg_os_constant_bv.gbv_genobjcreationdate  ).business_variable_value :=  to_char(sysdate,'yyyymmddhh24miss');
     v_bv_table (gbv_Task_TaskContentType                   ).business_variable_value :=  gTask_content_type_task ;
     v_bv_table (gbv_Task_TaskStatus                        ).business_variable_value :=  gTask_status_complete;
     v_bv_table (gbv_Task_TaskTitle                         ).business_variable_value :=  'Customer ' || v_account_holder_name || ' status has been changed to suspend billing.';
     v_bv_table (gbv_Task_TaskDesc                          ).business_variable_value :=  'Customer''s: billing account has been marked as suspended and in case it needs to be reumed it needs to be mannually set up.';
     v_bv_table (gbv_Task_TaskCreatedDate                   ).business_variable_value :=  to_char( sysdate , 'yyyymmddhh24miss');
     v_bv_table (gbv_Task_TaskType                          ).business_variable_value :=  in_task_type;
     v_bv_table (gbv_Task_TaskDueDate                       ).business_variable_value :=  to_char( sysdate , 'yyyymmddhh24miss');
     v_bv_table (gbv_Task_Ref_Assigned_To                   ).business_variable_value :=  nvl(v_underwriter_id,v_current_user_object_id);
     v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value :=  pkg_os_constant.gObjState_Alive; --37246; -- SK : Commented for Diary


  pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,

               v_procedure_name,
               '...... added BV...'||v_current_user_object_id
          );


     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,

          v_new_task_id,
          v_bv_table
     );


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,


































               '.........Created Task Object '||v_new_task_id ||
               ' assigned to: '|| nvl(v_primary_billing_csr_id,v_current_user_object_id)||
               ' with tasked object : ' ||in_task_object_id


          );

     end if;
















     --









     -- 7. Update the Task Datamart
     --
















     pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_new_task_id, v_datamart_tf);




     -- Log added by SK : Need to be removed.
      --pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 9374646);




































end sp_create_task;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitem_gl_account
--
--   %USAGE
--        This function returns GL Account Number Based on input parameters
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_fitem_debit_credit      Debit/Credit
--   %PARAM     in_fitem_category          category ID
--   %PARAM     in_fitem_subcategory       subcategory ID
--   %PARAM     in_transaction_type_id     transaction type ID
--   %PARAM     in_account_type_id         account type ID
--   %PARAM     in_jurisdisction_id        jurisdisction ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_fitem_gl_account
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_fitem_id                        in             object.object_id%type,
     in_product_id                      in             pd_product.pd_product_id%type,
     in_production_branch               in             lookup_list_value.lookup_enum%type,
     in_vip_indicator                   in             lookup_list_value.lookup_enum%type,
     in_fitem_debit_credit              in             lookup_list_value.lookup_enum%type,
     in_fitem_category                  in             lookup_list_value.lookup_enum%type,
     in_fitem_subcategory               in             lookup_list_value.lookup_enum%type,
     in_transaction_type_id             in             lookup_list_value.lookup_enum%type,
     in_account_type_id                 in             lookup_list_value.lookup_enum%type,
     in_jurisdisction_id                in             lookup_list_value.lookup_enum%type
)
return varchar2
is

     gl_account_seg1               varchar2(10);
     gl_account_seg2               varchar2(10);
     gl_account_seg3               varchar2(10);
     gl_account_seg4               char(1):='D';
     v_return_value                object_bv_value.business_variable_value%type;

Begin

     select
          gl_account_no
     into
          gl_account_seg1
     from
          db_cat_gl_account_map
     where
          pkg_db_billing.fn_fitem_type_in_set(in_fitem_debit_credit,fitem_type_set_id) = 'T'
     and
          pkg_db_billing.fn_fitem_category_in_set(in_fitem_category,fitem_category_set_id) = 'T'
     and
          (pkg_db_billing.fn_fitem_subcategory_in_set(in_fitem_subcategory,fitem_sub_category_set_id) = 'T' or in_fitem_subcategory is null)
     and
          transaction_type_id = in_transaction_type_id
     and
          account_type_id = in_account_type_id
     and
          pkg_os_jurisdiction.fn_jurisdiction_in_set( in_jurisdisction_id, jurisdiction_set_id ) = 'T'
     and
          (pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,in_fitem_id,filter_rule_id) = 'T' or filter_rule_id is null);

     if gl_account_seg1 < 4000
     then

          v_return_value := gl_account_seg1;

     elsif gl_account_seg1 >= 4000
     then

          if in_production_branch = 10
          then

               gl_account_seg2 := 30;

          elsif in_production_branch = 20
          then

               gl_account_seg2 := 21;

          elsif in_production_branch = 30
          then

               gl_account_seg2 := 20;

          elsif in_production_branch = 80
          then

               gl_account_seg2 := 11;

          elsif in_production_branch = 40
          then

               gl_account_seg2 := 10;

          end if;

          if in_product_id = 57405 and nvl(in_vip_indicator,2) = 1
          then

               gl_account_seg3 := 400;

          elsif in_product_id = 57405 and nvl(in_vip_indicator,2) = 2
          then

               gl_account_seg3 := 425;

          elsif in_product_id = 57005 and nvl(in_vip_indicator,2) = 1
          then

               gl_account_seg3 := 500;

          elsif in_product_id = 57005 and nvl(in_vip_indicator,2) = 2
          then

               gl_account_seg3 := 525;

          end if;

          v_return_value := gl_account_seg1||gl_account_seg2||gl_account_seg3;

          if gl_account_seg1 >= 7000
          then

               v_return_value := v_return_value||gl_account_seg4;

          end if;

     end if;

     return v_return_value;

exception
   when others then

     return null;

end fn_get_fitem_gl_account;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_cash_batch_bal_amount
--
--   %USAGE
--        This function returns the total balance of the amounts of Fitems associated with the statement/cash batch.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               billing account transaction set ID
--   %PARAM     in_batch_type_id           batch type ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_cash_batch_bal_amount
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type,
     in_batch_type_id              in             db_transaction_set_type.db_trxset_type_id%type
)
return number
is


     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_cash_batch_bal_amount';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                number := 0;

begin

     if in_batch_type_id = 2001
     then

          v_return_value :=  pkg_db_reconciliation.fn_get_total_assoc_cash
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_object_id
                              );

     elsif in_batch_type_id in (101,201,301,401,601)
     then

          begin

               select
                    sum(balance)
               into
                    v_return_value
               from
                    dragon_fitem dbfitem, dragon_billingaccounttrxset dbtrxset
               where
                    dbfitem.creator_fitransactionset_id = dbtrxset.billingaccounttrxset_id
               and
                    billingaccounttrxset_id = in_object_id
               and
                    dbfitem.fitem_transaction_type_id = 603
               and
                    dbfitem.fitem_type_id = 246;

          exception when others then

               v_return_value := 0;

          end;

          -- 2016-07-18 Cheryl osbilling-2549 add agency statement

     -- GCNA-720
     elsif in_batch_type_id in (  gBatch_Current_Account_Stmt, gBatchType_AgencyStatement)
     then

           begin

                select
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as below assignment is changed
                     nvl(sum(nvl(to_number(replace(fitem_cash_balance, ',')), 0)), 0)
                into
                     v_return_value
                from
                     DRAGON_CASH_ALLOCATION
                where
                     fitemalloc_ass_agencystmt_id = in_object_id;

                exception when others then
                     v_return_value := 0;

           end;

     else

          v_return_value := 0;

     end if;

     return v_return_value;

exception
when others then

     pkg_os_logging.sp_log_error
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '...... Error in getting balance amount: '
          ||in_object_id
          || ' Error: '
          ||sqlerrm (sqlcode)
     );

     return v_return_value;

end fn_get_cash_batch_bal_amount;

------------------------------------------------------------------------------------------------------------------------------------------------------
--commenting the exsiting code for fn_get_term_lp_suspend_days and rewriting it
--as part of osproduct-2013
/*function fn_get_term_lp_suspend_days
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type
)
return number
is

     v_procedure_name                   constant  system_log.program_name%type       :=   pkg_name||'fn_get_term_lp_suspend_days';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value                     object.object_id%type := 0;
     v_policy_term_id                   object.object_id%type;
     v_current_suspension_id            object.object_id%type;
     v_suspension_stop_lp_yn            lookup_list_value.lookup_enum%type;
     v_suspension_stop_lp_reason        lookup_list_value.lookup_enum%type;
     v_suspension_effective_date        date;
     v_suspension_expiration_date       date;
     --v_suspension_resume_reason         lookup_list_value.lookup_enum%type;

begin

     v_policy_term_id              :=   fn_get_policy_current_term
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        );

     v_current_suspension_id       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_term_id,
                                             32251446
                                        );

     v_suspension_stop_lp_yn       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_current_suspension_id,
                                             32427831
                                        );

     v_suspension_stop_lp_reason   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_current_suspension_id,
                                             32428331
                                        );

     v_suspension_effective_date   :=   to_date
                                        (
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_suspension_id,
                                                  32176346
                                             )
                                             ,pkg_os_constant.DragonDateFormatDefault
                                        );

     v_suspension_expiration_date  :=   to_date
                                        (
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_suspension_id,
                                                  32176446
                                             )
                                             ,pkg_os_constant.DragonDateFormatDefault
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Policy ID: '
               || in_policy_id
               || ' Policy Term ID: '
               || v_policy_term_id
               || ' v_current_suspension_id: '
               || v_current_suspension_id
               || ' v_suspension_stop_lp_yn: '
               || v_suspension_stop_lp_yn
               || ' v_suspension_stop_lp_reason: '
               || v_suspension_stop_lp_reason
               || ' v_suspension_effective_date: '
               || v_suspension_effective_date
               || ' v_suspension_expiration_date: '
               || v_suspension_expiration_date
          );

     end if;

     if v_suspension_stop_lp_yn is not null and v_suspension_stop_lp_reason is not null
     then

          v_return_value := v_suspension_expiration_date - v_suspension_effective_date;

     end if;

     return v_return_value;

exception
  when others then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               sqlerrm
          );
    return 0;
end fn_get_term_lp_suspend_days;
*/
function fn_get_term_lp_suspend_days
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type
)
return number
is

     v_procedure_name                   constant  system_log.program_name%type       :=   pkg_name||'fn_get_term_lp_suspend_days';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value                     object.object_id%type := 0;
     v_policy_term_id                   object.object_id%type;
     v_current_suspension_id            object.object_id%type;
     v_suspension_stop_lp_yn            lookup_list_value.lookup_enum%type;
     v_suspension_stop_lp_reason        lookup_list_value.lookup_enum%type;
     v_suspension_effective_date        date;
     v_suspension_expiration_date       date;
     --v_suspension_resume_reason         lookup_list_value.lookup_enum%type;
     v_PolSusp_child_list             pkg_os_object.t_object_list;
     v_PolSusp_child_index            number;
     v_PolSusp_objectState            object_state.object_state_id%type;

begin

     v_policy_term_id              :=   fn_get_policy_current_term
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        );

--     v_current_suspension_id       :=   pkg_os_object_io.fn_object_bv_get
--                                        (
--                                             in_session_id,
--                                             in_transaction_id,
--                                             v_policy_term_id,
--                                             32251446
--                                        );

      pkg_os_object_search.sp_object_children_of_type_get
                       (
                            in_session_id,
                            in_transaction_id,
                            in_policy_id ,
                            pkg_db_suspension.gObjType_PolicySuspension,--3193646
                            v_PolSusp_child_list
                       );
    v_PolSusp_child_index :=v_PolSusp_child_list.first;

    while v_PolSusp_child_index is not null
     loop
      --get the status of the policy suspension object
       v_PolSusp_objectState:=  pkg_os_object_io.fn_object_bv_get
                                        (
                                          in_session_id,
                                          in_transaction_id,
                                          v_PolSusp_child_list(v_PolSusp_child_index),
                                          pkg_db_suspension.gbv_GenericObj_ObjectState--210153
                                         );

     if v_PolSusp_objectState = 54346 then
     v_suspension_stop_lp_yn       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_PolSusp_child_list(v_PolSusp_child_index),
                                             32427831
                                        );

     v_suspension_stop_lp_reason   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_PolSusp_child_list(v_PolSusp_child_index),
                                             32428331
                                        );

     v_suspension_effective_date   :=   to_date
                                        (
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_PolSusp_child_list(v_PolSusp_child_index),
                                                  32176346
                                             )
                                             ,pkg_os_constant.DragonDateFormatDefault
                                        );

     v_suspension_expiration_date  :=   to_date
                                        (
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_PolSusp_child_list(v_PolSusp_child_index),
                                                  32176446
                                             )
                                             ,pkg_os_constant.DragonDateFormatDefault
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Policy ID: '
               || in_policy_id
               || ' Policy Term ID: '
               || v_policy_term_id
               || ' v_current_suspension_id: '
               || v_current_suspension_id
               || ' v_suspension_stop_lp_yn: '
               || v_suspension_stop_lp_yn
               || ' v_suspension_stop_lp_reason: '
               || v_suspension_stop_lp_reason
               || ' v_suspension_effective_date: '
               || v_suspension_effective_date
               || ' v_suspension_expiration_date: '
               || v_suspension_expiration_date
          );

     end if;

     if v_suspension_stop_lp_yn is not null and v_suspension_stop_lp_reason is not null
     then

          v_return_value := v_suspension_expiration_date - v_suspension_effective_date;

     end if;

     return v_return_value;
    end if;-- v_PolSusp_objectState = 54346
    v_PolSusp_child_index := v_PolSusp_child_list.next(v_PolSusp_child_index);
end loop;
exception
  when others then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               sqlerrm
          );
    return 0;
end fn_get_term_lp_suspend_days;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_active_stmnt_profile
--
--   %USAGE
--        This function returns the first Active Statement Profile
--
--   %ALGORITHM
--        Get the Billing Account ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_billing_account_id            Billing Account ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_active_stmnt_profile
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_stmt_profile_id                 in             object.object_id%type
)
return object.object_id%type
is
     v_return_value                     object.object_id%type := null;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_active_stmnt_profile';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_statement_profile_id             object.object_id%type;
     v_object_state                     object.object_id%type;

     v_object_index                     number;
     v_count                            number;
     v_object_list                      pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_profile_type                     object.object_id%type;
     v_active_stmt_profile_type         object.object_id%type;
begin
     -- Get Parent
     v_billing_account_id  :=   pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_stmt_profile_id
                                        );
     --
     -- Get the Statement Profile objects under the Billing Account
     --
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_billing_account_id,
          gObjType_StatementProfile,
          v_object_list
     );

       if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...Billing account ID: ' || v_billing_account_id || ' has number of statement profiles: ' || v_object_list.count);

       end if;
        v_profile_type := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_stmt_profile_id,
                                             31202046 -- Statement Profile Type
                                            );

    if v_object_list.count > 0
     then

          v_object_index := v_object_list.first;


          while v_object_index is not null loop
            v_statement_profile_id  := v_object_list(v_object_index);
            v_object_state := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_statement_profile_id,
                                             210153 -- Object State
                                            );
            v_active_stmt_profile_type := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_statement_profile_id,
                                             31202046 -- Statement Profile Type
                                            );
           if v_object_state = g_StmtProfileStateApprove
             then
                if v_active_stmt_profile_type = v_profile_type
                  then
                    return v_statement_profile_id;

                end if;

          end if;

            v_object_index := v_object_list.next(v_object_index);

          end loop; -- end loop of v_object_index
        end if;
        return v_return_value;
end fn_get_active_stmnt_profile;
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-17113
--
--   %NAME
--        fn_active_stmtprof_bustype_cnt
--
--   %USAGE
--        This function will be used to check if a new defult statement profile should be created after Partner Business Type change.
--        If  ZERO retuned, a new default statement profile should be created.
--
--   %ALGORITHM
--       If business type = "Statement Agency", the system will try to find ACTIVE Statement Profile Types of type Invoice. 
--       If business type = "Account Current",  the system will try to find ACTIVE Statement Profile Types of type Informational.
--
--
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-17113
function fn_active_stmtprof_bustype_cnt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_partner_id                      in             object.object_id%type
)
return number
is
     v_procedure_name                   constant  system_log.program_name%type       :=   pkg_name||'fn_active_stmtprof_bustype_cnt';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_return                           number;
     v_partner_business_type            object_bv_value.business_variable_value%type;
     
begin
     v_partner_business_type := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id, 
                                     in_partner_id, 
                                     gbv_PartnerBusinessType
                                );
     
     select 
          nvl(sum(case to_number(v_partner_business_type)
                   --
                   when g_enum_AccountCurrent                                                       -- Business Type = Account Current(100)
                   then decode(s.profile_type_id, pkg_db_statement.g_StmtProfileType_Info,    1, 0) -- if Business Type = Account Current, count profile type 'Informational' (enum=2)
                   --
                   when g_enum_StatementAgency                                                      -- Business Type = Statement Agency(200)
                   then decode(s.profile_type_id, pkg_db_statement.g_StmtProfileType_Invoice, 1, 0) -- if Business Type = Account Current, count profile type 'Invoice' (enum=1)
                   --
                   else 1
              end
             ),0) active_stmt_profile_count_for_business_type
     into
          v_return
     from 
          dragon_partner             p  
     join
          dragon_statementprofile    s on ( s.billingaccount_id = p.billing_account_no )
     where
          p.partner_id = in_partner_id 
     and
          s.status_id = g_StmtProfileStateApprove -- 47546 = Active
      ;
      
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... For Parnter ID ' || in_partner_id || ', Business Type= ' || v_partner_business_type ||
               '. Number of Active profiles= ' || v_return
          );
     end if;      
      
     return v_return;
     
exception
     when others then
      
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... ERROR occured during counting active profiles for Parnter ID ' || in_partner_id || ', Business Type= ' || v_partner_business_type ||
               '.' ||SQLERRM|| ',  callstack:'||dbms_utility.format_call_stack 
          );

               
          return 111; -- a new profile will not be created
     
end fn_active_stmtprof_bustype_cnt;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_cal_due_date
--
--   %USAGE
--       This function calculate the agency due date based on the input parameters
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_billing_id            object.object_id%type
--   %PARAM    in_actual_due            object_bv_value.business_variable_value%type
--   %PARAM    in_billing_due           object_bv_value.business_variable_value%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_fitem_cal_due_date_new
(
     in_session_id       in   object.object_id%type,
     in_transaction_id   in   object.object_id%type,
     in_billing_id       in   object.object_id%type,
     in_actual_due       in   object_bv_value.business_variable_value%type,
     in_billing_due      in   object_bv_value.business_variable_value%type,
     in_stmnt_date       in   date
)
return  varchar2
is

     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_date_use_ind      object_bv_value.business_variable_value%type;
     v_billing_days     object_bv_value.business_variable_value%type;
     v_agency_criteria   object_bv_value.business_variable_value%type;
     v_agency_due_date   object_bv_value.business_variable_value%type;
     v_input_date        date;

begin

     v_billing_days    :=      pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_billing_id,
                                     gbv_billing_due_days
                                );

     v_agency_criteria     :=       pkg_os_object_io.fn_object_bv_get
              (
                        in_session_id,
                        in_transaction_id,
                        in_billing_id,
                        gbv_billing_date_ind
                   ); -- Agency Due Date criteria


     if in_billing_id is not null and in_actual_due is not null and in_billing_due is not null --and in_stmnt_date is not null
     then

          if  v_agency_criteria = 1 --Actual Due Date
          then

               v_input_date := to_date(in_actual_due );

          elsif    v_agency_criteria = 2
            then
              v_input_date := to_date(in_billing_due);


          else --Statement Generation Date

                if in_stmnt_date is not null
                 then
                   v_input_date := to_date(in_stmnt_date);
                 else
                   v_input_date := to_date(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_id));
                end if;
          end if; -- end of in_billing_id check
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some logic change below
          --OSBILLING-3321
          if v_billing_days is null --nvl(v_billing_days,0) > 0
          then



             v_billing_days := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_billing_id,11746);

          end if;

          -- If v_billing_days=45, due date should be  +1month+15 days instead of +45days
          v_agency_due_date :=to_char((add_months(to_date(v_input_date , 'DD-MON-YY'),floor(v_billing_days/30)) + mod(v_billing_days,30)),pkg_os_constant.DragonDateFormatDefault)  ;


     end if; -- end of in_billing_id check
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'fn_fitem_cal_due_date_new',
         'v_billing_days: '
               || v_billing_days
         || 'v_input_date: '
               || v_input_date
         || ' v_agency_criteria: '
               || v_agency_criteria
               || 'in_actual_due: '
               || in_actual_due
               || ' in_billing_due: '
               || in_billing_due
               || ' in_stmnt_date: '
               || in_stmnt_date
               || 'property value'
               ||pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_billing_id,11746)
               || 'v_billing_days'
               ||v_billing_days
               || 'v_agency_due_date'
               ||v_agency_due_date
          );

     end if;

return v_agency_due_date ;

exception
     when others then

          return v_agency_due_date ;

end fn_fitem_cal_due_date_new;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_created_agency_stmnt_batch
--
--   %USAGE
--        This function returns the first Agency Statement Batch which is in created State
--
--   %ALGORITHM
--        Get the Billing Account ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_billing_account_id            Billing Account ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_created_stmnt_batch
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type
)
return object.object_id%type
is
     v_return_value                     object.object_id%type := null;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_created_stmnt_batch';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_batch_id                         object.object_id%type;
     v_object_state                     object.object_id%type;

     v_object_index                     number;
     v_count                            number;
     v_object_list                      pkg_os_object.t_object_list;
     v_FITrxSetBatchType                number;
begin
     --
     -- Get the BillingAccountTransactionSet objects under the Billing Account
     --

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_billing_account_id,
          gObjType_BillingAccountTrxSet,
          v_object_list
     );


    if v_object_list.count > 0
     then

          v_object_index := v_object_list.first;


          while v_object_index is not null loop
            v_batch_id  := v_object_list(v_object_index);
            v_FITrxSetBatchType           := pkg_os_object_io.fn_object_bv_get
                                             (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_batch_id,
                                                   gbv_FITrxSet_BatchType    -- 29707346

                                             );

            if v_FITrxSetBatchType = gBatchType_AgencyStatement
              then
                v_object_state := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_batch_id,
                                             210153 -- Object State
                                            );

                if v_object_state in ( g_StmtBatchCreatedState, g_StmtBatchSentToPartnerState, g_StmtBatchReconciledState)--or v_object_state =39946 --(In-Process)
                then

                    return v_batch_id;
                end if;
            end if;




            v_object_index := v_object_list.next(v_object_index);

          end loop; -- end loop of v_object_index
        end if;

        return v_return_value;
end fn_get_created_stmnt_batch;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_totalDue_agency_stmt
--
--   %USAGE
--        This function returns the total due amount for that Agency Statement Batch.
--
--   %ALGORITHM
--        Get the Billing Account ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_btx_set_id                    Billing Account Transaction Set ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_totalDue_agency_stmt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_btx_set_id                      in             object.object_id%type
)
return object.object_id%type
is
     v_return_value                     object.object_id%type := null;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_totalDue_agency_stmt';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_agency_recon_id                  object.object_id%type;

     v_object_index                     number;
     v_total_amt                        number :=0;
     v_object_list                      pkg_os_object.t_object_list;
     v_due_amt                          number;
begin
     --
     -- Get the AgencyReconciliationRollUp objects under the BillingAccountTransactionSet
     --

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_btx_set_id,
          gObjType_AgencyRecon,
          v_object_list
     );


    if v_object_list.count > 0
     then

          v_object_index := v_object_list.first;


          while v_object_index is not null loop
            v_agency_recon_id  := v_object_list(v_object_index);
            v_due_amt          := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_agency_recon_id,
                                        gbv_Recon_TotalDue

                                   );
            v_total_amt := v_total_amt + v_due_amt;
            v_return_value :=     v_total_amt;
            v_object_index := v_object_list.next(v_object_index);

          end loop; -- end loop of v_object_index
        end if;

        return v_return_value;
end fn_get_totalDue_agency_stmt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_recon_id
--
--   %USAGE
--        This function returns recon ID for current date
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_recon_id
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_get_recon_id_t_f      in        number,
     in_object_id             in        object.object_id%type    default null
)
return varchar2
is
     v_return_value           varchar2(20);
     v_object_type_id         object.object_type_id%type;
     v_existing_recon_id      varchar2(20);
   v_count          number := 1;
   v_prev_count        number := 1;
   v_pay_amount_id      number;
   v_prev_pay_amount_id    number;
   v_pre_recon_date        varchar2(20);
   v_rep             number;

begin


     if ( nvl ( in_object_id, 0) = 0 ) then

          v_return_value := to_char(sysdate, 'YYYYMMDD') || '-' || substr(to_char(sysdate, 'DDMONYY'),3,3);

     else
       v_pay_amount_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_object_id,
                                             29755746  --Pay Amount
                                        );
        v_prev_pay_amount_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_object_id,
                                             32470846  --Previous Pay Amount
                                        );
          v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

          if ( v_object_type_id = gObjType_AgencyRecon ) then

               if( in_get_recon_id_t_f = gRecon_get_ReconId_True ) then

                    v_existing_recon_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_Recon_Recon_ID);

               else
                    v_existing_recon_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_Recon_PreRecon_ID);

               end if;

          elsif ( v_object_type_id = gObjType_RollupMember ) then

               if( in_get_recon_id_t_f = gRecon_get_ReconId_True ) then

                    v_existing_recon_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_ReconMember_Recon_ID);

               else
                    v_existing_recon_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, gbv_ReconMember_PreRecon_ID);

               end if;

          else
              -- v_return_value := 'object_type_error';
               v_existing_recon_id := 'object_type_error';

          end if;

          if ( v_existing_recon_id is not null ) then

          SELECT
          REGEXP_SUBSTR (v_existing_recon_id, '[^-]+', 1, 3)
          into v_prev_count
          FROM DUAL;

          if v_prev_pay_amount_id <> v_pay_amount_id
           then
              v_prev_count := v_prev_count + 1;
          end if;
          v_return_value := to_char(in_object_id) || '-' || v_pay_amount_id || '-' || v_prev_count;





















          else


          if v_object_type_id = gObjType_RollupMember
           then
             v_return_value := to_char(sysdate, 'YYYYMMDD') || '-' || v_pay_amount_id || '-' || v_count;
          else
              v_return_value := to_char(in_object_id) || '-' || v_pay_amount_id || '-' || v_count;
           end if ;
          end if;


     end if;

     return v_return_value;

exception
  when others then

  return null;

end fn_get_recon_id;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_pre_recon_amount
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_object_id             in        object.object_id%type    default null
)
return number
is
     v_return_value           number;
     v_amount                  number := 1;
     v_pre_recon_id           varchar2(50);

begin
          v_pre_recon_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_object_id,
                                             32408040  -- Pre-recon id
                                        );

          if v_pre_recon_id is not null
            then

              SELECT
              REGEXP_SUBSTR (v_pre_recon_id, '[^-]+', 1, 2)
              into v_amount
              FROM DUAL;
          end if;
          v_return_value := v_amount;
          return v_return_value;

exception
  when others then

  return null;

end fn_get_pre_recon_amount;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--MAGDEV-5163 starts
function fn_get_fitem_category_set_id
(
    in_category_set_value_id       in        object.object_id%type    default null
)
return number
is
     v_return_value           number;

begin
    if in_category_set_value_id = 946-- Commission
      then
        v_return_value := 2231;
    elsif in_category_set_value_id in (246,346,446,546)
    then
       v_return_value := 2331;
      end if;
        return v_return_value;
exception
  when others then

  return null;

end fn_get_fitem_category_set_id;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_agency_recon_batch
--
--   %USAGE
--        This function returns the appropriate Agency Recon Batch which has same from and To Date as the current batch.
--
--   %ALGORITHM
--        Get the BillingAccountTransactionSet ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_btx_set_id           BillingaccountTransactionSet Id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_agency_recon_batch
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_btx_set_id               in             object.object_id%type

)
return object.object_id%type
is
     v_return_value           object.object_id%type := null;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_agency_recon_batch';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_parent_billing_account_id        object.object_id%type;
   v_btx_set_id            object.object_id%type;
     v_batch_type                       object.object_id%type;
   v_batch_from_date                date;
   v_old_batch_from_date        date;
   v_batch_to_date          date;
   v_old_batch_to_date        date;

     v_object_index                     number;
     v_count                            number;
     v_object_list                      pkg_os_object.t_object_list;

begin

   v_batch_from_date := to_date(pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_btx_set_id,
                                             pkg_db_constant.gbv_FiTransactionSet_startdate
                                            ), pkg_os_constant.DragonDateFormatDefault);
   v_batch_to_date := to_date(pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_btx_set_id,
                                             pkg_db_constant.gbv_FiTransactionSet_enddate
                                            ), pkg_os_constant.DragonDateFormatDefault);

   --
     -- Get the Parent BillingAccount for BillingAccountTransactionSet ID
     --
     v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id,in_btx_set_id,gObjType_BillingAccount);
       if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '... The Batch Id: ' || in_btx_set_id || ' with Parent Billing Account Id : ' ||v_parent_billing_account_id ||'From Date : '||v_batch_from_date ||'To Date :'||v_batch_to_date);

       end if;

   --
     -- Get the BillingAccountTransactionSet objects under the Billing Account
     --

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_parent_billing_account_id,
          gObjType_BillingAccountTrxSet,
          v_object_list
     );


   if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...Number of BTX for the billing account is: ' || v_object_list.count );

       end if;

    if v_object_list.count > 0
     then

          v_object_index := v_object_list.first;


          while v_object_index is not null loop
                  v_btx_set_id  := v_object_list(v_object_index);
            v_batch_type := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_btx_set_id,
                                             gbv_FITrxSet_BatchType -- Batch Type
                                            );

           if v_batch_type = 1201 and v_btx_set_id <> in_btx_set_id -- Partner Current Account Statement
                and
            pkg_os_object.fn_object_state_get  (in_session_id, in_session_id, v_btx_set_id ) not in( gBatchStatus_Created, gBatchStatus_Discarded) --OSBILLING-4934
             then

          v_old_batch_from_date := to_date(pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_btx_set_id,
                                             pkg_db_constant.gbv_FiTransactionSet_startdate  -- OSBILLING-4795 TBD 29886846 (BASE) 30003446(DDWI)
                                            ), pkg_os_constant.DragonDateFormatDefault);
          v_old_batch_to_date := to_date(pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_btx_set_id,
                                             pkg_db_constant.gbv_FiTransactionSet_enddate
                                            ), pkg_os_constant.DragonDateFormatDefault);
            if v_batch_from_date = v_old_batch_from_date and v_batch_to_date = v_old_batch_to_date
          then
            v_return_value := v_btx_set_id;
            return v_return_value;
          end if;

           end if;

            v_object_index := v_object_list.next(v_object_index);

          end loop; -- end loop of v_object_index
        end if;
        return v_return_value;
end fn_get_agency_recon_batch;
--MAGDEV-5163 ends

-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_singlepay_fitem_due_get
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingactrxset_id         in             object.object_id%type   -- Billing Account Transaction set ID
)
return number
is
     v_fitransaction_id       object.object_id%type;
     v_fitem_type_id          number;
     v_fitem_id               object.object_id%type;
     v_fichange_list          pkg_os_object.t_object_list;
     v_index                  number;
     v_bal_amount             number;
-- 2016-08-30 osbilling-2932 cheryl

     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_singlepay_fitem_due_get';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
begin

      if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...in_billingactrxset_id  ' || in_billingactrxset_id
                );

       end if;

     v_fitransaction_id := pkg_os_object_search.fn_child_object_get
                           (in_session_id, in_transaction_id,
                            in_billingactrxset_id, gObjType_FITransaction,
                            gbv_FITransaction_Type, gFITrxType_Cash_Post);

     --2016-08-31 Cheryl osbilling-2932 add cash transfer type
     if v_fitransaction_id is null then
          v_fitransaction_id := pkg_os_object_search.fn_child_object_get
                                (in_session_id, in_transaction_id,
                                 in_billingactrxset_id, gObjType_FITransaction,
                                 gbv_FITransaction_Type, gFITrxType_CashCreditTransfer);
     end if;
       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );

       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_type_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          gbv_Fitem_debit_credit
                                     );

      if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...in_billingactrxset_id  ' || in_billingactrxset_id
               || ' fitem ' || v_fitem_id
               || ' fitem type ' || v_fitem_type_id
                );

       end if;

            if v_fitem_type_id = gFItemType_Credit
            then

            v_bal_amount        :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                         in_session_id,
                                         in_transaction_id,
                                         v_fitem_id,
                                         gbv_fitem_amount_due       ---   Due_Amount
                                     );
            end if;

      if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...in_billingactrxset_id  ' || in_billingactrxset_id
               || ' fitem ' || v_fitem_id
               || ' fitem type ' || v_fitem_type_id
               || ' balance ' || v_bal_amount
                );

       end if;
            v_index := v_fichange_list.next(v_index);

        end loop;

        return v_bal_amount;

exception

      when no_data_found then
      return null;

end fn_singlepay_fitem_due_get;

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitem_search_count
--
--   %USAGE
--        This function returns the count of Fitems based on search criteria.
--
--   %ALGORITHM
--        Get the AgencyReconciliationRollUp ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_agency_recon_id        AgencyReconciliationRollUp Id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_fitem_search_count
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_agency_recon_id                 in             object.object_id%type

)
return number
is
     v_return_value                     number := 0;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_fitem_search_count';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_recon_asso_policy                object.object_id%type;
     v_recon_asso_policy_trx            object.object_id%type;
     v_recon_unmatched_policy           varchar2(20);
     v_billing_trx_set_id               object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_agency_recon_id);
     v_billingaccont_id                 object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , v_billing_trx_set_id);
     v_count                            number :=0;

begin
      v_recon_asso_policy     := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29759946 -- Ass Policy
                                  );
      v_recon_asso_policy_trx := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29763746 -- Ass Policy Trx
                                  );
    v_recon_unmatched_policy  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29999746 -- Unmatched Policy
                                  );


      if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...Policy ID  ' || v_recon_asso_policy||
               '.. Policy Transaction Id . ' || v_recon_asso_policy_trx ||
               ' . Billing Acocunt .. '  || v_billingaccont_id ||
               '.. Recon UnMatched Policy Number' ||v_recon_asso_policy_trx );

       end if;

     if ( v_recon_asso_policy_trx is not null )
     then
          select
               count(1)
          into
               v_count
          from
               dragon_fitem f
          where
               f.billing_account_id =   v_billingaccont_id
          and
               f.fitem_type_id = pkg_db_object.gFItem_Debit
          and
               (nvl(v_recon_asso_policy ,0) =0  or f.policy_id = v_recon_asso_policy)
          and
               (
               nvl(v_recon_unmatched_policy ,'a') = 'a'   or  upper (f.policy_no) like '%'||upper(v_recon_unmatched_policy) ||'%'
               )
          and
               f.policy_transaction_id = v_recon_asso_policy_trx
          and
               f.current_recon_batch_id is null
          and
          --2017-01-24 Cheryl osbilling-3169 - add dividends, changed 246 to use gFItem_Category_Premium
/*--OSBILLING-3169 This check is not required Keerthi

               f.fitem_category_id in ( gFItem_Category_Tax , gFItem_Category_Surcharge, gFItem_Category_Fee, gFItem_Category_Comm, gFItem_Category_Premium, gFitem_Cat_Dividend )
          and*/
               f.balance <> 0
          ;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some part is commented in base above
     end if;

       return v_count;

end fn_get_fitem_search_count;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitem_id
--
--   %USAGE
--        This function returns the count of Fitems based on search criteria.
--
--   %ALGORITHM
--        Get the AgencyReconciliationRollUp ID, FItem ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_agency_recon_id               AgencyReconciliationRollUp Id
--              in_fitem_id                      FItem ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_fitem_id
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_agency_recon_id                 in             object.object_id%type,
     in_fitem_id                         in             object.object_id%type
)
return object.object_id%type
is
     v_return_value                     object.object_id%type := null ;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_fitem_search_count';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_recon_asso_policy            object.object_id%type;
   v_billing_trx_set_id               object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_agency_recon_id);
    v_billingaccont_id                 object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , v_billing_trx_set_id);
     v_recon_asso_policy_trx             object.object_id%type;
   v_assoc_policy                   object.object_id%type;
   v_recon_unmatched_policy        varchar2(20);
   v_assoc_policy_trx                 object.object_id%type;
      --2016-01-04 osbilling-178 Cheryl Changed name of BV from v_assoc_batch to v_current_batch because bv name was changed
    v_current_batch                        object.object_id%type;
   v_policy_number                     varchar2(20);

     v_category_id                     object.object_id%type;
     v_balance                         object.object_id%type;
     v_parent_ba_id                    object.object_id%type;


begin
   v_recon_asso_policy := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_agency_recon_id,
                                             29759946 -- Ass Policy
                                            );
   v_recon_asso_policy_trx := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_agency_recon_id,
                                             29763746 -- Ass Policy Trx
                                            );
    v_recon_unmatched_policy := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_agency_recon_id,
                                             29999746 -- Unmatched Policy
                                            );
           v_assoc_policy := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             29721246 -- Ass Policy
                                            );
          v_assoc_policy_trx := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             29748446 -- Ass Policy Trx
                                            );
-- 2016-01-04 osbilling-178 changed bv name
                         v_current_batch := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             gbv_Current_recon_batch_id -- Current Agency Recon Batch Batch
                                            );
          v_parent_ba_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             29704146 -- Parent Billing Account
                                            );

           v_category_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             gbv_Fitem_category -- Category_id
                                            );

          v_policy_number := pkg_os_object_io.fn_object_bv_get
                                           (
                                             in_session_id,
                                             in_transaction_id,
                                             v_assoc_policy,
                                             231 -- PolicyIdentifier Policy Number
                                            );
                         if ((v_recon_unmatched_policy is null or( v_policy_number is not null and v_policy_number like v_recon_unmatched_policy||'%' ) ) and (v_recon_asso_policy is null or v_recon_asso_policy =  v_assoc_policy)) and (v_recon_asso_policy_trx is null or v_recon_asso_policy_trx = v_assoc_policy_trx  ) and v_current_batch is null
             and v_category_id in ( gFItem_Category_Tax , gFItem_Category_Surcharge, gFItem_Category_Fee, gFItem_Category_Comm, 246 )  and v_billingaccont_id = v_parent_ba_id
            then
               return in_fitem_id;
          end if;
          return v_return_value;
end fn_get_fitem_id;

-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_trx_id
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_number                   in             object_bv_value.business_variable_value%type,
     in_trn_seq_number                  in             object_bv_value.business_variable_value%type,
     in_trn_eff_date                    in             date
)
return object.object_id%type
is
 v_return_value   object.object_id%type := null;
 v_policy_id      object.object_id%type;
begin
          select
               policy_id
          into
               v_policy_id
          from
               dragon_policy
          where
               policy_number =  upper(in_policy_number);

          if v_policy_id is not null
            then
            select
              policy_trx_id
            into
               v_return_value
            from
               dragon_policy_trx t
            where
               t.policy_id = v_policy_id
               and
               trunc(t.policy_trx_eff_date) = trunc(in_trn_eff_date)
               and
               t.policy_trx_seq_num = in_trn_seq_number;
          end if;

  return v_return_value;
exception
  when no_data_found then
    return null;
  when too_many_rows then
    return null;
end fn_get_trx_id;
----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_fitem_last_fnds_mv_date
(
     in_session_id            in             object.object_id%type,
     in_transaction_id        in             object.object_id%type,
     in_fitem_id              in             object.object_id%type
) return varchar2
is
v_max_date_val  object_bv_value.business_variable_value%type;
begin
  select
     max(pkg_os_object_io.fn_object_bv_get
         (
           in_session_id,
           in_transaction_id,
           fichange_id,
           29719346 /* FIChange - Date - Date Processing*/
         )
        )
  into
    v_max_date_val
  from
     dragon_fichange
  where
     fitem_id=in_fitem_id
     and nvl(action_delta,0) <> 0;

return v_max_date_val;
end;
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_val_auto_apply_underpay
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_auto_apply_tf                   in             lookup_list_value.lookup_enum%type,
     in_pay_amt                         in             number
)
return varchar2
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_val_auto_apply_underpay';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_policywise_cash             number;
     v_policy_past_due             number;
     v_policy_current_due          number;
     v_total_due                   number;
     v_return_val                  varchar2(1);

begin

     if in_policy_id is not null
     then

          v_policywise_cash        := fn_policy_cash_detail(in_policy_id );
          v_policy_past_due        := fn_policy_due_amounts(in_policy_id, gPolicy_BillMeth_Direct, PastDue);
          v_policy_current_due     := fn_policy_due_amounts(in_policy_id, gPolicy_BillMeth_Direct, CurrentDue);
          v_total_due              := nvl(v_policy_past_due,0) + nvl(v_policy_current_due,0);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'For Policy ID: '
                    || in_policy_id
                    || ' v_policywise_cash: '
                    || v_policywise_cash
                    || 'v_policy_past_due: '
                    || v_policy_past_due
                    || 'v_policy_current_due: '
                    || v_policy_current_due
                    || 'v_total_due: '
                    || v_total_due
                    || ' in_pay_amt: '
                    ||in_pay_amt
               );

          end if;

          if nvl(in_pay_amt,0) <  v_total_due then

               v_return_val := 'F';

          else

               v_return_val := 'T';

          end if;

     elsif in_policy_id is null and in_auto_apply_tf = 1
     then

          v_return_val := 'F';

     else

          v_return_val := 'T';

     end if;

     return v_return_val;


end fn_val_auto_apply_underpay;


-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_subledger_batch_id
(
     in_session_id                      in             object.object_id%type,



     in_transaction_id                  in             object.object_id%type,
     in_subledger_id                    in             number,
     in_billing_account_id              in             object.object_id%type
)
return number
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_subledger_batch_id';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_subledger_batch_id          number;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For in_subledger_id: '
               || in_subledger_id
               || ' in_billing_account_id: '
               || in_billing_account_id
          );

     end if;

     select
          distinct creator_fitransactionset_id
     into
          v_subledger_batch_id
     from
          vw_billing_acc_sub_ledger
     where
          subledger_id  = in_subledger_id


    ;

     return v_subledger_batch_id;

exception when others then
return null;
end fn_get_subledger_batch_id;

-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_disb_batch_process_flag_get
(
     in_session_id            in             object.object_id%type,
     in_transaction_id        in             object.object_id%type,
     in_billacctrxset_id      in             object.object_id%type,
     out_process_flag         out            boolean,
     out_fitem_status         out            lookup_list_value.lookup_enum%type
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disb_batch_process_flag_get';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_disburse_profile                 object.object_id%type;
     v_disburse_mode                    lookup_list_value.lookup_enum%type;
begin

    --  Core logic
    --
    out_fitem_status      :=   pkg_db_billing_payable.gFitemStatus_ReqSentToAP;
    out_process_flag      :=   false;

    --
    --  MAG specific logic
    --
    begin
       null;









































    end; -- MAG specific logic

end sp_disb_batch_process_flag_get;


-----------------------------------------------------------------------------------------------------------------------------------------------------


function fn_get_fitrn_invoice_due_date
(
     in_session_id              in       object.object_id%type,
     in_transaction_id          in       object.object_id%type,
     in_batransactionset_id        in       object.object_id%type
)
return  varchar2
as
   v_procedure_name                   constant  system_log.program_name%type := pkg_name||'fn_get_fitrn_invoice_due_date';
   v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
   v_max_due_date            varchar2(100) := null;
   v_fitransaction_id                 object.object_id%type;
   v_policytransaction_id             object.object_id%type;
   v_basistransaction_id              object.object_id%type;
   v_transaction_type_id           pd_transaction_type.pd_transaction_type_id%type;
--2017-10-26 Cheryl
   v_lead_time                        pd_property.pd_property_value%type;
   v_lead_time_point_date              date;

begin

     ---
     --- Get all the FItems under FItransaction
     ---
     pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '... Entering Invoice  Due Date Identification '

           );

   ---
     --- Find out the reference to current fitransaction
     ---

   v_fitransaction_id := pkg_os_object_io.fn_object_bv_get
              (
                in_session_id,
                in_transaction_id,
                in_batransactionset_id,
                gbv_BillAcctTrxSet_CurrTrx --reference current transaction
              );
   if v_fitransaction_id is not null
   then

        ---
        --- Find out the reference to associated  policy transaction
            ---

          v_policytransaction_id := pkg_os_object_io.fn_object_bv_get
              (
                in_session_id,
                in_transaction_id,
                v_fitransaction_id,
                gbv_FITransaction_RefPoltrx --reference associated policy transaction
              );

      if  v_policytransaction_id is not null then

        v_basistransaction_id := pkg_os_object_io.fn_object_bv_get
              (
                in_session_id,
                in_transaction_id,
                v_policytransaction_id,
                gbv_PolicyTrx_BasisRefTrx --reference basis policy transaction
              );

        v_transaction_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_basistransaction_id, gbv_PolicyTransactionType /*gbv_PolicyTransactionType*/);

        if v_transaction_type_id in (1, 2) -- this is cancellation
        then
 --2017-10-26 osbilling-3568 Cheryl
 --           take the greatest of the transaction effective date or processed date
 --           add the lead time
            v_lead_time := pkg_os_product.fn_product_property_get
                           (in_session_id,
                           in_transaction_id,
                           v_basistransaction_id,
                           pkg_db_stmt.gPropertyDirectLeadTime
                           );

            v_lead_time_point_date := to_date( greatest(pkg_os_object_io.fn_object_bv_get
              (
                in_session_id,
                in_transaction_id,
                v_basistransaction_id,
                gbv_PolTrxEffectiveDate --effective policy transaction
              ) ,
              pkg_os_object_io.fn_object_bv_get
              (
                in_session_id,
                in_transaction_id,
                v_basistransaction_id,
                gbv_PolicyTrx_ProcessDate --process date
              )),pkg_os_constant.DragonDateFormatDefault) ;

              v_lead_time_point_date := v_lead_time_point_date + v_lead_time;

              return to_char(v_lead_time_point_date, 'YYYYMMDDHHMMSS') ;

        end if;

      end if;

     end if;

     select to_char(MAX(due_date),'YYYYMMDDHHMMSS') into v_max_due_date FROM DRAGON_FICHANGE WHERE BILLINGACCOUNTTRXSET_ID = in_batransactionset_id and abs(nvl(fitransaction_amount,0)) >= 0.1 order by due_date;

     return v_max_due_date ;

     exception
     when others then
         pkg_os_logging.sp_log_error
           (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '....Error '||sqlerrm
           );
     return null;



end fn_get_fitrn_invoice_due_date;

-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_amnt_writeoff
(
     in_object_id             in        object.object_id%type,
     in_object_type_id        in        object.object_type_id%type, -- Billing Account,
     in_batrx_type_id         in        number -- Automated write of batch --901 , Manua write -2101,2701 write off reversal

) return number is

     v_amount     number  := 0;
     v_fitrxn_type           varchar2(500);
begin


    select
          nvl(sum ( b.batch_amount),0)
     into
          v_amount
     from
           dragon_billingaccounttrxset b--, dragon_fichange f
     where
     (
          b.parent_billing_account_id =   in_object_id --92390453756--
          and
          b.batch_type_id  =  in_batrx_type_id -- 2101 Manual, 901 --Austotamted write off
          and
          b.batch_status_id = gBatchStatus_Processed--39846 --Processed

     )
     or
     (
          b.parent_billing_account_id =   in_object_id
          and
          b.batch_type_id  in (gFITrxType_ReversalWriteOff ,gFITrxType_Reversal) -- 2701,7801 -- Write Off Reversal
          and
          b.created_by_billingtrxset is not null
          and
          b.created_by_billingtrxset
               in
               (
                    select
                         bi.billingaccounttrxset_id
                    from
                         dragon_billingaccounttrxset bi
                    where
                         bi.batch_type_id = in_batrx_type_id
                    and
                         bi.batch_status_id = gBatchStatus_Processed --39846  --Processed
                 )
     )
   ;

     return v_amount;

end fn_amnt_writeoff;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as seems only name is different and also some code added in gcna
--
--   %NAME
--        fn_get_category_amount
--
--   %USAGE
--        This function returns the credit available against policies for a Billing Account
--        Credit Against Poicies - Any policy financials with a -ve balance.
--
--
--   %PARAM    in_object_id        Billing Account ID
--   %PARAM    in_credit_type      1-Common, 2-External, 3-Group Dividens, 4-Dividends(Endorsement Transaction)
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_get_category_amount
(
     in_object_id             in        object.object_id%type, -- Billing Account ID
     in_credit_type           in        number default 1, -- 1-Common, 2-External, 3-Group Dividens, 4-Dividends(Endorsement Transaction)
     in_credit_level          in        number default 1 -- 1-policy, 2-account
)
return number
is

    v_amount     number  := 0;

begin
       --OSBILLING-5926
      if in_credit_type = gFitemCreditType_Common
      then

          if in_credit_level = 1
          then

               select
                    nvl(nvl(sum(balance),0) - sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
               into
                    v_amount
               from
                    dragon_fitem
               where
                    billing_account_id = in_object_id
               and
                    policy_id is not null
               and  
                    value_stream is null -- [KR] 
               and
                    fitem_category_id  not in (gFItem_Category_Cash,gFITEM_Category_Comm,gFItem_Category_DefPremComm) -- OSBILLING-3885
               and
                    balance < -0.01
               --and
                    --disbursement_batch_id is null -- OSPRODUCT-3712
               ;
           else
                select
                    nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
               into
                    v_amount
               from
                    dragon_fitem
               where
                    billing_account_id = in_object_id
               and
                    policy_id is null
               and 
                    value_stream is null -- [KR] 
               and
                    fitem_category_id  not in (gFItem_Category_Cash,gFITEM_Category_Comm,gFItem_Category_DefPremComm) -- OSBILLING-3885
               and
                    balance < -0.01
               --and
                    --disbursement_batch_id is null -- OSPRODUCT-3712
               ;
            end if;

     elsif in_credit_type = gFitemCreditType_External
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id in ( gFitem_Category_ExtCredit)
          --and
               --fitem_type_id = gFItemType_Credit
          and
               balance <> 0
          --and
               --disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemCreditType_GrpDvds
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id = gFitem_Cat_GroupDividends
          --and
               --fitem_type_id = gFItemType_Credit
          and
               balance < -0.01
          --and
               --disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemDebitType_Dividends
     then
        select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id = gFitem_Cat_Dividend
          and
               fitem_type_id = gFItemType_Debit
          and
               abs(balance) > 0.01
          --and
               --disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemEndors_ReduceDiv
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_category_id = gFitem_Cat_Dividend
          --and
               --fitem_type_id = gFItemType_Debit
          and
               balance < - 0.01
          --and
               --disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemCreditType_RetroAdj
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id = in_object_id
          and
               policy_id is not null
          and
               fitem_sub_category_id = gFitem_SubCat_PremRetroAdj
          --and
               --fitem_type_id = gFItemType_Debit
          and
               balance < - 0.01
          --and
               --disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     end if;

   return v_amount;

end fn_get_category_amount;
---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_policy_credit_amount
--
--   %USAGE
--        This function returns the credit  amounts for the policy
--
--
--   %ALGORITHM
--         Get the total credit amount for the Policy with the consideration
--         of Agency/Customer due dates for the Policy and Due Type ( Past/Current/Future).
--
--         If a policy is multipayer one,
--           1. Get policy current term.
--           2. Get all payers from the current term
--           3. Get credit for every payer
--           4. SUM all credits.
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_polbillmeth_type number
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number

-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask and check as some code are at different place
function fn_policy_credit_amount
(
     in_session_id            in object.object_id%type,--OSPRODUCT-6046
     in_transaction_id        in object.object_id%type,--OSPRODUCT-6046
     in_object_id             in object.object_id%type,
     in_credit_type           in number default 1, -- 1-Common, 2-External, 3- Group Dividends(Ad-hoc journal), 4- Dividends(Endorsement))
     in_business_relation_id  in        object.object_id%type default null, -- OSPRODUCT-29008
     in_account_type_id       in object.object_id%type default null         -- OSPRODUCT-29008
)
return number
is

     v_amount                 number    :=   0;
     v_grace_period_days      number    :=   0;
     v_current_sysdate        number;
     v_policy_past_days       number;
     v_cust_billing_acc_id    number;

     --PMADEV-2247
     v_billing_method         number;
     v_Agency                 number;

     --#MP
     v_policy_multipayer_mode boolean := PKG_DB_MULTIPAYER.fn_multipayer_mode_tf
                                         (
                                              in_session_id,--OSPRODUCT-6046
                                              in_transaction_id,--OSPRODUCT-6046
                                              in_object_id
                                         );

     v_billing_accont_tab     any_id_tt := any_id_tt();

     v_policy_term_id         object.object_id%type;
     -- /#MP

begin

     if v_policy_multipayer_mode
     then
          -- Multi payer mode
          --
          v_policy_term_id := fn_get_policy_current_term
                              (
                                   in_session_id,--OSPRODUCT-6046
                                   in_transaction_id,--OSPRODUCT-6046
                                   in_object_id
                              );

          --  Find all payers under the Policy Term
          --
          for c in (
                    select
                         distinct payer_billing_account_id
                    from
                         DRAGON_POLICY_TERM_PAYER
                    where
                         policy_id = in_object_id
                    and
                         policy_term_id = v_policy_term_id
                   )
          loop
               -- Populate a list of payers. this list will be used in sql query
               --
               v_billing_accont_tab.extend(1);
               v_billing_accont_tab(v_billing_accont_tab.count) := any_id_ot( id => c.payer_billing_account_id );
          end loop;

     else
          -- Single payer mode
          --
          v_current_sysdate := to_number (to_char(pkg_os_time.fn_os_sysdate
                                                  (    in_session_id,--OSPRODUCT-6046
                                                       in_transaction_id,--OSPRODUCT-6046
                                                       in_object_id
                                                  )
                                             , 'YYYYMMDD'
                                          ));

          v_billing_method := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,--OSPRODUCT-6046
                                   in_transaction_id,--OSPRODUCT-6046
                                   in_object_id,
                                   27372305
                              );

          if v_billing_method = 2   -- Agency Billed
          then
               v_Agency := pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,--OSPRODUCT-6046
                                in_transaction_id,--OSPRODUCT-6046
                                in_object_id,
                                26590907
                           );

               v_cust_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,--OSPRODUCT-6046
                                             in_transaction_id,--OSPRODUCT-6046
                                             v_Agency,
                                             gObjType_BillingAccount
                                        );
          else
               v_cust_billing_acc_id := pkg_db_functions.fn_get_policy_billing_account(in_session_id, in_transaction_id, in_object_id);--vibha--OSPRODUCT-6046
          end if;

          -- Populate a list of payers. There is only one payer in the list as this is a single payer mode.
          -- This list will be used in sql query
          --
          v_billing_accont_tab.extend(1);
          v_billing_accont_tab(1) := any_id_ot( id => v_cust_billing_acc_id );

     end if;

     if in_credit_type = gFitemCreditType_Common
     then
          select
               abs(nvl(sum(balance),0))- abs(sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)))--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem df
               --20180814 Cheryl osbilling-4755
               --  join
               --       table(v_billing_accont_tab) ba
               --  on
               --       (ba.id = dragon_fitem.billing_account_id)
          where
               policy_id = in_object_id
          and 
               value_stream is null -- [KR] 
               -- and
               -- billing_account_id = v_cust_billing_acc_id
          and
               fitem_category_id   not in (gFItem_Category_Cash,gFITEM_Category_Comm,gFItem_Category_DefPremComm, gFItem_Category_Disburse)--GCNA-2813  --20180820 Cheryl GCNA-3105 Add 5046 disbursement
          and
               nvl(fitem_sub_category_id,0) <> gFItem_SubCat_PayPlanChange
          and
               balance <=-0.01
               -- 20180814 Cheryl osbilling-4755
               -- OSPRODUCT-2431          adding gv_department_of_surcharge
          and 
               nvl(df.billing_account_type_id,1501) not in (1501, 1946,1514, gv_department_of_surcharge)--GCNA-2813
          --and
               --df.disbursement_batch_id is null -- OSPRODUCT-3712
          and
               (in_business_relation_id is null or
               df.fitem_business_relationship = in_business_relation_id                          -- OSPRODUCT-29008
               )
          and 
               (
               in_account_type_id  is null or df.billing_account_type_id <> in_account_type_id   -- OSPRODUCT-29008
               )
										  
															   
																															 
          ;

     elsif in_credit_type = gFitemCreditType_External
     then
          select
               nvl(abs(nvl(sum(balance),0)) - abs(sum(nvl( CURR_DISBURSEMENT_AMOUNT,0))),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          join
               table(v_billing_accont_tab) ba
          on
               (ba.id = dragon_fitem.billing_account_id)
          where
               policy_id = in_object_id
          --and
          --   --vibha
          --   billing_account_id = v_cust_billing_acc_id
          and
               fitem_category_id in ( gFitem_Category_ExtCredit )--GCNA-2276
          and
               fitem_type_id = gFItemType_Credit
          and
               balance <=-0.01
          --and 
               --dragon_fitem.disbursement_batch_id is null -- OSPRODUCT-3712
          ;															   

     elsif in_credit_type = gFitemCreditType_GrpDvds
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          join
               table(v_billing_accont_tab) ba
          on
               (ba.id = dragon_fitem.billing_account_id)
          where
               policy_id = in_object_id
          --and
          --   --vibha
          --   billing_account_id = v_cust_billing_acc_id
          and
               fitem_category_id = gFitem_Cat_GroupDividends
          and
               fitem_type_id = gFItemType_Credit
          and
               balance < -0.01
          --and 
               --dragon_fitem.disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemDebitType_Dividends
     then
          select
               nvl(abs(nvl(sum(balance),0))- abs(sum(nvl( CURR_DISBURSEMENT_AMOUNT,0))),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          join
               table(v_billing_accont_tab) ba
          on
               (ba.id = dragon_fitem.billing_account_id)
          where
               policy_id = in_object_id
          --and
          --   billing_account_id = v_cust_billing_acc_id
          and
               fitem_category_id = gFitem_Cat_Dividend
          and
               fitem_type_id = gFItemType_Debit
          and
               balance > 0.01
          --and 
               --dragon_fitem.disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     elsif in_credit_type = gFitemEndors_ReduceDiv
     then
          select
               nvl(nvl(sum(balance),0)- sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)--OSPRODUCT-3715
          into
               v_amount
          from
               dragon_fitem
          join
               table(v_billing_accont_tab) ba
          on
               (ba.id = dragon_fitem.billing_account_id)
          where
               policy_id = in_object_id
          --and
          --   billing_account_id = v_cust_billing_acc_id
          and
               fitem_category_id = gFitem_Cat_Dividend
          and
               fitem_type_id = gFItemType_Debit
          and
               balance < 0.01
          --and 
               --dragon_fitem.disbursement_batch_id is null -- OSPRODUCT-3712
          ;

     end if;

     return v_amount;

end fn_policy_credit_amount;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_verify_selected_items
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_list_selected_ids          in             varchar2,
     in_list_total_id              in             object.object_id%type,
     in_bv_id                      in             business_variable.business_variable_id%type default null,
     in_bv_value                   in             object_bv_value.business_variable_value%type default null

)
return char
is
     v_selected_object_ids         pkg_os_token.t_string_table;
     v_object_index                number;
     v_aging_status_id             object.object_id%type;
begin

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'Function fn_verify_selected_items ',
               '......The toal items selected ' || in_list_total_id ||
               'Selected Items' || in_list_selected_ids
          );

         pkg_os_token.sp_tokenize_string
          (
               in_list_selected_ids,
               ',',
               v_selected_object_ids
          );

          v_object_index           :=        v_selected_object_ids.first;

          --if ( in_count_check = 'T')
          --then

              -- if (  1+LEN(in_list_selected_ids)-LEN(SUBSTITUTE(in_list_selected_ids,",","")) = in_list_total_id )
               --then

                 --    return 'F';

              -- end if;

        --  end if;








          if ( in_bv_id is not null and in_bv_value is not null )
          then
               while v_object_index is not null
               loop

               if ( nvl(pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_selected_object_ids(v_object_index),in_bv_id),0) = in_bv_value)                then
                    return 'F';

               end if;

                v_object_index := v_selected_object_ids.next( v_object_index );

               end loop;

          end if;

     return 'T';

end fn_verify_selected_items;

-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_term_last_audit_trxid
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_term_object_id                  in             object.object_id%type
)
return object.object_id%type
is
  v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_term_last_audit_trxid';
  v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
  v_return_value           object.object_id%type;

  c_enum_PolicyTRX_Audit           number := 11;

  l_objectlist_Audit_belongsTo     pkg_os_object.t_object_list;
  v_audmax_idx                     number := 0;
  v_audtrx_dt                      date;
  v_audmax_dt                      date;

begin
  if v_session_control.gLogging_Full
  then
    pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
        --
        'Looking for Audit TRX for Policy Term ID: ' || in_term_object_id
     );
  end if;

  -- Get all the policy transaction object that refers the policy Term in question via the BelongsTo reference
  --
  pkg_os_object_search.sp_object_referencers_get (in_session_id, in_transaction_id,
      --
      in_term_object_id,
      pkg_os_constant_bv.gbv_RefPolcyTrxnBelongsTo,
      l_objectlist_Audit_belongsTo
     );

  for i in 1..l_objectlist_Audit_belongsTo.count
  loop
    --  Check if referencing transaction is of type Audit
    --
    if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,
           --
           l_objectlist_Audit_belongsTo(i),
           pkg_os_constant_bv.gbv_PolicyTranType
           --
          ) = c_enum_PolicyTRX_Audit
    then
      --  Get the process date of the Audit TRX
      --
      v_audtrx_dt  := to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,
                                  --
                                  l_objectlist_Audit_belongsTo(i),
                                  pkg_os_constant_bv.gbv_PolicyTranProcessDate
                                  ),
                              pkg_os_constant.DragonDateFormatDefault
                             );

      --  Find the latest Audit TRX by process date
      --
      if v_audmax_idx = 0
      then
        v_audmax_idx := i;
        v_audmax_dt  := v_audtrx_dt;
      else
        if v_audtrx_dt > v_audmax_dt
        then
          v_audmax_idx := i;
          v_audmax_dt  := v_audtrx_dt;
        end if;
      end if;

      if v_session_control.gLogging_Full
      then
        pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
            --
            'Referenced Audit Trx: ' || l_objectlist_Audit_belongsTo(i) ||
            '; process date='||to_char(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,l_objectlist_Audit_belongsTo(i), pkg_os_constant_bv.gbv_PolicyTranProcessDate),pkg_os_constant.DragonDateFormatDefault),pkg_os_constant.DragonDateFormatDetail) ||
            '; eff date='||to_char(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,l_objectlist_Audit_belongsTo(i), pkg_os_constant_bv.gbv_PolicyTranEffectiveDate),pkg_os_constant.DragonDateFormatDefault),pkg_os_constant.DragonDateFormatDetail)
           );
      end if;

    end if;
  end loop;

  if v_audmax_idx > 0
  then
    v_return_value  := l_objectlist_Audit_belongsTo(v_audmax_idx);

    if v_session_control.gLogging_Full
    then
      pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
          --
          'The latest Audit TRX ID is '||l_objectlist_Audit_belongsTo(v_audmax_idx)||
          '; process date='|| to_char(v_audmax_dt,pkg_os_constant.DragonDateFormatDetail)||
          '; v_return_value='||v_return_value
        );
    end if;

  else
    v_return_value  := null;

    if v_session_control.gLogging_Full
    then
      pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
          --
          'No Audit TRX found'
       );
    end if;

  end if;

  return v_return_value;

end fn_get_term_last_audit_trxid;

-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_partDepOfTax_BA
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in             object.object_id%type

) return number
is
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_name'||'fn_get_partnerDepartmentofTaxaton';

     io_object_cache                    pkg_os_object_cache.t_object_cache;
     v_primary_entity_id                object.object_id%type ;
     v_primary_address_id                object.object_id%type ;
     v_partner_id                       object.object_id%type ;
     v_in_action_object_typ             object.object_type_id%type;
     v_ultimate_parent_id               object.object_id%type ;
     v_customer_id                      object.object_id%type ;
     v_jurisdiction_id                  object_bv_value.business_variable_value%type;
     v_depOfTax_ba_id                   object.object_id%type ;
     v_count_partner                    number;
      partner_id                        object.object_id%type;
begin

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering with Action Object ID: '
               ||in_action_object_id
          );

     end if;

     --
     -- Check  the in_action_object_id - object type.


     v_in_action_object_typ:= pkg_os_object.fn_object_type_get
     (
          in_session_id,
          in_transaction_id,
          in_action_object_id
     );

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...In Action Object Type: '
               ||v_in_action_object_typ
          );

     end if;


     Case when v_in_action_object_typ in (24,2276904) then --gObjType_Policy

          v_ultimate_parent_id := pkg_os_object_search.fn_object_ultimate_parent_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id
          );

          v_customer_id := v_ultimate_parent_id;


          -- get the primary entity id

          v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               v_customer_id,
               gbv_CustRefPrimaryEntity
          );


          -- Get the ref primary address

          v_primary_address_id := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               v_primary_entity_id,
               gbv_Entity_RefRrimaryAddress                       ----ClientEntity - xReference - _Reference_PrimaryAddress
          );


          --Get the jurisdiction id

          v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               v_primary_address_id,
               pkg_base_submission.gbv_CustomerAddressState                        -- Address Address State
          );


     else --gObjType_ClentJurisdiction

          --Get the jurisdiction id

          v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_os_rating.gbvObjectJurisdiction                      -- clientjurisdiction state
          );

    
     end case;
     

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... v_jurisdiction_id: '
               || v_jurisdiction_id
          );

     end if;     
       
     if v_jurisdiction_id  is not null 
     then
            
          select count(*)
          into v_count_partner
          from dragon_partner
          where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
          and partner_state_id  = 32905
          and partner_type_id = 1946;


          if v_count_partner <1 then

               return null;

          elsif   v_count_partner >1  then


               select partner_id
               into partner_id
               from dragon_partner
               where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
               and partner_state_id  = 32905
               and partner_type_id = 1946
               and rownum=1 ;


               v_depOfTax_ba_id := pkg_os_object_search.fn_object_11_child_get

               (

                    in_session_id,

                    in_transaction_id,

                    partner_id,

                    gObjType_BillingAccount

               );



               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id, 
                         in_transaction_id, 
                         v_procedure_name,
                         '...Partner Id: '|| partner_id||
                         ' Department of Taxation Billing Account: ' || v_depOfTax_ba_id
                    );

               end if;

               return v_depOfTax_ba_id;

          elsif  v_count_partner =1  then

               select partner_id
               into partner_id
               from dragon_partner
               where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
               and partner_state_id  = 32905
               and partner_type_id = 1946;

               v_depOfTax_ba_id := pkg_os_object_search.fn_object_11_child_get
               (

                    in_session_id,
                    in_transaction_id,
                    partner_id,
                    gObjType_BillingAccount

               );



               if v_session_control.gLogging_Full then



               pkg_os_logging.sp_log
               (
                    in_session_id,               
                    in_transaction_id, 
                    v_procedure_name,
                    '...Partner Id: '|| partner_id||
                    ' Department of Taxation Billing Account: ' || v_depOfTax_ba_id 
               );

               end if;

               return v_depOfTax_ba_id;


          end if;
     end if;
	 
	 return null;
          
     
exception

      when others
      then
      return null;
end fn_get_partDepOfTax_BA;


-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_ResiDepOfTax_BA
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in             object.object_id%type

) return number
is
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_name'||'fn_get_partnerDepartmentofTaxaton';

     io_object_cache                    pkg_os_object_cache.t_object_cache;
     v_primary_entity_id                object.object_id%type ;
     v_primary_address_id          object.object_id%type ;
     v_partner_id                       object.object_id%type ;
     v_in_action_object_typ             object.object_type_id%type;
     v_ultimate_parent_id               object.object_id%type ;
     v_customer_id                      object.object_id%type ;
     v_jurisdiction_id                  object_bv_value.business_variable_value%type;
     v_depOfTax_ba_id                   object.object_id%type ;
     v_count_partner                    number;
      partner_id                        object.object_id%type;
begin

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering with Action Object ID: '
               ||in_action_object_id
          );

     end if;

     --
     -- Check  the in_action_object_id - object type.


     v_in_action_object_typ:= pkg_os_object.fn_object_type_get
                              (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id
                              );

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...In Action Object Type: '
               ||v_in_action_object_typ
          );

     end if;


     Case when v_in_action_object_typ in (204) then --gObjType_ClentJurisdiction

      --Get the jurisdiction id

           v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                      in_action_object_id,
                                     21768101                      -- clientjurisdiction state
                                );


          if   v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... v_jurisdiction_id: '
                    || v_jurisdiction_id
               );

          end if;

          select count(*)
          into v_count_partner
          from dragon_partner
          where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
          and partner_state_id  = 32905
          and partner_type_id = 1946;


          if v_count_partner <1 then

                    return null;

          elsif   v_count_partner >1  then


                    select partner_id
                    into partner_id
                    from dragon_partner
                    where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
                    and partner_state_id  = 32905
                    and partner_type_id = 1946
                    and rownum=1 ;


                       v_depOfTax_ba_id := pkg_os_object_search.fn_object_11_child_get

         (

          in_session_id,

          in_transaction_id,

          partner_id,

          gObjType_BillingAccount

          );



     if v_session_control.gLogging_Full then



          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,

               '...Partner Id: '|| partner_id||

      ' Department of Taxation Billing Account: ' || v_depOfTax_ba_id );

   end if;

              return v_depOfTax_ba_id;




          elsif  v_count_partner =1  then

                    select partner_id
                    into partner_id
                    from dragon_partner
                    where partner_us_state = pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , v_jurisdiction_id )
                    and partner_state_id  = 32905
                    and partner_type_id = 1946;

                       v_depOfTax_ba_id := pkg_os_object_search.fn_object_11_child_get

         (

          in_session_id,

          in_transaction_id,

          partner_id,

          gObjType_BillingAccount

          );



     if v_session_control.gLogging_Full then



          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,

               '...Partner Id: '|| partner_id||

      ' Department of Taxation Billing Account: ' || v_depOfTax_ba_id );

   end if;

              return v_depOfTax_ba_id;


          end if;
     end case;
end  fn_get_ResiDepOfTax_BA;
 -----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_ON
--
--   %USAGE
--       This function returns tax value of Ontario state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_return_tax_val_On
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_fitransaction_list       pkg_os_object.t_object_list;
     v_index                       number;
     v_index1                       number;
     v_bal_amount                  number;
     v_fitem_bal                   number :=0;
     v_fitem_category_id           number;
     v_FITrx_TransactionType_id     number;
     v_batrxSet_id                 object.object_id%type;
     v_policytrx_id                     object.object_id%type;
     v_parent_billing_account_id   number;


     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_OnTax_Val             number;
     v_broker_id                   number;
v_fitem_Tax_Val                   number;
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_db_functions. '||'fn_return_tax_val_On';
begin
     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside fn_return_tax_val_On: '||in_fitransaction_id

                              );

                         end if;

        v_policytrx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_fitransaction_id,
                                                      629
                                                       );
       v_batrxSet_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policytrx_id,
                                                      31866546                    --- policy trx associated batrxset
                                                  );


                                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_batrxSet_id :'||v_batrxSet_id

                              );

                         end if;
      pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_batrxSet_id,
                   2365046, -- fitrsactions
                  v_fitransaction_list
             );

          v_index1 :=  v_fitransaction_list.first;

       while (v_index1 is not null)
       loop
           v_FITrx_TransactionType_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_list(v_index1),
                                           pkg_db_object.gbv_FITrx_TransactionType
                                     );

          if ( v_FITrx_TransactionType_id   =602)then

          v_fitransaction_id := v_fitransaction_list(v_index1);

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;

        end if;

          v_index1 := v_fitransaction_list.next(v_index1);
       end loop;

      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;
   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);

       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );


      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fichange_list count: '
                                   ||v_fichange_list.count
                              );

           end if;
       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside 2nd while loop'
                              );

           end if;
            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

                                     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_id: '
                                   ||v_fitem_id ||' v_fitem_category_id:'||v_fitem_category_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type
                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_parent_billing_account_id: '
                                   ||v_parent_billing_account_id ||' v_billing_account_type:'||v_billing_account_type||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );





















































           end if;












































                   if (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                               if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_address_id: '
                                   ||v_primary_address_id ||' v_jurisdiction_id:'||v_jurisdiction_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
                         if (v_jurisdiction_id =5813 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                                      v_fitem_bal :=  v_fitem_bal    +v_fitem_Tax_Val;

                                                      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_Tax_Val: '
                                   ||v_fitem_Tax_Val ||' v_fichange_list(v_index):'||v_fichange_list(v_index)|| 'v_fitem_bal:
 '|| v_fitem_bal
                              );

           end if;


                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_fitem_bal;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_On
 ;
  -----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_BC
--
--   %USAGE
--       This function returns tax value of BC state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_return_tax_val_BC
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_fitransaction_list       pkg_os_object.t_object_list;
     v_index                       number;
     v_index1                       number;
     v_bal_amount                  number;
     v_fitem_bal                   number :=0;
     v_fitem_category_id           number;
     v_FITrx_TransactionType_id     number;
     v_batrxSet_id                 object.object_id%type;
     v_parent_billing_account_id   number;
v_policytrx_id                     object.object_id%type;

     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_OnTax_Val             number;
     v_broker_id                   number;
v_fitem_Tax_Val                   number;
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_db_functions. '||'fn_return_tax_val_BC';
begin
     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside fn_return_tax_val_BC: '||in_fitransaction_id

                              );

                         end if;

      v_policytrx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_fitransaction_id,
                                                      629
                                                       );
       v_batrxSet_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policytrx_id,
                                                      31866546                    --- policy trx associated batrxset
                                                  );

                                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_batrxSet_id :'||v_batrxSet_id

                              );

                         end if;
      pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_batrxSet_id,
                   2365046, -- fitrsactions
                  v_fitransaction_list
             );

          v_index1 :=  v_fitransaction_list.first;

       while (v_index1 is not null)
       loop
           v_FITrx_TransactionType_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_list(v_index1),
                                           pkg_db_object.gbv_FITrx_TransactionType
                                     );

          if ( v_FITrx_TransactionType_id   =602)then

          v_fitransaction_id := v_fitransaction_list(v_index1);

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;

        end if;

          v_index1 := v_fitransaction_list.next(v_index1);
       end loop;

      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;
   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);


       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );


      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fichange_list count: '
                                   ||v_fichange_list.count
                              );

           end if;
       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside 2nd while loop'
                              );

           end if;
            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

                                     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_id: '
                                   ||v_fitem_id ||' v_fitem_category_id:'||v_fitem_category_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type
                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_parent_billing_account_id: '
                                   ||v_parent_billing_account_id ||' v_billing_account_type:'||v_billing_account_type||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );



           end if;



                    if (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                               if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_address_id: '
                                   ||v_primary_address_id ||' v_jurisdiction_id:'||v_jurisdiction_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
                         if (v_jurisdiction_id =6313 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                                      v_fitem_bal :=  v_fitem_bal    +v_fitem_Tax_Val;

                                                      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_Tax_Val: '
                                   ||v_fitem_Tax_Val ||' v_fichange_list(v_index):'||v_fichange_list(v_index)||' v_fitem_bal:
 '|| v_fitem_bal
                              );

           end if;


                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_fitem_bal;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_BC
 ;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_AB
--
--   %USAGE
--       This function returns tax value of AB state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_return_tax_val_AB
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_fitransaction_list       pkg_os_object.t_object_list;
     v_index                       number;
     v_index1                       number;
     v_bal_amount                  number;
     v_fitem_bal                   number :=0;
     v_fitem_category_id           number;
     v_FITrx_TransactionType_id     number;
     v_batrxSet_id                 object.object_id%type;
     v_parent_billing_account_id   number;
     v_policytrx_id                object.object_id%type;

     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_OnTax_Val             number;
     v_broker_id                   number;
v_fitem_Tax_Val                   number;
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_db_functions. '||'fn_return_tax_val_AB';
begin
     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside fn_return_tax_val_AB: '||in_fitransaction_id

                              );

                         end if;

        v_policytrx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_fitransaction_id,
                                                      629
                                                       );
       v_batrxSet_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policytrx_id,
                                                      31866546                    --- policy trx associated batrxset
                                                  );


                                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_batrxSet_id :'||v_batrxSet_id

                              );

                         end if;
      pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_batrxSet_id,
                   2365046, -- fitrsactions
                  v_fitransaction_list
             );

          v_index1 :=  v_fitransaction_list.first;

       while (v_index1 is not null)
       loop
           v_FITrx_TransactionType_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_list(v_index1),
                                           pkg_db_object.gbv_FITrx_TransactionType
                                     );

          if ( v_FITrx_TransactionType_id   =602)then

          v_fitransaction_id := v_fitransaction_list(v_index1);

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;

        end if;

          v_index1 := v_fitransaction_list.next(v_index1);
       end loop;

      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;
   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);

       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );


      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fichange_list count: '
                                   ||v_fichange_list.count
                              );

           end if;
       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside 2nd while loop'
                              );

           end if;
            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

                                     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_id: '
                                   ||v_fitem_id ||' v_fitem_category_id:'||v_fitem_category_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type
                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_parent_billing_account_id: '
                                   ||v_parent_billing_account_id ||' v_billing_account_type:'||v_billing_account_type||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;


                    if (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                               if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_address_id: '
                                   ||v_primary_address_id ||' v_jurisdiction_id:'||v_jurisdiction_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
                         if (v_jurisdiction_id =6613 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                                      v_fitem_bal :=  v_fitem_bal    +v_fitem_Tax_Val;

                                                      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_Tax_Val: '
                                   ||v_fitem_Tax_Val ||' v_fichange_list(v_index):'||v_fichange_list(v_index)||' v_fitem_bal:
 '|| v_fitem_bal
                              );

           end if;


                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_fitem_bal;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_AB
;
  -----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_MB
--
--   %USAGE
--       This function returns tax value of MB state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_return_tax_val_MB
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_fitransaction_list       pkg_os_object.t_object_list;
     v_index                       number;
     v_index1                       number;
     v_bal_amount                  number;
     v_fitem_bal                   number :=0;
     v_fitem_category_id           number;
     v_FITrx_TransactionType_id     number;
     v_batrxSet_id                 object.object_id%type;
     v_policytrx_id                object.object_id%type;
     v_parent_billing_account_id   number;


     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_OnTax_Val             number;
     v_broker_id                   number;
v_fitem_Tax_Val                   number;
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_db_functions. '||'fn_return_tax_val_MB';
begin
     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside fn_return_tax_val_MB: ' ||in_fitransaction_id

                              );

                         end if;

          v_policytrx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_fitransaction_id,
                                                      629
                                                       );
       v_batrxSet_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policytrx_id,
                                                      31866546                    --- policy trx associated batrxset
                                                  );







                                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_batrxSet_id :'||v_batrxSet_id

                              );

                         end if;
      pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_batrxSet_id,
                   2365046, -- fitrsactions
                  v_fitransaction_list
             );

          v_index1 :=  v_fitransaction_list.first;

       while (v_index1 is not null)
       loop
           v_FITrx_TransactionType_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_list(v_index1),
                                           pkg_db_object.gbv_FITrx_TransactionType
                                     );

          if ( v_FITrx_TransactionType_id   =602)then

          v_fitransaction_id := v_fitransaction_list(v_index1);

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;

        end if;

          v_index1 := v_fitransaction_list.next(v_index1);
       end loop;

      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;
   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);

       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );


      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fichange_list count: '
                                   ||v_fichange_list.count
                              );

           end if;
       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside 2nd while loop'
                              );

           end if;
            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

                                     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_id: '
                                   ||v_fitem_id ||' v_fitem_category_id:'||v_fitem_category_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type
                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_parent_billing_account_id: '
                                   ||v_parent_billing_account_id ||' v_billing_account_type:'||v_billing_account_type||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
































































































                  if (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                               if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_address_id: '
                                   ||v_primary_address_id ||' v_jurisdiction_id:'||v_jurisdiction_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
                         if (v_jurisdiction_id =6213 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                                      v_fitem_bal :=  v_fitem_bal    +v_fitem_Tax_Val;

                                                      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_Tax_Val: '
                                   ||v_fitem_Tax_Val ||' v_fichange_list(v_index):'||v_fichange_list(v_index)|| 'v_fitem_bal:
 '|| v_fitem_bal
                              );

           end if;


                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_fitem_bal;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_MB
 ;
 -----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_QC
--
--   %USAGE
--       This function returns tax value of Quebec state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_return_tax_val_QC
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_fitransaction_list       pkg_os_object.t_object_list;
     v_index                       number;
     v_index1                       number;
     v_bal_amount                  number;
     v_fitem_bal                   number :=0;
     v_fitem_category_id           number;
     v_FITrx_TransactionType_id     number;
     v_batrxSet_id                 object.object_id%type;
     v_parent_billing_account_id   number;
     v_policytrx_id                object.object_id%type;

     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_OnTax_Val             number;
     v_broker_id                   number;
v_fitem_Tax_Val                   number;
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_db_functions. '||'fn_return_tax_val_QC';
begin
     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside fn_return_tax_val_QC: '

                              );

                         end if;


   v_policytrx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_fitransaction_id,
                                                      629
                                                       );
       v_batrxSet_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policytrx_id,
                                                      31866546                    --- policy trx associated batrxset
                                                  );






                                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_batrxSet_id :'||v_batrxSet_id

                              );

                         end if;
      pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_batrxSet_id,
                   2365046, -- fitrsactions
                  v_fitransaction_list
             );

          v_index1 :=  v_fitransaction_list.first;

       while (v_index1 is not null)
       loop
           v_FITrx_TransactionType_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_list(v_index1),
                                           pkg_db_object.gbv_FITrx_TransactionType
                                     );

          if ( v_FITrx_TransactionType_id   =602)then

          v_fitransaction_id := v_fitransaction_list(v_index1);

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;

        end if;

          v_index1 := v_fitransaction_list.next(v_index1);
       end loop;

      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitransaction_id: '
                                   ||v_fitransaction_id ||' v_batrxSet_id:'||v_batrxSet_id
                              );

           end if;
   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);


       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );


      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fichange_list count: '
                                   ||v_fichange_list.count
                              );

           end if;
       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

           if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Inside 2nd while loop'
                              );

           end if;
            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

                                     if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_id: '
                                   ||v_fitem_id ||' v_fitem_category_id:'||v_fitem_category_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type
                                  if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_parent_billing_account_id: '
                                   ||v_parent_billing_account_id ||' v_billing_account_type:'||v_billing_account_type||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;

                  if (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                               if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_address_id: '
                                   ||v_primary_address_id ||' v_jurisdiction_id:'||v_jurisdiction_id||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;
                         if (v_jurisdiction_id =5913 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                                      v_fitem_bal :=  v_fitem_bal    +v_fitem_Tax_Val;

                                                      if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_fitem_Tax_Val: '
                                   ||v_fitem_Tax_Val ||' v_fichange_list(v_index):'||v_fichange_list(v_index)
                              );

           end if;


                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_fitem_bal;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_QC
 ;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Return_Tax_Val_FL
--
--   %USAGE
--       This function returns tax value of Florida state
--
--   %ALGORITHM
--       Get agency due date based on the input parameters
--
--
--   %PARAM    in_session_id            session id
--   %PARAM    in_transaction_id        transaction id
--   %PARAM    in_fitrx_id              object.object_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
 function  fn_return_tax_val_FL
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransaction_id           in             object.object_id%type   --
)
return number
is
     v_fitransaction_id            object.object_id%type;
     v_fitem_type_id               number;
     v_fitem_id                    object.object_id%type;
     v_fichange_list               pkg_os_object.t_object_list;
     v_index                       number;
     v_bal_amount                  number;
     gObjType_FIChange             object.object_id%type;
     gbv_FIChangeRefFItem          object.object_id%type;
     v_fitem_category_id           number;

     v_parent_billing_account_id   number;

     gObjType_BillingAccount       object.object_id%type;
     v_billing_account_type        number;
     v_ultimate_parent_id          number;
     v_primary_entity_id            number;
     v_primary_address_id          number;
     v_jurisdiction_id             number;
     v_fitem_Tax_Val             number;
     v_broker_id                   number;

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type  := 'pkg_name'||'fn_return_tax_val_On';
begin

   --  v_fitransaction_id := ------pkg_os_object_search.fn_child_object_get(in_session_id, in_transaction_id, in_billingactrxset_id, 2365046, 29708346, 603);


       -- Get all fichange for fitransaction

       pkg_os_object_search.sp_object_children_of_type_get
             (
                  in_session_id,
                  in_transaction_id,
                  v_fitransaction_id,
                  gObjType_FIChange,
                  v_fichange_list
             );

       v_index :=  v_fichange_list.first;

       while (v_index is not null)
       loop

            v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fichange_list(v_index),
                                          gbv_FIChangeRefFItem
                                     );

            v_fitem_category_id     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitem_id,
                                          29710146 -- category
                                     );

            if    v_fitem_category_id  = gFItem_Category_Tax
            then

                    v_parent_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gObjType_BillingAccount
                                                       );

                    v_billing_account_type:=pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_parent_billing_account_id,
                                                       gbv_BillingAccountType
                                                  ); -- BA type

                    if (v_billing_account_type = gBillAccType_Customer) then --customer

                         v_ultimate_parent_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                            in_session_id ,
                                                            in_transaction_id ,
                                                            v_parent_billing_account_id,
                                                            pkg_os_wf_task.gobjType_ParentCustomer
                                                       );

                         v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_ultimate_parent_id,
                                                        gbv_CustRefPrimaryEntity
                                                   );


                         -- Get the ref primary address

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_entity_id,
                                                       gbv_Entity_RefRrimaryAddress                       ----ClientEntity - xReference - _Reference_PrimaryAddress
                                                  );


                         --Get the jurisdiction id

                          v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_primary_address_id,
                                                  gbv_Address_StateProvince                        -- Address Address State
                                             );

                         if (v_jurisdiction_id =9)then

                                   v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_fitem_id,
                                                            gbv_fitem_amount_due                        -- Amount Due calculated
                                                       );
                                   return v_fitem_Tax_Val;

                         end if;

                         if   v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...v_primary_entity_id: '
                                   ||v_primary_entity_id
                              );

                         end if;


                    elsif (v_billing_account_type=1946) then

                         v_broker_id    :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                                 (
                                                                      in_session_id ,
                                                                      in_transaction_id ,
                                                                      v_parent_billing_account_id,
                                                                      63        ---gobjType_ParentBroker
                                                                 );

                         v_primary_address_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_broker_id,
                                                       gbv_Partner_RefRrimaryAddress                     --- Broker - xReference - _Reference_Primary Address
                                                  );



                         v_jurisdiction_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_address_id,
                                                       gbv_Address_StateProvince                        -- Address Address State
                                                  );

                         if (v_jurisdiction_id =9 )then

                              v_fitem_Tax_Val := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                       in_session_id,
                                                        in_transaction_id,
                                                        v_fitem_id,
                                                        gbv_fitem_amount_due                        -- Amount Due calculated
                                                  );
                              return v_fitem_Tax_Val;

                          end if;


               end if;

          end if;

          v_index := v_fichange_list.next(v_index);

     end loop;

  return v_bal_amount;

exception

      when no_data_found then
      return null;

end fn_return_tax_val_FL
 ;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_dish_pay_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billtrxset_id                 in             object.object_id%type,
     in_policy_id                  in             object.object_id%type    default null
)
return date
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_dish_pay_date';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                date;
     v_withdr_date                             date;
     v_inst_num                                    number;

   --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_assc_billingtrxset_id       object.object_id%type;
     v_CashTrnsfer_FiTrxset_Id     object.object_id%type;
  --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

begin

 v_withdr_date := to_date( pkg_os_object_io.fn_object_bv_get
                            (
                                in_session_id,
                                in_transaction_id,
                                in_billtrxset_id,
                                32857040  --BillingTransactionSet - Date - Withdrawal Date
                            ),
                            pkg_os_constant.dragondateformatdefault);

     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     Begin
          Select
               dp.billingaccounttrxset_id
          into
               v_assc_billingtrxset_id
          from
               dragon_payment_dependencies dp
          where
               dp.payment_trxset_id = in_billtrxset_id;
     Exception
          when no_data_found
               then
                    v_assc_billingtrxset_id := null;

     end;

          v_CashTrnsfer_FiTrxset_Id := pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_assc_billingtrxset_id,
                                               31756446  -- _Reference_Created FITrxSet(Cash Transfer)
                                           );

     --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
 if (v_withdr_date is null)
 then

  select
          min(inst.installment_number), min(inst.withdrawal_date)
     into
          v_inst_num, v_withdr_date
     from
          dragon_fitem fitem,
          dragon_fichange chg,
          dragon_scheduled_installment inst
     where
          fitem.creator_fitransactionset_id = in_billtrxset_id
     and
          fitem.fitem_type_id = 246 --Credit
     and
    ( fitem.policy_id = in_policy_id or in_policy_id is null )
  and
          inst.installment_id = pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, chg.fichange_id, '32849540.29704046.29704446')
     and
          inst.withdrawal_date is not null
     and
          chg.fitem_id = fitem.fitem_id
     and
          chg.fitem_transaction_type_id in (101,1601); --cash and credit apply

 end if;

 --cash apply was done in a separate transaction
 if (v_withdr_date is null)
 then
 select
          min(inst.installment_number), min(inst.withdrawal_date)
  into
          v_inst_num, v_withdr_date
     from
          dragon_fitem fitem,
    dragon_fitem fitem_apply,
          dragon_fichange chg,
    dragon_fichange chg_apply,
          dragon_scheduled_installment inst
     where
          fitem.creator_fitransactionset_id = in_billtrxset_id
     and
          chg.fitem_id = fitem.fitem_id
  and
          fitem.fitem_type_id = 246 --Credit
  and
    fitem_apply.fitem_transaction_type_id in (1001, 701, 3301, 3401)
  and
    fitem_apply.creator_fitransactionset_id = chg.billingaccounttrxset_id
  and
          chg_apply.fitem_id = fitem_apply.fitem_id
  and
          fitem_apply.fitem_type_id = 246 --Credit
  and
    ( fitem_apply.policy_id = in_policy_id or in_policy_id is null )
     and
          inst.installment_id = pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, chg_apply.fichange_id, '32849540.29704046.29704446')
     and
          inst.withdrawal_date is not null;
 end if;

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     if (v_withdr_date is null and v_assc_billingtrxset_id is not null)
     then

          select
               min(inst.installment_number), min(inst.withdrawal_date)
          into
               v_inst_num, v_withdr_date
          from
               dragon_fitem fitem,
               dragon_fitem fitem_apply,
               dragon_fichange chg,
               dragon_fichange chg_apply,
               dragon_scheduled_installment inst
          where
               fitem.creator_fitransactionset_id = v_CashTrnsfer_FiTrxset_Id
          and
               chg.fitem_id = fitem.fitem_id
          and
               fitem.fitem_type_id = 246 --Credit
          and
               fitem_apply.fitem_batch_type_id in (2401)--cash/credit transfer
          and
               fitem_apply.creator_fitransactionset_id = chg.billingaccounttrxset_id
          and
               chg_apply.fitem_id = fitem_apply.fitem_id
          and
               fitem_apply.fitem_type_id = 246 --Credit
          and
               ( fitem_apply.policy_id = in_policy_id or in_policy_id is null )
          and
               inst.installment_id = pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, chg_apply.fichange_id, '32849540.29704046.29704446')
          and
               inst.withdrawal_date is not null;
     end if;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
return v_withdr_date;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Exception occured '
                  ||'  Error Msg: '
               ||sqlerrm
          );

          return sysdate;

end fn_get_dish_pay_date;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_substr_business_days
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                         in   object.object_id%type,
     in_start_date                          in      date,
     in_days_to_substr                   in      number
)
return date
as

     v_procedure_name    system_log.program_name%type := pkg_name||'fn_substr_business_days';
     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_start_date               date := trunc(in_start_date);
     v_result_date               date := null;
     v_loop_date                    date := null;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Determining number of business days between Start Date:' || v_start_date ||
               ':No of days to substract:' ||  in_days_to_substr || ' for Object: ' || in_object_id
          );

     end if;

     v_result_date := v_start_date;

  for i in 1..in_days_to_substr
     loop

          v_loop_date := v_result_date - 1;

    while v_loop_date >= v_start_date - 30
    loop
      if (pkg_base_calendar.fn_is_holiday(in_session_id, in_transaction_id, in_object_id, v_loop_date) = 'T')
      then
        v_loop_date := v_loop_date - 1;
      else
        exit;     -- exit loop
      end if;
    end loop;

    v_result_date := v_loop_date;

     end loop;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Next available date:' || v_result_date
          );

     end if;

     return v_result_date;

end fn_substr_business_days;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_incomplete_task_num
(
      in_session_id              in        object.object_id%type,
      in_transaction_id          in        object.object_id%type,
      in_object_id               in        object.object_id%type,
      in_task_type            in        object.object_id%type
)
  return number
  is
  v_procedure_name         system_log.program_name%type := pkg_name||'fn_incomplete_task_num';
     v_session_control               pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_task_count                   integer := 0;

begin

     select
        count(*)
      into
        v_task_count
      from
        dragon_task
      where
        task_object_id = in_object_id
      and
        task_type_id = in_task_type
      and
        task_status_id  in ( 2,42346 ); -- In Complete, overdue--UTPRODUCT-4359

     return v_task_count;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Exception occured '
               ||'  Error Msg: '
               ||sqlerrm
          );

          return v_task_count;

end fn_incomplete_task_num;

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_Set_Recon_Status
--
--   %USAGE
--        This function returns the status of the recon rollup.
--        called from rule 10271346
--
--   %ALGORITHM
--        Get the AgencyReconciliationRollUp ID
--
--
--   %PARAM     in_session_id                    Session ID
--              in_transaction_id                Transaction ID
--              in_agency_recon_id                    AgencyReconciliationRollUp Id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_Set_Recon_Status
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_agency_recon_id                 in             object.object_id%type

)
return number
is
     v_return_value                     number := 0;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_Set_Recon_Status';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

--     v_statement_Upload_date            date;
--     v_reference_Current_Rollup         object.object_id%type;
     v_Genericobject_id                 object.object_id%type;
--     v_reference_placeholder            object.object_id%type;
     v_Genericobject_state              object.object_id%type;
     v_Mark_as_omitted                  object_bv_value.business_variable_value%type;
     v_Excluded                         object_bv_value.business_variable_value%type;
     v_billing_trx_set_id               object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_agency_recon_id);
     v_billingaccont_id                 object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , v_billing_trx_set_id);
     v_Commission                       object_bv_value.business_variable_value%type;
     v_Paid_Commission                  object_bv_value.business_variable_value%type;
     v_Agency_gross_due                 object_bv_value.business_variable_value%type;
     v_Paid_Gross                       object_bv_value.business_variable_value%type;
     v_reconcile_with_difference        object_bv_value.business_variable_value%type;

begin

   v_Genericobject_id  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        211343-- genericobject.object_id
                                  );

  v_Genericobject_state  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        210153 -- genericobject.objectstate
                                  );
     v_Mark_as_omitted  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        32662046 -- Mark as Omitted



                                  );
     v_Excluded  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        32694946 -- Excluded



                                  );
     v_Commission  := NVL(pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        29756346 -- AgencyReconciliationRollup.Commission (Calculated)
                                  ),0);

     v_Paid_Commission := NVL(pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        32462031 -- ReconciliationRollup.Paid Commission Amt
                                  ),0);
     v_Agency_gross_due := NVL(pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        32469631 -- ReconciliationRollup.Paid Gross
                                  ),0);

     v_Paid_Gross := nvl(pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        32462131 -- ReconciliationRollup.Paid Commission Amt
                                  ),0);
     v_reconcile_with_difference := nvl(pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,

                                        32720146 -- agencyReconciliationRollup.Reconcile with Difference
                                  ),0);

 dbms_output.put_line
          (    '.. Agency id . ' || in_agency_recon_id ||
               ' . Billing Acocunt .. '  || v_billingaccont_id ||
               '.. v_Genericobject_state ..' || v_Genericobject_state ||
               '.. v_Mark_as_omitted ..' || v_Mark_as_omitted ||
               '.. v_Excluded ..' || v_Excluded ||
               '.. v_Commission ..' || v_Commission ||
               '.. v_Paid_Commission ..' || v_Paid_Commission ||
               '.. v_Agency_gross_due ..' || v_Agency_gross_due ||
               '.. v_Paid_Gross ..' || v_Paid_Gross ||
               '.. v_reconcile_with_difference ..' || v_reconcile_with_difference ||
               '.. Object_id' ||v_Genericobject_id );


      if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '.. Agency id . ' || in_agency_recon_id ||
               ' . Billing Acocunt .. '  || v_billingaccont_id ||
               '.. v_Genericobject_state ..' || v_Genericobject_state ||
               '.. v_Mark_as_omitted ..' || v_Mark_as_omitted ||
               '.. v_Excluded ..' || v_Excluded ||
               '.. v_Commission ..' || v_Commission ||
               '.. v_Paid_Commission ..' || v_Paid_Commission ||
               '.. v_Agency_gross_due ..' || v_Agency_gross_due ||
               '.. v_Paid_Gross ..' || v_Paid_Gross ||
               '.. v_reconcile_with_difference ..' || v_reconcile_with_difference ||
               '.. Object_id..' ||v_Genericobject_id );

       end if;


 v_return_value := case  when ( v_Mark_as_omitted = gYes       and v_Excluded is null )
                         then   gStatus_Omitted
                         when v_Excluded =gYes and v_Genericobject_state <> gObjectState_Excluded
                         then  gStatus_MarkedExclude
             -- 2016-05-19 Cheryl osbilling-1813 if nothing on agency side then treat as new
                         when ( v_Paid_Commission = 0 and  v_Paid_Gross = 0 )
                         then gStatus_New
                         when ( v_Commission <> v_Paid_Commission and  v_Agency_gross_due <> v_Paid_Gross and v_reconcile_with_difference <> gYes)
                         then gStatus_Premiumandcommdiff
                         when (( v_Commission <> v_Paid_Commission  and v_Agency_gross_due = v_Paid_Gross) and v_reconcile_with_difference <> gYes)
                         then gStatus_Commdiff
                         when ( ( v_Agency_gross_due  <> v_Paid_Gross  and v_Commission = v_Paid_Commission) and v_reconcile_with_difference <> gYes )
                         then gStatus_Premiumdiff
                         when v_Commission = v_Paid_Commission and (v_Agency_gross_due = v_Paid_Gross  )
                         then gStatus_Reconciled
                         when ((v_Genericobject_state = gStatus_commdiff and v_reconcile_with_difference = gYes) or (v_Genericobject_state = gStatus_RCD and v_reconcile_with_difference = gYes))
                         then gStatus_RCD
                         when ((v_Genericobject_state = gStatus_Premiumandcommdiff and v_reconcile_with_difference = gYes) or (v_Genericobject_state = gStatus_RPCD and v_reconcile_with_difference = gYes))
                         then gStatus_RPCD
                         when ((v_Genericobject_state = gStatus_Premiumdiff and v_reconcile_with_difference = gYes) or (v_Genericobject_state = gStatus_RPD and v_reconcile_with_difference = gYes))
                         then gStatus_RPD
                         else gStatus_New
                         end;


       return v_return_value;

end fn_Set_Recon_Status;




--OSBILLING-3677
function fn_Set_Recon_Status_new
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_agency_recon_id                 in             object.object_id%type,
     in_Genericobject_state             in             object.object_id%type,
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_Mark_as_omitted                 in             object_bv_value.business_variable_value%type,
     in_Excluded                        in             object_bv_value.business_variable_value%type,
     in_Paid_Commission_per             in             object_bv_value.business_variable_value%type,
     in_Commission                      in             object_bv_value.business_variable_value%type,
     in_Paid_Commission                 in             object_bv_value.business_variable_value%type,
     in_Agency_gross_due                in             object_bv_value.business_variable_value%type,
     in_Paid_Gross                      in             object_bv_value.business_variable_value%type,
     in_reconcile_with_difference       in             object_bv_value.business_variable_value%type

)
return number
is
     v_return_value                     number := 0;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_Set_Recon_Status_new';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_trx_set_id               object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_agency_recon_id);
     v_billingaccont_id                 object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , v_billing_trx_set_id);
     v_Paid_Commission                  object_bv_value.business_variable_value%type;
     v_Paid_Gross                       object_bv_value.business_variable_value%type;
     -- OSPRODUCT-8958
     v_recon_gross_or_net               object_bv_value.business_variable_value%type :=  nvl(pkg_os_object_io.fn_object_bv_get
                                                                                            (
                                                                                                   in_session_id,
                                                                                                   in_transaction_id,
                                                                                                   v_billing_trx_set_id,
                                                                                                   32582048
                                                                                              ),2);   	 

begin


     if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
              '.. Agency id . ' || in_agency_recon_id ||
               ' . Billing Acocunt .. '  || v_billingaccont_id ||
               '.. in_Genericobject_state ..' || in_Genericobject_state ||

               '.. in_Match_options ..' || in_Match_options ||
               '.. in_Mark_as_omitted ..' || in_Mark_as_omitted ||
               '.. in_Excluded ..' || in_Excluded ||
               '.. in_Paid_Commission_per ..' || in_Paid_Commission_per ||
               '.. in_Commission ..' || in_Commission ||
               '.. v_Paid_Commission ..' || v_Paid_Commission ||
               '.. in_Agency_gross_due ..' || in_Agency_gross_due ||
               '.. v_Paid_Gross ..' || v_Paid_Gross ||
               '.. in_reconcile_with_difference ..' || in_reconcile_with_difference);

       end if;

       v_Paid_Gross:= case when  in_Match_options in ( gMatchOption_matchGross ,gMatchOption_matchGrossComm)
                           then in_Agency_gross_due
                             when  in_Match_options in ( 6 , 7)
                               then 0
                                 else  in_Paid_Gross end;

       v_Paid_Commission :=
                         case
                            when  in_Match_options in (gMatchOption_Manual,gMatchOption_Upload )
                                  and  in_Paid_Commission   is not null
                                       then in_Paid_Commission
                            when  in_Match_options  in (gMatchOption_matchComm,gMatchOption_matchGrossComm )
                                       then in_Commission
                            when  in_Match_options  in (gMatchOption_ExcludeWithAging,gMatchOption_ExcludeWoutAging )
                                       then 0
                            else in_Paid_Commission  end;  -- OSBILLING-4795  TBD
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as some code changed above and below

                        v_return_value := case  when (  in_Match_options  = gMatchOption_ExcludeWithAging and in_Genericobject_state <> gStatus_Omitted )
                         --then   gStatus_Omitted--OSBILLING-3827
                         then gStatus_MarkedExcludeWithAging
                         when  in_Match_options  = gMatchOption_ExcludeWoutAging and in_Genericobject_state <> gObjectState_Excluded
                         then  gStatus_MarkedExclude
                         --when (  in_Match_options  <> gMatchOption_ExcludeWithAging and in_Genericobject_state = gStatus_Omitted )----OSBILLING-3827
                         --then gStatus_MarkedChangeExclude

                         when ( v_Paid_Commission = 0 and  v_Paid_Gross = 0 )
                         then gStatus_New
                         when in_Commission = v_Paid_Commission and (in_Agency_gross_due = v_Paid_Gross  ) --and in_Genericobject_state <> gStatus_MarkedChangeExclude
                           or (in_Agency_gross_due + in_Commission = v_Paid_Commission + v_Paid_Gross) -- OSPRODUCT-1897
						   or (in_Agency_gross_due = v_Paid_Gross and v_recon_gross_or_net = 1) -- OSPRODUCT-8958
                               then gStatus_Reconciled
                         when ( in_Commission <> v_Paid_Commission and  in_Agency_gross_due <> v_Paid_Gross and in_reconcile_with_difference <> gYes)
                         then gStatus_Premiumandcommdiff
                         when ( in_Commission <> v_Paid_Commission  and in_Agency_gross_due = v_Paid_Gross and in_reconcile_with_difference <> gYes)
                         then gStatus_Commdiff
                         when ( in_Agency_gross_due  <> v_Paid_Gross  and in_Commission = v_Paid_Commission and in_reconcile_with_difference <> gYes )
                         then gStatus_Premiumdiff
                         when (in_Commission <> v_Paid_Commission and  in_Agency_gross_due <> v_Paid_Gross and in_reconcile_with_difference = gYes)
                         then gStatus_RPCD
                         when (in_Commission <> v_Paid_Commission  and in_Agency_gross_due = v_Paid_Gross and in_reconcile_with_difference = gYes)
                         then gStatus_RCD
                         when ( in_Agency_gross_due  <> v_Paid_Gross  and in_Commission = v_Paid_Commission and in_reconcile_with_difference = gYes)
                         then gStatus_RPD
                         else gStatus_New
                         end;


       return v_return_value;

end fn_Set_Recon_Status_new;

function fn_get_Recon_gross
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_gross                   in             object_bv_value.business_variable_value%type,
     in_agent_Gross                    in             object_bv_value.business_variable_value%type

)
return object_bv_value.business_variable_value%type
is
      v_Paid_Gross                       object_bv_value.business_variable_value%type;

begin


       v_Paid_Gross:= case when  in_Match_options in ( gMatchOption_matchGross ,gMatchOption_matchGrossComm)
                           then in_carrier_gross
                           when  in_Match_options in ( 6 , 7)
                           then 0
                           else  in_agent_Gross end;



       return NVL(v_Paid_Gross,0);

end fn_get_Recon_gross;

function fn_get_Recon_comm_per
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_comm_per                   in             object_bv_value.business_variable_value%type,
     in_agent_comm_per                    in             object_bv_value.business_variable_value%type

)
return object_bv_value.business_variable_value%type
is
      v_comm_per                       object_bv_value.business_variable_value%type;

begin



       v_comm_per:= case when  in_Match_options in ( gMatchOption_matchcomm ,gMatchOption_matchGrossComm)
                           then in_carrier_comm_per
                           when  in_Match_options in ( 6 , 7)
                           then 0
                           else  in_agent_comm_per end;



       return NVL(v_comm_per,0);

end fn_get_Recon_comm_per;

function fn_get_Recon_comm_amt
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_comm_amt                   in             object_bv_value.business_variable_value%type,
     in_agent_comm_amt                    in             object_bv_value.business_variable_value%type

)
return object_bv_value.business_variable_value%type
is
      v_comm_amt                       object_bv_value.business_variable_value%type;

begin

      v_comm_amt:= case when  in_Match_options in ( gMatchOption_matchcomm ,gMatchOption_matchGrossComm)
                           then in_carrier_comm_amt
                           when  in_Match_options in ( 6 , 7)
                           then 0
                           else  in_agent_comm_amt end;



       return NVL(v_comm_amt,0);

end fn_get_Recon_comm_amt;

function fn_get_Recon_net_amt
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_gross_amt               in             object_bv_value.business_variable_value%type,
     in_agent_gross_amt                 in             object_bv_value.business_variable_value%type,
     in_carrier_comm_amt                   in             object_bv_value.business_variable_value%type,
     in_agent_comm_amt                    in             object_bv_value.business_variable_value%type,
     in_recon_gross_or_net                in             object_bv_value.business_variable_value%type default 2 -- OSPRODUCT-8958	 

)
return object_bv_value.business_variable_value%type
is
      v_net_due                      object_bv_value.business_variable_value%type;

begin

      v_net_due:= case   when  in_Match_options in ( 6 , 7)
                           then 0
                          when in_recon_gross_or_net = 1 then  -- OSPRODUCT-8958
                            fn_get_Recon_gross(in_Match_options,in_carrier_gross_amt,in_agent_gross_amt)
                          else
                                fn_get_Recon_gross(in_Match_options,in_carrier_gross_amt,in_agent_gross_amt)
                                + fn_get_Recon_comm_amt(in_Match_options,in_carrier_comm_amt,in_agent_comm_amt)
                          end;



       return NVL(v_net_due,0);

end fn_get_Recon_net_amt;

function fn_get_Recon_diff_amt
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_gross_amt               in             object_bv_value.business_variable_value%type,
     in_agent_gross_amt                 in             object_bv_value.business_variable_value%type,
     in_carrier_comm_amt                   in             object_bv_value.business_variable_value%type,
     in_agent_comm_amt                    in             object_bv_value.business_variable_value%type,
     in_carrier_total_due                 in             object_bv_value.business_variable_value%type,
     in_recon_gross_or_net                in             object_bv_value.business_variable_value%type default 2 -- OSPRODUCT-8958


)
return object_bv_value.business_variable_value%type
is
      v_diff_amt                     object_bv_value.business_variable_value%type;

begin

      v_diff_amt:= case   when  in_Match_options in ( 6 , 7)
                           then 0
                           else  fn_get_Recon_net_amt(in_Match_options,in_carrier_gross_amt,in_agent_gross_amt,in_carrier_comm_amt,in_agent_comm_amt,in_recon_gross_or_net) -- OSPRODUCT-8958
                                - in_carrier_total_due
                           end;



       return NVL(v_diff_amt,0);

end fn_get_Recon_diff_amt;

function fn_get_Recon_accept_diff
(
     in_Match_options                   in             object_bv_value.business_variable_value%type,
     in_carrier_gross_amt               in             object_bv_value.business_variable_value%type,
     in_agent_gross_amt                 in             object_bv_value.business_variable_value%type,
     in_carrier_comm_amt                in             object_bv_value.business_variable_value%type,
     in_agent_comm_amt                  in             object_bv_value.business_variable_value%type,
     in_carrier_total_due               in             object_bv_value.business_variable_value%type,
     in_accept_diff                     in             object_bv_value.business_variable_value%type

)
return object_bv_value.business_variable_value%type
is
      v_accept_diff                     object_bv_value.business_variable_value%type;

begin

       v_accept_diff:= case when  fn_get_Recon_diff_amt(in_Match_options,in_carrier_gross_amt,in_agent_gross_amt,in_carrier_comm_amt,in_agent_comm_amt,in_carrier_total_due) = 0
                            then gNo
                            else gYes
                            end;

       return v_accept_diff;

end fn_get_Recon_accept_diff;


------------------------------------------------------------------------------

--- PADEV-418
---
-- Returns 0 if same Policy no and Term already exists
---

function fn_validate_ThinPolicy_exists
(

     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_policy_trx_id         in        object.object_id%type,
     in_policynumber          in        varchar2,
     in_effective_date        in        date,
     in_expiry_date           in        date
) return number
as
     policy_count             number;
     v_policy_trx_type        number;

begin

     v_policy_trx_type   :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_trx_id,
                                   gbv_PolicyTransactionType
                              );

     if v_policy_trx_type in (9, 8)
     then


       select  count(*) into policy_count
       from dragon_policy_term term
       where term.term_policy_number = in_policynumber
       and to_char(policy_term_eff_date,'mm/dd/yyyy')=to_char(in_effective_date,'mm/dd/yyyy')
       and to_char(policy_term_exp_date,'mm/dd/yyyy')=to_char(in_expiry_date,'mm/dd/yyyy');


       -- check whether we are not giving prior policy numbers while renewal
       if  policy_count = 0 then
         select count(*)
           into policy_count
           from dragon_policy_term term
          where term.policy_id = in_transaction_id -- rule : 10259146 modified to pass policy_id under transaction id
            and term.term_policy_number = in_policynumber;
         end if;

     else

          policy_count := 0;

     end if;

return policy_count;

end fn_validate_ThinPolicy_exists;
------------------------------------------------------------------------------

--- PADEV-418
---
-- Returns 1 if Policy no is of Format "1234567 123456" or "1234567 123456A"
---

function fn_validate_ThinPolicy_number
(

       in_session_id       in                object.object_id%type,
       in_transaction_id   in                object.object_id%type,
       in_policynumber    in                varchar2
) return varchar2
as
       valid_acc              varchar2(10);
       valid_space             varchar2(10);
       valid_trail            varchar2(10);
       valid_char              varchar2(10);

       acc_value              varchar2(10);
       space_value             varchar2(10);
       trail_value            varchar2(10);
       char_value              varchar2(10);

begin


if (nvl(in_policynumber,'0')!= '0' AND Length(in_policynumber)in (14,15)) -- Policy No can be of length 14 or 15
  then
      acc_value          :=Substr( in_policynumber,1,7);
      space_value      := Substr( in_policynumber,8,1);
      trail_value       := Substr( in_policynumber,9,6);
      char_value           := Substr( in_policynumber,15,1);

      valid_acc := REGEXP_INSTR(acc_value, '[^0-9]') ;
      valid_space :=space_value;
      valid_trail := REGEXP_INSTR(trail_value, '[^0-9]') ;
      valid_char := REGEXP_INSTR(lower(NVL(char_value,'a')), '[a-z]') ;
      if( valid_acc=0 and valid_space= ' ' and valid_trail = 0 and valid_char =1 )
      then
             return 1;
      end if;
  end if;

 return 0;

end fn_validate_ThinPolicy_number;
------------------------------------------------------------------------------

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
---
---
-- Returns 1 if Customer number already exists
---

     --
     -- 2016-10-09 Cheryl osbilling-3139 add the check of the customerid
     --

function fn_validate_customerno_exists
(

       in_session_id       in                object.object_id%type,
       in_transaction_id   in                object.object_id%type,
       in_customernumber    in                varchar2,
       in_customer_id       in               object.object_id%type

) return number
as
       customer_count       number;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_validate_customerno_exists';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

Begin

   if v_session_control.gLogging_Full
   then
      pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                 '... customernumber : ' || in_customernumber ||
                 ', customer_id :'  || in_customer_id
             );
   end if;

    select  count(*) into customer_count
      from dragon_customer cust
      where (trunc(cust.external_customer_number) = trunc(in_customernumber)
      and cust.primary_entity_id <> in_customer_id);

    return customer_count;

end fn_validate_customerno_exists;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
--------------------------------------------------------------------------------------------------------------------
--
--  function fn_suspense_disburse_item_get
--
--  Returns FItem created during CashTransfer batch from Suspense Account to Suspense Refund partner on the Suspense Refund partner side.
--          The Fitme will be disbursed on further steps.
--
--  Do not raise exception in this function as it is used in Post Init Rule (we do not need splat).
--  Instead of splat, this function is used in an action native command and in case of returning Fitem is NULL action will return appropriate outcome.
--------------------------------------------------------------------------------------------------------------------
function fn_suspense_disburse_item_get
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_no         in             number,                 -- BA of Suspense Refund partner that is a receiver of the CashTransfer
     in_billingAcctTrxSet_id       in             object.object_id%type   -- Batch ID of CashTransferTrxSet that belong to Suspense Account
)
return object.object_id%type -- Fitem id
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_suspense_disburse_item_get';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                object.object_id%type;

begin

   if v_session_control.gLogging_Full
   then
      pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                 '... BA of Suspense Disbursement partner : ' || in_billing_account_no ||
                 ', batch ID of CashTransferTrxSet that belong to Suspense Account :'  || in_billingAcctTrxSet_id ||
                 '.'
             );
   end if;

   for c in (
               select
                      i.fitem_id,
                      count(1)over() fitem_count
                 from
                      dragon_fitem i
                 join
                      dragon_billingaccounttrxset b on (b.billingaccounttrxset_id = i.CREATOR_FITRANSACTIONSET_ID)
                where
                      i.fitem_type_id            = gFItemType_Credit
                  and
                      i.fitem_category_id        = gFItem_Category_Cash
                  and
                      i.fitem_sub_category_id    = 51646 -- 'Transfered Cash'
                  and
                      i.billing_account_id       = in_billing_account_no
                  and
                      b.CREATED_BY_BILLINGTRXSET = in_billingAcctTrxSet_id
             )
    loop
      if c.fitem_count = 1
      then
         v_return_value := c.fitem_id;

         if v_session_control.gLogging_Full
         then
            pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                  '...... found one item to disburse :' || v_return_value
                );
          end if;
      else

         if v_session_control.gLogging_Full
         then
            pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                  '...... ERROR: found <'||c.fitem_count||'> items to disburse !'
                );
          end if;

         exit;  -- exit loop

      end if;
    end loop;

   return v_return_value;

end fn_suspense_disburse_item_get;
--------------------------------------------------------------------------------------------------------------------


--- PMADEV-691
---
-- Returns count of any receivables not cleared on agency statement
---

function fn_Agency_Statement_Status
(

       in_policy_id                  in            object.object_id%type,
       in_partner_agency_id          in            object.object_id%type,
       in_stmt_as_of_date            in            varchar2 default null,
       in_policy_trx_id                 in        object.object_id%type default null
) return number
as
       v_billing_acc_id          object.object_id%type;
       v_policy_count       number;
       v_procedure_name     constant  system_log.program_name%type       :=   pkg_name||'fn_Agency_Statement_Status';
 --      v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
begin


select count(*) into v_policy_count
       from
               dragon_fitem a, dragon_billingaccounttrxset bats
          where
               a.policy_id = in_policy_id
          and
              (
                in_policy_trx_id is null
                or
               (  in_policy_trx_id is not null and a.policy_transaction_id = in_policy_trx_id)
              )
           and
                 a.billing_account_id = in_partner_agency_id
          and
               a.actual_due_date is not null
          and
              (a.related_recon_batch_id is not null
              and a.current_recon_batch_id  is not null
              and bats.billingaccounttrxset_id = a.current_recon_batch_id
              and bats.batch_status_id <> gBatchStatus_Processed )
          and
               (
                    in_stmt_as_of_date is null
                    or
                    (
                    in_stmt_as_of_date is not null and trunc(a.actual_due_date) >= trunc(to_date(in_stmt_as_of_date, pkg_os_constant.DragonDateFormatDefault))
                    )

                )





          and
               (
                    (
                          NVL(a.fitem_type_id,0) =    gFItemType_Debit
                          and
                         a.balance <> 0
                    )
                    or
                    (
                         nvl(a.fitem_type_id,0)  =    gFItemType_Credit
                             and
                         nvl(a.fitem_category_id,0) = gFItem_Cat_Commission
                         and
                         a.balance <> 0
                    )
               );

return NVL(v_policy_count,0);

end fn_Agency_Statement_Status;
-----------------------------------------------------------------------------
--Returns DragonUser ID of type 1546(Billing CSR) in case when "Primary CSR" _ref for Billing account is not set
--OSBILLING-1721
function fn_get_Bcsr_For_BillingTask
return number
as
  v_DragonUser_id object_type.OBJECT_TYPE_ID%type := null;
begin
  select
    du.user_id
  into
    v_DragonUser_id
  from dragon_user du
  where
    du.actor_type_id = 15146
    and du.object_state_id = 75
    and rownum = 1;


  return v_DragonUser_id;
  exception when no_data_found then
  begin
    select
     du.user_id
    into
      v_DragonUser_id
    from dragon_user du
    where
      du.actor_type_id = 4
      and du.object_state_id = 75
      and rownum = 1;
    return v_DragonUser_id;
  end;
end fn_get_Bcsr_For_BillingTask;

--------------------------------------------------------------------------------------------------------------------

--
-- %NAME
--        fn_check_cashFitem_exts_tf
--
-- %USAGE
--        This function returns 'T' when there are cash FItems created by in_billingaccounttrxset
--        This is used to prevent users from processing transaction that has already been processed
--
-- %ALGORITHM
--        Not specified
--
-- %PARAMS
--        in_billingaccounttrxset
--

function fn_check_cashFitem_exts_tf
(
in_billingaccounttrxset in   object.object_id%type
)
return varchar2 is
v_count number;

begin
  select
    count(dfi.fitem_id)
  into
    v_count
  from dragon_fitem dfi
  where
    dfi.creator_fitransactionset_id = in_billingaccounttrxset
    and dfi.fitem_type_id = 246
    and dfi.fitem_category_id = 646;

  if v_count > 0 then
    return 'T';
  else
    return 'F';
  end if;

end fn_check_cashFitem_exts_tf;
-----------------------------------------------------------------------------

function  fn_billacc_comm_amount
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                     in   object.object_id%type,
     in_init_amount_tf             in   char default 'T'
)
return number
is

     v_init_amount                 number := 0;
     v_bal_amount                               number := 0;

begin

  select sum(fitem.initial_amount), sum(fitem.balance)
       into
      v_init_amount, v_bal_amount
    from
      dragon_policy pol,
      dragon_fitem fitem,
      dragon_policy_term term
    where
      pol.policy_id             = fitem.policy_id
    and
      term.policy_term_id       = fitem.policy_term_id
    and
      NVL(term.policy_term_billing_method_id, pol.billing_method_id)      = 1   -- DirectBilled
    and
      fitem.fitem_category_id   in (gFItem_Category_Comm, gFItem_Category_DefPremComm) --Commission/Deferred Premium Commission
    and
      fitem.fitem_type_id       = 246 --Credit
    and
      fitem.installment_number  is not null
    and
      fitem.billing_account_id  = in_object_id;

     if in_init_amount_tf = 'T'
     then
          return v_init_amount;
     else
          return v_bal_amount;
     end if;

exception
    when others then

      return 0;

end fn_billacc_comm_amount;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_fitem_recon_details
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_object_id                     in   object.object_id%type
)
return number
is
     v_procedure_name     constant  system_log.program_name%type       :=   pkg_name||'fn_fitem_recon_details';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_count                 number := 0;
begin













  select count(fichange_id)
  into
      v_count
    from DRAGON_FICHANGE
   where fitem_id = in_object_id
     and ((FITEM_TRANSACTION_TYPE_ID in (101, 1601) and -- Cash Apply , Credit Apply
         nvl(ACTION_DELTA, 0) > 0) or
         (FITEM_TRANSACTION_TYPE_ID in (201, 1701 ,5001) and -- Cash Apply Reversal / Credit Apply Reversal
         nvl(ACTION_DELTA, 0) < 0));

    if v_count is null then
    return 0;
    else
    return v_count;
    end if;

  if v_session_control.gLogging_Full
    then
      pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name, '...... found fitems  :' || v_count      );
    end if;

exception
    when others then

      return 0;
end fn_fitem_recon_details;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_get_batch_name_for_UI
--
--   %usage
--        Get Billingaccounttrxset Batch Type Name to store it in datamart and to show on UI
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_billingaccounttrxset       billingaccounttrxset  id
--   %param    in_fittrxset_type             fitransaction set type
function fn_get_batch_name_for_UI
(
     in_session_id                 in         object.object_id%type,
     in_transaction_id             in         object.object_id%type,
     in_billingaccounttrxset       in         object.object_id%type,
     in_fittrxset_type             in         lookup_list_value.LOOKUP_ENUM%type
 )
return varchar2 is

     v_batch_name varchar2(100)                          := null;
     --v_Endors_SubType lookup_list_value.LOOKUP_ENUM%type := null;


     v_policy_trx_id               object.object_id%type := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_billingaccounttrxset, pkg_db_object.gbv_BillAccTrxSet_RefPolTrx);

     gFitemSubCatValue_Path varchar2(100)                := '29743646.31689946.29710146';-- Path from in_billingaccounttrxset to FItem subcategory
     --gEndorsSubCatValue_Path varchar2(100)               := '32502146.26542407';         -- To get the value of Endorsement Sub Type
     --UTPRODUCT-1505 Declared variable for Chargeback UI change
     v_rollback_trnx					   object.object_id%type;
     v_reversal_rsn					   number;
begin

     if in_fittrxset_type = gBatch_Adhoc_Journal
     then

          v_batch_name := pkg_os_lookup.fn_lookup_list_text_get
                          (     FITransactionSetBatchType,
                                gBatch_Adhoc_Journal
                           )
                           ||
                           ' - '
                           ||
                          pkg_os_lookup.fn_lookup_list_text_get
                          (     FItemCategoryList,
                                pkg_os_object_io.fn_object_bv_path_get
                                (
                                      in_session_id,
                                      in_transaction_id,
                                      in_billingaccounttrxset,
                                      gFitemSubCatValue_Path
                                 )
                           )||pkg_os_object_io.fn_object_bv_get   --Added as part of OSBILLING-7730 to append sub category
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billingaccounttrxset,
                                   32625948
                                );

     --UTPRODUCT-1505 Start
	elsif  in_fittrxset_type = gFITrxType_Reversal  then
          

             v_rollback_trnx :=   pkg_os_object_io.fn_object_bv_get
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billingaccounttrxset,
                                   32465446
                                );

              v_reversal_rsn :=  pkg_os_object_io.fn_object_bv_get
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   v_rollback_trnx,
                                   32235640
                                );
                 
           if    v_reversal_rsn = 99 then

                  v_batch_name := 'Chargeback';
                  else 
                  v_batch_name := nvl ( pkg_os_object_io.fn_object_bv_get
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billingaccounttrxset,
                                   33831346
                                ),
                               pkg_os_lookup.fn_lookup_list_text_get
                               (
                                     FITransactionSetBatchType ,
                                     in_fittrxset_type
                                ));

                  end if;
     --UTPRODUCT-1505 End
     
     elsif (v_policy_trx_id is not null )
     then
          v_batch_name := nvl(pkg_os_object_io.fn_object_bv_get
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_trx_id,
                                   gbv_PolicyTrx_UI_Type
                                ),
                                pkg_os_lookup.fn_lookup_list_text_get
                                (
                                     FITransactionSetBatchType ,
                                     in_fittrxset_type
                                ));


























      else

          v_batch_name := nvl ( pkg_os_object_io.fn_object_bv_get
                                (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billingaccounttrxset,
                                   33831346
                                ),
                               pkg_os_lookup.fn_lookup_list_text_get
                               (
                                     FITransactionSetBatchType ,
                                     in_fittrxset_type
                                ));

      end if;

     return v_batch_name;

end fn_get_batch_name_for_UI;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_check_DefPrem_exts_tf
--
--   %usage
--        Check the existance of Deferred Premium financials
--   %param    in_billingaccount_id         billingaccount_id


function fn_check_DefPrem_exts_tf
(
     in_billingaccount_id in   object.object_id%type
)
return varchar2
is
     v_count number;
begin
     select
         count(dfi.fitem_id)
     into
         v_count
     from
         dragon_fitem dfi
     where
         dfi.fitem_category_id = gFitem_Category_DefPremium
         and
         dfi.balance >= 0.01
         and
         dfi.billing_account_id = in_billingaccount_id;

     if v_count > 0
     then

         return 'T';

     else

         return 'F';
     end if;

end fn_check_DefPrem_exts_tf;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_get_policy_billacc_amount
--
--   %usage
--        Get fitems balance amount based on some Fitem Category and Fitem Type on policy or billing account level
--   %param
--    in_session_id         in_session_id
--    in_transaction_id     in_transaction_id
--    in_object_id          policy_id or billingaccount_id
--    in_type_id            fitem_type_id(Debit or Credit)
--    in_category_id        fitem_category_id
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_billacc_amount
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                     in                       object.object_id%type, --Policy Or BillingAccount
     in_type_id                                    in              db_fitem_type.db_fitem_type_id%type,
     in_category_id                   in                       number
)
return number
is

      v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_policy_billacc_amount';
   v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

      v_object_type_id             object.object_type_id%type;
   v_billing_acc_id              object.object_type_id%type;
   v_amount                        number  := 0;

begin

      v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

      if ( v_object_type_id = pkg_os_constant.gobjType_Policy )
      then

  -- 2017-01-25 Cheryl osbilling-3588 change bv
   v_billing_acc_id := pkg_os_object_io.fn_object_bv_get
                            (
                                in_session_id,
                                in_transaction_id,
                                in_object_id,
                                gbv_responsible_billingacct_id  --Responsible Billing Account
                            );

          select
            nvl(sum(balance),0)
        into
            v_amount
        from
            dragon_fitem
        where
            policy_id              = in_object_id
        and
            fitem_type_id       = in_type_id
        and
           (v_billing_acc_id is null Or billing_account_id  = v_billing_acc_id)
        and
            fitem_category_id      = in_category_id;

      elsif ( v_object_type_id = gObjType_BillingAccount )
      then

          select
            nvl(sum(balance),0)
        into
            v_amount
        from
            dragon_fitem
        where
            billing_account_id  = in_object_id
        and
            fitem_type_id       = in_type_id
        and
            fitem_category_id      = in_category_id;

      else

          if v_session_control.gLogging_Full
          then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..... Incorrect object type: '
                  || v_object_type_id ||
                  ' should be billing account or policy.'
          );

          end if;

      end if;

      return v_amount;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Exception while executing fn_get_policy_billacc_amount:' || ' Error: ' ||sqlerrm (sqlcode)
          );

          return 0;

end fn_get_policy_billacc_amount;
----------------------------------------------------------------------------------------------------------------
function fn_most_recent_batrxset
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccount_id          in             object.object_id%type,
     in_batch_type_id               in             object.object_id%type,
     in_batch_entry_method         in             varchar2 default 'System'
)
return object.object_id%type
is

     v_batrxset_id  object.object_id%type;

begin

begin

--  2018-02-21 Cheryl change to use max instead of row_num = 1 order by db.posted_date desc.
--      This does not work it does row num before the order by so wrong row getting selected

     select
          max(db.billingaccounttrxset_id)
     into
          v_batrxset_id
     from
          dragon_billingaccounttrxset db
     where
          db.parent_billing_account_id = in_billingaccount_id
     and
          db.batch_type_id = in_batch_type_id
     and
          db.batch_status_id in (39846,48846,48946,49346,52046)
     and
          db.batch_entry_method = in_batch_entry_method
          ;

  exception when others
  then
          pkg_os_logging.sp_log_info(in_session_id, in_transaction_id, 'fn_most_recent_batrxset',
                    '... There is no transaction of that type for the billing account' || in_billingaccount_id);

          return null;
  end ;

     return  v_batrxset_id;

end fn_most_recent_batrxset;

----------------------------------------------------------------------------------------------------------------
-- most recent processed BillingAccountTransactionSet
----------------------------------------------------------------------------------------------------------------
function fn_most_recent_proc_batrxset
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccount_id          in             object.object_id%type

)
return object.object_id%type
is

     v_batrxset_id  object.object_id%type;

begin

     select max(db.billingaccounttrxset_id)
     into v_batrxset_id
     from dragon_billingaccounttrxset db
     where db.parent_billing_account_id = in_billingaccount_id
        and db.batch_status_id in (39846); -- processed

     return  v_batrxset_id;

end fn_most_recent_proc_batrxset;


----------------------------------------------------------------------------------------------------------------
-- max of actual due date for FITransactionSet
----------------------------------------------------------------------------------------------------------------
function fn_fitrxset_max_due_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransactionset_id        in             object.object_id%type

)
return varchar2
is

     v_max_due_date   object_bv_value.business_variable_value%type;

begin

   select max(i.actual_due_date)
   into v_max_due_date
   from dragon_fichange c, dragon_fitem i
   where billingaccounttrxset_id = in_fitransactionset_id
     and c.fitem_id=i.fitem_id;

     return  to_char((to_date( v_max_due_date, 'DD-MON-YY')),pkg_os_constant.DragonDateFormatDefault);

end fn_fitrxset_max_due_date;



----------------------------------------------------------------------------------------------------------------
-- returns true if all ReconciliationRollupMembers for given AgencyReconciliationRollup have not null _Reference_Contributor
----------------------------------------------------------------------------------------------------------------
function fn_ag_recon_roll_fitemnotnull
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_ag_recon_roll_id           in             object.object_id%type

)
return object_bv_value.business_variable_value%type
is v_return object_bv_value.business_variable_value%type;
   t number;

begin
   select count(*)
   into t
   from dragon_rollup_member
   where rum_ref_fitem is null and  rum_parent_id = in_ag_recon_roll_id;

   if t=0 then v_return := 'T'; else v_return := 'F'; end if;
   return v_return ;
end fn_ag_recon_roll_fitemnotnull;



----------------------------------------------------------------------------------------------------------------
-- returns true if all AgencyReconciliationRollup for given BillingAccountTransactionSet (Company Statement type) are in reconcile set
----------------------------------------------------------------------------------------------------------------
function fn_ag_recon_roll_reconcile
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitransactionset_id        in             object.object_id%type

)
return object_bv_value.business_variable_value%type
is v_return object_bv_value.business_variable_value%type;
c number;
a char;
--cursor cur is
--      select ru_id from dragon_rollup  where ru_parent_id = in_fitransactionset_id;  -- AgencyReconcilliationRollup objects' id's

begin



-- update datamart for AgencyReconcilliationRollup objects
  select count(*)
   into c
   from dragon_rollup
   where ru_parent_id = in_fitransactionset_id and ru_object_state_id not in (58546,23,64146,64346,64446,64546,43046);

if c=0 then return 'T'; else return 'F' ; end if;

end fn_ag_recon_roll_reconcile;
----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_verify_installment_totals
--
--   %usage
--        total the amount of each billing element on the modified payment plan
--        and compare against stats to make sure they are the same
--   %param
--    in_session_id         in_session_id
--    in_transaction_id     in_transaction_id
--    in_policy_image_id    policy transaction policy id

--  2016-06-15 Cheryl PMADEV-552 - Created for new custom payplan verifivation

----------------------------------------------------------------------------------------------------------------

function fn_verify_installment_totals
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_image_id            in             object.object_id%type -- policy_image id
)
return char
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_verify_installment_totals';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                char;
     v_rollup_object_list          pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_rollup_object_indx          number;
     v_product_id                  object.object_id%type;
     v_filing_id                   object.object_id%type;
     v_mod_pay_plan_id             object.object_id%type;
     v_scheduled_element_list      pkg_os_object.t_object_list;
     v_scheduled_element_index     number;
     v_billing_element_id          db_billing_element.db_billing_element_id%type;
     v_total_current_amount        number;
     v_pc_coverage_id              number;
     v_billing_element_amount      number;
     v_policytrx_id                object.object_id%type   ;
     v_billing_element_name        varchar2(200);
     v_elements_names_group        varchar2(200);
     v_total_elements              number := 0;
     v_cash_applied                float;
     v_policy_id                   object.object_id%type   ;
     v_stat_record                 dragon_transaction_stats%rowtype;

     -- OSBILLING-4482
     v_earlier_pt_id               object.object_id%type;
     v_basisimage_id               object.object_id%type;
     v_earlier_payplan_md_id       payment_plan.payment_plan_id%type;
     v_earlier_payplan_md_row      pkg_db_payplan_modify.getPaymentPlanList%rowtype; --OSPRODUCT-3108
     v_earlier_payment_plan        object.object_id%type;
     v_billing_element_md_row      db_billing_element%rowtype;
     v_payable_earned_amount       float;

     type    payment_totals_tt     is table of   number index by pls_integer;
     v_payment_total               payment_totals_tt;
     v_element_id                  pls_integer;
     v_policy_term_id              object.object_id%type;
     v_bill_method_change_flag     number;
     v_term_billing_method_id      object.object_id%type;


begin


     v_product_id             :=   pkg_os_product.fn_object_product_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id
                                   );

     v_filing_id              :=   pkg_os_product.fn_policy_filing_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id,
                                        v_product_id
                                   );

     v_mod_pay_plan_id        :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       in_policy_image_id,
                                       gbv_PolicyRefModPayPlan
                                   );

     v_policytrx_id           :=   pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id
                                   );

     v_policy_id              :=   pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policytrx_id
                                   );

     v_policy_term_id         :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policytrx_id,
                                        pkg_db_payplan_modify.gbv_PolicyTrxRefPolicyTerm
                                   );

     v_bill_method_change_flag :=  pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_term_id,
                                        pkg_db_billing_modify.gbv_BillMethodChangeFlag
                                   );


     v_term_billing_method_id :=   pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          v_policy_term_id,
          pkg_db_billing_modify.gbv_PolicyTermBillingMethod
     );
     -- OSBILLING-4482
     -- Get payment plan from the prior transaction ...
     v_earlier_pt_id          :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_id,
                                        gbv_Ref_Most_Recent_Proctrx
                                   );

      -- OSBILLING-4482
     v_basisimage_id          :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_earlier_pt_id,
                                        gbv_PolicyTrxRefBasisCoverage
                                   );

      -- OSBILLING-4482
     v_earlier_payment_plan :=     pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_basisimage_id,
                                        gbv_PolicyRefChosenPlan
                                   );

      -- OSBILLING-4482
     v_earlier_payplan_md_id   :=  pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_earlier_payment_plan,
                                        pkg_os_constant_bv.gbv_PaymentPlanID
                                   );

      -- OSBILLING-4482
     v_earlier_payplan_md_row :=   pkg_db_payplan_modify.fn_payment_plan_row(v_earlier_payplan_md_id );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............ Earlier PayPlan MD ID : '||v_earlier_payplan_md_id
               || ' Earlier Trx ID : ' || v_earlier_pt_id
          );

     end if;

     v_elements_names_group := 'The following elements do not total correctly';

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............ Modified PayPlan ID : '||v_mod_pay_plan_id
               || ' in_policy_image_id: ' || in_policy_image_id
               || ' v_policytrx_id: ' || v_policytrx_id
          );

     end if;

     v_payment_total.delete;

     --
     -- Search for related ScheduledElements
     --

     v_scheduled_element_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_mod_pay_plan_id,
          gObjType_ScheduledElement,
          v_scheduled_element_list
     );

     if v_scheduled_element_list.count > 0
     then

          v_scheduled_element_index := v_scheduled_element_list.first;

          while v_scheduled_element_index is not null
          loop

               --   get the billimg element Md id refers back to db_billing_element

               v_billing_element_id          :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_element_list(v_scheduled_element_index),
                                                       gbv_billing_element_id
                                                  );

               --   get the element total
               v_billing_element_amount      :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_element_list(v_scheduled_element_index),
                                                       gbv_element_amount
                                                  );


               -- add to existing total or create new total for element

               v_element_id := v_billing_element_id;

               if v_payment_total.exists(v_element_id)
               then
                    v_payment_total(v_element_id) := v_payment_total(v_element_id) + v_billing_element_amount;
               else
                    v_payment_total(v_element_id) :=  v_billing_element_amount;
               end if;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... v_scheduled_element_list: '||v_scheduled_element_list(v_scheduled_element_index)
                         || 'v_element_id ' || v_element_id
                         || 'v_billing_element_amount ' || v_billing_element_amount
                         || ' total: '||v_payment_total(v_element_id)
                    );

               end if;

               v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );


          end loop; -- end of while loop for v_scheduled_element_index
     else
          --
          -- 2016-08-03 cheryl pmadev-1345 If no element found we need to error
          --
          v_return_value := 'F';
          return v_return_value;

     end if; -- end of v_scheduled_element_list > 0

     -- now compare the totals against the dragon_transaction_stats
     v_element_id := v_payment_total.first;

     while v_element_id is not null
     loop
          -- get the corresponding pc_coverage_id
          select
               pc_coverage_id
          into
               v_pc_coverage_id
          from
               db_billing_element_map e
          where
               e.db_billing_element_id = v_element_id
          and
               (
               e.pd_product_id =  v_product_id
               or
               e.pd_product_id is null
               )
          and
               (
               e.pd_filing_id  <= v_filing_id
               or
               e.pd_filing_id is null
               )
          and
               e.active_tf = 'T';

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ v_element_id : '||v_element_id
                    || ' v_pc_coverage_id: ' || v_pc_coverage_id
                    || ' v_product_id: ' || v_product_id
                    || ' v_filing_id: ' || v_filing_id
                    || ' in_policy_image_id ' || in_policy_image_id
                    || ' v_policytrx_id ' || v_policytrx_id
                    || ' v_policy_id: ' || v_policy_id
               );

          end if;

          -- now we can get the curremt amount based on the transaction and pc coverage id

          v_stat_record       :=   pkg_os_policy_stat.fn_get_stat_record
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policytrx_id,
                                        v_pc_coverage_id
                                   );-- OSPRODUCT-9261 added session id and transaction id

          v_total_current_amount := v_stat_record.current_amount;

          -- OSBILLING-4482
          v_billing_element_md_row      :=   pkg_db_payplan_modify.fn_billing_element_row
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_element_id
                                             );

          v_payable_earned_amount := 0;
          v_cash_applied:=0;

          -- since a payment can already be applied we need to subtract from stats amount first

          -- OSBILLING-5141--
          /*if ( v_billing_element_md_row.create_debit_tf is not null and v_billing_element_md_row.create_debit_tf = 'T'
              and (v_billing_element_md_row.debit_fitem_category not in (946,5746)  or v_billing_element_md_row.debit_fitem_sub_category in (61746,61946,45646)  )
              )
          then*/

          if (v_billing_element_md_row.billing_elem_calc_type is null or v_billing_element_md_row.billing_elem_calc_type = 1) then

               if v_bill_method_change_flag is not null and v_bill_method_change_flag = pkg_os_constant.gBoolean_Yes
               then

                    pkg_db_payplan_modify.sp_cash_applied_get
                    (
                         in_session_id            => in_session_id,
                         in_transaction_id        => in_transaction_id,
                         in_policy_image_id       => in_policy_image_id,
                         in_policy_transaction_id => v_policytrx_id,
                         in_billing_element_id    => v_element_id,
                         in_coverage_object_id    => v_stat_record.COVERED_OBJECT_ID,     -- OSBILLING-4482
                         in_payment_plan_md_row   => v_earlier_payplan_md_row,            -- OSBILLING-4482
                         io_cash_applied          => v_cash_applied,
                         in_all_inst_tf           => 'F'                                  -- OSBILLING-4482
                    );

                     select
                              NVL(sum(df.initial_amount),0) --OSBILLING-4818
                         into
                              v_total_current_amount
                         from
                              dragon_fitem df
                         where
                              df.policy_id = v_policy_id
                         and
                              df.policy_term_id = v_policy_term_id
                         and
                              df.installment_id in
                              (
                                   select installment_id from dragon_scheduled_installment
                                   where policy_id = v_policy_id and policy_term_id = v_policy_term_id
                                   and payment_plan_md_id = v_earlier_payplan_md_row.payment_plan_id
                                   and billing_method_id = v_term_billing_method_id
                              )
                         and
                              df.fitem_category_id = v_billing_element_md_row.debit_fitem_category
                         and
                              df.fitem_sub_category_id = v_billing_element_md_row.debit_fitem_sub_category;

                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_earlier_payment_plan:'||v_earlier_payment_plan||
                                   'v_term_billing_method_id:'||v_term_billing_method_id||
                                   '... Element Amount from the Term : '||v_total_current_amount
                              );

                         end if;


                else

                    pkg_db_payplan_modify.sp_cash_applied_get
                    (
                         in_session_id            => in_session_id,
                         in_transaction_id        => in_transaction_id,
                         in_policy_image_id       => in_policy_image_id,
                         in_policy_transaction_id => v_policytrx_id,
                         in_billing_element_id    => v_element_id,
                         in_coverage_object_id    => v_stat_record.COVERED_OBJECT_ID,     -- OSBILLING-4482
                         in_payment_plan_md_row   => v_earlier_payplan_md_row,            -- OSBILLING-4482
                         io_cash_applied          => v_cash_applied,
                         in_all_inst_tf           => 'T'                                  -- OSBILLING-4482
                    );

                 end if;

          else
               --
               --  When the Billing Element is either Payable only,
               --  then identify the final amount by excluding the Earned Amount and category based applied amount incase of partial payments on receivables
               --  also considering if the Bill Method was ever changed on the Term
               --
               -- OSBILLING-4482

               if v_bill_method_change_flag is not null and v_bill_method_change_flag = pkg_os_constant.gBoolean_Yes
               then

                    v_payable_earned_amount       :=   nvl(
                                                            pkg_db_payplan_modify.fn_get_element_earned_amount
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_policytrx_id,
                                                            v_earlier_payplan_md_row.payment_plan_id,
                                                            v_billing_element_md_row,
                                                            'F'
                                                            ),
                                                           0
                                                           );


                     select
                              NVL(sum(df.initial_amount),0) --OSBILLING-4818
                         into
                              v_total_current_amount
                         from
                              dragon_fitem df
                         where
                              df.policy_id = v_policy_id
                         and
                              df.policy_term_id = v_policy_term_id
                         and
                              df.installment_id in
                              (
                                   select installment_id from dragon_scheduled_installment
                                   where policy_id = v_policy_id and policy_term_id = v_policy_term_id
                                   and payment_plan_md_id = v_earlier_payplan_md_row.payment_plan_id
                                   and billing_method_id = v_term_billing_method_id
                              )
                         and
                              df.fitem_category_id = v_billing_element_md_row.debit_fitem_category
                         and
                              df.fitem_sub_category_id = v_billing_element_md_row.debit_fitem_sub_category;

                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'v_earlier_payment_plan:'||v_earlier_payment_plan||
                                   'v_term_billing_method_id:'||v_term_billing_method_id||
                                   '... Element Amount from the Term : '||v_total_current_amount
                              );

                         end if;
               else
                    v_payable_earned_amount       :=   nvl(
                                                            pkg_db_payplan_modify.fn_get_element_earned_amount
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_policytrx_id,
                                                            v_earlier_payplan_md_row.payment_plan_id,
                                                            v_billing_element_md_row,
                                                            'T'
                                                            ),
                                                           0
                                                           );
               end if;

          end if;
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ v_element_id : '||v_element_id
                    || ' v_pc_coverage_id: ' || v_pc_coverage_id
                    || ' v_product_id: ' || v_product_id
                    || ' v_filing_id: ' || v_filing_id
                    || ' v_total_current_amount: ' || v_total_current_amount
                    || ' v_cash_applied: ' || v_cash_applied
                    || ' v_payable_earned_amount: '  || v_payable_earned_amount      -- OSBILLING-4482
                    || ' v_payment_total(v_element_id): ' || v_payment_total(v_element_id)
                    || ' Final Amount :' ||(v_total_current_amount - nvl( v_cash_applied,0) + nvl(v_payable_earned_amount,0)) -- OSBILLING-4482
               );

          end if;
          --   check to see if the element amount from stats equals the total entered amount
          -- OSBILLING-4482
          --if (v_total_current_amount - nvl( v_cash_applied,0))<> v_payment_total(v_element_id)
          if (v_total_current_amount - nvl( v_cash_applied,0) + nvl(v_payable_earned_amount,0))<> v_payment_total(v_element_id)
          then
               select
                    e.billing_element_name
               into
                    v_billing_element_name
               from
                    db_billing_element e
               where
                    e.db_billing_element_id = v_element_id;

               v_elements_names_group := v_elements_names_group || ': '|| v_billing_element_name || ' ' ;
               v_total_elements := v_total_elements + 1;

          end if;
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ v_total_elements: ' || v_total_elements
                    || ' v_billing_element_name ' || v_billing_element_name
                    || ' v_elements_names_group ' || v_elements_names_group
               );

          end if;

          v_element_id := v_payment_total.next( v_element_id );



     end loop;

     --  check to see if any elements had error

     if v_total_elements = 0
     then
          v_return_value := 'T';
     else
          v_return_value := 'F';

          -- store the message that will display from the validation rule

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_session_id,
               gbv_Error_message,
               v_elements_names_group
          );

     end if;


     return v_return_value;

end fn_verify_installment_totals;



----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_verify_installment_dates
--
--   %usage
--        verify the dates entered in in chronilogical sequence
--
--   %param
--    in_session_id         in_session_id
--    in_transaction_id     in_transaction_id
--    in_policy_image_id    policy transaction policy id

--  2016-06-15 Cheryl PMADEV-552 - Created for new custom payplan verifivation

----------------------------------------------------------------------------------------------------------------

function fn_verify_installment_dates
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_image_id            in             object.object_id%type -- policy_image id



)
return char
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_verify_installment_dates';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                char := 'T';
     v_mod_pay_plan_id             object.object_id%type;
     v_scheduled_payment_list      pkg_os_object.t_object_list;
     v_scheduled_payment_index     number;
     v_policytrx_id                object.object_id%type   ;
     v_actual_due_date             object_bv_value.business_variable_value%type;
     v_prior_due_date              object_bv_value.business_variable_value%type;      
     v_aging_date_criteria            pd_property.pd_property_value%type := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_policy_image_id,19446); /* OSPRODUCT-1599  1 Billing Due Date, 2 Withdrawal Date */
                                                                                                                                                                                         
begin


    v_mod_pay_plan_id   :=        pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_policy_image_id,
                                       gbv_PolicyRefModPayPlan
                                  );

   v_policytrx_id := pkg_os_object.fn_object_parent_get
                    (
                         in_session_id,
                         in_transaction_id,
                         in_policy_image_id
                    );

    if v_session_control.gLogging_Full
    then

         pkg_os_logging.sp_log
         (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '............ Modified PayPlan ID : '||v_mod_pay_plan_id
              || ' in_policy_image_id: ' || in_policy_image_id
              || ' v_policytrx_id: ' || v_policytrx_id
         );

    end if;


     --
     -- Search for related Scheduledpayments in installment number order
     --

     v_scheduled_payment_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_mod_pay_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list,
          gbv_payplanschpay_inst_num
     );




   if v_scheduled_payment_list.count > 0
     then

          v_scheduled_payment_index := v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null
          loop
            
            
            
            -- get the actual due date
               
            /*OSPRODUCT-1599 start */
            If nvl(v_aging_date_criteria,1) = 2 then
                  v_actual_due_date      :=   pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_scheduled_payment_list(v_scheduled_payment_index),
                                                     gbv_withdrawal_date
                                                );

            Else          
                  v_actual_due_date      :=   pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_scheduled_payment_list(v_scheduled_payment_index),
                                                 gbv_actual_due_date
                                            );
                                                 
             End if; 
          /*OSPRODUCT-1599 End*/
             
                                                                    
             if v_session_control.gLogging_Full
             then

                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '......... A. v_scheduled_payment_list: '||v_scheduled_payment_list(v_scheduled_payment_index)
                       || 'v_scheduled_payment_index ' || v_scheduled_payment_index
                       || 'v_prior_due_date ' || v_prior_due_date
                       || ' v_actual_due_date: '||v_actual_due_date
                  );

             end if;

             if v_scheduled_payment_index = 1
               then
                v_prior_due_date := v_actual_due_date;
             if v_session_control.gLogging_Full
             then

                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '.........2. v_scheduled_payment_list: '||v_scheduled_payment_list(v_scheduled_payment_index)
                       || 'v_scheduled_payment_index ' || v_scheduled_payment_index
                       || 'v_prior_due_date ' || v_prior_due_date
                       || ' v_actual_due_date: '||v_actual_due_date
                  );

             end if;
             else
	       --UTPRODUCT-4531
               if trunc(v_actual_due_date)< trunc(v_prior_due_date)
                then
                  v_return_value := 'F' ;
                  exit;
               else
                 v_prior_due_date := v_actual_due_date;
               end if;
             end if;


             if v_session_control.gLogging_Full
             then

                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '......... v_scheduled_payment_list: '||v_scheduled_payment_list(v_scheduled_payment_index)
                       || 'v_scheduled_payment_index ' || v_scheduled_payment_index
                       || 'v_prior_due_date ' || v_prior_due_date
                       || ' v_actual_due_date: '||v_actual_due_date
                  );

             end if;

              v_scheduled_payment_index := v_scheduled_payment_list.next( v_scheduled_payment_index );


          end loop; -- end of while loop for v_scheduled_element_index

   end if; -- end of v_scheduled_element_list > 0

   return v_return_value;

end fn_verify_installment_dates;


----------------------------------------------------------------------------------------------------------------

function fn_get_acct_prd_formatted(in_session_id     in object.object_id%type,





                                     in_transaction_id in object.object_id%type,
                                     in_process_date in date) return varchar2 is

    v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'fn_get_acct_prd_formatted';
    v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id);












    v_return_value    varchar2(100) := null;
    v_accounting_date date;

  begin

    v_accounting_date := trunc(in_process_date);

    select 'M' || lpad(to_char(v_accounting_date, 'MM'), 2, 0) || ' - ' ||
           to_char(v_accounting_date, 'YYYY')
      into v_return_value
      from dual;

    return v_return_value;

  exception

    when others then
      return null;

  end fn_get_acct_prd_formatted;

-------------------------------------------------------------------------------------------------------
--
-- %NAME
--        fn_AssocCashApply_exts_tf
--
-- %USAGE
--        This function returns 'T' when FItem is associted to Cash Apply Batch
--        This is used to prevent from using cash FItems which already might be part of Cash Apply Batch
--
-- %ALGORITHM
--        Not specified
--
-- %PARAMS
--        in_fitem_id
--

function fn_AssocCashApply_exts_tf
(
     in_session_id in   object.object_id%type,
     in_transaction_id in   object.object_id%type,
     in_fitem_id in   object.object_id%type
)
return varchar2
is
     v_AssocitedCashApply_id object.object_id%type;
begin

     v_AssocitedCashApply_id := pkg_os_object_io.fn_object_bv_path_get
                               (
                                   in_session_id,
                                   in_transaction_id,
                                   in_fitem_id,
                                   gbv_FItemRefCashApplyBatch
                                );

     if v_AssocitedCashApply_id is null then
       return 'F';
     else
       return 'T';
     end if;
end fn_AssocCashApply_exts_tf;


------------------------------------------------------------------------------

---
---
--  -- 2016-08-29 Cheryl osbilling-2929 Check if policy number already exists
---

function fn_validate_Policy_exists
(

       in_session_id       in                object.object_id%type,
       in_transaction_id   in                object.object_id%type,
       in_policynumber    in                varchar2
) return number
as
       policy_count       number;

begin

  select  count(*) into policy_count
  from dragon_policy p
  where p.policy_number = in_policynumber;

return policy_count;

end fn_validate_Policy_exists;
--------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--
--  2016-09-21 Cheryl osbilling-2933 add gross due amount
--
--   %NAME
--        fn_billacc_gross_amounts
--
--   %USAGE
--        This function returns the gross amounts for the account
--
--   %ALGORITHM

--         Get the total gross due amount for the Billing Account
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_billacc_type     number
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_billacc_gross_amounts
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_amount                 number    :=   0;

begin

        select
               nvl(sum(balance),0)
        into
               v_amount
        from
               dragon_fitem df,
               dragon_policy dp
        where
               df.policy_id = dp.policy_id
        and
               billing_account_id = in_object_id
        and
               (
               df.fitem_type_id = gFItemType_Debit
               )
          and
               (df.balance >= 0.01 or ( df.balance <=-0.01 and df.fitem_type_id = gFItemType_Credit))
        ;

     return nvl(v_amount,0);

end fn_billacc_gross_amounts;

---------------------------------------------------------------------------------------------------------------------------------------
--
--  2016-09-21 Cheryl osbilling-2933 add gross due amount
--
--
--   %NAME
--        fn_policy_gross_amounts
--
--   %USAGE
--        This function returns the gross due amounts for the policy
--
--   %ALGORITHM
--         Get the total gross due amount for the Policy
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_polbillmeth_type number

---------------------------------------------------------------------------------------------------------------------------------------

function  fn_policy_gross_amounts
(
     in_object_id             in        object.object_id%type

)
return number
is

     v_amount                 number    :=   0;

begin

          select
                nvl(sum(df.balance),0)
          into
                v_amount
          from
                dragon_fitem df,
                dragon_policy dp
          where
                df.policy_id = dp.policy_id
          and
                df.policy_id = in_object_id
          and
                df.partner_id = dp.policy_partner_id
          and
                (
                (df.fitem_type_id       =    gFItemType_Debit
                and
                df.fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj)) --PMADEV-565 exclude PLR Retro Adj
                )
          and
                df.balance >= 0.01;

     return nvl(v_amount,0);

end fn_policy_gross_amounts;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
--------------------------------------------------------------------------------
--
--  2016-09-21 Cheryl osbilling-2933 add commission due amount
--
--   %NAME
--        fn_billacc_comm_agency_amount
--
--   %USAGE
--        This function returns the agency billed policies commission amount  of an agency billing account
--
--   %ALGORITHM
--         Get the total commission of  agency billed policies for the agency billing account passed.
--
--   %PARAM    in_object_id        Billing Account ID

---------------------------------------------------------------------------------------------------------------------------------------

function  fn_billacc_comm_agency_amount
(
     in_object_id     in   object.object_id%type
)
return number
is

     v_bal_amount    number := 0;

begin

     select
          sum(fitem.balance)
     into
          v_bal_amount
     from
          dragon_policy pol,
          dragon_fitem fitem,
          dragon_policy_term term
     where
          pol.policy_id             = fitem.policy_id
     and
          term.policy_term_id       = fitem.policy_term_id
     and
          nvl(term.policy_term_billing_method_id, pol.billing_method_id)  = gPolicy_AgencyBilled  -- Agency bill
     and
          fitem.fitem_category_id   in (gFItem_Category_Comm, gFItem_Category_DefPremComm) --Commission/Deferred Premium Commission
     and
          fitem.fitem_type_id       = gFItemType_Credit --Credit
     -- and
        -- fitem.installment_number  is not null OSBILLING-3885
     and
        fitem.billing_account_id  = in_object_id;

     return nvl(v_bal_amount,0);

end fn_billacc_comm_agency_amount;

---------------------------------------------------------------------------------------------------------------------------------------
--
--  2016-09-21 Cheryl osbilling-2933 add gross due amount
--
--
--   %NAME
--        fn_policy_commission_amounts
--
--   %USAGE
--        This function returns the gross due amounts for the policy
--
--   %ALGORITHM
--         Get the total commission due amount for the Policy
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_polbillmeth_type number

---------------------------------------------------------------------------------------------------------------------------------------

function  fn_policy_commission_amounts
(
     in_object_id             in        object.object_id%type,
     in_business_relation_id  in        object.object_id%type default null -- OSPRODUCT-29008
)
return number
is

     v_amount                 number    :=   0;

begin

    select
          nvl(sum(df.balance),0)
    into
          v_amount
    from
          dragon_fitem df,
          dragon_policy dp,
          dragon_policy_term term
    where
          df.policy_id = dp.policy_id
    and
          df.policy_id = in_object_id
    and
          --df.partner_id = dp.policy_partner_id
          df.partner_id = pkg_os_object_io.fn_object_bv_get(0,0,dp.policy_id,pkg_db_constant.gbv_Ref_BORCommissionPartner) -- 33310048 OSPRODUCT-15394
    and
          term.policy_term_id       = df.policy_term_id
    and
      NVL(term.policy_term_billing_method_id, dp.billing_method_id)      = gPolicy_AgencyBilled  -- Agency bill
     and
                         (in_business_relation_id is null or
                         df.fitem_business_relationship = in_business_relation_id
                         )
    and
          ( df.fitem_type_id       =    gFItemType_Credit
          and
          df.fitem_category_id in (gFItem_Category_Comm, gFItem_Category_DefPremComm) )
     --
     -- 2016-10-19 Cheryl osbilling-3241 commission on an RP is a positive number
     --
--    and--PMADEV-2034



--          (df.balance <= 0.01 )--PMADEV-2034
     ;

     return v_amount;

end fn_policy_commission_amounts;
---------------------------------------------------------------------------------------------------------------------------------------
--
--
--   %NAME
--        fn_get_ult_partner_account
--
--   %USAGE
--        This function returns the ultimate parent partner billing account id
--        for a given child partner billing account
--
--   %ALGORITHM
--         Loop through the parent partner until its parent is null and return its billing account
--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_billing_account_id         in             Partner's Billing Account ID

---------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_ult_partner_account
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_account_id         in             object.object_id%type
)
return number
is

     v_billing_account_id          object.object_id%type := 0;
     v_partner_id                  object.object_id%type;
     v_parent_partner_id           object.object_id%type;

begin

     v_partner_id            :=    pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id
                                   );

     v_parent_partner_id    :=     pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_partner_id
                                   );

     while (v_parent_partner_id is not null and v_parent_partner_id <> v_partner_id)
     loop

     v_partner_id           :=     v_parent_partner_id;

     v_billing_account_id   :=     pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_partner_id,
                                        pkg_db_object.gObjType_BillingAccount
                                   );

     v_parent_partner_id    :=     pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_partner_id
                                   );

     end loop;

     return v_billing_account_id;


end fn_get_ult_partner_account;

----------------------------------------------------------------------------------------------------

--
---
--  check if rollup batch should be created
---

function fn_check_account_rollup_batch
(

       in_session_id       in                object.object_id%type,
       in_transaction_id   in                object.object_id%type,
       in_billing_account_id    in           object.object_id%type,
       in_db_trx_type_id        in           number
) return number
as
       trx_count       number;

begin

       select
              count( db.billingaccounttrxset_id)
          into trx_count
          from
               dragon_billingaccounttrxset db
          where
               db.parent_billing_account_id = in_billing_account_id
          and
               db.batch_type_id = in_db_trx_type_id
          and
               db.batch_status_id =  pkg_db_object.gBatchStatus_Processed
          and
               db.related_rollup_statement_id     is null
          ;
return trx_count;

end fn_check_account_rollup_batch;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_billacc_commission
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_amount                 number    :=   0;

begin

     select nvl(sum(balance),0)
    into v_amount
          from dragon_fitem df, dragon_policy dp
          where df.policy_id = dp.policy_id  and billing_account_id = in_object_id and dp.billing_method_id = gPolicy_BillMeth_Agency
               and df.fitem_type_id = gFItemType_Credit and df.fitem_category_id in (gFItem_Category_Comm, gFItem_Category_DefPremComm) and df.balance <=-0.01;

     return v_amount;

end fn_billacc_commission;

-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_policy_commission
(
     in_object_id             in        object.object_id%type
)
return number
is

     v_amount                 number    :=   0;

begin

     select nvl(sum(balance),0)
    into v_amount
          from dragon_fitem df, dragon_policy dp
          where df.policy_id = dp.policy_id  and df.policy_id = in_object_id and dp.billing_method_id = gPolicy_BillMeth_Agency
               and df.fitem_type_id = gFItemType_Credit and df.fitem_category_id in (gFItem_Category_Comm, gFItem_Category_DefPremComm) and df.balance <=-0.01;

     return v_amount;

end fn_policy_commission;

-----------------------------------------------------------------------------------------------------------------------------------------------------
-- Function to show the Dish Button.
function fn_ba_dish_available_tf
(
         in_billing_account_id object.object_id%type
)
return char
is
v_count number;

begin
     select
       count(1)
     into
       v_count
     from
       dragon_billingaccounttrxset  b
     where
       b.parent_billing_account_id = in_billing_account_id
     and
       b.batch_status_id= gBatchStatus_Processed --39846
     and
       b.receipt_type_id in ( gFITrxPay_Check , --101
                             gBatch_CCPayment , --201
                             gFITrxPay_Credit_Card, -- 51940,
                              gBatch_EFTPayment , --301
                              gFITrxPay_Eft_type ,-- 53346
                              gFITrxPay_Broker_Check , -- 52640
                              gFITrxPay_Certified_Check , --52740
                              gBatch_ChequePayment , --52140
                              gFITrxPay_Returned_Check --52440
                              ) ;

     if v_count > 0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_ba_dish_available_tf;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_billingaccount_total_past_due
--
--   %USAGE
--        This function returns total due of type in_aging_status on in_billing_account_id that are not the part of in_billing_acc_trx_set_id rollup trasaction
--
--   %ALGORITHM
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_billing_account_id      Billing Account ID
--   %PARAM     in_billing_acc_trx_set_id  Billing Account Transaction Set ID
--   %PARAM     in_aging_status            aging status
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_billingacct_total_due
(
       in_session_id               in             object.object_id%type,
       in_transaction_id           in             object.object_id%type,
       in_billing_account_id       in             object.object_id%type,
       in_billing_acc_trx_set_id   in             object.object_id%type,
       in_aging_status             in             number

)return number
as
       total_due       number;

begin
       select sum(balance)
       INTO total_due
       from dragon_fitem
       where billing_account_id= in_billing_account_id
       and
       (aging_status_id=in_aging_status or in_aging_status is null)
       and
       (related_recon_batch_id<>in_billing_acc_trx_set_id or in_billing_acc_trx_set_id is null)
       ;

return nvl(total_due,0);

end fn_get_billingacct_total_due;



-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_latest_task
--
--   %USAGE
--        This function returns latest task of an object based on creation date
--
--   %ALGORITHM
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_latest_task
(
       in_session_id               in             object.object_id%type,
       in_transaction_id           in             object.object_id%type,
       in_object_id                in             object.object_id%type

)return number
as
          --v_task_id       number(12);
            v_task_id      object.object_id%type;   --OSBILLING-7502

begin

        select task_id into v_task_id from
        (
          select task_id from dragon_task
          where task_object_id =in_object_id
          order by task_created_date desc
        )
        where rownum=1;

        return v_task_id;

        exception
        when no_data_found then
        return null;

end fn_get_latest_task;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_most_recent_recon_ref
--
--   %USAGE
--        This function returns most recent broker recon based on statement to date
--
--   %ALGORITHM
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_billing_account_id      Billing Account ID
--   %PARAM     in_exclude                 Billing Account Transaction Set ID which should be excluded
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_most_recent_recon_ref
(
       in_session_id               in             object.object_id%type,
       in_transaction_id           in             object.object_id%type,
       in_billingaccount_id        in             object.object_id%type,
       in_exclude                  in             object.object_id%type default null
)return number
as
          --v_ref_id       number(12);
            v_ref_id       object.object_id%type;   --OSBILLING-7502

begin

      select billingaccounttrxset_id into v_ref_id from
      (
          select billingaccounttrxset_id from dragon_billingaccounttrxset
          where parent_billing_Account_id=in_billingaccount_id
          and  batch_type_id=1201
          and (in_exclude is null or billingaccounttrxset_id <> in_exclude)
          and batch_status_id not in (gGenericStatus_Created,gBatchStatus_Discarded ) -- 23,61546
          order by billing_period_end_date desc
      )
      where rownum=1;
      return       v_ref_id;
      exception
      when others
        then
          return null;

end fn_most_recent_recon_ref;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_most_recent_agency_stmt_ref
--
--   %USAGE
--        This function returns most recent agency statement based on billing period end date
--
--   %ALGORITHM
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_billing_account_id      Billing Account ID
--   %PARAM     in_statement_type            stateent type
--   %PARAM     in_statement_profile_id    statement profile id
--   %PARAM     in_exclude                 Billing Account Transaction Set ID which should be excluded
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_most_recent_agency_stmt_ref
(
       in_session_id               in             object.object_id%type,
       in_transaction_id           in             object.object_id%type,
       in_billingaccount_id        in             object.object_id%type,
       in_statement_type           in             object_bv_value.business_variable_value%type  default null,
       in_statement_profile_id     in             object.object_id%type default null,
       in_exclude                  in             object.object_id%type default null

)return number
as

     --v_ref_id     number(12);
     v_ref_id       object.object_id%type;   --OSBILLING-7502

begin
     
     -- OSPRODUCT-14094
     -- For calculated BV this condition will meet
     if in_statement_profile_id is not null
        and
        in_statement_type is null
        and
        in_exclude is null
     then
          -- OSPRODUCT-14094
		select billingaccounttrxset_id
		  into v_ref_id
		  from (select billingaccounttrxset_id
				from dragon_billingaccounttrxset
			    where parent_billing_Account_id = in_billingaccount_id
				 and (statement_profile_id = in_statement_profile_id)
				 and batch_status_id not in (23, gBatchStatus_Discarded) --osproduct-7491 20201020 Cheryl
			    order by billing_period_end_date desc, creation_date desc)
		 where rownum = 1;
                    
     else
          
          --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
          --Need to ask as some clause changes
          select billingaccounttrxset_id
            into v_ref_id
            from (select billingaccounttrxset_id
                    from dragon_billingaccounttrxset
                   where parent_billing_Account_id = in_billingaccount_id
                        --and  batch_type_id=801 --OSBilling-4481
                     and (in_statement_type is null or statement_type_id = in_statement_type)
                     and (in_statement_profile_id is null or statement_profile_id = in_statement_profile_id)
                     and (in_exclude is null or billingaccounttrxset_id <> in_exclude)
                     and batch_status_id not in (23, gBatchStatus_Discarded) --osproduct-7491 20201020 Cheryl
                   order by billing_period_end_date desc, creation_date desc)
           where rownum = 1;
           
     end if;
     
	return v_ref_id;

exception 
     when others then 
          
          return null;
     
end fn_most_recent_agency_stmt_ref;

----------------------------------------------------------------------------------------------------
function  fn_get_ba_instalment_balance
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_ba_installment_id       in        object.object_id%type,
     in_billing_account_id      in        number
)
return number
is

     v_amount                 number    :=   0;


begin
     select
          sum(balance)
     into
          v_amount
     from
          dragon_fitem f
     where
          f.installment_id in
          (
               select
                           c.dragon_instalment_id
               from
                           dragon_ba_instalment_component c
               where
                           c.ba_instalment_id = in_ba_installment_id
               and
               nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, c.ba_instalment_component_id,32843240),75) not in
               (73, 54246, 54346, 54446, 37346, 52946, 53046)
          )
     and
          f.fitem_type_id = 146
     and
          f.billing_account_id = in_billing_account_id;

return v_amount;

end fn_get_ba_instalment_balance;
----------------------------------------------------------------------------------------------------

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as this function is uncommented in gcna
--OSBILLING-4900 : Moved this code to pkg_cs_functions.
/*
function fn_get_noic_due_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_rolluptrx_id               in             object.object_id%type
)
return varchar2
is
     v_billingaccounttrxset_id     object.object_id%type;
     v_targercancellationdate      varchar2(50);
begin

     select Max(billingaccounttrxset_id) into  v_billingaccounttrxset_id
            from dragon_billingaccounttrxset
            where related_rollup_statement_id=in_rolluptrx_id;


     v_targercancellationdate := pkg_os_object_io.fn_object_bv_path_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_billingaccounttrxset_id,
                                                     '32502146.30024012.30020712' --BillingAccountTransactionSet._Reference_Associated Policy Transaction._Child_PolicyPendingCancellation.Target Cancellation Date
                                                 );
     return v_targercancellationdate;

     Exception
       when no_data_found then
           pkg_os_logging.sp_log_error
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   'fn_get_noic_due_date',
                                   '...no associated batches found for rollup transaction : '||in_rolluptrx_id
                              );

end fn_get_noic_due_date;
*/
----------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_account_balance
--
--   %USAGE
--        This function returns the account balance of a billing account
--
--   %ALGORITHM
--         Sum of Balances of all Fitems created under this Billing Account
--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_billing_account_id         in             Partner's Billing Account ID

---------------------------------------------------------------------------------------------------------------------------------------
function  fn_get_account_balance
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_billing_account_id      in        object.object_id%type
)
return number
is

     v_amount                 number    :=   0;
     v_amount_min             number    :=   0;

begin
     select
          nvl(sum(balance),0)
     into
          v_amount
     from
          dragon_fitem f
     where
          f.billing_account_id = in_billing_account_id;
          
     select
          nvl(sum(balance),0)
     into
          v_amount_min
     from
          dragon_fitem f
     where
          f.billing_account_id = in_billing_account_id
     and 
          f.value_stream = 3; -- KR Temporary  -- OSPRODUCT-7844   

     return v_amount - v_amount_min;

end fn_get_account_balance;
---------------------------------------------------------------------------------------------------------------------------------------
function fn_ba_earned_unearned_amnt
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_account_id     in        object.object_id%type,
     in_earned_unearned_id     in        number -- Pass the earning method
) return number
is

     v_amount                 number    :=   0;

begin

     select
          nvl(sum(balance),0)
     into
          v_amount
     from
          dragon_policy p,
          dragon_fitem f
     where
          p.policy_id      = f.policy_id
     and
          f.billing_account_id  = in_billing_account_id
     and
          f.fitem_type_id = gFItemType_Credit
     and
          f.balance <> 0
     and
          f.earning_status = pkg_os_lookup.fn_lookup_list_text_get
                              (
                                   pkg_db_billing_payable.FItemPayablesEarningStatus,
                                   in_earned_unearned_id
                              );

     return v_amount;

end fn_ba_earned_unearned_amnt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_term_due_amt
--
--   %USAGE
--        This function returns the term due amount
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_object_id               policyterm object ID

--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_term_due_amt
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_object_id             in        object.object_id%type
)
return number
is

     v_procedure_name         constant  system_log.program_name%type   :=   pkg_name||'fn_get_term_due_amt';
     v_session_control        pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_term_due_amount        number;
     v_policy_id              object.object_id%type                    := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id,in_object_id );

Begin

     select
          sum(balance)
     into
          v_term_due_amount
     from
          dragon_fitem
     where
          policy_id = v_policy_id
     and
          policy_term_id = in_object_id
     and
          fitem_type_id = gFItemType_Debit
     and
          fitem_category_id not in  (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm, gFitem_category_LossGain);--OSPRODUCT-12759

     return v_term_due_amount;

exception
   when others then

     return null;

end fn_get_term_due_amt;

----------------------------------------------------------------------------------------------------
function fn_get_payment_mode_id
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_policy_id              in        object.object_id%type

) return number
is

     v_payment_mode_id          number    :=   0;
     v_policy_current_term      object.object_id%type;
     v_cash_profile             object.object_id%type;
     v_payment_profile          object.object_id%type;


begin
     --get policy current term
     v_policy_current_term := fn_get_policy_current_term(in_session_id,in_transaction_id,in_policy_id);

     --get the payment profile linked with policy term
     v_payment_profile        :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_current_term,
                                        32251146  --payment profile reference
                                   );
      --get the cash profile linked with payment profile
     v_cash_profile           :=   pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_payment_profile,
                                        30013046  -- reference to cashtransfer profile
                                   );

     v_payment_mode_id        :=   pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_cash_profile, 30010546 ); --get payment mode id


     return v_payment_mode_id;

end fn_get_payment_mode_id;
-------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--
--   %NAME
--        fn_policy_due_amounts_new
--
--   %USAGE
--        This function returns the past/current/future due amounts for the policy
--
--   %ALGORITHM
--         Get the total debit due amount for the Policy with the consideration
--         of Agency/Customer due dates for the Policy and Due Type ( Past/Current/Future).
--
--   %PARAM    in_object_id        object.object_id%type
--   %PARAM    in_polbillmeth_type number
--   %PARAM    in_due_type         number
--   %PARAM    in_due_days         number

---------------------------------------------------------------------------------------------------------------------------------------

function  fn_policy_due_amounts_new
(
     in_object_id             in        object.object_id%type,
     in_polbillmeth_type      in        number,
     in_due_type              in        number,
     in_due_days              in        number default 0
)
return number
is

     v_amount                 number    :=   0;
     v_grace_period_days      number    :=   0;
     v_current_sysdate    number;
     v_policy_past_days    number;

begin
     --
  -- SK:Calculated the past days
     --
     v_policy_past_days:= to_number(to_char
                    (
                         pkg_db_functions.fn_get_policy_current_date
                         (
                              1,
                              1,
                              in_object_id
                         )- in_due_days ,'YYYYMMDD'
                     ));
     v_current_sysdate :=        to_number             (to_char    (pkg_os_time.fn_os_sysdate
                                        (    1,
                                             1,
                                             in_object_id
                                        )
                                   , 'YYYYMMDD'
                              ));

     if in_polbillmeth_type = gPolicy_BillMeth_Direct
     then

          if in_due_type = PastDue
          then

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem
               where
                    policy_id           =    in_object_id
               and
                    fitem_type_id       =    gFItemType_Debit
               and
                    fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj) --PMADEV-565 exclude PLR Retro Adj
               and
                    aging_status_id     =    gfitem_past_due
               and 
                    value_stream is null -- [KR] OSPRODUCT-2071
               and
                    ( aging_status_days_id = in_due_days or in_due_days = 0)

               and
                    (balance >= 0.01 )-- OSBILLING-1235or balance <=-0.01)
               ;

          else --if in_due_type = CurrentDue
          -- then

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem
               where
                    policy_id           =    in_object_id
               and
                    fitem_type_id       =    gFItemType_Debit
               and 
                    value_stream is null -- [KR] OSPRODUCT-2071
               and
                    fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj) --PMADEV-565 exclude PLR Retro Adj
               and
                   aging_status_id      =    decode (in_due_type,CurrentDue, gfitem_current_due, FutureDue, gfitem_future_due)
               and
                    (balance >= 0.01 ) -- OSBILLING-1235 or balance <=-0.01)
                  --  (balance >= 0.01 or balance <=-0.01) -- ALDEV-1242
               ;

          end if; -- end of due_type check

-- 2016-01-28 osbilling-1785 - changed from gPolicy_BillMeth_Agency,   agency_due_date
-- to gPolicy_BillMeth_Agency,   NVL(agency_due_date, actual_due_date)
-- agency due dates does not get filled in until the statement is now created



     elsif in_polbillmeth_type  =  gPolicy_BillMeth_Agency
     then

          if in_due_type = PastDue
          then

               select
                    nvl(sum(df.balance),0)
               into
                    v_amount
               from
                    dragon_fitem df,
                    dragon_policy dp
               where
                    df.policy_id = dp.policy_id
               and
                    df.policy_id = in_object_id
               and
                    df.partner_id = dp.policy_partner_id
               and
                    (
                    (df.fitem_type_id       =    gFItemType_Debit
                    and
                    df.fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj)) --PMADEV-565 exclude PLR Retro Adj

                    or
                    ( df.fitem_type_id       =    gFItemType_Credit

                    and
                    df.fitem_category_id in (gFItem_Category_Comm, gFItem_Category_DefPremComm) )
                    )
               and
                  --OSBILLING-2266
                    df.aging_status_id = gfitem_past_due
               and
                    (df.balance >= 0.01 or ( balance <=-0.01 and df.fitem_type_id = gFItemType_Credit ))
               and  --OSBILLING-2979
                    ( aging_status_days_id = in_due_days or in_due_days = 0)

               ;

          elsif in_due_type = CurrentDue
          then

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem df,
                    dragon_policy dp
               where
                    df.policy_id = dp.policy_id
               and
                    df.policy_id = in_object_id
               and
                    df.partner_id = dp.policy_partner_id
               and
                    (
                    (df.fitem_type_id       =    gFItemType_Debit
                    and
                    df.fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj)) --PMADEV-565 exclude PLR Retro Adj

                    )
               and
                  --OSBILLING-2266
                   df.aging_status_id = gfitem_current_due

               and
                    balance >= 0.01 --or ( balance <=-0.01 and df.fitem_type_id = gFItemType_Credit ))
               ;

          elsif in_due_type   =   FutureDue
          then

               select
                    nvl(sum(balance),0)
               into
                    v_amount
               from
                    dragon_fitem df,
                    dragon_policy dp
               where
                    df.policy_id = dp.policy_id
               and
                    df.policy_id = in_object_id
               and
                    df.partner_id = dp.policy_partner_id
               and
                    (
                             (df.fitem_type_id       =    gFItemType_Debit
                             and
                             df.fitem_sub_category_id not in (gFitem_SubCat_PLRRetroAdj)) --PMADEV-565 exclude PLR Retro Adj

                    )
               and
                  --OSBILLING-2266
                    df.aging_status_id = gfitem_future_due

               and
                    balance >= 0.01 --or ( balance <=-0.01 and df.fitem_type_id = gFItemType_Credit ) )
               ;

          end if; -- end of due_type check

     end if; -- end of polbillmeth_type check

     return v_amount;

end fn_policy_due_amounts_new;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
----------------------------------------------------------------------------------------------------

function fn_rescind_pndg_canc_yn
(

      in_session_id        in                  object.object_id%type,
      in_transaction_id    in                  object.object_id%type,
      in_policy_term_id    in          object.object_id%type,
      in_policy_id         in                  object.object_id%type,
      in_pd_property_value    in          pd_property.pd_property_value%type

) return char

as
      v_past_due_amt                  number;
      v_pending_can_amt                  number;
      v_resc_tolerance                   number;
      v_ref_pndg_canc        object.object_id%type;
      v_ref_pndg_canc_pol_trx          object.object_id%type;
      v_ref_pndg_canc_bats          object.object_id%type;
      v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
      v_procedure_name              constant system_log.program_name%type        :=   pkg_name||'fn_rescind_pndg_canc_yn';
      v_return_value                char                                         :=   'F';



begin
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '|||||||||||| Entering in fn_rescind_pndg_canc_yn Policy ID: '||in_policy_id||
              ' pd property value: '||in_pd_property_value
          );

     end if;

     dbms_output.put_line('in_policy_id:'||in_policy_id||'in_pd_property_value'||in_pd_property_value);
     --
     -- Derive the total past due amount on the policy.
     --


      select
       nvl(sum(balance),0)
      into
           v_past_due_amt
      from
       dragon_fitem
      where
           policy_id           =    in_policy_id
      and
       policy_term_id      =    in_policy_term_id
      and
       fitem_type_id       =    pkg_db_functions.gFItemType_Debit
      and
       aging_status_id     =    pkg_db_functions.gfitem_past_due
      and
       (balance >= 0.01 )
      ;

     dbms_output.put_line('v_past_due_amt:'||v_past_due_amt);
     --
     -- Derive the sum of initial amount of all the installments which comprises of past due fitem.
     --

    v_ref_pndg_canc:=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_id, 30792946 );
     v_ref_pndg_canc_pol_trx:=  pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, v_ref_pndg_canc);
     v_ref_pndg_canc_bats:=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ref_pndg_canc_pol_trx, 31866546 );
     v_pending_can_amt:= pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ref_pndg_canc_bats, 29707746 );


          dbms_output.put_line('v_pending_can_amt:'||v_pending_can_amt);


     --
     -- get the pd_property
     --
     v_resc_tolerance:=  in_pd_property_value;
     dbms_output.put_line('v_resc_tolerance:'||v_resc_tolerance);

     if trunc(v_past_due_amt) <= trunc((v_resc_tolerance*v_pending_can_amt)/100)
     then
          v_return_value := 'T';
     end if;

return v_return_value;

end fn_rescind_pndg_canc_yn;

----------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_batch_gross_amount
--
--   %USAGE
--        This function returns the gross amount associated with a billing batch.
--
--   %ALGORITHM
--         Sum of Balances of all Fitems created under this BillingAccountTransactionSet other than commission.
--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_billingacctrxset_id        in             Billing batch ID

---------------------------------------------------------------------------------------------------------------------------------------

function fn_batch_gross_amount_get
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_trx_set_id     in        object.object_id%type,
     in_billing_account_id     in        object.object_id%type

)return number
is
     v_gross_amount            number;

begin

     select
          nvl(sum(fi.initial_amount),0)
     into
          v_gross_amount
     from
          dragon_fitem fi
     where
          fi.creator_fitransactionset_id = in_billing_trx_set_id
     and
          fitem_category_id not in ( pkg_db_object.gFItem_Cat_Commission, pkg_db_functions. gFItem_Category_DefPremComm, gFitem_category_LossGain) -- 946 ,5746--OSPRODUCT-12759
     and
          fi.billing_account_id = in_billing_account_id;

return v_gross_amount;

end fn_batch_gross_amount_get;
---------------------------------------------------------------------------------------------------------------------------------------

--OSBilling-4412
function fn_get_acct_invc_prfl
(

       in_session_id       	in             object.object_id%type,
       in_transaction_id   	in             object.object_id%type,
       in_billingaccount_id 	in            	object.object_id%type


) return number
as
	v_return       		number;
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_acct_invc_prfl';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

BEGIN

     select
          statementprofile_id
     into
          v_return
     from
          DRAGON_STATEMENTPROFILE
     where
          billingaccount_id = in_billingaccount_id
     and
          profile_type_id = 1 and status = 'Active'
	and
		BILLING_TYPE_ID = 1;--Customer Invoice Profile VAULTDEV-3747


	return v_return;
	
-- OSPRODUCT-10051
exception
     when others then
          return null;
-- end OSPRODUCT-10051
	
end fn_get_acct_invc_prfl;
----------------------------------------------------------------------------------------------------------------
-- returns true if all AgencyReconciliationRollup for given BillingAccountTransactionSet (Company Statement type) are in reconcile set
----------------------------------------------------------------------------------------------------------------
function fn_recon_reconciled_tf
(
     in_session_id              in                object.object_id%type,
     in_transaction_id          in                object.object_id%type,
     in_fitransactionset_id     in                object.object_id%type
)
return char
is
     v_counter                  number;

begin
     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id = in_fitransactionset_id
     and ru_object_state_id not in (
                                      pkg_db_constant.gStatus_Reconciled,
                                      pkg_db_constant.gBatchStatus_Created,
                                      pkg_db_constant.gObjectState_Excluded,
                                      pkg_db_constant.gStatus_RPD,
                                      pkg_db_constant.gStatus_RCD,
                                      pkg_db_constant.gStatus_RPCD,
                                      pkg_db_constant.gObjectState_Processed,
                                      pkg_db_reconciliation.gObjState_ReconExcludedWithAge,
                                      pkg_db_cashpost.gReconRollup_Matched  -- OSPRODUCT-15355. Refer to pkg_db_cashpost.sp_add_placeholder_trx
                                   );
     if v_counter=0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_recon_reconciled_tf;

function fn_recon_processed_tf
(
     in_session_id              in                object.object_id%type,
     in_transaction_id          in                object.object_id%type,
     in_fitransactionset_id     in                object.object_id%type
)
return char
is
     v_counter                  number;

begin
     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id = in_fitransactionset_id
     and ru_object_state_id not in (
                                      pkg_db_constant.gObjectState_Excluded ,
                                      pkg_db_constant.gObjectState_Processed , 
                                      pkg_db_constant.gBatchStatus_Created ,
                                      pkg_db_cashpost.gReconRollup_Matched  -- OSPRODUCT-15355. Refer to pkg_db_cashpost.sp_add_placeholder_trx
                                   );
     if v_counter=0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_recon_processed_tf;



function fn_show_mark_complete_tf
(
     in_session_id              in                object.object_id%type,
     in_transaction_id          in                object.object_id%type,
     in_fitransactionset_id     in                object.object_id%type

)
return char
is
     v_counter                  number;

begin

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id = in_fitransactionset_id
     and ru_object_state_id not in ( pkg_db_constant.gStatus_New , pkg_db_constant.gBatchStatus_Created );

     if v_counter>0 then
        return 'T' ;
     else
        return 'F';
     end if;


end fn_show_mark_complete_tf;

function fn_recon_unbooked_tf
(
     in_session_id              in                object.object_id%type,
     in_transaction_id          in                object.object_id%type,
     in_fitransactionset_id     in                object.object_id%type

)
return char
is
     v_counter                  number;

begin

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id = in_fitransactionset_id
     and ru_object_state_id in ( pkg_db_constant.gObjectState_Unbooked );

     if v_counter>0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_recon_unbooked_tf;

function fn_recon_descripencies_tf
(
     in_session_id              in                object.object_id%type,
     in_transaction_id          in                object.object_id%type,
     in_fitransactionset_id     in                object.object_id%type

)
return char
is
     v_counter                  number;

begin

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id = in_fitransactionset_id
     and ru_object_state_id in ( pkg_db_constant.gStatus_commdiff ,pkg_db_constant. gStatus_Premiumandcommdiff , pkg_db_constant.gObjectState_Unbooked , pkg_db_constant.gStatus_Premiumdiff , pkg_db_constant.gStatus_RCD , pkg_db_constant.gStatus_RPCD , pkg_db_constant.gStatus_RPD );

     if v_counter>0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_recon_descripencies_tf;

function fn_get_recon_save_outcome
(
     in_session_id                 in                object.object_id%type,
     in_transaction_id             in                object.object_id%type,
     in_billingaccounttrxset_id    in                object.object_id%type


) return number
as
     v_return                      number;
     v_counter                     number;

BEGIN

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id=in_billingaccounttrxset_id
     and ru_object_state_id in ( pkg_db_constant.gStatus_MarkedExclude , pkg_db_constant.gStatus_MarkedExcludeWithAging , pkg_db_constant.gStatus_MarkedChangeExclude );

     if v_counter > 0 then
        v_return :=69946;
     else
        v_return :=22;
     end if;

     return v_return;

end fn_get_recon_save_outcome;

----------------------------------------------------------------------------------------------------------

function fn_get_total_unassociated_cash
(
     in_session_id          in           object.object_id%type,
     in_transaction_id      in           object.object_id%type,
     in_billingaccount_id   in           object.object_id%type

) return number
as
     v_total                number;

BEGIN

     select sum(balance)
     into v_total
     from dragon_fitem
     where billing_account_id=in_billingaccount_id
     and cash_associated_with is null
     and fitem_category_id=646;

     return v_total;

end fn_get_total_unassociated_cash;
----------------------------------------------------------------------------------------------------------

function fn_get_total_applied_amount
(
     in_session_id                 in           object.object_id%type,
     in_transaction_id             in           object.object_id%type,
     in_billingaccounttrxset_id    in           object.object_id%type

) return number
as
     v_total                number;

BEGIN

     select sum(amount)
     into v_total
     from dragon_fitransaction
     where batch_ref_no=in_billingaccounttrxset_id --OSBILLING-7335
     and status_enum = gFITrxStatus_Processed  --OSBILLING-4934
     and fitransaction_type_id in (
                                   101 , -- Cash Apply
                                   401 , -- Cash/Credit Transfer
                                   1601  -- Credit Apply            -- OSPRODUCT-15550
                                  );
                                       
     return nvl(v_total,0);

end fn_get_total_applied_amount;
----------------------------------------------------------------------------------------------------------

function fn_get_total_reconciled_amount
(
     in_session_id               in      object.object_id%type,
     in_transaction_id           in      object.object_id%type,
     in_billingaccounttrxset_id  in      object.object_id%type

) return number
as
     v_total                     number;

BEGIN

     select sum(ru_net_due+ru_difference_amount)
     into v_total
     from dragon_rollup
     where ru_object_state_id in ( pkg_db_constant.gStatus_Reconciled , pkg_db_constant.gStatus_RPCD , pkg_db_constant.gStatus_RPD , pkg_db_constant.gStatus_RCD )
     and RU_NET_DUE >0
     and ru_parent_id=in_billingaccounttrxset_id;

     return v_total;

end fn_get_total_reconciled_amount;
--OSPRODUCT-7929 start
function fn_get_total_reconciled_amount_ui
(
     in_session_id               in      object.object_id%type,
     in_transaction_id           in      object.object_id%type,
     in_billingaccounttrxset_id  in      object.object_id%type

) return number
as
     v_total                     number;

BEGIN

     select sum(ru_net_due+ru_difference_amount)
     into v_total
     from dragon_rollup
     where ru_object_state_id in ( pkg_db_constant.gStatus_Reconciled , pkg_db_constant.gStatus_RPCD , pkg_db_constant.gStatus_RPD , pkg_db_constant.gStatus_RCD )
     and ru_parent_id=in_billingaccounttrxset_id;

     return v_total;

end fn_get_total_reconciled_amount_ui;
--OSPRODUCT-7929 end
function fn_check_item_exists_tf
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_billingaccount_id     in           object.object_id%type

) return char
as
     v_count                  number:=0;

BEGIN

     select count(*)
     into v_count
     from dragon_fitransaction
      --OSBILLING-7437 START added more check payment types--ONLY for UTICA FIRST
      --UTPRODUCT-1505  Included EFT payment payment method as gFITrxPay_Eft_type
     where payment_method_id  in (101 ,52740 ,52640 ,gFITrxPay_Check_Insured,gFITrxPay_Check_Agent,gFITrxPay_Check_Mortgagee,gFITrxPay_Check_Other,gFITrxPay_Premium_Finance,gFITrxPay_Utica_First,gFITrxPay_Manual_Lockbox, gFITrxPay_Eft_type)
     --OSBILLING-7437 END
     and billing_account_id=in_billingaccount_id;

     if v_count>0 then
        return 'T';
     else
        return 'F';
     end if;

end fn_check_item_exists_tf;

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_verify_comm_totals
--
--   %usage
--        Total the amount of each commission schedule for flat commission
--        and compare against total flat commission amount
--   %param
--    in_session_id         in_session_id
--    in_transaction_id     in_transaction_id
--    in_policy_image_id    in_policy_image_id

--  2017-09-09 Durgesh OSBILLING-3443 - Created for Flat commission amount verifivation

----------------------------------------------------------------------------------------------------------------
function fn_verify_comm_totals
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_image_id            in             object.object_id%type
)
return char
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_verify_comm_totals';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                char;
     v_pay_plan_id                 object.object_id%type;
     v_scheduled_payment_list      pkg_os_object.t_object_list;
     v_scheduled_payment_index     number;


     v_schedule_comm_amount        number;
     v_tot_comm_amt                number;
     v_comm_amount                 number;
     v_comm_type                   object_bv_value.business_variable_value%type;
     v_comm_earned_amt             number;
     v_policytrx_id                object.object_id%type;
     v_policy_id                   object.object_id%type;
     v_scheduled_element_list      object_tt;
     v_scheduled_element_index     number;
     v_element_valid_tf            object_bv_value.business_variable_value%type;
     v_asset_id                    object.object_id%type;
     v_asset_object_label          object_bv_value.business_variable_value%type;
     v_element_amount              number;
     v_scheduled_inst_id           object.object_id%type;
begin

     v_pay_plan_id            :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id,
                                        gbv_PolicyRefChosenPlan
                                   );

     v_comm_type              :=   pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, in_policy_image_id, gbv_PTP_Comm_Type );


     if v_comm_type = gCommissionType_Flat
     then

          v_comm_amount            :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_image_id,
                                             gbv_PTP_Comm_Amount
                                        );

     else

          v_comm_amount            :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_image_id,
                                             31905346
                                        );

     end if;

     v_policytrx_id                :=   pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_image_id
                                        );

     v_policy_id                   :=   pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policytrx_id
                                        );

     select
          nvl(sum(decode(f.prev_disbursement_batch,null,f.earned_amount,f.initial_amount)),0)  --OSPRODUCT-8452
          --nvl(sum(f.earned_amount),0)
     into
          v_comm_earned_amt
     from
          dragon_fitem f
     where
          policy_id = v_policy_id
     and
          fitem_type_id = gFItemType_Credit
     and
          fitem_category_id in
                         (
                              gFItem_Category_Comm
                         );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............ PayPlan ID : '||v_pay_plan_id
               ||' v_policy_id: '||v_policy_id
               || ' in_policy_image_id: ' || in_policy_image_id
               || ' v_comm_amount : '||v_comm_amount
               || ' v_comm_earned_amt : '||v_comm_earned_amt
          );
     end if;

     --
     -- Search for related Scheduled
     --
     v_scheduled_payment_list.delete;

     v_scheduled_element_list      := new object_tt();

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_pay_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list
     );

     if v_scheduled_payment_list.count > 0
     then

          v_scheduled_payment_index := v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null
          loop

               v_scheduled_inst_id      :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_scheduled_payment_list(v_scheduled_payment_index),
                                                  29705446
                                             );

               -- get the Scheduled Element of type commission under scheduled payment
               pkg_os_object_search.sp_object_with_attribute_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_scheduled_payment_list(v_scheduled_payment_index),
                    gObjType_ScheduledElement,
                    29712846,
                    946,
                    v_scheduled_element_list
               );

               v_scheduled_element_index     :=   v_scheduled_element_list.first;

               --loop through element objects
               while v_scheduled_element_index is not null
               loop

                    v_element_valid_tf       :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_element_list(v_scheduled_element_index).object_id,
                                                       34002346
                                                  );

                    v_asset_id               :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_element_list(v_scheduled_element_index).object_id,
                                                       29717346
                                                  );

                    v_asset_object_label     :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_asset_id,
                                                       211882
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ element valid tf : '||v_element_valid_tf
                              || ' v_asset_id: ' || v_asset_id
                              || ' v_asset_object_label : '||v_asset_object_label
                         );

                    end if;

                    if nvl(v_element_valid_tf,1) = 1
                    then

                         begin
                              select
                                   sum(case when df.earning_status = pkg_os_lookup.fn_lookup_list_text_get(FItemPayableEarningStatus, gEarning_Type_Earned)
                                        then 0
                                        else
                                        nvl((balance)*-1,0)
                                   end)
                              into
                                   v_element_amount
                              from
                                   dragon_fitem df
                              where
                                   df.policy_id = v_policy_id
                              and
                                   df.installment_id = v_scheduled_inst_id
                              and
                                   df.fitem_type_id = gFItemType_Credit
                              and
                                   df.fitem_category_id in
                                                  (
                                                       gFItem_Category_Comm
                                                  )
                              --and
                                   --df.earning_status <> pkg_os_lookup.fn_lookup_list_text_get(FItemPayableEarningStatus, gEarning_Type_Earned)
                              and
                                   df.fitem_asset_id = v_asset_id;               --OSBILLING-5187
--                            and                                                --OSBILLING-5187
--                                 df.fitem_asset_name = v_asset_object_label;   --OSBILLING-5187

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............ element amount : '||v_element_amount
                                   ||' v_scheduled_inst_id: '||v_scheduled_inst_id
                              );

                          end if;

                          if v_element_amount is null
                          then

                              v_element_amount    :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_element_list(v_scheduled_element_index).object_id,
                                                       29713846
                                                       );

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ NULL Condition element amount : '||v_element_amount
                                        ||' v_scheduled_inst_id: '||v_scheduled_inst_id
                                   );

                               end if;

                         end if;

                         exception when no_data_found
                         then

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............ NO_DATA_FOUND element amount : '||v_element_amount
                                   ||' v_scheduled_inst_id: '||v_scheduled_inst_id
                              );

                          end if;
                              v_element_amount    :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_scheduled_element_list(v_scheduled_element_index).object_id,
                                                            29713846
                                                       );
                         end;

                    end if;

                    v_tot_comm_amt                :=   nvl(v_tot_comm_amt,0) + nvl(v_element_amount,0);

                    v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

               end loop;

               /*--   get the schedule commission amount
               v_schedule_comm_amount        :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       34002146
                                                  );

               v_tot_comm_amt                :=   nvl(v_tot_comm_amt,0) + nvl(v_schedule_comm_amount,0);*/
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... v_scheduled_id: '||v_scheduled_payment_list(v_scheduled_payment_index)
                         || 'v_schedule_comm_amount ' || v_schedule_comm_amount
                         || 'v_tot_comm_amt ' || v_tot_comm_amt
                    );

               end if;

               v_scheduled_payment_index := v_scheduled_payment_list.next( v_scheduled_payment_index );

          end loop; -- end of while loop for v_scheduled_element_index

     else

          v_return_value := 'F';
          return v_return_value;

     end if; -- end of v_scheduled_element_list > 0

     --  check to see if totals are matching
     if nvl(v_tot_comm_amt,0) = (nvl(v_comm_amount,0) + nvl(v_comm_earned_amt,0))
     then

          v_return_value := 'T';

     else

          v_return_value := 'F';

     end if;

     return v_return_value;

end fn_verify_comm_totals;


----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        fn_validate_modified_payplan
--
--   %usage
--        Validated that billing due datesof installments are not past policy expiration date
--   %param
--    in_session_id         in_session_id
--    in_transaction_id     in_transaction_id
--    in_policy_image_id    in_policy_image_id

----------------------------------------------------------------------------------------------------------------
function fn_validate_modified_payplan
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_image_id            in             object.object_id%type
)
return char
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_validate_modified_payplan';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                char;
     v_pay_plan_id                 object.object_id%type;
     v_scheduled_payment_list      pkg_os_object.t_object_list;
     v_scheduled_payment_index     number;
     v_policy_expiration_date         object_bv_value.business_variable_value%type;
     v_schedule_actual_due_date    object_bv_value.business_variable_value%type;

begin

     v_pay_plan_id            :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id,
                                        pkg_db_constant.gbv_PolicyRefmodifiedPlan
                                   );

      v_policy_expiration_date  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id,
                                        PKG_OS_CONSTANT_BV.gbv_PolicyExpiratinoDate
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............ PayPlan ID : '||v_pay_plan_id
               || ' in_policy_image_id: ' || in_policy_image_id
               || 'v_policy_expiration_date: '|| v_policy_expiration_date

          );

     end if;

     --
     -- Search for related Scheduled
     --
     v_scheduled_payment_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_pay_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list
     );

     if v_scheduled_payment_list.count > 0
     then

          v_scheduled_payment_index := v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null
          loop

               --   get the billing due date
               v_schedule_actual_due_date        :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gbv_actual_due_date
                                                  );


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... v_scheduled_id: '||v_scheduled_payment_list(v_scheduled_payment_index)
                         || 'v_schedule_actual_due_date ' || v_schedule_actual_due_date
                       ||'v_policy_expiration_date :'||v_policy_expiration_date
                    );

               end if;

               if  trunc(to_date(v_schedule_actual_due_date, pkg_os_constant.DragonDateFormatDefault)) > trunc(to_date(v_policy_expiration_date,pkg_os_constant.DragonDateFormatDefault))
                   then
                        v_return_value := 'F';
                        return  v_return_value;

               end if ;

               v_scheduled_payment_index := v_scheduled_payment_list.next (v_scheduled_payment_index);

         end loop;

     end if; -- end of v_scheduled_element_list > 0

     v_return_value := 'T';

     return v_return_value;


end fn_validate_modified_payplan;

function fn_get_rollup_aging
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_reconrollup_id             in             object.object_id%type
)
return number
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_rollup_aging';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return_value                number;
     v_fitem_type                 object.object_id%type;
     v_rollup_member_list          pkg_os_object.t_object_list;
     v_rollup_member_index         number;
     v_posted_date                 object_bv_value.business_variable_value%type;
     v_rollup_dueby_date           object_bv_value.business_variable_value%type;

begin



     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............ in_reconrollup_id : '||in_reconrollup_id

          );

     end if;

     --
     -- Search for child rollup members
     --
     v_rollup_member_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_reconrollup_id,
          gObjType_RollupMember,
          v_rollup_member_list
     );

     if v_rollup_member_list.count > 0
     then

          v_rollup_member_index := v_rollup_member_list.first;

          while v_rollup_member_index is not null
          loop

               --   get if fitem is of type credit or debit
               v_fitem_type       :=   pkg_os_object_io.fn_object_bv_path_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_rollup_member_list(v_rollup_member_index),
                                                       '29760346.29710046'
                                                  );


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... member id : '|| v_rollup_member_list(v_rollup_member_index)
                         || 'v_fitem_type ' || v_fitem_type
                    );

               end if;

               if  NVL(v_fitem_type, 0) = gFItemType_Debit
                   then
                         v_return_value       :=   pkg_os_object_io.fn_object_bv_path_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_rollup_member_list(v_rollup_member_index),
                                                       '29760346.30750546'
                                                  );
                         if   v_return_value is not null
                         then

                              return  v_return_value;
                         end if;

               end if ;

               v_rollup_member_index := v_rollup_member_list.next (v_rollup_member_index);

         end loop;

     end if; -- end of v_scheduled_element_list > 0

     -- If there is no aging status on any of rollupmembers then, calculate aging based on dates

      v_rollup_dueby_date := pkg_os_object_io.fn_object_bv_path_get
          (
               in_session_id,
               in_transaction_id,
               in_reconrollup_id,
               '29760146.29760346.32719946.33857746'
          );

     v_posted_date := pkg_os_object_io.fn_object_bv_path_get
          (
               in_session_id,
               in_transaction_id,
               in_reconrollup_id,
               '29887546.29707646'
          );

     if trunc(to_date(v_posted_date,'YYYYMMDDHH24MISS') ) <=  trunc( to_date(v_rollup_dueby_date,'YYYYMMDDHH24MISS'))
     then
          v_return_value := 2;    -- current due

     else
          v_return_value := 3; -- past due
     end if;

     return v_return_value;


end fn_get_rollup_aging;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_billaccount_id
--
--   %USAGE
--        This function returns the billing account id as per the object value
--
--   %ALGORITHM
--        Get the billing account id based on the object value
--
--
--   %PARAM     in_object_value        Object bv value
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_billaccount_id
(
    in_object_value          in    object_bv_value.business_variable_value%type
)
return number
is

     v_return_value     number := null;

begin

          select
               billingaccount_id
          into
               v_return_value
          from
               dragon_billingaccount b
          where
               b.account_number = in_object_value --or b.billingaccount_id = in_object_value --OSBILLING-7631
          and
               rownum = 1;

     return v_return_value;

exception

     when no_data_found then
          return null;

end fn_get_billaccount_id;

---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_fitems_total
--
--   %USAGE
--        This function returns total premium, subsidy etc. for each policy or billing account
--
--   %ALGORITHM
--       1. Capture total available balance of a policy or billing account based on in_object_type
--
--   %PARAM     in_object_id              object ID
--   %PARAM     in_fitem_category         category ID
--   %PARAM     in_object_type            numeric
--
----------------------------------------------------------------------------------------------------------------------------------

function fn_get_fitems_total
(
     in_object_id        in        object.object_id%type,
     in_fitem_category   in        object_bv_value.business_variable_value%type,
     in_object_type      in        numeric
)
return number
as
     v_total        number    :=   0;
begin

  if in_object_type = PKG_OS_CONSTANT.gobjType_Policy then

     select
          abs(sum(balance))
     into
          v_total
     from
          dragon_fitem f
     where
          f.fitem_type_id = gFItemType_Debit
     and
          f.fitem_category_id = in_fitem_category
     and 
          f.value_stream is null -- [KR] 
     and
          f.policy_id         =  in_object_id;

    elsif in_object_type = gObjType_BillingAccount then

     select
          abs(sum(balance))
     into
          v_total
     from
          dragon_fitem f
     where
          f.fitem_type_id = gFItemType_Debit
     and
          f.fitem_category_id = in_fitem_category
     and 
          f.value_stream is null -- [KR] OSPRODUCT-2071
     and
          f.billing_account_id         =  in_object_id;
    end if;

return v_total;

end fn_get_fitems_total;

function fn_check_if_large_stmt_tf
(
     in_object_id                  in             object.object_id%type
)
return char
as
     v_rollup_total        number    :=   0;
begin

     select
          count(*)
     into
          v_rollup_total
     from
          dragon_rollup dr
     where
          dr.ru_parent_id = in_object_id;


  if v_rollup_total>100
          then
               return 'T';
          else
               return 'F';

     end if;

return v_rollup_total;

end fn_check_if_large_stmt_tf;

function fn_create_large_stmt_tf
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type
)
return char
as
     v_procedure_name         constant  system_log.program_name%type := pkg_name||'fn_create_large_stmt_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_rollup_total        number    :=   0;
     v_partner_billing_acct_id     object.object_id%type;
     v_stmt_as_of_date             date;
     v_stmt_from_date              date;
     v_batch_type_id               object_bv_value.business_variable_value%type;
     v_ba_profile_type                  number;
      v_include_past_dues                object_bv_value.business_variable_value%type;

begin

     v_batch_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, pkg_db_reconciliation.gbv_FITrxSetBatchType);

     v_partner_billing_acct_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_object_id);


     if v_session_control.gLogging_Full
      then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '|||||| v_batch_type_id '||v_batch_type_id
              ||' For Billing Account '||v_partner_billing_acct_id
          );

      end if;
     if v_batch_type_id = 1201
          then
                v_stmt_as_of_date := to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, pkg_db_constant.gbv_FiTransactionSet_enddate), pkg_os_constant.DragonDateFormatDefault);

                v_stmt_from_date := to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_object_id, pkg_db_constant.gbv_fitransactionset_startdate), pkg_os_constant.DragonDateFormatDefault);

               if v_session_control.gLogging_Full
                     then

                         pkg_os_logging.sp_log
                         (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             'In v_stmt_as_of_date' || v_stmt_as_of_date
                             || 'v_stmt_from_date' || v_stmt_from_date
                         );

                     end if;
                select count(*)

                into v_rollup_total

               from
                    dragon_fitem a,dragon_policy b
               where
                    a.policy_id = b.policy_id
               and

                    b.policy_object_state_id in (  gObjState_PolicyActive,gObjState_PolicyCanceled) -- Object State of Policy is Active
               and
                      a.billing_account_id = v_partner_billing_acct_id
               and
                    (
                         v_stmt_as_of_date is null -- HD - GCNA-525_HD : added null check to include all items
                          or
                         trunc(a.actual_due_date) <=  trunc(v_stmt_as_of_date)
                    )
               -- Added to create Roll-up objects only for policies which has some amount to be paid
               and
                    (
                         (
                               fitem_type_id  =    gFItemType_Debit
                               and
                              a.balance <> 0
                         )
                         or
                         (
                              fitem_type_id  =    gFItemType_Credit
                                  and

                              a.fitem_category_id =  gFItem_Cat_Commission
                              and
                              a.balance <> 0
                         )
                    )
               and

                    b.billing_method_id = gPolicy_AgencyBilled
               and
                    a.actual_due_date is not null
               and
                   --a.related_recon_batch_id is null
                   --2016-01-04 changed to use current_recon_batch_id
                   a.current_recon_batch_id is null
               and  pkg_os_object.fn_object_state_get(in_session_id , in_transaction_id,a.policy_term_id) <>  pkg_db_reconciliation.gObjState_PolicyTermSuspend

                ;

         else


            v_stmt_from_date := to_date(pkg_db_stmt_partner.fn_partner_stmt_get_start_date(in_session_id, in_transaction_id, v_partner_billing_acct_id, in_object_id), pkg_os_constant.DragonDateFormatDefault);


                v_stmt_as_of_date := to_date(pkg_db_stmt_partner.fn_partner_stmt_get_end_date(in_session_id, in_transaction_id, v_partner_billing_acct_id, in_object_id,to_char(v_stmt_from_date,pkg_os_constant.DragonDateFormatDefault)), pkg_os_constant.DragonDateFormatDefault);

                v_ba_profile_type           :=     pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_object_id,
                                             pkg_db_stmt.gbv_StmtProfileType
                                        );

          v_include_past_dues           :=   nvl(pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_object_id,
                                                  pkg_db_stmt.gbv_StmtIncludePastDues),
                                                  'F'
                                             );
       if v_session_control.gLogging_Full
      then
          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              'In 801 v_stmt_as_of_date' || v_stmt_as_of_date
              || 'v_stmt_from_date' || v_stmt_from_date
              || 'v_ba_profile_type'||v_ba_profile_type
              || 'v_include_past_dues:'||v_include_past_dues
          );

      end if;

          select
            count(f.fitem_id)

            into v_rollup_total

          from
               dragon_fitem f

          where

               f.billing_account_id = v_partner_billing_acct_id

          and
               f.balance <> 0

          and
               (

                    (

                         v_ba_profile_type = pkg_db_stmt.g_StmtProfileType_Invoice
                         and

                         (
                              (
                                   v_include_past_dues <> 'F'
                                   and
                                   (
                                        (
                                             f.current_recon_batch_id is null
                                             and
                                             trunc(actual_due_date) <= trunc(v_stmt_from_date)
                                        )
                                        or
                                        (
                                             f.current_recon_batch_id is not null
                                             and
                                             trunc(actual_due_date) < trunc(v_stmt_from_date)
                                        )


                                   )
                              )
                              or
                              (
                                   v_include_past_dues = 'F'
                                   and
                                   f.current_recon_batch_id is null
                                   and
                                   trunc(actual_due_date) <= trunc(v_stmt_as_of_date)
                              )
                        )



                    )

                    or

                    (
                         v_ba_profile_type = pkg_db_stmt.g_StmtProfileType_Info


                         and
                         (
                              (
                                   v_include_past_dues <> 'F'

                                   and
                                   (
                                        (
                                             trunc(actual_due_date) >= trunc(v_stmt_from_date)
                                             and
                                             trunc(actual_due_date) <= trunc(v_stmt_as_of_date)

                                        )
                                        or
                                        trunc(actual_due_date) < trunc(v_stmt_from_date)
                                   )
                              )
                              or
                              (
                                   v_include_past_dues = 'F'

                                   and
                                   trunc(actual_due_date) >= trunc(v_stmt_from_date)
                                   and
                                   trunc(actual_due_date) <= trunc(v_stmt_as_of_date)
                              )
                         )
                    )
               )
            and
              (select billing_method_id from dragon_policy p where p.policy_id=f.policy_id) = pkg_db_stmt.gPolicy_AgencyBilled
              ;

       end if;

        if v_session_control.gLogging_Full
      then
      pkg_os_logging.sp_log(in_session_id, in_transaction_id, 'fn_create_large_stmt_tf',
               '||||||v_rollup_total: '||v_rollup_total );

       end if;

   if v_rollup_total>100
          then
               return 'T';
          else
               return 'F';

     end if;

return v_rollup_total;

end fn_create_large_stmt_tf;

---------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_category_total_amt
--
--   %USAGE
--        This function returns total premium, subsidy etc. for each policy or billing account
--
--   %ALGORITHM
--       1. Capture total available balance of a policy or billing account based on in_object_type
--
--   %PARAM     in_object_id              object ID
--   %PARAM     in_fitem_category         category ID
--   %PARAM     in_object_type            numeric
--
----------------------------------------------------------------------------------------------------------------------------------

function fn_get_category_total_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id        in        object.object_id%type,
     in_fitem_category   in        object_bv_value.business_variable_value%type
)
return number
as
     v_total        number    :=   0;
     v_object_type_id object_type.object_type_id%type;
begin
  v_object_type_id := PKG_OS_OBJECT.fn_object_type_get(
    in_session_id,
    in_transaction_id,
    in_object_id);

  if v_object_type_id = PKG_OS_CONSTANT.gobjType_Policy then

     select
          abs(sum(balance))
     into
          v_total
     from
          dragon_fitem f
     where
          f.fitem_type_id = gFItemType_Debit
     and
          f.fitem_category_id = in_fitem_category
     and 
          f.value_stream is null -- [KR] OSPRODUCT-2071
     and
          f.policy_id         =  in_object_id;

    elsif v_object_type_id = gObjType_BillingAccount then

     select
          abs(sum(balance))
     into
          v_total
     from
          dragon_fitem f
     where
          f.fitem_type_id = gFItemType_Debit
     and
          f.fitem_category_id = in_fitem_category
     and 
          f.value_stream is null -- [KR] OSPRODUCT-2071
     and
          f.billing_account_id         =  in_object_id;

    elsif v_object_type_id = gObjType_BillingAccountTrxSet then

     select
          abs(sum(f.balance))
     into
          v_total
     from dragon_fitem f where fitem_id in (

          select
            c.FItem_ID
          from
            DRAGON_FICHANGE c
          where
            c.entity_id = in_object_id -- BillingAccountTransactoinSet
          );

    end if;

return v_total;

end fn_get_category_total_amt;

function fn_get_related_invoice
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type
)

return  object.object_id%type
as
     v_procedure_name         constant  system_log.program_name%type := pkg_name||'fn_create_large_stmt_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_related_invoice                   object.object_id%type;

begin


     select max(ru_statement_id)
     into v_related_invoice
     from dragon_rollup
     where ru_id in
          (
          select rum_parent_id
          from dragon_rollup_member
          where rum_ref_fitem in
               (
               select rum_ref_fitem
               from dragon_rollup dr, dragon_rollup_member drm
               where dr.ru_id=drm.rum_parent_id
               and dr.ru_parent_id=in_object_id
               )
          )
     and ru_trx_set_type_id=9801;

     return v_related_invoice;

     exception
          when no_data_found then
                return null;


end fn_get_related_invoice;

function fn_check_valid_disburproof
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_object_id                  in             object.object_id%type
)
return  char
as
     v_procedure_name         constant  system_log.program_name%type := pkg_name||'fn_create_large_stmt_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_related_invoice                   object.object_id%type;
     v_object_state                      number;
     v_associated_policy_term            object.object_id%type;
     v_current_batch                     object.object_id%type;
     v_current_batch_child               number;
     v_ref_usage_of                      object.object_id%type;
     v_associated_policy                 object.object_id%type;
     v_ref_usage_of_policy               object.object_id%type;
     v_pref_profile                      object.object_id%type;


begin

v_object_state := pkg_os_object_io.fn_object_bv_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       in_object_id,
                                       210153
                                   );
v_current_batch:= pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       in_object_id,
                                       '30013146.31904446'
                                    );
v_associated_policy_term := pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_current_batch,
                                       '29703546.31689946.32080346'
                                   );

select count(*) into v_current_batch_child from dragon_fitransaction where batch_ref_no=v_current_batch;

v_ref_usage_of :=pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       in_object_id,
                                       '32251646.211343'
                                   );

v_associated_policy := pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_associated_policy_term,
                                       '29728501'
                                   );

v_ref_usage_of_policy :=pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_ref_usage_of,
                                       '29728501'
                                   );

v_pref_profile :=pkg_os_object_io.fn_object_bv_path_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       in_object_id,
                                       '30013446.32377046'
                                   );


if v_object_state = 75 AND (( ( v_associated_policy_term IS NULL ) OR (v_current_batch_child <> 1) )OR (v_associated_policy_term IS NOT NULL AND v_ref_usage_of IS NOT NULL AND v_associated_policy = v_ref_usage_of_policy AND v_current_batch_child = 1 ) ) AND v_pref_profile = 1
     then
          return 'T';
          else
               return 'F';
               end if;

end fn_check_valid_disburproof;
----------------------------------------------------------------------------------------------------------------
function fn_get_comm_earning_status
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policy_id                  in        object.object_id%type,
     in_installment_id             in        object.object_id%type

) return char
as
     v_count                       number;
     v_return_value                char(1)   :=   'F';
BEGIN

     select
          count(1)
     into
          v_count
     from
          dragon_fitem
     where
          policy_id = in_policy_id
     and
          installment_id = in_installment_id
     and
          fitem_type_id = gFItemType_Credit
     and
          fitem_category_id = gFItem_Category_Comm
     and
          earning_status = pkg_os_lookup.fn_lookup_list_text_get(FItemPayableEarningStatus, gEarning_Type_Earned);

     if v_count = 0
     then

          v_return_value := 'F';

     else

          v_return_value := 'T';

     end if;

     return v_return_value;

end fn_get_comm_earning_status;
----------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
function fn_check_payplan_stub_flag
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_ptp_id                in           object.object_id%type,
     in_payer_entity_id       in           object.object_id%type default null
) return char
is
     v_procedure_name         constant system_log.program_name%type   :=   pkg_name||'fn_check_payplan_stub_flag';
     v_session_control        pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_return                 char(1) := 'F';

     v_ptp_payer_list         pkg_db_multipayer.t_payer_tab;
     v_idx                    long;
     v_current_payer          pkg_db_multipayer.r_payer;

     v_decode_yes             constant number := 100;
     v_decode_no              constant number :=  10;
     v_decode_select          constant number :=   1;

     v_spread_premium_ptp     object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get
                                                                              (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    in_ptp_id,
                                                                                    pkg_db_constant.gbv_PTP_Spread_Premium
                                                                              );

     v_create_stub_ptp        object_bv_value.business_variable_value%type  := pkg_os_object_io.fn_object_bv_get
                                                                              (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    in_ptp_id,
                                                                                    pkg_db_constant.gbv_PTP_Create_Stub
                                                                              );

     v_spread_premium         object_bv_value.business_variable_value%type;
     v_create_stub            object_bv_value.business_variable_value%type;
     v_is_valid               char(1); --UTXPRODUCT-530

     -- common routings ----------------------------------------------------------------------------------------------
     --
     function fn_decode
     (
          in_bv_value         object_bv_value.business_variable_value%type
     )
     return number
     is
     begin

          return  case in_bv_value
                       when pkg_os_constant.gBoolean_Yes then v_decode_yes
                       when pkg_os_constant.gBoolean_No  then v_decode_no
                       else                                   v_decode_select
                  end;
     end fn_decode;
     --
     function fn_to_char
     (
          in_bv_value         object_bv_value.business_variable_value%type
     )
     return varchar2
     is
     begin

          return  case in_bv_value
                       when pkg_os_constant.gBoolean_Yes then 'Yes('||in_bv_value||')'
                       when pkg_os_constant.gBoolean_No  then 'No('||in_bv_value||')'
                       else                                   '-Select-('||in_bv_value||')'
                  end;
     end fn_to_char;
     --
     function fn_is_valid
     (
          in_spread_premium         object_bv_value.business_variable_value%type,
          in_create_stub            object_bv_value.business_variable_value%type
     )
     return boolean
     is
     begin
          return case when fn_decode(in_spread_premium) + fn_decode(in_create_stub) > v_decode_yes  -- at least one of the values is Yes
                      then TRUE
                      else FALSE
                 end;
     end fn_is_valid;
     --
     -- ----------------------------------------------------------------------------------------------
begin
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Checking "Spread Premium" and "Create Stub" flags for policy image ID:' || in_ptp_id
          );
     end if;

     -- Check if PTP totally overwrites these flags...
     --
     if mod(fn_decode(v_spread_premium_ptp) + fn_decode(v_create_stub_ptp), 10) = 0 -- non of them has --Select-- value
        or
        not pkg_db_multipayer.fn_multipayer_mode_tf  -- validate on PTP level if this is not a Multipayer Policy
        (
             in_session_id,
             in_transaction_id,
             in_ptp_id
        )
     then
          -- PTP totally overwrites Payment Plan setting, validate flags on PTP level
          --
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... PTP totally overwrites Payment Plan setting, validating flags on PTP level.' ||
                    '"Spread Premium"='|| fn_to_char(v_spread_premium_ptp) ||
                    ', "Create Stub"=' || fn_to_char(v_create_stub_ptp)
               );
          end if;

          if fn_is_valid
             (
                  v_spread_premium_ptp,
                  v_create_stub_ptp
             )
          then
               v_return := 'T';
          else
               v_return := 'F';

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......ERROR: validation failed.'||
                    '"Spread Premium"='|| fn_to_char(v_spread_premium_ptp) ||
                    ', "Create Stub"=' || fn_to_char(v_create_stub_ptp) ||
                    '. At least on of the value should be Yes. Please change the configuration.'
               );


          end if;

          return v_return;
     end if;

     --  PTP does not overwrite Payment Plan settings, validating flags on Payment Plan level
     --

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... PTP does not overwrite Payment Plan settings, validating flags on Payment Plan level.' ||
               '"PTP Spread Premium"='|| fn_to_char(v_spread_premium_ptp) ||
               ', "PTP Create Stub"=' || fn_to_char(v_create_stub_ptp)
          );
     end if;

     --
     --  get list of payers from Policy Image level
     --
     PKG_DB_MULTIPAYER.sp_ptp_payers_cache_get
     (
          in_session_id         => in_session_id,
          in_transaction_id     => in_transaction_id,
          io_cached_payer_lists => g_policy_payer_tab,
          in_ptp_object_id      => in_ptp_id,
          io_payer_list         => v_ptp_payer_list,
          in_print_list         => 'N',
          in_index_by           => pkg_db_multipayer.g_PayerGet_idx_CustmrPartnr  -- indexed by payer entity ID. This is important as far as we pass entity payer ID to this routine to identify the payer in question
     );

     -- Check if only one payer should be processed, if so, shrink the list to have only current payer
     --
     if in_payer_entity_id is not null
     then
          -- shrink payer list and leave only one current payer
          --
          pkg_db_multipayer.sp_payer_list_shrink
          (
               in_session_id,
               in_transaction_id,
               in_related_id      => in_payer_entity_id,
               io_payer_list      => v_ptp_payer_list
          );
     else
          null; -- process all payers.
     end if;

     v_idx := v_ptp_payer_list.first;
     while v_idx is not null
     loop
	 
		  -- UTXPRODUCT-530 Start 
          v_is_valid  := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ptp_payer_list(v_idx).PTPayer_object_id,
                              gbv_payer_is_valid_tf
                         );
            
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Payer ' || pkg_os_object.fn_object_name_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_ptp_payer_list(v_idx).PayerEntity_object_id
                                ) ||
                   ' is_valid_payer '|| v_is_valid             
               );
          end if;
          -- UTXPRODUCT-530 End. 
             
          if v_is_valid = 1 then -- UTXPRODUCT-530
		  
			  v_spread_premium := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_ptp_payer_list(v_idx).chosen_payment_plan,
                                              pkg_db_constant.gbv_PayPlan_Spread_Premium
                                        ) , v_spread_premium_ptp );


/*
                                  case when fn_decode(v_spread_premium_ptp) = v_decode_select -- PTP does not overwrite PayPlan value
                                   then pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_ptp_payer_list(v_idx).chosen_payment_plan,
                                              pkg_db_constant.gbv_PayPlan_Spread_Premium
                                        )
                                   else v_spread_premium_ptp                              -- PTP overwrits PayPlan value
                              end;*/

			  v_create_stub    := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_ptp_payer_list(v_idx).chosen_payment_plan,
                                              pkg_db_constant.gbv_PayPlan_Create_Stub
                                        ), v_create_stub_ptp);

        /*  case when fn_decode(v_create_stub_ptp) = v_decode_select -- PTP does not overwrite PayPlan value
                                   then pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_ptp_payer_list(v_idx).chosen_payment_plan,
                                              pkg_db_constant.gbv_PayPlan_Create_Stub
                                        )
                                   else v_create_stub_ptp                       -- PTP overwrits PayPlan value
                              end;*/

			  if not fn_is_valid
					 (
						  v_spread_premium,
						  v_create_stub
					 )
			  then
				   pkg_os_logging.sp_log_error
				   (
						in_session_id,
						in_transaction_id,
						v_procedure_name,
						'......ERROR: validation failed for Payer ' || pkg_os_object.fn_object_name_get
																	   (
																			in_session_id,
																			in_transaction_id,
																			v_ptp_payer_list(v_idx).PayerEntity_object_id
																	   ) ||
						'. Chosen Payment Plan: ' || pkg_os_object.fn_object_name_get
													 (
														  in_session_id,
														  in_transaction_id,
														  v_ptp_payer_list(v_idx).chosen_payment_plan
													 ) ||
						'. Decoded "Spread Premium"='|| fn_to_char(v_spread_premium) ||
						', decoded "Create Stub"='   || fn_to_char(v_create_stub) ||
						'. At least on of the value should be Yes. Please change the configuration.'
				   );

				   return 'F';
			  else
				   null;  -- check next payer
			  end if;
			 
		  end if; -- UTXPRODUCT-530

         v_idx := v_ptp_payer_list.next(v_idx);

     end loop; -- / loop payers

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Validation passed.'
          );
     end if;

     return 'T';

end fn_check_payplan_stub_flag;

--
-- VAULTDEV-6347 - AccountBill
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

--   %NAME
--        fn_ba_accbill_due_amt
--
--   %USAGE
--        This function returns the past/total due receivable amounts for all the Account Billed Policies of the billing account
--        Receivable ( Fitem of type Debit with +ve Balance)
--
--  %PARAM    in_session_id        object.object_id%type
--  %PARAM    in_transaction_id    object.object_id%type
--   %PARAM    in_object_id         object.object_id%type
--   %PARAM    in_due_type          number
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_ba_accbill_due_amt
(
     in_session_id      in    object.object_id%type,
     in_transaction_id    in    object.object_id%type,
     in_object_id             in        object.object_id%type,
     in_due_type              in        number
)
return number
is

     v_amount                   number := 0;
     v_return_value       number := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_ba_accbill_due_amt';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


begin

  if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Entering fn_ba_accbill_due_amt to calculate the due amount of all the account billed policies of a Billing Account. Due Type:'|| in_due_type
          );
     end if;

     if in_due_type = 1--Past Due
     then

          begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df , dragon_policy dp
          where
              df.POLICY_ID = dp.POLICY_ID
          and
               df.billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               df.aging_status_id = gfitem_past_due
          and
                dp.billing_method_id = pkg_db_stmt.g_BillingMethod_Direct
          and
            dp.direct_billed_to_id = pkg_db_stmt.g_Direct_CustomerBill
          and
               df.fitem_billed_tf is not null
    and
               df.balance >= 0.01;

    exception
          when no_data_found
          then
            v_amount:= 0;
          end;
     elsif in_due_type = 2--Total Due to be displayed on Account Invoice
     then
    begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem df, dragon_policy dp
          where
            df.POLICY_ID = dp.POLICY_ID
          and
               df.billing_account_id = in_object_id
          and
               df.fitem_type_id = gFItemType_Debit
          and
               (df.aging_status_id = gfitem_past_due or df.aging_status_id = gfitem_current_due)
          and
                dp.billing_method_id = pkg_db_stmt.g_BillingMethod_Direct
          and
            dp.direct_billed_to_id = pkg_db_stmt.g_Direct_CustomerBill
          and
               df.fitem_billed_tf is not null
    and
               df.balance >= 0.01;

    exception
          when no_data_found
          then
            v_amount:= 0;
          end;

     end if;

     return v_amount;

end fn_ba_accbill_due_amt;
-----------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_rollup_agency
--
--   %USAGE
--        This function returns the associated primary agency.
--
--  %LOGIC
--    Loop through all the policies of the customer and if all the
--      policies have same agency then return the agency id
--      to be set on reconciliation rollup else return null
--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_bats_id             in            Billing Account Trx Set ID

---------------------------------------------------------------------------------------
function fn_get_rollup_agency
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_bats_id           in           object.object_id%type

) return number
as
     v_count_agency           number:=0;
     v_agency_id              object.object_id%type;
     v_parent_object_id       object.object_id%type;
     v_object_type            object.object_id%type;--LIOPRODUCT-126
     v_return_value           number;
     v_parent_ba_id           object.object_id%type;--LXPRODUCT-270  
     v_parent_ba_type_id      number;
     
begin

     --Loop through all the policies of the customer and if all the
     --policies have same agency
     --then return the agency id to be set on rollup else return null
     
     -- LXPRODUCT-270 - Start
     --v_parent_object_id  :=   pkg_os_object_search.fn_object_ultimate_parent_get(in_session_id, in_transaction_id, in_bats_id);
     v_parent_ba_id      :=   pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_bats_id);   
     v_parent_ba_type_id :=   pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_parent_ba_id,29711346);  -- BillingAccount - List - Account Type
     if v_parent_ba_type_id = 201 then
        v_parent_object_id :=  pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, v_parent_ba_id,PKG_OS_CONSTANT.gObjType_Customer);
     Else
        v_parent_object_id  :=   pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, v_parent_ba_id); 
     end if;
     -- LXPRODUCT-270 - End     
     
     v_object_type       :=   pkg_os_object.fn_object_type_get( in_session_id, in_transaction_id, v_parent_object_id);

     if v_object_type = PKG_OS_CONSTANT.gObjType_Customer --12 LIOPRODUCT-126
     then    
          begin
               select
                    count(distinct(policy_partner_id)), policy_partner_id
               into
                    v_count_agency, v_agency_id
               from
                    dragon_policy dp
               where
                    dp.customer_id = v_parent_object_id
               and
                    dp.billing_method_id = pkg_db_stmt.g_BillingMethod_Direct
               and
                    dp.direct_billed_to_id = pkg_db_stmt.g_Direct_CustomerBill
               group by
                    policy_partner_id;

          exception
               when no_data_found or too_many_rows   --this is not in int       
               then
                    null;
          end;

          If v_count_agency = 1
          then
               v_return_value :=   v_agency_id;
          else
               v_return_value :=   null;
          end if;

     elsif v_object_type = PKG_OS_CONSTANT.gObjType_Partner --63  LIOPRODUCT-126
     then
          v_return_value :=   v_parent_object_id;
     end if;

     return v_return_value;

end fn_get_rollup_agency;
----------------------------------------------------------------------------------------------------------------------------------
-- DDWIDEV-216
--   %NAME
--        fn_preferred_date_get
--
--   %USAGE
--        This function returns the preferred date for a preferred day.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_date                    date
--   %PARAM     in_preferred_days          preferred days.
--
----------------------------------------------------------------------------------------------------------------------------------
function fn_preferred_date_get
(
     in_session_id              in       object.object_id%type,
     in_transaction_id          in       object.object_id%type,
     in_date                    in       date,
     in_preferred_days          in       number
)
return  date
as

begin

     if  nvl(in_preferred_days,0) <> 0 and in_date is not null  then

         if to_char(last_day (in_date),'DD')  >= in_preferred_days then

              return to_Date( to_char(in_date,'YYYYMM') || in_preferred_days, 'YYYYMMDD');

         else

              return last_day (in_date);

         end if;

     else

           return in_date;

     end if;


end fn_preferred_date_get;
----------------------------------------------------------------------------------------------------------------------------------
-- DDWIDEV-216
--   %NAME
--        fn_first_day
--
--   %USAGE
--        This function returns the first day of the month for a input date.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_date                    date
--
----------------------------------------------------------------------------------------------------------------------------------
Function fn_first_day
(
     in_session_id              in       object.object_id%type,
     in_transaction_id          in       object.object_id%type,
     in_date                    in       date
)
return  date
as

begin

     if in_date  is null then

          return    null;

     else

          return    TRUNC(in_date,'MM');

     end if;

end fn_first_day;
----------------------------------------------------------------------------------------------------------------------------------
-- OSBILLING-5105
----------------------------------------------------------------------------------------------------------------------------------
function fn_amnt_net_writeoff
(
     in_object_id             in        object.object_id%type,
     in_object_type_id        in        object.object_type_id%type, -- Billing Account,
     in_batrx_type_id         in        number default null -- Automated write of batch --901 , Manua write -2101,2701 write off reversal

) return number is

     v_amount     number  := 0;
     v_fitrxn_type           varchar2(500);
begin


    select
          nvl(sum (decode(sign(posted_amount),-1,1,1, -1,0) * abs( b.batch_amount)) ,0)
          --nvl(sum ( b.batch_amount),0)
     into
          v_amount
     from
           dragon_billingaccounttrxset b--, dragon_fichange f
     where
     (
          b.parent_billing_account_id =   in_object_id --92390453756--
          and
          ((in_batrx_type_id is null and b.batch_type_id in (2101, 901)) or b.batch_type_id  =  in_batrx_type_id) -- 2101 Manual, 901 --Austotamted write off
          and
          b.batch_status_id = gBatchStatus_Processed--39846 --Processed

     )
     or
     (
          b.parent_billing_account_id =   in_object_id
          and
          b.batch_type_id  in (gFITrxType_ReversalWriteOff ,gFITrxType_Reversal) -- 2701,7801 -- Write Off Reversal
          and
          b.created_by_billingtrxset is not null
          and
          b.created_by_billingtrxset
               in
               (
                    select
                         bi.billingaccounttrxset_id
                    from
                         dragon_billingaccounttrxset bi
                    where
                         ((in_batrx_type_id is null and b.batch_type_id in (2101, 901)) or bi.batch_type_id = in_batrx_type_id)
                    and
                         bi.batch_status_id = gBatchStatus_Processed --39846  --Processed
                 )
     )
   ;

     return v_amount;

end fn_amnt_net_writeoff;
----------------------------------------------------------------------------------------------------------------------------------
function fn_latest_disb_profile_tf
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_acc_id         in        object.object_id%type,
     in_disb_object_id         in        object.object_id%type
) return char
as

     v_latest_disb_profile_id  object.object_id%type;

begin

     select max(d.disb_profile_id)
       into v_latest_disb_profile_id
       from DRAGON_DISB_PROFILE d
      where d.billing_account_id = in_billing_acc_id
        and d.DISB_PROFILE_STATE_ID = 75
        and ( (d.POLICY_TERM_ID is not null and nvl(d.recur_mode, 0) <> 'Ad-Hoc') or (d.POLICY_TERM_ID is null and nvl(d.recur_mode, 0) = 'Ad-Hoc'))
        and ( (d.recur_mode in ('Recurring', 'Ad-Hoc')) or d.recur_mode is null)
        and ( (d.POLICY_TERM_ID is not null and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, d.CTF_OBJECT_ID, 210153) <> 27502) or d.POLICY_TERM_ID is null)
        and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, d.CTF_OBJECT_ID, 210153) <> 27502;

      if v_latest_disb_profile_id = in_disb_object_id then
           return 'T';
      else
           return 'F';
      end if;

end fn_latest_disb_profile_tf;

function fn_validate_selected_policies
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_selected_policy_ids             in             varchar2
) return char
as

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'fn_validate_selected_policy';

     v_policy_object_list               pkg_os_token.t_string_table;--pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_object_index                     number;

     v_return_value                     char := 'T';

     v_policy_effective_date            object_bv_value.business_variable_value%type;

     v_current_date                     object_bv_value.business_variable_value%type:=to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_session_id), pkg_os_constant.DragonDateFormatDefault );
     v_err_message                      varchar2(500);
     v_policy_number                    varchar2(20);
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Selected Items:' || in_selected_policy_ids
          );

     end if;

     pkg_os_token.sp_tokenize_string
     (
          in_selected_policy_ids,
          ',',
          v_policy_object_list
     );

     v_err_message := 'Validation failed. The effective date of the new transaction should be greater than the effective date of all the selected policies including';

     v_object_index := v_policy_object_list.first;

     while v_object_index is not null
     loop
          v_policy_effective_date :=  pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_policy_object_list(v_object_index),
                                           pkg_os_constant_bv.gbv_PolicyEffectiveDate
                                      );

          if v_policy_effective_date > v_current_date then

               v_return_value := 'F';
               v_policy_number := pkg_os_object_io.fn_object_bv_get
                                  (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_object_list(v_object_index),
                                      231
                                  );
               v_err_message := v_err_message || ': ' || v_policy_number;


          end if;

          v_object_index := v_policy_object_list.next( v_object_index );

     end loop;

     if v_return_value = 'F' then

          -- store the message that will display from the validation rule
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_session_id,
               gbv_Error_message,
               v_err_message
          );

     end if;

     return v_return_value;

end fn_validate_selected_policies;

---------------------------------------------------------------------------------------------------
-- not in use
function fn_latest_payment_profile_tf
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_acc_id         in        object.object_id%type,
     in_pay_object_id         in        object.object_id%type
) return char
as

     v_latest_payment_profile_id  object.object_id%type;

begin

     select max(pay_profile_id)
       into v_latest_payment_profile_id
       from DRAGON_PAY_PROFILE
      where billing_account_id = in_billing_acc_id --where pay_profile_id = 118576836456;
        and (
                 (
                      CTF_MODE = 'Credit Card' --CashTransferProfile.Mode = 'Credit Card'
                      and
                      pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,ctf_object_id, PKG_CS_PROFILES.gbv_Ref_CTP_CNo4d) is not null --OSBILLING-7441--CashTransferProfile.Credit/Debit Card Number - Last 4 Digits is not null
                 )
                 or
                 (
                      CTF_MODE = 'ACH/EFT' --CashTransferProfile.Mode = 'ACH/EFT'
                      and
                      (
                           EFT_BANK_ID is not null
                           or
                           pkg_os_object_io.fn_object_bv_get (0, 0, CTF_OBJECT_ID, 30011346) is not null--CashTransferProfile.EFT-Bank Id is not null or CashTransferProfile.EFT - Bank Routing Number is not null
                      )
                 )
                 or
                 (
                      CTF_MODE = pkg_os_lookup.fn_lookup_list_text_get(PaymentModeList,gPaymentMode_BillMe) --CashTransferProfile.Mode = 'Bill Me' --OSPRODUCT-970
                 )
        )
        and (
                 RECUR_MODE is null -- CashTransferProfile.Recurrency Mode is null
                 or
                 RECUR_MODE = 'Recurring' -- CashTransferProfile.Recurrency Mode = 'Recurring'
        )
        and PAY_PROFILE_STATE_ID <> 36746
        and (
                 (
                      POLICY_TERM_ID is not null --Activity._Reference_Usage Of is not null
                      and
                      POLICY_TERM_STATE_ID <> 27502 --GenericObject.ObjectState <> 'Rolledback'
                 )
                 or
                 (
                      POLICY_TERM_ID is null --Activity._Reference_Usage Of is null
                 )
        )
        and (
                 pkg_os_object_io.fn_object_bv_get(0, 0, CTF_OBJECT_ID, 210153) <>
                 27502 -- GenericObject.ObjectState  <> 'Rolledback'
        );

      if v_latest_payment_profile_id = in_pay_object_id then
           return 'T';
      else
           return 'F';
      end if;

end fn_latest_payment_profile_tf;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_minimum_NID
--   %AUTHOR
--        Cheryl Dextradeur
--
--   %USAGE
--        This function returns the minimum NID from all terms.
--
--   %ALGORITHM
--       1. fin termes with an outstanding balance > zero and get minimum NID
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_minimum_NID
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type
)
return varchar2
is
     v_session_control                       pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                        constant  system_log.program_name%type                 := pkg_name||'fn_get_minimum_NID';

     v_return_value                char;
     v_min_due_date                varchar2(100) := null;
begin

     select
         to_char(min(t.next_invoice_date), pkg_os_constant.DragonDateFormatDefault)
     into
          v_min_due_date
     from
          dragon_policy_term t
     where
          t.policy_id = in_policy_id
     and
          t.outstanding_balance > 0;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Policy ID: '
               || in_policy_id
               || ' Min due Date: '
               || v_min_due_date
          );
     end if;

     return v_min_due_date;

     exception

            when NO_DATA_FOUND then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... No data found in fn_get_minimum_NID'
                     ||SQLCODE||'-'||SQLERRM||'-'
                    ||dbms_utility.format_error_backtrace
               );

               v_min_due_date   :=    null;

               return v_min_due_date;

          when others then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... policy record doesnt exist'
               );

               v_min_due_date   :=   null ;

               return v_min_due_date;

end fn_get_minimum_NID;

---------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_term_balance
--
--   %AUTHOR
--        Cheryl Dextradeur
--
--   %USAGE
--        This function returns the total balance of all installments for the term.
--
--  %LOGIC
--    Loop through all the installments for the term and sum the balance

--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_policy_id                  in             policy ID,
--   %PARAM    in_policy_term_id             in             policy term ID,


---------------------------------------------------------------------------------------
function fn_get_term_balance
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_policy_term_id        in           object.object_id%type


) return number
as
     v_return_value        number;
begin

     begin
          select
               sum(nvl(s.balance_amount,0))
          into
               v_return_value
          from
               DRAGON_SCHEDULED_INSTALLMENT s
          where




               s.policy_term_id = in_policy_term_id;

          return v_return_value;

     exception

          when no_data_found
          then
               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_term_outstanding_balance',
                    ' term: ' || in_policy_term_id
               );

     end;

     return v_return_value;

end fn_get_term_balance;
---------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_term_payer_balance
--
--   %AUTHOR
--        Rashmi
--
--   %USAGE
--        This function returns the total balance of all installments for the term payer
--
--  %LOGIC
--        Loop through all the installments for the term and sum the balance
--
--   %PARAM    in_session_id                 in             UserSesion ID,
--   %PARAM    in_transaction_id             in             Transaction ID,
--   %PARAM    in_policy_term_id             in             policy term ID,
--   %PARAM    in_policy_term_payer_id       in             policy term payer ID,
---------------------------------------------------------------------------------------
--OSPRODUCT-2281
function fn_get_term_payer_balance
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_policy_term_id        in           object.object_id%type,
     in_policy_term_payer_id  in           object.object_id%type
) return number
as
     v_return_value           number := null;
begin
     begin
          select
               sum(nvl(s.balance_amount,0))
          into
               v_return_value
          from
               dragon_scheduled_installment s
          where
               s.policy_term_id = in_policy_term_id
          and
               s.payer_id = in_policy_term_payer_id;
          return v_return_value;
     exception
          when no_data_found then
               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_term_outstanding_balance',
                    ' term: ' || in_policy_term_id || ' term payer: ' || in_policy_term_payer_id
               );
     end;
     return v_return_value;
end fn_get_term_payer_balance;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_minimum_Term_with_bal
--
--   %AUTHOR
--        Cheryl Dextradeur
--
--   %USAGE
--        This function returns the minimum policy term that has a balance .
--
--   %ALGORITHM
--       1. fin termes with an outstanding balance > zero and get minimum
--
--   %PARAM     in_session_id              session ID
--   %PARAM     in_transaction_id          transaction ID
--   %PARAM     in_policy_id               policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_minimum_Term_with_bal
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type
)
return object.object_id%type
is
     v_session_control                       pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                        constant  system_log.program_name%type                 := pkg_name||'fn_get_minimum_Term_with_bal';


     v_return_value                object.object_id%type;






begin

     select
         min(t.policy_term_id)
     into
          v_return_value
     from
          dragon_policy_term t
     where
          t.policy_id = in_policy_id
     and
          nvl(t.outstanding_balance,0) > 0
     and
          t.next_invoice_date is not null;  -- OSBILLING-6076


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'For Policy ID: '
               || in_policy_id
               || ' policy term: '
               || v_return_value
          );
     end if;
     return v_return_value;

     exception

            when NO_DATA_FOUND then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... No data found in fn_get_minimum_Term_with_bal'
                    ||SQLCODE||'-'||SQLERRM||'-'
                    ||dbms_utility.format_error_backtrace
               );

               v_return_value   :=    null;

               return v_return_value;
            when others then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... policy record doesnt exist'
               );

               v_return_value   :=   null ;

               return v_return_value;

end fn_get_minimum_Term_with_bal;

--------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------
function fn_get_net_balance
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_object_id              in        object.object_id%type
) return number
as
     v_procedure_name                constant  system_log.program_name%type       :=  pkg_name||'fn_get_net_balance';
     v_session_control               pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_object_type_id                object.object_type_id%type;
     v_net_balance                   dragon_fitem.balance%type;

begin

     v_object_type_id := pkg_os_object.fn_object_type_get (in_session_id , in_transaction_id , in_object_id);

     if v_object_type_id = pkg_os_constant.gObjType_Policy
        then

         select sum(f.balance)
          into v_net_balance
           from dragon_fitem f, dragon_policy pol
          where pol.policy_id = f.policy_id
            and pol.responsible_billing_account = f.billing_account_id
            and f.object_source = 1
            and pol.policy_id = in_object_id;

     elsif v_object_type_id = gObjType_BillingAccount
           then

       select sum(f.balance)
       into v_net_balance
         from dragon_fitem f, dragon_policy pol
        where pol.policy_id = f.policy_id
          and pol.responsible_billing_account = f.billing_account_id
          and f.object_source = 1
          and pol.responsible_billing_account = in_object_id;

     end if;

     return v_net_balance;
exception
      when others then
           return 0;
end fn_get_net_balance;
----------------------------------------------------------------------------------------------------------------------------------

function  fn_get_debit_amount
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_billingaccount_id       in        object.object_id%type default null, -- UTPRODUCT-4957
     in_policy_id               in        object.object_id%type default null,
     in_policy_term_id          in        object.object_id%type default null
)
return float
is

     v_amount                   float := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_get_debit_amount';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


begin

  if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calculating debit amount for:'
               || 'in_billingaccount_id:'||in_billingaccount_id
               || 'in_policy_id:'||in_policy_id
               || 'in_policy_term_id:'||in_policy_term_id

          );
     end if;

if in_billingaccount_id is not null and in_policy_id is not null --OSPRODUCT-20454
then 

begin
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
               billing_account_id =in_billingaccount_id -- UTPRODUCT-4957
          and
              policy_id = in_policy_id
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance > 0
          and
               disbursement_batch_id is null  -- OSBILLING-5926
          -- UTPRODUCT-4957 Starts.
          and
               pkg_db_multipayer.fn_valid_payer_tf(in_session_id,in_transaction_id,billing_account_type_id) = 'T'  --OSPRODUCT-28820
               --billing_account_type_id in
               --                         (
               --                               pkg_db_billing_payable.gbillingactype_fininst,
               --                               pkg_db_billing_payable.gbillingactype_customer
               --                          )
          -- UTPRODUCT-4957 Ends.
          ;
end;

elsif in_billingaccount_id is not null and in_policy_id is null 
then
    begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
                billing_account_id =in_billingaccount_id -- UTPRODUCT-4957
        
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance > 0
          and
               disbursement_batch_id is null  -- OSBILLING-5926
          -- UTPRODUCT-4957 Starts.
          and
               pkg_db_multipayer.fn_valid_payer_tf(in_session_id,in_transaction_id,billing_account_type_id) = 'T'  --OSPRODUCT-28820
               --billing_account_type_id in
               --                          (
               --                               pkg_db_billing_payable.gbillingactype_fininst,
               --                               pkg_db_billing_payable.gbillingactype_customer
               --                          )
          -- UTPRODUCT-4957 Ends.
          ;
          
     exception
          when no_data_found
          then
               v_amount:= 0;
     end;          

elsif in_billingaccount_id is  null and in_policy_id is not  null
then
     begin
          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
             policy_id = in_policy_id   
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance > 0
          and
               disbursement_batch_id is null  -- OSBILLING-5926
          -- UTPRODUCT-4957 Starts.
          and
               pkg_db_multipayer.fn_valid_payer_tf(in_session_id,in_transaction_id,billing_account_type_id) = 'T'  --OSPRODUCT-28820
               --billing_account_type_id in
               --                          (
               --                               pkg_db_billing_payable.gbillingactype_fininst,
               --                               pkg_db_billing_payable.gbillingactype_customer
               --                          )
          -- UTPRODUCT-4957 Ends.
          ;
          
          
     exception
          when no_data_found
          then
               v_amount:= 0;
     end;
     
else


     begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
               (in_billingaccount_id is null or billing_account_id =in_billingaccount_id) -- UTPRODUCT-4957
          and
               (in_policy_id is null or policy_id = in_policy_id)
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance > 0
          and
               disbursement_batch_id is null  -- OSBILLING-5926
          -- UTPRODUCT-4957 Starts.
          and
               pkg_db_multipayer.fn_valid_payer_tf(in_session_id,in_transaction_id,billing_account_type_id) = 'T'  --OSPRODUCT-28820
               --billing_account_type_id in
               --                          (
               --                               pkg_db_billing_payable.gbillingactype_fininst,
               --                               pkg_db_billing_payable.gbillingactype_customer
               --                          )
          -- UTPRODUCT-4957 Ends.
          ;



     exception
          when no_data_found
          then
               v_amount:= 0;
     end;

end if;
     return v_amount;

end fn_get_debit_amount;
-----------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_credit_amount
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_billingaccount_id       in        object.object_id%type,
     in_policy_id               in        object.object_id%type default null,
     in_policy_term_id          in        object.object_id%type default null
)
return float
is

     v_amount                   float := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_get_credit_amount';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


begin

  if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calculating credit amount for:'
               || 'in_billingaccount_id:'||in_billingaccount_id
               || 'in_policy_id:'||in_policy_id
               || 'in_policy_term_id:'||in_policy_term_id

          );
     end if;



     begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
               (billing_account_id =in_billingaccount_id)
          and
               (in_policy_id is null or policy_id = in_policy_id)
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance < 0
          and
            DISBURSEMENT_BATCH_ID is null  -- OSBILLING-5926
          ;

     exception
          when no_data_found
          then
               v_amount:= 0;
     end;


     return v_amount;

end fn_get_credit_amount;
-----------------------------------------------------------------------------------------------------------------------------------------------------

function  fn_get_cash_amount
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_billingaccount_id       in        object.object_id%type,
     in_policy_id               in        object.object_id%type default null,
     in_policy_term_id          in        object.object_id%type default null
)
return float
is

     v_amount                   float := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_get_cash_amount';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


begin

  if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calculating cash amount for:'
               || 'in_billingaccount_id:'||in_billingaccount_id
               || 'in_policy_id:'||in_policy_id
               || 'in_policy_term_id:'||in_policy_term_id

          );
     end if;



     begin

          select
               nvl(sum(balance),0)
          into
               v_amount
          from
               dragon_fitem
          where
               (billing_account_id =in_billingaccount_id)
          and
               (in_policy_id is null or policy_id = in_policy_id)
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id   in (pkg_db_functions.gFItem_Category_Cash)
          and
               balance < 0
          and
               DISBURSEMENT_BATCH_ID is null  -- OSBILLING-5926
          and 
               value_stream is null -- [KR] 
          ;

     exception
          when no_data_found
          then
               v_amount:= 0;
     end;


     return v_amount;

end fn_get_cash_amount;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_policy_term_equity_date_get (
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_policy_term_id             in   object.object_id%type,
     in_transaction_effective_date in   date default null
) return date
is

     v_policy_term_effective_date  date;
     v_policy_expiry_date          date;                  -- UTPRODUCT-4875
     
     v_term_last_transaction_id    object.object_id%type;
     v_transaction_effective_date  date;

     v_policy_id                   object.object_id%type; --OSPRODUCT-2304
     v_responsible_ba_id           object.object_id%type; --OSPRODUCT-2304

     v_total_earned                number;
     v_total_money                 number;
     v_equity_factor               number;
     v_equity_date                 date;
     -- OSBILLING-6393 -- Arun - Start
     v_initial_amount              number := 0;
     v_balance                     number := 0;
     v_effective_date              date := null;
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_policy_term_equity_date_get_new';
     -- OSBILLING-6393 -- Arun - End

begin

     begin

          -- PolicyTerm Effective Date
          select 
               pt.policy_term_eff_date,
               p.policy_expiration_date           -- UTPRODUCT-4875
          into 
               v_policy_term_effective_date,
               v_policy_expiry_date               -- UTPRODUCT-4875
           from 
               dragon_policy_term  pt
           join
               dragon_policy       p on (pt.policy_id = p.policy_id)  -- UTPRODUCT-4875
           where 
               pt.policy_term_id = in_policy_term_id
           ;

          -- OSBILLING-6393 - Arun - Start
          if in_transaction_effective_date is not null and in_transaction_effective_date < v_policy_term_effective_date then

               v_effective_date := v_policy_term_effective_date;

          else

               v_effective_date := in_transaction_effective_date;

          end if;
          -- Arun - End

          v_policy_id := pkg_os_object.fn_object_parent_get( in_session_id , in_transaction_id , in_policy_term_id) ; -- OSPRODUCT-2304

          -- Last Transaction ID in PolicyTerm on the Processed Date
          select max(t.policy_transaction_id)
            into v_term_last_transaction_id
            from (
                  select f.policy_transaction_id,
                         rank() over(order by f.transaction_effective_date desc,t.POLICY_TRX_PROCESS_DATE desc) rn
                    from dragon_stats_per_day_factor f
                    join dragon_policy_trx           t on (f.policy_transaction_id = t.policy_trx_id)
                   where t.policy_term_id = in_policy_term_id
                     and t.policy_id = v_policy_id --OSPRODUCT-2335
                     and t.policy_trx_object_state_id not in (pkg_os_policy_transaction.gState_PolicyTrxRolledback)
                     --OSBILLING-6393 changed in_transaction_effective_date to v_effective_date
                     and (
                            v_effective_date is null
                            or
                            v_effective_date >= f.transaction_effective_date
                         )
                     and 
                         t.policy_trx_eff_date < v_policy_expiry_date  -- UTPRODUCT-4875. Audit Transaction can be effective after period expiry date, but still belongs to this term. Exclude it.
                 ) t
           where t.rn = 1;

          -- Equity factor and Earned amount
          select sum(earned_amount)              as earned_amount,
                  sum(equity_factor)              as equity_factor,
                  max(transaction_effective_date) as transaction_effective_date
             into v_total_earned,
                  v_equity_factor,
                  v_transaction_effective_date
             from dragon_stats_per_day_factor
            where policy_transaction_id = v_term_last_transaction_id
                  -- Arun OSBILLING-6393 - Added trunc for dates
              and trunc(transaction_effective_date) between trunc(coverage_effective_date) and trunc(coverage_expiration_date);


          if v_session_control.gLogging_Full 
          then
               pkg_os_logging.sp_log
               (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  'Policy Term ID: '            || in_policy_term_id          ||                  
                  ', Term eff date: '           || v_policy_term_effective_date ||
                  ', Policy exp date: '         || v_policy_expiry_date  ||    -- UTPRODUCT-4875                  
                  ', in_trx_eff_date: '         || in_transaction_effective_date || -- UTPRODUCT-4875
                  ', Term last trx ID: '        || v_term_last_transaction_id ||
                  ', v_trx_eff_date: '          || v_transaction_effective_date ||  -- UTPRODUCT-4875                  
                  ', Calclulated eff Date: '    || v_effective_date
               );
          end if;

          -- Equity Date
          if v_equity_factor > 0
          then
               /*
                   -- OSBILLING-6393 -- Arun - Start
                   select sum(initial_amount)
                   into v_initial_amount

                                 from dragon_fitem f , dragon_policy p
                                where policy_term_id = in_policy_term_id
                                  and fitem_type_id  =gFItemType_Debit
                                  and installment_number is not null
                                  and f.billing_account_id  = p.responsible_billing_account
                                  and (f.policy_trx_sub_type_id is null Or f.policy_trx_sub_type_id !=5) ;-- Excluding Change Payplan transaction  ;

               */         
                    
               --OSBILLING-7798 --
               select sum(nvl(policy_trX_premium_chg,0))   
                 into v_initial_amount 
                 from dragon_policy_trx             
                where policy_id = v_policy_id --OSPRODUCT-2335
                  and policy_term_id = in_policy_term_id 
                  and (  policy_trx_object_state_id = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                         or
                         -- UTXPRODUCT-185 Starts
                         (nvl( pkg_os_product.fn_product_property_get(policy_id,PKG_DB_CONSTANT.gSubjBillingAllowed ) , PKG_DB_CONSTANT.g_Yes )  =  PKG_DB_CONSTANT.g_Yes --OSPRODUCT-13644
                         and policy_trx_type_id in (
                                                       pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                                                       pkg_os_policy_transaction.gPolicyTrxType_Rewrite,
                                                       pkg_os_policy_transaction.gPolicyTrxType_Renewal
                                                    )
                         and policy_trx_object_state_id <> pkg_os_policy_transaction.gState_PolicyTrxRolledback                           
                         ) -- UTXPRODUCT-185 ends
                      )
                  and policy_trx_type_id not in (  
                                                   pkg_os_policy_transaction.gPolicyTrxType_Rollback
                                                )
                  and 
                      policy_trx_eff_date < v_policy_expiry_date  -- UTPRODUCT-4875. Audit Transaction can be effective after period expiry date, but still belongs to this term. Exclude it.                                                
                ;
               --End of OSBILLING-7798 --
               
               
               --OSPRODUCT-2304
               /*v_responsible_ba_id := pkg_os_object_io.fn_object_bv_get 
                                      (
                                           in_session_id , 
                                           in_transaction_id , 
                                           v_policy_id,
                                           gbv_responsible_billingacct_id 
                                      );*/

               select sum(f.balance)
                 into v_balance
                 from dragon_fitem f 
                 join dragon_policy_trx t on (t.policy_trx_id = f.policy_transaction_id) -- UTPRODUCT-4875
                where f.policy_id  = v_policy_id
                  and f.policy_term_id = in_policy_term_id
                  and f.fitem_type_id  = gFItemType_Debit
                  and f.installment_number is not null
                  and f.initial_amount <> 0 -- >0 -- OSPRODUCT-2624
                   -- OSPRODUCT-2624
                   -- and f.billing_account_id  = v_responsible_ba_id
                 -- and f.billing_account_id not in (select billingaccount_id from dragon_billingaccount where account_type_id is null or account_type_id = 1501)
                   and (select nvl(account_type_id,1501)   from dragon_billingaccount where billingaccount_id = f.billing_account_id) != 1501 --OSPRODUCT-20454
                   -- end OSPRODUCT-2624
                  and -- OSPRODUCT-3372
                      exists 
                      (
                           select 'x'
                             from db_billing_element dbe
                             join db_billing_element_map dbem on (dbe.db_billing_element_id = dbem.db_billing_element_id)       -- UTPRODUCT-4875
                             join EQUITY_DATE_COVERAGE   edc  on (edc.coverage_id = dbem.pc_coverage_id)                        -- UTPRODUCT-4875
                            where dbe.active_tf ='T'
                              and dbe.db_billing_element_id = f.billing_element_md_id
                      ) --OSPRODUCT-3372                      
                  and
                      t.policy_trx_eff_date < v_policy_expiry_date  -- UTPRODUCT-4875. Audit Transaction can be effective after period expiry date, but still belongs to this term. Exclude it.
                      and 
                    (
                         f.fitem_business_relationship is null 
                         or 
                         f.fitem_business_relationship in (pkg_db_business_relationship.gBusRel_PayerAndInhouseAgency, pkg_db_business_relationship.gBusRel_PayerAndCarrier)  -- OSPRODUCT-35510  gBusRel_PayerAndInhouseAgency-11148, gBusRel_PayerAndCarrier-10748
                    )  
                 ;

                  --OSPRODUCT-2304
                  /*  select sum(f.balance) into v_balance

                                 from dragon_fitem f , dragon_policy p
                                where policy_term_id = in_policy_term_id
                                  and fitem_type_id  = gFItemType_Debit
                                  and installment_number is not null
                                  and f.initial_amount > 0
                                  and f.billing_account_id  = p.responsible_billing_account;

                  */               

               v_total_money := v_initial_amount - v_balance ;

               /*
                    -- PolicyTerm Money paid
                    select sum(initial_amount) - sum(balance)
                      into v_total_money
                      from dragon_fitem
                     where policy_term_id = in_policy_term_id
                       and fitem_type_id  = gFItemType_Debit
                       and installment_number is not null
                       and billing_account_id not in (select billingaccount_id from dragon_billingaccount where account_type_id  in (1501)); -- Writing Company
               */

               -- Arun OSBILLING-6393 - End
               v_equity_date  :=   v_transaction_effective_date + (v_total_money - v_total_earned)/v_equity_factor;
               v_equity_date  :=   greatest(v_equity_date, v_policy_term_effective_date);

               if v_equity_date <= v_policy_expiry_date    -- UTPRODUCT-4875
               then
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                            in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '..Equity Date: '         || v_equity_date
                            ||'=(Initial Amount: '    || v_initial_amount                            
                            ||' - Policy Balance: '   || v_balance 
                            ||' - v_total_earned: '   || v_total_earned
                            ||')/ v_equity_factor: '  || substr(v_equity_factor,1,8)
                            ||' + v_trx_eff_date: '  || v_transaction_effective_date  -- UTPRODUCT-4875                                              
                         );
                    end if;                
               else
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log--_error    -- UTPRODUCT-4875 --OSPRODUCT-13905
                         (
                            in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '..Equity Date: '            || v_equity_date
                            ||'=(Initial Amount: '       || v_initial_amount                            
                            ||' - Policy Balance: '      || v_balance 
                            ||' - v_total_earned: '      || v_total_earned
                            ||')/ v_equity_factor: '     || substr(v_equity_factor,1,8)
                            ||' + v_trx_eff_date: '      || v_transaction_effective_date  -- UTPRODUCT-4875                                                                   
                            ||'... Policy exp date: '    || v_policy_expiry_date 
                            ||'... ERROR: equity date is beyond the policy expiry date.' ||
                            'Policy Term ID: '            || in_policy_term_id          ||                  
                            ', Term eff date: '           || v_policy_term_effective_date ||
                            ', in_trx_eff_date: '         || in_transaction_effective_date || -- UTPRODUCT-4875
                            ', Term last trx ID: '        || v_term_last_transaction_id ||
                            ', v_trx_eff_date: '          || v_transaction_effective_date ||  -- UTPRODUCT-4875                  
                            ', Calclulated eff Date: '    || v_effective_date                       
                         );
                    end if;
               end if;
                

               return v_equity_date;

          end if;

     exception

          when no_data_found then
               null;

     end;

     return null;

end fn_policy_term_equity_date_get;

-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_batrxset_equity_date_get(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_ba_trx_set_id              in        object.object_id%type
) return date
is

     v_equity_date                 date;
     v_min_equity_date             date;
     v_effective_date              date;

begin

     -- Get PolicyTerms invoked in the Billing Account Transaction Set
     for cur in (
          select distinct
                 fic.policy_term_id,
                 ts.parent_billing_account_id
            from dragon_fichange             fic
            join dragon_billingaccounttrxset  ts on (fic.billingaccounttrxset_id = ts.billingaccounttrxset_id)
           where fic.policy_term_id is not null
             and ts.billingaccounttrxset_id = in_ba_trx_set_id
     )
     loop

          v_effective_date    :=   fn_get_billacc_current_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        cur.parent_billing_account_id
                                   );

          v_equity_date  :=   fn_policy_term_equity_date_get(
                                   in_session_id,
                                   in_transaction_id,
                                   cur.policy_term_id,
                                   v_effective_date
                              );

          -- Min Equity Date
          if v_min_equity_date is null
          then

               v_min_equity_date   :=   v_equity_date;

          else

               v_min_equity_date   :=   least(v_min_equity_date, v_equity_date);

          end if;

     end loop;

     return v_min_equity_date;

end fn_batrxset_equity_date_get;

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_policyterm_equity_date_set(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_ba_trx_set_id              in        object.object_id%type
)
is

     v_equity_date                 date;
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'sp_policyterm_equity_date_set';
     
begin
     
     if v_session_control.gLogging_Full 
     then
          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '..Batch ID: '|| in_ba_trx_set_id 

          );
     end if;      

     -- Get PolicyTerms invoked in the Billing Account Transaction Set
     for cur in (
          /*select distinct
                 fic.policy_term_id,
                 ts.parent_billing_account_id
            from dragon_fichange             fic
            join dragon_billingaccounttrxset  ts on 
            (fic.billingaccounttrxset_id = ts.billingaccounttrxset_id
             and fic.billing_account_id = ts.parent_billing_account_id) --OSproduct-1372
           where fic.policy_term_id is not null
             and ts.billingaccounttrxset_id = in_ba_trx_set_id
             order by fic.policy_term_id --OSPRODUCT-1859*/
          -- OSPRODUCT-2624
          select distinct
                 fic.policy_term_id,
                 ts.parent_billing_account_id
            from dragon_fichange             fic
            join dragon_billingaccounttrxset  ts 
              on fic.billingaccounttrxset_id = ts.billingaccounttrxset_id --OSproduct-1372
           where fic.policy_term_id is not null             
             and ts.billingaccounttrxset_id = in_ba_trx_set_id
             order by fic.policy_term_id --OSPRODUCT-1859;
     )
     loop          

          v_equity_date := fn_policy_term_equity_date_get
                           (
                                in_session_id,
                                in_transaction_id,
                                cur.policy_term_id
                           );
                              
          pkg_db_object.sp_ba_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               cur.policy_term_id,
               pkg_db_functions.gbv_PolicyTerm_EquityDate,
               to_char(v_equity_date, pkg_os_constant.DragonDateFormatDefault)
          );

          /*pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               cur.policy_term_id,
               pkg_db_functions.gbv_PolicyTerm_EquityDate,
               to_char(v_equity_date, pkg_os_constant.DragonDateFormatDefault)
          );*/

          
          if v_session_control.gLogging_Full 
          then
               pkg_os_logging.sp_log
               (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  '.. Term ID: '  || cur.policy_term_id || 
                  '.. Equity Date:' || v_equity_date

               );
          end if;
     
     end loop;

end sp_policyterm_equity_date_set;

-- OSPRODUCT-3015
function fn_mod_pay_plan_timing_list_tf
(
     in_pay_plan_timing_id         number,
     in_selected_policy            object_bv_value.business_variable_value%type,
     in_session_id                 object.object_id%type,
     in_billing_account_id         object.object_id%type default null,
     in_transaction_id             object.object_id%type
)
return char
is
     v_policy_list                 pkg_os_token.t_string_table;
     v_policy_list_index           number;
     v_selected_policies           object_bv_value.business_variable_value%type;
     v_list_select_object_id       object.object_id%type;
     v_policy_id                   object.object_id%type;
     v_datamart_tf                 char:= 'T';
     v_policy_count                number;
     v_indx                        number;
     v_payplan_obj_list            pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_payplan_timing_id           payment_plan_timing.payment_plan_timing_id%type;
     v_trx_base_coverages_id       object.object_id%type;
     v_base_trx_id                 object.object_id%type;
     v_policy_term_id              object.object_id%type;
     v_chosen_pay_plan_id          object.object_id%type;
     v_batch_id                    object.object_id%type;
     --v_billing_account_id          object.object_id%type;
     v_entity_id                   object.object_id%type;
     v_chosen_pay_timing_id        payment_plan_timing.payment_plan_timing_id%type;
     v_eff_date                    object_bv_value.business_variable_value%type;
     v_return_value                char(1);
     v_mp_enabled_tf               char(1);
     v_mod_plan_rule_id            number;

     v_count                       number := 0;
     g_mod_payplan_constr_rule     number := 31906646;
     g_payer_mod_plan_constr_rule  number := 32967024;

begin   
     

     if in_selected_policy is null then

          v_return_value := 'F';

     else

          v_policy_list.delete;

          pkg_os_token.sp_tokenize_string(in_selected_policy, ',' , v_policy_list);
          
          -- get the object of interest
          -- expected object BillingAccountTransactionSet.
          -- The same should be set on the UI using initialization rule
          v_batch_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_session_id, pkg_db_constant.gbv_UserSessionObjectOfIntrst);
          
          -- get the effective date
          v_eff_date := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_batch_id, pkg_db_constant.gbv_BATS_CPPEffectiveDate);
          
          v_policy_count := v_policy_list.count;
          v_policy_list_index := v_policy_list.first;

          while v_policy_list_index is not null loop

               v_policy_id := v_policy_list(v_policy_list_index);               
               
               if v_eff_date is null then
                    v_eff_date := to_char( pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, v_policy_id), pkg_os_constant.DragonDateFormatDefault);
               end if;
               
               v_base_trx_id := pkg_os_policy_transaction.fn_policytx_closest_by_class
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_policy_id,
                                     pkg_os_policy_transaction.gTrxClass_PremiumBearing,
                                     v_eff_date,
                                     'F',
                                     null
                                );                   
                                
               begin
                    
                    select
                         pt.policy_term_id,
                         pt.ptp_id
                    into
                         v_policy_term_id,
                         v_trx_base_coverages_id
                    from
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_base_trx_id;
                         
               exception
                    when others then
                         null;
               end;
               
               begin
                    
                    if v_policy_term_id is null then
                         
                         v_policy_term_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_base_trx_id, pkg_db_constant.gbv_Ref_PTBelongsToTerm); --Term
                    
                    end if;
                    
                    if v_trx_base_coverages_id is null then
                         
                         v_trx_base_coverages_id := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_base_trx_id, pkg_os_policy_transaction.gbv_PolicyTrxCoverages );
                    
                    end if;
               
               end;
               
               -- Get the multipayer flag
               v_mp_enabled_tf := pkg_db_multipayer.fn_multipayer_mode
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_trx_base_coverages_id
                                 );
                                      
              -- OSPRODUCT-2442
              if v_mp_enabled_tf = 1 then
                                           
                   -- Get the entity
                   v_entity_id := pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id
                                   );

                   -- Get the payer
                   v_trx_base_coverages_id := pkg_os_object_search.fn_object_with_attribute_get
                                               (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_trx_base_coverages_id,
                                                      pkg_db_constant.gobjType_PTPPayer,
                                                      pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                                      v_entity_id
                                               );
                                               
                   v_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_trx_base_coverages_id, 32705024); -- chosen payment plan
                    
                   -- get the constraint rule id
                   begin
                                   
                         select
                              obj_rel.reference_constraint_rule_id
                         into
                              v_mod_plan_rule_id
                         from
                              object_relationship obj_rel
                         where
                              obj_rel.reference_bv_id = g_payer_mod_plan_constr_rule;  --31906646
                                   
                   exception
                                   
                         when others then
                              v_mod_plan_rule_id := null;
                                   
                   end;                        
                    
               else
               
                    v_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_policy_term_id, pkg_db_constant.gbv_PolicyTerm_PaymentPlan); -- chosen payment plan
                                     
                    -- get the constraint rule id
                    begin
                                   
                         select
                              obj_rel.reference_constraint_rule_id
                         into
                              v_mod_plan_rule_id
                         from
                              object_relationship obj_rel
                         where
                              obj_rel.reference_bv_id = g_mod_payplan_constr_rule; --31906646
                                   
                    exception
                                   
                         when others then
                              v_mod_plan_rule_id := null;
                                   
                    end;
                    
               end if;
               
               v_chosen_pay_timing_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_chosen_pay_plan_id, pkg_db_constant.gbv_PaymentPlanTimingID); -- pkg_db_constant
               
               v_payplan_obj_list.delete;
               
               -- Get the payment Plan Object
               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_trx_base_coverages_id,
                    pkg_db_payplan_modify.gObjType_PayPlan, -- 638, -- Payment Plan object type
                    v_payplan_obj_list
               );
                    
               if ( v_payplan_obj_list.count > 0 ) then

                    v_indx := v_payplan_obj_list.first;

                    while v_indx is not null loop                    
                         
                         if pkg_os_exp.fn_evaluate_expression
                            ( 
                                 in_session_id, 
                                 in_transaction_id, 
                                 v_payplan_obj_list(v_indx), 
                                 v_mod_plan_rule_id
                            ) = 'T'
                            
                         then
                              
                              v_payplan_timing_id := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_payplan_obj_list(v_indx),
                                                          pkg_db_constant.gbv_PaymentPlanTimingID --34204746 -- Payment Plan Timing ID
                                                     );
                              
                              if v_payplan_timing_id = in_pay_plan_timing_id
                                 and
                                 v_payplan_timing_id <> v_chosen_pay_timing_id
                                 and
                                 v_payplan_timing_id not in (21046, 22346) -- Remove custom pay plan
                              then

                                   v_count := v_count + 1;

                              end if;
                              
                         end if;

                         v_indx := v_payplan_obj_list.next(v_indx);

                    end loop;

               end if;

               v_policy_list_index := v_policy_list.next(v_policy_list_index);

          end loop;
          
          if v_count = v_policy_list.count then
               v_return_value := 'T';
          else
               v_return_value := 'F';
          end if;

     end if;

     return v_return_value;

end fn_mod_pay_plan_timing_list_tf;
----------------------------------------------------------------------------------------------------------------
--OSBilling-6435 Calculation for fetching the billingaccounttrxset id from PolicyTransactionHistory
function fn_get_bats_from_history
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_transaction_hist_id        in        object.object_id%type
)
return object.object_id%type
is

     v_batrxset_id        object.object_id%type;

begin

     begin

    Select
      billingaccounttrxset_id
    into
      v_batrxset_id
    from
      VW_POLICY_TRANSACTIONS_HISTORY
    where
      transaction_id = in_transaction_hist_id;

     exception when no_data_found
  then
    v_batrxset_id:= 0;
     end;

     return v_batrxset_id;

end fn_get_bats_from_history;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_active_pay_profile_count
--
--   %USAGE
--        The function will return the count of existing active payment profiles
--        under a billing account
--
--   %ALGORITHM
--        Not specified
--
--
--   %PARAM
--   in_session_id
--   in_transaction_id
--   in_billing_acc_id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSBILLING-6403
-- UTPRODUCT-4174/UTPRODUCT-4113
function fn_active_card_pay_profile_cnt
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_acc_id         in        object.object_id%type
) return number
as

     v_active_pay_profile_count  number;
     v_current_date              date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_acc_id));
     
begin

     if pkg_os_object.fn_object_type_get (in_Session_id, in_transaction_id, in_billing_acc_id) = gObjType_BillingAccount then

          select count(1)
            into v_active_pay_profile_count
            from dragon_cashtransferprofile ctf
           where ctf.billing_account_id = in_billing_acc_id
             and pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, ctf.ctf_id, 210153) = 75
             and ctf.profile_mode_id = 2 -- card
             and ctf.profile_recur_mode_id = 1 -- recurring
             and (
                      pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, ctf.ctf_id, 32835640) is not null
                      or
                      pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, ctf.ctf_id, 30011046) is not null
                 )
             and (
                      to_number ( pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       ctf.ctf_id,
                                       pkg_db_profiles.gbv_CTFCardExpYear
                                  )
                      ) > to_number(to_char(v_current_date, 'yyyy'))
                      or
                      (
                           to_number ( pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            ctf.ctf_id,
                                            pkg_db_profiles.gbv_CTFCardExpYear
                                       )
                           ) = to_number(to_char(v_current_date, 'yyyy'))
                           and
                           to_number ( pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            ctf.ctf_id,
                                            pkg_db_profiles.gbv_CTFCardExpMon
                                       )
                           ) >= to_number(to_char(v_current_date, 'mm'))
                      )
                 );                                         

     else

          v_active_pay_profile_count := 0;

     end if;

     return v_active_pay_profile_count;

end fn_active_card_pay_profile_cnt;

-- UTPRODUCT-4174/UTPRODUCT-4113
function fn_active_eft_pay_profile_cnt
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_acc_id         in        object.object_id%type
) return number
as

     v_active_pay_profile_count  number;
     v_current_date              date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_acc_id));
     
begin

     if pkg_os_object.fn_object_type_get (in_Session_id, in_transaction_id, in_billing_acc_id) = gObjType_BillingAccount then

          select count(1)
            into v_active_pay_profile_count
            from dragon_cashtransferprofile ctf
           where ctf.billing_account_id = in_billing_acc_id
             and pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, ctf.ctf_id, 210153) = 75
             and ctf.profile_mode_id = 3 -- card
             and ctf.profile_recur_mode_id = 1 -- recurring
             and pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, ctf.ctf_id, 30011946) is not null
             and (
                      ctf.eft_bank_id is not null
                      or
                      ctf.eft_bank_routing_number is not null
                 )
             ;

     else

          v_active_pay_profile_count := 0;

     end if;

     return v_active_pay_profile_count;

end fn_active_eft_pay_profile_cnt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_active_pay_arngmnt_cnt
--
--   %USAGE
--        The function will return the count of existing active payment arrangement objects
--        under a billing account
--
--   %ALGORITHM
--        Not specified
--
--
--   %PARAM
--   in_session_id
--   in_transaction_id
--   in_billing_acc_id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

-- OSBILLING-6403
function fn_active_pay_arngmnt_cnt
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_action_object_id       in        object.object_id%type,
     in_billing_acc_id         in        object.object_id%type
) return number
as

     v_active_pay_arngmnt_cnt  number := 0;
     --v_index                   number; --OSPRODUCT-2908
     --v_object_list             pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;--OSPRODUCT-2908

begin
     
     begin
          select
               count(1)
          into
               v_active_pay_arngmnt_cnt
          from
               dragon_bill_plan bp
          where
               bp.billing_account_id = in_billing_acc_id
          and
               bp.bill_plan_key is not null;
          
     exception
          when others then
               raise;
     end;
     
     --OSPRODUCT-2908
          
          /*v_object_list.delete;
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_id,
               pkg_db_payment_arrangement.gObjType_PaymentArrangement,
               v_object_list
          );

          v_index := v_object_list.first;

          while v_index is not null loop

               -- Skip placeholder object
               if pkg_db_payment_arrangement.fn_bill_plan_modified_tf(in_action_object_id, v_object_list(v_index)) = 'T' then

                    v_active_pay_arngmnt_cnt := v_active_pay_arngmnt_cnt + 1 ;

               end if;

               v_index := v_object_list.next(v_index);

          end loop;

     else

          v_active_pay_arngmnt_cnt := 0;

     end if;*/
     --OSPRODUCT-2908

     return v_active_pay_arngmnt_cnt;

end fn_active_pay_arngmnt_cnt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_consolidated_sched_tf
--
--   %USAGE
--        The function will be used in determining if consolidated schedules should get displayed
--        on the UI
--
--   %ALGORITHM
--        Not specified
--
--
--   %PARAM
--   in_session_id
--   in_transaction_id
--   in_billing_acc_id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

-- OSBILLING-6403
function fn_consolidated_sched_tf
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_bill_plan_id           in        object.object_id%type
) return number
as

     v_count                   number := 0;

begin

     select
          count(distinct policy_transaction_id)
     into
          v_count
     from
          dragon_ba_paymentcomponent dbp
     where
          dbp.ba_scheduled_payment_id in
            ( select
                   ba_scheduled_payment_id
              from
                   dragon_ba_scheduledpayment dbs
              where
                   dbs.associated_bill_plan_id = in_bill_plan_id
            );

     return v_count;

end fn_consolidated_sched_tf;
---------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
FUNCTION fn_paymentplanschedule_bal_amt
(
    in_session_id            IN object.object_id%TYPE,
    in_transaction_id        IN object.object_id%TYPE,
    in_chosen_payment_plan   IN object.object_id%TYPE
)
    RETURN CHAR
    AS
    v_existing_bill_plan_list        pkg_os_object.t_object_list;
    v_balance_amt                    NUMBER := 0;
    v_tot_balance_amt                NUMBER := 0;
    v_payment_plan                   business_variable.business_variable_id%TYPE;
    v_existing_bill_plan_list_indx   NUMBER;
    BEGIN
     --Get Childeren for the Payment Plan and calculate the total sum of balance amount
    pkg_os_object_search.sp_object_children_of_type_get(in_transaction_id,in_transaction_id,in_chosen_payment_plan,gObjType_ScheduledPayment,v_existing_bill_plan_list);

    v_existing_bill_plan_list_indx := v_existing_bill_plan_list.first;
    WHILE v_existing_bill_plan_list_indx IS NOT NULL LOOP
        v_balance_amt := pkg_os_object_io.fn_object_bv_get(1,1,v_existing_bill_plan_list(v_existing_bill_plan_list_indx),33860646);
                v_tot_balance_amt := v_tot_balance_amt + v_balance_amt;
        v_existing_bill_plan_list_indx := v_existing_bill_plan_list.next(v_existing_bill_plan_list_indx);
    END LOOP;

    RETURN
        CASE
            WHEN v_tot_balance_amt > 0 THEN 'T'
            ELSE 'F'
        END;

END fn_paymentplanschedule_bal_amt;
---------------------------------------------------------------------------------------------------------------------------------------------------------
--OSBilling-6417
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_target_cancel_date
--
--   %USAGE
--        This function returns the target cancellation date to be set on Pending Cancellation Policy Transaction.
--
--   %ALGORITHM
--        If policy max expiration date is greater than policy current date + required cancel days
--          then
--               Target Cancellation Date is set as max expiration date of the policy
--          Else
--               Target Cancellation Date is policy current date + required cancel days
--          The date returned will now be checked for Saturday, Sunday and Holiday depending upon the product configuration.
--          If above property is true
--          then
--               Above calculated target cancellation date will be recalculated to return the next available date
--          Else
--               the same date will be returned
--
--
--   %PARAM    in_pol_trx_id                          Policy Transaction ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_target_cancel_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in             object.object_id%type,
     in_compliance_matrix_tf       in             char default 'F',        -- OSBILLING-6897
     in_override_date_tf           in             char default 'T'
)
return date
is
      v_procedure_name                  constant  system_log.program_name%type   :=   pkg_name||'fn_get_target_cancel_date';
     v_session_control                 pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     --v_policy_id                   object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_pol_trx_id);
     v_policy_id                   object.object_id%type ;
     v_target_cancel_date          date;
     v_pol_max_exp_date            date;
     v_pol_curr_date               date;
     v_grace_canc_days             number;
     v_apply_ssh_rule              pd_property.pd_property_value%type;
     v_pd_prop_Equity_date_tf      pd_property.pd_property_value%type; -- OSBILLING-6897
     v_CurTerm_Equity_Date         date; -- OSBILLING-6897
     v_action_object_type          object.object_id%type;     --OSPRODUCT-25335
	 v_pol_trx_id                  object.object_id%type;            --OSPRODUCT-25335

begin

     v_action_object_type := pkg_os_object.fn_object_type_get
                             (
                                  in_session_id,         --OSPRODUCT-25335
                                  in_transaction_id,
                                  in_action_object_id
                             );                                             
  
     if v_action_object_type = 629 then -- policy trx
          
										
         v_pol_trx_id := in_action_object_id;
	     v_policy_id  := pkg_os_object.fn_object_parent_get
	                     (
                               in_session_id,                         
                               in_transaction_id,
                               v_pol_trx_id
																
                          );
      elsif v_action_object_type = 24 then
         
         v_policy_id := in_action_object_id;
	     v_pol_trx_id := null; 
 	  
     end if;

     v_pol_max_exp_date  := trunc(to_date(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_id, gbv_Policy_exp_date),'YYYYMMDDHH24MISS'));
     v_pol_curr_date   := trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, v_policy_id));
     -- v_grace_canc_days := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id , gPropertyCancelGracedays); -- OSBILLING-6897
     v_apply_ssh_rule         := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id , gPropertyApplyHolidayRule);-- Apply Saturday, Sunday, Holiday restriction
     v_pd_prop_Equity_date_tf     := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id , 22146); -- OSBILLING-6897
   
     if NVL(v_pd_prop_Equity_date_tf,'F') = 'T' then 
          
          -- Equity Date (Current Term) 
          v_CurTerm_Equity_Date  := trunc(to_date(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_id, 31774946),'YYYYMMDDHH24MISS'));
                         
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Equity Date : ' || v_CurTerm_Equity_Date
               );
          end if;
                        
     end if;                         
   

     if in_compliance_matrix_tf = 'F' then  -- OSBILLING-6897 
                      
          v_grace_canc_days := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id , gPropertyCancelGracedays); -- OSBILLING-6897 
                    
                    
          -- Raise Exception for v_grace_canc_days = null 
          if v_grace_canc_days is null then 
                    
             pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_target_cancel_date',
                    '..Unable to determine the vlaue of PD Property 11246  : '||in_action_object_id
               );
                         
             raise no_data_found;
                       
          end if;      
                    
                             
          if v_pol_max_exp_date < ( v_pol_curr_date + v_grace_canc_days)
            and
            in_override_date_tf = 'T'
          then
               v_target_cancel_date:= v_pol_max_exp_date;
          else
                          
               v_target_cancel_date:= v_pol_curr_date + v_grace_canc_days;
                          
               -- Start Target Cancellation Date based on Equity Date
               if NVL(v_pd_prop_Equity_date_tf,'F') = 'T' then
                         
                     if v_CurTerm_Equity_Date is not null and v_CurTerm_Equity_Date > ( v_pol_curr_date + v_grace_canc_days) then 

                       v_target_cancel_date:= v_CurTerm_Equity_Date;
                                 
                       if v_session_control.gLogging_Full
                       then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Re calculate the Target Cancellation Date based on Equity Date : ' || v_target_cancel_date
                              );
                       end if;
                                 
                     end if;   
                               
               end if; 
               -- End Target Cancellation Date based on Equity Date
                         
          end if;
                      
     else -- OSBILLING-6897 

          -- Non Pay Cancel Days based on the policy jurisdiction. -- OSBILLING-6897   
          v_grace_canc_days := pkg_cs_db_functions.fn_get_req_days_for_cancel
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id,
                                        v_pol_curr_date                                         
                                   );
                                             
          -- Raise Exception for v_grace_canc_days = null 
          if v_grace_canc_days is null then 
                    
             pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_target_cancel_date',
                    '..Unable to determine the vlaue of PD Property 11246  : '||in_action_object_id
               );
                         
             raise no_data_found;
                       
          end if;   
                    
                                             
                    
          if v_pol_max_exp_date < ( v_pol_curr_date + v_grace_canc_days)
            and
            in_override_date_tf = 'T'
          then
               v_target_cancel_date:= v_pol_max_exp_date;
          else
               v_target_cancel_date:= v_pol_curr_date + v_grace_canc_days;
                         
               -- Start Target Cancellation Date based on Equity Date 
               if NVL(v_pd_prop_Equity_date_tf,'F') = 'T' then
                         
                     if v_CurTerm_Equity_Date is not null and v_CurTerm_Equity_Date > ( v_pol_curr_date + v_grace_canc_days) then 

                       v_target_cancel_date:= v_CurTerm_Equity_Date;
                                 
                       if v_session_control.gLogging_Full
                       then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Re calculate the Target Cancellation Date based on Equity Date : ' || v_target_cancel_date
                              );
                       end if;
                    
                     end if; 
                                 
               end if; 
               -- End Target Cancellation Date based on Equity Date 
                               
          end if;

     end if;    
     
      
   
     -- Now override the target cancellation date based on product configuration
     v_target_cancel_date :=   pkg_cs_db_functions.fn_override_target_canc_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_target_cancel_date,
                                        in_action_object_id,
                                        v_grace_canc_days
                                   );



     if v_apply_ssh_rule = 'T' and in_compliance_matrix_tf = 'F' then 
     
                                   
          v_target_cancel_date :=fn_apply_holiday_rule
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_target_cancel_date,
                                        v_policy_id,
                                        'F'         -- in_compliance_matrix_tf OSBILLING-6897  
                                   );
          
     elsif v_apply_ssh_rule = 'T' and in_compliance_matrix_tf = 'T' then 

           v_target_cancel_date := fn_apply_holiday_rule
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_target_cancel_date,
                                        v_policy_id,
                                        'T'         -- in_compliance_matrix_tf OSBILLING-6897  
                                   );
                                   
     else 
             
            null;                                                                            

                         
     end if;

     return v_target_cancel_date;

Exception
  when no_data_found
  then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               'fn_get_target_cancel_date',
               '..Unable to retrieve target cancel date for : '||in_action_object_id
          );

end fn_get_target_cancel_date;


----------------------------------------------------------------------------------------------------------------------------------
FUNCTION fn_policy_nondisbursable_items 
(
     in_session_id                 IN   object.object_id%TYPE,
     in_transaction_id             IN   object.object_id%TYPE,
     in_policy_id                  IN   object.object_id%TYPE, -- Policy id --57616746970
     in_billing_account_id         IN   object.object_id%TYPE  default null
)
RETURN varchar2
IS
     /*v_is_suspended number;
     v_responsible_billingaccount NUMBER;*/
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_policy_nondisbursable_items';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_fitem_with_policy number :=0;
BEGIN
     /*v_is_suspended :=pkg_db_suspension.fn_db_is_policy_suspend (in_session_id,in_transaction_id,in_policy_id) ;
     select distinct billingaccount_id into v_responsible_billingaccount from DRAGON_BILLINGACCOUNT where PARTNER_OBJECT_ID in (
     select distinct policy_partner_id from dragon_policy where policy_id=in_policy_id);
     if v_is_suspended=0
     then*/

     select    count(fitem_id) 
     into      v_fitem_with_policy 
     from      dragon_fitem 
     where     (billing_account_id=in_billing_account_id or in_billing_account_id is null )
     and       policy_id=in_policy_id
     and       (balance <0  OR FITEM_CATEGORY_ID = 946)
     and       FITEM_CATEGORY_ID<>'5046'
     and       DISBURSEMENT_BATCH_ID is  null
     AND       decode(nvl(pkg_os_product.fn_product_property_get( in_session_id,in_transaction_id, in_policy_id , 16746),'F')
                    ,'F',1,'T',decode(POLICY_TRX_TYPE_ID,11,decode(BILLING_ELEMENT_MD_ID,72446,1,0),1),1) = 1
     and       PKG_DB_FUNCTIONS.fn_AssocCashApply_exts_tf(in_session_id,in_transaction_id,fitem_id) = 'F' ;
     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...in_policy_id : ' || in_policy_id ||
               ' in_billing_account_id : ' || in_billing_account_id ||
               ' v_fitem_with_policy : ' || v_fitem_with_policy
          );
     end if;
     
     if v_fitem_with_policy >0 or in_policy_id is null
     then
          return 'T';
     else
          return 'F';
     end if;
     
end;
----------------------------------------------------------------------------------------------------------------------------------
FUNCTION fn_policy_receivable_items (
     in_session_id                  IN object.object_id%TYPE,
     in_transaction_id              IN object.object_id%TYPE,
     in_policy_id                   IN object.object_id%TYPE,
  in_billing_acc                 IN object.object_id%TYPE,
  in_res_bill_acc                IN object.object_id%TYPE default null
   )
RETURN varchar2
IS
     v_fitem_with_policy number :=0;
  v_output varchar2(1);
BEGIN

        select count(fitem_id) into v_fitem_with_policy from
            (
        SELECT  fitem_id
        FROM
        dragon_fitem
        WHERE billing_account_id = in_billing_acc
        AND fitem_category_id IN (246,346,446,546,946,5040)
        AND balance >= 0.01
        AND fitem_type_id = 146
        AND policy_id=in_policy_id
        --and rownum <= 1
      );


      if v_fitem_with_policy > 0
        then

           return 'T';

      else

        SELECT
        count(fitem_id)
        into v_fitem_with_policy
        FROM
        dragon_fitem
        WHERE billing_account_id = in_billing_acc
        AND(
         (
          fitem_category_id IN ( 646, 946)
          --AND balance < 0
          AND balance != 0 -- LXPRODUCT-486
          AND fitem_type_id = 246
         )
          OR
          (fitem_category_id IN ( 246,546,446,346)
           AND balance < 0
           AND fitem_type_id = 146
         )
        )
        AND disbursement_batch_id IS NULL
        AND  policy_id=in_policy_id
        --AND pkg_db_functions.fn_assoccashapply_exts_tf(1,1,fitem_id) = 'F'
        and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, fitem_id , gbv_FItemRefCashApplyBatch) is null
        --and rownum <= 1
         ;

        if v_fitem_with_policy >0 then
            v_output :=  'T';
        else
            v_output := 'F';
         end if;

     end if;
return v_output;
end;

---------------------------------------------------------------------------------------------------------------------------------------------------------
function fn_sort_rc_memeber
(
     in_session_id             in            object.object_id%type,
     in_transaction_id         in            object.object_id%type,
     in_recon_item_list         in  out       pkg_os_object.t_object_list
)
return pkg_os_object.t_object_list
is

     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_sort_rc_memeber';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     type t_string_list            is table of varchar2(50) index by varchar2(50);
     v_category_fitem_list         t_string_list ;--:= pkg_os_object.gnull_object_list;
     v_recon_item_indx             number;
     v_curr_recon_item             number;
     v_ref_fitem_bv_id             number := 29760346;
     v_fitem                       number;
     v_priority                    number;
     v_category                    number;
     v_sub_category                number;
     v_creation_date               object_bv_value.business_variable_value%type;--OSPRODUCT-5574
     v_object_table                object_bv_value_tt;--OSPRODUCT-5574

     cursor c_fitem_cat is
     select
            c.db_fitem_category_id ||'-'|| sc.db_fitem_sub_category_id as category_string,
            row_number() over(order by c.fitem_target_priority,sc.fitem_target_priority) as category_string_rank
     from
            db_fitem_category c
     join
            db_fitem_sub_category sc
     on
            c.db_fitem_category_id = sc.db_fitem_category_id ;

begin

     for r_fitem_cat in c_fitem_cat
     loop
         v_category_fitem_list(r_fitem_cat.category_string) := r_fitem_cat.category_string_rank;
     end loop;

     -- OSPRODUCT-5574 start---
     if  in_recon_item_list.count > 0
     then
     
          declare
          
               cursor c_sorted_object_num
               is
                    select
                         object_id,
                         object_type_id
                    from
                         table(cast(v_object_table as object_bv_value_tt))
                     order by
                         object_type_id||to_number(object_bv_value)||object_id;--osproduct-7702 20201102 Cheryl/Durgesh add the object_id as part of sort
                        
          begin
          
               v_object_table := new object_bv_value_tt();
               
               v_recon_item_indx      := in_recon_item_list.first;
               
               while v_recon_item_indx is not null 
               loop
               
                    v_curr_recon_item := in_recon_item_list(v_recon_item_indx);
                    
                    v_fitem := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_curr_recon_item, v_ref_fitem_bv_id);
                    
                    v_category := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, pkg_db_object.gbv_FItem_Category);--29710146
                    
                    v_sub_category := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, pkg_db_object.gbv_FItem_Subcategory);
                    
                    v_priority := v_category_fitem_list(v_category||'-'||v_sub_category);
                    
                    v_creation_date := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, PKG_OS_CONSTANT_BV.gbv_GenObjCreationDate);--OSPRODUCT-5574
                    
                    if v_session_control.gLogging_Full
                    then
                    
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...looping v_recon_item_list:'
                              || 'v_curr_recon_item : '||v_curr_recon_item || ' v_fitem : '||v_fitem
                              || ' v_category : '||v_category || ' v_sub_category : ' || v_sub_category
                              || ' v_priority : '||v_priority || ' v_creation_date : ' || v_creation_date

                         );
                         
                    end if;
                    
                    v_object_table.extend;
                    
                    v_object_table( v_object_table.count ) := new object_bv_value_ot( in_recon_item_list(v_recon_item_indx), v_priority, v_creation_date );
                    
                    v_recon_item_indx := in_recon_item_list.next( v_recon_item_indx );
                    
               end loop;
               
               in_recon_item_list.delete;
               
               for r_object in c_sorted_object_num 
               loop
               
                    if v_session_control.gLogging_Full
                    then
                    
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...looping sorted objects:'
                              || 'member id : '||r_object.object_id
                              ||' index count :'|| in_recon_item_list.count
                         );
                         
                    end if;
                    
                    in_recon_item_list( in_recon_item_list.count + 1 ) := r_object.object_id;
                         
               end loop;
                    
          end;
          
     end if;
     -- OSPRODUCT-5574 end---
     -- OSPRODUCT-5574 Commented earlier code---
     /*while v_recon_item_indx is not null
     loop
           v_curr_recon_item := v_recon_item_list(v_recon_item_indx);
           v_fitem := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_curr_recon_item, v_ref_fitem_bv_id);
           v_category := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, pkg_db_object.gbv_FItem_Category);--29710146
           v_sub_category := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, pkg_db_object.gbv_FItem_Subcategory);
           v_priority := v_category_fitem_list(v_category||'-'||v_sub_category);
           v_generic_instance := lpad(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, PKG_OS_CONSTANT_BV.gbv_GenObjInstanceNumber),4,'0');----OSPRODUCT-5574
           --v_creation_date    :=   pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem, PKG_OS_CONSTANT_BV.gbv_GenObjCreationDate);--OSPRODUCT-5574
           if v_session_control.gLogging_Full
           then
                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '...looping v_recon_item_list:'
                     || 'v_curr_recon_item : '||v_curr_recon_item || ' v_fitem : '||v_fitem
                     || ' v_category : '||v_category || ' v_sub_category : ' || v_sub_category
                     || ' v_priority : '||v_priority || ' v_creation_date : ' || v_creation_date

                );
           end if;

           o_recon_item_list(v_priority||v_generic_instance) := v_curr_recon_item;
           v_recon_item_indx :=  v_recon_item_list.next(v_recon_item_indx);
     end loop;*/
     
     --v_recon_item_list := o_recon_item_list ;
     
     return in_recon_item_list;
     
end fn_sort_rc_memeber;

function fn_policy_due_credit_amounts
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_policy_id             in        object.object_id%type,
     in_due_type              in        number,
     in_due_days              in        number default 0
)
return number
is

     v_amount                 number    :=   0;
     v_grace_period_days      number    :=   0;
     v_current_sys_date       number;
     v_billing_acc_id         number;

begin

     --
     -- Get the grace period from the Billing Account of Partner
     --
     v_billing_acc_id    := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_id,gbv_responsible_billingacct_id);

     v_grace_period_days := nvl(pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_billing_acc_id,
                                 gbv_BillingAcc_PayGraceDays
                            ),0);

     v_current_sys_date := to_number
                           (
                                to_char
                                (
                                     pkg_os_time.fn_os_sysdate
                                     (
                                        1,
                                        1,
                                        v_billing_acc_id
                                     ),'YYYYMMDD'
                                )
                           );

     if in_due_type = PastDue
     then

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem , dragon_policy policy
          where
               policy.policy_id = in_policy_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number(to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) < to_number(to_char(to_date(v_current_sys_date,'YYYYMMDD')-in_due_days,'YYYYMMDD'))
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and 
              value_stream is null; -- [KR] OSPRODUCT-2071

      elsif in_due_type = CurrentDue
      then

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem, dragon_policy policy
          where
               policy.policy_id = in_policy_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number(to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) = v_current_sys_date
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and 
              value_stream is null; -- [KR] OSPRODUCT-2071

     elsif in_due_type = FutureDue
     then

          select
               nvl(sum(fitem.balance),0)
          into
               v_amount
          from
               dragon_fitem fitem, dragon_policy policy
          where
              policy.policy_id = in_policy_id
          and
              fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               to_number (to_char(fitem.due_date + v_grace_period_days,'YYYYMMDD')) > v_current_sys_date
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and 
              value_stream is null; -- [KR] OSPRODUCT-2071

     elsif in_due_type = TotalDue
     then
          select /*+ NO_BATCH_TABLE_ACCESS_BY_ROWID(dragon_fitem)*/
                 nvl(sum(fitem.balance),0)
          into
                 v_amount
          from
                 dragon_fitem fitem, dragon_policy policy
          where
                 policy.policy_id = in_policy_id
          and
                 fitem.policy_id = policy.policy_id
          and
                 fitem.fitem_type_id       =    gFItemType_Credit
          and 
              value_stream is null; -- [KR] OSPRODUCT-2071
          end if;

     return v_amount;

end fn_policy_due_credit_amounts;
--------------------------------------------------OSBILLING 7208 start------------------------------------------------------------------------------------------------
function fn_create_adhoc_invoice (
     in_session_id            in object.object_id%type,
     in_transaction_id        in object.object_id%type,
     in_policy_id             in object.object_id%type
)
return char
is

     v_policy_trx_list            pkg_os_object.t_object_list;
     v_tot_inv_trx                 number := 0;
     v_policy_trx_list_indx        number;

begin
     --Get the children of policy tranaction type
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_policy_id,
          pkg_os_policy_transaction.gObjType_PolicyTransaction,
          v_policy_trx_list
     );

     v_policy_trx_list_indx := v_policy_trx_list.first;

     while v_policy_trx_list_indx is not null loop
          --- when Policy Tracation type is iNvoice, Subtype is Adhoc Invoice and state is not processsed
          if  
             nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_trx_list(v_policy_trx_list_indx),gbv_PolicyTransactionType),0)= gPolInvoiceTrxTypeId
          and   
             nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_trx_list(v_policy_trx_list_indx),gbv_AdhocInvoiceIndicator),0) = gYes
          and  
             --OSPRODUCT-2754
             --nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_trx_list(v_policy_trx_list_indx),gbv_ObjectState),0 <> 106
             nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_trx_list(v_policy_trx_list_indx),gbv_ObjectState),0) not in (pkg_db_constant.gBatchStatus_Created,pkg_os_policy_transaction.gState_PolicyTrxProcessed,pkg_os_policy_transaction.gState_PolicyTrxRolledback,pkg_os_policy_transaction.gState_PolicyTrxProspect,gState_PolicyTrxRejected)
          then
                  
               v_tot_inv_trx :=v_tot_inv_trx +1;
               return 'T';
                  
          end if;
     
          v_policy_trx_list_indx := v_policy_trx_list.next(v_policy_trx_list_indx);
     
     end loop;

     return
          case
            when v_tot_inv_trx =0 then 'F'
            else 'T'
          end;

end fn_create_adhoc_invoice;
--------------------------------------------------------------------------------------------------------------------------------
function fn_direct_bill_to_cust_cnt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type

)
return CHAR
is

     var_count                          number :=0;
     v_billingAcc_Type_ID               object_bv_value.business_variable_value%type;

begin
     
     -- OSPRODUCT-15028
     v_billingAcc_Type_ID :=  pkg_os_object_io.fn_object_bv_get
                              ( 
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                   pkg_db_functions.gbv_BillingAccountType 
                              );
                 
     -- OSPRODUCT-15028
     if v_billingAcc_Type_ID is not null 
     and v_billingAcc_Type_ID in (pkg_db_functions.gBillAccType_Customer)
     then 
            
          select
               count(1)
          into
               var_count
          from
               dragon_policy dp
          where
               dp.responsible_billing_account =   in_billing_account_id
          and
               dp.billing_method_id= 1; --Direct Billed
			   
               --direct_billed_to_id= 1;  --Customer --removed the condition OSPRODUCT-32847
            
     end if; -- OSPRODUCT-15028
            
     -- OSPRODUCT-15028 starts
     if var_count = 0 
     then 
          select 
               count(1)
          into
               var_count     
          from 
               dual 
          where 
               exists (               
                         select
                              'x'
                         from
                               dragon_policy_term_payer dptp
                         where
                               dptp.payer_billing_account_id = in_billing_account_id
                      );        
     end if;
     -- OSPRODUCT-15028 ends
    
     return
          case
          when var_count > 0 
          then 'T'
          else 'F'
          end;

end fn_direct_bill_to_cust_cnt;

--------------------------------------------------------OSBILLING 7208 end------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------
--  OSPRODUCT-11769
--
--  %NAME
--    fn_dirbill_tocust_CCEFT_pol_cnt
--
--  %USAGE
--    The function will be used in a rule to determine if a billing account has a policy with preferred CC/EFT profile
--
--  %ALGORITHM
--    Having a Billing Account ID, search for Direct Billed to Account policies with Actife preferred profile on type CC/EFT
--    Refine the search result by checking the path to check the 'current term'
--           '31844846.32251146.30013046.30010546' --  Policy._Reference_Current Term based on Rolled Date._Reference_Preferred Payment Profile._Reference_Profile Used.Mode
--
--    Performance hint : do not use a function inside a query.
--    
--------------------------------------------------------------------------------------------------------------------------------
function fn_dirbill_tocust_CCEFT_pol_cnt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type
)
return CHAR
is
     var_return                         char := 'F';
     v_attribute_value                  char := 'F';
     v_singlepayer_count                number := 0;
     v_multipayer_count                number := 0;
     v_total_count                number := 0;
     cursor c_pol_cnt
     (
          p_billing_account_id    object.object_id%type
     )
     is
     select
          distinct p.policy_id
     from
          dragon_pay_profile  pp
     join
          dragon_policy       p  on (pp.policy_id = p.policy_id)
     where
          p.responsible_billing_account = p_billing_account_id
     and
          p.billing_method_id= 1        --Direct Billed
     and
         p.direct_billed_to_id= 1      --Customer
     and
         pp.billing_account_id = p_billing_account_id --OSPRODUCT-11912
     and
          pp.pay_profile_state_id = pkg_db_profiles.g_ProfileState_Active -- 75  Active profile
     and
          pp.preferred_prof_id = 1      --Preferred profile
     and
          pp.ctf_mode_id in (
                              pkg_db_profiles.g_PaymentMode_Card,  --2 CC
                              pkg_db_profiles.g_PaymentMode_EFT    --3 EFT/ACH
                            )
     ;
     --OSPRODUCT-11912 start
     cursor c_multipayer_pol_cnt
     (
          p_billing_account_id    object.object_id%type
     )
     is
     select
          distinct p.policy_id, tp.policy_term_payer_id
     from
          dragon_pay_profile  pp,dragon_policy p, dragon_policy_term_payer tp
     where
          tp.payer_billing_account_id = p_billing_account_id
     and
          tp.policy_id = p.policy_id
     and
          pp.policy_id = p.policy_id
     and
          p.billing_method_id= 1        --Direct Billed
     and
         p.direct_billed_to_id= 1      --Customer
     and
         pp.billing_account_id = p_billing_account_id 
     and
          pp.pay_profile_state_id = pkg_db_profiles.g_ProfileState_Active -- 75  Active profile
     and
          pp.preferred_prof_id = 1      --Preferred profile
     and
          pp.ctf_mode_id in (
                              pkg_db_profiles.g_PaymentMode_Card,  --2 CC
                              pkg_db_profiles.g_PaymentMode_EFT    --3 EFT/ACH
                            )
     ;
     --OSPRODUCT-11912 end

begin
     
     --OSPRODUCT-11912 start
	 v_attribute_value := pkg_os_system_attribute.fn_get_system_attribute_value
                                           (
                                           'Enable Payment Arrangement Workflow'
                                           );  --OSPRODUCT24741
     
     If v_attribute_value = 'F' then
     --OSPRODUCT-11912 end
          for cur in c_pol_cnt
                     (
                          in_billing_account_id
                     )
          loop
              if  pkg_os_object_io.fn_object_bv_path_get  -- Performance hint : do not use a function inside a query.
                  (
                       in_session_id,
                       in_transaction_id,
                       cur.policy_id,
                       '31844846.32251146.30013046.30010546' --  Policy._Reference_Current Term based on Rolled Date._Reference_Preferred Payment Profile._Reference_Profile Used.Mode
                  ) in (
                         pkg_db_profiles.g_PaymentMode_Card,
                         pkg_db_profiles.g_PaymentMode_EFT
                        )
              then
                   var_return := 'T';
                   exit; -- exit the loop. We need at least one policy in the list.
              end if;
          end loop;
          --OSPRODUCT-11912 start
          for cur in c_multipayer_pol_cnt
                     (
                          in_billing_account_id
                     )
          loop
              if  pkg_os_object_io.fn_object_bv_path_get  -- Performance hint : do not use a function inside a query.
                  (
                       in_session_id,
                       in_transaction_id,
                       cur.policy_term_payer_id,
                       '32251146.30013046.30010546' --  Policy._Reference_Current Term based on Rolled Date._Reference_Preferred Payment Profile._Reference_Profile Used.Mode
                  ) in (
                         pkg_db_profiles.g_PaymentMode_Card,
                         pkg_db_profiles.g_PaymentMode_EFT
                        )
              then
                   var_return := 'T';
                   exit; -- exit the loop. We need at least one policy in the list.
              end if;
          end loop;
     else
          
          select
               count(distinct bp.bill_plan_id)
          into 
               v_singlepayer_count
          from
               dragon_policy_term tp,dragon_bill_plan bp, dragon_pay_profile pp
          where
               bp.billing_account_id = in_billing_account_id
          and
               bp.bill_plan_id = tp.pref_bill_plan_id
          and
               bp.ctf_object_id = pp.CTF_OBJECT_ID
          and
               pp.billing_account_id = in_billing_account_id
          and
               pp.policy_term_id = tp.policy_term_id
          and
               pp.pay_profile_state_id = pkg_db_profiles.g_ProfileState_Active -- 75  Active profile
          and
               pp.preferred_prof_id = 1      --Preferred profile
          and
               pp.ctf_mode_id in (
                                   pkg_db_profiles.g_PaymentMode_Card,  --2 CC
                                   pkg_db_profiles.g_PaymentMode_EFT    --3 EFT/ACH
                                 );

          if v_singlepayer_count = 0 then
               
               select
                    count(distinct bp.bill_plan_id)
               into 
                    v_multipayer_count
               from
                    dragon_policy_term_payer tp,dragon_bill_plan bp, dragon_pay_profile pp
               where
                    tp.payer_billing_account_id = in_billing_account_id
               and
                    tp.pref_bill_plan_id = bp.bill_plan_id
               and
                    bp.billing_account_id = in_billing_account_id
               and
                    bp.ctf_object_id = pp.CTF_OBJECT_ID
               and
                    pp.billing_account_id = in_billing_account_id
               and
                    pp.associated_term_payer = tp.policy_term_payer_id
               and
                    pp.pay_profile_state_id = pkg_db_profiles.g_ProfileState_Active -- 75  Active profile
               and
                    pp.preferred_prof_id = 1      --Preferred profile
               and
                    pp.ctf_mode_id in (
                                        pkg_db_profiles.g_PaymentMode_Card,  --2 CC
                                        pkg_db_profiles.g_PaymentMode_EFT    --3 EFT/ACH
                                      );
          end if;

          v_total_count := v_singlepayer_count + v_multipayer_count;

          if v_total_count > 0 then
             var_return := 'T';
          end if;

     end if;

     --OSPRODUCT-11912 end
     return var_return;

end fn_dirbill_tocust_CCEFT_pol_cnt;
-----------------------------------------------------------------------------------------------------------------------------------------------------

-- Arun OSBILLING-6393 -  Start
function  fn_get_min_term_equity_date
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_policy_id               in        object.object_id%type

)
return date
is

    v_procedure_name        constant  system_log.program_name%type   :=   pkg_name||'fn_get_min_term_equity_date';
    v_session_control       pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    v_balance               number := 0;
    v_equity_date           Date := null ;
    v_equity_date_return    Date := null;
    v_last_term_id          object_bv_value.business_variable_value%type; --OSPRODUCT-1859

     cursor c_policy_terms
     is
          select
               policy_term_id
          from
               dragon_policy_term
          where
               policy_id          =    in_policy_id
          order by
               policy_term_id
          ;



begin

    if v_session_control.gLogging_Full
       then
            pkg_os_logging.sp_log
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '...Fetching the minimum equity date from a policy teem which ' ||
                 'has some outstanding  balance for the policy_id:'||in_policy_id     );
    end if;

    for r_policy_terms in c_policy_terms
    loop
        if v_session_control.gLogging_Full
        then
            pkg_os_logging.sp_log
             (
                in_session_id,
                in_transaction_id,
                 v_procedure_name,
                 '......... Looping through all relevant Policy Terms'||
                 ' Considering Term ID: '||r_policy_terms.policy_term_id
               );
        end if;

        v_balance := pkg_os_object_io.fn_object_bv_get( in_session_id,
                                                in_transaction_id,
                                                r_policy_terms.policy_term_id,
                                                gbv_TermOutstandingBal );
       If v_balance > 0 then
          v_equity_date := to_date(pkg_os_object_io.fn_object_bv_get( in_session_id,
                                                    in_transaction_id,
                                                    r_policy_terms.policy_term_id,
                                                    gbv_TermEquityDate),pkg_os_constant.DragonDateFormatDefault);

              If v_equity_date_return is null then
                  v_equity_date_return := v_equity_date;
              Else
                  v_equity_date_return := least(v_equity_date_return,v_equity_date);

              end if;

        End If;
        
        v_last_term_id := r_policy_terms.policy_term_id;--OPSRODUCT-1859

    end loop;
    
    
     --OPSRODUCT-1859 Starts
    if v_equity_date_return is null then
         
        v_equity_date_return :=  to_date(pkg_os_object_io.fn_object_bv_get( in_session_id,
                                                                            in_transaction_id,
                                                                            v_last_term_id,
                                                                            pkg_db_functions.gbv_PolicyTerm_EquityDate),pkg_os_constant.DragonDateFormatDefault);
              
    end if;
    ----OPSRODUCT-1859 ends

return v_equity_date_return;

end fn_get_min_term_equity_date;
-- Arun OSBILLING-6393 -  End
-----------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------OSBILLING 7187 start-------------------------------------------------------

function fn_policy_payables_amounts
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_policy_id             in        object.object_id%type,
     in_billing_account_id    in        object.object_id%type,
     in_earned_unearned_id    in        number --1 for Earned, 2 for Unearned and 3 for Total Payables
)
return number
is

     v_amount                 number    :=   0;
begin

     if in_earned_unearned_id = 3
     then

          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , dragon_policy policy
          where
               policy.policy_id = in_policy_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               fitem.BILLING_ACCOUNT_ID <> in_billing_account_id
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               fitem.earning_status in ('Unearned','Earned','Partially Earned');

     elsif in_earned_unearned_id = 2
     then
          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , dragon_policy policy
          where
               policy.policy_id = in_policy_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               fitem.BILLING_ACCOUNT_ID <> in_billing_account_id
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               fitem.earning_status in  ('Unearned' , 'Partially Earned');

     elsif in_earned_unearned_id = 1
     then
          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , dragon_policy policy
          where
               policy.policy_id = in_policy_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               fitem.BILLING_ACCOUNT_ID <> in_billing_account_id
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               fitem.earning_status =   'Earned';

     end if;

     return v_amount;

end fn_policy_payables_amounts;



function fn_ba_payables_amounts
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_billing_account_id    in        object.object_id%type,
     in_earned_unearned_id    in        number  --1 for Earned, 2 for Unearned and 3 for Total Payables
)
return number
is

     v_amount                 number    :=   0;
begin

     if in_earned_unearned_id = 3
     then

          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , DRAGON_BILLINGACCOUNT dba , dragon_policy policy
          where
               policy.RESPONSIBLE_BILLING_ACCOUNT = in_billing_account_id
          and
               dba.BILLINGACCOUNT_ID = fitem.BILLING_ACCOUNT_ID 
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               policy.billing_method_id = 1  -- Direct Billed Policy
          and
               dba.account_type_id not in (1501,4)
          and
               fitem.fitem_category_id not in (gFItem_Category_Disburse,gFItem_Category_Writeoff,gFItem_Category_Cash,gFitem_Cat_GroupDividends, gFitem_Cat_ClaimSettlement, gFitem_category_LossGain)--OSPRODUCT-12759
          and
               nvl(fitem.earning_status,'Not Applicable') not in ('Not Applicable'); --OSPRODUCT-18031

     elsif in_earned_unearned_id = 2
     then
          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , DRAGON_BILLINGACCOUNT dba , dragon_policy policy , DRAGON_BILLINGACCOUNT dba2
          where
               dba.BILLINGACCOUNT_ID = policy.RESPONSIBLE_BILLING_ACCOUNT
          and
               dba.BILLINGACCOUNT_ID = in_billing_account_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               dba2.BILLINGACCOUNT_ID =  fitem.BILLING_ACCOUNT_ID
          and
               dba2.account_type_id not in (1501,4)
          and
               fitem.earning_status in   ('Unearned' , 'Partially Earned');

     elsif in_earned_unearned_id = 1
     then
          select
               nvl(sum(fitem.balance),0)*-1
          into
               v_amount
          from
               dragon_fitem fitem , DRAGON_BILLINGACCOUNT dba , dragon_policy policy , DRAGON_BILLINGACCOUNT dba2
          where
               dba.BILLINGACCOUNT_ID = policy.RESPONSIBLE_BILLING_ACCOUNT
          and
               dba.BILLINGACCOUNT_ID = in_billing_account_id
          and
               fitem.policy_id = policy.policy_id
          and
               fitem.fitem_type_id = gFItemType_Credit
          and
               policy.billing_method_id = 1 -- Direct Billed Policy
          and
               dba2.BILLINGACCOUNT_ID =  fitem.BILLING_ACCOUNT_ID
          and
               dba2.account_type_id not in (1501,4)
          and
               fitem.earning_status in   ('Earned');
     end if;

     return v_amount;

end fn_ba_payables_amounts;
------------------------------------OSBILLING 7187 end-------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_surcharge_department
--
--   %USAGE
--        The function will be used in determining Surcharge Authority billing account bused on jurisdiction of a issued policy.
--        on the UI
--
--   %ALGORITHM
--        Not specified
--
--
--   %PARAM
--   in_session_id             User Session ID
--   in_transaction_id         Transaction ID
--   in_action_object_id       Action Object ID (Policy, PTP)
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSBILLING-7560 Start
function fn_get_surcharge_department
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_jurisdiction_id            in             object.object_id%type

) return number
is

     v_session_control                      pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                       constant system_log.program_name%type  := pkg_name||'fn_get_surcharge_department';

     v_depOfTax_ba_id                       object.object_id%type ;
     v_short_text                           lookup_list_value.lookup_text_short%type;
     v_surcharge_level_property             pd_property.pd_property_value%type :=pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_session_id , pkg_db_constant.gSurchargeAtJurisdiction);

begin

     if   v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering with Action Object ID: ' ||in_jurisdiction_id
               || 'v_surcharge_level_property:'||v_surcharge_level_property
          );

     end if;

     if NVL(v_surcharge_level_property,'F') ='F'

     then
          v_short_text                      := null;
     else     
     
          if in_jurisdiction_id is null
          then
               v_short_text                      := null;
          else
               v_short_text       :=  pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 , in_jurisdiction_id );
     end if;



     end if;     







          if   v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
               '...in_jurisdiction_id: '||in_jurisdiction_id
               || 'v_short_text:'||v_short_text
               );

          end if;

          select
         billing_account_no




               into
         v_depOfTax_ba_id
               from
                    dragon_partner
               where
                    partner_state_id = gv_state_approve
               and
                    partner_type_id = gv_department_of_surcharge
     and

                                   (
             partner_us_state = v_short_text
             or
             v_short_text is null
        )
     ;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' Department of Taxation Billing Account: ' || v_depOfTax_ba_id
                    );

               end if;

               return v_depOfTax_ba_id;


exception  
     when no_data_found then
          pkg_os_logging.sp_log_error

                                   (
                                        in_session_id,
                                        in_transaction_id,
               v_procedure_name,
               'no department of surcharge found for v_surcharge_level_property:'||v_surcharge_level_property||
               '...in_jurisdiction_id: '||in_jurisdiction_id  || 
               'v_short_text:'||v_short_text
                                   );
          raise no_data_found; 

     when TOO_MANY_ROWS then
          pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
               'multiple department of surcharge found for v_surcharge_level_property:'||v_surcharge_level_property||
               '...in_jurisdiction_id: '||in_jurisdiction_id  || 
               'v_short_text:'||v_short_text
                    );


          raise too_many_rows;




end fn_get_surcharge_department;
-- OSBILLING-7560 End
-----------------------------------------------------------------------------------------------------------------------------------------------------
--commenting fn_is_batch_trx_suspended as part of osproduct-2013. Writing it with a new logic.
/*function fn_is_batch_trx_suspended
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitrxset_id                in             object.object_id%type,
     in_action_object_type         in             object_bv_value.business_variable_value%type,-- (PolicyTransaction Or BATS)
     in_batch_id                   in             object.object_id%type
)
return number
is
    v_procedure_name         constant  system_log.program_name%type   :=    pkg_name||'fn_is_batch_trx_suspended';
    v_session_control        pkg_os_session.r_dragon_session_control  :=    pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_master_policy_id       object.object_id%type;
    v_policy_term_status     object_bv_value.business_variable_value%TYPE;
    v_susp_trx               varchar2(400):=null;
    v_billing_acc_id         object.object_id%type ;
    v_billing_acc_state      object_bv_value.business_variable_value%TYPE;
    v_trx_suspended          number :=0;
    v_UW_trx_set             varchar2(400);
    Trx_is_suspended         exception;
    pragma exception_init(Trx_is_suspended, -30105);
    v_polTerm_status_path varchar2(100) :='31844846.32251346';-- 31844846 ( _Reference_Current Term based on Rolled Date).32251346 (PolicyTerm - List - Term Suspension Status)
    v_susp_trx_path varchar2(100) :='31844846.32525348';-- ( _Reference_Current Term based on Rolled Date).32525348 (Suspension Transactions)
    v_susp_trx_path2 varchar2(100) :='33914946.32525248'; -- 33914946(_Reference_Current Billing Account Suspension).32525248(Suspension Transactions)

Begin

     if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '|||||| in_fitrxset_id '||in_fitrxset_id
                    ||' in_action_object_type' || in_action_object_type ||' in_batch_id '|| in_batch_id
               );

    end if;

    if in_action_object_type = pkg_os_constant.gobjType_PolicyTransaction then--629
             v_master_policy_id   :=   pkg_os_object_search.fn_object_get_parent_of_type
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitrxset_id,
                                        pkg_os_constant.gObjType_Policy
                                   );

            --Check the suspension status of the current policy term and get the suspended transactions
            v_policy_term_status    := pkg_os_object_io.fn_object_bv_path_get
                                (
                                        in_session_id,
                                        in_transaction_id,
                                        v_master_policy_id,
                                        v_polTerm_status_path
                                   );

                  if v_session_control.gLogging_Full then

                                           pkg_os_logging.sp_log
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                '|||||| v_master_policy_id '||v_master_policy_id
                                                ||' v_policy_term_status' ||v_policy_term_status
                                           );

                     end if;
            if v_policy_term_status = gState_PolicyTermBASusp then --(if Term suspension status is suspended then get the suspension transactions)
                v_susp_trx    := pkg_os_object_io.fn_object_bv_path_get
                                        (
                                                in_session_id,
                                                in_transaction_id,
                                                v_master_policy_id,
                                                v_susp_trx_path 

                                             );

              
  
                         if v_session_control.gLogging_Full then
    
                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '|||||| Policy Term Status is '||v_policy_term_status ||' .It is suspended'||
                                ' and suspension trx are :' || v_susp_trx
                           );
    
                        end if;
            end if; 

     else
           -- Get the parent Billing Account object id of BillingAccountTransactionSet object
          v_billing_acc_id          :=      pkg_os_object.fn_object_parent_get
                                                    (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_fitrxset_id
                                                    );
           --Get the billing account object state whether it is suspended
           v_billing_acc_state  :=          pkg_os_object_io.fn_object_bv_get
                                                   (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_billing_acc_id,
                                                           gbv_ObjectState--210153 --Object State
                                            );
            if v_billing_acc_state = g_BAObjectStateSuspended then --suspended ( then calculate the transactions which are suspended)
            v_susp_trx        :=           pkg_os_object_io.fn_object_bv_path_get
                                                (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_billing_acc_id,
                                                        v_susp_trx_path2 
                                                );
            
                        if v_session_control.gLogging_Full then
        
                               pkg_os_logging.sp_log
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '|||||| Billing Account Object State is '||v_billing_acc_state ||' .It is suspended'||
                                    ' and suspension trx are :' || v_susp_trx
                               );
        
                        end if;
            end if;


     end if; --in_action_object_type = pkg_os_constant.gobjType_PolicyTransaction then--629

-- Check if the trasaction that is being actioned upon by user is suspended or not
        --Checking for Underwriting transactions
         if (in_batch_id in (PKG_DB_OBJECT.gBillTrxType_Endorsement,
                             PKG_DB_OBJECT.gBillTrxType_NBRewrite,
                             PKG_DB_OBJECT.gBillTrxType_CancelInsured,
                             PKG_DB_OBJECT.gBillTrxType_CancelNonPay,
                             PKG_DB_OBJECT.gBillTrxType_Reinstatement,
                             PKG_DB_OBJECT.gBillTrxType_Renewal,
                             PKG_DB_OBJECT.gBillTrxType_NewBusiness,
                             PKG_DB_OBJECT.gBillTrxType_Rewrite,
                             PKG_DB_OBJECT.gBillTrxType_RollBack
                ) --underwriting transactions
                and   
                pkg_os_token.fn_find_in_set( gSuspend_UW_Tranx_Activity,v_susp_trx)='T' 
             )

            OR (in_batch_id in (PKG_DB_OBJECT.gBatchType_ScheduledEFT,
                                PKG_DB_OBJECT.gBatchType_ScheduledCC)
                and  pkg_os_token.fn_find_in_set( gSuspend_EFTCC_Req_Activity,v_susp_trx)='T' 
                )

            OR 
               ( in_batch_id in ( pkg_db_late_process.gSetType_LateNotice )
                 and  pkg_os_token.fn_find_in_set( gSuspend_LateNotice1_Activity,v_susp_trx)='T' )

            OR 
                 ( in_batch_id in ( pkg_db_late_process.gSetType_LateNotice2 )
                 and  pkg_os_token.fn_find_in_set( gSuspend_LateNotice2_Activity,v_susp_trx)='T' )

            OR 
                 ( in_batch_id in (pkg_db_late_process.gTrxType_PendCancellation)
                 and  pkg_os_token.fn_find_in_set( gSuspend_PendCancel_Activity,v_susp_trx)='T' )

            OR 
                 ( in_batch_id in ( gBillTrxType_Cancellation )
                 and  pkg_os_token.fn_find_in_set( gSuspend_NonPayCancel_Activity,v_susp_trx)='T' )

               OR 
                 ( in_batch_id in ( gBillTrxType_Invoice )
                 and  pkg_os_token.fn_find_in_set( 7,v_susp_trx)='T' )
           then 

                 v_trx_suspended:=1;

       
        end if;



        if v_trx_suspended =1 then 
            pkg_os_logging.sp_log_error
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           'The underwriting transactions are suspended for batch: '||in_batch_id||'.Kindly resume the suspension in order to proceed.' 
            );
           raise Trx_is_suspended ;
        end if;

       Return 1;


end;
*/
FUNCTION  fn_is_batch_trx_suspended
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitrxset_id                in             object.object_id%type,
     in_action_object_type         in             object_bv_value.business_variable_value%type,-- (PolicyTransaction Or BATS)
     in_batch_id                   in             object.object_id%type
)
return number
is
    v_procedure_name         constant  system_log.program_name%type   :=    pkg_name||'fn_is_batch_trx_suspended';
    v_session_control        pkg_os_session.r_dragon_session_control  :=    pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_master_policy_id       object.object_id%type;
    v_policy_term_status     object_bv_value.business_variable_value%TYPE;
    v_susp_trx               varchar2(400):=null;
    v_billing_acc_id         object.object_id%type ;
    v_billing_acc_state      object_bv_value.business_variable_value%TYPE;
    v_trx_suspended          number :=0;
    v_UW_trx_set             varchar2(400);
    Trx_is_suspended         exception;
    v_suspension_child_list  pkg_os_object.t_object_list;
    v_suspension_child_index  number;
    v_suspension_objectState  object_state.object_state_id%type;
     v_responsible_billing_account object.object_id%type;
    v_action_object_type       object.object_id%type ;
    v_current_date             date;
    v_Susp_EffectiveDate       object_bv_value.business_variable_value%type:=null;
    v_Susp_ResumeDate          object_bv_value.business_variable_value%type:=null;
    in_poltrx_date             object_bv_value.business_variable_value%type:=null;
    pragma exception_init(Trx_is_suspended, -30105);
    v_bor_initiated_trx_tf             number; -- OSPRODUCT-4555
    v_Poltrx_CreatedbyUI_ind           number;--UTPRODUCT-4018
    v_pendingCancel_poltrx_id          object.object_id%type ;--UTPRODUCT-4018
    
    v_policy_trx_id            object.object_id%type; -- OSPRODUCT-19599
    v_rolls_fwd_transaction_id object.object_id%type; -- OSPRODUCT-19599                       

Begin

     if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '|||||| in_fitrxset_id '||in_fitrxset_id
                    ||' in_action_object_type' || in_action_object_type ||' in_batch_id '|| in_batch_id
               );

     end if;
     
     if in_action_object_type = pkg_os_constant.gobjType_PolicyTransaction
     then
          --KR 10/15
          -- OSPRODUCT-7572
          /*v_master_policy_id   :=   pkg_os_object_search.fn_object_get_parent_of_type
                                                 (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_fitrxset_id,
                                                           pkg_os_constant.gObjType_Policy
                                                 );
          */
          v_master_policy_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_fitrxset_id);
          --end OSPRODUCT-7572 KR 10/15
          
          v_policy_trx_id := in_fitrxset_id; -- OSPRODUCT-19599
          
          --
          -- Get the responsible billing account id
          --
          select
              responsible_billing_account
          into
              v_responsible_billing_account
          from
              dragon_policy
          where
              policy_id=v_master_policy_id;

          v_current_date := pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, v_master_policy_id);

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Policy Id: '||v_master_policy_id ||
                     'Responsible Billing Account: '||v_responsible_billing_account||
                     'v_current_date: '||v_current_date
               );
          end if;

          pkg_db_suspension.sp_get_active_susp_objects
                      (
                           in_session_id,
                           in_transaction_id,
                           v_master_policy_id,
                           v_responsible_billing_account,
                           v_suspension_child_list,
                           3
                      );

     elsif in_batch_id in (PKG_DB_OBJECT.gBatchType_ScheduledEFT, PKG_DB_OBJECT.gBatchType_ScheduledCC)
     then

          v_master_policy_id  :=   pkg_os_object_io.fn_object_bv_path_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitrxset_id,
                                        '29743646.29721146'
                                   );

          v_responsible_billing_account :=   pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_fitrxset_id);

          /*--
          -- Get the responsible billing account id
          --
          select
               responsible_billing_account
          into
               v_responsible_billing_account
          from
               dragon_policy
          where
               policy_id=v_master_policy_id;*/

          v_current_date := pkg_db_functions.fn_get_policy_current_date(in_session_id, in_transaction_id, v_master_policy_id);

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Policy Id: '||v_master_policy_id ||
                    'Responsible Billing Account: '||v_responsible_billing_account||
                    'v_current_date: '||v_current_date
               );
          end if;

          pkg_db_suspension.sp_get_active_susp_objects
          (
               in_session_id,
               in_transaction_id,
               v_master_policy_id,
               v_responsible_billing_account,
               v_suspension_child_list,
               3
          );

     else
          v_billing_acc_id      :=   pkg_os_object.fn_object_parent_get
                                     (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitrxset_id
                                     );
                                       
          v_current_date := pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, v_billing_acc_id);
          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Billing Account: '||v_billing_acc_id||
                     'CURRENT DATE: '||v_current_date
               );
          end if;

          pkg_db_suspension.sp_get_active_susp_objects
                   (
                        in_session_id,
                        in_transaction_id,
                        null,
                        v_billing_acc_id,
                        v_suspension_child_list,
                        2
                   );
                   
          v_policy_trx_id := pkg_os_object_io.fn_object_bv_get   -- OSPRODUCT-19599
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_fitrxset_id,
                                  pkg_db_object.gbv_BillAccTrxSet_RefPolTrx
                             );

     end if;

     -- OSPRODUCT-19599
     --
     v_rolls_fwd_transaction_id := pkg_os_object_io.fn_object_bv_get
                                   ( 
                                        in_session_id, 
                                        in_transaction_id, 
                                        v_policy_trx_id, 
                                        pkg_os_policy_transaction.gbv_PolicyTrxRollsFwdTrx
                                    );
     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... policy TRX ID= '|| v_policy_trx_id ||', _ref_PolicyTrxRollsFwdTrx='|| v_rolls_fwd_transaction_id ||
               '. Suspensions will '|| case when v_rolls_fwd_transaction_id is not null then 'NOT' else '' end || ' be considered ' ||  case when v_rolls_fwd_transaction_id is not null then 'for this roll-FWD transacation' else '' end
          );
     end if;
     -- / OSPRODUCT-19599

     v_bor_initiated_trx_tf := nvl ( pkg_os_object_io.fn_object_bv_get -- OSPRODUCT-4555
                                   (
                                         in_session_id,
                                         in_transaction_id,
                                         in_session_id,
                                         pkg_db_suspension.gbv_UserSession_BOR_trx
                                   ), pkg_os_constant_enum.gBoolean_False
                                 );
                                      
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Is this BOR Transaction: '||v_bor_initiated_trx_tf
          );
     end if;
          
     --UTPRODUCT-4018
     if (in_batch_id in (PKG_DB_OBJECT.gBillTrxType_CancelNonPay))
     then
          v_Poltrx_CreatedbyUI_ind := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitrxset_id, --v_Cancellation_PT_ID,
                                             gbv_Poltrx_CreatedbyUI_ind     -- Poltrx_CreatedbyUI_ind
                                        );

          if v_session_control.gLogging_Full
          then
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...Created by UI indicator : '||v_Poltrx_CreatedbyUI_ind
              );
          end if;

          if  NVL(v_Poltrx_CreatedbyUI_ind,0)  <>1
          then
               v_pendingCancel_poltrx_id  := fn_recent_pol_trx_of_type(
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_master_policy_id,
                                                  4212
                                             );


               v_Poltrx_CreatedbyUI_ind := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_pendingCancel_poltrx_id,
                                                  gbv_Poltrx_CreatedbyUI_ind     -- Poltrx_CreatedbyUI_ind
                                             );
                                             
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......Created by UI indicator : '||v_Poltrx_CreatedbyUI_ind
                    );
               end if;   
                                                          
          end if;
     end if;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Counts of active Suspension objects: '||v_suspension_child_list.count
          );
     end if;

     v_suspension_child_index :=v_suspension_child_list.first;

     while v_suspension_child_index is not null
     loop

          v_susp_trx     := pkg_os_object_io.fn_object_bv_get
                                      (
                                        in_session_id,
                                        in_transaction_id,
                                        v_suspension_child_list(v_suspension_child_index),
                                        32525248
                                       );
          v_Susp_EffectiveDate :=  to_char(
                                             to_date(pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                v_suspension_child_list(v_suspension_child_index),
                                                pkg_db_suspension.gbv_Suspension_Eff_Date
                                               ),
                                                 pkg_os_constant.DragonDateFormatDefault
                                                ),
                                              pkg_os_constant.DragonDateFormatDefault);
           v_Susp_ResumeDate  :=  to_char(
                                             to_date(pkg_os_object_io.fn_object_bv_get
                                              (
                                                in_session_id,
                                                in_transaction_id,
                                                v_suspension_child_list(v_suspension_child_index),
                                                pkg_db_suspension.gbv_Suspension_Exp_Date
                                               ),
                                                 pkg_os_constant.DragonDateFormatDefault
                                                ),
                                              pkg_os_constant.DragonDateFormatDefault);

          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Created by UI indicator : '||v_Poltrx_CreatedbyUI_ind||
                    ' Suspension Transaction: '||v_susp_trx||
                    ' Suspension effective Date : '||v_Susp_EffectiveDate ||
                    ' Suspension resume Date : '||v_Susp_ResumeDate ||
                    ' IF BOR trx initiated :  '|| v_bor_initiated_trx_tf||
                    ' uw suspend: ' || pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_UW_Tranx_Activity,v_susp_trx) ||
                    ' nonpay cancel suspend: '||pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_NonPayCancel_Activity,v_susp_trx)
               );
          end if;          

          if ( 
                in_batch_id in  (
                                  PKG_DB_OBJECT.gBillTrxType_Endorsement,
                                  PKG_DB_OBJECT.gBillTrxType_NBRewrite,
                                  PKG_DB_OBJECT.gBillTrxType_CancelInsured,
                                  --PKG_DB_OBJECT.gBillTrxType_CancelNonPay,-- UTPRODUCT-4018
                                  PKG_DB_OBJECT.gBillTrxType_Reinstatement,
                                  PKG_DB_OBJECT.gBillTrxType_Renewal,
                                  PKG_DB_OBJECT.gBillTrxType_NewBusiness,
                                  PKG_DB_OBJECT.gBillTrxType_Rewrite,
                                  PKG_DB_OBJECT.gBillTrxType_RollBack
                                ) --underwriting transactions
                and
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_UW_Tranx_Activity,v_susp_trx)='T'
                and 
                v_bor_initiated_trx_tf = pkg_os_constant_enum.gBoolean_False --OSPRODUCT-4555
             )
             AND
             (
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
                and
                (
                  trunc(v_current_date) <= trunc(to_date(v_Susp_ResumeDate,pkg_os_constant.DragonDateFormatDefault))
                  or
                  v_Susp_ResumeDate is null
                )
             )
             OR
             (
                in_batch_id in (PKG_DB_OBJECT.gBatchType_ScheduledEFT,
                                PKG_DB_OBJECT.gBatchType_ScheduledCC
                               )
                and 
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_EFTCC_Req_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
             )
             OR
             ( 
                in_batch_id in ( pkg_db_late_process.gSetType_LateNotice )
                and  
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_LateNotice1_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
             )
             OR
             ( 
                in_batch_id in ( pkg_db_late_process.gSetType_LateNotice2 )
                and  
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_LateNotice2_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
             )
             OR
             ( 
                in_batch_id in (pkg_db_late_process.gTrxType_PendCancellation)
                and  
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_PendCancel_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
             )
             OR
             -- UTPRODUCT-4018
             ( 
                in_batch_id in ( gBillTrxType_Cancellation ) 
                and 
                NVL(v_Poltrx_CreatedbyUI_ind,0)=1
                and  
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_UW_Tranx_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
                and 
                v_bor_initiated_trx_tf = pkg_os_constant_enum.gBoolean_False
             )  --OSPRODUCT-4555
             OR
             ( 
                in_batch_id in ( gBillTrxType_Cancellation ) 
                and 
                NVL(v_Poltrx_CreatedbyUI_ind,0)<>1
                and 
                pkg_os_token.fn_find_in_set( pkg_db_suspension.gSuspend_NonPayCancel_Activity,v_susp_trx)='T'
                and 
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
                and 
                v_bor_initiated_trx_tf = pkg_os_constant_enum.gBoolean_False
             )  --OSPRODUCT-4555
             OR
             ( 
                in_batch_id in ( PKG_DB_OBJECT.gBillTrxType_Invoice )
                and
                pkg_os_token.fn_find_in_set( 7,v_susp_trx)='T'
                and
                trunc(v_current_date) >= trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault))
             )
          then
           
               -- OSPRODUCT-19599
               if in_batch_id in  (
                                  PKG_DB_OBJECT.gBillTrxType_Endorsement,
                                  PKG_DB_OBJECT.gBillTrxType_NBRewrite,
                                  PKG_DB_OBJECT.gBillTrxType_CancelInsured,
                                  PKG_DB_OBJECT.gBillTrxType_CancelNonPay,
                                  PKG_DB_OBJECT.gBillTrxType_Reinstatement,
                                  PKG_DB_OBJECT.gBillTrxType_Renewal,
                                  PKG_DB_OBJECT.gBillTrxType_NewBusiness,
                                  PKG_DB_OBJECT.gBillTrxType_Rewrite,
                                  PKG_DB_OBJECT.gBillTrxType_RollBack
                                )
                  and
                  v_rolls_fwd_transaction_id is NOT null -- OSPRODUCT-19599: do NOT consider suspensions in case of rolling forward when processing OOS underwriting transactions 
               then
                    null;
                    
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... The UW transaction '|| v_policy_trx_id ||'( type=' || in_batch_id ||' ) is about to be suspended, but this is a roll-FWD transaction for transaction_id=' || v_rolls_fwd_transaction_id ||
                              '. We should not block processing of UW roll-RWD transaction even if there is an active suspension that blocks it.'
                         );
                    end if; 
               -- / OSPRODUCT-19599
               else                                  
                    v_trx_suspended:=1;
                      
                    exit;
               end if;

          end if;
          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Suspension did not trigger'
               );
          end if;          

          v_suspension_child_index := v_suspension_child_list.next(v_suspension_child_index);
           
     end loop;


     if v_trx_suspended =1 
     then
          pkg_os_logging.sp_log_error
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        'The underwriting transactions are suspended for batch: '||in_batch_id||'.Kindly resume the suspension in order to proceed.'
          );
          
          raise Trx_is_suspended ;         
                
     else
        -- OSPRODUCT-4959
        -- First check Moratorium Suspensions
        --
        if  v_master_policy_id is not null
            and
            pkg_db_suspension.fn_moratorium_suspension_get
            (
                 in_session_id,
                 in_transaction_id,
                 v_master_policy_id,
                 in_activity_id        => -1, -- this will be ignored because the in_TrxType_id is passed, But pass -1 in case of in_batch_id = NULL, so any other activity will not be checked.
                 in_TrxType_id         => in_batch_id -- this is Transaction Type ID (inspite of its name)
            ) is not null
        then
        
              pkg_os_logging.sp_log_error
                        (
                          in_session_id,    --OSPRODUCT-23728 Added log statement
                          in_transaction_id,
                          v_procedure_name,
                          'The underwriting transactions are suspended for batch: ' ||
                          in_batch_id || 'for the policy' || v_master_policy_id ||
                          '.Kindly resume the suspension in order to proceed.'
                         );
             raise Trx_is_suspended ;
        end if;
        -- /OSPRODUCT-4959
     end if;

     Return 1;
end fn_is_batch_trx_suspended;
--------------------------------------------------------------------------------------------------------
--  OSBILLING-6897 Start 
function fn_apply_holiday_rule
(
    in_session_id               in        object.object_id%type,
    in_transaction_id           in        object.object_id%type,
    in_date_value               in        date,
    in_pol_trx_id                 in        object.object_id%type, -- OSBILLING-6897  
    in_compliance_matrix_tf     in        char default 'F'       -- OSBILLING-6897  
)
return date
is

    v_procedure_name                 constant  system_log.program_name%type   :=   pkg_name||'fn_apply_holiday_rule';
    v_session_control                pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    v_restriction_ssh_tf             char(1) := 'F';-- number; --UTPRODUCT-2199
    v_jurisdiction_id                number;
    v_target_date                    date;
    v_policy_id                        object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_pol_trx_id);
    v_transaction_type_id            dragon_policy_trx.policy_trx_type_id%type;
    v_product_id                     pd_product.pd_product_id%type; --UTPRODUCT-2199
    v_program_id                     object_bv_value.business_variable_value%type; --UTPRODUCT-2199

begin

     v_transaction_type_id :=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,in_pol_trx_id, pkg_os_policy_transaction_type.gbv_Policy_Trx_Type);

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Applying Holiday rule on the date '|| in_date_value || ' for policy : '||v_policy_id || 
               ':Policy Transaction ID:' || in_pol_trx_id || 
               ':Policy Transaction Type ID:' || v_transaction_type_id
          );
     end if;

     -- UTPRODUCT-2199
     v_product_id   :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id , 
                              in_transaction_id,
                              v_policy_id,
                              gbv_policy_product_id
                        );
     
     -- UTPRODUCT-2199
     v_program_id  :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id , 
                              in_transaction_id,
                              v_policy_id,
                              gbv_policy_program_id
                        ); 

     v_target_date :=  in_date_value;

     if in_compliance_matrix_tf = 'F' then 

        v_target_date:= pkg_base_calendar.fn_get_next_available_day(in_session_id, in_transaction_id, v_policy_id, v_target_date);--Skips Saturday, Sunday and Holiday

     else   -- in_compliance_matrix_tf is true.  

          begin
               Select
                    policy_jurisdiction_id
               into
                    v_jurisdiction_id
               from
                    dragon_policy
               where
                    policy_id = v_policy_id;

          exception when no_data_found
               then
               v_jurisdiction_id := 0;
          end;

----UTPRODUCT-1841 -- Changed table from ALL_NA_0_CANCEL_DAYS to PD_STATE_COMPLIANCE
          begin
               select
                    ps.sat_sun_hol_tf
               into
                    v_restriction_ssh_tf
               from
                    pd_state_compliance ps
               where
                    ps.jurisdiction_id = v_jurisdiction_id-- abiding compliance matrix
               and 
                    ps.transaction_type_id = pkg_os_exp.fn_evaluate_expression(in_session_id, in_transaction_id,in_pol_trx_id,10055648)
               and 
                    ps.pd_product_id = v_product_id    -- UTPRODUCT-2199 
               and 
                    (                                                   -- UTPRODUCT-2199
                    ( v_program_id  is null and ps.program_id is null)
                    or 
                    (ps.program_id  =v_program_id )    
                    );                        
          exception 
               when no_data_found  then
                    v_restriction_ssh_tf := 'F';
          end;


          if v_restriction_ssh_tf = 'T' -- Apply restriction rule
          then

             v_target_date:= pkg_base_calendar.fn_get_next_available_day(in_session_id, in_transaction_id, v_policy_id, v_target_date);--Skips Saturday, Sunday and Holiday

          end if;

    end if;    --OSBILLING-6897   

    if v_session_control.gLogging_Full
             then
               pkg_os_logging.sp_log
               (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '...Modified date '|| v_target_date || 
                 ' :Restriction SSH TF: ' || v_restriction_ssh_tf ||  -- UTPRODUCT-2199
                 ' :Jurisdiction ID: ' ||v_jurisdiction_id ||
                 ' :Product ID: '||  v_product_id ||
                 ' :Program ID: ' ||v_program_id
               );
    end if;

    return v_target_date;

end fn_apply_holiday_rule;
--  OSBILLING-6897 End

---------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-6149
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_reins_tolerence_days
--
--   %USAGE
--        This function returns the reinstatement tolerence days to decide whether the policy should be reinstated or not.
--
--   %ALGORITHM
--        if in_compliance_matrix_tf flag is true
--    then
--      get reinstatement tolerence days from compliance table PD_STATE_COMPLIANCE(non pay cancel days bv) based on Jurisdiction and LOB
--    Else
--     Use the PD property value to fetch the reinstatement tolerence days.
--
--
--   %PARAM    in_pol_trx_id                    Policy Transaction ID
--   %PARAM        in_compliance_matrix_tf          T or F
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_reins_tolerence_days
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_pol_trx_id                 in             object.object_id%type,
     in_compliance_matrix_tf       in             char default 'F'         
)
return number
is
     v_procedure_name                  constant  system_log.program_name%type   :=   pkg_name||'fn_get_reins_tolerence_days';
     v_session_control                 pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;    
     v_policy_id                    object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_pol_trx_id);     
     v_reinstat_tolrnc_days         number;

begin
      if v_session_control.gLogging_Full
             then
               pkg_os_logging.sp_log
               (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '...Getting Reinstate Tol days for policy txn: '|| in_pol_trx_id
               );
    end if; 
      --if false, get reinstatement tolerence days from PD_PROPERTY
     if in_compliance_matrix_tf = 'F' then 
                      
          v_reinstat_tolrnc_days := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id , 11146);  
                    
                    
          -- Raise Exception for v_reinstat_tolrnc_days = null 
          if v_reinstat_tolrnc_days is null then 
                    
             pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_reinstate_tolerence_days',
                    '..Unable to determine the vlaue of PD Property 11146  : '||in_pol_trx_id
               );
                         
             raise no_data_found;
                       
          end if;                 
         
     else -- GET from COMPLIANCE TABLE ALL_NA_0_CANCEL_DAYS -- NOW PD_STATE_COMPLIANCE --UTPRODUCT-1841

          -- Reinstatement Tolerence days based on product/LOB and jurisdiction. 
          v_reinstat_tolrnc_days := pkg_os_object_io.fn_object_bv_get (in_session_id, in_session_id, in_pol_trx_id, gbv_NonPayCanelDays);
                                             
          -- Raise Exception for v_reinstat_tolrnc_days = null 
          if v_reinstat_tolrnc_days is null then 
                    
             pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    'fn_get_reinstate_tolerence_days',
                    '.. v_reinstat_tolrnc_days is null..Unable to retrive reinstate tolerence days for :  '||in_pol_trx_id
               );
                         
             raise no_data_found;
                       
          end if;           

     end if;

     return v_reinstat_tolrnc_days;

Exception
  when no_data_found
  then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               'fn_get_reins_tolerence_days',
               '..Unable to retrive reinstate tolerence days for : '||in_pol_trx_id
          );

end fn_get_reins_tolerence_days;
-----------------------------------------------------------------------------------------------------------------------------------------------------
        

--OSBILLING-7829 start
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_processed_date
--
--   %USAGE
--        Given Policy transaction policy id, it will get the processed date of parent policy transaction
--
--   %ALGORITHM
--        1. Fetch parent Policy Transaction
--        2. Identify if policy transaction has BOR associated
--        3. Get processed date of policy transaction.
--
--
--   %PARAM    in_session_id                      Session ID
--   %PARAM    in_transaction_id                  Transaction ID
--   %PARAM    in_policy_image_id                 PTP ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_processed_date
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id            in             object.object_id%type
) return date
as  
               
     v_policy_transaction_id         object.object_id%type;
     v_current_date_time             date := null;
     v_action_object_type            object_type.object_type_id%type;

begin

     v_action_object_type := pkg_os_object.fn_object_type_get
                                (
                                      in_session_id, 
                                      in_transaction_id, 
                                      in_action_object_id
                                );
     
     If v_action_object_type = 2276904 then
          v_policy_transaction_id := pkg_os_object.fn_object_parent_get
                                     (
                                           in_session_id, 
                                           in_transaction_id, 
                                           in_action_object_id 
                                     );
     elsif v_action_object_type = 629 then
          v_policy_transaction_id := in_action_object_id;
     end if;
     
     v_current_date_time := trunc
                            (
                                 to_Date
                                 (
                                      pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_transaction_id,
                                            pkg_db_constant.gbv_Orig_Transaction_Date
                                      ), pkg_os_constant.DragonDateFormatDefault
                                 ) 
                            );

          return v_current_date_time;
end fn_get_processed_date;
--OSBILLING-7829 end

--OSPRODUCT-931 Starts
function fn_payment_plan_schedule_tf 
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in            object.object_id%type
)
     return number
as

     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                     constant system_log.program_name%type := pkg_name||'fn_payment_plan_schedule_tf'; 
     v_payment_plan_list                  pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_payment_plan_sched_list            pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_multipayer_enabled_tf              object_bv_value.business_variable_value%type;
     v_index                              number;
     v_pmt_plan_schel_element_cnt         object_bv_value.business_variable_value%type;
     v_sched_payment_index                number;
     v_pmt_plan_schel_elemnt_flg          number;   
     v_payer_list                         pkg_db_multipayer.t_payer_tab;
     v_payer_index                        object_bv_value.business_variable_value%type;
     v_placeholder                        number;
     v_sched_elm_flag_cnt                 number:=0;
     ln_count                             object_bv_value.business_variable_value%type;
     v_ptp_payer_obj_id                   object_bv_value.business_variable_value%type;
     v_scheduled_element_list             pkg_os_object.t_object_list := pkg_os_object.gnull_object_list; -- OSPRODUCT-2605
     v_chosen_payplan_id                  object.object_id%type; -- OSPRODUCT-2605
begin

    if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,               
               '.. Action Object ID: ' || in_action_object_id 
           );

     end if;

    -- Get the multipayer flag
    v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id, 
                                          in_transaction_id, 
                                          in_action_object_id, 
                                          pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
                                      );

     if nvl(v_multipayer_enabled_tf, 2 ) = 2 then    

         -- OSPRODUCT-2605 Start
         v_chosen_payplan_id         :=  pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
                                                  gbv_PolicyRefChosenPlan
          );
                                             
          if v_chosen_payplan_id is not null then 

               v_scheduled_element_list.delete; 

               pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                    v_chosen_payplan_id,
                    gObjType_ScheduledElement,
                    v_scheduled_element_list
                    );
                         
               if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                                                           (
                                                                 in_session_id,
                                                                 in_transaction_id,
                         v_procedure_name,
                         ': Chosen Payment Plan ID:' ||v_chosen_payplan_id || 
                         ':Element Count:' || v_scheduled_element_list.count  
                                                            );
               end if; 
               if v_scheduled_element_list.count =  0 then 
                                                                                        
                    return 2;
                                                                                        
                         end if;
          end if;       
          
          if v_session_control.gLogging_Full then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Chosen Payyment Plan Has the elements'                              
                );
          end if; 
                           
          return 1;                                         
     else 
             pkg_db_multipayer.sp_ptp_payers_get
               (
                    in_session_id         => in_session_id,
                    in_transaction_id     => in_transaction_id,
                    in_ptp_object_id      => in_action_object_id,
                    io_payer_list         => v_payer_list,           -- indexed by chosen pay plan ID
                    in_print_list         => 'Y',
                    in_index_by           =>  pkg_db_multipayer.g_PayerGet_idx_BilingAccount
               );
              v_payer_index := v_payer_list.first;
              while v_payer_index  is not null loop
                -- OSPRODUCT-2605 Start
                v_chosen_payplan_id         :=  pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payer_list(v_payer_index).PTPayer_object_id,
                                                            pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan
                                                       );
                if v_chosen_payplan_id is not null then 
                    v_scheduled_element_list.delete; 
                             pkg_os_object_search.sp_object_children_of_type_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                         v_chosen_payplan_id,
                         gObjType_ScheduledElement,
                         v_scheduled_element_list
                              );
                    if v_session_control.gLogging_Full then
                         pkg_os_logging.sp_log
                                                                          (
                                                                                in_session_id,
                                                                                in_transaction_id,
                              v_procedure_name,
                              '.. Payor Object ID: ' || v_payer_list(v_payer_index).PTPayer_object_id || 
                              ':Element Count:' || v_scheduled_element_list.count||
                              ':Chosen Payplan ID:' ||v_chosen_payplan_id
                                                                           ) ;
                    end if;                    
                    if v_scheduled_element_list.count =  0 then 
                                                                         
                         return 2;
                                     end if ;
               end if;      
                    
                              v_payer_index := v_payer_list.next (v_payer_index);
                 end loop;  

          if v_session_control.gLogging_Full then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. All Payors Has the elements'                              
                );
          end if;  
                        return 1;
          -- OSPRODUCT-2605 End

                  end if;

end fn_payment_plan_schedule_tf;
--OSPRODUCT-931 Ends
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_req_pendingcancel_date_get
--
--   %USAGE
--        The method FN_REQ_PENDINGCANCEL_DATE_GET was basically written to the determine the DATE on or after the that 
--        the PendingCancellation policy transaction is to be generated as per defined the DB_LATE_PROFILE_INSTR instruction. 
--
--   %ALGORITHM
--        Return the pending cancellation date based on the configuration in compliance matrix table.
--
--
--   %PARAM   in_session_id                Session ID 
--   %PARAM   in_transaction_id            Transaction ID 
--   %PARAM   in_policy_id                 Policy ID           
--   %PARAM   in_due_date                  Due date for a financial fitem.           
--   %PARAM   in_compliance_matrix_tf      Flag for Compliance Matrix (T/F) T-Calculation based on MD table, F- Calculation based on PD properties.
--   %PARAM   in_current_date              Policy Current Date 
--   
---------------------------------------------------------------------------------------------------------------------------------------------------
--UTPRODUCT-690 -- UTPRODUCT-924
function fn_req_pendingcancel_date_get
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type,
     in_due_date                   in             date,
     in_compliance_matrix_tf       in             char default 'F',
     in_current_date               in             date default null
)
return date

is
      v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_get_req_days_for_cancel';
      v_session_control                       pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
      v_grace_jurisd_canc_days                number;
      v_days_for_priting                      number;
      v_mailing_days                          number;
      v_caculated_required_days               number;
      v_policy_current_date                   date;
      v_transaction_type_id                   dragon_policy_trx.policy_trx_type_id%type :=2; -- 2 Cancel by Company
      v_jurisdiction_id                       number;
      v_curterm_equity_date                   date; 
      v_min_overdue_day_noic                  number;
      v_noic_date                             date; 
      v_product_id                            pd_product.pd_product_id%type; --UTPRODUCT-2199
      v_program_id                            object_bv_value.business_variable_value%type; --UTPRODUCT-2199


begin

     v_min_overdue_day_noic   :=  pkg_os_product.fn_product_property_get ( in_session_id, in_transaction_id, in_policy_id , gv_min_overdue_day_noic ); 
     v_curterm_equity_date    := trunc(to_date(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_policy_id, gv_equity_date),pkg_os_constant.DragonDateFormatDefault));
     
      
     if in_current_date is not null then
        v_policy_current_date :=  in_current_date;
     else
        v_policy_current_date := trunc(to_date(pkg_db_functions.fn_get_policy_current_date ( in_session_id , in_transaction_id , in_policy_id ),pkg_os_constant.DragonDateFormatDefault));
     End if;

     -- UTPRODUCT-2199
     v_product_id   :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id , 
                              in_transaction_id,
                              in_policy_id,
                              gbv_policy_product_id
                        );

     -- UTPRODUCT-2199
     v_program_id  :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id , 
                              in_transaction_id,
                              in_policy_id,
                              gbv_policy_program_id
                        ); 

     if in_compliance_matrix_tf = 'F' then

        v_mailing_days :=  pkg_os_product.fn_product_property_get ( in_session_id, in_transaction_id, in_policy_id , gv_v_mailing_days );

     else   -- in_compliance_matrix_tf is true.

          begin
                    Select
                         policy_jurisdiction_id
                    into
                         v_jurisdiction_id
                    from
                         dragon_policy
                    where
                         policy_id = in_policy_id;

               exception when no_data_found
                    then
                    v_jurisdiction_id := 0;
               end;

               begin
                    select
                         non_pay_days, ps.mailing_days --mail_days
                    into
                         v_grace_jurisd_canc_days,v_mailing_days
                    from
                         pd_state_compliance ps --all_na_0_cancel_days  -- UTPRODUCT-2199
                    where
                         ps.jurisdiction_id = v_jurisdiction_id -- UTPRODUCT-2199
                    and
                         ps.transaction_type_id = v_transaction_type_id -- UTPRODUCT-2199
                    and 
                         ps.pd_product_id = v_product_id     
                    and 
                         (
                         ( v_program_id  is null and ps.program_id is null)
                         or 
                         (ps.program_id  =v_program_id )    
                         );
               exception
                    when no_data_found  then
                         v_mailing_days := 0;
                         v_grace_jurisd_canc_days:=0;
               end;

         end if;    



     v_days_for_priting := 0 ;



     v_caculated_required_days := v_grace_jurisd_canc_days + v_days_for_priting + v_mailing_days;


     if v_curterm_equity_date is not null and ((v_curterm_equity_date - v_caculated_required_days) >=  in_due_date) then 

          v_noic_date := v_curterm_equity_date - v_caculated_required_days;
          
      else     
      
          v_noic_date := in_due_date + v_min_overdue_day_noic;
     
      end if;         

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log

            (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..State Mandated Days:' || v_grace_jurisd_canc_days ||
               ':Mailing Days:' || v_mailing_days ||
               ':Days for Priting:' || v_days_for_priting ||
               ':Caculated Required Days:' || v_caculated_required_days||
               ':Equity Date:'|| v_curterm_equity_date ||
               ':NOIC Date:'|| v_noic_date ||
               ':Current Date:' || v_policy_current_date
            );
      end if;


     return trunc(v_noic_date);

     Exception
      when others
      then
         pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Exception while executing fn_get_req_days_for_cancel. '
               ||'  Error Msg: '
               ||sqlerrm
          );

end fn_req_pendingcancel_date_get;
--UTPRODUCT-690 -- UTPRODUCT-924
---------------------------------------------------------------------------------------------------------------------------------------------------
------OSPRODUCT-1085 Starts-------
function fn_get_billingaccount_cash
(
     in_object_id in object.object_id%type -- Billing Account ID
)
return number
is
     v_amount number ;
begin
        select
               nvl(total_cash,0)
          into
               v_amount
          from
               dragon_billingaccount
          where
               billingaccount_id = in_object_id;
         return v_amount;
end fn_get_billingaccount_cash;
------  OSPRODUCT-1085 Ends---------------------------------------
--osproduct-1216
function fn_RewriteChangePolNoIndicator
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_number              in           VARCHAR2 --rewrite policy number
)
return number
is

     var_policy_id                           object.object_id%type;
     var_last_policytrx                      object.object_id%type;
     var_change_policy_number                number;
     v_change_policy_number                  constant object_type.object_type_id%type := 29320014;
     var_BORd_policy                         number;
begin

       select
               policy_id
          into
               var_policy_id
          from
               dragon_policy dp
          where
               dp.policy_number =   in_policy_number and dp.policy_object_state_id = 20415; -- Updated with State ID since after BOR process there are two policies 
                                                                                            -- with the same policy number: Old Cancelled and New Rewritten.

    --Get the last transaction rewrite of the previous policy 
     select 
          max(POLICY_TRX_ID)--OSPRODUCT-5574
     into 
          var_last_policytrx 
     from 
          DRAGON_POLICY_TRX
     where
          POLICY_ID = var_policy_id 
     and 
          POLICY_TRX_TYPE_ID=pkg_os_constant.gPolicyTran_Rewrite
     and
          policy_trx_object_state_id = pkg_os_constant.gObjState_TransactionProcessed--OSPRODUCT-5574
     /*and 
          POLICY_TRX_GENERIC_INSTANCE= (
                                             select 
                                                  MAX(POLICY_TRX_GENERIC_INSTANCE) 
                                             from 
                                                  DRAGON_POLICY_TRX
                                             where
                                                  POLICY_ID=var_policy_id 
                                             and 
                                                  POLICY_TRX_TYPE_ID=3604 
                                        )*/
     ;--OSPRODUCT-5574

    var_change_policy_number:= nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,var_last_policytrx,v_change_policy_number),0);

    --OSBILLING-7827 start
    var_BORd_policy:= nvl(pkg_os_object_io.fn_object_bv_path_get(in_session_id,in_transaction_id,var_last_policytrx,'22605205.29613401'),0);

    If var_change_policy_number <> 0 or  var_BORd_policy <> 0
    then
          RETURN 1;
    else 
          Return 0;
    end if;
    --OSBILLING-7827 end
          exception
             when no_data_found
             then
             return 0;

end fn_RewriteChangePolNoIndicator;

-----------------------------------------------------------------------------------------------------------------     
--OSPRODUCT-2434 start
function fn_consolidated_sched_cnt
(
     in_session_id             in        object.object_id%type,
     in_transaction_id         in        object.object_id%type,
     in_billing_acc_id     in     object.object_id%type
) return number
as
     v_count                   number := 0;
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;     
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_consolidated_sched_cnt';     
begin
               
             
        select  count(distinct MASTER_POLICY_ID)
            into  v_count        
          from dragon_ba_paymentcomponent dbp
        where dbp.billing_account_id =  in_billing_acc_id ;
           if v_session_control.gLogging_Full then               
      
                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '.. Billing Account ID: ' || in_billing_acc_id ||
                     '.. Master policy count: ' || v_count
                );
                            
           end if;

   return v_count;

end fn_consolidated_sched_cnt;
--OSPRODUCT-2434 end
-----------------------------------------------------------------------------------------------------------------  

-- OSPRODUCT-2839
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_set_inst_reinstate_balance
--
--   %USAGE
--        This procedure sets the balance amount of the installments of a reinstatement transaction
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                session ID
--   %PARAM     in_transaction_id            transaction ID
--   %PARAM     in_policy_transaction_id     installment ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- used the existing signature
function fn_return_reinstatement_due
(
     in_session_id                  in        object.object_id%type,
     in_transaction_id              in        object.object_id%type,
     in_policy_term_id              in        object.object_id%type
)
return number
as 

     v_procedure_name       		     constant system_log.program_name%type     	:= 'fn_return_reinstatement_due';
     v_session_Control      		     pkg_os_session.r_dragon_session_control 	:= pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_payment_due                      number  := 0 ;
     
begin
     
     begin
          select
               sum(nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, installment_id, pkg_db_constant.gbv_InstallmentReinstateBalAmt),0)) 
          into
               v_payment_due
          from 
               dragon_scheduled_installment 
          where
               policy_term_id = in_policy_term_id
          and
               current_pay_plan_inst = 'Yes'
          and
               trunc(billing_due_date) <= trunc(sysdate);
     end;
     
     if v_session_control.gLogging_Full then
          
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Amount returned '  || v_payment_due
          );
          
     end if; 
     
     if v_payment_due < 0 then
     
          v_payment_due := 0;
          
     end if;
     
     return v_payment_due;
     
end fn_return_reinstatement_due;

-----------------------------------------------------------------------------------------------------------------  

-- UTPRODUCT-1045
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_cal_check_digit
--
--   %USAGE
--        This function calculates the chheck digit and append it to the input
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                session ID
--   %PARAM     in_transaction_id            transaction ID
--   %PARAM     in_bar_code                  bar code
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_cal_check_digit
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_bar_code                        in             number
)
return number
is

     v_session_control   pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name    constant  system_log.program_name%type       :=   pkg_name||'fn_cal_check_digit';
     v_bar_code          number;
     digit               int;
     init_digit          int;
     v_count             int  :=   0 ;
     v_sum               int  :=   0 ;
     v_check_digit       int  :=   0 ;
     v_len               int  := 0;


begin
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
               '...... Calculating Check digit for object id: '|| in_bar_code);

     end if;

     v_bar_code := in_bar_code;
     
     if v_bar_code >= 2
     then
          v_len := trunc(1/log(v_bar_code, 10)) ; --this is to calculate the length of the number minus 1
     else
          v_len := 0;
     end if;
     
     while v_bar_code > 0
     loop
          digit     :=   mod(v_bar_code,10);
          v_bar_code     :=   (v_bar_code-digit)/10;
          if mod(v_len,2) = 0
          then
               init_digit     :=   digit*2;
          else
               init_digit     :=   digit*1;
          end if;
          if init_digit/10 >= 1
          then
               init_digit     :=   mod(init_digit,10) + floor((init_digit)/10);--UTPRODUCT-2180
          end if;
          v_sum     :=   v_sum + init_digit;
          v_len     :=   v_len - 1;
     end loop;
     v_check_digit  :=   10 -  case when mod(v_sum,10) = 0 then 10 else mod(v_sum,10) END ;
     return v_check_digit;
     --return v_sum;
end fn_cal_check_digit;


-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-2679
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_delete_invoice_transaction
--
--   %USAGE
--        This procedure deletes current AdHoc invoice transaction for a Policy.
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                session ID
--   %PARAM     in_transaction_id            transaction ID
--   %PARAM     in_action_object_id          policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_delete_invoice_transaction
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_action_object_id           in        object.object_id%type
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant  system_log.program_name%type       :=   pkg_name||'sp_delete_invoice_transaction';
     v_policy_trx_id                    dragon_policy_trx.policy_trx_id%type;

begin

    select
        max(policy_trx_id)
    into 
        v_policy_trx_id
    from
        dragon_policy_trx
    where
        policy_id = in_action_object_id
    and 
        policy_trx_type_id = gPolInvoiceTrxTypeId;

    if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log
        (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '.. Policy ID: ' || in_action_object_id ||
             '..To delete invoice v_policy_trx_id ID: ' || v_policy_trx_id
         );

    end if;

    pkg_os_object.sp_object_delete( in_session_id,
                                    in_transaction_id,
                                    in_action_object_id, 
                                    v_policy_trx_id, 
                                    pkg_os_constant.gobjtype_policytransaction
                                  );

    if v_session_control.gLogging_Full then               

        pkg_os_logging.sp_log
        (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '.. Policy ID: ' || in_action_object_id ||
             '..Deleted v_policy_trx_id ID: ' || v_policy_trx_id
         );

    end if;

exception when others then
        pkg_os_logging.sp_log
        (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             'Error while fetching variable : v_policy_trx_id '
         );
     raise;

end sp_delete_invoice_transaction;
    
-- OSPRODUCT-4111
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_aging_status
--
--   %USAGE
--        This function calculates the aging status id
--
--   %ALGORITHM
--
--
--   %PARAM     in_session_id                Session ID
--   %PARAM     in_transaction_id            Transaction ID
--   %PARAM     in_installment_id            Installment ID
--   %PARAM     in_policy_id                 Policy ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_installment_aging
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_installment_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type     
)
return number
is

     v_aging_status_id   dragon_fitem.aging_status_id%type;

begin

     begin
          select
               aging_status_id
          into
               v_aging_status_id
          from
               (select
                     aging_status_id,
                     fitem_id,
                     min(fitem_id) over(partition by policy_id,installment_number) first_fitem_id
                from 
                     dragon_fitem
                where
                     policy_id=in_policy_id
                and 
                     installment_id=in_installment_id
                and
                     fitem_type_id = gFItemType_Debit
                and
                     balance > 0
                and
                     fitem_category_id not in (gFItem_Category_Cash,gFItem_Category_Writeoff,gFItem_Category_Comm,gFItem_Category_DefPremComm,pkg_db_constant.gFItem_Cat_Cont_Commission)
                and
                     fitem_sub_category_id not in (pkg_db_billing_modify.gFitem_SubCat_FullPayDiscount) 
                and  
                     value_stream is null
                and  
                     billing_account_id not in (select billingaccount_id from dragon_billingaccount where NVL(account_type_id,0)  in (1501,0))--UTPRODUCT-2513
               )
          where
              fitem_id=first_fitem_id;
     exception
          when others then
               v_aging_status_id:=null;
     end;

     return v_aging_status_id;

end fn_get_installment_aging;


--OSPRODUCT-3715
function fn_get_curr_disb_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccount             in             object.object_id%type

) return number
is   
     v_amount  number;
begin
     select 
          nvl(sum(curr_disbursement_amount),0)
     into
          v_amount
     from 
          dragon_fitem
     where 
          billing_account_id = in_billingaccount;

     return v_amount;

end fn_get_curr_disb_amt;
---------------------------------------------------------------
--OSPRODUCT-8671
function fn_get_policy_curr_disb_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_id                  in             object.object_id%type

) return number
is   
     v_amount  number;
begin

     select
          sum(nvl( CURR_DISBURSEMENT_AMOUNT,0))
     into
          v_amount
     from
          dragon_fitem f
     join
          dragon_policy p on (p.policy_id = f.policy_id)
     where
          f.policy_id  =  in_policy_id
     and  
          value_stream is null
     and
          (
             f.billing_account_id = p.responsible_billing_account
             or
             exists (    
                      select 
                           1
                      from  
                           dragon_policy_term_payer tp
                      where
                           tp.payer_entity_id = f.entity_id --  do not remove !!! if not used, there will be the FULL SCAN of dragon_policy_term_payer
                      and
                           tp.policy_id= f.policy_id                                
                      and 
                           tp.payer_billing_account_id =  f.billing_account_id 
                    ) 
          )
     ;

     return v_amount;

end fn_get_policy_curr_disb_amt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_category_get
--
--   %USAGE
--        This function returns fitem category ID for a sub category id. 
--
--   %ALGORITHM
--       This function returns fitem category ID for a sub category id .
--
--
--   %PARAM     in_fitem_category_id              Fitem Category ID
--   %PARAM     in_fitem_category_set_id          Fitem Category Set ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- Added OSPRODUCT-3380
function fn_fitem_category_get
(
     in_fitem_sub_category_id       in        number
)
return number
is

     v_fitem_category_id                      number;

begin

     select
          sc.db_fitem_category_id 
     into 
          v_fitem_category_id
     from 
          db_fitem_sub_category sc 
     where 
          sc.db_fitem_sub_category_id = in_fitem_sub_category_id;

     return v_fitem_category_id;

end fn_fitem_category_get;
-- OSPRODUCT-3380
-----------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------
--OSPRODUCT-4399 
function fn_get_policy_frm_bats
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccounttrxset       in             object.object_id%type

) return varchar2
is
     v_fitransaction_list          pkg_os_object.t_object_list;
     v_count                       number;
     v_current_fitransaction       object.object_id%type;
     v_associated_policy           object.object_id%type;
     v_action_policy               object.object_id%type;
     v_policy_number               varchar2(50);
begin
     begin
          select              POLICY_NUMBER
          into                v_policy_number
          from                dragon_fitransaction
          where               batch_ref_no = in_billingaccounttrxset
          and                 policy_id is not null
          group by            POLICY_NUMBER;
     exception
          when others then
               v_policy_number := null;
     end;--OSPRODUCT-16734
     return v_policy_number;
exception
     when others 
     then
          return null;
end fn_get_policy_frm_bats;

------------------------------------------------------------------------------------------

function  fn_ba_susp_eff_date_check_tf
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_susp_eff_date              in             date,
     in_object_id                  in             object.object_id%type
)
return char
is

     v_policy_effective_date              date;
     v_flag_tf                            char := 'F';
     cursor    c_policies
     is
          select
               policy_id
          from
               dragon_policy
          where
               responsible_billing_account = in_object_id;

begin

     for  r_policy  in   c_policies loop
        if v_flag_tf='T'
        then 
            exit;
        end if;
		     v_policy_effective_date :=to_date(pkg_os_object_io.fn_object_bv_get(
                                                                              in_transaction_id,
                                                                              in_transaction_id,
                                                                              r_policy.policy_id,
                                                                              504
                                                                              ),'YYYYMMDDHH24MISS');         
                                           
                              
          if trunc(in_susp_eff_date) < trunc(v_policy_effective_date)
          then 
		         v_flag_tf :='T';
             return v_flag_tf;
          end if;
     end loop;
 return v_flag_tf;
          
end  fn_ba_susp_eff_date_check_tf;

function fn_get_most_recent_payment
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     --in_policy_id                  in             object.object_id%type  --OSPRODUCT-13651
     in_object_id                  in             object.object_id%type

) return object.object_id%type
is   
     v_payment_transaction_id  object.object_id%type;
     v_object_type_id          object_type.object_type_id%type := pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,in_object_id);  --OSPRODUCT-13651
begin
     if v_object_type_id = pkg_os_constant.gObjType_policy
     then 
         select 
                max(CREATOR_FITRANSACTIONSET_ID) 
         into 
                v_payment_transaction_id
         from 
                dragon_fitem 
         where 
                policy_id = in_object_id
         and 
                FITEM_CATEGORY_ID = gFItem_Category_Cash
         and
                FITEM_BATCH_TYPE_ID <>gFITrxType_Reversal    
          and 
          (
               FITEM_BATCH_TYPE_ID <> gBatch_CashTransferBatch
               or
               (
                    FITEM_BATCH_TYPE_ID = gBatch_CashTransferBatch 
                    and  not exists 
                    (
                    select
                         *
                    from
                         dragon_billingaccounttrxset dbt
                    where
                         BATCH_TYPE_ID=gBatch_CashTransferBatch
                    and 
                         CREATED_BY_BILLINGTRXSET=CREATOR_FITRANSACTIONSET_ID
                    )
               )
          )     ;--UTXPRODUCT-347
         
     elsif v_object_type_id = gObjType_BillingAccount   --OSPRODUCT-13651
     then
          select
                 max(CREATOR_FITRANSACTIONSET_ID) 
          into 
                 v_payment_transaction_id
          from 
                 dragon_fitem 
          where 
                 billing_account_id = in_object_id
          and 
                 FITEM_CATEGORY_ID = gFItem_Category_Cash
          and 
                 FITEM_BATCH_TYPE_ID <>gFITrxType_Reversal       
          and 
          (
               FITEM_BATCH_TYPE_ID <> gBatch_CashTransferBatch
               or
               (
                    FITEM_BATCH_TYPE_ID = gBatch_CashTransferBatch 
                    and  not exists 
                    (
                    select
                         *
                    from
                         dragon_billingaccounttrxset dbt
                    where
                         BATCH_TYPE_ID=gBatch_CashTransferBatch
                    and 
                         CREATED_BY_BILLINGTRXSET=CREATOR_FITRANSACTIONSET_ID
                    )
               )
          )     ;--UTXPRODUCT-347
     else
         return null;
     end if;
     
     return v_payment_transaction_id;

exception
     when others then
          return null;
end fn_get_most_recent_payment;					  

function fn_get_associated_policy
(
      in_session_id                 in             object.object_id%type,
      in_transaction_id             in             object.object_id%type,
      in_policy_id                  in             object.object_id%type,
      in_BillingaccountId           in             Object.Object_Id%Type

)
return varchar2
is
     v_idx                       binary_integer;
     v_object_list               pkg_os_object.t_object_list;
     v_payer_ba_object_list      pkg_os_object.t_object_list;
begin

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_Id              =>    in_session_id,
          in_transaction_id          =>    in_transaction_id,
          in_object_id               =>    in_policy_id,
          in_child_object_type_id    =>    pkg_db_multipayer.gObjType_PTPPayer,
          in_object_list             =>    v_object_list
     );


     v_idx := v_object_list.first;

     while v_idx is not null
     loop

          v_payer_ba_object_list(  pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_object_list(v_idx),
                                        pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                   )
                                 )
                                 :=v_idx;

         v_idx := v_object_list.next(v_idx);

     end loop;

     if v_payer_ba_object_list.exists(in_BillingaccountId) then
          return 'T';
     else
          return 'F';
     end if;

exception
       when Others Then
            return null;
end fn_get_associated_policy;
--OSPRODUCT-6844
function fn_is_down_payment_paid
(
     in_session_id                      in          system_log.user_session_id%type,
     in_transaction_id                  in          system_log.transaction_id%type,
     in_policy_term_id                  in          object.object_id%type
)
return char
is
     v_procedure_name                   constant  system_log.program_name%type := pkg_name||'fn_is_down_payment_paid';
     v_policy_id                        object.object_id%type;
     v_ptp_id                           object.object_id%type;
     v_multipayer_enabled               boolean;
     v_down_payment                     number;
     v_applied_amount                   number;
     --OSPRODUCT-22136
     v_rewrite_pre_policy               object.object_id%type;
     v_last_processed_trx               object.object_id%type;
     v_last_policy_term                 object.object_id%type;
     v_rewrite_predecessor_ptp          object.object_id%type;
     v_old_applied_amount               number;
begin

     v_ptp_id := pkg_os_object_io.fn_object_bv_path_get
                  (
                       in_session_id,
                       in_transaction_id,
                       in_policy_term_id,
                       '29749301.28555504'
                  );
     v_multipayer_enabled := pkg_db_multipayer.fn_multipayer_mode_tf
                             (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ptp_id
                             );
     
     If v_multipayer_enabled then
          
          Select 
               sum(pkg_os_object_io.fn_object_bv_path_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 pp.ptp_payer_id,
                                 '32705024.212016'
                            ))
          into 
               v_down_payment
          from 
               dragon_ptp_payer pp
          where 
               pp.ptp_id = v_ptp_id;
          
          
     else
          
          v_down_payment := pkg_os_object_io.fn_object_bv_path_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_ptp_id,
                                 '212021.212016'
                            );
                            
     end if;
     
     Select 
          term.policy_id
     into 
          v_policy_id
     from 
          dragon_policy_term term
     where 
          term.policy_term_id = in_policy_term_id;
     
     v_applied_amount := pkg_db_functions.fn_amt_cash_applied_or_posted
                         (
                              v_policy_id,
                              pkg_os_constant.gobjType_Policy ,
                              pkg_db_functions.gFITrxType_Cash_Apply,
                              in_policy_term_id
                         );
          
     -- Get the applied amount from prvious policy OSPRODUCT-22136
     v_rewrite_predecessor_ptp := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_policy_id,
                                       32752248
                                  );
                                  
     if v_rewrite_predecessor_ptp is not null then
                             
          v_last_processed_trx := pkg_os_object.fn_object_parent_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_rewrite_predecessor_ptp
                                  );
                                  
          v_rewrite_pre_policy := pkg_os_object.fn_object_parent_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_last_processed_trx
                                  );
                                  
          v_last_policy_term := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_last_processed_trx,
                                       29728801
                                  );
                                  
          v_old_applied_amount := pkg_db_functions.fn_amt_cash_applied_or_posted
                                   (
                                        v_rewrite_pre_policy,
                                        pkg_os_constant.gobjType_Policy ,
                                        pkg_db_functions.gFITrxType_Cash_Apply,
                                        v_last_policy_term
                                   );
                                   
     end if;                              
                              
     v_applied_amount := nvl(v_applied_amount,0) + nvl(v_old_applied_amount,0);
     
     pkg_os_logging.sp_log
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '.. Policy Term: ' || in_policy_term_id || 
          '.. PTP ID : '     || v_ptp_id ||
          '.. Applied Amount: ' || v_applied_amount ||
          '.. Down Payment:  '    || v_down_payment ||
          '.. Rewrite predecessor PTP: ' || v_rewrite_pre_policy ||
          '.. PT: ' || v_last_processed_trx ||
          '.. Policy Term: ' || v_last_policy_term ||
          '.. Old Amount: ' || v_old_applied_amount
     );
          
     if v_applied_amount >= v_down_payment then
         return 'T';
     else
         return 'F';
     end if;
     
exception
     
     when no_data_found then
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Policy not found for Policy Term: ' || in_policy_term_id
               ||'  Error Msg: '
               ||sqlerrm
          );
          return 'F';
          
end fn_is_down_payment_paid;

----------------------------------------------------------------------------------------------------------------------------
function fn_get_associated_policy_flag
(
      in_policy_id                    in             object.object_id%type,
      in_billing_account_id           in             object.object_Id%type
)
return varchar2
is
l_cnt     number:=0;
begin

     select
          count(1)
     into
          l_cnt
     from
          dragon_policy_term_payer
     where
          payer_billing_account_id = in_billing_account_id
     and
          policy_id = in_policy_id;

     if l_cnt>0 then
          return 'T';
     else
          return 'F';
     end if;

exception
       when Others Then
            return null;
end fn_get_associated_policy_flag;
----------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-7057
function fn_get_fitem_recon_statement
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_agency_recon_id                 in             object.object_id%type

)
return varchar2--object.object_id%type
is
     v_return_value                     number := 0;
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_get_fitem_recon_statement';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_recon_asso_policy                object.object_id%type;
     v_recon_asso_policy_trx            object.object_id%type;
     v_recon_unmatched_policy           varchar2(20);
     v_billing_trx_set_id               object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_agency_recon_id);
     v_billingaccount_id                 object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , v_billing_trx_set_id);
     v_statement_id                     object.object_id%type;
     v_statement_info                   varchar2(500);

begin
      v_recon_asso_policy     := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29759946 -- Ass Policy
                                  );
      v_recon_asso_policy_trx := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29763746 -- Ass Policy Trx
                                  );
    v_recon_unmatched_policy  := pkg_os_object_io.fn_object_bv_get
                                 (
                                        in_session_id,
                                        in_transaction_id,
                                        in_agency_recon_id,
                                        29999746 -- Unmatched Policy
                                  );


     if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...in_agency_recon_id '||in_agency_recon_id||
               '...Policy ID  ' || v_recon_asso_policy||
               '.. Policy Transaction Id . ' || v_recon_asso_policy_trx ||
               ' . Billing Acocunt .. '  || v_billingaccount_id ||
               '.. Recon UnMatched Policy Number' ||v_recon_asso_policy_trx );

      end if;

     if ( v_recon_asso_policy_trx is not null )
     then

          select
               max(ru.ru_parent_id)
          into
               v_statement_id
          from
               dragon_rollup_member rum
          join
               dragon_rollup ru
          on
               ru.ru_id = rum.rum_parent_id
          and
               ru.ru_object_state_id not in (58346,61646,64146,64246,67746,67946,69146,66646)
          join
               dragon_billingaccounttrxset bats
          on
               bats.billingaccounttrxset_id = ru.ru_parent_id
          and
               bats.batch_type_id = gBatch_Current_Account_Stmt--1201
          where
               rum.rum_ref_fitem in
                                   (    select
                                             f.fitem_id
                                        from
                                             dragon_fitem f
                                        where
                                             f.billing_account_id =   v_billingaccount_id
                                        and
                                             f.fitem_type_id = pkg_db_object.gFItem_Debit  --146
                                        and
                                             (nvl(v_recon_asso_policy ,0) =0  or f.policy_id = v_recon_asso_policy)
                                             and
                                             (
                                             nvl(v_recon_unmatched_policy ,'a') = 'a'   or  upper (f.policy_no) like '%'||upper(v_recon_unmatched_policy) ||'%'
                                             )
                                         and
                                              f.policy_transaction_id = v_recon_asso_policy_trx
                                         and
                                              f.current_recon_batch_id is not null
                                         and
                                              f.balance <> 0
                                        );

     
     begin
          select  BILLINGACCOUNTTRXSET_ID ||
          ' ('||
          to_char(BILLING_PERIOD_START_DATE,'MM/DD/YYYY')||
          ' - '||
          to_char(BILLING_PERIOD_END_DATE,'MM/DD/YYYY')||
          ')'
          into
          v_statement_info
          from DRAGON_BILLINGACCOUNTTRXSET
          where BILLINGACCOUNTTRXSET_ID=v_statement_id;
          exception
          when no_data_found then
          v_statement_info := null;
          end;

     end if;

     return v_statement_info;

end fn_get_fitem_recon_statement;
---------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-7057
function fn_policy_trx_dues_exists
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type

)
return number
is
     v_function_name                    constant  system_log.program_name%type       :=   pkg_name||'fn_policy_trx_dues_exists';
     v_session_control                  pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_dues_exists                      number :=0;

begin
     if v_session_control.gLogging_Full then

         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_function_name,
               '...in_policy_transaction_id '||in_policy_transaction_id);

     end if;

     begin
     select
          count(1)
     into
          v_dues_exists
     from
          dragon_fitem df,
          DRAGON_BILLINGACCOUNT db
     where
          df.policy_transaction_id = in_policy_transaction_id--60904474470
     and
          df.BILLING_ACCOUNT_ID= db.BILLINGACCOUNT_ID
     and
          db.ACCOUNT_TYPE_ID in (101,201)
     and
          df.fitem_type_id = pkg_db_object.gFItem_Debit  --146
     and
          balance <>0;
     exception
     when no_data_found then
     v_dues_exists :=0;
     end;

     return v_dues_exists;

end fn_policy_trx_dues_exists;
---------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-6033
function fn_ReconAllItems_exists_tf
(
     in_session_id                 in                object.object_id%type,
     in_transaction_id             in                object.object_id%type,
     in_billingaccounttrxset_id    in                object.object_id%type


) return number
as
     v_return                      number;
     v_counter                     number;

BEGIN

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id=in_billingaccounttrxset_id
     and ru_object_state_id not in ( pkg_db_constant.gObjectState_Processed , pkg_db_constant.gBatchStatus_Created , pkg_db_constant.gObjectState_Excluded );

     if v_counter > 0 then
        v_return :=1;
     else
        v_return :=0;
     end if;

     return v_return;

end fn_ReconAllItems_exists_tf;
--------------------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-6033
function fn_ReconProcessedItems_exts_tf
(
     in_session_id                 in                object.object_id%type,
     in_transaction_id             in                object.object_id%type,
     in_billingaccounttrxset_id    in                object.object_id%type


) return number
as
     v_return                      number;
     v_counter                     number;

BEGIN

     select count(*)
     into v_counter
     from dragon_rollup
     where ru_parent_id=in_billingaccounttrxset_id
     and ru_object_state_id  in ( pkg_db_constant.gObjectState_Processed, gObjectState_Excluded ); -- OSPRODUCT-11983 Excluded without aging


     if v_counter > 0 then
        v_return :=1;
     else
        v_return :=0;
     end if;

     return v_return;

end fn_ReconProcessedItems_exts_tf;
-- OSPRODUCT-6983
function fn_get_primary_entity_name
(
      in_session_id                 in             object.object_id%type,
      in_transaction_id             in             object.object_id%type,
      in_customer_id                in             object.object_id%type
)
return varchar2
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_primary_entity_name';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_entity_name                 object_bv_value.business_variable_value%type;
     v_idx                         object_bv_value.business_variable_value%type;
     g_bv_primary_entity_name      constant varchar2(500)                       := '29253414.29382614';                          

begin
     
     -- Get the value from cache
     v_idx := in_transaction_id || ':' || in_customer_id;
     
     if pkg_db_object_cache_io.g_entity_name_cache.exists(v_idx) then
          
          v_entity_name := pkg_db_object_cache_io.g_entity_name_cache(v_idx);
          
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Entity Name found from cache: ' || v_entity_name || '.. Index: ' || v_idx
               );
                    
          end if;
          
     end if;
     
     if v_entity_name is null then
                    
          v_entity_name := pkg_os_object_io.fn_object_bv_path_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_customer_id,
                                g_bv_primary_entity_name
                           );
                           
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   'Value not found in cache.. Recalculated.. ' || v_entity_name || '.. Index: ' || v_idx
               );
                    
          end if;
          
          -- Load the cache
          pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);          
          pkg_db_object_cache_io.g_entity_name_cache(v_idx) := v_entity_name;
          
     end if;
     
     return v_entity_name;
     
end fn_get_primary_entity_name;

function fn_get_account_holder_name
(
      in_session_id                 in             object.object_id%type,
      in_transaction_id             in             object.object_id%type,
      in_billing_account_id         in             object.object_id%type
)
return varchar2
is

     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_get_account_holder_name';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_acc_holder_name             object_bv_value.business_variable_value%type;
     v_idx                         object_bv_value.business_variable_value%type;                             

begin
     
     -- Get the value from cache
     v_idx := in_transaction_id || ':' || in_billing_account_id;
     
     if pkg_db_object_cache_io.g_billing_account_name_cache.exists(v_idx) then
          
          v_acc_holder_name := pkg_db_object_cache_io.g_billing_account_name_cache(v_idx);
          
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. Value found from cache: ' || v_acc_holder_name
               );
                    
          end if;
          
          
     end if;
     
     if v_acc_holder_name is null then
     
          begin
               
               select
                    primary_contact_name
               into
                    v_acc_holder_name
               from
                    dragon_billingaccount ba
               where
                    ba.billingaccount_id = in_billing_account_id;
                    
          exception
               when others then
                    null;
                    
          end;
          
          if v_acc_holder_name is null then
                    
               v_acc_holder_name := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_billing_account_id,
                                         gbv_BillingAcc_AccHldr_Name
                                    );
                               
          end if;
                           
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   'Value not found in cache.. Recalculated.. ' || v_acc_holder_name
               );
                    
          end if;
          
          -- Load the cache
          pkg_db_object_cache_io.sp_clear_transaction_cache (in_session_id, in_transaction_id);          
          pkg_db_object_cache_io.g_billing_account_name_cache(v_idx) := v_acc_holder_name;
          
     end if;
     
     return v_acc_holder_name;
     
end fn_get_account_holder_name;

-- OSPRODUCT-6983
-----------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-7708
function fn_most_recent_cashposttrx 
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccount_id          in             object.object_id%type
)
return object.object_id%type
is
     v_procedure_name              constant  system_log.program_name%type       :=   pkg_name||'fn_most_recent_cashposttrx';
     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_fitransaction_id            object.object_id%type;

begin

     begin

          select 
               fitransaction_id
          into
               v_fitransaction_id
          from
               (
                    select 
                         dft.fitransaction_id 
                    from 
                         dragon_fitransaction dft
                    where 
                         dft.billing_account_id = in_billingaccount_id
                    and 
                         dft.fitransaction_type_id = gFITrxType_Cash_Post
                    and
                         dft.status_enum = gFITrxStatus_Processed
                    order by 
                         dft.process_date desc
               )
          where 
               rownum = 1;

     exception when others
     then
     
          if v_session_control.gLogging_Full 
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id, 
                   in_transaction_id, 
                   v_procedure_name,
                   '.. No Cash Post Found '
               );
                    
          end if;

          return null;
     end;

     return  v_fitransaction_id;

end fn_most_recent_cashposttrx;
-----------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-7271 start
function fn_check_net_disbursement 
(
     in_session_id                 object.object_id%type,
     in_transaction_id             object.object_id%type  
)
return number
is
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_check_net_disbursement';
     v_char                        char := 'F';
     v_object_list                 pkg_os_object.t_object_list;
     v_selected_elements           varchar2(4000);
     v_fitem_id                    object.object_id%type;
     v_object_index                pls_integer;
     v_selected_object_indx        number := null;
     v_selected_object_ids         pkg_os_token.t_string_table;
     v_fitem_sum                   number := 0;
begin
    
     pkg_os_object_search.sp_object_children_of_type_get
        (
              in_session_id                 => in_session_id,
              in_transaction_id             => in_transaction_id,
              in_object_id                  => in_session_id, ---change from in_action_object_id to in_session_id
              in_child_object_type_id       => pkg_os_constant.gobjType_List,
              in_object_list                => v_object_list,
              in_sort_bv_id                 => null,
              in_recurse_flag               => false,--OSPRODUCT-9531
              in_exclude_deleted_objects_tf => true
        );
         if v_session_control.gLogging_Full 
         then
         
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '.. v_object_list.count: '  || v_object_list.count 
    
              );
              
         end if;
        for v_object_index in 1 .. v_object_list.count
            loop 
                if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_object_list(v_Object_Index),pkg_os_constant_bv.gbv_ListElementsSelected) is not null
                then

                  v_selected_elements := pkg_os_object_io.fn_object_bv_get    
                                          (    
                                             in_session_id,    
                                             in_transaction_id,    
                                             v_object_list(v_object_index),    
                                             pkg_os_constant_bv.gbv_ListElementsSelected    
                                          );
                       if v_session_control.gLogging_Full 
                       then
                       
                            pkg_os_logging.sp_log
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_procedure_name,
                                 '.. v_selected_elements: '  || v_selected_elements
                  
                            );
                            
                       end if;
                       if v_selected_elements is not null
                       then
                            pkg_os_token.sp_tokenize_string(v_selected_elements, ',', v_selected_object_ids );
                            v_selected_object_indx := v_selected_object_ids.first;
                             if v_session_control.gLogging_Full 
                             then
                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,in_transaction_id, v_procedure_name,
                                       '.. v_selected_object_indx: '  || v_selected_object_indx
                                  );
                             end if;
                             while v_selected_object_indx is not null
                             loop
                                  v_fitem_id   :=  pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                                       in_transaction_id,
                                                                       v_selected_object_ids( v_selected_object_indx ),
                                                                       pkg_os_constant_bv.gbv_ListElementObject

                                                                  );

                                  
                                  
                                  v_fitem_sum  :=  v_fitem_sum +   pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_fitem_id, 29710546);
                                   pkg_os_logging.sp_log
                                  (
                                       in_session_id,in_transaction_id, v_procedure_name,
                                       '.. v_fitem_id: '  || v_fitem_id ||
                                       ' due amount : ' || pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_fitem_id, 29710546)
                                  );
                                  v_selected_object_indx := v_selected_object_ids.next(v_selected_object_indx);
                            end loop;
                       end if;
              end if;
            end loop;
             if v_session_control.gLogging_Full 
             then
             
                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '.. v_fitem_sum: '  || v_fitem_sum
        
                  );
                  
             end if;
        return v_fitem_sum;
end fn_check_net_disbursement;
--OSPRODUCT-7271 end

-----------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-7957
function fn_ba_most_recent_invoice
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccount_id          in             object.object_id%type
)
return object.object_id%type
is
     v_invoice_id                  object.object_id%type;

begin

     begin
          select
               billingaccounttrxset_id
          into
               v_invoice_id
          from
               (
          
                    select 
                         bats.billingaccounttrxset_id                    
                    from
                         dragon_billingaccounttrxset bats
                    where
                         bats.parent_billing_account_id = in_billingaccount_id
                    and
                         bats.batch_type_id in (gBatch_Invoice, g_Batch_InvceRollupStmt)
                    and
                         bats.batch_status_id = gBatchStatus_Processed
                    order by 
                         bats.processed_date desc
                         
               )
          where 
               rownum = 1;
               
     exception
          
          when others then               
               return null;
          
     end;

     return v_invoice_id;

end fn_ba_most_recent_invoice;

-- UTPRODUCT-3816
function fn_is_valid_policy_tf
(
      in_session_id        	in        object.object_id%type,
      in_transaction_id       in        object.object_id%type,
      in_policy_id            in        object.object_id%type,     
      in_responsible_ba_id    in        object.object_id%type,
      in_billing_account_id   in        Object.Object_Id%type
)
return varchar2
is
     
     type t_term_payer_tab is table of dragon_policy_term_payer%rowtype index by pls_integer;
     v_term_payer                    t_term_payer_tab;
     v_return_value                  char(1) := 'F';
     v_idx                           number;
	l_cnt                           number := 0;
     
     cursor c_term_payer is     
          select
               *
          from
               dragon_policy_term_payer
          where
               policy_id = in_policy_id
		  --OSPRODUCT-30830 start
		  and  policy_term_id =
			   pkg_db_functions.fn_get_policy_current_term(in_session_id,
													       in_transaction_id,
													       in_policy_id);
          --OSPRODUCT-30830 end
       
begin
     
     if nvl(in_responsible_ba_id,0) <> in_billing_account_id then--UTPRODUCT-4420
          
          select
               count(*)
          into
               l_cnt
          from
               dragon_policy_term_payer tpayer
          where
               payer_billing_account_id = in_billing_account_id
          and
               policy_id = in_policy_id
          and
               tpayer.policy_term_id = pkg_db_functions.fn_get_policy_current_term
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_id
                                       );         
               
          if l_cnt>0 then               
               v_return_value := 'T';               
          else               
               v_return_value := 'F';               
          end if;     
     
     else
          
          open c_term_payer;
          fetch c_term_payer bulk collect into v_term_payer;
          close c_term_payer;
          
          if v_term_payer.count = 0 then
               
               v_return_value := 'T';
               
          else
               
               v_idx := v_term_payer.first;
               
               while v_idx is not null loop
                    
                    if v_term_payer(v_idx).payer_billing_account_id = in_billing_account_id 
                       and
                       v_term_payer(v_idx).policy_term_id = pkg_db_functions.fn_get_policy_current_term
                                                            (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                in_policy_id
                                                            )
                    then                         
                    
                         v_return_value := 'T';                         
                         exit;
                         
                    end if;
                    
                    v_idx := v_term_payer.next(v_idx);
                    
               end loop;
               
          end if;
          
     end if;
               
     return v_return_value;   

exception
		when Others Then
			return null;
            
end fn_is_valid_policy_tf;

-----------------------------------------------------------------------------------------------------------
--OSPRODUCT-21189
function fn_is_policy_valid_tf     
(
     in_session_id               in  object.object_id%type,
     in_transaction_id           in  object.object_id%type,
     in_policy_id                in  object.object_id%type,
     in_billing_account_id       in  object.object_id%type
)
return 
char is 
     v_procedure_name    constant  system_log.program_name%type := pkg_name||'fn_is_policy_valid_tf';
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
        

     v_responsible_ba_id                      object.object_id%type;
     v_customer_id                            object.object_id%type;
     v_pol_customer_id                        object.object_id%type;
     l_cnt                                    number := 0;
     type t_term_payer_tab is table of dragon_policy_term_payer%rowtype index by pls_integer;
     v_term_payer                             t_term_payer_tab;
     v_return_value                           char(1) := 'F';
     
     cursor c_term_payer(in_billing_account_id object.object_id%type) is
     select *
     from dragon_policy_term_payer
     where 
          policy_id = in_policy_id
     and 
          payer_billing_account_id = in_billing_account_id
     and 
          policy_term_id = pkg_db_functions.fn_get_policy_current_term
                           ( 
                                in_session_id,
                                in_transaction_id,
                                in_policy_id
                            );
begin
         
         if v_session_control.gLogging_Full
         then
                pkg_os_logging.sp_log
                (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '... in_policy_id ID: ' || in_policy_id || 'BA ' || in_billing_account_id
                );
         end if;
          
         v_customer_id := pkg_os_object.fn_object_parent_get
                          ( 
                            in_session_id,
                            in_transaction_id,
                            pkg_os_object.fn_object_parent_get
                              ( 
                                in_session_id,
                                in_transaction_id,
                                in_billing_account_id
                              )
                          ); 
         select 
              customer_id,
              responsible_billing_account
         into 
              v_pol_customer_id,
              v_responsible_ba_id
         from
              dragon_policy
         where 
              policy_id = in_policy_id;
              
         if v_pol_customer_id = v_customer_id 
         then 
             
            if nvl(v_responsible_ba_id, 0) = in_billing_account_id then
          
                    select 
                          count(*)
                    into 
                          l_cnt
                    from 
                          dragon_policy_term_payer tpayer
                    where 
                          policy_id = in_policy_id
                    and 
                          tpayer.policy_term_id =  pkg_db_functions.fn_get_policy_current_term
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_policy_id
                                                    );
                                                    
                    if l_cnt = 0
                    then
                        v_return_value := 'T';
                    else
                         
                         open  c_term_payer(in_billing_account_id);
                         fetch c_term_payer bulk collect into v_term_payer;
                         close c_term_payer;
                         
                         if v_term_payer.count > 0
                         then
                             v_return_value := 'T';
                         end if;
                         
                     end if;
        
            else
        
                    open  c_term_payer(in_billing_account_id);
                    fetch c_term_payer bulk collect into v_term_payer;
                    close c_term_payer;
                
                    if v_term_payer.count > 0
                    then
                         v_return_value := 'T';
                    end if;
        
            end if;
       
         end if;
    
         return v_return_value;
     
end fn_is_policy_valid_tf; 
-----------------------------------------------------------------------------------------------------------------------------------
-- UTPRODUCT - 4018
function fn_recent_pol_trx_of_type
  (
      in_session_id        	in        object.object_id%type,
      in_transaction_id       in        object.object_id%type,
      in_policy_id            in        object.object_id%type,     
      in_trx_type_id          in        number
)
return  object.object_id%type
is
     v_recent_poltrx_id              object.object_id%type;

begin   
     begin
     select
          max(dpx.policy_trx_id)
     into
          v_recent_poltrx_id
     from
          dragon_policy_trx dpx
     where
          dpx.policy_id = in_policy_id
     and
          dpx.policy_trx_type_id = in_trx_type_id    
     ;

     exception

          when no_data_found then

               v_recent_poltrx_id := null;

     end;

     return v_recent_poltrx_id;

end fn_recent_pol_trx_of_type;  
----------------------------------------------------------------------------
--UTPRODUCT-3929
function fn_next_sch_pull_obj
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_PTP_id                          in             object.object_id%type
)    return object.object_id%type
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=  'pkg_name'||'fn_next_sch_pull_obj';
     v_payment_pulled                   number;
     v_is_payer_valid                   number;
     v_profile_mode                     number;
     v_PolicyMultiPayerEnabled          boolean;
     v_idx                              long; -- binary_integer;
     v_payer_list                       PKG_DB_MULTIPAYER.t_payer_tab;   
     v_policy_payer_tab                 pkg_db_multipayer.t_policy_payer_tab; 
     v_next_sch_pull_obj                object.object_id%type;
     v_current_payplan_id               object.object_id%type;
     v_downpay_amount                   float;
     v_withdraw_downpay_tf              number;
     v_use_down_payment_profile         number;
     v_profile_used                     object.object_id%type;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| indentifying next pull object for image '||in_PTP_id 
          );

     end if;

      v_PolicyMultiPayerEnabled := pkg_db_multipayer.fn_multipayer_mode_tf
                                  (
                                     in_session_id,
                                     in_transaction_id,
                                     in_PTP_id
                                  );

      if v_PolicyMultiPayerEnabled then

           pkg_db_multipayer.sp_ptp_payers_cache_get
               (
                    in_session_id         => in_session_id,
                    in_transaction_id     => in_transaction_id,
                    io_cached_payer_lists => v_policy_payer_tab,
                    in_ptp_object_id      => in_PTP_id,
                    io_payer_list         => v_payer_list,
                    in_print_list         => 'Y',
                    in_index_by           => pkg_db_multipayer.g_PayerGet_idx_ChosenPlan  -- indexed by payer entity ID. This is important as far as we pass entity payer ID to this routine to identify the payer in question

               );

           v_idx := v_payer_list.first;

           while v_idx is not null loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '|||||| payer id '|| v_payer_list( v_idx). PTPayer_object_id
                    );

               end if;
               
               v_withdraw_downpay_tf := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, gbv_payer_withdraw_downpay_tf );
               
               if  NVL(v_withdraw_downpay_tf,0)=1
                    then              
                    v_is_payer_valid      := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, gbv_payer_is_valid_tf );
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '|||||| payer id '|| v_payer_list( v_idx). PTPayer_object_id||
                              ' with valid flag as :'|| v_is_payer_valid
                         );

                    end if;
                    if NVL(v_is_payer_valid, 1) = 1 then

                         v_payment_pulled      := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, gbv_payer_is_payment_pulled );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '|||||| payer id '|| v_payer_list( v_idx). PTPayer_object_id||
                                   ' with payment pulled flag as :'|| v_payment_pulled
                              );

                         end if;                    

                         if NVL(v_payment_pulled, 0) in (0,2) then
                              
                              v_use_down_payment_profile  := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, pkg_db_profiles.gbv_PayerDifferentAdhocPrf);                

                              if NVL(v_use_down_payment_profile,0)= 1 then
                                   v_profile_used :=   pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, pkg_db_profiles.gbv_Ref_PayerDwnPlchldrPrfInpt);                
                              else
                                   v_profile_used :=   pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, pkg_db_profiles.gbv_Ref_PTPPayerPlchldrPrfInpt);                
                                   
                              end if;       
                                 
                              v_profile_mode  :=   pkg_os_object_io.fn_object_bv_path_get ( in_session_id, in_transaction_id, v_profile_used, pkg_db_profiles.gbv_CTFPaymentMode);              

                              if NVL(v_profile_mode, 0) in (2,3)then

                                   v_current_payplan_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, v_payer_list( v_idx). PTPayer_object_id, pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan );
                                   v_downpay_amount     := fn_payplan_downpayment_amount(in_session_id, in_transaction_id,v_current_payplan_id);
                                   
                                   if NVL(v_downpay_amount,0)>0
                                   then
                                             
                                        v_next_sch_pull_obj := v_payer_list( v_idx).PTPayer_object_id;
                                        exit;
                                   end if;
                              end if;     

                         end if; 
                    end if;
               end if;     

               v_idx := v_payer_list.next(v_idx);

           end loop;        

      else
          v_withdraw_downpay_tf := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id,in_PTP_id, gbv_ptp_withdraw_downpay_tf );
                         
          if  NVL(v_withdraw_downpay_tf,0)=1
               then         
                v_payment_pulled      := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, in_PTP_id, gbv_ptp_is_payment_pulled );

                if NVL(v_payment_pulled, 0) in (0,2) then
                    v_current_payplan_id := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id,in_PTP_id, gbv_PolicyRefChosenPlan );
                    v_downpay_amount     := fn_payplan_downpayment_amount(in_session_id, in_transaction_id,v_current_payplan_id);
                                   
                    if NVL(v_downpay_amount,0)>0
                    then
                                             
                         v_next_sch_pull_obj := in_PTP_id;

                    end if;
                     
                else
                     v_next_sch_pull_obj := null;
                end if;  
         end if;               

      end if;                                      
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| next pull object '|| v_next_sch_pull_obj
          );

     end if;                                   
     return v_next_sch_pull_obj;

end fn_next_sch_pull_obj;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_trx_withdraw_fund_tf
--
--   %USAGE
--        This function is created to determine that funds is to be withdrawal or not for a transction. 
--
--   %ALGORITHM
--        Note specified. 
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_object_id                  Input objet id woudld be PTP or PTPPayer. 
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- UTPRODUCT-3928
function fn_trx_withdraw_fund_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_id                       in             object.object_id%type
)    return varchar2
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=  pkg_name||'fn_trx_withdraw_fund_tf';

     v_object_type_id                  object_type.object_type_id%type := pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,in_object_id); 
     v_ptp_id                           object.object_id%type; 
     v_rule_object_id                   object.object_id%type;   
     v_program_id                       object_bv_value.business_variable_value%type;
     v_payer_type_id                    db_payer_type.db_payer_type_id%type;
     v_product_id                       pd_product.pd_product_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_apply_rule_tf                    char(1);
     v_transaction_type_id              pd_transaction_type.pd_transaction_type_id%type;
     v_apply_rule_obj_type_id           rule.rule_object_type_id%type;
     v_trx_withdraw_fund_tf             varchar2(1) := 'F';

     --
     -- Cursor : Open the cursor for the records of metadata DB_TRANSACTION_FUNDS_INST table
     --
     cursor cur_trx_funds_inst_list
     (
          cp_product_id                       pd_product.pd_product_id%type,
          cp_program_id                       program.program_id%type, 
          cp_transaction_type_id              pd_transaction_type.pd_transaction_type_id%type,
          cp_payer_type_id                    db_payer_type.db_payer_type_id%type,
          cp_object_type_id                   object_type.object_type_id%type
     )
     is
          select 
               *
          from 
               db_transaction_funds_inst tf
          where 
               tf.active_tf = gTrxFundsInst_Active_T  
          and
               pkg_os_policy_transaction_type.fn_transaction_type_in_set( cp_transaction_type_id, transaction_set_id) = 'T' 
          and 
               (
                    NVL(pd_product_set_id,gProduct_All)  = gProduct_All -- 2646 All
                    or 
                    pkg_os_product.fn_product_in_set( cp_product_id , pd_product_set_id) = 'T'
               )
          and 
               (
                    NVL(tf.payer_type_set,gPayerTypeSet_All) = gPayerTypeSet_All  -- All Payers
                    or 
                    pkg_db_multipayer.fn_payer_in_set(cp_payer_type_id, tf.payer_type_set) ='T' 
               )
          and 
               (
                    NVL(tf.program_set_id,gProgramSet_All) = gProgramSet_All  -- All
                    or 
                    pkg_os_program.fn_program_in_set ( cp_program_id, tf.program_set_id ) = 'T'
               )  
           and 
               tf.trx_funds_inst_apply_level = cp_object_type_id           
          ; 

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Transaction Funds Instruction Method : ' ||
               ' : Object ID : ' ||in_object_id ||
               ' : Object Type ID (2276904:PolicyTransactionPolicy / 3347724:PolicyTransactionPolicyPayer) :'|| v_object_type_id
          );

     end if;

     Case
     when v_object_type_id in (pkg_os_constant.gobjType_PolicyTrxPolicy)
     then
               
          v_rule_object_id  := in_object_id;          
          v_ptp_id          := in_object_id;
          v_payer_type_id   := gPayerType_primary_insured; 
               
               
     when v_object_type_id in (pkg_db_multipayer.gObjType_PTPPayer)
     then
          v_rule_object_id  := in_object_id;
          v_ptp_id := pkg_os_object.fn_object_parent_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_object_id
                         );
                                   
          -- Get the Payer Type ID                
          v_payer_type_id   := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id,
                                        pkg_db_multipayer.gbv_PTPPayer_PayerType
                                   );  
     else 
               
          null; 
          
     end case; 

     v_policy_transaction_id := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_ptp_id);
                                           
     v_policy_id := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_policy_transaction_id);       
      
     v_transaction_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_policy_transaction_id, pkg_db_stmt.gbv_PolicyTransactionType);

     v_product_id := pkg_os_product.fn_object_product_get(in_session_id,in_transaction_id, v_policy_id);

     v_program_id := pkg_os_object_io.fn_object_bv_get(in_session_id ,in_transaction_id,v_policy_id, pkg_db_functions.gbv_policy_program_id); 
                             
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '. Policy Transaction ID: ' || v_policy_transaction_id ||
               ': Policy Trx Type ID :' || v_transaction_type_id ||
               ': Product ID :'||v_product_id ||
               ': Program ID :' ||v_program_id ||
               ': Payer ID :' || v_payer_type_id
          );

     end if;

     --
     -- Loop for eache DB_BILLING_ID.
     --
     for r_trx_funds_inst_list in cur_trx_funds_inst_list 
                                   (
                                        v_product_id,
                                        v_program_id,
                                        v_transaction_type_id,
                                        v_payer_type_id,
                                        v_object_type_id  
                                   ) 
     loop
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Trx Funds Inst ID: ' || r_trx_funds_inst_list.db_transaction_funds_inst_id
               );

          end if; 
          -- Check : for Apply Rule r_trx_funds_inst_list.trx_funds_inst_rule
          if r_trx_funds_inst_list.trx_funds_inst_rule is not null
          then

               v_apply_rule_obj_type_id := pkg_db_stmt_util.fn_rule_object_type_get(in_session_id,in_transaction_id,r_trx_funds_inst_list.trx_funds_inst_rule);

               if v_apply_rule_obj_type_id <> 0 and v_apply_rule_obj_type_id <> r_trx_funds_inst_list.trx_funds_inst_apply_level
               then
                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Apply Rule context should be generic or PTP or PTP Payer.'||
                         ': Trx Funds Inst ID: ' || r_trx_funds_inst_list.db_transaction_funds_inst_id ||
                         ': Funds Inst Rule Context ObjectType :'||v_apply_rule_obj_type_id
                    );

                    raise no_data_found;

               end if;
                         
               v_apply_rule_tf  := pkg_os_exp.fn_evaluate_expression
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_rule_object_id,
                                        r_trx_funds_inst_list.trx_funds_inst_rule
                                   );
                                                  
               if v_apply_rule_tf = 'T' 
               then 
                               
                    v_trx_withdraw_fund_tf :=  'T';
                                   
               end if;    
                               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' : Trx Funds Inst ID: ' || r_trx_funds_inst_list.db_transaction_funds_inst_id||
                         ' : Rule Result : ' || v_apply_rule_tf||
                         ' : Trx Withdraw Fund (T/F) :' ||v_trx_withdraw_fund_tf
                    );

               end if;                     

          end if; --r_trx_funds_inst_list.trx_funds_inst_rule
              
     end loop;

     return v_trx_withdraw_fund_tf;

end fn_trx_withdraw_fund_tf;
-- UTPRODUCT-3928

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_payplan_downpayment_amount
--
--   %USAGE
--        This function is created to determine downpayment amount for a choosen payment plan of a transction. 
--
--   %ALGORITHM
--        Note specified. 
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_payplan_object_id          Input objet id woudld be Payplan object ID. 
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- UTPRODUCT-3928
function fn_payplan_downpayment_amount
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_payplan_object_id               in             object.object_id%type
)    return number
is
     v_session_control                  pkg_os_session.r_dragon_session_control :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=  pkg_name||'fn_payplan_downpayment_amount';

     v_ptp_id                           object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_transaction_type_id              pd_transaction_type.pd_transaction_type_id%type;
     v_parent_object_id                 object.object_id%type;
     v_parent_object_type_id            object_type.object_type_id%type ;
     v_is_new_term                      number;
     v_payplan_downpayment_amount       number;
     v_pymntsch_list                    pkg_os_object.t_object_list;
     v_pymntsch_index                   number;
     v_stub_number                      number;
     v_Installment_Number               number; 
     v_minval_stub_number               number; 
     v_minval_stub_sch_id               object.object_id%type;
     v_sch_element_id                   object.object_id%type;
     v_sch_element_trx_id               object.object_id%type;
begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering in the method to calcualte Down Payment for a payment plan : ' ||
               ' : Payment Plan Object ID : ' ||in_payplan_object_id ||
               ' : Payment Plan Object Type ID :'|| in_payplan_object_id
          );

     end if;

     v_parent_object_id := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,in_payplan_object_id);
     v_parent_object_type_id := pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,v_parent_object_id);

     Case
     when v_parent_object_type_id in (pkg_os_constant.gobjType_PolicyTrxPolicy)
     then

          v_ptp_id          := v_parent_object_id;

     when v_parent_object_type_id in (pkg_db_multipayer.gObjType_PTPPayer)
     then
          v_ptp_id := pkg_os_object.fn_object_parent_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_parent_object_id
                         );

     else

          null;

     end case;


     v_policy_transaction_id := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_ptp_id);

     v_policy_id := pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_policy_transaction_id);

     v_transaction_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_policy_transaction_id, pkg_db_stmt.gbv_PolicyTransactionType);

     v_is_new_term := PKG_DB_PAYPLAN_MODIFY.fn_trx_starts_new_term(v_transaction_type_id);


     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ': v_policy_id:'||v_policy_id ||
               '. Policy Transaction ID: ' || v_policy_transaction_id ||
               ': Policy Trx Type ID :' || v_transaction_type_id ||
               ': PayPlan Object ID: ' || in_payplan_object_id ||
               ': v_new_term :' || v_is_new_term
          );

     end if;

     if  v_is_new_term = g_new_term_transaction
     then
         v_payplan_downpayment_amount := pkg_os_object_io.fn_object_bv_get
                                            (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_payplan_object_id,
                                                  PKG_DB_PAYPLAN_MODIFY.gbv_PPDownAmountOverride
                                            );--UTXPRODUCT-580
     else
          -- 
          -- Get the Schedule objects list 
          -- 
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_payplan_object_id,
               pkg_db_payplan_modify.gobjtype_scheduledpayment,
               v_pymntsch_list
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... v_pymntsch_list.count'
                    ||v_pymntsch_list.count
               );
          end if;

          v_pymntsch_index := v_pymntsch_list.first;
                              
          while v_pymntsch_index is not null 
          loop
               
                         
               v_stub_number := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_pymntsch_list( v_pymntsch_index ), 
                                        pkg_db_payplan_modify.gbv_SchedPayment_Stub_Num  
                                   );
                                        
                                        
               if  v_stub_number is not null
               then 
                                        
                    v_sch_element_id := pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pymntsch_list( v_pymntsch_index ),
                                             pkg_db_payplan_modify.gObjType_ScheduledElement
                                        ); 
                                                 
                    v_sch_element_trx_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_sch_element_id, 
                                                  pkg_db_payplan_modify.gbv_ElementRefCreatorPolTrns
                                             );
                                                 
                    if  v_sch_element_trx_id = v_policy_transaction_id
                    then 
                                        
                         v_Installment_Number := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_pymntsch_list( v_pymntsch_index ), 
                                                       pkg_db_payplan_modify.gbv_ScheduledPayment_num  
                                                  );
                                                 
                                             
                         if NVL(v_minval_stub_number,v_Installment_Number||'.'||v_stub_number) 
                              >= v_Installment_Number||'.'||v_stub_number
                         then 
                                                                
                              v_minval_stub_number := v_Installment_Number||'.'||v_stub_number;
                              v_minval_stub_sch_id := v_pymntsch_list( v_pymntsch_index );
                                                                
                         end if;    
                                                                                     
                         if v_session_control.gLogging_Full
                         then
                         
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Payment Schedule Object ID :' || v_pymntsch_list( v_pymntsch_index )||
                                   ' : Installment Number :' || v_Installment_Number ||
                                   ' : Stub Number : '|| v_stub_number||
                                   ' : Schedule Element ID : ' || v_sch_element_id ||
                                   ' : Scheduel Element TRX ID ' || v_sch_element_trx_id||
                                   ': MINVAL Stub Schedule ID  :' ||v_minval_stub_sch_id|| 
                                   ': MINVAL Stub Number :' || v_minval_stub_number
                              );
                              
                         end if;
              
                    end if; 
                                             
               end if; 
               
               v_pymntsch_index := v_pymntsch_list.next( v_pymntsch_index );

          end loop;

                                   
     end if;
     
     if v_minval_stub_sch_id is not null
      then 
          v_payplan_downpayment_amount := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_minval_stub_sch_id, 
                                                  pkg_db_payplan_modify.gbv_sched_balance_amount
                                             );
     end if; 
     
     if v_session_control.gLogging_Full
     then
                         
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......Stub Amount :' || v_payplan_downpayment_amount
          );
                              
     end if;
     
     return v_payplan_downpayment_amount;

end fn_payplan_downpayment_amount;
-- UTPRODUCT-3928

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--        fn_pol_amnt_writeoff
--
--  %USAGE
--        This function returns the total write-off amount of the policy.
--
--  %ALGORITHM
--        Calculated based on the write-off offset period and value.
--
--
--  %PARAMS
--        in_session_id               in          object.object_id%type,
--        in_transaction_id           in          object.object_id%type,
--        in_policy_id                in          object.object_id%type
--        in_batrx_type_id            in          number -- Automated write of batch --901 , Manua write -2101,2701 write off reversal
--  %NOTES
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

--OSPRODUCT-6572 moved fn_pol_amnt_writeoff from pkg_cs_db_functions to this package

function fn_pol_amnt_writeoff
(
     in_session_id              in      object.object_id%type,
     in_transaction_id          in      object.object_id%type,
     in_policy_id               in      object.object_id%type,--policy id
     in_batrx_type_id           in      number -- Automated write of batch --901 , Manua write -2101,2701 write off reversal

) 
return number 
is

     v_procedure_name    constant  system_log.program_name%type :=  pkg_name||'fn_pol_amnt_writeoff';
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return_value                object_bv_value.business_variable_value%type;
     v_amount                      number := 0;

begin

     pkg_os_logging.sp_log
     (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           '... Entering to calculate the policy ( '|| in_policy_id || ' ) writeoff amount for batch type : '||in_batrx_type_id

     );

     select
          nvl(sum(f.amount), 0)*(-1)
     into
          v_amount
     from
          dragon_billingaccounttrxset b,
          dragon_fitransaction f
     where
          f.batch_ref_no = b.billingaccounttrxset_id
     and
          ( --OSPRODUCT-6572, enclosed or conditions into a bracket
               (
                    f.policy_id = in_policy_id
                    and
                    f.batch_type_id = in_batrx_type_id  -- 2101 Manual, 901 --Austotamted write off
                    and
                    b.batch_status_id = pkg_db_functions.gBatchStatus_Processed

               )
          or
               (
                    f.policy_id = in_policy_id
               and
                    f.batch_type_id in  (pkg_db_functions.gFITrxType_ReversalWriteOff, pkg_db_functions.gFITrxType_Reversal) -- 2701,7801 -- Write Off Reversal
               and
                    b.created_by_billingtrxset is not null
               and
                    b.created_by_billingtrxset in
                    (
                         select
                              bi.billingaccounttrxset_id
                         from
                              dragon_billingaccounttrxset bi
                         where
                              bi.batch_type_id =in_batrx_type_id -- 2101 Manual, 901 --Austotamted write off
                         and
                              bi.batch_status_id = Pkg_db_functions.gBatchStatus_Processed

                    )
               )
          ); --OSPRODUCT-6572



     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||Total Write-Off Amount is :'||v_amount
          );


     end if;

     return v_amount;

end fn_pol_amnt_writeoff;
--OSPRODUCT-9352
function fn_get_dbt_crdt_reconciled_amt
(
     in_session_id               in      object.object_id%type,
     in_transaction_id           in      object.object_id%type,
     in_billingaccounttrxset_id  in      object.object_id%type,
	in_debit_credit_id		   in	 number default 146
) return number
as
     v_total                     number;

BEGIN

     -- calculating debit reconciled amount
	if in_debit_credit_id = 146 then 
		select --sum(ru_net_due+ru_difference_amount)
			sum(RU_AGENT_NET_DUE)
		into 
			v_total
		from 
			dragon_rollup
		where 
			ru_object_state_id in ( pkg_db_constant.gStatus_Reconciled , pkg_db_constant.gStatus_RPCD , pkg_db_constant.gStatus_RPD , pkg_db_constant.gStatus_RCD )
		and 
			RU_AGENT_NET_DUE > 0
		and 
			ru_parent_id=in_billingaccounttrxset_id;
	end if;
	
	-- calculating credit reconciled amount
	if in_debit_credit_id = 246 then 
		select --sum(ru_net_due+ru_difference_amount)
			sum(RU_AGENT_NET_DUE)
		into 
			v_total
		from 
			dragon_rollup
		where 
			ru_object_state_id in ( pkg_db_constant.gStatus_Reconciled , pkg_db_constant.gStatus_RPCD , pkg_db_constant.gStatus_RPD , pkg_db_constant.gStatus_RCD )
		and 
			RU_AGENT_NET_DUE < 0
		and 
			ru_parent_id=in_billingaccounttrxset_id;
	end if;
	
	return v_total;

end fn_get_dbt_crdt_reconciled_amt;
--UTPRODUCT-4420
function fn_associated_payment_plan
(
     in_session_id               in      object.object_id%type,
     in_transaction_id           in      object.object_id%type,
     in_billing_account          in      object.object_id%type,
     in_policy_id                in      object.object_id%type
) return varchar2
as
     v_payment_plan_name                     varchar2(100);
begin
     
     Select 
          pkg_os_object_io.fn_object_bv_path_get(in_session_id,in_transaction_id,tp.policy_term_payer_id,'32705024.29099706')
     into
          v_payment_plan_name
     from 
          dragon_policy_term_payer tp
     where 
          policy_id = in_policy_id
     and 
          tp.payer_billing_account_id = in_billing_account
     and 
          tp.policy_term_id = fn_get_policy_current_term
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_id
                              );

     Return v_payment_plan_name;
     
exception
     when no_data_found then
          return null;
end fn_associated_payment_plan;
--UTPRODUCT-4420
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--UTPRODUCT-4812
function fn_amt_cash_app_or_post_or_trasfrd
(
     in_session_id               in      object.object_id%type,
     in_transaction_id           in      object.object_id%type,
     in_object_id                in      object.object_id%type,
     in_category_id              in      number default null,
     in_sub_category_id          in      number default null
)
return number
is


     v_amount                 number  := 0;
     v_object_type_id         object_type.object_type_id%type := pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,in_object_id);   --OSPRODUCT-13651
     v_account_type           number  := 0;--OSPRODUCT-17740
     v_policy_id              object.object_id%type;  
     
begin

   if v_object_type_id = pkg_os_constant.gObjType_policy
   then
           select
                nvl(abs(sum(action_delta)),0)
           into
                v_amount
           from
                dragon_fichange f, dragon_fitransaction fi, dragon_billingaccount db -- KR 02/05
           where
                f.policy_id = in_object_id
           and
                f.fitransaction = fi.fitransaction_id
           and
                f.billing_account_id = db.billingaccount_id
           and
                db.account_type_id not in (4, 1501, 1601)
           and
                fi.status_enum = 37646
           and
           (
               (
                 f.fitem_transaction_type_id = gFITrxType_Cash_Post
               )
                or

               (
                 f.fitem_transaction_type_id = gFITrxType_CashCreditTransfer and f.fitem_sub_category_id = pkg_db_cash_apply.gFItem_Subcat_CashTran -- 'Transfered Cash'
               )
               or
               (
                  f.fitem_transaction_type_id = pkg_db_billing_payable.gFITrxType_Disbursement and f.fitem_category_id =  PKG_DB_WRITE_OFF.g_Category_Disbursement  and f.fitem_sub_category_id in ( PKG_DB_BILLING_PAYABLE.gFItem_SubCategory_Refund,gFItem_SubCategory_check) --UTXPRODUCT-347
               )
            )
           and
               f.action_delta <> 0
           --and
           --    f.fitem_type_id = 246
           and
               f.action_id = 101
           and
                f.processing_date is not null;

   elsif v_object_type_id = gObjType_BillingAccount  --OSPRODUCT-13651
   then
           
           select account_type_id into v_account_type from dragon_billingaccount where billingaccount_id = in_object_id; --OSPRODUCT-17740
           
           IF v_account_type not in (4, 1501, 1601) --OSPRODUCT-17740
           then
  
           
                select
                     nvl(abs(sum(action_delta)),0)
                into
                     v_amount
                from
                     dragon_fichange f, dragon_fitransaction fi--, dragon_billingaccount db -- KR 02/05
                where
                     f.billing_account_id = in_object_id
                and
                     f.fitransaction = fi.fitransaction_id
                /*and
                     f.billing_account_id = db.billingaccount_id*/
                /*and
                     db.account_type_id not in (4, 1501, 1601)*/
                and
                     fi.status_enum = 37646
                and
                (
                    (
                      f.fitem_transaction_type_id = gFITrxType_Cash_Post
                    )
                     or

                    (
                      f.fitem_transaction_type_id = gFITrxType_CashCreditTransfer and f.fitem_sub_category_id = pkg_db_cash_apply.gFItem_Subcat_CashTran -- 'Transfered Cash'
                    )
                    or
                    (
                       f.fitem_transaction_type_id = pkg_db_billing_payable.gFITrxType_Disbursement and f.fitem_category_id = PKG_DB_WRITE_OFF.g_Category_Disbursement  and f.fitem_sub_category_id in ( PKG_DB_BILLING_PAYABLE.gFItem_SubCategory_Refund,gFItem_SubCategory_check) --UTXPRODUCT-347
                ))
                and
                    f.action_delta <> 0
                --and
                --    f.fitem_type_id = 246
                and
                    f.action_id = 101
                and
                     f.processing_date is not null;
                
          end if;
   -- LXPRODUCT-521- Start       
   elsif v_object_type_id = pkg_os_constant.gobjType_PolicyTerm
   then
   

         v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type  -- get policy from the Term
                        (
                             in_session_id,
                             in_transaction_id,
                             in_object_id,
                             pkg_os_constant.gobjType_Policy
                        );
                        
                        
           select
                nvl(abs(sum(action_delta)),0)
           into
                v_amount
           from
                dragon_fichange f, dragon_fitransaction fi, dragon_billingaccount db -- KR 02/05
           where
                f.policy_id = v_policy_id
           and     
                f.policy_term_id = in_object_id
           and
                f.fitransaction = fi.fitransaction_id
           and
                f.billing_account_id = db.billingaccount_id
           and
                db.account_type_id not in (4, 1501, 1601)
           and
                fi.status_enum = 37646
           and
           (
               (
                 f.fitem_transaction_type_id = gFITrxType_Cash_Post
               )
                or

               (
                 f.fitem_transaction_type_id = gFITrxType_CashCreditTransfer and f.fitem_sub_category_id = pkg_db_cash_apply.gFItem_Subcat_CashTran -- 'Transfered Cash'
               )
               or
               (
                  f.fitem_transaction_type_id = pkg_db_billing_payable.gFITrxType_Disbursement and f.fitem_category_id =  PKG_DB_WRITE_OFF.g_Category_Disbursement  and f.fitem_sub_category_id in ( PKG_DB_BILLING_PAYABLE.gFItem_SubCategory_Refund,gFItem_SubCategory_check) --UTXPRODUCT-347
               )
            )
           and
               f.action_delta <> 0
           --and
           --    f.fitem_type_id = 246
           and
               f.action_id = 101
           and
                f.processing_date is not null;
          
   -- LXPRODUCT-521- End       
   else
           return null;
   end if;


    return v_amount;

end fn_amt_cash_app_or_post_or_trasfrd;
--UTPRODUCT-4812


--UTPRODUCT-4847
function fn_get_term_payer_init_amt
(
     in_session_id            in           object.object_id%type,
     in_transaction_id        in           object.object_id%type,
     in_policy_term_id        in           object.object_id%type,
     in_policy_term_payer_id  in           object.object_id%type
) return number
as
     v_procedure_name               constant  system_log.program_name%type   :=   pkg_name||'fn_payplan_conflict_tf';
     v_session_control              pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
	v_return_value                 number := null;
     v_payer_billing_account_id     object.object_id%type;

begin

     begin
     
          select 
               payer_billing_account_id 
          into 
               v_payer_billing_account_id
          from  
               dragon_policy_term_payer
          where 
               policy_term_payer_id = in_policy_term_payer_id;
    
          select
               sum(nvl(s.initial_amount,0))
          into
               v_return_value
          from
               dragon_scheduled_installment s
          where
               s.policy_term_id = in_policy_term_id
          and
               s.payer_id = in_policy_term_payer_id
          and
               s.billing_account_id = v_payer_billing_account_id
          and
             s.current_pay_plan_inst = 'Yes';     --OSPRODUCT-23682
			   
			   
          if v_session_control.gLogging_Full then                             

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' term: ' || in_policy_term_id 
                    || ' term payer: ' || in_policy_term_payer_id
                    || ' payer billing account id: ' || v_payer_billing_account_id
               );
          				  
          end if;

          return v_return_value;

     exception

          when no_data_found then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' term: ' || in_policy_term_id || ' term payer: ' || in_policy_term_payer_id ||
                    ' payer billing account id: ' || v_payer_billing_account_id
               );

     end;

     return v_return_value;

end fn_get_term_payer_init_amt;
---UTPRODUCT-4847
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- --OSPRODUCT-11566 
--  %NAME
--        fn_get_fichange_src_tgt_details
--
--  %USAGE
--        This function returns source traget deatils for a give ficgange record.
--
--  %ALGORITHM
--        The retrun values is a conctnated string.
--        For the Category Cash(646) and fitransaction type Cash Apply(101) it will retrun CASH_PAYMENT_DETAILS
--        Else it return below values conacted with a ||
--              1) Policy Number or Billing Account Number when policy number is null
--              2) Policy Term
--              3) FITEM_BATCH_TYPE_NAME
--              4) INSTALLMENT_NUMBER
--              5) CATEGORY
--
--
--  %PARAMS
--        in_session_id               in          object.object_id%type,
--        in_transaction_id           in          object.object_id%type,
--        in_object_id                in          object.object_id%type --  An fichange_id needs to passed on to this
--    --  %NOTES
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_fichange_src_tgt_details
(
     in_session_id                  in      object.object_id%type,
     in_transaction_id              in      object.object_id%type,
     in_object_id                   in      object.object_id%type
)
return varchar2
is

    v_procedure_name                constant  system_log.program_name%type :=  pkg_name||'fn_get_fichange_src_tgt_details';
    v_session_control               pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

    v_return_value                  varchar2(500);
    v_category_id                   number;
    v_fitem_id                      object.object_id%type;
    v_fitem_ultimate_obj_id         object.object_id%type;
    v_fichange_term_id              object.object_id%type;
    v_term                          varchar2(100) := '';
    v_fitem_trans_type_id           number;

begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||Getting Fichange Source-Traget Details for  :'||in_object_id
          );

     end if;

    If in_object_id is not null then

        select
            fc.FITEM_CATEGORY_ID,fc.CASH_PAYMENT_DETAILS,fc.fitem_id,fc.policy_term_id,fitem_transaction_type_id,FITEM_ULTIMATE_TEMPLATE_ID
        into
            v_category_id,v_return_value,v_fitem_id,v_fichange_term_id,v_fitem_trans_type_id,v_fitem_ultimate_obj_id
        from
            dragon_fichange fc
        where
            fc.fichange_id = in_object_id;

        If Not(v_category_id = gFItem_Category_Cash and v_fitem_trans_type_id = gFITrxType_Cash_Apply) then
            --OSPRODUCT-11568
            if v_fitem_trans_type_id in( 101) and v_fitem_ultimate_obj_id is not null then
                v_fitem_id := v_fitem_ultimate_obj_id;
                
                select policy_term_id into v_fichange_term_id from dragon_fitem where fitem_id = v_fitem_id;
                
            end if;
            
            if v_fichange_term_id is not null then
                select
                    pt.POLICY_TERM_EFF_DATE|| ' : ' ||
                    nvl(pkg_os_object_io.fn_object_bv_path_get(11,11,v_fichange_term_id,'29749401.212029'),pt.POLICY_TERM_EXP_DATE)
                into v_term
                from dragon_policy_term pt
                where pt.policy_term_id = v_fichange_term_id;

                v_term := v_term || ' || ';

            end if;

            select
                nvl(f.POLICY_NO,billing_account_number) || ' || ' ||
                v_term ||
                f.FITEM_BATCH_TYPE_NAME || ' || ' ||
                decode(f.POLICY_TRX_SEQ_NUM,null,null, f.POLICY_TRX_SEQ_NUM|| ' || ') || --LXPRODUCT-469
                decode(f.INSTALLMENT_NUMBER,null,null, f.INSTALLMENT_NUMBER|| ' || ') ||
                f.CATEGORY
             into
                v_return_value
            from dragon_fitem f
            where f.fitem_id = v_fitem_id;
         end if;
    end if;
    return v_return_value;

end fn_get_fichange_src_tgt_details;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--  UTPRODUCT-4957 Starts
--  %NAME
--        fn_get_debit_item_count
--
--  %USAGE
--        This function returns debit fitem count for a specific account.
--
--  %ALGORITHM
--  NA
--
--  %PARAMS
--        in_session_id               in          object.object_id%type
--        in_transaction_id           in          object.object_id%type
--        in_billingaccount_id        in          object.object_id%type 
--        in_policy_id                in          object.object_id%type
--        in_policy_term_id           in          object.object_id%type
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function  fn_get_debit_item_count
(
     in_session_id              in        object.object_id%type,
     in_transaction_id          in        object.object_id%type,
     in_billingaccount_id       in        object.object_id%type,
     in_policy_id               in        object.object_id%type default null,
     in_policy_term_id          in        object.object_id%type default null
)    return number
is

     v_count                       float := 0;
     v_procedure_name              constant  system_log.program_name%type   :=   pkg_name||'fn_get_debit_item_count';
     v_session_control             pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calculating debit fitem counts for:'
               || 'in_billingaccount_id:'||in_billingaccount_id
               || 'in_policy_id:'||in_policy_id
               || 'in_policy_term_id:'||in_policy_term_id

          );
     end if;

     begin

          select
               count(1)
          into
               v_count
          from
               dragon_fitem
          where
               (billing_account_id =in_billingaccount_id)
          and
               (in_policy_id is null or policy_id = in_policy_id)
          and
               ( in_policy_term_id is null or policy_term_id=  in_policy_term_id)
          and
               fitem_category_id  not in (pkg_db_functions.gFItem_Category_Cash,pkg_db_functions.gFItem_Category_Comm,pkg_db_functions.gFItem_Category_DefPremComm,pkg_db_functions.gFItem_Category_Writeoff,pkg_db_functions.gFItem_Category_Disburse)--adj_writeoff) -- OSBILLING-3885
          and
               balance > 0
          and
               disbursement_batch_id is null  -- osbilling-5926
          ;

     exception
          when no_data_found
          then
               v_count:= 0;
     end;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calculating debit fitem counts for:'
               || 'in_billingaccount_id:'||in_billingaccount_id
               || 'in_policy_id:'||in_policy_id
               || 'in_policy_term_id:'||in_policy_term_id
               || ' Counts is:' || v_count

          );
     end if;

     return v_count;

end fn_get_debit_item_count;
-- UTPRODUCT-4957 Ends.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


function fn_validate_cc
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_ctf_id                in        object.object_id%type,
     in_card_type             in        number,
     in_card_number           in        varchar2 default null,
     in_security_code         in        varchar2 default null,
     in_flag                  in        number default null  --1 credit card length  2 security code length
)    return number
is

     v_validation_flag                  number := 0;
     v_procedure_name                   constant  system_log.program_name%type   :=   pkg_name||'fn_validate_cc';
     v_session_control                  pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_cc_len                           number := 0;
     v_sec_code_len                     number := 0;
     g_credit_card_len_check            number := 1;
     g_security_code_len_check          number := 2;
     g_amex_card_type                   number := 4;
     v_paymentProviderIntegration       number;
     v_paymentIntegrationType           number;
     v_proxyStub                        char;

     
begin
     
     
     v_paymentProviderIntegration  :=   nvl( pkg_os_object_io.fn_object_bv_path_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_session_id,
                                                  '210090.32855748'
                                             )
                                             ,2 );
     v_paymentIntegrationType      :=   nvl( pkg_os_object_io.fn_object_bv_path_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_session_id,
                                                  '210090.32907248'
                                             )
                                             ,1 );
     v_proxyStub                   :=   nvl( pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_ctf_id,
                                                  33177948
                                             )
                                             , 'Y' );
                                                  
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Validating Credit Card details '||
               ' Payment Provider Integration '    ||  v_paymentProviderIntegration  ||
               ' Payment Integration Type '        ||  v_paymentIntegrationType  ||
               ' CTF ID '                          ||  in_ctf_id      ||
               ' Proxy Stub '                      ||  v_proxyStub
          );
     end if;
     
     if v_paymentProviderIntegration = 1 and v_paymentIntegrationType = 1 and v_proxyStub = 'N'
     then
          return 1;
     end if;
     
     if in_flag = g_credit_card_len_check --Credit Card length check
     then
          v_cc_len       :=   length(in_card_number);
          if in_card_type is null or in_card_number is null or in_security_code is null
          then
               v_validation_flag := 1;
          elsif in_card_type = g_amex_card_type --American Express
          then
               if v_cc_len = 15
               then
                    v_validation_flag := 1;
               end if;
          else
               if v_cc_len = 16
               then
                    v_validation_flag := 1;
               end if;
          end if;
     elsif in_flag = g_security_code_len_check  --Security Code length
     then
          v_sec_code_len :=   length(in_security_code);
          if  in_card_type is null or in_card_number is null or in_security_code is null
          then
               v_validation_flag := 1;
          elsif  in_card_type = g_amex_card_type --American Express
          then
               if v_sec_code_len = 4
               then
                    v_validation_flag := 1;
               end if;
          else
               if v_sec_code_len = 3
               then
                    v_validation_flag := 1;
               end if;         
          end if;
     end if;
     
     return v_validation_flag;
     
end fn_validate_cc;
------------------------------------------------------------------------------------------------------------------------------------------
-- UTXPRODUCT-189 Starts
function fn_cr_apply_at_inv_inst_tf
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccouttrxset_id     in             object.object_id%type
)    return char
is 

     v_cr_apply_at_inv_inst_cnt   number;

begin 

     ----UTXPRODUCT-589 updated query
     select 
          count(1)
     into 
          v_cr_apply_at_inv_inst_cnt     
     from
          dual
     where
          exists 
                  (
                    select 
                         'x' 
                    from 
														   
                         dragon_fichange dc, 
                         dragon_scheduled_installment di     
                    where  
                         dc.billingaccounttrxset_id = in_billingaccouttrxset_id
						 
																				  
                    and 
                         dc.installment = di.installment_id
                    and 
                         di.invoice_flag = 1-- invoiced
                    and 
                         dc.action_id not in (PKG_DB_OBJECT.gFIChange_FYI)
                  )
                  
                  ;

     return case when v_cr_apply_at_inv_inst_cnt >0  then 'T' else 'F' end;

end fn_cr_apply_at_inv_inst_tf;
-- UTXPRODUCT-189 Ends


--OSPRODUCT-15762
function fn_get_part_clawback_comm_amt
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccout              in             object.object_id%type
) return number
is
     v_total_amount           number;
begin

     select    sum(nvl(BALANCE,0)) 
     into      v_total_amount
     from      dragon_fitem
     where     billing_account_id = in_billingaccout
     and       due_date is not null
     and       fitem_category_id = gFItem_Category_Comm
     and       balance > 0
     and       fitem_type_id  =    pkg_db_object.gFItem_Credit;
     
     return    v_total_amount;

end fn_get_part_clawback_comm_amt;


-- OSPRODUCT-16665
function fn_get_payment_plan_id
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_policy_image_id            in             object.object_id%type
) return object.object_id%type
is
     v_curr_chosen_pay_plan_id     object.object_id%type;
     v_new_pay_plan_id             object.object_id%type;
     v_new_pay_plan_md_id          number;
begin
     
     v_curr_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_policy_image_id,
                                       212021
                                  );
     
     v_new_pay_plan_md_id := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_image_id,
                                  33336248
                             );

     v_new_pay_plan_id := pkg_os_object_search.fn_object_with_attribute_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_policy_image_id,
                                pkg_db_payplan_modify.gObjType_PayPlan,
                                pkg_os_constant_bv.gbv_PaymentPlanID,
                                v_new_pay_plan_md_id
                           );
                           
     return nvl(v_new_pay_plan_id, v_curr_chosen_pay_plan_id);

end fn_get_payment_plan_id;

function fn_get_billing_account_id
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billing_acc_type_id        in             number
) return object.object_id%type
is
     v_billing_account_id          object.object_id%type;
begin
     
     begin
          
		select ba.billingaccount_id
            into v_billing_account_id
		  from dragon_billingaccount ba
		 where ba.account_type_id = in_billing_acc_type_id;
           
          return v_billing_account_id;
          
     exception
          when others then 
               raise;
     end;

end fn_get_billing_account_id;
-- end OSPRODUCT-16665

--OSPRODUCT-16994 start
function fn_get_credit_on_billAccount
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billingaccout              in             object.object_id%type
) return number
is
     v_total_amount           number;
begin

     select    nvl(sum(NVL(BALANCE,0)) - sum(nvl( CURR_DISBURSEMENT_AMOUNT,0)),0)
     into      v_total_amount
     from      dragon_fitem
     where     billing_account_id = in_billingaccout
     and       FITEM_ID is not null
     and       FITEM_CATEGORY_ID not in (gFItem_Category_Cash , gFItem_Category_Comm , gFItem_Category_Disburse ) 
     and       ( FITEM_TYPE_ID = case when ( nvl( FITEM_TRANSACTION_TYPE_ID , 0) in (gFITrxType_AdhocJournal , gBatch_DISHSinglePayment ) or 
               FITEM_CATEGORY_ID in (gFitem_Cat_GroupDividends , gFitem_Category_ExtCredit , 
               PKG_DB_ADHOC_JOURNAL.gFitem_Category_Dishfee , PKG_DB_OBJECT.gFItem_Cat_Discount , 
               PKG_DB_OBJECT.gFItem_Cat_ConvAdj , gFitem_Category_BankCharges ,gFitem_Category_RetroAdj ) ) 
               then pkg_db_object.gFItem_Credit else pkg_db_object.gFItem_Debit end ) 
     and       NVL(BALANCE , 0) <= -0.01;
     
     return    v_total_amount;

end fn_get_credit_on_billAccount;
--OSPRODUCT-16994 end

----- OSPRODUCT-17657 Start -----
-- The function returns 'T' (True) when the FItem provided for the billing account is disbursible.
-- Mimcs the Rule 9820848
---------------------------------
function fn_is_disbursible_fitem_for_customer_tf
(
  in_session_id                 in    object.object_id%type,
  in_transaction_id             in    object.object_id%type,
  in_billing_account_id         in    object.object_id%type,
  in_fitem_id                   in    object.object_id%type
)
return char
is
  g_fitem_category_commission     constant number              :=  946;
  g_fitem_category_disbursement   constant number              :=  5046;
  g_pt_transaction_type_audit     constant number              :=  11;
  
  v_procedure_name        constant system_log.program_name % type := 'fn_is_disbursible_fitem_for_customer_tf';
  v_result                              char                   := 'F';
  v_parent_billing_account_id           object.object_id%type  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '29704146.211343');
  v_fitem_amount_due_calculated         number                :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '29710546');
  v_fitem_category                      number                  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '29710146');
  v_fitem_assoc_disbursement_batch_id   object.object_id%type  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '32005946.211343');
  -- FItem. REF Associated Policy ID 
  v_fitem_assoc_policy_id               object.object_id%type  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '29721246.211343');
  -- FItem. REF Associated Policy Trasnaction. Transaction Type 
  v_fitem_assoc_pt_tran_type            object.object_id%type  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '29748446.212030');
  -- FItem. FItem.Billing Element MD ID 
  v_fitem_billing_element_md_id         object.object_id%type  :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_fitem_id, '32199046');
  v_billing_account_type                number                 :=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billing_account_id , 29711346);
  v_billing_account_selected_policy     number                 :=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billing_account_id , 32488360);
  v_billing_account_display_account_item_for_disb     number   :=  pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billing_account_id , 32488160);
       
begin
  if (
    v_parent_billing_account_id = in_billing_account_id And 
    (v_fitem_amount_due_calculated <0      OR  v_fitem_category = g_fitem_category_commission)  
    And v_fitem_category  <> g_fitem_category_disbursement 
    And v_fitem_assoc_disbursement_batch_id is null 
    And 
    (
      (
        (pkg_db_suspension.fn_db_is_policy_suspend(in_session_id, in_transaction_id, v_fitem_assoc_policy_id)  = 1) 
        and 
        (pkg_db_suspension.fn_db_is_activity_suspended(in_session_id, in_transaction_id, v_fitem_assoc_policy_id, 3)  <>1) 
      )
      or  
      (pkg_db_suspension.fn_db_is_policy_suspend(in_session_id, in_transaction_id, v_fitem_assoc_policy_id)  = 0)
    )  
    And 
    ( 
      NVL(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, v_fitem_assoc_policy_id, 16746) , 'F') = 'F' 
      Or 
      ( 
        NVL(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, v_fitem_assoc_policy_id, 16746) , 'F') = 'T' 
        And 
        ( 
        NVL(v_fitem_assoc_pt_tran_type, 0) <> g_pt_transaction_type_audit
        Or (
          NVL(v_fitem_assoc_pt_tran_type, 0) = g_pt_transaction_type_audit           
          And NVL(v_fitem_billing_element_md_id , 0) = 72446 
        ) 
        ) 
      ) 
    )  
    And 
    PKG_DB_FUNCTIONS.fn_AssocCashApply_exts_tf(in_session_id, in_transaction_id, in_fitem_id) = 'F'  
    and  ( 
      (
        nvl(v_fitem_assoc_policy_id , 0)     =  case  when v_billing_account_type = 201 --Customer 
                  then nvl(v_fitem_assoc_policy_id , 0)  
                  else
                  nvl(to_number(v_billing_account_selected_policy)  ,3 ) 
                  end
      )  
      OR 
      nvl(v_fitem_assoc_policy_id , 0)  = case when v_billing_account_display_account_item_for_disb  = 1 -- YES           
                then 0 
                else 1 
                end 
    )
  )
  then
    v_result := 'T';
  end if;
  return v_result;
  exception
    when others then  
      pkg_os_logging.sp_log_error
      (
        in_session_id,
        in_transaction_id,
        v_procedure_name,
        'Error while checking FItem for Disbursement :' || sqlerrm
      );
      raise;
      
end fn_is_disbursible_fitem_for_customer_tf;
----- OSPRODUCT-17657 End -----

---------------------------------------------------------------------------------------------------------------------------
--   %NAME
--        fn_check_valid_payment_trx
--
--   %USAGE
--        This function will evaluate if the existence of the BATS object should be true or false.
--
--   %ALGORITHM
--        Check the FITransaction of type 401(Credit/transfer) or 603(Cash post) exist for the passed BATS object
--
--
--   %PARAM    in_session_id                 Session Id
--   %PARAM    in_transaction_id             Transaction Id
--   %PARAM    in_BATS_id                    input BATS object Id
--   %PARAM    in_policy_id                  input BV value(Policy selected in the filter)
--------------------------------------------------------------------------------------------------------------------------
function fn_check_valid_payment_trx
(
     in_session_id       in   object.object_id%type,
     in_transaction_id   in   object.object_id%type,
     in_BATS_id          in   object.object_id%type,
     in_policy_id        in   business_variable.business_variable_id%type
)
return char is
     v_count                  number := 0;
     --v_policy_number          VARCHAR2(50);
     v_exists                 char(1) := 'F';
     v_session_control        pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
begin

     if v_session_control.gLogging_Full 
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'pkg_db_functions.fn_check_existence_tf',
               'Entering fn_check_existence_tf with ' ||
               '...Policy ID: ' || in_policy_id ||
               ' ...BATS ID: ' || in_BATS_id
          );
     end if;

          SELECT    COUNT(1)
     INTO      v_count
     FROM      dragon_billingaccounttrxset t1
     WHERE     billingaccounttrxset_id = in_BATS_id
     AND       batch_status_id = gBatchStatus_Processed
     AND       (
                    (batch_type_id = gBatch_DisburseAdjust AND posted_amount > 0) 
                    OR
                    (
                         (
                              batch_type_id = gBatch_SinglePayment
                              AND
                              posted_amount < 0
                         ) 
                         OR
                         (
                              batch_type_id IN  (gBatch_AutoCashApply,gBatch_Manual_Cash_apply) 
                              AND posted_amount > 0
                         )
                    )
               )
               AND EXISTS
               (
                    SELECT    1
                    FROM      dragon_fitransaction t2
                    WHERE     t2.batch_ref_no = t1.billingaccounttrxset_id
                    AND       fitransaction_type_id IN
                              (
                                   gFITrxType_Cash_Apply,
                                   gBatch_AutoWriteOff
                              )
                    AND       NVL(ACTION_POLICY_ID, 0) =  nvl(decode(in_policy_id,0,null,in_policy_id), NVL(ACTION_POLICY_ID, 0))
               );

     if (v_count > 0) 
     then
          v_exists := 'T';
     end if;

     if v_session_control.gLogging_Full 
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'pkg_db_functions.fn_check_existence_tf',
               '...v_count- '      ||   v_count || 
               ' ...v_exists- '    ||   'v_exists'
          );
     end if;

     return v_exists;
     exception
          when others 
          then
               if v_session_control.glogging_full 
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         'pkg_db_functions.fn_check_existence_tf',
                         '|||| Exception while querying for BillingAccountTransactionSet'
                    );
               end if;
end fn_check_valid_payment_trx;
-------------------------------------------------------
--OSPRODUCT-19738 starts
function fn_disburse_button_for_stmt
(
    in_session_id          object.object_id%TYPE ,
    in_transaction_id      object.object_id%TYPE ,
    in_statement_id        object.object_id%TYPE
)
return number 
is
     var_display              number := 0; -- 1:display, 0:Dont display      -- OSPRODUCT-18309: making the default value as 0.
     var_partner_recon_rollup number;
     var_net_amount           number := 0;
     var_count_cash_alloc     number := 0;
     v_procedure_name constant system_log.program_name%type := pkg_name || 'fn_disburse_button_for_stmt';
     v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

begin
       
     begin
          
          select sum(ru_agent_net_due)
            into var_net_amount --osproduct-9352 changing ru_net_due to ru_agent_net_due
            from dragon_rollup
           where ru_parent_id = in_statement_id
             and ru_object_state_id not in (
                                                pkg_db_reconciliation.gbatchstatus_created,
                                                pkg_db_reconciliation.gobjstate_reconexcluded,
                                                pkg_db_reconciliation.gobjstate_reconprocessed -- osproduct-18309
                                           );     
     exception
          when no_data_found then
             var_net_amount := 0;
     end;
       
     begin
          
          select count(1)
            into var_count_cash_alloc
            from dragon_cash_allocation
           where fitemalloc_ass_agencystmt_id = in_statement_id --59860655870--59849080970--59860655870
             and pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id , fitem_id) = pkg_db_reconciliation.gobjtype_fitem --2365246
             and to_number(replace(fitem_cash_balance, ',', '')) < 0
             and fitem_category <> 'Receipt';     
             
     end;
       
     if v_session_control.gLogging_Full then
          pkg_os_logging.sp_log(in_session_id,
                                 in_transaction_id,
                                 v_procedure_name,
                                 '... var_net_amount=' || var_net_amount ||
                                 ', var_count_cash_alloc=' ||
                                 var_count_cash_alloc);
     end if;
       
     -- if the net amount on the stmt is zero, no need to display disburse button as there is nothing to disburse
     --
     -- OSPRODUCT-33591
     if var_net_amount = 0 then
     
          if  var_count_cash_alloc = 0 then
               return 0;
          else
               return 1;
          end if;
   
     end if;
     -- end OSPRODUCT-33591     
       
     -- For credit items
     -- Check if any  credit items in the statement is other than reconcilled or processed status, if no then dont show the disburse button
     for i in (
                   select dr.ru_id, dr.ru_object_state_id, ru_agent_net_due --count(1)  --osproduct-10155
                     from dragon_rollup dr
                    where ru_parent_id = in_statement_id
                      and ru_object_state_id not in (
                                                         pkg_db_reconciliation.gbatchstatus_created,
                                                         pkg_db_reconciliation.gobjstate_reconexcluded,
                                                         pkg_db_reconciliation.gobjstate_reconprocessed -- osproduct-18309
                                                    ) --(23,64146, 43046)
                      and ru_agent_net_due < 0 --osproduct-10155
              ) 
     loop
          
          var_partner_recon_rollup := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               i.RU_ID,
               pkg_db_reconciliation.gbv_ObjectSate --210153
          );
          
          if v_session_control.gLogging_Full then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Credit Item: RU_ID:' || i.ru_id ||
                    'var_partner_recon_rollup: ' ||
                    var_partner_recon_rollup || 'amount ' ||
                    i.ru_agent_net_due
               );
               
          end if;
         
          if var_partner_recon_rollup not in (
                                                  pkg_db_reconciliation.gobjstate_reconreconciled,
                                                  pkg_db_reconciliation.gobjstate_reconwithcommdiff,
                                                  pkg_db_reconciliation.gobjstate_reconwithcommpremdif,
                                                  pkg_db_reconciliation.gobjstate_reconwithpremdiff
                                                  -- pkg_db_reconciliation.gobjstate_reconprocessed -- ospRODUCT-18309: moved this status to the cursor
                                             ) 
          then
                     
               --if any of the credit items in recon stmt is not in recobciled state, then dont show the button                                                
               ----OSPRODUCT-10155 added other reconciled status RPD,RCD, RPCD
                                    
               if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log(in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.....Setting var_display=0 and returning 0. The Disbursement buttong will NOT be shown ');
               end if;
                                    
               var_display := 0;
               return 0;
               
          else
               
               var_display := 1; -- OSPRODUCT-18309: we have at least one item to Disburse.
               
          end if;
         
     end loop;
       
     --For debit items
     -- Check if any  debit items in the statement is other than processed status, if no then dont show the disburse button
     for j in (
                   select ru_id, ru_agent_net_due
                     from dragon_rollup
                    where ru_parent_id = in_statement_id
                      and ru_object_state_id not in
                          (pkg_db_reconciliation.gbatchstatus_created,
                           pkg_db_reconciliation.gobjstate_reconexcluded) --(23,64146)
                      and
                         --ru_net_due >=0
                          ru_agent_net_due > 0 --osproduct-10155
              ) 
     loop
         
          var_partner_recon_rollup := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    j.RU_ID,
                                                                    PKG_DB_RECONCILIATION.gbv_ObjectSate --210153
                                                                    );
          if v_session_control.gLogging_Full then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Debit Item: RU_ID:' || j.ru_id ||
                    'var_partner_recon_rollup: ' ||
                    var_partner_recon_rollup || 'amount ' ||
                    j.ru_agent_net_due
               );
               
          end if;
         
          if var_partner_recon_rollup not in (pkg_db_reconciliation.gObjState_ReconProcessed) then
               
               if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log(in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.....Setting var_display=0 and returning 0. The Disbursement buttong will NOT be shown ');
               end if;
           
               var_display := 0;
               return 0;
               
          end if;
     
     end loop;
       
     if var_display = 1 then
          return 1;
     else
          return 0;
     end if;
     
end fn_disburse_button_for_stmt;

--OSPRODUCT-19738 ends
---------------------------------------------------------
--OSPRODUCT-20729
function fn_billing_address_get
(
    in_session_id             object.object_id%TYPE ,
    in_transaction_id         object.object_id%TYPE ,
    in_billingaccount_id        object.object_id%TYPE
)
return varchar2 is
    v_billing_address     varchar2(500);
    v_address_line1       varchar2(100);
    v_address_line2       varchar2(100);
    v_address_city        varchar2(100);
    v_address_state       varchar2(100);
    v_address_country     varchar2(100);
    v_address_zipcode     varchar2(100);
    v_ba_object_type_id   number := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210149' );
begin
   case when  v_ba_object_type_id = 205  --customerentity
   then 
       v_address_line1    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.29325214' );
       v_address_line2    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.210417' );
       v_address_city     := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.29326314' );
       v_address_state    := pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.210419' ));
       v_address_zipcode  := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.29604646' );
       v_address_country  := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29254214.210423' ));
       
       v_billing_address  := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
       
   when  v_ba_object_type_id = 63 and pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29711346' ) not in(4, 1501, 2446, 2546)
   then  
       v_address_line1    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.29325214' );
       v_address_line2    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.210417' );
       v_address_city     := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.29326314' );
       v_address_state    := pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.210419' ));
       v_address_zipcode  := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.29604646' );
       v_address_country  := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29367214.210423' ));
       
       v_billing_address  := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
       
   when  v_ba_object_type_id = 63 and pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29711346' ) in(4, 1501, 2446, 2546)
   then  
        v_address_line1   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.212113' );
        v_address_line2   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.212114' );
        v_address_city    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.212115' );
        v_address_state   :=  pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.212116' ));
        v_address_zipcode := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.212117' );
        v_address_country := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.210356.210090.29436346' ));
        
        v_billing_address := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
        
   when  v_ba_object_type_id = 309
   then  
        v_address_line1   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.29325214' );
        v_address_line2   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.210417' );
        v_address_city    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.29326314' );
        v_address_state   := pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.210419' ));
        v_address_zipcode := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.29604646' );
        v_address_country := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.211224.29367214.210423' ));
        
        v_billing_address := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
         
   when  v_ba_object_type_id = 24
   then  
        v_address_line1   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.29325214' );
        v_address_line2   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.210417' );
        v_address_city    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.29326314' );
        v_address_state   := pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.210419' ));
        v_address_zipcode := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.29604646' );
        v_address_country := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.29252214.29253414.29254014.210423' ));
        
        v_billing_address := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
         
   when  v_ba_object_type_id = 3200746 and pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32349246' ) is null
         and pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32452546' ) is null 
   then  
        v_address_line1   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.29325214' );
        v_address_line2   := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.210417' );
        v_address_city    := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.29326314' );
        v_address_state   := pkg_os_lookup.fn_lookup_list_short_text_get ( 5050401, pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.210419' ));
        v_address_zipcode := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.29604646' );
        v_address_country := pkg_os_lookup.fn_lookup_list_text_get ( 50 ,pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_billingaccount_id,'29704546.32253946.210423' ));
        
        v_billing_address := v_address_line1 ||' '|| v_address_line2 ||', '|| v_address_city ||', '|| v_address_state ||' '|| v_address_zipcode ||' '|| v_address_country;
   
   else v_billing_address := '';
   end case;
   
   return v_billing_address;
end;
-----------------------------------------------------------------------------------------------
-- OSPRODUCT-19296
function fn_get_policy_balance_amt
(
     in_session_id                         in         object.object_id%type,
     in_transaction_id                     in         object.object_id%type,
     in_policy_id                          in         object.object_id%type
) return  number 
as
    v_policy_balance  number; 

begin

  begin 
    Select (DUE_AMOUNT - POLICY_CREDIT_AMOUNT - POSTED_CASH + CURRENT_CASH_CREDIT_DISBURSEMENT) into v_policy_balance 
      from DRAGON_POLICY where policy_id= in_policy_id;

     exception when no_data_found then
           v_policy_balance := 0;
  end;

    return v_policy_balance;
    
end fn_get_policy_balance_amt;
---------------------------------------------------------
---------------------------------------------------------
--UTPRODUCT2-26 - Start
function fn_get_installment_lead_time
(
    in_session_id               in        object.object_id%type,
    in_transaction_id           in        object.object_id%type,
    in_policy_id                in        object.object_id%type default null,     
    in_installment_id           in        object.object_id%type default null,     
    in_policy_term_id           in        object.object_id%type default null, 
    in_installment_no           in        number default null 
)
return number
is

    v_procedure_name                    constant  system_log.program_name%type   :=   pkg_name||'fn_get_installment_lead_time';
    v_session_control                   pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    
    v_policy_id                         object.object_id%type;
    v_policy_term_id                    object.object_id%type;
    v_policy_trx_id                     object.object_id%type;
    v_installment_no                    number;
    v_basis_policy_trx_id               object.object_id%type;     
    v_basis_term_id                     object.object_id%type;    
    v_rw_ptp_id                         object.object_id%type; -- OSPRODUCT-22393
    v_rw_pred_ptp_id                    object.object_id%type; -- OSPRODUCT-22393
    
    v_jurisdiction_id                   number;
    v_transaction_type_id               dragon_policy_trx.policy_trx_type_id%type;
    v_product_id                        pd_product.pd_product_id%type; 
    v_program_id                        object_bv_value.business_variable_value%type; 
    v_lead_days                         number :=0;
    v_first_ins_lead_days               number :=0;
    v_remaining_ins_lead_days           number :=0;
    v_counter                           number :=0; -- OSPRODUCT-22393    

    

begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Getting the Installment Lead days from Pd_state_compliance '
               || ' Installment ID : ' || in_installment_id 
               || ' Policy Term ID : ' || in_policy_term_id 
               || ' Installment No : ' || in_installment_no
          );
     end if;
     
     
    If ( in_installment_id is null and in_policy_term_id is null and  in_installment_no is null)
        or 
            ( in_installment_id is null and 
                ( in_policy_term_id  is not null and  in_installment_no is null)
            or      
                ( in_policy_term_id is null and  in_installment_no is not null)
            )
    then 
        
        
        v_lead_days := pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_id, pkg_db_stmt.gPropertyDirectLeadTime);
         
		 pkg_os_logging.sp_log(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...The installment id, policy term id or the installment number is null.
                                   Required values are not availabe to calculate the lead days. Getting lead time from pd property ' ||
                                  ' Installment ID : ' || in_installment_id ||
                                  ' Policy Term ID : ' || in_policy_term_id ||
                                  ' Installment No : ' || in_installment_no ||
								  'Lead days' || v_lead_days );
		 
		 
		
		return v_lead_days;
		
                             
      end if;
        --raise no_data_found;
    
    
    If in_policy_term_id is not null then
        v_policy_term_id := in_policy_term_id ;
    elsif in_installment_id is not null then
        v_policy_term_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_installment_id);
    end if;
    
    if in_installment_no is not null then
        v_installment_no := in_installment_no;
    else
        v_installment_no :=  pkg_os_object_io.fn_object_bv_get
                                (
                                      in_session_id ,
                                      in_transaction_id,
                                      in_installment_id,
                                      29718346 -- PolicyTermScheduledPaymentInstallment - Float - Installment Number
                                );         
    end if;
    

    If in_policy_id is not null then
        v_policy_id := in_policy_id;
    else
        v_policy_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, v_policy_term_id);
    end if;    
    
    v_policy_trx_id :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id ,
                              in_transaction_id,
                              v_policy_term_id,
                               29749301 -- PolicyTerm - xReference - _Reference_Created by
                        );  
   v_transaction_type_id :=  pkg_os_object_io.fn_object_bv_get
                                    (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_trx_id, 
                                    gbv_PolicyTransactionType -- 212030 -- PolicyTransaction - List - Transaction Type
                                    );

    v_counter := 0;
    While v_policy_trx_id is not null and 
          v_transaction_type_id in 
                (
                    pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
                    --pkg_os_policy_transaction.gPolicyTrxType_Reissue,
                    pkg_os_policy_transaction.gPolicyTrxType_Rewrite
                ) and
            v_counter < 10    
                
    loop
         v_counter := v_counter + 1;     
         if v_session_control.gLogging_Full
         then
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...Getting the base trasaction type for Rewrite ' ||
                   ' Transaction Type : ' || v_transaction_type_id ||
                   ' Transaction ID : ' || v_policy_trx_id
              );
         end if;  
         
        v_basis_policy_trx_id := pkg_os_object_io.fn_object_bv_get
    
                                    (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_trx_id, 
                                    22605205 -- PolicyTransaction - xReference - _Reference_Basis Transaction
                                    );
      --OSPRODUCT-21860                               
      if v_basis_policy_trx_id is null and v_transaction_type_id =  pkg_os_policy_transaction.gPolicyTrxType_Rewrite
      then 
          -- check if it is a BOR'd policy 
          --if pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_id, pkg_db_bor.gRef_BORd_Policy) is not null 
          if pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_term_id, 31531746) is not null -- OSPRODUCT-22393
          then
                
              -- Get the prior term 
              v_basis_term_id := pkg_os_object_io.fn_object_bv_get
    
                                          (
                          in_session_id,
                          in_transaction_id,
                          v_policy_term_id,
                          31531746 -- _Reference_Predecessor ( prior term) 
                                          );
        -- OSPRODUCT-22393 - Start
        else       
        

            v_rw_ptp_id := pkg_os_object_io.fn_object_bv_get

                              (
                              in_session_id,
                              in_transaction_id,
                              v_policy_trx_id,
                              212318 -- PolicyTransaction - xReference - _Reference_Coverages
                           );            
                        
            v_rw_pred_ptp_id := pkg_os_object_io.fn_object_bv_get
    
                                  (
                                  in_session_id,
                                  in_transaction_id,
                                  v_rw_ptp_id,
                                  32752248 -- - Policy - xReference - _Reference_Rewrite Predecessor 
                               );     
                               
            v_basis_policy_trx_id :=  pkg_os_object_search.fn_object_get_parent_of_type
                                                           (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_rw_pred_ptp_id,
                                                           629
                                                          );    
                                                          
                           
            v_basis_term_id := pkg_os_object_io.fn_object_bv_get
        
                                        (
                                        in_session_id,
                                        in_transaction_id,
                                        v_basis_policy_trx_id, 
                                        29728801 -- PolicyTransaction - xReference - _Reference_Belongs to
                                        );      
                                        
                                        
          end if ;
          -- OSPRODUCT-22393 - End
                                      
      else       
      
                        
        v_basis_term_id := pkg_os_object_io.fn_object_bv_get
    
                                    (
                                    in_session_id,
                                    in_transaction_id,
                                    v_basis_policy_trx_id, 
                                    29728801 -- PolicyTransaction - xReference - _Reference_Belongs to
                                    );
                                 
      end if ;            
                                    
        v_policy_trx_id :=  pkg_os_object_io.fn_object_bv_get
                            (
                                  in_session_id ,
                                  in_transaction_id,
                                  v_basis_term_id,
                                   29749301 -- PolicyTerm - xReference - _Reference_Created by
                            );  
                            
                            
                            
                         

                                    
       v_transaction_type_id :=  pkg_os_object_io.fn_object_bv_get
                                        (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_trx_id, 
                                        gbv_PolicyTransactionType -- 212030 -- PolicyTransaction - List - Transaction Type
                                        );     
                                        
 
         v_policy_term_id := pkg_os_object_io.fn_object_bv_get
    
                                    (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_trx_id, 
                                    29728801 -- PolicyTransaction - xReference - _Reference_Belongs to
                                    );  
                                    
                                    
                                        
         if v_session_control.gLogging_Full
         then
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...Retrieved the base trasaction type for Rewrite ' ||
                   ' Transaction Type : ' || v_transaction_type_id  || 
                   ' Basis Transaction id : ' || v_basis_policy_trx_id ||
                   ' Basis Term id : ' || v_basis_term_id ||
                   ' Term created transaction : ' || v_policy_trx_id                    
              );
         end if;  
                                                 
                                    
    end loop;
            
     
     v_product_id   :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id ,
                              in_transaction_id,
                              v_policy_id,
                              gbv_policy_product_id
                        );


     v_program_id  :=  pkg_os_object_io.fn_object_bv_get
                        (
                              in_session_id ,
                              in_transaction_id,
                              v_policy_id,
                              gbv_policy_program_id
                        );

    If v_transaction_type_id is null or v_counter > 10
    then 
        pkg_os_logging.sp_log_error
        (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '... Unable to find Transaction Type ID to calculate the Lead days.  '   
              || ' Installment ID : ' || in_installment_id 
               || ' Policy Term ID : ' || in_policy_term_id 
               || ' Installment No : ' || in_installment_no
               ||sqlerrm||dbms_utility.format_error_backtrace   
        );

        v_lead_days := pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_id, pkg_db_stmt.gPropertyDirectLeadTime);
        return v_lead_days;
        
        --raise no_data_found;
    end if;
    
      begin
           Select
                policy_jurisdiction_id
           into
                v_jurisdiction_id
           from
                dragon_policy
           where
                policy_id = v_policy_id;

      exception when no_data_found
           then
           v_jurisdiction_id := 0;
      end;

        if v_session_control.gLogging_Full
                 then
                   pkg_os_logging.sp_log
                   (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     ' :Jurisdiction ID: ' ||v_jurisdiction_id ||
                     ' :Product ID: '||  v_product_id ||
                     ' :Program ID: ' ||v_program_id ||
                     ' Transaction Type ID: ' || v_transaction_type_id 
                     
                   );
        end if;
      begin
           select
                ps.first_ins_lead_days,ps.remaining_ins_lead_days
           into
                v_first_ins_lead_days,v_remaining_ins_lead_days
           from
                pd_state_compliance ps
           where
                
                (
                     ps.jurisdiction_id  in (v_jurisdiction_id, gDefaultJurisdictionID)
                )                    
           and
                ps.transaction_type_id = v_transaction_type_id
           and
                (
                    ps.pd_product_id  in (v_product_id, pkg_os_constant.gDefaultProductID)
                )     
           and
                (                                                  
                (ps.program_id is null)
                or
                (v_program_id is null)
                or
                (ps.program_id  = v_program_id )
                );
      exception
           when no_data_found  then
            pkg_os_logging.sp_log_error
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '... Error while reading the Lead days from Pd_State_Compliance.  '   
                   || ' Installment ID : ' || in_installment_id 
                   || ' Policy Term ID : ' || in_policy_term_id 
                   || ' Installment No : ' || in_installment_no
                   ||sqlerrm||dbms_utility.format_error_backtrace   
            );

        v_lead_days := pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_id, pkg_db_stmt.gPropertyDirectLeadTime);
        return v_lead_days;        
            --raise no_data_found;
      end;



    if v_session_control.gLogging_Full
             then
               pkg_os_logging.sp_log
               (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '...Lead days values retrived'|| 
                 ' First Installment Lead days ' || v_first_ins_lead_days ||
                 ' Remaining Installment Lead days ' || v_remaining_ins_lead_days ||
                 ' Installment number ' || v_installment_no

               );
    end if;
    
    If v_installment_no = 1 then
        v_lead_days := v_first_ins_lead_days;
    else
        v_lead_days := v_remaining_ins_lead_days;
    end if;
    
    return v_lead_days;

end fn_get_installment_lead_time;
--UTPRODUCT2-26 - End
---------------------------------------------------------
--OSPRODUCT-21417 - Start
function fn_delinquency_task_closure
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_billingaccount_id          in        object.object_id%type
)
return number
is

    v_procedure_name                    constant  system_log.program_name%type   :=   pkg_name||'fn_delinquency_task_closure';
    v_session_control                   pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    
     v_count                            number := 0;
     
begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Calling  Agency Delinquency task closure for billing account id ' || in_billingaccount_id
          );
     end if;
     
     select    count(1)
     into      v_count
     from      dragon_fitem df
     where     df.billing_account_id = in_billingaccount_id
     and       df.fitem_type_id = 146
     and       df.aging_status_id = 3   --past due (3)
     and       df.balance >= 0.01 
     AND       DF.AGENCY_DUE_DATE <= 
          (pkg_db_functions.fn_get_billacc_current_date(df.session_id, df.transaction_id, df.billing_account_id) -- OSPRODUCT-22467
          - nvl(pkg_os_product.fn_product_property_get( df.SESSION_ID, df.TRANSACTION_ID, df.policy_id, 68148) , 50))
     and       DF.value_stream is null ;
     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Count for past fitems ' || v_count
          );
     end if; 

     if v_count = 0
     then
          return 1;
     else
          return 0;
     end if;

end fn_delinquency_task_closure;
--OSPRODUCT-21417 - End
-----------------------------------------------------------------------

-- UTPRODUCT2-60 - Start
function fn_term_pending_cancel_count
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policy_term_id             in        object.object_id%type
)
return number
is

    v_procedure_name                    constant  system_log.program_name%type   :=   pkg_name||'fn_term_pending_cancel_count';
    v_session_control                   pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    
     v_count                            number := 0;
     
begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Getting the count of Pending Cancel for the policy term ' || in_policy_term_id
          );
     end if;
     
    select  count(1)
    into    v_count
    from    DRAGON_POLICY_TRX 
    where   POLICY_TRX_TYPE_ID = pkg_os_policy_transaction.gPolicyTrxType_PendCancel
    and     POLICY_TRX_OBJECT_STATE_ID = pkg_os_policy_transaction.gState_PolicyTrxProcessed
    and     POLICY_TERM_ID = in_policy_term_id
    and     POL_TRX_CAN_REASON = 13 -- no pay cancellation
            ;

     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Count of Non Pay Pending Cancel ' || v_count
          );
     end if; 

  return v_count;


end fn_term_pending_cancel_count;
-- UTPRODUCT2-60 - End

-- OSPRODUCT-23622
function fn_discarding_cpp_trx_tf
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policy_id                  in        object.object_id%type
)
return char
is

    v_procedure_name               constant  system_log.program_name%type   :=   pkg_name||'fn_discarding_cpp_trx_tf';
    v_session_control              pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
    v_selected_items               varchar2(500);

    v_value_list                   pkg_os_token.t_string_table;

    v_current_list_id              object.object_id%type;
    v_object_id                    object.object_id%type;

    v_value_list_index             number;
                                 
    v_trx_subtype_id                object.object_id%type;          
     
begin

     v_current_list_id := pkg_os_object_io.fn_object_bv_get
                           (
                                   in_session_id,
                                   in_transaction_id,
                                   in_session_id,
                                   pkg_os_constant_bv.gbv_GenObjCurrentList
                           );
                           
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....Starting to set the Rolled Forward Flag for List ID : '||v_current_list_id
          );

     end if;
     --
     --   Get the Selected Items for the Current List ID ...
     --

     v_selected_items  := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id ,
                              v_current_list_id,
                              pkg_os_constant_bv.gbv_ListElementsSelected
                          );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....ListElementsSelected: '|| v_selected_items
          );

     end if;

     pkg_os_token.sp_tokenize_string
     (
          v_selected_items,
          ',',
          v_value_list
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.... No. of Selected List Items : '|| v_value_list.count
          );

     end if;

     if v_value_list.count > 0
     then

          v_value_list_index := v_value_list.first;

     end if;


     while v_value_list_index is not null
     loop

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....List Element id: '||v_value_list(v_value_list_index)
               );

          end if;

          v_object_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id  ,
                              v_value_list(v_value_list_index),
                              pkg_os_constant_bv.gbv_ListElementObject
                         );
                         
          v_trx_subtype_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id  ,
                                   v_object_id,
                                   pkg_db_payplan_modify.gbv_PolicyTrx_SubType --26542407
                              ); 

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....The selected Object ID: '|| v_object_id ||
                    '... Subtype ID: ' || v_trx_subtype_id
               );

          end if;
          
          if v_trx_subtype_id = pkg_db_payplan_modify.gChangePaymentPlan then
               
               return 'T';
          
          end if;

          v_value_list_index := v_value_list.next( v_value_list_index );

     end loop;
     
     return 'F';

end fn_discarding_cpp_trx_tf;
-----------------------------------------------------------------------
-- OSPRODUCT-23655 start
function fn_payplan_conflict_tf
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policy_trx_id              in        object.object_id%type
)
return char
is

    v_procedure_name               constant  system_log.program_name%type   :=   pkg_name||'fn_payplan_conflict_tf';
    v_session_control              pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
    v_selected_items               varchar2(500);

    v_value_list                   pkg_os_token.t_string_table;

    v_current_list_id              object.object_id%type;
    v_object_id                    object.object_id%type;

    v_value_list_index             number;
                                 
    v_trx_subtype_id               object.object_id%type;
    
    v_multipayer_enabled_tf        char;
    v_ptp_id                       object.object_id%type;
    v_rolled_back_pt               object.object_id%type;
    v_rolled_back_ptp_id           object.object_id%type;
    v_rb_pt_chosen_pay_plan_id     object.object_id%type;
    v_pt_chosen_pay_plan_id        object.object_id%type;
    v_rb_pt_payplan_md_id          number;
    v_pt_payplan_md_id             number;
    v_payer_list                   pkg_db_multipayer.t_payer_tab;
    v_payer_index                  object_bv_value.business_variable_value%type;
    v_rb_payer_id                  object.object_id%type;
    v_rf_payer_id                  object.object_id%type;
    v_rb_modified_ind              number;
	v_bor_session_tf               char(1);
     
begin
      
     v_bor_session_tf := pkg_os_object_io.fn_object_bv_get  --OSPRODUCT-25482
                           (
                                in_session_id,
                                in_transaction_id,
                                in_session_id,
                                pkg_db_suspension.gbv_UserSession_BOR_trx -- 32972548
                           );
                           
	 pkg_os_logging.sp_log  -- log to print bor session flag value 
	 (
		in_session_id,
		in_transaction_id,
		v_procedure_name,
		'...bor session value: ' || v_bor_session_tf
	 );   
		  
     if nvl(v_bor_session_tf, 0) <> 1 then    -- OSPRODUCT-25482   
	 
	    v_ptp_id := pkg_os_object_io.fn_object_bv_get
					(
						in_session_id,
						in_transaction_id,
						in_policy_trx_id,
						pkg_db_payplan_modify.gbv_PolicyTrxRefCoverages  --212318
					);
			 
	    v_rolled_back_pt := pkg_os_object_io.fn_object_bv_get
					   (
							   in_session_id,
							   in_transaction_id,
							   in_policy_trx_id,
							   pkg_db_bor.gbv_xREF_PolTrx_RollFWDTrx  --27922805
					   );
                           
		if v_rolled_back_pt is not null then
                           
		    v_rolled_back_ptp_id := pkg_os_object_io.fn_object_bv_get
									 (
											 in_session_id,
											 in_transaction_id,
											 v_rolled_back_pt,
											 pkg_db_payplan_modify.gbv_PolicyTrxRefCoverages  --212318
									 );
								 
		    -- Modified Pay Plan Indicator
		    v_rb_modified_ind := pkg_os_object_io.fn_object_bv_get
								   (
									   in_session_id,
									   in_transaction_id,
									   v_rolled_back_ptp_id,
									   pkg_db_billing_modify.gbv_PTP_ProcessModPayPlanInd-- 31867946 --
								   );
							
		    -- Get the multipayer flag
		    v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
									    (
										   in_session_id,
										   in_transaction_id,
										   v_ptp_id,
										   pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
									    );

          
                                
			   if v_session_control.gLogging_Full
			   then

					pkg_os_logging.sp_log
					(
						in_session_id,
						in_transaction_id,
						v_procedure_name,
						'.. PTP Id: ' || v_ptp_id ||
						'.. Rolled back PT ID: ' || v_rolled_back_pt ||
						'.. Rolled back PTP ID: ' || v_rolled_back_ptp_id ||
						'.. Payplan modify indicator: ' || v_rb_modified_ind
					);

			   end if;
          
               if nvl(v_multipayer_enabled_tf, 2 ) = 2 then -- no
               
                    v_rb_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_rolled_back_ptp_id,
                                                         pkg_db_payplan_modify.gbv_PolicyRefChosenPlan --212021 verified
                                                     );
                                                     
					v_rb_pt_payplan_md_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_rb_pt_chosen_pay_plan_id,
                                                    pkg_db_billing_modify.gbv_PaymentPlanMDID  --212015 --- verified
                                                );
                                                
					if nvl(v_rb_modified_ind,2) = 1 then 
               
						v_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_rolled_back_ptp_id,
                                                    pkg_db_payplan_modify.gbv_PolicyRefModPayPlan
                                                );
                                           
					end if;
               
					if v_pt_chosen_pay_plan_id is null then
                    
						v_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_rolled_back_ptp_id,
                                                    pkg_db_payplan_modify.gbv_PolicyRefChosenPlan --212021
                                                );
                                                
					end if;
                    
                                           
					v_pt_payplan_md_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_pt_chosen_pay_plan_id,
                                               pkg_db_billing_modify.gbv_PaymentPlanMDID  --212015 --- verified
                                           );                                      
                                           
					if v_session_control.gLogging_Full
					then

						pkg_os_logging.sp_log
						(
							in_session_id,
							in_transaction_id,
							v_procedure_name,
							'.. Chosen pay plan on rolledforward PTP id: ' || v_pt_chosen_pay_plan_id ||
							'.. MD ID: ' || v_pt_payplan_md_id ||
							'.. Chosen pay plan on rolled back PTP id: ' || v_rb_pt_chosen_pay_plan_id ||
							'.. MD ID: ' || v_rb_pt_payplan_md_id
						);

					end if;
               
                                  
					if v_rb_pt_payplan_md_id != v_pt_payplan_md_id then
                    
						return 'T';
                    
					end if;
               
			   else
               
					for v_rf_payer_rec in (select * from dragon_ptp_payer where ptp_id = v_ptp_id)
					loop

						v_rf_payer_id := v_rf_payer_rec.ptp_payer_id;

						if v_session_control.gLogging_Full
						then
							pkg_os_logging.sp_log
							(

                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...Considering payer ID: ' || v_rf_payer_id ||
                              '.. Payer Billing Account: '|| v_rf_payer_rec.billing_account_id
							);
						end if;

						begin

							 select
                                  ptp.ptp_payer_id
							 into
                                  v_rb_payer_id
							 from
                                  dragon_ptp_payer ptp
							 where
                                  ptp.ptp_id = v_rolled_back_ptp_id
							 and
                                  ptp.billing_account_id = v_rf_payer_rec.billing_account_id;
							  
                         -- new fix OSPRODUCT-25482
                        exception
                              when no_data_found then
                                   
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Rollback Payer not found..' 
                                   );
                                   
                                   v_rb_payer_id := null;

                        end;
                        -- end new fix  OSPRODUCT-25482							  
						
                        if v_rb_payer_id is not null then   -- new fix OSPRODUCT-25482 
						
							v_rb_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
															 (
																  in_session_id,
																  in_transaction_id,
																  v_rb_payer_id,
																  pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan
															  );
                                                          
							v_rb_pt_payplan_md_id := pkg_os_object_io.fn_object_bv_get
													   (
															in_session_id,
															in_transaction_id,
															v_rb_pt_chosen_pay_plan_id,
															pkg_db_billing_modify.gbv_PaymentPlanMDID  --212015 --- verified
														);
														
							if nvl(v_rb_modified_ind,2) = 1 then
                    
								v_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
															(
																in_session_id,
																in_transaction_id,
																v_rf_payer_id,
																pkg_db_payplan_modify.gbv_PTPPayer_RefModPayPlan --32967024 -- modified pay plan
															); 
                                                  
							end if;
                    
							if v_pt_chosen_pay_plan_id is null then
                         
								v_pt_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
														   (
																in_session_id,
																in_transaction_id,
																v_rf_payer_id,
																pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan
														   );              
							end if;
                    
							v_pt_payplan_md_id := pkg_os_object_io.fn_object_bv_get
												  (
													   in_session_id,
													   in_transaction_id,
													   v_pt_chosen_pay_plan_id,
													   pkg_db_billing_modify.gbv_PaymentPlanMDID   --212015 --- verified
												   );
                                           
							if v_session_control.gLogging_Full
							then

								pkg_os_logging.sp_log
								(
									in_session_id,
									in_transaction_id,
									v_procedure_name,
									'.. Chosen pay plan on rolledforward PTP id: ' || v_pt_chosen_pay_plan_id ||
									'.. MD ID: ' || v_pt_payplan_md_id ||
									'.. Chosen pay plan on rolled back PTP id: ' || v_rb_pt_chosen_pay_plan_id ||
									'.. MD ID: ' || v_rb_pt_payplan_md_id
								);

							end if;
						end if; -- new fix OSPRODUCT-25482
                                                  
                                                      
					end loop;
       
					if v_rb_pt_payplan_md_id is not null  -- new fix OSPRODUCT-25482
					and
					   v_rb_pt_payplan_md_id != v_pt_payplan_md_id 
					then
                    
						return 'T';
                    
					end if;
               
			   end if;
          
		end if;
	 else
			pkg_os_logging.sp_log    -- log message - skipping as in BOR workflow  --OSPRODUCT-25482
			(
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'skipping in BOR workflow: '
			);		
		
     end if;
		
		return 'F';

end fn_payplan_conflict_tf;
-- OSPRODUCT-23655 end
--------------------------------------------


-- OSPRODUCT-22096 start
function fn_processed_renewal_exists_tf
(
     in_session_id      in object.object_id%type,
     in_transaction_id  in object.object_id%type,
     in_policy_id       in object.object_id%type
)
return char is

      v_procedure_name        constant system_log.program_name%type := pkg_name||'fn_processed_renewal_exists_tf';
      v_session_control       pkg_os_session.r_dragon_session_control;
      v_rn_count              number         :=0;

 begin
     --Check if Renewal exists and is processed 
     begin
           select 
                count(1) 
           into 
                v_rn_count
           from 
                dragon_policy_trx dt
           where 
                dt.policy_id = in_policy_id
           and 
                dt.policy_trx_type_id = pkg_db_object.gBillTrxType_Renewal
           and 
                dt.policy_trx_object_state_id = pkg_db_late_process.gPolicyTrxProcessed;

     exception
                when others then
                    return 'F';
     end;

     if v_rn_count > 0 then
          return 'T';
     else
          return 'F';
     end if;

end;
-- OSPRODUCT-22096 end
---------------------------------------------------------
--OSPRODUCT-25324
function  fn_validate_account_cash_availble_tf
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_ptp_id                     in   object.object_id%type
)
return char
is
     v_procedure_name               constant  system_log.program_name%type   :=   pkg_name||'fn_validate_account_cash_availble_tf';
     v_session_control              pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_payer_list                 pkg_db_multipayer.t_payer_tab;
     v_payer_index                number;
     v_billing_account_id         object.object_id%type;
     v_enough_cash_available_tf   char := 'F';
     v_ptp_payer_id               object.object_id%type;

begin
     v_payer_list.delete;
     pkg_db_multipayer.sp_ptp_payers_get
     (
         in_session_id         => in_session_id,
         in_transaction_id     => in_transaction_id,
         in_ptp_object_id      => in_ptp_id,
         io_payer_list         => v_payer_list,           
         in_print_list         => 'Y',
         in_index_by           => pkg_db_multipayer.g_PayerGet_idx_BilingAccount
     );
           
     v_payer_index := v_payer_list.first;

     while v_payer_index is not null loop

         v_billing_account_id := v_payer_list(v_payer_index).payerbillingaccount_id;
         
         if v_session_control.gLogging_Full
         then
    
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Billing account ID ' || v_billing_account_id ||
                    ' available cash  ' || (fn_amt_cash_available(v_billing_account_id,1)*(-1)) ||
                    ' Chosen payment plan ' || v_payer_list(v_payer_index).chosen_payment_plan ||
                    ' chosen payment plan down payment amount ' || pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id,  v_payer_list(v_payer_index).chosen_payment_plan,212016 )
               );
    
         end if;
       
         if ((fn_amt_cash_available(v_billing_account_id,1)*(-1)) >= pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id,  v_payer_list(v_payer_index).chosen_payment_plan,212016 ))
         then 
              v_enough_cash_available_tf := 'T';
         else 
              v_enough_cash_available_tf := 'F';
              exit;
         end if;  

       v_payer_index := v_payer_list.next(v_payer_index);

     end loop;
     
     if v_session_control.gLogging_Full
     then

           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '.. Enough cash available with the accounts(T/F)? ' || v_enough_cash_available_tf 
           );

     end if;
     
     return v_enough_cash_available_tf;
     
end fn_validate_account_cash_availble_tf;
---------------------------------------------------------
-- OSPRODUCT-25777 Start
function fn_term_installment_tf
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policytrx_id               in        object.object_id%type,
     in_term_installment_id        in        object.object_id%type

)
return char
is
   
     v_procedure_name               constant  system_log.program_name%type   :=   pkg_name||'fn_term_installment_tf';
     v_session_control              pkg_os_session.r_dragon_session_control  :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_curr_installment_tf          char(1);
     v_bal_amount                   number;
     v_initial_amount               number;
     v_object_state                 varchar2(50);
     v_trx_type                     number;
     v_asscociated_batch_id         object.object_id%type;
     v_rel_reinstate_id             object.object_id%type;
     
begin
     
     v_curr_installment_tf := pkg_os_object_io.fn_object_bv_get  
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_term_installment_id,
                                     pkg_db_billing_modify.gbv_Install_IsCrrntPayPlanInst -- 33820646
                                );
                           
     v_bal_amount := pkg_os_object_io.fn_object_bv_get  
                           (
                                in_session_id,
                                in_transaction_id,
                                in_term_installment_id,
                                pkg_db_payplan_modify.gbv_BusinessAmtCalculated -- 32820746
                           );
                           
     v_initial_amount := pkg_os_object_io.fn_object_bv_get  
                           (
                                in_session_id,
                                in_transaction_id,
                                in_term_installment_id,
                                pkg_db_constant.gbv_Installment_initial_amt -- 32820646
                           );
                                
     
     v_object_state := pkg_os_object_io.fn_object_bv_get  
                           (
                                in_session_id,
                                in_transaction_id,
                                in_policytrx_id,
                                pkg_db_functions.gbv_ObjectState  -- 210153 object state
                           );
     
     v_trx_type := pkg_os_object_io.fn_object_bv_get  
                           (
                                in_session_id,
                                in_transaction_id,
                                in_policytrx_id,
                                pkg_db_functions.gbv_PolicyTransactionType -- 212030 trx type
                           );  
                           
     v_asscociated_batch_id := pkg_os_object_io.fn_object_bv_get  
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policytrx_id,
                                     pkg_db_billing.gbv_PolTrxRefBillingAccTrxSet -- 31866546 associated batch
                                );
                           
     v_rel_reinstate_id := pkg_os_object_io.fn_object_bv_get  
                           (
                                in_session_id,
                                in_transaction_id,
                                v_asscociated_batch_id,
                                pkg_db_billing_modify.gbv_BillAccTrxSet_RefReinstmt -- 33598148 related reinstatement
                           );
                           
               
     if v_session_control.gLogging_Full
     then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....Transaction id: '||in_transaction_id||
                    '....Policy transaction id: '||in_policytrx_id||
                    '....Term installment id: '||in_term_installment_id||
                    '....Current installment flag: '||v_curr_installment_tf||
                    '....Balance Amount: '||v_bal_amount||
                    '....Initial amount: '||v_initial_amount||
                    '....Object state: '||v_object_state||
                    '....Transaction type: '||v_trx_type||
                    '....Associate Batch id: '||v_asscociated_batch_id||
                    '....Related Reinstatement id: '||v_rel_reinstate_id
               );

     end if;                                               
                                                                                                           

     if 
     (    v_curr_installment_tf = pkg_db_billing_modify.gInstalmnt_CrntPayPlan_True -- 1 current pay plan installment yes
          and
          v_object_state != pkg_db_reversal.gFIChange_RollBacked   -- 67246 Rollbacked
          and
          (
               (
                    v_trx_type not in (pkg_os_policy_transaction.gPolicyTrxType_Rollback, pkg_os_policy_transaction.gPolicyTrxType_CancelInsured, pkg_os_policy_transaction.gPolicyTrxType_CancelNonPay, pkg_os_policy_transaction.gPolicyTrxType_CanNonPayBatch, pkg_os_policy_transaction.gPolicyTrxType_Reinstatement)  --3902 Rollback, 1 cancellation  by inusred, 2 cancellation, 4712 cancellation non pay, 3 reinstatement
                    or
                    (v_trx_type in (pkg_os_policy_transaction.gPolicyTrxType_CancelInsured, pkg_os_policy_transaction.gPolicyTrxType_CancelNonPay, pkg_os_policy_transaction.gPolicyTrxType_CanNonPayBatch) and v_rel_reinstate_id is null )                        
               )
               or 
               v_bal_amount != 0
          )
     )
     or
     (
          v_bal_amount      != 0
          and
          v_initial_amount  != 0
     )
     then
          return 'T';
     else
          return 'F';
     end if;

end fn_term_installment_tf;
-- OSPRODUCT-25777 - End
--------------------------------------------------------------
-- OSPRODUCT-14767 start
function fn_valid_policy_chng_due_dt_tf
(
     in_session_id         in    object.object_id%type,
     in_transaction_id     in    object.object_id%type,
     in_policy_id          in    object.object_id%type,
     in_responsible_ba_id  in    object.object_id%type,
     in_billing_account_id in    object.Object_Id%type
)
return char is

     v_procedure_name      constant system_log.program_name%type := pkg_name || 'fn_validate_policy_tf';
     v_session_control     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     type t_term_payer_tab is table of dragon_policy_term_payer%rowtype index by pls_integer;
     v_term_payer          t_term_payer_tab;
     v_return_value        char(1) := 'F';
     v_idx                 number;
     l_cnt                 number := 0;
     v_policy_curr_term    object.object_id%type;

     cursor c_term_payer is
     select * from dragon_policy_term_payer where policy_id = in_policy_id and payer_billing_account_id = in_billing_account_id ;

begin
     
     open c_term_payer;
     fetch c_term_payer bulk collect into v_term_payer;
     close c_term_payer;
     
     if nvl(in_responsible_ba_id, 0) = in_billing_account_id 
        and
        v_term_payer.count = 0
     then
          
          v_policy_curr_term := pkg_db_functions.fn_get_policy_current_term
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id
                                   ) ;
          
          if pkg_os_object_io.fn_object_bv_path_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_policy_curr_term,
                            '32251146.30013046.30010546'
                       ) in (2, 3) 
          then
               v_return_value := 'T';
          else
               v_return_value := 'F';
          end if;
     
     else
          
          if v_term_payer.count > 0 then
               
               v_idx := v_term_payer.first;
               
               while v_idx is not null loop
                    
                    if v_term_payer(v_idx).policy_term_id = pkg_db_functions.fn_get_policy_current_term
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_policy_id
                                                            ) 
                       and
                       pkg_os_object_io.fn_object_bv_path_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_term_payer(v_idx).policy_term_payer_id,
                            '32574248.30013046.30010546'
                       ) in (2, 3) 
                    then
                         
                         if v_session_control.gLogging_Full then
          
                              pkg_os_logging.sp_log
							  (
							        in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    ' Match ... '
							   );
                      
                         end if;
                         v_return_value := 'T';
                         exit;
        
                    end if;
      
                    v_idx := v_term_payer.next(v_idx);
      
               end loop;
               
          end if;       
  
     end if;
     
     return v_return_value;
     
end fn_valid_policy_chng_due_dt_tf;
----- OSPRODUCT-14767 end
-------------------------------------------------------
 -- OSPRODUCT-30708
function fn_check_unknown_ind 
(
     in_session_id     in  object.object_id%type,
     in_transaction_id in  object.object_id%type,
     in_btx_set_id     in  object.object_id%type,
     in_bv_id          in  object.object_id%type 
)
return 
char is

     --v_procedure_name constant system_log.program_name%type := pkg_name ||'fn_check_unknown_ind';

     v_object_list                            pkg_os_object.t_object_list;
     v_unknown_indicator            	      object.object_id%type;
     v_return_value        			      char(1) := 'F';
     v_object_index                           object.object_id%type;

begin
												  
     v_object_list.delete;
     
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_btx_set_id,
          gobjtype_fitransaction, -- fitranction type id
          v_object_list
     );										  

     if v_object_list.count > 0 
     then
          
          v_object_index := v_object_list.first;
          														
          while v_object_index is not null 
          loop         							  
          							  
               v_unknown_indicator := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                     in_transaction_id,
                                                                     v_object_list(v_object_index),
                                                                     in_bv_id --  unkonwn indicator bv id
                                             );
               if v_unknown_indicator is not null
               then 
                    v_return_value := 'T'; 
                    exit; 
               else 
                    v_return_value := 'F'; 
               end if;																						  
          																						  
               v_object_index := v_object_list.next(v_object_index);
                                                             
          end loop;
                            
     end if;

     return v_return_value;
     
end fn_check_unknown_ind;
------------------------------------------------------------
-- OSPRODUCT-30799
function fn_check_active_profile
(   
    in_session_id           in  object.object_id%type,
    in_transaction_id 	   in  object.object_id%type,
    in_billingaccount_id    in  object.object_id%type
)                             
return 
number is
     v_count number := 0;
begin

	select count(1)
	  into v_count
	  from DRAGON_DISB_PROFILE
	 where billing_account_id = in_billingaccount_id
	   and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, disb_profile_id, pkg_db_profiles.gbv_DPUState) = pkg_db_profiles.g_ProfileState_Active;
                 
     return v_count;
	   
end fn_check_Active_profile;
-- end OSPRODUCT-30799
------------------------------------------------------------
--OSPRODUCT-30865
function fn_check_account_schedule_view 
(   
    in_session_id           in  object.object_id%type,
    in_transaction_id 		in  object.object_id%type,
    in_billing_account_id   in  object.object_id%type
)                             
return 
char is

    v_return  	char;		
    v_count 	number := 0;
begin
  
    select count(1)
		into v_count
		from DRAGON_BA_SCHEDULEDPAYMENT 
    where billing_account_id = in_billing_account_id
		and BA_SCHEDULE_KEY_ID = 2;
	
    if v_count > 0 
    then
        v_return := 'T';
    else
        v_return := 'F';
    end if;	
    
    return v_return;
	   
end fn_check_account_schedule_view ;
-- end OSPRODUCT-30865
-----------------------------------------------------------------------------------------------------------------------------------
function fn_financial_elements_created_tf 
(
     in_session_id        in  object.object_id%type,
     in_transaction_id    in  object.object_id%type,
     payplan_id           in  object.object_id%type
)
return 
char is

     v_return_value        			      char(1) := 'F';
     v_sche_element_creator_pt                object.object_id%type;
     v_payplan_parent_pt            	      object.object_id%type;
begin
												  
     v_payplan_parent_pt  := pkg_os_object_io.fn_object_bv_path_get
                            (
                                in_session_id,
                                in_transaction_id,
                                payplan_id,
                                '212018.28555404.211343'  --PaymentPlan._Parent_Policy._Parent_PolicyTransaction.ObjectID
                            );
     
     v_sche_element_creator_pt  := pkg_os_object_search.fn_object_with_attribute_get
                                     (
                                          in_session_id                 => in_session_id,
                                          in_transaction_id             => in_transaction_id,
                                          in_parent_object_id           => payplan_id,
                                          in_object_type_id             => gObjType_ScheduledElement,
                                          in_business_variable_id       => pkg_db_billing_modify.gbv_ElementRefCreatorPolTrns,
                                          in_business_variable_value    => v_payplan_parent_pt
                                     );
     
     if nvl(v_sche_element_creator_pt,0) <> 0 
     then
        v_return_value := 'T'; 
     end if;

     return v_return_value;
     
end fn_financial_elements_created_tf;
----------------------------------------------------------------
function fn_single_payment_allowed_tf
(
     in_session_id                 in            object.object_id%type,
     in_transaction_id             in            object.object_id%type,
     in_bill_acc_id                in            object.object_id%type
)
return char
as

     v_procedure_name  constant    system_log.program_name%type := pkg_name||'fn_single_payment_allowed';
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_trx_id                object.object_id%type;
     v_term_payer_bill_plan         object.object_id%type;   
     v_return_value                char(1) := 'T';
     v_time                        float;
     v_prop_includePastDuesWith_TF      pd_property.pd_property_value%type  :=  pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_bill_acc_id,118248);  --OSPRODUCT-26258
begin
     
      if v_session_control.gLogging_Full
      then
         pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Billaccount ID: ' || in_bill_acc_id 
          );
      end if; 
     
     select 
         billingaccounttrxset_id 
     into 
         v_billing_trx_id                                            
     from  
         dragon_billingaccounttrxset 
     where 
         parent_billing_account_id =  in_bill_acc_id
     and 
         batch_status_id = 39946
     and 
         batch_type_id = 601;
     
     v_time := 24*(sysdate - to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_billing_trx_id,210151),'YYYYMMDDHH24MISS'));
         
     if nvl(v_time,0) < v_prop_includePastDuesWith_TF
     then 
         v_return_value := 'F';
     end if;
 
     return v_return_value;
     
     exception
         
        when no_data_found 
        then 
          
           return v_return_value;     
      
   
end fn_single_payment_allowed_tf;
---------------------------------------------
end PKG_DB_FUNCTIONS;
/
