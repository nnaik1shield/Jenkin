create or replace package body PKG_DB_BILLING_PAYABLE

-------------
-- $Workfile:   BASE_API.PKG_DB_BILLING_PAYABLE.sql  $
-- $Revision:   1.22  $
--   $Author:   gkaur  $
--     $Date:   18 Dec 2012 17:21:20  $
-------------
as

-----------------------------------------------------------------------------------------------------------------------------------------------------
--   Package Constants ...
-----------------------------------------------------------------------------------------------------------------------------------------------------

pkg_name                 constant  system_log.program_name%type                 :=   'pkg_db_billing_payable.';
v_current_date                     object_bv_value.business_variable_value%type;

multipayer_generic_error           exception; -- #MP

procedure show_version
is
begin
     dbms_output.put_line ('$Workfile:   BASE_API.PKG_DB_BILLING_PAYABLE.sql  $');
     dbms_output.put_line ('$Revision:   1.22  $');
     dbms_output.put_line ('$Author:   gkaur  $');
     dbms_output.put_line ('$Date:   18 Dec 2012 17:21:20  $');
exception
     when others
     then
          dbms_output.put_line (sqlerrm (sqlcode));
end show_version;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_is_cc_prof_expired_tf
(
     in_session_id          in   object.object_id%type,
     in_transaction_id      in   object.object_id%type,
     in_object_id           in   object.object_id%type
)
return varchar2
is
     v_return varchar2(10) :='F';
     v_ctf_cc_expyear                      object_bv_value.business_variable_value%type;
     v_ctf_cc_expmonth                     object_bv_value.business_variable_value%type;
     v_curr_mnthYear                       object_bv_value.business_variable_value%type;
begin
          v_ctf_cc_expyear := (pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          PKG_CS_PROFILES.gbv_Ref_CTP_ExpYear
                                                     ));
         v_ctf_cc_expmonth := to_char( pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          PKG_CS_PROFILES.gbv_Ref_CTP_ExpMon
                                                     ),'00');

            v_curr_mnthYear := to_number(to_char(sysdate ,'YYYYMM'));

           if(v_ctf_cc_expyear||trim(v_ctf_cc_expmonth) < v_curr_mnthYear )--and v_ctf_cc_expmonth >=v_term_expiry_month) --OSPRODUCT-1659
           then
                v_return := 'T';
            end if;

return v_return;

end;
-----------------------------------------------------------------------------------

function fn_disbursement_item_exists_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_fitem_id                        in             object.object_id%type
) return char
is

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'fn_disbursement_item_exists_tf';

     v_policy_id    object.object_id%type;
     v_cnt number; --OSBILLING-6996
begin

     v_policy_id    :=   pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_fitem_id,
                              gbv_FItem_associatedPolicy
                         );

     --OSBILLING-6996 commented below part start
     -- Check all Disbursed FItems of the Policy
/*     for cur in (

          select fitem_id
            from dragon_fitem
           where policy_id = v_policy_id
             and disbursement_batch_id is not null

     )
     loop

          if   in_fitem_id = cur.fitem_id
          then

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Disbursement transaction exists for the current FItem: '||in_fitem_id
                    );

               end if;

               return 'T';

          elsif in_fitem_id =  pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   cur.fitem_id,
                                   pkg_os_constant_bv.gbv_Template
                              )
          then

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Disbursement transaction exists for the split commission FItem: '||cur.fitem_id||
                         ' current FItem: '||in_fitem_id
                    );

               end if;

               return 'T';

          end if;

     end loop;

     return 'F';*/
     ----OSBILLING-6996 commented  part end
     ----OSBILLING-6996 added below part start
      select count(fitem_id)
          into v_cnt
          from dragon_fitem
          where policy_id = v_policy_id
          and ( disbursement_batch_id is not null or PREV_DISBURSEMENT_BATCH is not null)--LXPRODUCT-282
          and fitem_id = in_fitem_id;


          if v_cnt > 0
               then
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Disbursement transaction exists for the current FItem: '||in_fitem_id
                         );

                    end if;

          return 'T';
          else
               --LXPRODUCT-282
               return 'F';
          
               /*select count(fitem_id)
               into v_cnt
               from dragon_fitem
               where policy_id = v_policy_id
               and disbursement_batch_id is not null
               and fitem_id = pkg_os_object_io.fn_object_bv_get
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                fitem_id,
                                                pkg_os_constant_bv.gbv_Template
                                          );

               if v_cnt > 0
               then
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              --'Disbursement transaction exists for the split commission FItem: '||fitem_id||
                              ' current FItem: '||in_fitem_id
                         );

                    end if;

                    return 'T';
               else
                    return 'F';

               end if;*/
          end if;
     ----OSBILLING-6996 added  part end

end fn_disbursement_item_exists_tf;
--------------------------------------------------------------------------------------------------------------------------------------

procedure sp_create_commission_clawback
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_fitransaction_id                in             object.object_id%type,
     in_fitem_id                        in             object.object_id%type,
     in_current_date_time               in             date default null  --OSBILLING-7829
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_create_commission_clawback';

     v_policy_id                        object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_fitem_asset_id                   object.object_id%type;

     v_producing_agency_id              object.object_id%type;
     v_wirting_company_id               object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_billaccount_Parent_id            object.object_id%type;
     v_carrierbillacc_Parent_id         object.object_id%type;
     v_wirting_comp_billing_acc_id      object.object_id%type;
     v_writecompbillacc_Parent_id       object.object_id%type;

     v_ba_trx_set_id                    object.object_id%type;
     v_fitransaction_object_id          object.object_id%type;

     v_fitem_debit_id                   object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_effective_date             object_bv_value.business_variable_value%type;

     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_fichange_action                  number;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;
     v_fitem_billing_element_id         db_billing_element.db_billing_element_id%type;

     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_datamart_tf                      char(1)     :=     'T';

     v_clawback_amount                  number;

     v_instalment_id                    object.object_id%type;

begin

     v_clawback_amount   :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_fitem_id,
                                   gbv_fitem_paid_amount
                              );

     if v_clawback_amount = 0
     then

          v_clawback_amount   :=   abs( pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             gbv_fitem_earned_amount
                                        )
                                      );

     end if;

     if v_clawback_amount > 0
     then

          v_policy_id    :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_fitem_id,
                                   gbv_FItem_associatedPolicy
                              );

          v_policy_transaction_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             gbv_FItem_associatedPolicyTRX
                                        );

          v_fitem_asset_id    :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitem_id,
                                        pkg_db_object.gbv_FItem_RefAsset
                                   );

          v_instalment_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitem_id,
                                        pkg_db_object.gbv_FItem_RefInstallment
                                   );

          v_fitem_billing_element_id    := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_fitem_id,
                                             pkg_db_object.gbv_FItem_Billing_Elt_MD_ID
                                        );

          --OSPRODUCT-15394

          /*v_producing_agency_id    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_id,
                                             pkg_os_constant_bv.gbv_GenObjProducingAgency
                                        );*/
                                        
          v_producing_agency_id    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_id,
                                             pkg_db_constant.gbv_Ref_BORCommissionPartner --33310048 -- OSPRODUCT-15394
                                        );
                                        
          if v_session_control.gLogging_Full
          then
                              
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' Commision Partner using BOR commission partner BV: ' || v_producing_agency_id
               );
                              
          end if;
                                        
          -- end OSPRODUCT-15394

          v_wirting_company_id    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_id,
                                             pkg_db_object.gbv_WritingCompany
                                        );

          --
          -- Billing Accounts
          --

          -- Agency Billing Account
          v_billing_account_id     :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_producing_agency_id,
                                             pkg_db_object.gObjType_BillingAccount
                                        );

          v_billaccount_Parent_id     :=     pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  pkg_db_object.gbv_BillAcc_ParentObjectID
                                             );

          -- Writing Company Billing Account
          v_wirting_comp_billing_acc_id     :=    pkg_os_object_search.fn_object_11_child_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_wirting_company_id,
                                                       pkg_db_object.gObjType_BillingAccount
                                                  );

          v_writecompbillacc_Parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_wirting_comp_billing_acc_id,
                                                       pkg_db_object.gbv_BillAcc_ParentObjectID
                                                  );

          -- Get Billing Account Transaction Set of the current FITransaction
          v_ba_trx_set_id     :=   pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitransaction_id
                                   );

          --
          -- FITransaction
          --
          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_object.gObjType_FITransaction,
               v_ba_trx_set_id,
               v_fitransaction_object_id
          );

          v_bv_table.delete;

          v_bv_table (pkg_db_object.gbv_FITrx_TransactionType         ).business_variable_value     :=     pkg_db_billing_payable.g_FITrxType_PayableEarning;
          v_bv_table (pkg_db_object.gbv_FITrx_RefAssociatedPolicy     ).business_variable_value     :=     v_policy_id;
          v_bv_table (pkg_db_object.gbv_FITrx_RefBillingAccount       ).business_variable_value     :=     v_billing_account_id;
          v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState        ).business_variable_value     :=     pkg_db_object.gFITrxStatus_Processed;
          v_bv_table (pkg_db_object.gbv_FITrx_Amount                  ).business_variable_value     :=     v_clawback_amount;
          v_bv_table (pkg_db_object.gbv_FITrx_EffectiveDate           ).business_variable_value     :=     v_current_date;
          v_bv_table (pkg_db_object.gbv_FITrx_GLDate                  ).business_variable_value     :=     v_current_date;
          v_bv_table (pkg_db_object.gbv_FITrx_ProcessDate             ).business_variable_value     :=     v_current_date;
          v_bv_table (pkg_db_object.gbv_FITrx_RefActionPolicy         ).business_variable_value     :=     v_policy_id;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_object_id,
               v_bv_table
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_object_id,
               pkg_db_object.gbv_FITrx_AccntingPeriod,
               pkg_db_functions.fn_get_fitransaction_acct_prd
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_object_id
               )
          );


          --
          -- FItems
          --
          v_sum_include                 :=     gFIChange_Yes;
          v_fichange_process_date       :=        to_char
                                                  (
                                                       NVL(in_current_date_time,
                                                       pkg_os_time.fn_os_sysdate
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_fitransaction_object_id
                                                       ))  --OSBILLING-7829
                                                       ,pkg_os_constant.DragonDateFormatDefault
                                                  );
          v_fichange_action             :=   gFIChange_Create;
          v_debit_fichange_amount       :=   v_clawback_amount;
          v_credit_fichange_amount      :=   v_clawback_amount*-1;

          -- Set the Effective Date to Current Date
          v_fitem_effective_date     :=     to_char
                                             (
                                                  NVL(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policy_id
                                                  )),  --OSBILLING-7829
                                                  pkg_os_constant.DragonDateFormatDefault
                                             );


          --
          -- Earned Commission Part
          --

          -- Agency Commission FItem
          pkg_db_object.sp_fitem_create
          (
               in_session_id                       =>        in_session_id ,
               in_transaction_id                   =>        in_transaction_id,
               in_parent_object_id                 =>        v_billing_account_id,
               out_fitem_id                        =>        v_fitem_credit_id,
               in_fitem_debit_credit               =>        pkg_db_object.gFItem_Credit,
               in_fitem_category                   =>        pkg_db_object.gFItem_Cat_Commission,
               in_fitem_subcategory                =>        pkg_db_object.gFItem_SubCat_Comm_Clawback,
               in_fitem_effective_date             =>        v_fitem_effective_date,
               in_fitem_billing_status             =>        pkg_db_object.gFItemBillStatus_Active,
               in_fitem_processing_status          =>        pkg_db_object.gFItemProcStatus_Processed,
               in_FItemRefPolicy                   =>        v_policy_id,
               in_FItemRefPolicyTxn                =>        v_policy_transaction_id,
               in_FItemRefAssetpkg_db_object       =>        v_fitem_asset_id,
               in_FItemRefEntityBelongsTo          =>        v_billaccount_Parent_id,
               in_FItemRefAssWithFItrx             =>        v_fitransaction_object_id,
               in_fitem_Earningstatus              =>        pkg_db_object.gFItem_Earned,
               in_fitem_earned_amount              =>        v_clawback_amount,
               in_fitem_unearned_amount            =>        0,
               in_FItemRefInstallment              =>        v_instalment_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_FItem_LocalBilngDueDate,
               to_char(NVL(in_current_date_time, sysdate),'YYYYMMDDHH24MISS')  --OSBILLING-7829
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_FItem_Billing_Elt_MD_ID,
               v_fitem_billing_element_id
          );

          pkg_db_object.sp_fichange_create
          (
               in_session_id                 =>   in_session_id,
               in_transaction_id             =>   in_transaction_id,
               in_parent_fitransaction_id    =>   v_fitransaction_object_id,
               out_fichange_id               =>   v_credit_fichange_id,
               in_fichange_action            =>   v_fichange_action,
               in_fichange_action_delta      =>   v_debit_fichange_amount,
               in_fichange_ref_fitem         =>   v_fitem_credit_id,
               in_fichange_sum_include       =>   v_sum_include,
               in_fichange_process_date      =>   v_fichange_process_date,
               in_fichange_ref_pol           =>   v_policy_id,
               in_fichange_belongs_to        =>   v_writecompbillacc_Parent_id
          );


          -- Writing Company Commission FItem
          pkg_db_object.sp_fitem_create
          (
               in_session_id                       =>        in_session_id ,
               in_transaction_id                   =>        in_transaction_id,
               in_parent_object_id                 =>        v_wirting_comp_billing_acc_id,
               out_fitem_id                        =>        v_fitem_debit_id,
               in_fitem_debit_credit               =>        pkg_db_object.gFItem_Debit,
               in_fitem_category                   =>        pkg_db_object.gFItem_Cat_Commission,
               in_fitem_subcategory                =>        pkg_db_object.gFItem_SubCat_Comm_Clawback,
               in_fitem_effective_date             =>        v_fitem_effective_date,
               in_fitem_billing_status             =>        pkg_db_object.gFItemBillStatus_Active,
               in_fitem_processing_status          =>        pkg_db_object.gFItemProcStatus_Processed,
               in_FItemRefPolicy                   =>        v_policy_id,
               in_FItemRefPolicyTxn                =>        v_policy_transaction_id,
               in_FItemRefAssetpkg_db_object       =>        v_fitem_asset_id,
               in_FItemRefEntityBelongsTo          =>        v_writecompbillacc_parent_id,
               in_FItemRefAssWithFItrx             =>        v_fitransaction_object_id,
               in_fitem_Earningstatus              =>        PKG_DB_BILLING.gFitem_EarningNotApplicable, --OSBILLING-6705
               in_fitem_earned_amount              =>        0, --OSBILLING-6705
               in_fitem_unearned_amount            =>        0, --OSBILLING-6705
               in_FItemRefInstallment              =>        v_instalment_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               pkg_db_object.gbv_FItem_LocalBilngDueDate,
               to_char(NVL(in_current_date_time, sysdate),'YYYYMMDDHH24MISS')  --OSBILLING-7829
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               pkg_db_object.gbv_FItem_Billing_Elt_MD_ID,
               v_fitem_billing_element_id
          );

          pkg_db_object.sp_fichange_create
          (
               in_session_id                 =>   in_session_id,
               in_transaction_id             =>   in_transaction_id,
               in_parent_fitransaction_id    =>   v_fitransaction_object_id,
               out_fichange_id               =>   v_debit_fichange_id,
               in_fichange_action            =>   v_fichange_action,
               in_fichange_action_delta      =>   v_credit_fichange_amount,
               in_fichange_ref_fitem         =>   v_fitem_debit_id,
               in_fichange_sum_include       =>   v_sum_include,
               in_fichange_process_date      =>   v_fichange_process_date,
               in_fichange_ref_pol           =>   v_policy_id,
               in_fichange_belongs_to        =>   v_billaccount_Parent_id
          );


          -- Set FItem associations
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_AssociatedOffsetFitem,
               v_fitem_debit_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               pkg_db_object.gbv_AssociatedOffsetFitem,
               v_fitem_credit_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_object_id,
               pkg_db_object.gbv_FITrx_RefAssociatedFitem,
               v_fitem_debit_id
          );


          -- Updating datamarts
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               v_datamart_tf
          );

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               v_datamart_tf
          );

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_object_id,
               v_datamart_tf
          );



          --
          -- Unearned Commission Part
          --

          -- Agency Commission FItem
          pkg_db_object.sp_fitem_create
          (
               in_session_id                       =>        in_session_id ,
               in_transaction_id                   =>        in_transaction_id,
               in_parent_object_id                 =>        v_billing_account_id,
               out_fitem_id                        =>        v_fitem_debit_id,
               in_fitem_debit_credit               =>        pkg_db_object.gFItem_Credit,
               in_fitem_category                   =>        pkg_db_object.gFItem_Cat_Commission,
               --in_fitem_subcategory                =>        pkg_db_object.gFItem_SubCat_Comm_Clawback, --OSBILLING-6705
               in_fitem_subcategory                =>        pkg_db_functions.g_FItem_SubCat_CommPayable, --OSBILLING-6705
               in_fitem_effective_date             =>        v_fitem_effective_date,
               in_fitem_billing_status             =>        pkg_db_object.gFItemBillStatus_Active,
               in_fitem_processing_status          =>        pkg_db_object.gFItemProcStatus_Processed,
               in_FItemRefPolicy                   =>        v_policy_id,
               in_FItemRefPolicyTxn                =>        v_policy_transaction_id,
               in_FItemRefAssetpkg_db_object       =>        v_fitem_asset_id,
               in_FItemRefEntityBelongsTo          =>        v_billaccount_Parent_id,
               in_FItemRefAssWithFItrx             =>        v_fitransaction_object_id,
               in_fitem_Earningstatus              =>        pkg_db_object.gFItem_Unearned,
               in_fitem_earned_amount              =>        0,
               in_fitem_unearned_amount            =>        v_clawback_amount*-1,
               in_FItemRefInstallment              =>        v_instalment_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               pkg_db_object.gbv_FItem_Billing_Elt_MD_ID,
               v_fitem_billing_element_id
          );

          pkg_db_object.sp_fichange_create
          (
               in_session_id                 =>   in_session_id,
               in_transaction_id             =>   in_transaction_id,
               in_parent_fitransaction_id    =>   v_fitransaction_object_id,
               out_fichange_id               =>   v_debit_fichange_id,
               in_fichange_action            =>   v_fichange_action,
               in_fichange_action_delta      =>   v_credit_fichange_amount,
               in_fichange_ref_fitem         =>   v_fitem_debit_id,
               in_fichange_sum_include       =>   v_sum_include,
               in_fichange_process_date      =>   v_fichange_process_date,
               in_fichange_ref_pol           =>   v_policy_id,
               in_fichange_belongs_to        =>   v_writecompbillacc_Parent_id
          );


          -- Writing Company Commission FItem
          pkg_db_object.sp_fitem_create
          (
               in_session_id                       =>        in_session_id ,
               in_transaction_id                   =>        in_transaction_id,
               in_parent_object_id                 =>        v_wirting_comp_billing_acc_id,
               out_fitem_id                        =>        v_fitem_credit_id,
               in_fitem_debit_credit               =>        pkg_db_object.gFItem_Debit,
               in_fitem_category                   =>        pkg_db_object.gFItem_Cat_Commission,
               --in_fitem_subcategory                =>        pkg_db_object.gFItem_SubCat_Comm_Clawback, --OSBILLING-6705
               in_fitem_subcategory                =>        pkg_db_functions.g_FItem_SubCat_CommPayable, --OSBILLING-6705
               in_fitem_effective_date             =>        v_fitem_effective_date,
               in_fitem_billing_status             =>        pkg_db_object.gFItemBillStatus_Active,
               in_fitem_processing_status          =>        pkg_db_object.gFItemProcStatus_Processed,
               in_FItemRefPolicy                   =>        v_policy_id,
               in_FItemRefPolicyTxn                =>        v_policy_transaction_id,
               in_FItemRefAssetpkg_db_object       =>        v_fitem_asset_id,
               in_FItemRefEntityBelongsTo          =>        v_writecompbillacc_parent_id,
               in_FItemRefAssWithFItrx             =>        v_fitransaction_object_id,
               in_fitem_Earningstatus              =>        PKG_DB_BILLING.gFitem_EarningNotApplicable, --OSBILLING-6705
               in_fitem_earned_amount              =>        0, --OSBILLING-6705
               in_fitem_unearned_amount            =>        0, --OSBILLING-6705
               in_FItemRefInstallment              =>        v_instalment_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_FItem_LocalBilngDueDate,
               to_char(NVL(in_current_date_time, sysdate),'YYYYMMDDHH24MISS')  --OSBILLING-7829
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_FItem_Billing_Elt_MD_ID,
               v_fitem_billing_element_id
          );

          pkg_db_object.sp_fichange_create
          (
               in_session_id                 =>   in_session_id,
               in_transaction_id             =>   in_transaction_id,
               in_parent_fitransaction_id    =>   v_fitransaction_object_id,
               out_fichange_id               =>   v_credit_fichange_id,
               in_fichange_action            =>   v_fichange_action,
               in_fichange_action_delta      =>   v_debit_fichange_amount,
               in_fichange_ref_fitem         =>   v_fitem_credit_id,
               in_fichange_sum_include       =>   v_sum_include,
               in_fichange_process_date      =>   v_fichange_process_date,
               in_fichange_ref_pol           =>   v_policy_id,
               in_fichange_belongs_to        =>   v_billaccount_Parent_id
          );


          -- Set FItem associations
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               pkg_db_object.gbv_AssociatedOffsetFitem,
               v_fitem_debit_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               pkg_db_object.gbv_AssociatedOffsetFitem,
               v_fitem_credit_id
          );


          -- Updating datamarts
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_debit_id,
               v_datamart_tf
          );

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_credit_id,
               v_datamart_tf
          );


     end if;

end sp_create_commission_clawback;

-- LXPRODUCT-449 and LXPRODUCT-461
procedure sp_set_payable_bord_policy
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_payable_fitem_id                in             object.object_id%type,
     in_billingacounttrxset_id          in             object.object_id%type,
     in_bord_policy_id                  in             object.object_id%type default null,
     in_bord_fitransaction_id           in             object.object_id%type default null, -- Fitransaction for old fichanges
     in_reverse_payable_tf              in             char default 'F',
     in_current_date_time               in             date default sysdate,
     in_bv_table                        in             pkg_os_object_io.t_bv_table default pkg_os_object_io.gnull_bv_table
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_set_payable_bord_policy';
     
     -- New Policy Details
     v_payable_fitem_trx_id             object.object_id%type;
     v_policy_nb_trx                    object.object_id%type;
     v_payer_id                         object.object_id%type;
     v_payable_fitem_cat_id             number;
     v_payable_fitem_subcat_id          number;
     v_installment_num                  number;
     v_billing_element_md_id            number;
     v_fitem_unearned_amt               number;
     v_fitem_earned_amt                 number;
     v_payer_name                       varchar(500);
     
     -- Old Policy Details
     v_old_bord_policy                  object.object_id%type;
     v_old_policy_trx_id                object.object_id%type;
     v_old_policy_term_id               object.object_id%type; 
     v_old_policy_trx_rlback_trx_id     object.object_id%type;
     v_billing_account_id               object.object_id%type; 
     v_old_fichange_id                  object.object_id%type;
     v_fitem_signage                    number;
     v_fitem_unearned_amt_old           number;
     v_fitem_earned_amt_old             number;
     
     --- Others
     v_bor_transfer_done                char(1);
     v_bv_table                         pkg_os_object_io.t_bv_table := in_bv_table;
     v_datamart_tf                      char(1) := 'T';
     v_old_payable_fitem_list           t_payable_fitem;
     v_payable_fitem_idx                number;
     v_disbursement_item_exists_tf      char(1);
     
begin
     
     if in_bord_policy_id is not null then
          
          v_old_bord_policy := in_bord_policy_id;
     
     else
                                   
          v_bor_transfer_done := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_policy_id,
                                      32983748
                                 );
                                                               
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. BOR Transfer Status; ' || v_bor_transfer_done
               );
                                             
          end if;
                                        
          if nvl(v_bor_transfer_done,0) = 0 then -- its null so it might be a bord policy
                                             
               v_old_bord_policy := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_policy_id,
                                         32651648
                                    );
          
          end if;
                                
     end if;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Starting payable processing for the old bord policy ' || v_old_bord_policy ||
               '.. New Policy: '               || in_policy_id ||
               '.. Payable Fitem ID: '         || in_payable_fitem_id ||
               '.. Batch ID: '                 || in_billingacounttrxset_id ||
               '.. Old bord fitransaction iD: ' || in_bord_fitransaction_id ||
               '.. Payable reversal: '          || in_reverse_payable_tf
          );
                                             
     end if;
     
     if v_old_bord_policy is not null then
          
          -- Get the payable fitem details                                        
          begin
                    
               select df.fitem_category_id, 
                      df.fitem_sub_category_id,
                      df.policy_transaction_id,
                      df.installment_number,
                      df.billing_element_md_id,
                      dsi.payer_id
                 into v_payable_fitem_cat_id,
                      v_payable_fitem_subcat_id,
                      v_payable_fitem_trx_id,
                      v_installment_num,
                      v_billing_element_md_id,
                      v_payer_id
                 from dragon_fitem df 
                 join dragon_scheduled_installment dsi on (df.installment_id = dsi.installment_id)
                where df.fitem_id = in_payable_fitem_id;
               
               if v_payer_id is not null then
                    
                    select upper(ba.partner_name) -- OSPRODUCT-11370
                      into v_payer_name
                      from dragon_billingaccount ba
                     where ba.billingaccount_id = v_payer_id;
                     
               end if;
          
          exception
                    
               when others then

                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Call stack: ' || dbms_utility.format_call_stack
                    );
                         
                    raise;
                           
          end;
          
          if in_reverse_payable_tf = 'F' then 
          
               v_fitem_unearned_amt := in_bv_table(gbv_fitem_unearned_amount).business_variable_value;
               v_fitem_earned_amt   := in_bv_table(gbv_fitem_earned_amount).business_variable_value;
               
          end if;
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payable Fitem Details: ' ||
                    '.. Category ID: '         || v_payable_fitem_cat_id ||
                    '.. Sub Category ID: '     || v_payable_fitem_subcat_id ||
                    '.. Policy Transaction ID: ' || v_payable_fitem_trx_id ||
                    '.. Installment Number: '    || v_installment_num ||
                    '.. Billing Element MD ID: ' || v_billing_element_md_id ||
                    '.. Payer ID: '              || v_payer_id ||
                    '.. Payer Name: '            || v_payer_name ||
                    '.. Earned Amount: '         || v_fitem_earned_amt ||
                    '.. Unearned Amount: '       || v_fitem_unearned_amt
               );
                                                  
          end if;
          
          -- Get the corresponding old transactions  
          -- [RR-KR] Check when we have BOR on renewal]                                                          
          v_policy_nb_trx := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_id,
                                  26590007
                             );
                                                         
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payable Fitem Transaction ID: ' || v_payable_fitem_trx_id
               );
                                             
          end if;                            
          
          -- Get the old fitems from NB and Cancellation transaction                                     
          if v_policy_nb_trx = v_payable_fitem_trx_id then
                                            
               for fitem in 
                    (
                         select df.fitem_id,
                                df.initial_amount,
                                df.balance,
                                df.installment_id,
                                df.policy_transaction_id,
                                df.billing_account_id,
                                df.earned_amount,
                                df.unearned_amount,
                                df.earning_status                                
                           from dragon_fitem df
                           join dragon_scheduled_installment dsi
                             on (df.installment_id = dsi.installment_id)
                          where df.policy_id = v_old_bord_policy
                            and df.policy_transaction_id in 
                                (select pt.policy_trx_id
                                    from dragon_policy_trx pt
                                   where policy_id = v_old_bord_policy
                                     and policy_trx_type_id in (2, 9) -- NB and Cancellation
                                     and policy_trx_object_state_id = 106 -- Processed 
                                  )
                            and df.installment_number = v_installment_num
                            and df.fitem_type_id = gFItemType_Credit
                            and df.fitem_category_id = v_payable_fitem_cat_id
                            and df.fitem_sub_category_id = v_payable_fitem_subcat_id
                            and df.balance <> 0
                            and (
                                     -- Single Payer Mode
                                     v_payer_name is null 
                                     or
                                     -- Multipayer mode
                                     v_payer_name = (
                                                         Select upper(ba.partner_name) 
                                                           from dragon_billingaccount ba
                                                          where ba.billingaccount_id = dsi.payer_id
                                                    )
                    			  
                                )
                            
                            -- add the payer check
                      )
               loop
                                                     
                    if in_reverse_payable_tf = 'F'
                    then
                         
                         if nvl(v_fitem_unearned_amt,0) = 0 then                              
                              v_bv_table(gbv_fitem_earned_amount).business_variable_value := fitem.balance;                                        
                         else
                              v_bv_table(gbv_fitem_unearned_amount).business_variable_value := fitem.balance;
                         end if;
                               
                         v_old_payable_fitem_list(fitem.fitem_id).earned_amt 	 := v_bv_table(gbv_fitem_earned_amount).business_variable_value; 
                         v_old_payable_fitem_list(fitem.fitem_id).unearned_amt   := v_bv_table(gbv_fitem_unearned_amount).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).earning_status := v_bv_table(gbv_fitem_EarningStatus).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).earning_date   := v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).policy_trx_id  := fitem.policy_transaction_id;
                         v_old_payable_fitem_list(fitem.fitem_id).fitem_signage  := sign(fitem.initial_amount);
                         v_old_payable_fitem_list(fitem.fitem_id).balance_amt    := fitem.balance;
                         v_old_payable_fitem_list(fitem.fitem_id).billing_acc_id := fitem.billing_account_id;
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Found Fitem ID: ' || fitem.fitem_id ||
                                   '.. Earned Amount New: '       || v_old_payable_fitem_list(fitem.fitem_id).earned_amt ||
                                   '.. Unearned Amount New: '     || v_old_payable_fitem_list(fitem.fitem_id).unearned_amt ||
                                   '.. Earning Status New: '      || v_old_payable_fitem_list(fitem.fitem_id).earning_status ||
                                   '.. Earning Date New: '        || v_old_payable_fitem_list(fitem.fitem_id).earning_date ||
                                   '.. Earned Amount Old: '       || fitem.earned_amount ||
                                   '.. Unearned Amount Old: '     || fitem.unearned_amount ||
                                   '.. Earning Status Old: '      || fitem.earning_status ||
                                   '.. Policy Transaction ID: '   || v_old_payable_fitem_list(fitem.fitem_id).policy_trx_id ||
                                   '.. Fitem Signage: '           || v_old_payable_fitem_list(fitem.fitem_id).fitem_signage || 
                                   '.. Balance Amount: '          || v_old_payable_fitem_list(fitem.fitem_id).balance_amt || 
                                   '.. Billing Account ID: '      || v_old_payable_fitem_list(fitem.fitem_id).billing_acc_id                              
                              );
                                                            
                         end if;
                          
                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              fitem.fitem_id,
                              v_bv_table
                         );--Lock Warning--OSPRODUCT-5651
                         
                    else
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Calling payable revresal for fitem: ' || fitem.fitem_id
                              );
                                                            
                         end if;
                         
                         sp_reverse_payable_earning
                         (
                              in_session_id,
                              in_transaction_id,
                              in_bord_fitransaction_id,
                              fitem.fitem_id,
                              in_current_date_time,
                              'T' 
                         );
                         
                    end if;
                          
                end loop;                    
				 
          else
                                                                      
               v_old_policy_trx_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_payable_fitem_trx_id,
                                           27922805 -- rollsforward
                                      );
                                           
               v_old_policy_trx_rlback_trx_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                 
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_old_policy_trx_id,
                                                     pkg_db_object.gbv_PolicyTrx_RollbackTrx -- rollsforward
                                                 );
                                                 
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Old Policy Transaction ID: ' || v_old_policy_trx_id ||
                         '.. Corresponding rollback transaction ID: ' || v_old_policy_trx_rlback_trx_id
                                                  
                    );
                                                       
               end if;
                                       
               if v_old_policy_trx_rlback_trx_id is null then
                         
                    -- Get the object that has rollsforward BV set to the v_old_policy_trx_id
                    v_old_policy_trx_rlback_trx_id := pkg_os_object_io.fn_object_ref_owner_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_old_policy_trx_id,
                                                           27919702 -- rollsforward BV 
                                                      );
                                                      
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Corresponding rollback transaction ID - attempt 2: ' || v_old_policy_trx_rlback_trx_id
                                                       
                         );
                                                            
                    end if;
                         
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_old_policy_trx_id,
                         pkg_db_object.gbv_PolicyTrx_RollbackTrx, -- rollsforward
                         v_old_policy_trx_rlback_trx_id
                    );
                         
               end if;
                                                      
               for fitem in 
                    (
                         select df.fitem_id,
                                df.initial_amount,
                                df.balance,
                                df.installment_id,
                                df.policy_transaction_id,
                                df.billing_account_id,
                                df.earned_amount,
                                df.unearned_amount,
                                df.earning_status                                  
                           from dragon_fitem df
                           join dragon_scheduled_installment dsi
                             on (df.installment_id = dsi.installment_id)
                          where df.policy_id = v_old_bord_policy
                            and df.policy_transaction_id in (v_old_policy_trx_id, v_old_policy_trx_rlback_trx_id)
                            and df.installment_number = v_installment_num ----OSPRODUCT-2520
                            and df.fitem_type_id = gFItemType_Credit
                            and df.fitem_category_id = v_payable_fitem_cat_id
                            and df.fitem_sub_category_id = v_payable_fitem_subcat_id
                            and df.balance <> 0
                            and (
                                     -- Single Payer Mode
                                     v_payer_name is null 
                                     or
                                     -- Multipayer mode
                                     v_payer_name = (
                                                         Select upper(ba.partner_name) -- OSPRODUCT-11370
                                                           from dragon_billingaccount ba
                                                          where ba.billingaccount_id = dsi.payer_id
                                                    )
                    			  
                                )
                            
                            -- add the payer check
                      )
               loop
                    
                    if in_reverse_payable_tf = 'F'
                    then
                         
                         if nvl(v_fitem_unearned_amt,0) = 0 then                              
                              v_bv_table(gbv_fitem_earned_amount).business_variable_value := fitem.balance;                                        
                         else
                              v_bv_table(gbv_fitem_unearned_amount).business_variable_value := fitem.balance;
                         end if;
                               
                         v_old_payable_fitem_list(fitem.fitem_id).earned_amt 	 := v_bv_table(gbv_fitem_earned_amount).business_variable_value; 
                         v_old_payable_fitem_list(fitem.fitem_id).unearned_amt   := v_bv_table(gbv_fitem_unearned_amount).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).earning_status := v_bv_table(gbv_fitem_EarningStatus).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).earning_date   := v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value;
                         v_old_payable_fitem_list(fitem.fitem_id).policy_trx_id  := fitem.policy_transaction_id;
                         v_old_payable_fitem_list(fitem.fitem_id).fitem_signage  := sign(fitem.initial_amount);
                         v_old_payable_fitem_list(fitem.fitem_id).balance_amt    := fitem.balance;
                         v_old_payable_fitem_list(fitem.fitem_id).billing_acc_id := fitem.billing_account_id;
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Found Fitem ID: ' || fitem.fitem_id ||
                                   '.. Earned Amount New: '       || v_old_payable_fitem_list(fitem.fitem_id).earned_amt ||
                                   '.. Unearned Amount New: '     || v_old_payable_fitem_list(fitem.fitem_id).unearned_amt ||
                                   '.. Earning Status New: '      || v_old_payable_fitem_list(fitem.fitem_id).earning_status ||
                                   '.. Earning Date New: '        || v_old_payable_fitem_list(fitem.fitem_id).earning_date ||
                                   '.. Earned Amount Old: '       || fitem.earned_amount ||
                                   '.. Unearned Amount Old: '     || fitem.unearned_amount ||
                                   '.. Earning Status Old: '      || fitem.earning_status ||
                                   '.. Policy Transaction ID: '   || v_old_payable_fitem_list(fitem.fitem_id).policy_trx_id ||
                                   '.. Fitem Signage: '           || v_old_payable_fitem_list(fitem.fitem_id).fitem_signage || 
                                   '.. Balance Amount: '          || v_old_payable_fitem_list(fitem.fitem_id).balance_amt || 
                                   '.. Billing Account ID: '      || v_old_payable_fitem_list(fitem.fitem_id).billing_acc_id                              
                              );
                                                            
                         end if;
                              
                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              fitem.fitem_id,
                              v_bv_table
                         );
                         
                    else
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Calling payable revresal for fitem: ' || fitem.fitem_id
                              );
                                                            
                         end if;
                         
                         sp_reverse_payable_earning
                         (
                              in_session_id,
                              in_transaction_id,
                              in_bord_fitransaction_id,
                              fitem.fitem_id,
                              in_current_date_time,
                              'T' 
                         );
                         
                    end if;
                          
                end loop; 
                    
          end if;
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Old Payable Fitem Count: ' || v_old_payable_fitem_list.count                                                       
               );
                                                       
          end if;
               
          if v_old_payable_fitem_list.count > 0 then
          
               v_payable_fitem_idx := v_old_payable_fitem_list.first;
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Fitem ID: ' || v_payable_fitem_idx                                                       
                    );
                                                       
               end if;
                    
               declare
                    
                    v_billing_account_id         object.object_id%type;
                    v_policy_transaction_id      object.object_id%type;
                    v_earned_amount              number; 
                    v_unearned_amout             number;
                    v_fitem_signage              number;
                    v_balance_amt                number;
                    v_earning_status             char;
                    v_earning_date               date;
                    v_fitem_id                   object.object_id%type;
                    v_fichange_id                object.object_id%type;
                    
               begin                         
                         
                    while v_payable_fitem_idx is not null loop
                    
                         v_fitem_id                  := v_payable_fitem_idx;                              
                         v_billing_account_id        := v_old_payable_fitem_list(v_payable_fitem_idx).billing_acc_id;
                         v_policy_transaction_id     := v_old_payable_fitem_list(v_payable_fitem_idx).policy_trx_id;
                         v_earned_amount             := v_old_payable_fitem_list(v_payable_fitem_idx).earned_amt;
                         v_unearned_amout            := v_old_payable_fitem_list(v_payable_fitem_idx).unearned_amt;
                         v_fitem_signage             := v_old_payable_fitem_list(v_payable_fitem_idx).fitem_signage;
                         v_balance_amt               := v_old_payable_fitem_list(v_payable_fitem_idx).balance_amt;
                         v_earning_status            := v_old_payable_fitem_list(v_payable_fitem_idx).earning_status;
                         v_earning_date              := to_date(v_old_payable_fitem_list(v_payable_fitem_idx).earning_date, pkg_os_constant.DragonDateFormatDefault);

                         pkg_db_object.sp_fichange_create
                         (
                              in_session_id                      =>        in_session_id,
                              in_transaction_id                  =>        in_transaction_id,
                              in_parent_fitransaction_id         =>        in_bord_fitransaction_id,
                              out_fichange_id                    =>        v_fichange_id,
                              in_fichange_action                 =>        pkg_db_object.gFIChange_FYI,
                              in_fichange_action_delta           =>        0,
                              in_fichange_ref_fitem              =>        v_fitem_id,
                              in_fichange_sum_include            =>        pkg_db_object.gFIChange_No,
                              in_fichange_process_date           =>        v_current_date,
                              in_fichange_ref_pol                =>        v_old_bord_policy,
                              in_fichange_ref_pol_trx            =>        v_policy_transaction_id,
                              in_fichange_belongs_to             =>        in_billingacounttrxset_id, --OSPRODUCT-6102
                              in_fitem_lock_tf                   =>        'T',
                              in_refresh_datamart                =>        'T',-- 7816
                              in_enable_perf_mode_tf             =>        'T' -- 7816
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fichange_id,
                              pkg_db_billing_modify.gbv_FIChangeAmountFYI,
                              v_fitem_signage*(abs(v_earned_amount))
                         );
                                   
                         begin
                                        
                              update
                                   dragon_fitem
                              set
                                   EARNED_AMOUNT = v_earned_amount
                                   ,UNEARNED_AMOUNT = v_unearned_amout
                                   ,EARNING_STATUS = pkg_os_lookup.fn_lookup_list_text_get ( 5385546 , v_earning_status )
                                   ,BALANCE = v_balance_amt
                                   --,PAID_AMOUNT = v_earned_amt  --OSPRODUCT-7816
                                   ,SESSION_ID = in_session_id
                                   ,TRANSACTION_ID = in_transaction_id
                                   ,FITEM_LAST_UPT_DATE = to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_fitem_id,'21686401' ),'YYYYMMDDHH24MISS')
                                   -- OSPRODUCT-15900
                                   ,earned_date = v_earning_date
                                   -- OSPRODUCT-15900 
                              where
                                   fitem_id = v_fitem_id;
                                             
                         exception
                                        
                              when others then
                                             
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fitem_id,
                                        v_datamart_tf
                                   );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Warning!! Switching to datamart update..'
                                        );

                                   end if;

                         end;
                              
                         v_payable_fitem_idx := v_old_payable_fitem_list.next(v_payable_fitem_idx);
                         
                    end loop;
                         
               end;
                    
          end if;                                  
                                   
     end if;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.Completed Payable processing on the old policy!!'
          );

     end if;
     
exception
                    
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Call stack: ' || dbms_utility.format_call_stack
          );
                         
          raise;

end sp_set_payable_bord_policy;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_set_payables_amount
--
--   %USAGE
--   This procedure will generate the earned payables elements
--   this procedure has been modified as per ticket OSBILLING-6705
--
--   %ALGORITHM
--
--   1.     Loop through each valid Payable Fitems of the policy
--   2.     Get the billing element ID for the payable item
--   3.     Loop through all earning instructions for the Billing Element
--   4.     Get the earning percentage as per Earning instruction. Make sure percentage should not be greather than 100.
--   5.     Get the payable fitem initial amount, balance amount and earned amount
--   6.     Get the parent entity id of billing account Object
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_policy_id                       in             object.object_id%type,
--   in_booking_process_tf              in               char,
--   in_invoicing_process_tf            in               char,
--   in_clerance_process_tf             in               char,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type


-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-7817
-- Refactored.
procedure sp_set_payables_amount
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     --in_booking_process_tf              in             char,  -- commented under OSPRODUCT-2085
     --in_invoicing_process_tf            in             char,  -- commented under OSPRODUCT-2085
     --in_clerance_process_tf             in             char,  -- commented under OSPRODUCT-2085
     io_action_outcome_id               in out         outcome.outcome_id%type,
     in_policy_transaction_id           in             object.object_id%type default null,
     in_billingacounttrxset_id          in             object.object_id%type default null,
     -- #MP
     in_policy_term_payer_id            in             object.object_id%type default null,
     in_policy_term_id                  in             object.object_id%type default null,-- OSBILLING-5926
     in_installment_id                  in             object.object_id%type default null, --OSPRODUCT-2520
     in_override_bor_tf                 in             char default null -- LXPRODUCT-449, LXPRODUCT-467
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_set_payables_amount';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_payable_review_dt                object_bv_value.business_variable_value%type;
     -- OSBILLING-3962
     v_fitransaction_id                 object.object_id%type;
     v_earning_status_changed           char(1);
     v_fichange_id                      object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_sub_category_set_id              number;--OSBilling-5665
     -- v_policy_type                   number; -- commented under OSPRODUCT-2085
     v_policy_transaction_type_id       pd_transaction_type.pd_transaction_type_id%type;

     -- v_fitrx_list                    pkg_os_object.t_object_list := pkg_os_object.gnull_object_list; -- commented under OSPRODUCT-2085
     -- v_fitrx_indx                    number; -- commented under OSPRODUCT-2085
     -- OSBILLING-7635
     v_cash_fitransaction               object.object_id%type;
     v_cash_transfer_reason             lookup_list_value.lookup_enum%type;
     v_batch_type_id                    object.object_id%type := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_billingacounttrxset_id,
                                                                      gbv_FITrxSetBatchType
                                                                 );

     v_billing_element_id               number;
     v_fitem_initial_amt                number;
     v_fitem_earned_amount              number;
     v_fitem_balance_amount             number;
     v_payable_fitem_balance            number;
     v_due_amount                       number;
     v_payable_fitem_category_id        number;
     v_payable_fitem_subcat_id          number;
     v_payable_earned_amt_new           number;   --OSBILLING-6705
     v_fitem_earned_amt_prev            number;   --OSBILLING-6705
     v_fitem_unearned_amt_new           number;   --OSBILLING-6705
     v_premium_initial_amt              number;
     v_payable_billing_account_id       object.object_id%type;
     v_payable_fitem_policytrx_id       object.object_id%type;
     v_cust_entity_id                   object.object_id%type;
     v_payable_fitem_id                 object.object_id%type;
     v_token_table                      pkg_os_token.t_string_table;
     r_fitem_list                       t_fitem_list;
     r_fitem_index                      varchar2(500); -- OSPRODUCT-7817
     v_earning_instr_percent            float;
     v_datamart_tf                      char(1)                       :=   'T';
     r_billing_account_list             pkg_db_object.t_billing_account_list;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_premium_fitem_rec                dragon_fitem%rowtype;
     v_product_id                       pd_product.pd_product_id%type;
     v_policytrx_effective_date         object_bv_value.business_variable_value%type;
     v_payable_fitem_eff_date           object_bv_value.business_variable_value%type;
     v_fitem_assoc_pol_trx_eff_dt       object_bv_value.business_variable_value%type;
     v_payable_instr_id                 db_payable_earning_instr.db_payable_earning_instr_id%type;
     v_payable_instr_row                db_payable_earning_instr%rowtype;
     v_payable_at_policy_booking_tf     char(1);

     -- #MP
     v_payer_rec                        pkg_db_multipayer.r_payer;
     v_inv_multipayer_mode              boolean;
     v_policy_term_id                   object.object_id%type;
     -- /#MP
     v_fitem_earning_status_new         number; --OSBILING-5111 --OSBILLING-6705
     v_payable_fitem_intial_balance     float;-- OSBILLING-5111 --OSBILLING-6705
     v_payable_fitem_status_id_prev     number;-- OSBILLING-5111 --OSBILLING-6705
     v_prem_fitem_rec_ini_amt           number; --OSbilling-5665
     v_premium_fitem_rec_bal            number; --OSbilling-5665

     v_commission_earned_amount         number;

     v_fitem_signage                    number; --OSBILLING-6705
     v_token_index                      number; --OSBILLING-6705
     v_earning_timing_type_id           number; --OSBILLING-6705
     v_prem_due_amount                  number; --OSBILLING-6705
     v_fitem_unearned_amt_prev          number; --OSBILLING-6705

     v_policy_billing_method            number; --OSBILLING-6957

     v_bv_table                         pkg_os_object_io.t_bv_table;--OSPRODUCT-5651

     v_fitem_effective_date             object_bv_value.business_variable_value%type;     --OSPRODUCT-6102
     v_mark_comm_earned_tf              char(1) := 'F';                                   --OSPRODUCT-6102
     v_mark_payable_comm_earned_tf      char(1) := 'F';                                   --OSPRODUCT-6102
     v_bats_id                          object.object_id%type;                            --OSPRODUCT-6102
     v_source_system                    number  := 2;       --Oneshield                   --OSPRODUCT-6102


     v_start_timestamp   timestamp      :=      systimestamp;

     v_term_billmethod_list             t_term_bill_method_list; -- OSPRODUCT-7817
     v_ba_entity_list                   t_ba_parententity_list; -- OSPRODUCT-7817
     v_payable_instr_row_list           t_payable_earning_inst; -- OSPRODUCT-7817
     v_term_billmethod_index            number; -- OSPRODUCT-7817
     v_ba_entity_index                  number; -- OSPRODUCT-7817
     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           pkg_db_cash_apply.t_fitem_installment_tab;
     v_fitem_installment_index          number;
     -- OSPRODUCT-8958
     v_recon_gross_or_net               object_bv_value.business_variable_value%type :=
                                        nvl(pkg_os_object_io.fn_object_bv_path_get(
                                          in_session_id,
                                          in_transaction_id,
                                          in_policy_id,
                                          '26590907.32582148'),2);
     v_installment_balance              object_bv_value.business_variable_value%type;  -- OSPRODUCT-15792 
     v_taken_inst_balance                object_bv_value.business_variable_value%type; -- OSPRODUCT-15792 
     
     v_fitem_inst_dues_cnt              object_bv_value.business_variable_value%type;  -- OSPRODUCT-17647
     v_taken_fitem_inst_dues_cnt        object_bv_value.business_variable_value%type;  -- OSPRODUCT-17647                                                      

     -- New Cursor vaultdev-9326 changed to use the payer vs the installment id
     -- OSBILLING-5574 Add check for product of All (gProduct_All)
     cursor c_policy_payable_items
     (
          in_product_id         pd_product.pd_product_id%type,
          in_payer_Entity_id    object.object_id%type -- v_payer_rec.PayerEntity_object_id should be passed here.   This will give us a payer in question in case of Multipayer mode.
     )
     is
          select
               df.*
          from
               dragon_fitem df
          --------------------------
          --
          -- connect fitem with its installment and get a payer from installment
          --
          -- here i suppose  the df.installment_id should not be NULL,
          --  but there are few with NULLs.... invalid? : select  count(1)  from dragon_fitem df  where  df.fitem_type_id      = 246    and     df.installment_id is null
          join
               dragon_scheduled_installment dsi on (df.installment_id = dsi.installment_id)

          --------------------------
          where
               df.policy_id = in_policy_id
          and
               (
                    in_policy_transaction_id is null
                    or
                    df.policy_transaction_id = in_policy_transaction_id
               )
          and
               (
                         df.INSTALLMENT_ID = in_installment_id --OSPRODUCT-2520
                         or
                         in_installment_id is null
                    ) ----OSPRODUCT-2520
          and
               df.fitem_type_id = gFItemType_Credit
          and
               -- OSPRODUCT-460
               exists
               (
                    select
                         dbe.credit_fitem_category
                    from
                         db_billing_element dbe
                    where
                         (
                              dbe.pd_product_id = in_product_id
                              or
                              dbe.pd_product_id = gProduct_All
                         )
                    and
                         dbe.create_credit_tf = 'T'
                    and
                         dbe.credit_fitem_category = df.fitem_category_id
                    and
                         (
                         
                         dbe.credit_fitem_sub_category = df.fitem_sub_category_id
                         or 
                         df.fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
                         )--LXPRODUCT-282
               )
               /*
               df.fitem_category_id
               in
               (
                    select
                         dbe.credit_fitem_category
                    from
                         db_billing_element dbe
                    where
                         (
                              dbe.pd_product_id = in_product_id
                              or
                              dbe.pd_product_id = gProduct_All
                         )
                         and
                         dbe.create_credit_tf = 'T'
               )
               */
               -- OSPRODUCT-460
          and
               earning_status !=   pkg_os_lookup.fn_lookup_list_text_get
                                   (
                                        FItemPayablesEarningStatus,
                                        gFitem_Earned
                                   )
          --------------------------
          and
               (
                    -- Single Payer Mode
                    in_payer_Entity_id is null
                    or
                    -- Multipayer mode
                    in_payer_Entity_id = pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              dsi.payer_id, -- this is ID of the object of type PolicyTermAccosiatedPayer(3349024)
                                              pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                         )

                )
          --------------------------
          order by
               decode(df.fitem_sub_category_id, pkg_db_object.gFItem_SubCat_Comm_Clawback, 1, 0) -- Process commissions first
          ;
      -- 20180626 Arun OSBILLING-5165(Merge from VAULT) - End
    
    -- LXPRODUCT-449
    -- LXPRODUCT-467
     v_session_bor_flag                     char(1) := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_session_id, 32972548);
     v_policy_bord                          char(1) := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_id, 32983748);  -- bor transfer done 
     v_new_bord_policy                      object.object_id%type;
     v_commission_handelling_mode           number;
     --v_payable_bord_policy_fitrx            object.object_id%type; 
     --v_bord_fitransaction_id                object.object_id%type;
     --v_old_bord_policy                      object.object_id%type;
     v_payable_process_tf                     char(1) := 'T';
   v_policy_image_id                        object.object_id%type;
     -- Kiran OSPRODUCT-34429 start

     v_business_relationship_list             pkg_os_object.t_object_list;
     v_business_relationship_index            varchar2(50);

     v_ptp_agency_requires_billing            number     default   PKG_OS_CONSTANT.gBoolean_No;
     v_skip_payables                          char(1)    default   'F';    
     v_ba_agent_type_tf                       char(1)    default   'F';    
     -- Kiran OSPRODUCT-34429 end   
   
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering procedure to update the earned amount for Policy ID : '||in_policy_id ||
               '|||||| Policy Transaction ID (optional) : '||in_policy_transaction_id ||
               '|||||| io_action_outcome_id: '||io_action_outcome_id ||
               '|||||| in_policy_term_id: '||in_policy_term_id ||
               '|||||| in_policy_term_payer_id: ' || in_policy_term_payer_id ||
               '|||||| in_billingacounttrxset_id : '|| in_billingacounttrxset_id || --Added to debug OSBILLING-6732
               '|||||| installment ID: '            || in_installment_id || 
               '|||||| BOR Workflow (1. Yes) '      || v_session_bor_flag || -- LXPRODUCT-449, LXPRODUCT-467
               ' call stack - ' || DBMS_UTILITY.FORMAT_CALL_STACK
          );
          
     end if;   
   
     if in_policy_id is null -- OSPRODUCT-2146
     then
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....WARNING: Policy ID is NULL. Terminating the '|| v_procedure_name
               );
          end if;

          return;

     end if;                 -- / OSPRODUCT-2146
   
   -- LXPRODUCT-449, LXPRODUCT-467
     if nvl(v_session_bor_flag, 2) = 1 
     then-- Yes
          
          if nvl(in_override_bor_tf, 'N') = 'N' -- Stop processing until overridden
          then
               
               v_payable_process_tf := 'F';
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Payable processing will be stopped for installment clearance payable as this is a BOR workflow and override flag is False.. '
                    );
                                        
               end if;
               
          end if;
          
     else -- Not a BOR workflow
          
          if nvl(v_policy_bord, 0) = 1 
          then-- if bor transfer done 
               
               v_commission_handelling_mode := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_policy_id,
                                                         pkg_db_bor.gRef_BORd_Policy -- 32651648 -- bord policy
                                                    ),
                                                    pkg_pc_bor_action.gbv_policy_commission_mode
                                               );
                                               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Commission handelling mode (1. Prorata, 2. On Renewal, ):' || v_commission_handelling_mode
                    );
                                             
               end if; 
                                               
               -- If the policy is BORd with commission mode as Pro rata the stop the processing
                                                         
               if v_commission_handelling_mode = pkg_pc_bor_transfer.gBORCommissionMode_Prorata then 
                    
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Payable processing will be stopped for installment clearance payable since commission mode is prorata.. '
                         );
                                             
                    end if; 
                    
                    v_payable_process_tf := 'F';
                    
               end if;
          
          end if;                   
          
     end if;

     -- OSPRODUCT-7817
     r_billing_account_list.delete;
     v_term_billmethod_list.delete;
     v_ba_entity_list.delete;

     v_current_date := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id,
                                   pkg_db_stmt.gbv_PolicyRolledDate
                              );

     -- UTPRODUCT-3679
     -- OSPRODUCT-2674  Start BV replaced with Datamart

     --if v_policy_term_id is null then
     -- OSPRODUCT-7817
     -- LXPRODUCT-449 (If policy transaction id is null the query execution is unnecessary)
     if in_policy_transaction_id is not null then
               
          begin
                    
               select
                    nvl(in_policy_term_id, policy_term_id),
                    to_char(policy_trx_eff_date, pkg_os_constant.DragonDateFormatDefault),
                    policy_trx_product_id,
                    ptp_id
               into
                    v_policy_term_id,
                    v_policytrx_effective_date,
                    v_product_id,
                    v_policy_image_id
               from
                    dragon_policy_trx pt
               where
                    pt.policy_trx_id = in_policy_transaction_id;

          exception
                    
               when no_data_found then
                    v_policy_term_id := in_policy_term_id; -- OSPRODUCT-9055
                         
          end;
          
     else
               
          v_policy_term_id := in_policy_term_id; -- LXPRODUCT-449 (If policy transaction id is null the query execution is unnecessary)
               
     end if; 

     begin

          if v_policy_term_id is null then

               --Warning: Below call might degrade performance !
               v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        pkg_os_constant_bv.gbv_RefPolcyTrxnBelongsTo
                                   );

          end if;

          -- If policy term is still not defined, get it from policy
          if v_policy_term_id is null
          then
               -- OSPRODUCT-16825
               if in_policy_term_payer_id is not null then
                    
                    v_policy_term_id := pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_term_payer_id
                                        );
               else
                         
                    v_policy_term_id := pkg_db_functions.fn_get_policy_current_term
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        );
               end if;
               
          end if;

          if v_product_id is null then

               --Warning: Below call might degrade performance !
               v_product_id := pkg_os_product.fn_object_product_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        );

          end if;

          if v_policytrx_effective_date is null then
               --Warning: Below call might degrade performance !
               v_policytrx_effective_date    :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_transaction_id,
                                                       pkg_os_policy_transaction.gbv_PolicyTrxEffectiveDate
                                                  );
          end if;

     end;
     -- OSPRODUCT-7817

     -- #MP
     -- Check the multi-payer mode, if ON, put the payer into the v_payer_rec record.
     --
     -- is it returning record of payer pased to below proc with term id
     pkg_db_multipayer.sp_payer_validate
     (
          in_session_id,
          in_transaction_id,
          in_term_payer_id         => in_policy_term_payer_id,
          io_payer_rec             => v_payer_rec,           -- the payer recored will be taken from Policy Term.
                                                             -- Attention: chosen payment plan ID may differ from current policy transaction chosen payment plan.
          io_inv_multipayer_mode   => v_inv_multipayer_mode,
          in_policy_id             => in_policy_id,
          in_policy_term_id        => v_policy_term_id,
          in_policy_image_id       => v_policy_image_id -- UTXPRODUCT-522
     );
     -- /#MP

     v_payable_at_policy_booking_tf :=  nvl
                                        (
                                             pkg_os_product.fn_product_property_get
                                            (
                         in_session_id,
                         in_transaction_id,
                                                 in_policy_id,
                                                 gPayableAtPolicyBooking
                                             )
                                             ,'F'
                                        );
     -- removed if condition from here and moved it within loop of the payables along with earning timing At Booking under OSPRODUCT-2085
     r_fitem_list.delete;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Loop through each valid Payable Fitems of the policy in else part ( Key processing ) '
               || case when v_inv_multipayer_mode then ' policy is in multipayer mode ' else  ' policy is in single payer mode ' end
               || ' Using PayerEntity_object_id ( We should not pass PayerEntity_object_id in payable cursor for single payer mode ) ' || v_payer_rec.PayerEntity_object_id
               || ' PayerBillingAccount_id ' || v_payer_rec.PayerBillingAccount_id || ' chosen_payment_plan ' || v_payer_rec.chosen_payment_plan   -- #MP
               || ' and using product id ' || v_product_id || ' v_payable_at_policy_booking_tf ' ||v_payable_at_policy_booking_tf
               || '...in_policy_transaction_id '|| in_policy_transaction_id
               || '...v_policytrx_effective_date ' || v_policytrx_effective_date
         );

     end if;

     --
     -- 1. Loop through each valid Payable Fitems of the policy
     --
     -- 20180626 Arun OSBILLING-5165(Merge from VAULT) - Start
     /*
     for r_policy_payable_items in c_policy_payable_items(v_product_id,
                                                          v_payer_rec.PayerBillingAccount_id,  --#MP
                                                          v_payer_rec.chosen_payment_plan      --#MP
                                                         )*/
     -- Kiran OSPRODUCT-34429 start
    
     if v_session_control.gLogging_Full
     then
                    
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Cursor parameters : '
               ||' in_policy_id:' || in_policy_id
               ||' in_policy_transaction_id:' || in_policy_transaction_id
               ||' in_installment_id:'||in_installment_id
               ||' gFItemType_Credit:' || gFItemType_Credit
               -- ||' in_product_id:'||in_product_id
               ||' gProduct_All:' || gProduct_All
               ||' pkg_db_object.gFItem_SubCat_Comm_Clawback:' || pkg_db_object.gFItem_SubCat_Comm_Clawback
               -- ||' earning_status:' || earning_status
               ||' pkg_os_lookup.fn_lookup_list_text_get(FItemPayablesEarningStatus,gFitem_Earned):' || pkg_os_lookup.fn_lookup_list_text_get
                                                                                                       (
                                                                                                            FItemPayablesEarningStatus,
                                                                                                            gFitem_Earned
                                                                                                       )
               ||' in_payer_Entity_id:' || v_payer_rec.PayerEntity_object_id                              
          );
                    
     end if;
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...PTP Payer record:'|| v_payer_rec.PTPayer_object_id
               
         );

     end if;
     
     -- Identifying the account type of the PolicyTermPayer

     if v_payer_rec.PTPayer_object_id is not null then
       
        v_ba_agent_type_tf            := PKG_DB_MULTIPAYER.fn_billing_account_type_tf
                                         (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_id,
                                            v_payer_rec.PTPayer_object_id,
                                            null,--ptp_payer_id passing as null as we have Policy term Payer Id
                                            pkg_db_constant.gBillingAcType_AgentBroker
                                         );
        if v_session_control.gLogging_Full
        then
    
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...PTP Payer account type:'|| v_ba_agent_type_tf               
             );
    
        end if;
         
     end if;
        
     -- Perform the Payables logic only when the Account type is not Agent
     if v_ba_agent_type_tf <> 'T' then
       
        -- Retriving the relationships list for the Payable Earning Batch
        v_business_relationship_list.delete;
                     
        v_business_relationship_list  := PKG_DB_BUSINESS_RELATIONSHIP.fn_get_business_relationship_list
                                         (
                                            in_session_id,
                                            in_transaction_id,
                                            gBatch_PayableEarning
                                         );
        v_business_relationship_index := v_business_relationship_list.first;                                      
                     
        if v_session_control.gLogging_Full
        then
                    
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... For Payable Earning Batch, number of relations identified : '
               ||v_business_relationship_list.count
          );
                    
        end if;
        
        -- Retriving the Inhouse agency flag
        v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                         (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                         );
         -- Kiran OSPRODUCT-34429 end -- Formatted the below for loop to move rigth side a bit
         for r_policy_payable_items in c_policy_payable_items
                                       (
                                            v_product_id,
                                            v_payer_rec.PayerEntity_object_id  -- 20180626 Arun OSBILLING-5165 changed to pass payer entity
                                       )
         -- 20180626 Arun OSBILLING-5165(Merge from VAULT) - End
         loop


              -- OSPRODUCT-2674  Replaced BV Get method with Datamart retrieval
              -- Using a collection
              -- OSPRODUCT-7817
              -- OSPRODUCT-7816

              -- Kiran OSPRODUCT-34429 start
              if v_session_control.gLogging_Full
              then
                
                 pkg_os_logging.sp_log
                 (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  '...... For the Fitem : '
                  ||r_policy_payable_items.fitem_id                    
                  ||' Billing Element Id :'||r_policy_payable_items.BILLING_ELEMENT_MD_ID
                  ||' Mapped business relationship is :'||r_policy_payable_items.fitem_business_relationship
                  ||' Catgeory : '     ||r_policy_payable_items.category
                  ||' Sub Catgeory : ' ||r_policy_payable_items.sub_category
                  --||' Partner Id: '    ||r_policy_payable_items.partner_id
                  || ' of Payer entity object v_payer_rec.PayerEntity_object_id:'
                  ||v_payer_rec.PayerEntity_object_id 
                 );
                
              end if;                                  
              -- Kiran OSPRODUCT-34429 end
          
              if r_policy_payable_items.policy_term_id is not null then

                   if v_term_billmethod_list.exists (r_policy_payable_items.policy_term_id) then

                        v_policy_billing_method := v_term_billmethod_list(r_policy_payable_items.policy_term_id);

                        if v_session_control.gLogging_Full
                        then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '... Billing method got from the list: ' || v_policy_billing_method
                             );

                        end if;

                   else

                        begin
                             select
                                  policy_term_billing_method_id
                             into
                                  v_policy_billing_method
                             from
                                  dragon_policy_term
                             where
                                  policy_term_id = r_policy_payable_items.policy_term_id;
                        exception
                                  when others then
                                       v_policy_billing_method := null;
                        end;

                        if v_policy_billing_method is null then

                             --Warning: Below call might degrade performance !
                             v_policy_billing_method := pkg_os_object_io.fn_object_bv_get(
                                                        in_session_id,
                                                        in_transaction_id,
                                                        r_policy_payable_items.policy_term_id,
                                                        gPolicyTerm_billing_method);

                        end if;

                        if v_session_control.gLogging_Full
                        then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '... Billing method added to the list the list: ' || v_policy_billing_method ||
                                  '... Term ID: ' || r_policy_payable_items.policy_term_id
                             );

                        end if;

                        v_term_billmethod_list(r_policy_payable_items.policy_term_id) := v_policy_billing_method;

                   end if;

              end if;

              v_due_amount := null; --OSBILLING-6705
              v_commission_earned_amount := 0;  -- relocated for OSPRODUCT-2085
              -- Kiran OSPRODUCT-34429 start
                    
              if v_business_relationship_list.count = 0 or r_policy_payable_items.fitem_business_relationship is null then
                       
                 if v_policy_billing_method = gBillingMethod_Agency then
                    v_skip_payables := 'T';                    
                 else                   
                    v_skip_payables := 'F';   -- default value should be false.                 
                 end if;
                       
              end if;
                
              if v_session_control.gLogging_Full
              then
                  pkg_os_logging.sp_log
                  (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... v_skip_payables value:'|| v_skip_payables
                   );
              end if;            
              -- Replaced the below condition with a new one.

            -- OSPRODUCT-8958
              --If v_policy_billing_method = gBillingMethod_Agency and  v_recon_gross_or_net = gReconciliation_Net
              If v_skip_payables = 'T'
                
              -- Kiran OSPRODUCT-34429 end
              then

                   if v_session_control.gLogging_Full
                   then
                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '... Skipping the Payable Earning for fitem '|| r_policy_payable_items.fitem_id ||
                             ' as policy term is agency billed'
                        );
                   end if;
             

              -- Kiran OSPRODUCT-34429 start
                    
              -- commented the else part and added elsif condition. Also added relationship null condition for Personal Auto
              --else --OSBILLING-6957 end
                    
              elsif (v_business_relationship_list.exists(r_policy_payable_items.fitem_business_relationship) 
                      or r_policy_payable_items.fitem_business_relationship is null) and
                    v_skip_payables = 'F'
              then
                    
                   if v_session_control.gLogging_Full
                   then
                      
                        pkg_os_logging.sp_log
                        (
                            in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            -- For Personal auto, we dont have Business relationship.
                            '...... Business relationship <'||r_policy_payable_items.fitem_business_relationship||'> exists for the Fitem: '
                            ||r_policy_payable_items.fitem_id
                        );
                      
                   end if; 
              -- Kiran OSPRODUCT-34429 end

                 --
                 -- 2. Get the billing element ID for the payable item
                 --
                 -- OSBILLING-5574 Add check for product of All (gProduct_All)

                 -- Get the billing element id
                 begin

                      v_billing_element_id := null;--OSBILLING-6705

                      select
                           db_billing_element_id
                      into
                           v_billing_element_id
                      from
                           db_billing_element
                      where
                           (
                                pd_product_id = r_policy_payable_items.product_id
                                or
                                pd_product_id = gProduct_All
                           )
                      and
                           nvl(create_credit_tf,'F') = 'T'
                      and
                           credit_fitem_category = r_policy_payable_items.fitem_category_id
                      and
                           (
                           credit_fitem_sub_category = r_policy_payable_items.fitem_sub_category_id
                           or
                           r_policy_payable_items.fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
                           )--LXPRODUCT-282                             
                      and
                           active_TF = 'T'
                      ;

                 exception

                      when too_many_rows then

                           pkg_os_logging.sp_log_error
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Configuration Error: Could not find 1 unique Credit Billing Element with Category ID: '
                                || r_policy_payable_items.fitem_category_id||' and Sub-category ID: '||r_policy_payable_items.fitem_sub_category_id
                                ||' for FItem '||r_policy_payable_items.fitem_id
                           );

                      when others then

                           pkg_os_logging.sp_log_error
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Unable to find the Billing Element ID for FItem '||r_policy_payable_items.fitem_id
                           );

                 end;

                 --
                 -- 3. Get the Payable Earning instruction for the Billing Element
                 --

                 --2017/10/17 Cheryl set to null
                 v_payable_instr_id := null;
                 v_payable_instr_row := null;

                 -- OSPRODUCT-7817
                 if v_payable_instr_row_list.exists(v_billing_element_id) then

                      v_payable_instr_row := v_payable_instr_row_list(v_billing_element_id);
                      v_payable_instr_id := v_payable_instr_row.db_payable_earning_instr_id;

                      if v_session_control.gLogging_Full
                      then
                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '.. Got from the list: '|| v_payable_instr_id ||
                                '.. Billing Element ID: ' || v_billing_element_id
                           );

                      end if;

                 else

                      begin

                           select
                                --instr.db_payable_earning_instr_id,
                                instr.*
                           into
                                --v_payable_instr_id,
                                v_payable_instr_row
                           from
                                db_payable_earning_instr instr
                           where
                                instr.billing_element_id = v_billing_element_id
                           ;

                           v_payable_instr_row_list(v_billing_element_id) := v_payable_instr_row;
                           v_payable_instr_id := v_payable_instr_row.db_payable_earning_instr_id;

                           if v_session_control.gLogging_Full
                           then
                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '.. Payable Instruction ID: '|| v_payable_instr_id || -- LXPRODUCT-449
                                     '.. Billing Element ID: ' || v_billing_element_id
                                );

                           end if;

                      exception

                           when too_many_rows then

                                pkg_os_logging.sp_log_error
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '...... Configuration Error: Could not find 1 unique Payable Earning Instruction for Billing Element ID: '|| v_billing_element_id
                                     ||' for FItem '||r_policy_payable_items.fitem_id
                                );

                           when others then
                                            --OSBILLING-4805 - Converted this message as a warning
                                pkg_os_logging.sp_log_error
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                   --  'Warning: Unable to find the Payable Earning Instruction for Billing Element ID: '||v_billing_element_id
                                     'Unable to find the Payable Earning Instruction for Billing Element ID: '||v_billing_element_id  --OSBILLING-7409
                                     ||' for FItem '||r_policy_payable_items.fitem_id
                                );
                                raise;  --OSBILLING-7409

                      end;

                 end if;

                 if v_session_control.gLogging_Full
                 then

                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           '.. Payable FItem: '          || r_policy_payable_items.fitem_id ||
                           '.. Category ID: '          || r_policy_payable_items.fitem_category_id ||
                           '.. Sub-category ID: '        || r_policy_payable_items.fitem_sub_category_id ||
                           '.. Product Id: '             || r_policy_payable_items.product_id ||
                           '.. Billing Element ID: '     || v_billing_element_id
                      );

                 end if;

                 if v_payable_instr_id is not null
                    and
                    (
                           r_policy_payable_items.fitem_sub_category_id <> pkg_db_object.gFItem_SubCat_Comm_Clawback
                           or
                           v_commission_earned_amount = 0
                    )
                 then

                      if v_session_control.gLogging_Full
                      then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '.. Payable Earning Instruction ID: '||v_payable_instr_id
                           );

                      end if;

                      --
                      -- Get the Payable Earning Instruction row
                      --
                      -- OSPRODUCT-7817 Already retrieved
                      /*v_payable_instr_row := null; --makes all element of rec to null

                      select
                           *
                      into
                           v_payable_instr_row
                      from
                           db_payable_earning_instr
                      where
                           db_payable_earning_instr_id = v_payable_instr_id;*/

                      -- OSBilling-5665
                      -- Get the Sub category set
                      v_sub_category_set_id := v_payable_instr_row.target_subcategory_set;

                      -- Get the earning percentage as per Earning instruction. Make sure percentage should not be greather than 100.
                      v_earning_instr_percent  :=   least(v_payable_instr_row.earned_percentage,100);

                      -- Get the payable fitem initial amount
                      -- OSPRODUCT-7817
                      v_fitem_initial_amt := r_policy_payable_items.initial_amount;
                      /* v_fitem_initial_amt := pkg_db_functions.fn_fitem_initial_amt_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         r_policy_payable_items.fitem_id
                                                    );*/


                      -- OSBILLING-3278: Get the review date
                      v_payable_review_dt := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    r_policy_payable_items.fitem_id,
                                                    gbv_FITrxSetPayableReviewDt
                                               );

                      -- Fitem signage
                      v_fitem_signage := sign(v_fitem_initial_amt);

                      -- Get the fitem balance amount
                      v_fitem_balance_amount := r_policy_payable_items.balance; --OSBILLING-6705

                      -- OSPRODUCT-6102 starts
                      -- effective date should be udpated for every fitem
                      v_fitem_effective_date := null;
                      v_mark_comm_earned_tf := 'F';
                      -- Fitem Earned amount
                      v_fitem_earned_amount := 0;

                      if v_policytrx_effective_date is not null
                      then

                           v_fitem_effective_date := v_policytrx_effective_date;

                      else

                           v_fitem_effective_date := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         r_policy_payable_items.policy_transaction_id,
                                                         --212029 -- policy transaction eff date
                                                         pkg_db_functions.gbv_PolTrxEffectiveDate
                                                    );

                           if v_fitem_effective_date is null
                           then
                                v_fitem_effective_date := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              r_policy_payable_items.fitem_id,
                                                              --29710446
                                                              pkg_db_functions.gbv_Fitem_effective_date
                                                         );


                           end if;


                      end if;

                      --OSPRODUCT-6102 ends

                      if v_session_control.gLogging_Full
                      then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '.... Payable Reveiw Date: '  || v_payable_review_dt||
                                '.... Current Date: '         || v_current_date||
                                '.... Earning type: '         || v_payable_instr_row.earning_timing_type ||
                                '.... Fitem sign: '           || v_fitem_signage ||
                                '.... Balance Amount: '       || v_fitem_balance_amount ||
                                '.... Earning Percentage: '   || v_earning_instr_percent ||
                                '.... Sub Category Set ID: '  || v_sub_category_set_id   ||
                                '.... Fitem Initial amount: ' || v_fitem_initial_amt     ||
                                '.... Fitem Effective Date: ' || v_fitem_effective_date
                           );

                      end if;

                      -- Updated conditions for earning timing At Booking under OSPRODUCT-2085 starts
                      if v_payable_instr_row.earning_timing_type = gEarning_Type_AtBooking
                      then

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '..Payable at booking: ' || v_payable_at_policy_booking_tf
                                );

                           end if;

                           if --in_policy_transaction_id is not null --OSPRODUCT-6102
                              --and  --OSPRODUCT-6102
                              --trunc(to_date(v_policytrx_effective_date,pkg_os_constant.DragonDateFormatDefault)) > trunc(to_date(v_current_date,pkg_os_constant.DragonDateFormatDefault)) --OSPRODUCT-6102
                              trunc(to_date(v_fitem_effective_date,pkg_os_constant.DragonDateFormatDefault)) > trunc(to_date(v_current_date,pkg_os_constant.DragonDateFormatDefault)) --OSPRODUCT-6102
                              -- Process future date Payable Earning on the NewBusiness transaction if it's configured
                              --and not ( v_policy_transaction_type_id = pkg_os_constant.gPolicyTran_NewBusiness and  v_payable_at_policy_booking_tf = 'T' )
                              and not ( v_payable_at_policy_booking_tf = 'T' )
                           then

                                --
                                -- The Policy Transaction Effective Date is in future. So, we cannot mark the Payables as Earned now
                                -- a) Set Payable Earning Reviewed Y/N to No on the Policy Transaction
                                -- b) Set Payable Earning Review Date on the Policy Transaction
                                -- c) Skip the Payable Processing
                                --

                                --OSBilling-3278: Looping Payable Fitems to set the review date and review flag
                                /*pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     r_policy_payable_items.fitem_id,
                                     gbv_FITrxSetPayableReviewed,
                                     pkg_os_constant_enum.gBoolean_False
                                );

                                pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     r_policy_payable_items.fitem_id,
                                     gbv_FITrxSetPayableReviewDt,
                                     --v_policytrx_effective_date
                                     v_fitem_effective_date --OSPRODUCT-6102
                                );*/

                                v_mark_comm_earned_tf :='F';  --OSPRODUCT-6102

                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '...Effective Date of Policy Transaction or Fitem is in Future, Earn Payable At Process Date is False,  ' ||
                                          ' Skipping the Payable Earning for Booking process as Policy Transaction is effective in future.'||
                                          ' Policy Current Date: '||v_current_date||
                                          ' and Policy Transaction Effective Date: '||v_policytrx_effective_date||
                                          ' v_fitem_effective_date ' || v_fitem_effective_date ||
                                          ' Setting the Payable Earning Reviewed as No and Review Date as: '||v_policytrx_effective_date
                                          ||' for FItem '||r_policy_payable_items.fitem_id
                                     );

                                end if;

                           -- continue; -- Skip next steps within the loop of payables and start next iteration for OSPRODUCT-2085 OSPRODUCT-6102
                           elsif trunc(to_date(v_payable_review_dt,pkg_os_constant.DragonDateFormatDefault))<= trunc(to_date(v_current_date,pkg_os_constant.DragonDateFormatDefault))
                           then

                                --OSBilling-3278: Get the earned amount if booking flag is false and review date is today
                                v_due_amount := 0; --OSBILLING-6705

                                v_fitem_earned_amount    :=   (v_fitem_balance_amount * v_earning_instr_percent)/100; --OSBILLING-6705
                                /*pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     r_policy_payable_items.fitem_id,
                                     gbv_FITrxSetPayableReviewed,
                                     pkg_os_constant_enum.gBoolean_True
                                );

                                pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     r_policy_payable_items.fitem_id,
                                     gbv_FITrxSetPayableReviewDt,
                                     null
                                );*/

                                v_mark_comm_earned_tf :='T';  --OSPRODUCT-6102

                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '...........Making Payable Earned based on review date, Review Date is Today or in the past, Make Reviewed = Yes, Review Date as null,  initial amount '||v_fitem_initial_amt||
                                          ' bal amt ' ||v_fitem_balance_amount ||'.....v_earning_instr_percent'||v_earning_instr_percent
                                          || ' v_fitem_earned_amount ' || v_fitem_earned_amount
                                          ||' for FItem '||r_policy_payable_items.fitem_id

                                     );

                                end if;

                           else

                                v_due_amount := 0; --OSBILLING-6705
                                v_fitem_earned_amount    :=   (v_fitem_balance_amount * v_earning_instr_percent)/100; --OSBILLING-6705
                                v_mark_comm_earned_tf :='T';  --OSPRODUCT-6102

                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '..Making Payable Earned Along with Transaction '
                                          || ' v_fitem_earned_amount ' || v_fitem_earned_amount
                                          ||' for FItem '||r_policy_payable_items.fitem_id

                                     );

                                end if;

                           end if;


                      -- end if; --Cases for At Booking
                      -- Updated conditions for earning timing At Booking under OSPRODUCT-2085 ends

                      --
                      -- v. Get the earned amount of item if instruction timining is 'At Installment Clearance'
                      --
                      --
                      --if in_clerance_process_tf = 'T' and v_payable_instr_row.earning_timing_type = gEarning_Type_InstClr -- commented under OSPRODUCT-2085
                      elsif v_payable_instr_row.earning_timing_type = gEarning_Type_InstClr -- added under OSPRODUCT-2085
                      then

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '..Payable processing: ' || v_payable_process_tf
                                );
                                                                          
                           end if;
                                  
                           -- LXPRODUCT-449 Proceed only for non BOR workflows
                           -- LXPRODUCT-467
                           if /*nvl(v_session_bor_flag, 0) = 0 -- not in bor workflow
                              and
                              nvl(v_policy_bord, 0) = 0 -- not a bord policy -- LXPRODUCT-467*/
                              v_payable_process_tf = 'T'
                           then

                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '..Payable FItem..'||r_policy_payable_items.fitem_id ||                                      
                                          '..Installment Num: '||r_policy_payable_items.installment_number ||
                                          '..Installment ID: '|| r_policy_payable_items.Installment_Id || --Added to debug OSBILLING-6732
                                          '..Payable fitem policy_transaction_id: '|| r_policy_payable_items.policy_transaction_id || --Added to debug OSBILLING-6732
                                          '..Policy: '|| in_policy_id ||'..Policy term payer: ' || v_payer_rec.PTPayer_object_id ||
                                          '..Billing account: ' || pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id , in_billingacounttrxset_id)
                                     );
                                                                          
                                end if;

                                --
                                -- Get the Outstanding Balance of the Installment
                                --
                                --2017-10-23 Cheryl set v_due_amount to null and remove nvl
                                v_due_amount := null;

                                select
                                     nvl(sum(balance),0)
                                into
                                     v_due_amount
                                from
                                     dragon_fitem a
                                where
                                     a.policy_id = in_policy_id
                                and
                                     a.fitem_type_id       =    gFItemType_Debit
                                   -- 2017-10-04 cheryl do not include commission
                                and
                                     a.fitem_category_id not in (pkg_db_stmt.g_FItem_Cat_Commission)
                                and
                                     a.Installment_Id = r_policy_payable_items.Installment_Id  --OSBILLING-5265
                                --2017-10-17 Cheryl Add the billing account only want the installments for the payers billing account
                                and
                                  /*  a.billing_account_id = pkg_os_object.fn_object_parent_get
                                                                         (in_session_id,
                                                                         in_transaction_id ,
                                                                         in_billingacounttrxset_id
                                                                         ) */  --Commented for OSBILLING-6339 and OSBILLING-6732
                                     a.policy_transaction_id = r_policy_payable_items.policy_transaction_id --added for  OSBILLING-6339  and OSBILLING-6732
                                ;

                                -- OSPRODUCT-15792 Start
                                -- Get Installment balance 
                                --
                                v_installment_balance := pkg_os_object_io.fn_object_bv_get 
                                                         (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           r_policy_payable_items.Installment_Id,
                                                           pkg_db_billing_modify.gbv_installment_balance
                                                         ); 
                                -- OSPRODUCT-15792 Start
                                        
                                -- OSPRODUCT-17647 Start
                                begin
                                                                           
                                     select 
                                          count(1) 
                                     into 
                                          v_fitem_inst_dues_cnt       
                                     from 
                                          dragon_fitem df
                                     where 
                                          df.installment_id = r_policy_payable_items.Installment_Id 
                                     and 
                                          df.fitem_type_id  = gFItemType_Debit
                                     and
                                          df.fitem_category_id not in (pkg_db_stmt.g_FItem_Cat_Commission)
                                     and 
                                          df.balance > 0;
                                                 
                                exception 
                                     when others then 
                                          v_fitem_inst_dues_cnt := 0;  
                                                     
                                end;     
                                        
                                --OSPRODUCT-17647 end.
                                                                     
                                -- LXPRODUCT-449
                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '..Due Amount: ' || v_due_amount ||
                                          '..Installmet Balance: ' || v_installment_balance ||
                                          '..Installment Due Count: ' || v_fitem_inst_dues_cnt                                        
                                     );
                                                                          
                                end if;
                                                                      
                                --
                                -- If Nothing is outstanding on this Installment, then mark the associated Payable as Earned.
                                --
                                -- 2017-10-23 Cheryl check for null
                                -- LXPRODUCT-449
                                if ( v_due_amount is not null
                                     and
                                     (
                                          (
                                               v_due_amount = 0
                                          )
                                          or
                                          (
                                               v_due_amount < 0 
                                               and 
                                               v_installment_balance <= 0 
                                               and
                                               v_fitem_inst_dues_cnt = 0  --OSPRODUCT-17647
                                          )
                                     )
                                   )
                                then
                                      --  v_fitem_earned_amount    :=   (v_fitem_initial_amt * v_earning_instr_percent)/100; --OSBILLING-6705
                                     v_fitem_earned_amount := (v_fitem_balance_amount * v_earning_instr_percent)/100; --OSBILLING-6705

                                end if;
                                                                     
                                -- LXPRODUCT-449
                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.. Fitem Earned Amount: ' || v_fitem_earned_amount  -- OSPRODUCT-17647
                                     );

                                end if;
                                       
                           else -- LXPRODUCT-467
                                       
                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.. Skipping due to BOR..'
                                     );

                                end if;
                                       
                                -- OSPRODUCT-19777
                  continue;
                                  
                           end if;


                      --end if; --At Installment Clearance

                      --
                      -- vi. Get the earned amount if instruction timing is 'Pro-Rated Clearance of Installment Premium'
                      --
                      elsif v_payable_instr_row.earning_timing_type = gEarning_Type_ProRateInst
                      then

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '.........Entering pro-rated timing type..  in_policy_id: '|| in_policy_id
                                            ||' r_policy_payable_items.installment_id'||r_policy_payable_items.installment_id
                                            ||' r_policy_payable_items.policy_transaction_id'||r_policy_payable_items.policy_transaction_id
                                            ||' v_sub_category_set_id'||v_sub_category_set_id
                                            ||' r_policy_payable_items.fitem_asset_id'||r_policy_payable_items.fitem_asset_id
                                            ||' for FItem '||r_policy_payable_items.fitem_id
                                );
                           end if;


                           select
                                nvl(sum(balance),0),
                                nvl(sum(initial_amount),0)
                           into
                                v_premium_fitem_rec_bal, --OSBilling-5665
                                v_prem_fitem_rec_ini_amt --OSBilling-5665
                           from
                                dragon_fitem f
                           where
                                policy_id = in_policy_id
                           and
                                fitem_type_id       =    gFItemType_Debit
                           and
                                fitem_category_id   =    gFItem_Category_Premium
                           and
                                --OSBilling-5665
                             pkg_db_billing.fn_fitem_subcategory_in_set(f.fitem_sub_category_id, v_sub_category_set_id) = 'T'
                           and
                                f.installment_id  =    r_policy_payable_items.installment_id
                           and
                                f.policy_transaction_id = r_policy_payable_items.policy_transaction_id
                           and --Billing Generic Product has different assets for different fitem categories so we can't have constraint on Asset
                                (
                                     f.fitem_asset_id = r_policy_payable_items.fitem_asset_id
                                     or
                                     f.product_id = 86546 -- Billing Generic Product
                                )--OSBilling-5984
                           ;


                           --
                           -- Get the Inital Amount for all Premium financials for this installment in order to calculate the Prorata amount for Payable
                           --

                           v_premium_initial_amt      :=     pkg_db_functions.fn_fitem_initial_amt_get
                                                             (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_premium_fitem_rec.fitem_id

                                                              );


                           -- OSBILLING-5111
                           -- OSBilling-5665: handled rounding
                           v_earning_instr_percent  := round(((abs(v_premium_initial_amt) - (nvl(abs(v_premium_fitem_rec.balance),0)))/ abs(v_premium_initial_amt) ) *100,2);

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '......ProRata Clearance Earning Percentage : '||v_earning_instr_percent ||
                                     ' Payable Initital Amount ' || v_prem_fitem_rec_ini_amt ||
                                     ' Payable Balance Amount ' || v_premium_fitem_rec_bal
                                );
                           end if;

                           -- OSBILLING-5665
                           if v_prem_fitem_rec_ini_amt = 0
                           then
                                v_earning_instr_percent := 0;
                           else
                                v_earning_instr_percent  := round(((abs(v_prem_fitem_rec_ini_amt) - (nvl(abs(v_premium_fitem_rec_bal),0)))/ abs(v_prem_fitem_rec_ini_amt) ) *100,2);--OSBilling-5665: handled rounding

                           end if;


                           v_fitem_earned_amount    :=   round((v_fitem_initial_amt * v_earning_instr_percent)/100,2);--OSBilling-5665: handled rounding --OSBILLING-6705

                           v_due_amount := nvl(v_premium_fitem_rec_bal,0); --OSBILLING-6705

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '......ProRata Clearance Earning Percentage : '||v_earning_instr_percent ||
                                     ' Payable Initital Amount ' || v_fitem_initial_amt ||
                                     ' Payable Earned Amount ' || v_fitem_earned_amount
                                     ||' for FItem '||r_policy_payable_items.fitem_id
                                );

                           end if;

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '.. Due premium amount: '|| v_due_amount ||
                                     '.. Fitem Earned Amount: ' || v_fitem_earned_amount
                                );

                           end if;

                           -- OSBILLING-5111


                      --end if; --At ProRate Installment
                      --
                      --  vii. Get the earned amount of item if instruction timing is 'At Full Premium Clearance'
                      --

                      elsif  /* in_clerance_process_tf = 'T'
                            and  */ -- commented under OSPRODUCT-2085
                           v_payable_instr_row.earning_timing_type = gEarning_Type_PremiumClr
                      then
                           v_due_amount := null; --OSBILLING-6705

                           select
                                nvl(sum(balance),0)
                           into
                                v_due_amount
                           from
                                dragon_fitem
                           where
                                policy_id = in_policy_id
                           and
                                fitem_type_id       =    gFItemType_Debit
                           and
                                billing_account_id  =    r_policy_payable_items.billing_account_id -- #MP
                              -- 2017-10-04 cheryl do not include commission
                           and
                                fitem_category_id not in (pkg_db_stmt.g_FItem_Cat_Commission)
                           ;


                           if v_due_amount = 0
                              and
                              v_due_amount is not null --OSBILLING-6705
                           then

                                -- v_fitem_earned_amount    :=   (v_fitem_initial_amt * v_earning_instr_percent)/100; --OSBILLING-6705
                                v_fitem_earned_amount    :=   (v_fitem_balance_amount * v_earning_instr_percent)/100; --OSBILLING-6705


                           end if;

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '.. Due premium amount: '|| v_due_amount ||
                                     '.. Fitem Earned Amount: ' || v_fitem_earned_amount
                                );

                           end if;

                      else --enhance it for more earning timings if required

                           if v_session_control.gLogging_Full
                           then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '...In else part of earning timing type '||' for FItem '||r_policy_payable_items.fitem_id
                                );

                           end if;

                      end if; -- if earning timing = Premium Clearance

                      declare
                           v_clawback_earned_amount number;
                      begin

                           if   fn_disbursement_item_exists_tf
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     r_policy_payable_items.fitem_id
                                ) = 'T'
                           then

                                v_commission_earned_amount := v_commission_earned_amount + v_fitem_earned_amount;

                                for cur in (
                                               select
                                                    fitem_id,
                                                    billing_account_id,
                                                    fitem_category_id,
                                                    fitem_sub_category_id,
                                                    policy_transaction_id,
                                                    sum(balance) as balance,
                                                    sum(initial_amount) as initial_amount
                                               from
                                                    dragon_fitem
                                               where
                                                    policy_id = in_policy_id
                                                 and
                                                    fitem_type_id = gFItemType_Credit
                                                 and
                                                    fitem_category_id = r_policy_payable_items.fitem_category_id
                                                 and
                                                    fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
                                                 and
                                                    billing_account_id = r_policy_payable_items.billing_account_id
                                                 and
                                                    installment_id = r_policy_payable_items.installment_id
                                                 and
                                                    earning_status !=   pkg_os_lookup.fn_lookup_list_text_get
                                                                        (
                                                                             pkg_db_billing_payable.FItemPayablesEarningStatus,
                                                                             pkg_db_billing_payable.gFitem_Earned
                                                                        )
                                                 group by
                                                              fitem_id,
                                                              billing_account_id,
                                                              fitem_category_id,
                                                              fitem_sub_category_id,
                                                              policy_transaction_id
                                               )
                                     loop

                                          v_clawback_earned_amount := least(abs(cur.initial_amount),  abs(v_fitem_earned_amount));

                                          v_clawback_earned_amount := v_clawback_earned_amount*sign(greatest(cur.initial_amount, v_fitem_earned_amount));

                                          -- Do not earn commission if Clawback is not earned yet
                                          if abs(cur.initial_amount) >= abs(v_fitem_earned_amount)
                                          then
                                               v_fitem_earned_amount := v_fitem_earned_amount - v_clawback_earned_amount;
                                          end if;


                                          if v_session_control.gLogging_Full
                                          then

                                               pkg_os_logging.sp_log
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_procedure_name,
                                                    '......Applying Earned amount delta to the Clawback FItem ('||cur.fitem_id ||')'||
                                                    ' v_clawback_earned_amount: ' || v_clawback_earned_amount||
                                                    ' cur.initial_amount:'||cur.initial_amount||
                                                    ' v_fitem_earned_amount:'||v_fitem_earned_amount
                                                    ||' for FItem '||r_policy_payable_items.fitem_id
                                               );

                                          end if;


                                          r_fitem_list (
                                                             cur.fitem_id||'/'||
                                                             cur.billing_account_id||'/'||
                                                             -1*v_clawback_earned_amount||'/'||
                                                             cur.fitem_category_id||'/'||
                                                             cur.fitem_sub_category_id||'/'||
                                                             cur.policy_transaction_id
                                                        )
                                                        := -1 * v_clawback_earned_amount;

                                end loop;

                                if v_session_control.gLogging_Full
                                then

                                     pkg_os_logging.sp_log
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.. Due premium amount: '|| v_due_amount ||
                                          '.. Fitem Earned Amount: ' || v_fitem_earned_amount
                                     );

                                end if;

                           end if; --end of if disbursed

                      end; --plsql block for disbursement handling

                      if v_session_control.gLogging_Full
                      then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Earning Instruction Percentage: '||v_earning_instr_percent||
                                ', FItem Initial Amount: '||v_fitem_initial_amt||
                                ', FItem Balance Amount: '||v_fitem_balance_amount ||
                                ', Fitem Earned_amount:  '||v_fitem_earned_amount  ||' for FItem '||r_policy_payable_items.fitem_id
                           );

                      end if;

                      if (-- v_fitem_earned_amount <> 0 or v_fitem_balance_amount <> v_fitem_initial_amt )
                         --and --OSBILLING-6705
                           r_policy_payable_items.billing_account_id is not null
                         )
                      then

                           r_fitem_list--OSBILLING-5665 Replaced '-' with '/' as it was not giving correct results in case of negative amounts
                           (
                                r_policy_payable_items.fitem_id||'/'||
                                r_policy_payable_items.billing_account_id||'/'||
                                v_fitem_earned_amount||'/'||
                                r_policy_payable_items.fitem_category_id||'/'||
                                r_policy_payable_items.fitem_sub_category_id||'/'||
                                r_policy_payable_items.policy_transaction_id||'/'||
                                v_payable_instr_row.earning_timing_type ||'/'||
                                v_due_amount ||'/'||
                                r_policy_payable_items.installment_id || '/' || --OSPRODUCT-2085
                                v_mark_comm_earned_tf || '/' || --OSPRODUCT-6102
                                v_fitem_effective_date || '/' || -- OSPRODUCT-7817
                                v_payable_review_dt    || '/' ||
                                nvl(r_policy_payable_items.initial_amount,0) || '/' || --OSPRODUCT-6102
                                nvl(r_policy_payable_items.earned_amount,0)  || '/' || --OSPRODUCT-6102
                                nvl(r_policy_payable_items.unearned_amount,0)|| '/' ||
                                r_policy_payable_items.balance || '/' || -- end OSPRODUCT-7817
                                v_installment_balance || '/' ||  -- OSPRODUCT-15792
                                v_fitem_inst_dues_cnt            -- OSPRODUCT-17647
                                  
                           )
                           := v_fitem_earned_amount;

                      end if;

                      if v_session_control.gLogging_Full
                      then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Payable Item Earned Amount: '||v_fitem_earned_amount   ||' for FItem '||r_policy_payable_items.fitem_id
                           );

                      end if;


                 end if; --if v_payable_instr_id is not null

              end if;               --OSBILLING-6957

         end loop; -- r_policy_payable_items in c_policy_payable_items
       
         -- Kiran OSPRODUCT-34429 start
     
     else
       
        if v_session_control.gLogging_Full
        then
              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '... Skipping the Payables as the Billing account type is agency '
              );
         end if;
                          
     end if;   
     
     -- Kiran OSPRODUCT-34429 end
   
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Total Payables Count: '||r_fitem_list.count
          );

     end if;

     if r_fitem_list.count > 0
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Loop through all valid payables and Set the earned amounts'
               );

          end if;

          -- OSBILLING-7635
          if v_batch_type_id in (gBatch_CashTransfer)
          then

               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                          '......... v_batch_type_id : '||v_batch_type_id);
               end if;


               v_cash_fitransaction :=  pkg_os_object_search.fn_object_with_attribute_get
                                        (
                                          in_session_id,
                                          in_transaction_id,
                                          in_billingacounttrxset_id,
                                          gObjType_FITransaction,
                                          gbv_FITransactionType,
                                          gFITrxType_CashTransfer
                                        );

               v_cash_transfer_reason := pkg_os_object_io.fn_object_bv_get
                                         (
                                             in_session_id,
                                             in_transaction_id,
                                             v_cash_fitransaction,
                                             gbv_FITrxTransferReason
                                         );
          end if;

          r_fitem_index := r_fitem_list.first;


          --
          -- Loop through all valid payables and Set the earned amounts
          --
          while r_fitem_index is not null
          loop

               v_token_table.delete;

               pkg_os_token.sp_tokenize_string(r_fitem_index, '/', v_token_table);--OSBILLING-5665 Replaced '-' with '/'

               v_token_index := v_token_table.first;

               --- OSPRODUCT-7817
               v_fitem_effective_date := null;
               v_payable_review_dt := null;
               v_payable_fitem_intial_balance := null;
               v_fitem_earned_amt_prev := null;
               v_fitem_unearned_amt_prev := null;
               v_payable_fitem_balance := null;

               while v_token_index is not null
               loop

                    if v_token_index = 1
                    then
                         v_payable_fitem_id                 :=  v_token_table(v_token_index);

                    elsif v_token_index = 2
                    then
                         v_payable_billing_account_id       :=  v_token_table(v_token_index);

                    elsif v_token_index = 3
                    then
                         v_payable_earned_amt_new           :=  v_token_table(v_token_index);

                    elsif v_token_index = 4
                    then
                         v_payable_fitem_category_id        :=  v_token_table(v_token_index);

                    elsif v_token_index = 5
                    then
                         v_payable_fitem_subcat_id          :=  v_token_table(v_token_index);

                    elsif v_token_index = 6
                    then
                         v_payable_fitem_policytrx_id       :=  v_token_table(v_token_index);

                    elsif v_token_index = 7
                    then
                         v_earning_timing_type_id           :=  v_token_table(v_token_index);

                    elsif v_token_index = 8
                    then
                         v_prem_due_amount                  :=  v_token_table(v_token_index);

                    --OSPRODUCT-2085 Starts
                    elsif v_token_index = 9
                    then
                         v_fitem_installment_id             := v_token_table(v_token_index);
                    --OSPRODUCT-2085 Ends

                    --OSPRODUCT-6102 Starts
                    elsif v_token_index = 10
                    then
                         v_mark_payable_comm_earned_tf             := v_token_table(v_token_index);
                    --OSPRODUCT-6102 Ends
                    -- OSPRODUCT-7817
                    elsif v_token_index = 11
                    then
                         v_fitem_effective_date                    := v_token_table(v_token_index);

                    elsif v_token_index = 12
                    then
                         v_payable_review_dt                       := v_token_table(v_token_index);

                    elsif v_token_index = 13
                    then
                         v_payable_fitem_intial_balance            := v_token_table(v_token_index);

                    elsif v_token_index = 14
                    then
                         v_fitem_earned_amt_prev                   := v_token_table(v_token_index);

                    elsif v_token_index = 15
                    then
                         v_fitem_unearned_amt_prev                 := v_token_table(v_token_index);

                    elsif v_token_index = 16
                    then
                         v_payable_fitem_balance                   := v_token_table(v_token_index);
                    -- OSPRODUCT-15792 start    
                    elsif v_token_index = 17
                    then
                         v_taken_inst_balance                       := v_token_table(v_token_index);
                    -- OSPRODUCT-15792 End    
                    -- OSPRODUCT-15792 start    
                    elsif v_token_index = 18
                    then
                         v_taken_fitem_inst_dues_cnt               := v_token_table(v_token_index);
                    -- OSPRODUCT-15792 End  
                    else
                         null;

                    end if;

                    -- end OSPRODUCT-7817

                    v_token_index := v_token_table.next(v_token_index);

               end loop;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Considering Payable fItem ID: ' || v_payable_fitem_id ||
                         '.. Payable Billing Account ID: '   || v_payable_billing_account_id

                    );

               end if;

               if v_payable_billing_account_id is not null
               then
                    r_billing_account_list
                    (
                         r_billing_account_list.count + 1
                    )
                    := v_payable_billing_account_id;
               end if;

               -- Get the parent entity id of billing account Object
               -- [RR] for same BA account it will alwayse be the same
               /*v_cust_entity_id := pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_payable_billing_account_id
                                   );*/

               -- OSPRODUCT-7817
               if v_ba_entity_list.exists(v_payable_billing_account_id) then

                    v_cust_entity_id := v_ba_entity_list (v_payable_billing_account_id);

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Getting from list: ' || v_cust_entity_id ||
                              '.. BA: '                   || v_payable_billing_account_id
                         );

                    end if;

               else
                    -- [RR] for same BA account it will alwayse be the same
                    v_cust_entity_id := pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_payable_billing_account_id
                                        );

                    v_ba_entity_list (v_payable_billing_account_id) := v_cust_entity_id;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Popullating the list: ' || v_cust_entity_id ||
                              '.. BA: '                   || v_payable_billing_account_id
                         );

                    end if;

               end if;
               -- end OSPRODUCT-7817

               v_fitem_unearned_amt_new  :=   0;

               -- OSPRODUCT-7817
               /*begin
                    select
                         nvl(initial_amount,0) , --OSPRODUCT-6102
                         nvl(earned_amount,0), --OSPRODUCT-6102
                         nvl(unearned_amount,0),
                         balance
                    into
                         v_payable_fitem_intial_balance,
                         v_fitem_earned_amt_prev,
                         v_fitem_unearned_amt_prev,
                         v_payable_fitem_balance
                    from
                         dragon_fitem
                    where
                         fitem_id = v_payable_fitem_id;

               exception
                    when no_data_found then
                         v_payable_fitem_intial_balance := null;
                         v_fitem_earned_amt_prev := null;
                         v_fitem_unearned_amt_prev := null;
                         v_payable_fitem_balance := null;

               end;*/

               if v_fitem_earned_amt_prev is null then

                    --Warning: Below call might degrade performance !
                    v_fitem_earned_amt_prev := nvl(
                                                        pkg_os_object_io.fn_object_bv_get
                                                        (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_payable_fitem_id,
                                                        gbv_fitem_earned_amount
                                                        ),0
                                                 );
               end if;

               if v_payable_fitem_balance is null then

                    --Warning: Below call might degrade performance !
                    v_payable_fitem_balance := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_payable_fitem_id,
                                                       gbv_fitem_amount_due
                                                  );

               end if;

               -- OSBILLING-5111
               if v_payable_fitem_intial_balance is null then

                    --Warning: Below call might degrade performance !
                    v_payable_fitem_intial_balance :=  pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payable_fitem_id,
                                                            gbv_fitem_InitialAmountDue
                                                       );

               end if;

               -- v_fitem_unearned_amt_prev :=0; -- commented under OSPRODUCT-2085
               -- OSPRODUCT-2674 Used Datamart query above
               if v_fitem_unearned_amt_prev is null then

                    --Warning: Below call might degrade performance !
                    v_fitem_unearned_amt_prev :=   nvl
                                                  (
                                                       pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payable_fitem_id,
                                                            gbv_fitem_unearned_amount
                                                       )
                                                       ,
                                                       0
                                                  );
               end if;

               v_fitem_signage := sign (v_payable_fitem_intial_balance); --OSBILLING-6705 find it again

               v_payable_fitem_status_id_prev := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payable_fitem_id,
                                                            gbv_fitem_EarningStatus
                                                       );

               v_payable_fitem_status_id_prev := nvl( v_payable_fitem_status_id_prev, gFitem_NotApplicable); --OSPRODUCT-6102
               v_fitem_earning_status_new := gFitem_NotApplicable; --OSPRODUCT-6102 remove value of previous iteration
               v_earning_status_changed := 'F' ;                   --OSPRODUCT-6102 remove value of previous iteration

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Parent entity of billing account: '||v_cust_entity_id||
                         ', And calculated earned amount new: '||v_payable_earned_amt_new||
                         ', Index Value: '||r_fitem_index ||
                         ', v_payable_fitem_id: '|| v_payable_fitem_id ||
                         ', earned amount prev ' || v_fitem_earned_amt_prev

                    );

               end if;

               if v_earning_timing_type_id = gEarning_Type_AtBooking
               then

                    v_bv_table.delete;

                    if trunc(to_date(v_fitem_effective_date,pkg_os_constant.DragonDateFormatDefault)) > trunc(to_date(v_current_date,pkg_os_constant.DragonDateFormatDefault)) --OSPRODUCT-6102
                       and
                       not( v_payable_at_policy_booking_tf = 'T' )
                    then

                         --
                         -- The Policy Transaction Effective Date is in future. So, we cannot mark the Payables as Earned now
                         -- a) Set Payable Earning Reviewed Y/N to No on the Policy Transaction
                         -- b) Set Payable Earning Review Date on the Policy Transaction
                         -- c) Skip the Payable Processing
                         --

                         --OSBilling-3278: Looping Payable Fitems to set the review date and review flag
                         /*pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              r_policy_payable_items.fitem_id,
                              gbv_FITrxSetPayableReviewed,
                              pkg_os_constant_enum.gBoolean_False
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              r_policy_payable_items.fitem_id,
                              gbv_FITrxSetPayableReviewDt,
                              --v_policytrx_effective_date
                              v_fitem_effective_date --OSPRODUCT-6102
                         );*/

                         -- UTPRODUCT-3679
                         v_bv_table (gbv_FITrxSetPayableReviewDt          ).business_variable_value     :=   v_fitem_effective_date;
                         v_bv_table (gbv_FITrxSetPayableReviewed          ).business_variable_value     :=   pkg_os_constant_enum.gBoolean_False;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Review Date set to '|| v_fitem_effective_date ||
                                   '.. Review Date set to F'

                              );

                         end if;

                    elsif trunc(to_date(v_payable_review_dt,pkg_os_constant.DragonDateFormatDefault))<= trunc(to_date(v_current_date,pkg_os_constant.DragonDateFormatDefault))
                    then

                         /*pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              r_policy_payable_items.fitem_id,
                              gbv_FITrxSetPayableReviewed,
                              pkg_os_constant_enum.gBoolean_True
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              r_policy_payable_items.fitem_id,
                              gbv_FITrxSetPayableReviewDt,
                              null
                         );*/

                         -- UTPRODUCT-3679
                         v_bv_table (gbv_FITrxSetPayableReviewDt          ).business_variable_value     :=   null;
                         v_bv_table (gbv_FITrxSetPayableReviewed          ).business_variable_value     :=   pkg_os_constant_enum.gBoolean_True;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Review Date null '||
                                   '.. Review Date set to true'

                              );

                         end if;

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Parent entity of billing account: '||v_cust_entity_id||
                              ', And calculated earned amount new: '||v_payable_earned_amt_new||
                              ', Index Value: '||r_fitem_index ||
                              ', v_payable_fitem_id: '|| v_payable_fitem_id ||
                              ', earned amount prev ' || v_fitem_earned_amt_prev

                         );

                    end if;

                    if nvl(v_mark_payable_comm_earned_tf,'F') ='T'
                    then

                         if v_payable_fitem_balance = 0
                         then

                              v_payable_earned_amt_new := 0;
                              v_fitem_unearned_amt_new := 0;
                              v_fitem_earning_status_new := gFitem_Unearned;
                         else

                              v_payable_earned_amt_new := v_payable_earned_amt_new;
                              v_fitem_unearned_amt_new := 0;
                              v_fitem_earning_status_new := gFitem_Earned;

                         end if;

                    else

                         v_payable_earned_amt_new := 0;
                         v_fitem_unearned_amt_new := v_payable_fitem_balance;
                         v_fitem_earning_status_new := gFitem_Unearned;

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '2nd Loop of Payables, Going to set Earn Amt and Earn Status for  ' || v_payable_fitem_id
                              || ' v_payable_earned_amt_new ' || v_payable_earned_amt_new || ' v_fitem_earned_amt_prev ' || v_fitem_earned_amt_prev
                              || ' v_fitem_unearned_amt_new ' || v_fitem_unearned_amt_new || ' v_fitem_unearned_amt_prev ' || v_fitem_unearned_amt_prev
                              || ' v_fitem_earning_status_new ' || v_fitem_earning_status_new || ' v_payable_fitem_status_id_prev ' || v_payable_fitem_status_id_prev

                         );

                    end if;

                    if abs( v_payable_earned_amt_new) <>  abs( v_fitem_earned_amt_prev )
                       or
                       abs(v_fitem_unearned_amt_new) <> abs ( v_fitem_unearned_amt_prev)
                       or
                       v_fitem_earning_status_new <> v_payable_fitem_status_id_prev
                    then

                         v_earning_status_changed := 'T';

                    end if;

                    --- OSPRODUCT-4770 Test END
                    -- v_earning_status_changed := 'T'; -- commented under OSPRODUCT-2085

                    if v_earning_status_changed = 'T'
                    then

                         /*pkg_os_object_io.sp_object_bv_set --OSPRODUCT-5651
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_unearned_amount,
                              v_fitem_unearned_amt_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_EarningStatus,
                              v_fitem_earning_status_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_earned_amount,
                              v_payable_earned_amt_new
                         );*/--OSPRODUCT-5651

                         -- OSPRODUCT-5651 Added below to get the lock before update

                         v_bv_table (gbv_fitem_earned_amount          ).business_variable_value     :=   v_payable_earned_amt_new;
                         v_bv_table (gbv_fitem_unearned_amount        ).business_variable_value     :=   v_fitem_unearned_amt_new;
                         v_bv_table (gbv_fitem_EarningStatus          ).business_variable_value     :=   v_fitem_earning_status_new;

                         -- OSPRODUCT-15900
                         if v_fitem_earning_status_new = gFitem_Earned
                         then
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   :=   to_char
                                                                                                              (
                                                                                                                   pkg_os_time.fn_os_sysdate
                                                                                                                   (
                                                                                                                        in_session_id,
                                                                                                                        in_transaction_id,
                                                                                                                        v_payable_fitem_id
                                                                                                                   ),
                                                                                                                   pkg_os_constant.DragonDateFormatDefault
                                                                                                              );
                         else
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   := null;
                         end if;
                         -- OSPRODUCT-15900

                    end if;

                    -- UTPRODUCT-3679
                    if v_bv_table.count > 0 then

                         pkg_db_object.sp_ba_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_payable_fitem_id,
                                   v_bv_table
                              );--Lock Warning --OSPRODUCT-5651

                    end if;

               end if; --Earning Timing is At Booking

               -- OSBILLING-6705 starts
               if v_earning_timing_type_id in ( gEarning_Type_InstClr, gEarning_Type_PremiumClr )
               then

                    -- find new unearned amount and compare, mark if this is changed
                    -- find new earning status and compare with prev, and mark that it is changed
                    -- LXPRODUCT-449
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name, 
                              '.. Premium Due Amount: ' || v_prem_due_amount ||
                              '.. Earning Type: '       || v_earning_timing_type_id ||
                              '.. Taken Installment Balance: ' || v_taken_inst_balance ||
                              '.. Taken fitem Due Count: '     || v_taken_fitem_inst_dues_cnt ||
                              '.. Payable Fitem Balance: '     || v_payable_fitem_balance
                                   
                         );

                    end if;
                         
                    -- LXPRODUCT-449
                    if v_prem_due_amount = 0 
                       --OSPRODUCT-15792 Starts  
                       or 
                       (
                            v_earning_timing_type_id in ( gEarning_Type_InstClr)
                            and 
                            v_prem_due_amount < 0
                            and 
                            v_taken_inst_balance <=0
                            and 
                            v_taken_fitem_inst_dues_cnt = 0 
                       )   
                       --OSPRODUCT-15792 Ends
                    then

                         if v_payable_fitem_balance = 0
                         then
                              v_payable_earned_amt_new := 0;
                              v_fitem_unearned_amt_new := 0;
                              v_fitem_earning_status_new := gFitem_Unearned;
                         else -- v_payable_fitem_balance <> 0
                              v_payable_earned_amt_new := v_payable_earned_amt_new; --verify
                              v_fitem_unearned_amt_new := 0;
                              v_fitem_earning_status_new := gFitem_Earned;

                         end if;

                    else --due prem is <> 0

                         v_payable_earned_amt_new := 0;
                         v_fitem_unearned_amt_new := v_payable_fitem_balance;
                         v_fitem_earning_status_new := gFitem_Unearned;

                    end if;
          
          -- LXPRODUCT-449
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Earned Amount New: ' || v_payable_earned_amt_new ||
                              '.. Earned Amount Previous: ' || v_fitem_earned_amt_prev || 
                              '.. Unearned Amount New: ' || v_fitem_unearned_amt_new ||
                              '.. Unearned Amount Previous: ' || v_fitem_unearned_amt_prev ||
                              '.. Earning Status New: ' || v_fitem_earning_status_new ||
                              '.. Earning Status Previous: ' || v_payable_fitem_status_id_prev
                         );
                              
                    end if;


                    if abs( v_payable_earned_amt_new) <>  abs( v_fitem_earned_amt_prev )
                       or
                       abs(v_fitem_unearned_amt_new) <> abs ( v_fitem_unearned_amt_prev)
                       or
                       v_fitem_earning_status_new <> v_payable_fitem_status_id_prev

                    then

                         v_earning_status_changed := 'T';

                    end if;
          
          if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Earning status changed: ' || v_earning_status_changed
                         );
                              
                    end if;

                    if v_earning_status_changed = 'T'
                    then
                         /*pkg_os_object_io.sp_object_bv_set --OSPRODUCT-5651
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_unearned_amount,
                              v_fitem_unearned_amt_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_EarningStatus,
                              v_fitem_earning_status_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_earned_amount,
                              v_payable_earned_amt_new
                         );*/ --OSPRODUCT-5651

                         --OSPRODUCT-5651 Added below to get the lock before update
                         v_bv_table.delete;

                         v_bv_table (gbv_fitem_earned_amount          ).business_variable_value     :=   v_payable_earned_amt_new;
                         v_bv_table (gbv_fitem_unearned_amount        ).business_variable_value     :=   v_fitem_unearned_amt_new;
                         v_bv_table (gbv_fitem_EarningStatus          ).business_variable_value     :=   v_fitem_earning_status_new;

                         -- OSPRODUCT-15900
                         if v_fitem_earning_status_new = gFitem_Earned
                         then
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   :=   to_char
                                                                                                              (
                                                                                                                   pkg_os_time.fn_os_sysdate
                                                                                                                   (
                                                                                                                        in_session_id,
                                                                                                                        in_transaction_id,
                                                                                                                        v_payable_fitem_id
                                                                                                                   ),
                                                                                                                   pkg_os_constant.DragonDateFormatDefault
                                                                                                              );
                         else
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   := null;
                         end if;
                         -- OSPRODUCT-15900

                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              v_bv_table
                         );--Lock Warning--OSPRODUCT-5651
             
             -- Handle old policies in case of BOR
                         -- LXPRODUCT-449
                         /*if v_old_bord_policy is null then
                                                                                                         
                              v_old_bord_policy := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_policy_id,
                                                        32651648
                                                   );
                                                   
                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Old Bord Policy ' || v_old_bord_policy 
                                   );
                                                                 
                              end if;
                                   
                         end if;
                              
                         if v_old_bord_policy is not null then
                              
                              if v_bord_fitransaction_id is null
                              then
                                             
                                   -- Create a FITransaction
                                   pkg_db_object.sp_fitransaction_create
                                   (
                                        in_session_id                      =>             in_session_id,
                                        in_transaction_id                  =>             in_transaction_id,
                                        in_fitrx_parent_fitrxset_id        =>             in_billingacounttrxset_id, --OSPRODUCT-6102
                                        out_fitransaction_id               =>             v_bord_fitransaction_id,
                                        in_fitrx_type                      =>             g_FITrxType_PayableEarning,
                                        in_fitrx_ref_billing_account       =>             v_billing_account_id,
                                        in_fitrx_amount                    =>             0,
                                        in_fitrx_object_state              =>             pkg_db_cashpost.gFITrxStatus_InProcess,
                                        in_fitrx_effective_date            =>             v_current_date,
                                        in_fitrx_gl_date                   =>             v_current_date,
                                        in_fitrx_posted_date               =>             v_current_date
                                   );

                              end if;
               
                              sp_set_payable_bord_policy
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id,
                                   v_payable_fitem_id,
                                   in_billingacounttrxset_id,                                   
                                   v_old_bord_policy,
                                   v_bord_fitransaction_id,
                                   'F',
                                   in_bv_table => v_bv_table
                              );
                              
                         end if;*/

                    end if;

               end if;

               --  At ProRated clearance of Installment
               if v_earning_timing_type_id = gEarning_Type_ProRateInst
               then

                    v_payable_earned_amt_new := v_payable_earned_amt_new;
                    v_fitem_unearned_amt_new := v_payable_fitem_intial_balance - v_payable_earned_amt_new;

                     --OSPRODUCT-1404 starts
                    if abs(v_fitem_unearned_amt_new) = abs(v_payable_fitem_intial_balance)
                    then

                         v_payable_earned_amt_new := 0 ;
                         v_fitem_unearned_amt_new := v_payable_fitem_intial_balance;
                         v_fitem_earning_status_new := gFitem_Unearned;

                    --OSPRODUCT-1404 ends
                    elsif v_fitem_unearned_amt_new = 0
                    then
                         v_payable_earned_amt_new := v_payable_fitem_balance;
                         v_fitem_unearned_amt_new := 0;
                         v_fitem_earning_status_new := gFitem_Earned;

                    else
                         v_payable_earned_amt_new := v_payable_earned_amt_new;
                         v_fitem_unearned_amt_new := v_fitem_unearned_amt_new;
                         v_fitem_earning_status_new := gFitem_PartiallyEarned;
                         --v_create_new_earned_fitem := 'T';

                         --v_earned_fitem_amount := v_payable_fitem_balance - v_fitem_unearned_amt_new;

                    end if;

                    if abs( v_payable_earned_amt_new) <>  abs( v_fitem_earned_amt_prev )
                       or
                       abs(v_fitem_unearned_amt_new) <> abs ( v_fitem_unearned_amt_prev)
                       or
                       v_fitem_earning_status_new <> v_payable_fitem_status_id_prev
                    then

                         v_earning_status_changed := 'T';

                    end if;


                    if v_earning_status_changed = 'T'
                    then
                         /*pkg_os_object_io.sp_object_bv_set--OSPRODUCT-5651
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_unearned_amount,
                              v_fitem_unearned_amt_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_EarningStatus,
                              v_fitem_earning_status_new
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              gbv_fitem_earned_amount,
                              v_payable_earned_amt_new
                         );*/

                         --OSPRODUCT-5651 Added below to get the lock before update
                         v_bv_table.delete;

                         v_bv_table (gbv_fitem_earned_amount          ).business_variable_value     :=   v_payable_earned_amt_new;
                         v_bv_table (gbv_fitem_unearned_amount        ).business_variable_value     :=   v_fitem_unearned_amt_new;
                         v_bv_table (gbv_fitem_EarningStatus          ).business_variable_value     :=   v_fitem_earning_status_new;

                         -- OSPRODUCT-15900
                         if v_fitem_earning_status_new = gFitem_Earned
                         then
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   :=   to_char
                                                                                                              (
                                                                                                                   pkg_os_time.fn_os_sysdate
                                                                                                                   (
                                                                                                                        in_session_id,
                                                                                                                        in_transaction_id,
                                                                                                                        v_payable_fitem_id
                                                                                                                   ),
                                                                                                                   pkg_os_constant.DragonDateFormatDefault
                                                                                                              );
                         else
                              v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   := null;
                         end if;
                         -- OSPRODUCT-15900

                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              v_bv_table
                         );--Lock Warning --OSPRODUCT-5651

                    end if;

               end if; -- At Clearance of ProRate Installment

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' After Setting Earn Status, Earning Timing Type Id ' ||v_earning_timing_type_id ||
                         ' Balance of Fitem ' || v_payable_fitem_balance ||
                         ' Due Premium ' || v_prem_due_amount ||
                         ' Old earned amount  '||v_fitem_earned_amt_prev ||
                         ' New earned amount  '||v_payable_earned_amt_new ||
                         ' Old unearned amount  '||v_fitem_unearned_amt_prev ||
                         ' New unearned amount  '||v_fitem_unearned_amt_new ||
                         ' Old earning status id  '||v_payable_fitem_status_id_prev ||
                         ' New earning status id  '||v_fitem_earning_status_new ||
                         ' For Fitem Id '|| v_payable_fitem_id
                    );

               end if;

               -- OSBILLING-6705 ends
               -- OSBILLING-3962
               -- Verify if there is any change to the earned amnt or unearned amnt or status
               -- If yes, create FIChange of type FYI
               --

               if v_earning_status_changed  = 'T'
               then

                    if v_fitransaction_id is null
                    then

                         -- bv get in a loop
                         v_billing_account_id := pkg_os_object.fn_object_parent_get
                                                  (
                                                       in_session_id,in_transaction_id,
                                                       in_billingacounttrxset_id
                                                  );
                         --OSPRODUCT-6102
                         -- get the billing account
                         if in_billingacounttrxset_id is null
                         then

                              begin
                                   select
                                        billing_account_id
                                   into
                                        v_billing_account_id
                                   from
                                        dragon_fitem
                                   where
                                        fitem_id = v_payable_fitem_id;
                              exception
                                   when no_data_found
                                   then
                                        v_billing_account_id := null;
                              end;

                              --------------------
                              -- Create New BATS
                              ---------------------
                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_db_cash_apply.gobjtype_billingaccounttrxset,
                                   v_billing_account_id,
                                   v_bats_id
                              );

                              -- Set the BVs

                              v_bv_table.delete;
                              v_bv_table (pkg_db_billing_payable.gbv_FITrxSetBatchType).business_variable_value := pkg_db_functions.gBatch_PayableAdjust;--2201;  --Payables Earning Adjustment Batch
                              v_bv_table (pkg_db_cash_apply.gbv_fitrxsetdateposted).business_variable_value := to_char( pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id,v_bats_id), pkg_os_constant.dragondateformatdefault);
                              v_bv_table (pkg_db_cash_apply.gbv_fitrxsetexternalbatchid).business_variable_value := 'Batch'|| to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_bats_id), pkg_os_constant.dragondateformatdefault);
                              v_bv_table (pkg_os_constant_bv.gbv_genobjobjectstate).business_variable_value := pkg_db_cash_apply.gbatchstatus_processed;
                              v_bv_table (pkg_db_cash_apply.gbv_billacctrxset_processdate).business_variable_value := to_char( pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id,v_bats_id), pkg_os_constant.dragondateformatdefault);
                              v_bv_table (pkg_db_object.gbv_GenericObjSourceOrigin).business_variable_value     :=   v_source_System;   --27926602GenericObject - List - Object Source/Origin Type                            -- GenericObject - Object Source/Origin Type
                              v_bv_table (PKG_DB_STMT.gbv_FITrxSetEntryType).business_variable_value     :=   gBatchEntryMethod_System;--401; --29707546FITransactionSet - List - Entry Method (System)


                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_bats_id,
                                   v_bv_table
                              );

                              if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'New BATS Created : '  ||v_bats_id
                                   );
                              end if;

                              -- Update the BATS Datamart  --OSPRODUCT-11553
                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_bats_id,
                                   v_datamart_tf
                              );

                         end if;
                         -- OSPRODUCT-6102

                         -- create a FITransaction
                         pkg_db_object.sp_fitransaction_create
                         (
                              in_session_id                      =>             in_session_id,
                              in_transaction_id                  =>             in_transaction_id,
                              in_fitrx_parent_fitrxset_id        =>             nvl(in_billingacounttrxset_id,v_bats_id), --OSPRODUCT-6102
                              out_fitransaction_id               =>             v_fitransaction_id,
                              in_fitrx_type                      =>             g_FITrxType_PayableEarning,
                              in_fitrx_ref_billing_account       =>             v_billing_account_id,
                              in_fitrx_amount                    =>             0,
                              in_fitrx_object_state              =>             pkg_db_cashpost.gFITrxStatus_InProcess,
                              in_fitrx_effective_date            =>             v_current_date,
                              in_fitrx_gl_date                   =>             v_current_date,
                              in_fitrx_posted_date               =>             v_current_date

                         );

                         if v_batch_type_id in (gBatch_CashTransfer)
                         then

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                        '......... v_batch_type_id : '||v_batch_type_id);

                              end if;


                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_fitransaction_id,
                                   gbv_FITrxTransferReason,
                                   v_cash_transfer_reason
                              );

                         end if;

                    end if;

                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                      =>        in_session_id,
                         in_transaction_id                  =>        in_transaction_id,
                         in_parent_fitransaction_id         =>        v_fitransaction_id,
                         out_fichange_id                    =>        v_fichange_id,
                         in_fichange_action                 =>        pkg_db_object.gFIChange_FYI,
                         in_fichange_action_delta           =>        0,
                         in_fichange_ref_fitem              =>        v_payable_fitem_id,
                         in_fichange_sum_include            =>        pkg_db_object.gFIChange_No,
                         in_fichange_process_date           =>        v_current_date,
                         in_fichange_ref_pol                =>        in_policy_id,
                         in_fichange_ref_pol_trx            =>        in_policy_transaction_id,
                         in_fichange_belongs_to             =>        nvl(in_billingacounttrxset_id,v_bats_id), --OSPRODUCT-6102
                         in_fitem_lock_tf                   =>        'T',
                         in_refresh_datamart                =>        'T',-- 7816
                         in_enable_perf_mode_tf             =>        'T' -- 7816
                    );


                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fichange_id,
                         pkg_db_billing_modify.gbv_FIChangeAmountFYI  ,
                         v_fitem_signage*(abs(v_payable_earned_amt_new) - nvl(abs(v_fitem_earned_amt_prev) ,0))
                    );
                    
                    --LXPRODUCT-153
                    --Call to Document Processing
                    pkg_db_object.sp_billing_doc_processing
                    (
                         in_session_id,
                         in_transaction_id,
                         v_bats_id,    
                         io_action_outcome_id
                    );
                    
                    if v_payable_fitem_status_id_prev in ( gFitem_PartiallyEarned, gFitem_Unearned )
                       and
                       v_fitem_earning_status_new = gFitem_PartiallyEarned
                       and
                       v_fitem_unearned_amt_new <> 0
                       -- check if any other condition needs to be added
                    then

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'Calling sp_create_earned_fitems, earned amt '|| v_fitem_signage*(abs(v_payable_fitem_balance) - nvl(abs(v_fitem_unearned_amt_new) ,0))||
                                   ' for payable fitem ' || v_payable_fitem_id

                              );

                         end if;

                         -- OSBILLING-5111 , We will create a new FItem for the earned amount and mark the newly created FItem as Earned
                         if (abs(v_payable_fitem_balance) - nvl(abs(v_fitem_unearned_amt_new) ,0)) <> 0
                         then
                              sp_create_earned_fitems
                              (
                                 in_session_id,
                                 in_transaction_id,
                                 v_fitransaction_id,
                                 v_payable_fitem_id,
                                 (abs(v_payable_fitem_balance) - nvl(abs(v_fitem_unearned_amt_new) ,0)),
                                 io_action_outcome_id
                              );

                         end if;

                    end if;

               end if;


               /*   -- OSPRODUCT-2085 commented

               -- OSPRODUCT-7817
               --  Get the Installment ID from the Target FItem
               --

               select
                    installment_id
               into
                    v_fitem_installment_id
               from
                    dragon_fitem
               where
                    fitem_id = v_payable_fitem_id; */


               --
               --  Check if this Installment already exists in the list
               --  If not, then add it to the List
               --

               /*if v_fitem_installment_id is not null
               then

                    if v_fitem_installment_list.exists(v_fitem_installment_id)
                    then

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '......... Installment ID already exist in the list : '||v_fitem_installment_id || ' For Fitem Id ' ||  v_payable_fitem_id
                              );

                         end if;


                    else

                         v_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;

                    end if;


               end if;*/
               -- OSPRODUCT-7817


               --
               -- Update the FItem Datamart
               --
               -- [RR] Can we replace it with update statement
               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_payable_fitem_id,
                    v_datamart_tf
               );*/

               -- OSPRODUCT-7816
               declare

                    v_balance number;
                    v_earned_amt number;

               begin

                    v_balance := to_number(pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id, v_payable_fitem_id, 29710546));
                    v_earned_amt := to_number(pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id, v_payable_fitem_id, 31706446));

                    update
                         dragon_fitem
                    set
                         EARNED_AMOUNT = v_payable_earned_amt_new
                         ,UNEARNED_AMOUNT = v_fitem_unearned_amt_new
                         ,EARNING_STATUS = pkg_os_lookup.fn_lookup_list_text_get ( 5385546 , v_fitem_earning_status_new )
                         ,BALANCE = v_balance
                         --,PAID_AMOUNT = v_earned_amt  --OSPRODUCT-7816
                         ,SESSION_ID = in_session_id
                         ,TRANSACTION_ID = in_transaction_id
                         ,FITEM_LAST_UPT_DATE = to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_payable_fitem_id,'21686401' ),'YYYYMMDDHH24MISS')
                         -- OSPRODUCT-15900
                         ,earned_date = to_date(pkg_os_object_io.fn_object_bv_get
                                              (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    fitem_id, 
                                                    pkg_db_object.gbv_fitem_earning_date
                                              ),
                                              pkg_os_constant.DragonDateFormatDefault
                                              )
                         -- OSPRODUCT-15900 
                    where
                         fitem_id = v_payable_fitem_id;
               exception
                    when others then
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payable_fitem_id,
                              v_datamart_tf
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Warning!! Switching to datamart update..'
                              );

                         end if;

               end;

               r_fitem_index := r_fitem_list.next(r_fitem_index);

          end loop; -- r_fitem_index is not null

     end if;   -- r_fitem_list.count > 0

     --  OSBILLING-3962
     -- Process the FITransaction is not null
     --
     if v_fitransaction_id is not null
     then
          -- Set status of FITransaction to Processed
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_id,
               pkg_os_constant_bv.gbv_GenObjObjectState,
               gFITrxStatus_Processed
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_id,
               pkg_db_object.gbv_FITrx_AccntingPeriod,
               pkg_db_functions.fn_get_fitransaction_acct_prd
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id
               )
          );

          -- Update the FITransaction Datamart
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitransaction_id,
               v_datamart_tf
          );

     end if; --v_fitransaction_id is not null

     if r_billing_account_list.count > 0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_set_payables_amount;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_reverse_fitem_earned_amount
--
--   %USAGE
--   This procedure will reverse the earned amount of a payable fitem
--
--   %ALGORITHM
--
--   1.     Get the billing element ID for the payable item
--   2.     Get earning instructions for the Billing Element
--   3.     If the earning instruction is not at Booking, then
--                a) Change the status back to Unearned
--                b) Set the Earned Amount to zero
--                c) Set the Unearned Amount = Earned Amount
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_fitem_id                        in             object.object_id%type,
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_reverse_payable_earning
(
     in_session_id                     in             object.object_id%type,
     in_transaction_id                 in             object.object_id%type,
     in_fitransaction_id               in             object.object_id%type,
     in_fitem_id                       in             object.object_id%type,
     in_current_date_time              in             date default sysdate,
     in_create_clawback                in             char default 'T', --LXPRODUCT
     in_bord_fitransaction_id          in             object.object_id%type default null, -- LXPRODUCT-461
     in_bord_policy_id                 in             object.object_id%type default null -- LXPRODUCT-461
)
is

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_reverse_payable_earning';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_element_id              number;
     v_payable_instr_id                db_payable_earning_instr.db_payable_earning_instr_id%type;
     v_payable_instr_row               db_payable_earning_instr%rowtype;
     v_earning_status_id               number;
     v_payable_fitem_earned_amt        number;
     v_datamart_tf                     char := 'T';
     v_fichange_id                     object.object_id%type;

     v_disbursement_item_exists_tf      char;
     v_bv_table                         pkg_os_object_io.t_bv_table; -- OSPRODUCT-5160
     v_fitem_category_id                number;
     v_fitem_sub_category_id            number;
     v_policy_id                        object.object_id%type;
     v_product_id                       number;

begin

     --
     -- 1. Get the billing element ID for the payable item
     --
     v_billing_element_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                            in_session_id,
                                            in_transaction_id,
                                            in_fitem_id,
                                            pkg_db_object.gbv_FItem_Billing_Elt_MD_ID
                                     );
                                     
     -- LXPRODUCT-461
     v_policy_id   := pkg_os_object_io.fn_object_bv_get
                                (
                                       in_session_id,
                                       in_transaction_id,
                                       in_fitem_id,
                                       pkg_db_object.gbv_FItem_RefPolicy
                                );

     --LXPRODUCT-282
     if v_billing_element_id is null then

          v_fitem_sub_category_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                            in_session_id,
                                            in_transaction_id,
                                            in_fitem_id,
                                            pkg_db_object.gbv_fitem_subcategory
                                     );




          if v_fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
          then

               v_fitem_category_id      :=   pkg_os_object_io.fn_object_bv_get
                                (
                                       in_session_id,
                                       in_transaction_id,
                                       in_fitem_id,
                                       pkg_db_object.gbv_fitem_category
                                );
               /*v_policy_id   := pkg_os_object_io.fn_object_bv_get
                                (
                                       in_session_id,
                                       in_transaction_id,
                                       in_fitem_id,
                                       pkg_db_object.gbv_FItem_RefPolicy
                                );*/

               v_product_id :=pkg_os_product.fn_object_product_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_id
                         );

               begin
                    
                    select
                         dbe.db_billing_element_id
                    into
                         v_billing_element_id
                    from
                         db_billing_element dbe
                    where
                         (
                              dbe.pd_product_id = v_product_id
                              or
                              dbe.pd_product_id = gProduct_All
                         )
                    and
                         dbe.create_credit_tf = 'T'
                    and
                         dbe.credit_fitem_category = v_fitem_category_id
                    ;

               exception

                    when too_many_rows then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Configuration Error: Could not find 1 unique Billing element for Category: '|| v_fitem_category_id
                         );

                    when others then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Unable to find the  Billing Element ID for categiry: '||v_fitem_category_id
                         );

               end;

          end if;

     end if;                                                       

     v_current_date             :=  to_char(in_current_date_time,pkg_os_constant.DragonDateFormatDefault);

     --
     -- 2. Get earning instructions for the Billing Element
     --
     begin

          select
               db_payable_earning_instr_id
          into
               v_payable_instr_id
          from
               db_payable_earning_instr
          where
               billing_element_id = v_billing_element_id
          ;

     exception

          when too_many_rows then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Configuration Error: Could not find 1 unique Payable Earning Instruction for Billing Element ID: '|| v_billing_element_id
               );

          when others then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Unable to find the Payable Earning Instruction for Billing Element ID: '||v_billing_element_id
               );

     end;

     --
     -- Get the Payable Earning Instruction row
     --
     begin
          select
             *
          into
             v_payable_instr_row
          from
             db_payable_earning_instr
          where
             db_payable_earning_instr_id = v_payable_instr_id;

    exception

          when too_many_rows then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Configuration Error: Could not find 1 unique Payable Earning Instruction for Billing Element ID: '|| v_billing_element_id
               );

          when others then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Unable to find the Payable Earning Instruction for Billing Element ID: '||v_billing_element_id
               );

     end;

    --
    --  If the earning instruction is not at Booking, then
    --
    if v_payable_instr_row.earning_timing_type <> gEarning_Type_AtBooking
     then
          
          --
          -- a) Change the status back to Unearned
          -- b) Set the Earned Amount to zero
          -- c) Set the Unearned Amount = Earned Amount
          --

          -- If Payable is not Disbursed yet, reset Earned amount and status

          v_disbursement_item_exists_tf :=   fn_disbursement_item_exists_tf
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_fitem_id
                                             );

          --LXPRODUCT-282
          if v_payable_instr_row.earning_timing_type = gEarning_Type_ProRateInst then
               
               if v_disbursement_item_exists_tf = 'T'
               then

                    -- Check balances. If it's balanced, return F as clawbacks should not be created
                    select decode(sum(initial_amount), 0, 'F', 'T')
                    into v_disbursement_item_exists_tf
                    from dragon_fitem
                    where
                         policy_id = (select policy_id from dragon_fitem where fitem_id = in_fitem_id)
                    and (
                         disbursement_batch_id is not null
                         or
                         (
                              fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
                         and
                              initial_amount > 0
                         )
                    )
                    and
                         fitem_type_id = gFItemType_Credit;


               end if;
			   
          end if;
		  
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......v_disbursement_item_exists_tf '|| v_disbursement_item_exists_tf
               );

          end if;


          if  v_disbursement_item_exists_tf = 'F'
          then


               v_payable_fitem_earned_amt       :=   nvl(pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_fitem_id,
                                                            gbv_fitem_earned_amount
                                                       ),0);

               /*pkg_os_object_io.sp_object_bv_set --- --- --- OSPRODUCT-5160 commented below
               (
                    in_session_id,
                    in_transaction_id,
                    in_fitem_id,
                    gbv_fitem_earned_amount,
                    0
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_fitem_id,
                    gbv_fitem_unearned_amount,
                    v_payable_fitem_earned_amt
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_fitem_id,
                    gbv_fitem_EarningStatus,
                    gFitem_UnEarned
               );*/-- OSPRODUCT-5160 Commented as resulting in lock warnings

               -- OSPRODUCT-5160 Added below to get the lock before update
               v_bv_table.delete;

               v_bv_table (gbv_fitem_earned_amount          ).business_variable_value     :=   0;
               v_bv_table (gbv_fitem_unearned_amount        ).business_variable_value     :=   v_payable_fitem_earned_amt;
               v_bv_table (gbv_fitem_EarningStatus          ).business_variable_value     :=   gFitem_UnEarned;
               -- OSPRODUCT-15900
               v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   := null;
               -- OSPRODUCT-15900

               pkg_db_object.sp_ba_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_fitem_id,
                    v_bv_table
               );-- --- --- OSPRODUCT-5160 Till Here

               -- Register a FIChange of type FYI that the earning status is modified

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                      =>        in_session_id,
                    in_transaction_id                  =>        in_transaction_id,
                    in_parent_fitransaction_id         =>        in_fitransaction_id,
                    out_fichange_id                    =>        v_fichange_id,
                    in_fichange_action                 =>        pkg_db_object.gFIChange_FYI,
                    in_fichange_action_delta           =>        0,
                    in_fichange_ref_fitem              =>        in_fitem_id,
                    in_fichange_sum_include            =>        pkg_db_object.gFIChange_No,
                    in_fichange_process_date           =>        v_current_date
               );


               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    in_Fitem_id,
                    v_datamart_tf
               );*/--OSPRODUCT-5160
               --OSPRODUCT-5160 Added update for datamart to improve performance
			   
               begin
                    update
                         dragon_fitem df
                    set
                         df.earned_amount = 0,
                         df.earning_status = pkg_os_lookup.fn_lookup_list_text_get
                                             (
                                                  FItemPayablesEarningStatus,
                                                  gFitem_UnEarned
                                             ),
                         df.unearned_amount = v_payable_fitem_earned_amt,
                         -- OSPRODUCT-15900
                         earned_date = to_date(pkg_os_object_io.fn_object_bv_get
                                              (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    df.fitem_id, 
                                                    pkg_db_object.gbv_fitem_earning_date
                                              ),
                                              pkg_os_constant.DragonDateFormatDefault
                                              )
                         -- OSPRODUCT-15900                     
                    where
                         df.fitem_id = in_fitem_id;
               exception when others
               then
                    null;
               end;
               --- --- OSPRODUCT-5160 Till Here

          else
                   
               if in_create_clawback ='T' then
                    sp_create_commission_clawback
                    (
                         in_session_id,
                         in_transaction_id,
                         in_fitransaction_id,
                         in_fitem_id,
                         in_current_date_time  --OSBILLING-7829
                    );
               end if;

          end if;
		  
		  -- LXPRODUCT-461
          /*if v_payable_instr_row.earning_timing_type = gEarning_Type_InstClr
             and
             in_bord_policy_id is not null 
          then
               
               sp_set_payable_bord_policy
               (
                    in_session_id,
                    in_transaction_id,
                    v_policy_id,
                    in_fitem_id,
                    pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_fitransaction_id ),
                    in_bord_policy_id,
                    in_bord_fitransaction_id,
                    'T',
                    in_current_date_time
               );
          
          end if;*/

    end if;


end sp_reverse_payable_earning;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_get_disbursement_items
--
--   %USAGE
--   This procedure creates a list of Disbursement Items based on the Billing Account Type
--
--   %ALGORITHM
--   1. If Billig Account type is Customer
--        a. Search any Over Payments for Disbursement
--   2. Else
--        a. Search any Earned Payables for Disbursement
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billing_account_id              in             object.object_id%type,
--   in_billing_account_type            in             lookup_list_value.lookup_enum%type,
--   in_disbursement_item_list          in out nocopy  pkg_os_object.t_object_list

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_get_disbursement_items
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_billing_account_type            in             lookup_list_value.lookup_enum%type,
     in_disbursement_item_list          in out nocopy  pkg_os_object.t_object_list,
     in_policy_id                       in             object.object_id%type  default null, -- OSBILLING-4922
     in_auto_disburse_tf                   in                char default 'F', --UTPRODUCT-4601
     in_generation_date                 in             date default null
)
as

     v_procedure_name                   constant system_log.program_name%type        := pkg_name||'sp_get_disbursement_items';
     v_session_control                  pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_fitem_category                   object_bv_value.business_variable_value%type;
     v_earning_status                   object_bv_value.business_variable_value%type;
     v_disbursement_item_index          number;
     v_disbursement_item_valid_tf       char(1):= 'T'; -- OSPRODUCT-8180

     cursor c_dragon_fitem
     (
          in_earning_status       dragon_fitem.earning_status%type,
          in_fitem_category_id    dragon_fitem.fitem_category_id%type
     )
          is

          Select fitem_id  --UTPRODUCT-4601
          from
          (select
               fitem_id
          from
               dragon_fitem f
          where
               billing_account_id = in_billing_account_id
          and
          (	  -- Arun 0828  OSPRODUCT-10441
               ( f.policy_id = in_policy_id )
               or
               (
                    (
                      (in_policy_id is null and f.policy_id is null  ) -- KR 11/02
                      or
                      in_earning_status is not null
                    )
               )
          )   --OSPRODUCT-10441
          and
               fitem_type_id = gFItemType_Credit
          and
               balance <> 0    --2018-02-07 osbilling-4914 vaultdev-6642 Cheryl should be <>0 not <0 to pick up clawback of an RP endorsement commission
          and
               disbursement_batch_id is null
          and
               (
                    fitem_category_id IN  (in_fitem_category_id,gfitem_Claim_Settlement,gfitem_Bank_Charges)
                    or
                    in_fitem_category_id is null
               )
          and
               (earning_status = in_earning_status or in_earning_status is null)
          and
               nvl(pkg_cs_db_payable.fn_pol_suspended_attorney_tf(in_session_id,in_transaction_id,f.policy_id),'F') = 'F' --OSPRODUCT-6034
          and
               (
                    f.policy_id is null or
                    nvl(
                         pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id, f.policy_id,pkg_db_suspension.gSuspend_CreditDisb_Activity)
                         ,0
                        ) <>1  or
                        earning_status  =   'Earned'
               ) --LIOPRODUCT-193
--OSBILLING-4922
union

               select
                    fitem_id
               from
                    dragon_fitem f, dragon_policy p
               where
                    billing_account_id = in_billing_account_id
               and
                    f.policy_id  = p.policy_id
               and
                    p.billing_method_id =  1 -- Direct Billed
               and
                    fitem_type_id = gFItemType_Debit
               and
                    balance < 0
               and
                    disbursement_batch_id is null
               and
                    fitem_category_id not in ( gFItem_Category_Cash , gFItem_Category_Disburse )--646, 5046 --OSPRODUCT-5000
               and
                    ( f.policy_id = in_policy_id    --OSPRODUCT-10441
                      or
                     ( f.policy_id is null and in_policy_id is null )
                    )
               and
                    (f.policy_id is null or nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id, f.policy_id,pkg_db_suspension.gSuspend_CreditDisb_Activity),0) <>1 ) --OSPRODUCT-3664
               and
                    nvl(pkg_cs_db_payable.fn_pol_suspended_attorney_tf(in_session_id,in_transaction_id,f.policy_id),'F') = 'F' --OSPRODUCT-6034

          union
               select
                    fitem_id
               from
                    dragon_fitem f, dragon_billingaccount b
               where
                    f.billing_account_id = in_billing_account_id
               and
                    f.billing_account_id = b.billingaccount_id
               and
                    b.account_type_id = 201 -- Customer
               and
                    fitem_type_id = gFItemType_Debit
               and
                    balance < 0
               and
                    disbursement_batch_id is null
               and
                    fitem_category_id not in ( gFItem_Category_Cash , gFItem_Category_Disburse )--646, 5046 --OSPRODUCT-5000
               and
                    f.policy_id is null
               and
                    nvl(pkg_cs_db_payable.fn_pol_suspended_attorney_tf(in_session_id,in_transaction_id,f.policy_id),'F') = 'F' --OSPRODUCT-6034

                    )fi  --UTPRODUCT-4601
        where not exists
          (select 1 from dragon_fichange where fitem_id = fi.fitem_id and fitem_transaction_type_id = 801
          and TRUNC(processing_date) > trunc(in_generation_date)
           )
               ;
--OSBILLING-4922
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering the process to seach  Disbursable FItems for Billing Account ID : '||in_billing_account_id

          );

     end if;

     in_disbursement_item_list.delete;

     -- GCNA Merge
     -- GCNA-940 if this not auto disbursement
     --
     -- Osbilling-3371 - Removed logic added for GCNA-940 as mentioned rules doesn't exist in Base environments.

     --
     -- 1. If Billig Account type is Customer
     --
     if pkg_db_multipayer.fn_valid_payer_tf(in_session_id,in_transaction_id,in_billing_account_type) = 'T' --1546 FinancialInstitution -- OSPRODUCT-3575 OSPRODUCT-28820
     then

          --
          -- a. Search any Over Payments for Disbursement
          --
          v_fitem_category := gFItem_Category_Cash; -- 'reciept'

     else

          --
          -- b. Search any Earned Payables for Disbursement
          --
          v_earning_status := 'Earned';

     end if;

     v_disbursement_item_index := 1;

     --
     -- OSPRODUCT-8180
     -- Custom call for clearing the custom cache.
     --
     pkg_cs_db_payable.sp_clear_custom_cache
     (
          in_session_id,
          in_transaction_id,
          in_policy_id
     );
     -- OSPRODUCT-8180

     for r_dragon_fitem in c_dragon_fitem(v_earning_status, v_fitem_category)
     loop

        --
        --loop cursor and store value in out list to maintain compatiblity of the caller code
        --
          -- OSPRODUCT-8180

          v_disbursement_item_valid_tf := 'T';

          if  nvl
               (
                    pkg_cs_db_payable.fn_disbursement_item_valid_tf
                    (
                         in_session_id,
                         in_transaction_id,
                         r_dragon_fitem.fitem_id,
                         in_billing_account_id,
                         in_billing_account_type,
                         in_policy_id,
                         in_auto_disburse_tf
                    ) ,
                    'T'
               ) = 'F'
          then

               v_disbursement_item_valid_tf := 'F';

          end if;
          -- OSPRODUCT-8180


          if v_disbursement_item_valid_tf = 'T' then  -- OSPRODUCT-8180

             in_disbursement_item_list(v_disbursement_item_index) := r_dragon_fitem.fitem_id;

             v_disbursement_item_index := v_disbursement_item_index + 1;

          end if; -- OSPRODUCT-8180


     end loop;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Number of Disbursement Items found: '||in_disbursement_item_list.count
          );

     end if;

end  sp_get_disbursement_items;
-------------------------------------------------------------------------------------------------------------------------------------
procedure sp_get_disbursement_items_old
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_billing_account_type            in             lookup_list_value.lookup_enum%type,
     in_disbursement_item_list          in out nocopy  pkg_os_object.t_object_list,
     in_auto_disburse_tf                   in                char default 'F'
)
as

     v_procedure_name                   constant system_log.program_name%type        := pkg_name||'sp_get_disbursement_items';
     v_session_control                  pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering the process to seach  Disbursable FItems for Billing Account ID : '||in_billing_account_id

          );

     end if;

     in_disbursement_item_list.delete;

     -- GCNA Merge
     --GCNA-940 if this not auto disbursement
     if (in_auto_disburse_tf = 'F')
     then

     --
     -- 1. If Billig Account type is Customer
     --
     if in_billing_account_type = pkg_db_object.gBillingAcType_Customer
     then

          --
          -- a. Search any Over Payments for Disbursement
          --

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gObjType_FItem,
               in_disbursement_item_list,
               null,
               null,
               gRule_OverPayFItems
          );

     else

          --
          -- a. Search any Earned Payables for Disbursement
          --

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gObjType_FItem,
               in_disbursement_item_list,
               null,
               null,
               gRule_EarnedPayables
          );

     end if;

--if this is auto disbursement use new qualification rules
  else
     --
     -- 1. If Billig Account type is Customer
     --
     if in_billing_account_type = pkg_db_object.gBillingAcType_Customer
     then

          --
          -- a. Search any Over Payments for Disbursement
          --

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gObjType_FItem,
               in_disbursement_item_list,
               null,
               null,
               11423540
          );

     else

          --
          -- a. Search any Earned Payables for Disbursement
          --

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gObjType_FItem,
               in_disbursement_item_list,
               null,
               null,
               11423640
          );

     end if;

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Number of Disbursement Items found: '||in_disbursement_item_list.count
          );

     end if;

end  sp_get_disbursement_items_old;
------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--     sp_billing_acc_status_check
--
--   %USAGE
--     Check if credit disbursement needs to be stopped for this billing account's related policies.
--
--
--   %ALGORITHM
--     Check the status of the disb.Batch. If the status is 37346 triggers batch processing termination.
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billAccTRXset_id                in             object.object_id%type,
--   io_action_outcome_id               in out nocopy  outcome.outcome_id%type
------------------------------------------------------------------------------------------------------------------------
procedure sp_billing_acc_status_check
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     io_check_failed                    in out         boolean
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_billing_acc_status_check';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_batch_parent_billing_acc_id      object.object_id%type;
     v_policy_term_id                   object_bv_value.business_variable_value%type;
     v_billing_acc_status               object_bv_value.business_variable_value%type;
     v_stop_credit_disburs              object_bv_value.business_variable_value%type;
     v_stop_all                         object_bv_value.business_variable_value%type;
     v_stop_all_billing                 object_bv_value.business_variable_value%type;
     v_billacc_curr_suspension          object.object_id%type;
     v_current_ba_suspension_list       pkg_os_object.t_object_list;
     v_current_ba_susp_list_index       number;
     v_suspended_trx                    varchar2(400):=null;
     v_current_date                     date;
     v_Susp_EffectiveDate               object_bv_value.business_variable_value%type;
begin

     io_check_failed               :=   false;

     v_batch_parent_billing_acc_id :=   pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_billAccTRXset_id);

     v_billing_acc_status          :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_batch_parent_billing_acc_id,
                                             gbv_BillAcc_Status  -- 210153 Generic Object State
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| v_billing_acc_status : '||v_billing_acc_status
          );

     end if;

     if v_billing_acc_status = g_BAObjectStateSuspended
     then
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as gcna has some additional code below
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '|||||| Inside if v_billing_acc_status = g_BAObjectStateSuspended : '
               );

          end if;


          --osproduct 2013/3343
          pkg_db_suspension.sp_get_active_susp_objects
					(
						in_session_id,
						in_transaction_id,
						null,
						v_batch_parent_billing_acc_id,
						v_current_ba_suspension_list,
						2
					);
            v_current_date := pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, v_batch_parent_billing_acc_id);
          if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        'Total suspension Objects: '||v_current_ba_suspension_list.count||
                        '..Current Date: '||v_current_date
                    );
          end if;
          v_current_ba_susp_list_index :=v_current_ba_suspension_list.first;

          while v_current_ba_susp_list_index is not null and v_current_ba_suspension_list.count>0
               loop
               v_suspended_trx := pkg_os_object_io.fn_object_bv_get
												(
												  in_session_id,
												  in_transaction_id,
												  v_current_ba_suspension_list(v_current_ba_susp_list_index),
												  32525248
												 );
                v_Susp_EffectiveDate :=  to_char(
                                               to_date(pkg_os_object_io.fn_object_bv_get
                                                (
                                                  in_session_id,
                                                  in_transaction_id,
                                                 v_current_ba_suspension_list(v_current_ba_susp_list_index),
                                                  pkg_db_suspension.gbv_Suspension_Eff_Date
                                                 ),
                                                   pkg_os_constant.DragonDateFormatDefault
                                                  ),
                                                pkg_os_constant.DragonDateFormatDefault);
               if  pkg_os_token.fn_find_in_set ( 3, v_suspended_trx) ='T' -- credit disbursemnt is suspended
                   and trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault)) <= trunc(v_current_date)
                   then
                     io_action_outcome_id := 48446;
                     io_check_failed      := true;

               return;
              end if;
          v_current_ba_susp_list_index := v_current_ba_suspension_list.next(v_current_ba_susp_list_index);
          end loop;

          --end loop;

     end if; -- if v_billing_acc_status = 37346

end sp_billing_acc_status_check;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_payable_fi_cashpost_get
--
--   %USAGE
--   This procedure will validate/confirm the FItems before disbursement process.
--
--
--   %ALGORITHM
--   1.  Having a userSession get the CashPost FItransaction from the context
--   2.  Get all FIChange items for the CashPost FItransaction
--   3.  Loop through each FIChange item
--         a. Get the related FItem
--         b. Check the type of Fitem
--            i. set payable Fitem if the type is Credit
--   4.  Get payable FItem balance
--   5.  If balance if negative
--         a. add payable Fitem to the 'toProcess' fitem list
--   6. If there is no fitem in the  'toProcess' fitem list
--      a. Set the outcome as No Record Selected and return
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_payable_fi_cashpost_get
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     io_payable_item_list               in out nocopy  t_fitem_list,
     io_payable_item_rec                in out nocopy  t_payable_fitem_rec,
     out_batch_total_amount             out            number
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_payable_fi_cashpost_get';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payable_item_rec                 t_payable_fitem_rec;
     v_batch_total_amount               number                        :=   0;
     v_payable_fitem_balance            number;
     v_payable_fitem_id                 object.object_id%type;
     v_cashpost_batrxset_id             object.object_id%type;
     v_cashpost_fitransaction_id        object.object_id%type;
     v_fichange_fitem_id                object.object_id%type;
     v_index                            number;
     v_fichange_list                    pkg_os_object.t_object_list;
     v_payable_item_list                t_fitem_list;

begin

     --     1.  Having a userSession get the CashPost FItransaction from the context
     --
     v_cashpost_batrxset_id   :=   pkg_os_object_io.fn_object_bv_get  (in_session_id, in_transaction_id,
                                        --
                                        in_session_id,
                                        29650546   -- UserSession._Reference_SessionPolicy >>> Policy
                                   );

     v_cashpost_fitransaction_id  :=   pkg_os_object_search.fn_child_object_get   (in_session_id, in_transaction_id,
                                             --
                                             in_parent_object_id      => v_cashpost_batrxset_id,
                                             in_child_object_type_id  => gObjType_FITransaction,
                                             in_constraint_bv         => gbv_FITransaction_Type,
                                             in_constraint_bv_value   => gFITrxType_CashPost
                                        );

     --     2.  Get all FIChange items for the CashPost FItransaction
     --
     pkg_os_object_search.sp_object_children_of_type_get   (in_session_id, in_transaction_id,
            --
            v_cashpost_fitransaction_id,
            gObjType_FIChange,
            v_fichange_list
       );

     --     3.  Loop through each FIChange item
     --
     v_index :=  v_fichange_list.first;

     while (v_index is not null)
     loop
          --           a. Get the related FItem
          --
          v_fichange_fitem_id   :=   pkg_os_object_io.fn_object_bv_get  (in_session_id, in_transaction_id,
                                             --
                                             v_fichange_list(v_index),
                                             gbv_FIChange_RelatedFitem
                                          );


          --           b. Check the type of Fitem
          --
          if pkg_os_object_io.fn_object_bv_get  (in_session_id, in_transaction_id,
                       --
                       v_fichange_fitem_id,
                       gbv_FItem_Debit_Credit
                       --
                  ) = gFItemType_Credit
          then
               --              i. set payable Fitem if the type is Credit
               --
               v_payable_fitem_id    :=   v_fichange_fitem_id;

          end if;

          v_index := v_fichange_list.next(v_index);

      end loop;

      --     4.  Get payable FItem balance
      --
      v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get  (in_session_id, in_transaction_id,
                                             --
                                             v_payable_fitem_id,
                                             gbv_fitem_amount_due
                                        );


     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log  (in_session_id, in_transaction_id, v_procedure_name,
               --
               '............ Payable Fitem ID: '||v_payable_fitem_id||
               ', With Balance: '||v_payable_fitem_balance
          );
     end if;

     --     5.  If balance if negative
     --
     if v_payable_fitem_balance < 0
     then
          --           a. add payable Fitem to the 'toProcess' fitem list
          --
          select
               *
          into
               v_payable_item_rec(v_payable_fitem_id)
          from
               dragon_fitem
          where
               fitem_id = v_payable_fitem_id
          ;

          v_batch_total_amount :=   v_batch_total_amount + v_payable_fitem_balance;

          v_payable_item_list(v_payable_fitem_id) := v_payable_fitem_id;

     end if;

     --
     --     6. If there is no fitem in the  'toProcess' fitem list
     --
     if v_payable_item_list.count = 0
     then
          -- a. Set the outcome as No Record Selected and return
          --
          io_action_outcome_id := gOutcomeNoSelectedRecord;

          return;

     end if;

     --
     --  Set out variables
     --
     io_payable_item_list   := v_payable_item_list;
     io_payable_item_rec    := v_payable_item_rec;
     out_batch_total_amount := v_batch_total_amount;

end sp_payable_fi_cashpost_get;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_payable_fi_manual_get
--
--   %USAGE
--   This procedure will validate/confirm the FItems before disbursement process.
--
--
--   %ALGORITHM
--    1.  Get the selected items from the cache
--     2. If the object list has count > 0
--        a. Get the selected elements
--        b. Loop through each selected objects
--             i. Get the selected payable FItem and its balance
--            ii.  If the FItem has some balance, fetch the FITem record and add to the v_payable_item_list
--
--     3. IF the selected items count is zero,
--        a. Set the outcome as No Record Selected and return
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_payable_fi_manual_get
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     io_payable_item_list               in out nocopy  t_fitem_list,
     io_payable_item_rec                in out nocopy  t_payable_fitem_rec,
     out_batch_total_amount             out            number,
     in_selected_list                   in             pkg_os_object.t_object_list default pkg_os_object.gnull_object_list
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_payable_fi_manual_get';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payable_fitem_id                 object.object_id%type;
     v_list_object_id                   object.object_id%type;

     v_selected_elements                varchar2(2000);
     v_object_index                     number;
     v_list_object_index                number;

     v_payable_fitem_balance            number;
     v_batch_total_amount               number                                  :=   0;
     v_selected_items_cnt               number                                  :=   0;
     v_payable_item_list                t_fitem_list;
     v_payable_item_rec                 t_payable_fitem_rec;

     v_selected_object_ids              pkg_os_token.t_string_table;
     v_list_object_list                 pkg_os_object.t_object_list             := pkg_os_object.gnull_object_list;
     v_final_object_list                 pkg_os_object.t_object_list             := pkg_os_object.gnull_object_list;

     v_batch_parent_billing_acc_id      object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_assoc_policy_id                  object.object_id%type;
     v_policy_level_tf                  pd_property.pd_property_value%type;
begin

     if in_selected_list.first is not null
       then
        --OSBILLING-4525
        if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Selected list Object ID: '||in_selected_list(1)
          );

        end if;

         v_final_object_list := in_selected_list;

     else
         --
         --   Get parent billing account ID
         --
         v_batch_parent_billing_acc_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_billAccTRXset_id);


         --
         -- 1. Get the selected items from the cache
         --

         pkg_os_object_cache_search.sp_obj_cache_children_get
         (
              in_session_id,
              in_transaction_id,
              in_object_cache,
              v_batch_parent_billing_acc_id,
              pkg_os_constant.gobjType_List,
              v_list_object_list

         );

         --
         -- 2. If the object list has count > 0
         --

         if v_list_object_list.count > 0
         then

              v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

              v_list_object_index      :=        v_list_object_list.first;

              while v_list_object_index is not null
              loop

              --
              -- a. Get the selected elements
              --

                   v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_object_cache,
                                                           v_list_object_list(v_list_object_index),
                                                           pkg_os_constant_bv.gbv_ListElementsSelected

                                                      );

                   if v_session_control.gLogging_Full
                   then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '......... List Object ID: '||v_list_object_id ||
                             ' Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                             ' And element list: '||v_selected_elements
                        );

                   end if;

                   if v_selected_elements is not null
                   then

                      v_selected_object_ids.delete;

                      pkg_os_token.sp_tokenize_string(v_selected_elements, ',', v_selected_object_ids);

                      v_object_index := v_selected_object_ids.first;

                      while v_object_index is not null
                      loop

                        v_final_object_list(v_object_index) := v_selected_object_ids(v_object_index);
                        v_object_index := v_selected_object_ids.next(v_object_index);

                      end loop;

                   end if; -- if selected items is not null

               v_list_object_index := v_list_object_list.next(v_list_object_index);

            end loop; -- For each object list ..

         end if; -- if able to find the object list ...

    end if;

    v_object_index :=null;
    v_object_index := v_final_object_list.first;


    if v_object_index is null
    then

         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '............ User did not make any selection from the list.'
              );

         end if;

    else

         --
         -- b. Loop through each selected objects
         --

         while v_object_index is not null
         loop

              v_selected_items_cnt          :=   v_selected_items_cnt + 1;

              --
              -- i. Get the selected payable FItem and its balance
              --

        -- VAULTDEV-9017
        if v_session_control.gLogging_Full
        then
        pkg_os_logging.sp_log
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '|||||| v_final_object_list( v_object_index ): '||v_final_object_list( v_object_index )
                ||'in_selected_list.first: '||in_selected_list.first
          );
        end if;


     if in_selected_list.first is not null
       then

              v_payable_fitem_id :=   v_final_object_list( v_object_index );

     else

              v_payable_fitem_id            :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      in_object_cache,
                                                      v_final_object_list( v_object_index ),
                                                      pkg_os_constant_bv.gbv_ListElementObject
                                                 );
      end if;

             --OSBILLING-4525
             if v_session_control.gLogging_Full
             then

                 pkg_os_logging.sp_log   -- VAULTDEV-9017
                 (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Payable fitem ID: '||v_payable_fitem_id
                 );

             end if;

              v_policy_id                   :=   pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payable_fitem_id,
                                                      gbv_FItem_associatedPolicy
                                                 );
              if v_session_control.gLogging_Full
              then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '............ Policy ID: '||v_policy_id||
                        ', Assoc Policy Id: '||v_assoc_policy_id
                   );

              end if;

              if v_policy_id <> v_assoc_policy_id and v_assoc_policy_id is not null
              then
                  if v_session_control.gLogging_Full
                  then

                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '............ Multiple Policies found; Returning with error status 56546'
                     );

                  end if;
                  io_action_outcome_id := gOutcomeMultiplePolicySelected;
                  return;
              else
                  v_policy_level_tf             := nvl(pkg_os_product.fn_product_property_get ( in_session_id, in_transaction_id, v_policy_id, 18846),'T');

                  if v_policy_level_tf = 'T' then
                       v_assoc_policy_id := v_policy_id;
                  end if;

              end if;

              v_payable_fitem_balance       :=   pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payable_fitem_id,
                                                      gbv_fitem_amount_due
                                                 );

              if v_session_control.gLogging_Full
              then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '............ Payable Fitem ID: '||v_payable_fitem_id||
                        ', With Balance: '||v_payable_fitem_balance
                   );

              end if;

              --
              -- ii.  If the FItem has some balance, fetch the FITem record and add to the
              --     v_payable_item_list
              --

              if (v_payable_fitem_balance < 0 or (v_payable_fitem_balance >0  and  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_payable_fitem_id,29710146) =946 )  )  --OSPRODUCT-7271
              then

                   select
                             *
                   into
                             v_payable_item_rec(v_payable_fitem_id)
                   from
                             dragon_fitem
                   where
                             fitem_id = v_payable_fitem_id
                   ;

                   v_batch_total_amount :=   v_batch_total_amount + v_payable_fitem_balance;

                   v_payable_item_list(v_payable_fitem_id) := v_payable_fitem_id;

              end if;

              v_object_index := v_final_object_list.next( v_object_index );

         end loop; -- for each selection ...

    end if; -- if the list contains one or more selections ...

     --
     -- 3. IF the selected items count is zero,
     --
     if v_selected_items_cnt = 0
     then

          --
          -- a. Set the outcome as No Record Selected and return
          --

          io_action_outcome_id := gOutcomeNoSelectedRecord;

          return;

     end if;

     --
     --  Set out variable
     --
     io_payable_item_list   := v_payable_item_list;
     io_payable_item_rec    := v_payable_item_rec;
     out_batch_total_amount := v_batch_total_amount;

end sp_payable_fi_manual_get;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as above proc is different, may base is latest
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_fitrx_create
--
--   %USAGE
--     This procedure creates the placeholder fitransactions for each selected fitem
--
--
--   %ALGORITHM
--
--     1. IF the payable FItem list count is > 0
--        a. Set the BV's of the BillingAccountTrxSet
--        b. Verify whether already FITransactions Objects exists under BillingAccountTrxSet
--        c. If exists
--            i. Loop through each FITransaction object already created
--                - Verify if FITransaction is already created for the selected FItems
--                - Delete from payable fitem list as FITransaction object already exisits
--                - Delete the FITransaction, as the FItem associated with this is not selected
--        d. Loop through Payable Fitem List
--            i. Create new FITransaction Object
--            ii. Update the FITransaction Datamart
--            iii. Update the payable FItem by setting the associated Disbursement transaction
--            iv.  update FItem datamart
--    2. ELSE, payable FItem list count is not > 0
--        a. Set the outcome as insufficient outcome and return
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billing_acc_trx_set_id          in                 object.object_id%type,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type
--   in_current_date_time               in             date default null

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_disburse_fitrx_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_payable_item_list               in             t_fitem_list,
     in_payable_item_rec                in             t_payable_fitem_rec,
     in_batch_total_amount              in             number
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_fitrx_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_fitransaction_id                 object.object_id%type;
     v_fitrx_id                         object.object_id%type;
     v_fitrx_ref_fitem                  object.object_id%type;

     v_payable_item_index               varchar2(100);
     v_fitx_object_index                varchar2(100);
     v_datamart_tf                      char(1)                                 :=   'T';

     v_payable_item_list                t_fitem_list;
     v_fitem_rec                        dragon_fitem%rowtype;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_fitx_object_list                 pkg_os_object.t_object_list             := pkg_os_object.gnull_object_list;

     v_batch_parent_billing_acc_id      object.object_id%type;
     v_fitrx_eff_date                   object_bv_value.business_variable_value%type;

begin

     --
     -- Get parent billing account ID
     --
     v_batch_parent_billing_acc_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_billAccTRXset_id);

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering the procedure to create FITransactions for the  BillingAccountTrxSetID : '||in_billAccTRXset_id ||
               ' under the Billin Account : '||pkg_os_object.fn_object_name_get (in_session_id, in_transaction_id, v_batch_parent_billing_acc_id)
          );

     end if;


     v_payable_item_list := in_payable_item_list;
     --
     -- 1. IF the payable FItem list count is > 0
     --

     if v_payable_item_list.count > 0
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Count of Valid payables items to disburse: '||v_payable_item_list.count
               );

          end if;


          --
          -- a. Set the BV's of the BillingAccountTrxSet
          --

          v_bv_table.delete;

          v_bv_table ( gbv_FITrxSetEntryType                          ).business_variable_value := gBatchEntryMethod_Manual;
          v_bv_table ( gbv_FITrxSetEnteredby                          ).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
          v_bv_table ( gbv_FITrxSetDatePosted                         ).business_variable_value := to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_billAccTRXset_id), pkg_os_constant.DragonDateFormatDefault );
          v_bv_table ( gbv_FITrxSetExternalBatchId                    ).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_billAccTRXset_id), pkg_os_constant.DragonDateFormatDefault );
          v_bv_table ( gbv_FITrxSetBatchType                            ).business_variable_value := gBatch_PayablesDisbBatch;
          v_bv_table ( pkg_db_object.gbv_FITrxSet_TotalItems          ).business_variable_value := v_payable_item_list.count;
          v_bv_table ( pkg_db_object.gbv_FITrxSet_TotalAmount         ).business_variable_value := (in_batch_total_amount)*(-1);
          v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState       ).business_variable_value := gBatchStatus_InProcess;
          v_bv_table ( gbv_FITrxSetDatePosted                         ).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,in_billacctrxset_id), pkg_os_constant.DragonDateFormatDefault);


          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billAccTRXset_id,
               v_bv_table
          );

          --
          -- b. Verify whether already FITransactions Objects exists under BillingAccountTrxSet
          --

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billAccTRXset_id,
               gObjType_FITransaction, -- 2365046
               v_fitx_object_list

          );


          if (v_fitx_object_list.count > 0)
          then

               --
               --  c) If exists
               --

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... The FITransaction Objects  '|| v_fitx_object_list.count ||
                         ' already exists. This is probably due to browser back !!No of FIrx exisitns before '

                    );

               end if;


               v_fitx_object_index      :=        v_fitx_object_list.first;

               --
               --  i. Loop through each FITransaction object already created
               --

               while v_fitx_object_index is not null
               loop

                    v_fitrx_id          :=        v_fitx_object_list(v_fitx_object_index );

                    v_fitrx_ref_fitem    :=       pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitrx_id,
                                                       gbv_FITrx_AssociateFItem --31689946

                                                  );

                    --
                    --   Verify if FITransaction is already created for the selected FItems
                    --

                    if (v_payable_item_list.exists(v_fitrx_ref_fitem) )
                    then

                         --
                         -- Delete from payable fitem list as FITransaction object already exisits
                         --

                         v_payable_item_list.delete(v_fitrx_ref_fitem);


                    else

                         --
                         -- Delete the FITransaction, as the FItem associated with this is not selected
                         --

                         pkg_os_object.sp_object_delete
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billAccTRXset_id,
                              v_fitrx_id,
                              gObjType_FITransaction

                         );

                    end if;


                    v_fitx_object_index     :=   v_fitx_object_list.next(v_fitx_object_index);

               end loop; -- For each FITransaction already created

          end if ; -- If already FITransctions exists

          v_payable_item_index        :=   v_payable_item_list.first;

          --
          -- d. Loop through Payable Fitem List
          --

          while v_payable_item_index is not null
          loop

               v_fitem_rec := in_payable_item_rec(v_payable_item_index);

               if v_fitem_rec.policy_id is not null then

                 v_fitrx_eff_date := to_char( pkg_db_functions.fn_get_policy_current_date( in_session_id, in_transaction_id, v_fitem_rec.policy_id), pkg_os_constant.dragondateformatdefault ); --GCNA-1397 replace pkg_os_time.fn_os_sysdate
               else
                  v_fitrx_eff_date := to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_fitem_rec.policy_id), pkg_os_constant.dragondateformatdefault ); --GCNA-1397 replace

               end if;

               --
               -- i. Create new FITransaction Object
               --

               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    in_billAccTRXset_id,
                    out_fitransaction_id               =>    v_fitransaction_id,
                    in_fitrx_type                      =>    gFITrxType_Disbursement,
                    in_fitrx_ref_billing_account       =>    v_fitem_rec.billing_account_id,
                    in_fitrx_ref_associatedpolicy      =>    v_fitem_rec.policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    v_fitem_rec.policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    v_fitem_rec.policy_id,
                    in_fitrx_ref_actionpoltrx          =>    v_fitem_rec.policy_transaction_id,
                    in_fitrx_ref_associatedfitem       =>    v_payable_item_index,
                    in_fitrx_effective_date            =>    v_fitrx_eff_date, --to_char( pkg_db_functions.fn_get_policy_current_date( in_session_id, in_transaction_id, v_fitem_rec.policy_id), pkg_os_constant.dragondateformatdefault ), --GCNA-1397 replace pkg_os_time.fn_os_sysdate
                    in_fitrx_gl_date                   =>    v_fitrx_eff_date, -- to_char( pkg_db_functions.fn_get_policy_current_date( in_session_id, in_transaction_id, v_fitem_rec.policy_id), pkg_os_constant.DragonDateFormatDefault ), --GCNA-1397 replace pkg_os_time.fn_os_sysdate
                    in_fitrx_amount                    =>    (v_fitem_rec.balance)*(-1),
                    in_fitrx_object_state              =>    gFITrxStatus_InProcess

               );

               --
               -- ii. Update the FITransaction Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_datamart_tf
               );

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as gcna has additional code below
               --
               -- Update the datamart of BillingAccounTrxSet
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    in_billAccTRXset_id,
                    v_datamart_tf
               );

                -- Set associated Disbursement batch for the disburable FItem
                --
                /*pkg_os_object_io.sp_object_bv_set
                (
                     in_session_id,
                     in_transaction_id,
                     v_fitem_rec.fitem_id,
                     gbv_FItem_associatedBatch,     --32005946
                     in_billAccTRXset_id
                );*/
                --OSPRODUCT-1344
                pkg_db_object.sp_ba_object_bv_set
                (
                  in_session_id,
                  in_transaction_id,
                  v_fitem_rec.fitem_id,
                  gbv_FItem_associatedBatch,
                  in_billAccTRXset_id
                );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_rec.fitem_id,
                    pkg_db_constant.gbvCurrDisburseAmount,
                    v_fitem_rec.balance
               );--OSPRODUCT-3715

                pkg_os_datamart.sp_datamart_update_row
                (
                     in_session_id,
                     in_transaction_id,
                     v_fitem_rec.fitem_id,
                     v_datamart_tf
                );

                if v_session_control.gLogging_Full
                then
                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          'Payable fitem (id=<'|| v_fitem_rec.fitem_id ||'>) '||
                          'was tied to the disbursement batch '|| in_billAccTRXset_id
                     );
                end if;
                --

                v_payable_item_index     :=   v_payable_item_list.next(v_payable_item_index);

          end loop; -- v_payable_item_index is not null

     --
     -- 2.  If payable FItem list count is not > 0
     --

     else

          --
          -- a. Set the outcome as insufficient outcome and return
          --

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... The payable fitems list is zero  ' ||
                    ' This may be because Balance is not available on the FItems selected '

               );

          end if;

          io_action_outcome_id     :=   gOutcomeInsufficientBalance;

          return;

     end if; -- If payable fitem list as count >0

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_disburse_fitrx_create;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disb_fitrx_create_cashpost
--
--   %USAGE
--   The procedure implememnts the beggining of the 'Disbursement' flow initiated from Single Payment batch
--   This procedure will validate/confirm the FItems before disbursement process.
--   System will create the placeholder fitransactions for each selected fitem
--
--   Note: as part of the OSBILLIN-675 this sp replaces old sp_disb_fitems_create_cashpost. The sp_disb_fitems_create_cashpost was removed.
--
--   %ALGORITHM
--   1. Check the Billing Account status 37346
--      a. Terminate the disb.Batch processing if Billing Account status is 37346
--   2. Get selected payable items and set batch total amount
--   3. Create the placeholder FItransactions for each selected fitem
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_disb_fitrx_create_cashpost
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disb_fitrx_create_cashpost';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_account_status_37346_tf          boolean := false;

     v_batch_total_amount               number                                  :=   0;
     v_payable_item_list                t_fitem_list;
     v_payable_item_rec                 t_payable_fitem_rec;
     v_entry_method                     object_bv_value.business_variable_value%type;

begin

     --
     --  Check the Billing Account status 37346
     --
     -- PMADEV-337 Manual transactions should be enable if billing account suspended
     v_entry_method := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billAccTRXset_id, PKG_DB_OBJECT.gbv_FITrxSet_EntryType);

     if v_entry_method <> gBatchEntryMethod_Manual then
       sp_billing_acc_status_check (in_session_id, in_transaction_id,
              --
              in_billAccTRXset_id  => in_billAccTRXset_id,
              io_action_outcome_id => io_action_outcome_id,
              io_check_failed      => v_account_status_37346_tf
       );

       if v_account_status_37346_tf
       then

          return;   -- the Billing Account status is 37346

       end if;
     end if;

     sp_payable_fi_cashpost_get (in_session_id, in_transaction_id,
           --
           io_action_outcome_id            => io_action_outcome_id,
           io_payable_item_list            => v_payable_item_list,
           io_payable_item_rec             => v_payable_item_rec,
           out_batch_total_amount          => v_batch_total_amount
      );


     if io_action_outcome_id = gOutcomeNoSelectedRecord
     then
              return;
     end if;


     sp_disburse_fitrx_create  (in_session_id, in_transaction_id,
           --
           in_billAccTRXset_id      => in_billAccTRXset_id,
           io_action_outcome_id     => io_action_outcome_id,
           in_payable_item_list     => v_payable_item_list,
           in_payable_item_rec      => v_payable_item_rec,
           in_batch_total_amount    => v_batch_total_amount
     );

end sp_disb_fitrx_create_cashpost;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disb_fitrx_create_manual
--
--   %USAGE
--   The procedure implememnts the beggining of the 'Manual Disbursement' flow initiated from  Billing Account Summary
--   This procedure will validate/confirm the FItems before disbursement process.
--   System will create the placeholder fitransactions for each selected fitem
--
--   Note: as part of the OSBILLIN-675 this sp replaces old sp_disburse_fitems_create. The sp_disburse_fitems_create was removed.
--
--   %ALGORITHM
--   1. Check the Billing Account status 37346
--      a. Terminate the disb.Batch processing if Billing Account status is 37346
--   2. Get selected payable items and set batch total amount
--   3. Create the placeholder FItransactions for each selected fitem
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_disb_fitrx_create_manual
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_selected_list                   in             pkg_os_object.t_object_list default pkg_os_object.gnull_object_list
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disb_fitrx_create_manual';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_account_status_37346_tf          boolean := false;

     v_batch_total_amount               number                                  :=   0;
     v_payable_item_list                t_fitem_list;
     v_payable_item_rec                 t_payable_fitem_rec;
     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_entry_method                     object_bv_value.business_variable_value%type;

begin
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Billing Account Trx ID : '||in_billAccTRXset_id
          );

     end if;

     -- Set the batch entered by as current user
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_billAccTRXset_id,
          gbv_FITrxSetEnteredby,
          v_entered_by
     );

     --
     --  Check the Billing Account status 37346
     --
     -- PMADEV-337 Manual transactions should be enable if billing account suspended
     v_entry_method := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billAccTRXset_id, PKG_DB_OBJECT.gbv_FITrxSet_EntryType);

     if v_entry_method <> gBatchEntryMethod_Manual then
       sp_billing_acc_status_check   (in_session_id, in_transaction_id,
                    --
              in_billAccTRXset_id  => in_billAccTRXset_id,
              io_action_outcome_id => io_action_outcome_id,
              io_check_failed      => v_account_status_37346_tf
       );

       if v_account_status_37346_tf
       then
                return;   --      a. Terminate the disb.Batch processing if Billing Account status is 37346
       end if;
     end if;
     --
     -- 2. Get selected payable items and set batch total amount
     --
     sp_payable_fi_manual_get  (in_session_id, in_transaction_id,
          --
          in_billAccTRXset_id        => in_billAccTRXset_id,
          in_object_cache            => in_object_cache,
          io_action_outcome_id       => io_action_outcome_id,
          io_payable_item_list       => v_payable_item_list,
          io_payable_item_rec        => v_payable_item_rec,
          out_batch_total_amount     => v_batch_total_amount,
          in_selected_list           => in_selected_list
     );

     if io_action_outcome_id = gOutcomeNoSelectedRecord
     or io_action_outcome_id = gOutcomeMultiplePolicySelected
     then
              return;
     end if;

     --
     --   3. Create the placeholder FItransactions for each selected fitem
     --
     sp_disburse_fitrx_create  (in_session_id, in_transaction_id,
           --
           in_billAccTRXset_id      => in_billAccTRXset_id,
           io_action_outcome_id     => io_action_outcome_id,
           in_payable_item_list     => v_payable_item_list,
           in_payable_item_rec      => v_payable_item_rec,
           in_batch_total_amount    => v_batch_total_amount
     );

end sp_disb_fitrx_create_manual;
------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_fitem_create
--
--   %USAGE
--   This procedure creates the Fitem of type 'Debit', category 'Disbursement', under the customer billing account and its
--   offset entry under the Writing Company or carrier billing account.
--
--   This procedeure does not change status niehter of Disb.Batch nor of of the Disb.Transaction
--
--   %ALGORITHM
--   1. Get the Associated Payable FItem from the Disbursement FITransaction
--   2. Get the Payable FITem attribute values
--   3. Create FItem of type 'Debit' , category 'Disbursement' under customer billing account
--   4. Create FICHANGE of type 'CREATE' for the newly created disbursement Fitem
--   5. Set the 'Creator FIChange' reference for disbursement Fitem
--   6. Get Billing account of the v_offset_disb_fitem_id
--   7. Get the owner of the billing account the offset fitem (v_offset_disb_fitem_id) belongs to
--   8. Create FICHANGE of type 'CREATE' for the offset Fitem
--   9. Set the 'Creator FIChange' reference for the offset Fitem
--   10. Update datamart of Fitem, Offset FItem, FIChange , Offset FIChange, BillingAcounts
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_fitransaction_id                    in                 object.object_id%type,
------------------------------------------------------------------------------------------------------------------------
procedure sp_disburse_fitem_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_fitransaction_id                in             object.object_id%type,
     in_fitem_status                    in             lookup_list_value.lookup_enum%type,
     io_fitem_billingaccount_list       in out         t_fitem_billingaccount_tab    -- OSPRODUCT-11625
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_fitem_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_datamart_tf                      char(1)                                 := 'T';

     v_payable_fitem_id                 object.object_id%type;                         -- Payable Fitem associated with Disbursement FITransaction
     -- BV valuse of the Payable TItem
         v_payable_BillingAccount              object_bv_value.business_variable_value%type;
         v_payable_AssociatedPolicy             object_bv_value.business_variable_value%type;
         v_payable_AssociatedPolicyTRX          object_bv_value.business_variable_value%type;
         v_payable_BelongsTo                    object_bv_value.business_variable_value%type;
         v_payable_Balance                      object_bv_value.business_variable_value%type;
         v_payable_ultimate_temp_id             object_bv_value.business_variable_value%type;
     --

     v_disb_fitem_id                    object.object_id%type;  -- Disbursement Fitem to be created

     v_offset_disb_fitem_id             object.object_id%type;  -- Offset Fitem for the v_disb_fitem_id
     v_offset_disb_fitem_BA             object.object_id%type;  -- Billing Account the offset Fitem (v_offset_disb_fitem_id) belongs to
     v_offset_disb_fitem_belongs_to     object.object_id%type;  -- owner of the billing account the offset Fitem (v_offset_disb_fitem_id) belongs to

     v_fichange_id                      object.object_id%type;  -- FIChange for the v_disb_fitem_id
     v_offset_fichange_id               object.object_id%type;  -- FIChane for the  v_offset_disb_fitem_id
     v_payable_fitem_sub_cat_id         number;

begin


     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering to create disbursement FItem for FITransaction : '||in_fitransaction_id
          );
     end if;
     --
     -- 1. Get the Associated Payable FItem from the Disbursement FITransaction
     --
     v_payable_fitem_id       :=  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_fitransaction_id,gbv_FITrxRefAssociatedFItem);
     --
     -- 2. Get the Payable FITem attribute values
     --
     v_payable_BillingAccount      := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, v_payable_fitem_id);
     v_payable_AssociatedPolicy    := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_FItem_associatedPolicy);
     v_payable_AssociatedPolicyTRX := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_FItem_associatedPolicyTRX);
     v_payable_BelongsTo           := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_FItem_belongsTo);
     v_payable_ultimate_temp_id    := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, pkg_db_object.gbv_FItem_RefUltimateTempID); -- OSBILLING-628
     v_payable_fitem_sub_cat_id    := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, pkg_db_object.gbv_FItem_Subcategory); -- OSBILLING-628
     v_payable_Balance             := nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, pkg_db_constant.gbvCurrDisburseAmount),0);--OSPRODUCT-3715


     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. The Payable fitem is '||v_payable_fitem_id ||
               'Ultimate Tempplate ID ' || v_payable_ultimate_temp_id
          );
     end if;

     --
     -- 3. Create FItem of type 'Debit' , category 'Disbursement' under customer billing account
     --
     pkg_db_object.sp_fitem_create
     (
          in_session_id                           =>        in_session_id ,
          in_transaction_id                       =>        in_transaction_id,
          in_parent_object_id                     =>        v_payable_BillingAccount,
          out_fitem_id                            =>        v_disb_fitem_id, -- newly created disbursement FItem
          in_fitem_debit_credit                   =>        gFItemType_Debit,
          in_fitem_category                       =>        gFItem_Category_Disburse,
          in_fitem_subcategory                    =>        NVL(v_payable_fitem_sub_cat_id ,  gFItem_SubCategory_Refund) , -- OSBILLING-6765
          in_fitem_effective_date                 =>        to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_fitransaction_id), pkg_os_constant.DragonDateFormatDefault ),
          in_fitem_billing_status                 =>        gFItemBillStatus_Active,
          in_fitem_processing_status              =>        in_fitem_status,
          in_FItemRefPolicy                       =>        v_payable_AssociatedPolicy,
          in_FItemRefPolicyTxn                    =>        v_payable_AssociatedPolicyTRX,
          in_FItemRefEntityBelongsTo              =>        v_payable_BelongsTo,
          in_FItemRefAssWithFItrx                 =>        in_fitransaction_id,
          out_offset_FItem_id                     =>        v_offset_disb_fitem_id, -- offset Fitem for newly created disbursement FItem
          in_ultimate_template_id                 =>        v_payable_ultimate_temp_id -- OSBILLING-628
     );

     --
     -- 4. Create FICHANGE of type 'CREATE' for the newly created disbursement FItem
     --
     pkg_db_object.sp_fichange_create
     (
          in_session_id                      =>        in_session_id,
          in_transaction_id                  =>        in_transaction_id,
          in_parent_fitransaction_id         =>        in_fitransaction_id,
          out_fichange_id                    =>        v_fichange_id,    -- Creator FIChange for the v_disb_fitem_id
          in_fichange_action                 =>        gFIChange_Create,
          in_fichange_action_delta           =>        (v_payable_Balance*-1), -- inverted balance of the Payable Fitem
          in_fichange_ref_fitem              =>        v_disb_fitem_id,
          in_fichange_sum_include            =>        gFIChange_Yes,
          in_fichange_ref_pol                =>        v_payable_AssociatedPolicy,
          in_fichange_ref_pol_trx            =>        v_payable_AssociatedPolicyTRX,
          in_fichange_belongs_to             =>        v_payable_BelongsTo
     );

     --
     -- 5. Set the 'Creator FIChange' reference for disbursement Fitem
     --
     pkg_os_object_io.sp_object_bv_set (in_session_id, in_transaction_id,
             --
              v_disb_fitem_id,
              gbv_FItem_RefCreatrFIChnge,
              v_fichange_id
            );

     --
     -- 6. Get Billing account of the v_offset_disb_fitem_id
     --
     v_offset_disb_fitem_BA := pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, v_offset_disb_fitem_id);

     --
     -- 7. Get the owner of the billing account the offset fitem (v_offset_disb_fitem_id) belongs to
     --
     v_offset_disb_fitem_belongs_to := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, v_offset_disb_fitem_BA);

     --
     -- 8. Create FICHANGE of type 'CREATE' for the offset FItem
     --
     pkg_db_object.sp_fichange_create
     (
          in_session_id                      =>        in_session_id,
          in_transaction_id                  =>        in_transaction_id,
          in_parent_fitransaction_id         =>        in_fitransaction_id,
          out_fichange_id                    =>        v_offset_fichange_id, -- Creator FIChane for the  v_offset_disb_fitem_id
          in_fichange_action                 =>        gFIChange_Create,
          in_fichange_action_delta           =>        v_payable_Balance,     -- balance of the Pyable fitem
          in_fichange_ref_fitem              =>        v_offset_disb_fitem_id,
          in_fichange_sum_include            =>        gFIChange_Yes,
          in_fichange_ref_pol                =>        v_payable_AssociatedPolicy,
          in_fichange_ref_pol_trx            =>        v_payable_AssociatedPolicyTRX,
          in_fichange_belongs_to             =>        v_offset_disb_fitem_belongs_to
     );

     --
     -- 9. Set the 'Creator FIChange' reference for the offset Fitem
     --
     pkg_os_object_io.sp_object_bv_set (in_session_id, in_transaction_id,
             --
              v_offset_disb_fitem_id,
              gbv_FItem_RefCreatrFIChnge,
              v_offset_fichange_id
            );



     --
     --  10. Update datamart of Fitem, Offset FItem, FIChange , Offset FIChange, BillingAcounts
     --
     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
          --
          v_fichange_id,
          v_datamart_tf
     );

     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
          --
          v_offset_fichange_id,
          v_datamart_tf
     );

     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
          --
          v_disb_fitem_id,
          v_datamart_tf
     );

     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
          --
          v_offset_disb_fitem_id,
          v_datamart_tf
     );

     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
          --
          v_payable_BillingAccount,
          v_datamart_tf
     );

	-- OSPRODUCT-2113 - commented out to prevent deadlock
--     pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
--          --
--          v_offset_disb_fitem_BA,
--          v_datamart_tf
--     );

     if v_offset_disb_fitem_BA is not null then   --OSPRODUCT-11625

          if io_fitem_billingaccount_list.exists(v_offset_disb_fitem_BA)
          then

             if v_session_control.gLogging_Full then

                pkg_os_logging.sp_log
                (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Billing Account ID already exist in the list : '||v_offset_disb_fitem_BA
                );

             end if;

           else

             io_fitem_billingaccount_list(v_offset_disb_fitem_BA) := v_offset_disb_fitem_BA;

          end if;

     end if;

	-- OSPRODUCT-2113 - Removed datamart update with async refresh to prevent deadlock in non customer billing account batch.
	/*merge into billingaccount_datamart_update du  --OSPRODUCT-11625
     using (select
                 v_offset_disb_fitem_BA billing_account_id
            from
                 dual
           ) stg
     on (du.billing_account_id = stg.billing_account_id
         and
         du.process_timestamp is null
        )
     when not matched
     then
     insert
	(
	     billing_account_id,
	     entry_timestamp
	)
	values
	(
		stg.billing_account_id,
		sysdate
	);*/



end sp_disburse_fitem_create;
------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_trx_process
--
--   %USAGE
--
--   %ALGORITHM
--
-- 1. Get Biiling account ID and billing account owner of the Disb.Batch
-- 2. Get disb.Transactions of the the Disb.Batch
-- 3. Loop through every inProcess disb.Trx
--      3.1 Get the payable fitem id its attributes
--      3.2 Get the disb.Fitem
--      3.3 Process disb.Fitem
--            a. Create  FIChange Object of type CHANGE to settle the newly created disb.Fitem
--            b. Set disb.Fitem status = PROCESSED
--            c. Set disb. offset Fitem status = PROCESSED
--            d. Update the datamarts for disb.Fitesm, offset Fitems and their FIChange objects
--            e. Create FIChange Object of type CHANGE for payable Fitem
--            f. Update the Debit FIChange Datamart
--            g. Update the Payable FItem Datamart
--            h. Set disb.Transaction. Set status = PROCESSED, set process date
--            i.  Update datamart for the disb.Transaction and associated Policy
--  4. Set action outcome as OK
--
-- %PARAM
------------------------------------------------------------------------------------------------------------------------
procedure sp_disburse_trx_process
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_billAccTRXset_id           in             object.object_id%type,
     --in_object_cache               in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id          in out nocopy  outcome.outcome_id%type
     --in_current_date_time          in             date default null
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_trx_process';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_batch_parent_billing_acc_id      object.object_id%type;
     v_billaccount_Parent_id            object.object_id%type;

     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_datamart_tf                      char(1)                       :=   'T';

     v_t_disbTrx                        pkg_os_object.t_object_list;
     v_t_disb_fitem                     pkg_os_object.t_object_list;

     v_disb_fitem_id                    object.object_id%type;
     v_disb_offset_fitem_id             object.object_id%type;
     v_disb_CreatrFIChnge_id            object.object_id%type;
     v_disb_offset_CreatrFIChnge_id     object.object_id%type;

     v_disb_ChngeFIChnge_id             object.object_id%type;

     v_payable_fitem_id                 object.object_id%type;
     -- BV valuse of the Payable TItem
     v_payable_AssociatedPolicy         object_bv_value.business_variable_value%type;
     v_payable_AssociatedPolicyTRX      object_bv_value.business_variable_value%type;
     v_payable_balance                  object_bv_value.business_variable_value%type;
     v_payable_paid_amount              object_bv_value.business_variable_value%type;
     --
     v_payable_ChngeFIChnge_id          object.object_id%type;

     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           pkg_db_cash_apply.t_fitem_installment_tab;
     v_fitem_installment_index          number;
     --OSBILLING-6705 starts
     v_term_payer_list                  PKG_DB_MULTIPAYER.t_payer_tab;
     v_src_policy_term_list             pkg_db_cash_apply.t_policy_term_list;
     v_policy_term_payer_id             object.object_id%type;
     v_policy_term_indx                 number;
     v_policy_id                        object.object_id%type;
     v_polterm_id                       object.object_id%type;
     --OSBILLING-6705 ends
      v_prevDisbBatch                    object_bv_value.business_variable_value%type ;--OSPRODUCT-3175

     v_payer_idx                        number;  --OSPRODUCT-6034
     v_multipayer_enabled_tf            boolean; --OSPRODUCT-6034
     v_disb_PrevFIChnge_id              object.object_id%type; --UTPRODUCT-4812
begin
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
               '|||||| Entering Batch ID : '||in_billAccTRXset_id
          );
     end if;


     v_fitem_installment_list.delete;

     -- 1. Get Biiling account ID and billing account owner of the Disb.Batch
     --
     v_batch_parent_billing_acc_id  := pkg_os_object.fn_object_parent_get ( in_session_id, in_transaction_id, in_billAccTRXset_id);

     v_billaccount_Parent_id        := pkg_os_object.fn_object_parent_get  ( in_session_id, in_transaction_id, v_batch_parent_billing_acc_id);


     -- 2. Get disb.Transactions of the the Disb.Batch
     --
     v_t_disbTrx.delete;

     pkg_os_object_search.sp_object_children_of_type_get (in_session_id, in_transaction_id,
             --
             in_billAccTRXset_id, -- parent dist.Batch
             gObjType_FITransaction,
             v_t_disbTrx,               -- disb.Transaction container
             null,
             false
            );

     -- 3. Loop through every inProcess disb.Trx
     --
     for trx_idx in 1..v_t_disbTrx.count
     loop

          if pkg_os_object.fn_object_state_get(in_session_id, in_transaction_id,  v_t_disbTrx(trx_idx)) = gFITrxStatus_InProcess
          then
               --
               --      3.1 Get the payable fitem id its attributes
               --
               begin

                    v_payable_fitem_id :=  pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,
                                               --
                                               v_t_disbTrx(trx_idx),
                                               gbv_FITrxRefAssociatedFItem
                                              );
                    -- Get the Payable FITem attribute values
                    --
                    v_payable_AssociatedPolicy    := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_FItem_associatedPolicy);
                    v_payable_AssociatedPolicyTRX := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_FItem_associatedPolicyTRX);

                    v_payable_balance             := nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, pkg_db_constant.gbvCurrDisburseAmount),0);--OSPRODUCT-3715
                    v_payable_paid_amount         := nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payable_fitem_id, gbv_fitem_paid_amount),0);
                    v_prevDisbBatch               := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_payable_fitem_id, pkg_db_constant.gbvPrevDisburseBatchID);--OSPRODUCT-3715

                    if v_session_control.gLogging_Full
                    then
                        pkg_os_logging.sp_log (in_session_id, in_transaction_id, v_procedure_name,
                             'Inside the loop of disbersement FITRx: '||v_t_disbTrx(trx_idx)||
                             '. Billing Account: ' ||   v_batch_parent_billing_acc_id||
                             '. Disb.Batch: '||in_billAccTRXset_id
                             );
                    end if;


               end;


               --      3.2 Get the disb.Fitem
               --
               begin

                    v_t_disb_fitem.delete;
                    --
                    --    a.  Get all the Fitems that refers to the disb.Trx
                    --
                    pkg_os_object_search.sp_object_referencers_get (in_session_id, in_transaction_id,
                          --
                          v_t_disbTrx(trx_idx),
                          pkg_db_object.gbv_FItem_RefAssWithFItrx,
                          v_t_disb_fitem
                         );

                    --    b. Take the 'Debit' Fitem , this is the disbersement Fitem.
                    --
                    for i in 1..v_t_disb_fitem.count
                    loop
                         if pkg_os_object_io.fn_object_bv_get
                             (in_session_id,
                              in_transaction_id,
                              v_t_disb_fitem(i),
                              pkg_db_object.gbv_fitem_debit_credit) = gFItemType_Debit
                         then

                              v_disb_fitem_id := v_t_disb_fitem(i);
                              exit; -- exit the loop

                         end if;


                    end loop;


                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log( in_session_id, in_transaction_id, v_procedure_name,
                             'The disbursement FItem found under the Customer Billing Account: <'|| v_disb_fitem_id ||'>'
                            );
                    end if;


               end;


               --
               --      3.3 Process disb.Fitem
               --
               if v_disb_fitem_id is not null
               then

                    v_disb_CreatrFIChnge_id        :=  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id,
                                                          --
                                                          v_disb_fitem_id,
                                                          gbv_FItem_RefCreatrFIChnge
                                                     );
                    --
                    -- Get the offset disbursement FItem
                    --
                    v_disb_offset_fitem_id :=  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id,
                                                          --
                                                          v_disb_fitem_id,
                                                          gbv_FItem_RefOffsetFitem
                                                     );

                    v_disb_offset_CreatrFIChnge_id :=  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id,
                                                          --
                                                          v_disb_offset_fitem_id,
                                                          gbv_FItem_RefCreatrFIChnge
                                                      );
                    --
                    --  a. Create  FIChange Object of type CHANGE to settle the newly created disb.FItem
                    --

                    begin

                         pkg_db_object.sp_fichange_create
                         (
                           in_session_id                      =>        in_session_id,
                           in_transaction_id                  =>        in_transaction_id,
                           in_parent_fitransaction_id         =>        v_t_disbTrx(trx_idx),
                           out_fichange_id                    =>        v_disb_ChngeFIChnge_id,
                           in_fichange_action                 =>        gFIChange_Change,
                           in_fichange_action_delta           =>        v_payable_balance,
                           in_fichange_ref_fitem              =>        v_disb_fitem_id,
                           in_fichange_sum_include            =>        gFIChange_Yes,
                           in_fichange_process_date           =>        to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id, v_t_disbTrx(trx_idx)),pkg_os_constant.DragonDateFormatDefault),
                           in_fichange_ref_pol                =>        v_payable_AssociatedPolicy,
                           in_fichange_ref_pol_trx            =>        v_payable_AssociatedPolicyTRX,
                           in_fichange_belongs_to             =>        v_billaccount_Parent_id
                         );

                         --            b. Set disb.Fitem status = Processed
                         --
                         --OSPRODUCT-16907
                         pkg_db_object.sp_ba_object_bv_set ( 
                                                           in_session_id, 
                                                           in_transaction_id,
                                                           v_disb_fitem_id,
                                                           gbv_Fitem_processing_status,
                                                           gFitemStatus_Processed
                                                           );


                         --            c. Set disb. offset Fitem status = Processed
                         --
                         --OSPRODUCT-16907
                         pkg_db_object.sp_ba_object_bv_set ( 
                                                           in_session_id, 
                                                           in_transaction_id,
														   v_disb_offset_fitem_id,
                           				                   gbv_Fitem_processing_status,
                           				                   gFitemStatus_Processed
                         				                   );


                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log (in_session_id,in_transaction_id,v_procedure_name,
                                     '............ Created  FIChange Object of type Change for disb.Fitem. ID: '||v_disb_ChngeFIChnge_id
                                );
                         end if;
                         
                          --UTPRODUCT-4812
                         v_disb_PrevFIChnge_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_disb_ChngeFIChnge_id,32856640 );
                         
                         if v_disb_PrevFIChnge_id is not null 
                         then 
                                                                  
                                 pkg_os_object_io.sp_object_bv_set
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_disb_PrevFIChnge_id,
                                       pkg_db_object.gbv_FIChangeProcessDate,
                                       pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_disb_ChngeFIChnge_id,pkg_db_object.gbv_FIChangeProcessDate )
                                  );
                                  
                                  pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_disb_PrevFIChnge_id, v_datamart_tf);
                                  
                          end if;
                          --UTPRODUCT-4812


                    end;

                   --
                   --            d. Update the datamarts for disb.Fitesm, offset Fitems and their FIChange objects
                   --
                   begin

                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                          --
                          v_disb_ChngeFIChnge_id,
                          v_datamart_tf
                         );

                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                          --
                          v_disb_fitem_id,
                          v_datamart_tf
                         );

                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                          --
                          v_disb_offset_fitem_id,
                          v_datamart_tf
                         );

                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                          --
                          v_disb_CreatrFIChnge_id,
                          v_datamart_tf
                         );

                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                          --
                          v_disb_offset_CreatrFIChnge_id,
                          v_datamart_tf
                         );

                         if v_session_control.gLogging_Full
                         then
                          pkg_os_logging.sp_log ( in_session_id, in_transaction_id, v_procedure_name,
                               '............ Updated the data marts of  Fichange and Disbursement Fitem'
                          );
                         end if;

                   end;


                   --
                   --            e. Create FIChange Object of type CHANGE for payable Fitem
                   --
                   begin

                         pkg_db_object.sp_fichange_create
                         (
                           in_session_id                      =>           in_session_id,
                           in_transaction_id                  =>           in_transaction_id,
                           in_parent_fitransaction_id         =>           v_t_disbTrx(trx_idx),
                           out_fichange_id                    =>           v_payable_ChngeFIChnge_id,
                           in_fichange_action                 =>           gFIChange_Change,
                           in_fichange_action_delta           =>           (v_payable_balance*-1),
                           in_fichange_ref_fitem              =>           v_payable_fitem_id,
                           in_fichange_sum_include            =>           gFIChange_Yes,
                           in_fichange_process_date           =>           to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_t_disbTrx(trx_idx)),pkg_os_constant.DragonDateFormatDefault),
                           in_fichange_ref_pol                =>           v_payable_AssociatedPolicy,
                           in_fichange_ref_pol_trx            =>           v_payable_AssociatedPolicyTRX,
                           in_fichange_belongs_to             =>           v_billaccount_Parent_id
                         );

                               if v_prevDisbBatch is null
                         then
                              v_prevDisbBatch := in_billAccTRXset_id ;
                         else
                              v_prevDisbBatch := v_prevDisbBatch||','|| in_billAccTRXset_id;
                         end if;--OSPRODUCT-3715

                         v_bv_table.delete;

                         v_bv_table (gbv_fitem_paid_amount                      ).business_variable_value := v_payable_paid_amount + (v_payable_balance*-1);
                         v_bv_table (gbv_fitem_earned_amount              ).business_variable_value := 0;
                         v_bv_table (gbv_fitem_unearned_amount            ).business_variable_value := 0;
                         v_bv_table (gbv_FItem_associatedBatch                  ).business_variable_value := null;--OSPRODUCT-3715
                         v_bv_table (pkg_db_constant.gbvPrevDisburseBatchID     ).business_variable_value :=  v_prevDisbBatch;--OSPRODUCT-3715
                         v_bv_table (pkg_db_constant.gbvPrevDisburseAmount      ).business_variable_value := nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_payable_fitem_id, pkg_db_constant.gbvPrevDisburseAmount),0) + nvl(pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_payable_fitem_id, pkg_db_constant.gbvCurrDisburseAmount),0);--OSPRODUCT-3715
                         v_bv_table (pkg_db_constant.gbvCurrDisburseAmount      ).business_variable_value := null;--OSPRODUCT-3715

                         --            f. Set payable Fitem balance and status = Processed
                         --
                         -- Starts: UTXPRODUCT-502
                         /* 
                         pkg_os_object_io.sp_object_bv_set( in_session_id, in_transaction_id,
                          --
                          v_payable_fitem_id,
                          v_bv_table
                         );
                         */
                         pkg_db_object.sp_ba_object_bv_set
                         ( 
                              in_session_id, 
                              in_transaction_id,
                              v_payable_fitem_id,
                              v_bv_table
                         );                         
                         --Ends : UTXPRODUCT-502
                         --
                         --            g. Update the Debit FIChange Datamart
                         --
                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                           --
                           v_payable_ChngeFIChnge_id,
                           v_datamart_tf
                         );

                         --            h. Update the Payable FItem Datamart
                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                           --
                           v_payable_fitem_id,
                           v_datamart_tf
                         );

                         --
                         --  Get the Installment ID from the Target FItem
                         --

                         select
                              installment_id
                         into
                              v_fitem_installment_id
                         from
                              dragon_fitem
                         where
                              fitem_id = v_payable_fitem_id;


                         --
                         --  Check if this Installment already exists in the list
                         --  If not, then add it to the List
                         --

                         if v_fitem_installment_id is not null
                         then

                              if v_fitem_installment_list.exists(v_fitem_installment_id)
                              then

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '......... Installment ID already exist in the list : '||v_fitem_installment_id
                                        );

                                   end if;

                              else

                                   v_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;

                              end if;

                         end if;


                   end;


                   --
                   --            i. Update disb.Transaction. Set status = PROCESSED, set process date
                   --
                   begin
                         v_bv_table.delete;

                         v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState ).business_variable_value := gFITrxStatus_Processed;
                         v_bv_table (gbv_FITransaction_ProcessDate            ).business_variable_value := to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_billAccTRXset_id), pkg_os_constant.DragonDateFormatDefault );

                         -- Start: UTXPRODUCT-502
                         /*
                         pkg_os_object_io.sp_object_bv_set( in_session_id, in_transaction_id,
                          --
                          v_t_disbTrx(trx_idx),
                          v_bv_table
                         );
                         */
                         pkg_db_object.sp_ba_object_bv_set
                         ( 
                              in_session_id, 
                              in_transaction_id,
                              v_t_disbTrx(trx_idx),
                              v_bv_table
                         );
                         -- Ends: UTXPRODUCT-502

                         --
                         -- OSBILLING-767 Fetch and set the Accoutning Period for FItransaction
                         --
                         pkg_os_object_io.sp_object_bv_set
                         (
                         in_session_id,
                         in_transaction_id,
                         v_t_disbTrx(trx_idx),
                         pkg_db_object.gbv_FITrx_AccntingPeriod,
                         pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_t_disbTrx(trx_idx))
                         );


                         --            j.  Update datamart for the disb.Transaction and associated Policy
                         --
                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                           --
                           v_t_disbTrx(trx_idx),
                           v_datamart_tf
                         );

                         --                 Update the Policy Datamart
                         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id,
                           --
                           v_payable_AssociatedPolicy,
                           v_datamart_tf
                         );
                   end;


               end if; -- if debit disb.FItem exists

          end if;  -- if disb.Trx status = gFITrxStatus_InProcess

     end loop; -- for every disb.Trx

     --
     --  Update the Datamart of all unique Installments associated with this Cash Apply process
     --
     v_src_policy_term_list.delete; --OSBILLING-6705

     if v_fitem_installment_list.count > 0
     then

          v_fitem_installment_index := v_fitem_installment_list.first;

          while v_fitem_installment_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updating the Datamart for Installment ID: '
                         || v_fitem_installment_list(v_fitem_installment_index)
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_installment_list(v_fitem_installment_index),
                    v_datamart_tf
               );

               --OSBILLING-6705 starts
               v_polterm_id := pkg_os_object_search.fn_object_get_parent_of_type
                               (
                                   in_session_id,
                                   in_transaction_id,
                                   v_fitem_installment_list(v_fitem_installment_index),
                                   PKG_DB_OBJECT.gObjType_PolicyTerm
                               );
               if v_polterm_id is not null
               then
                    if not v_src_policy_term_list.exists(v_polterm_id)
                    then
                         v_src_policy_term_list(v_polterm_id).policy_term := v_polterm_id;
                    end if;
               end if;
               --OSBILLING-6705 ends
               v_fitem_installment_index := v_fitem_installment_list.next(v_fitem_installment_index);

          end loop;
     end if;
     --OSBILLING-6705 starts
     v_policy_term_indx := v_src_policy_term_list.first ;

     while(v_policy_term_indx is not null)
     loop
          v_term_payer_list.delete;
          v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                         (
                              in_session_id,
                              in_transaction_id,
                              v_src_policy_term_list(v_policy_term_indx).policy_term,
                              pkg_os_constant.gObjType_Policy
                         );
          -- Get a list of payers from Policy Term level
          --
          pkg_db_multipayer.sp_policy_term_payers_get
          (
               in_session_Id           =>    in_session_id,
               in_transaction_id       =>    in_transaction_id,
               in_policy_term_id       =>    v_src_policy_term_list(v_policy_term_indx).policy_term,
               io_payer_list           =>    v_term_payer_list,             -- indexed list of payers. List of payer of payer records r_payer inedexed by  in_index_by.
               in_print_list           =>    'Y',
               in_index_by             =>    pkg_db_multipayer.g_PayerGet_idx_BilingAccount -- index by Billing Account ID
          );
          if v_session_control.gLogging_Full
          then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......Count of Payers :' || v_term_payer_list.count
          );
          end if;
          --OSPRODUCT-6034 starts
          /*if v_term_payer_list.exists(v_billaccount_Parent_id)
          then
               v_policy_term_payer_id := v_term_payer_list(v_billaccount_Parent_id).PTPayer_object_id;
          else
               v_policy_term_payer_id := null;
          end if;
          if v_session_control.gLogging_Full
          then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......Calling sp_set_payables_amount from credit transfer v_policy_id :' ||v_policy_id||
               ' policy term id:' || v_src_policy_term_list(v_policy_term_indx).policy_term ||
               ' v_policy_term_payer_id :' || v_policy_term_payer_id
          );

          end if;*/



          v_multipayer_enabled_tf :=    pkg_db_multipayer.fn_multipayer_mode_tf
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_src_policy_term_list(v_policy_term_indx).policy_term
                                        );

          if v_multipayer_enabled_tf
          then

               v_payer_idx := v_term_payer_list.first;

               while v_payer_idx is not null
               loop

                    pkg_db_billing_payable.sp_set_payables_amount
                    (
                         in_session_id,
                         in_transaction_id,
                         v_policy_id,
                         io_action_outcome_id,
                         null,
                         null,
                         in_policy_term_payer_id  =>  v_term_payer_list(v_payer_idx).PTPayer_object_id , -- #MP
                         in_policy_term_id        =>  v_src_policy_term_list(v_policy_term_indx).policy_term
                    );

                    v_payer_idx := v_term_payer_list.next(v_payer_idx);

               end loop;

          else
               pkg_db_billing_payable.sp_set_payables_amount
               (
                    in_session_id,
                    in_transaction_id,
                    v_policy_id,
                    io_action_outcome_id
               );

          end if;

          --OSPRODUCT-6034 ends

          v_policy_term_indx := v_src_policy_term_list.next(v_policy_term_indx);

     end loop;


     --OSBILLING-6705 ends

     -- 4. Set action outcome as OK
     --
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

-- OSBILLING-5113
exception
     when others
     then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Error: when executing Disbursement workflow using ' ||
               ' User Session ID: ' || in_session_id ||
               ' Transaction ID: ' || in_transaction_id ||
               ' BillingAccountTransactionID :' || in_billAccTRXset_id ||
               ' Error Msg: '||sqlerrm ||
               ' Stack:' || dbms_utility.format_call_stack
          );
          io_action_outcome_id := OutcomeBillingTrxProcessFailed;

end sp_disburse_trx_process;

-----------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_batch_confirm
--
--   %USAGE
--   This procedure will verify if the Disbursement Batch for any security queues . If they are no security queue then process the disbursement batch.
--   The sp_disburse_batch_confirm is called when the Confirm button is clicked on the  "Billing Batch | Confirmation Summary" page
--
--   Note: as part of the OSBILLIN-675 this sp replaces old sp_disburse_payables_confirm. The sp_disburse_payables_confirm was removed.
--
--   %ALGORITHM
--  1. Get object state and the security trigger status
--
--  2. Check if Disbursement transaction can be processed
--    2.1 If the batch state is REFERRED and security status is reviewed
--      a. then it is the 'Release' workflow and not required to verify security triggers. Transactions can be processed.
--           set  v_process_billing_trx_tf  = 'T'
--    2.2 else (batch state is not REFERRED) it is a new Disbursement batch workflow
--      a. Call the Security Triggers validation process. This will determine if transactions under the Disb.Batch can be processed
--          (the  v_process_billing_trx_tf is set here)
--
--   3. if Disb.Transactions can be processed  (v_process_billing_trx_tf  = 'T')
--
--     Custom logic set a flag to skip the RequestSentToAP step and process the disb.Batch
--     3.1 Analyze disbursement profile and Disbursemend mode before processing Disbursement Transactions
--        a. calculate the status for Disb.Fitems
--        b. calculate the process flag for Disb.Fitems
--
--     3.2 Loop through each InPROCESS-Disb.Transaction under the Disb.Batch
--        a. Invoke the SP_DISBURSE_FITEM_CREATE to create the Disbursemnt Fitem
--
--     3.3 if at least one Disb.Transaction exists under the Disb.Batch
--        a. if the FItem process flag (3.1.b) is true
--          i. Invoke the SP_DISBURSE_TRX_PROCESS to process the disbursement
--          ii. set Disb.Batch status as PROCESSED
--        b. else (the Fitem process flag is false (3.1.b)
--          i. set Disb.Batch status as RequestAP
--
--        c. set the security status of the Disb.Batch as RELEASED
--        d. set the outcome as OK
--
--     3.4 (no Disb.Transaction exists under the Disb.Batch)
--        a. set Disb.Batch status as DELETED
--        b. set the security status of the Disb.Batch as RELEASED
--        c. set the outcome as NoFitransactionExists
--
--   4. else (cannot process Disb. Transactions  due to security reason)
--     4.1 set Disb.Batch status as REFERRED
--     4.2 set the security status of the Disb.Batch as NEW
--     4.3 set the outcome as SecurityTriggerExists
--
--   5. Set BV values for Disb.Batch
--   6. Update datamart for Disb.Batch
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billacctrxset_id                    in                 object.object_id%type,
--   in_object_cache                    in             pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type
--   in_current_date_time               in             date default null

--   2015/07/15 Cheryl osbilling-1057 changed the outcome in 3.3 if request sent to AP
-----------------------------------------------------------------------------------------------------------------------
procedure sp_disburse_batch_confirm
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null
)as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_batch_confirm';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     --v_disburse_profile                 object.object_id%type;
     v_security_status                  number;
     v_object_state                     number;
     v_is_fitrx_rec_found               boolean default false;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_datamart_tf                      char(1)                            :=   'T';
     v_bv_table                         pkg_os_object_io.t_bv_table;
     --v_disburse_mode                    lookup_list_value.lookup_enum%type;
     v_fitem_status                     lookup_list_value.lookup_enum%type;
     v_process_flag                     boolean default false;

     v_t_disbTrx                        pkg_os_object.t_object_list;
     v_pmnt_settlement_flag             object_bv_value.business_variable_value%type;
	 v_task_associated_obj_amt          varchar2(500);  --OSPRODUCT-1141
     v_task_id                          object.object_id%type; --OSPRODUCT-1141

     v_fitem_billingaccount_list        t_fitem_billingaccount_tab;  --OSPRODUCT-11625
     v_fitem_ba_list_index              number;

     v_action_outcome_id                outcome.outcome_id%type; -- UTPRODUCT-4877           

begin

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name,
               '|||||| Entering the procedure to confirm the disbursemnt batch : '||in_billacctrxset_id
          );
     end if;

     --
     --  1. Get object state and the security trigger status
     --
     v_object_state   :=  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id,
                                  --
                                  in_billacctrxset_id,
                                  pkg_os_constant_bv.gbv_GenObjObjectState
                                 );

     v_security_status := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id,
                                  --
                                  in_billacctrxset_id,
                                  pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus
                                 );

     v_pmnt_settlement_flag := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_billacctrxset_id,
                                    gbv_BATrxSet_PmntCollctedbySrc
                               );
     --
     --  2. Check if Disbursement transaction can be processed
     --
     if v_object_state = gBatchStatus_Referred
        and
        v_Security_status = gSecurityStatus_Review
     then
          --    2.1 If the batch state is REFERRED and security status is reviewed
          --      a. then it is the 'Release' workflow and not required to verify security triggers. Transactions can be prcessed.
          --
          v_process_billing_trx_tf := 'T';

     else
          --    2.2 else (batch state is not REFERRED) it is a new Disbursement batch workflow
          --      a. Call the Security Triggers validation process. This will determine if transactions under the Disb.Batch can be processed
          --
          pkg_db_security_trigger.sp_process_security_triggers
          (
               in_session_id                 =>        in_session_id,
               in_transaction_id             =>        in_transaction_id,
               in_object_cache               =>        in_object_cache,
               in_billacc_trx_set_id         =>        in_billacctrxset_id,
               io_action_outcome_id          =>        io_action_outcome_id,
               in_current_date_time          =>        in_current_date_time,
               io_process_billing_trx_tf     =>        v_process_billing_trx_tf
          );

     end if;

     --   3. if Disb. Transactions can be processed due to security reason
     if (v_process_billing_trx_tf = 'T')
     then

          begin

               --     3.1 Analyze disbursement profile and Disbursemend mode before processing Disbursement Transactions
               --
               /*pkg_db_functions.sp_disb_batch_process_flag_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_billacctrxset_id,
                    out_process_flag      =>  v_process_flag,
                    out_fitem_status      =>  v_fitem_status
               );*/

               v_fitem_status      :=   pkg_db_billing_payable.gFitemStatus_ReqSentToAP;
               v_process_flag      :=   false;

               --     3.2 Loop through each InPROCESS-Disb.Transaction under the Disb.Batch
               --        a. Invoke the SP_DISBURSE_FITEM_CREATE to create the Disbursement FItem
               --
               begin

                    v_t_disbTrx.delete;
                    --
                    --   Get disb.Transactions of the the Disb.Batch
                    --
                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billAccTRXset_id, -- parent dist.Batch
                         gObjType_FITransaction,
                         v_t_disbTrx,               -- disb.Transaction container
                         null,
                         false
                    );

                    --
                    --   Loop through InProcess disb.Transaction
                    --

                    for trx_idx in 1..v_t_disbTrx.count
                    loop

                         if pkg_os_object.fn_object_state_get(in_session_id, in_transaction_id,  v_t_disbTrx(trx_idx)) = gFITrxStatus_InProcess
                         then

                              v_is_fitrx_rec_found     :=   true;
                              --
                              --  Call the sp_disburse_fitem_create to create the Disbursemnt FItem
                              --
                              sp_disburse_fitem_create
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  v_t_disbTrx(trx_idx),
                                  v_fitem_status,
                                  v_fitem_billingaccount_list    --OSPRODUCT-11625
                              );

                              --GCNA Merge
                              --GCNA-1080 set current transaction reference for billing trx
                              pkg_os_object_io.sp_object_bv_set
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    in_billacctrxset_id,
                                    29743646,
                                    v_t_disbTrx(trx_idx)
                              );
                              --GCNA Merge
                         end if;

                    end loop;

                    if v_fitem_billingaccount_list.count > 0    --OSPRODUCT-11625
                    then

                        v_fitem_ba_list_index := v_fitem_billingaccount_list.first;

                        while v_fitem_ba_list_index is not null
                        loop

                             if v_session_control.gLogging_Full then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '...... Updating the Datamart for Billing Account ID: '
                                       || v_fitem_billingaccount_list(v_fitem_ba_list_index)
                                  );

                             end if;

                             merge into billingaccount_datamart_update du     --OSPRODUCT-11625 Commented
                             using (select
                                     v_fitem_billingaccount_list(v_fitem_ba_list_index) billing_account_id
                                  from
                                     dual
                                ) stg
                             on (du.billing_account_id = stg.billing_account_id
                                  and
                                  du.process_timestamp is null
                                 )
                             when not matched
                             then
                             insert
                                (
                                    billing_account_id,
                                     entry_timestamp
                                )
                             values
                                (
                                     stg.billing_account_id,
                                     sysdate
                                );



                             v_fitem_ba_list_index := v_fitem_billingaccount_list.next(v_fitem_ba_list_index);

                        end loop;

                    end if;

               end;

               --  3.3 if at least one Disb.Transaction exists under the Disb.Batch
               --
               if v_is_fitrx_rec_found
               then
                    begin

                         --  a. if the FItem process flag (3.1.b) is true or the payment is already settled
                         if /*v_process_flag
                            or*/ -- Removed the condition as it is set to False above
                            v_pmnt_settlement_flag = gPaymentSettled_Yes
                         then
                              --
                              -- i. Invoke the sp_disburse_trx_process to process the disbursement
                              --

                              -- OSBILLING-3884
                              pkg_db_object.sp_billing_acct_trx_process
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billAccTRXset_id,    -- BillingAccountTransactionSet ID
                                   in_object_cache,
                                   io_action_outcome_id
                              );

                              /*--OSBILLING-3884
                               sp_disburse_trx_process
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_billAccTRXset_id,
                                    --in_object_cache,
                                    io_action_outcome_id
                               );
                               --
                               --          ii. set Disb.Batch status as PROCESSED
                               --
                               v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;
                               --
                               -- OSBILLING-1816 : persist Billing Account Total Balance
                               --
                               v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                                     (
                                                                                                                          in_session_id,
                                                                                                                          in_transaction_id,
                                                                                                                          pkg_os_object.fn_object_parent_get
                                                                                                                          (
                                                                                                                               in_session_id,
                                                                                                                               in_transaction_id,
                                                                                                                               in_billAccTRXset_id
                                                                                                                          ),
                                                                                                                          pkg_db_object.gbv_BillAcc_TotalBalance
                              --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
                              --Need to ask as above code is uncommented in gcna                                                                                                           );

                              */

                         else
                              -- b. else (the Fitem process flag is false (3.1.b)
                              --
                              --          i. set Disb.Batch status as RequestAP
                              --
                              v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := pkg_db_object.gBatchStatus_RequestAP;

                         end if;
                         --
                         --        c. set the security status of the Disb.Batch as RELEASED
                         --
                         v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;
                         --
                         --        d. set the outcome as OK
                         --
                         io_action_outcome_id     :=   pkg_os_constant.gOutcome_OK;
                    end;

               else --  3.4 (no Disb.Transaction exists under the Disb.Batch)

                    begin
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...There are no FITransactions under the disbursement batch to process'
                              );

                         end if;
                         --        a. set Disb.Batch status as DELETED
                         --        b. set the security status of the Disb.Batch as RELEASED
                         --        c. set the outcome as NoFitransactionExists
                         v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Deleted;
                         v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;
                         v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ProcessDate).business_variable_value := to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,in_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault);  --OSBILLING-7829

                         io_action_outcome_id     :=   gOutcomeNoFitransactionExists;  --47246

                    end;

               end if;

          end;

     else
          --   4. else (cannot process Disb. Transactions due to security reason)
          begin

               --
               --  Set the status of Disbursement Batch as 'Referred'
               --
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Security rules voilated by transactions'
                    );

               end if;

               --     4.1 set Disb.Batch status as REFERRED
               --     4.2 set the security status of the Disb.Batch as NEW
               --     4.3 set the outcome as SecurityTriggerExists
               --
               v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Referred;
               v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_New;
               io_action_outcome_id := gOutcomeSecurityTriggerExists;
               -- io_action_outcome_id := pkg_os_constant.gOutcome_OK;

		  --OSPRODUCT-1141 start

          v_task_associated_obj_amt:= pkg_os_object_io.fn_object_bv_get
                                      (in_session_id,
                                      in_transaction_id,
                                      in_billAccTRXset_id,
                                      PKG_DB_BILLING.gbv_FITrxSetTotalAmount);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'in_session_id '||in_session_id|| 'in_transaction_id '||in_transaction_id||'in_billAccTRXset_id '||in_billAccTRXset_id||
                     'v_task_associated_obj_amt '||v_task_associated_obj_amt
                );

          end if;

          begin
               select task_id
               into v_task_id
               from dragon_task
               where task_object_id=in_billAccTRXset_id
               and task_type_id=gbv_TaskTypeID_SecTrigger;
          exception
               when others then
               v_task_associated_obj_amt:=0;
          end;


          pkg_os_object_io.sp_object_bv_set
         (
          in_session_id,
          in_transaction_id,
          v_task_id,
          gbv_TaskAssociatedObjValue, --Task Associated Object Value
          v_task_associated_obj_amt
          );

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_task_id,
               v_datamart_tf
          );
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Datamart updated for the task id ' ||v_task_id
                );

          end if;
     --OSPRODUCT-1141 end

          end;

     end if;
     --
     --   5. Set BV values for Disb.Batch
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_billAccTRXset_id,
          v_bv_table
     );

     --
     -- OSBILLING-767 Fetch and set the Accoutning Period for BillingAccounTTrxSet
     --

     /* OSBILLING-3884
          if ( io_action_outcome_id = pkg_os_constant.gOutcome_OK)
          then
                pkg_os_object_io.sp_object_bv_set
                (
                    in_session_id,
                    in_transaction_id,
                    in_billAccTRXset_id,
                    pkg_db_object.gbv_FITrxSet_AccntingPeriod,
                    pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,in_billAccTRXset_id)
                );
          end if;
          --
          --   6. Update datamart for Disb.Batch
          --
          pkg_os_datamart.sp_datamart_update_row  (in_session_id, in_transaction_id,
               --
               in_billAccTRXset_id,
               v_datamart_tf
          );

      OSBILLING-3884 */

      -- OSBILLING-4944
     if not v_process_flag then

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_billAccTRXset_id,
               v_datamart_tf
          );

          --OSPRODUCT-12721_1
          --Call to Document Processing
          pkg_db_object.sp_billing_doc_processing
          (
               in_session_id,
               in_transaction_id,
               in_billAccTRXset_id,    
               v_action_outcome_id -- io_action_outcome_id  --  UTPRODUCT-4877
          );

          -- UTPRODUCT-4877 Start
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Document Processing Outcome : ' ||v_action_outcome_id ||
                    ': Outcome :'  ||io_action_outcome_id 
                );

          end if;
          -- UTPRODUCT-4877 Ends

     end if;

end sp_disburse_batch_confirm;
-----------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_batch_process
--
--   %USAGE
--   Final step in the disbursement flow. The procedure processes disb.Transactions and mark the disb.Batch as PROCESSED.
--
--   Note: as part of the OSBILLIN-675 this sp replaces old sp_disburse_fitems. The sp_disburse_fitems was removed.
--
--   %ALGORITHM
--
--   1. Get Biiling account ID of the Disb.Batch
--   2. Process disb. Transaction (CALL THE sp_disburse_trx_process)
--   3. Set the Batch Status to Processed and process date
--   4. Update the dis.Batch Datamart
--   5. Update the Billing Account Datamart
--   6. Set action outcome as OK
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billAccTRXset_id                in             object.object_id%type,
--   in_object_cache                    in             pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type
-----------------------------------------------------------------------------------------------------------------------
procedure sp_disburse_batch_process
(
   in_session_id                      in             object.object_id%type,
   in_transaction_id                  in             object.object_id%type,
   in_billAccTRXset_id                in             object.object_id%type,
   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
   io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)as

   v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_batch_process';
   v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

   v_datamart_tf                      char(1)                       :=   'T';
   v_batch_parent_billing_acc_id      object.object_id%type;

   v_bv_table                         pkg_os_object_io.t_bv_table;
   --v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
   r_billing_account_list             pkg_db_object.t_billing_account_list;

   v_creator_batrxset_id                object.object_id%type;
   v_creator_bats_type_id               db_transaction_set_type.db_trxset_type_id%type;
   v_rollup_status_id                   object_state.object_state_id%type;
   v_rollup_due_Amount                  number;
   v_recon_inproc_cnt                   number;

     cursor c_agencyrollup(in_batch_id object.object_id%type)
     is
          select
               *
          from

               dragon_rollup
          where
               ru_parent_id = in_batch_id
          and
               ru_object_state_id in (gObjState_ReconReconciled);

begin

   -- 1. Get Biiling account ID of the Disb.Batch
   --
   v_batch_parent_billing_acc_id  := pkg_os_object.fn_object_parent_get ( in_session_id, in_transaction_id, in_billAccTRXset_id);

   -- 2. Process disb. Transaction
   --
   sp_disburse_trx_process
   (
        in_session_id,
        in_transaction_id,
        in_billAccTRXset_id,
        io_action_outcome_id
   );

   --
   -- 3. Set the Batch Status to Processed and process date
   --
   v_bv_table.delete;
   --v_bv_table (gbv_FITrxSetEnteredby                      ).business_variable_value := v_entered_by;
   v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;
   v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ProcessDate).business_variable_value := to_char(pkg_os_time.fn_os_sysdate
                                                                                               (
                                                                                                    in_session_id,
                                                                                                    in_transaction_id,
                                                                                                    in_billAccTRXset_id
                                                                                                ),
                                                                                                pkg_os_constant.DragonDateFormatDefault
                                                                                               );
   -- OSBILLING-1816 : persist Billing Account Total Balance
   --
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as below part is uncommented in gcna
/*--OSBILLING-3884
   v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_batch_parent_billing_acc_id,
                                                                                          pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                     );

--OSBILLING-3884*/
   pkg_os_object_io.sp_object_bv_set
   (
        in_session_id,
        in_transaction_id,
        in_billAccTRXset_id,
        v_bv_table
   );

   --
   -- GCNA-882  Set mail flag
   --
   PKG_CS_DB_BILLING.sp_set_mail_flag
   (
        in_session_id,
        in_transaction_id,
        in_billAccTRXset_id,
        io_action_outcome_id
   );

   -- 4. Update the dis.Batch Datamart
   --

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as below code uncommented in gcna
/*--OSBILLING-3884
   pkg_os_datamart.sp_datamart_update_row
   (
        in_session_id,
        in_transaction_id,
        in_billAccTRXset_id,
        v_datamart_tf
   );
--OSBILLING-3884*/
     --
     -- 5. Check if this disbursement was created from recon statement, if yes mark reconciled rollups and recon statement as processed
     --

     --
     --   a.   get the recon statement batch id
     --
     v_creator_batrxset_id  :=     pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billAccTRXset_id,
                                        31756346
                                   );

     v_creator_bats_type_id   :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_creator_batrxset_id,
                                        gbv_FITrxSetBatchType
                                   );


     if v_session_control.gLogging_Full   -- OSPRODUCT-15444
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... v_creator_batrxset_id = ' || v_creator_batrxset_id ||
               ', v_creator_bats_type_id= ' || v_creator_bats_type_id
          );
     end if;
     
     if v_creator_batrxset_id is not null and v_creator_bats_type_id in (
                                                                           gBatch_PCAS_Policy,
                                                                           gBatch_PCAS_PolicyTrx,
                                                                           gBatch_Agency_Statement -- OSPRODUCT-15444
                                                                        )
     then


          --
          --   b.   Get all rollup objects for the recon statement
          --
          for r_agencyrollup in c_agencyrollup(v_creator_batrxset_id)
          loop

               --
               --   i.   Get the rollup status, if reconciled and due amount is negative then only proceed
               --
               v_rollup_status_id :=   r_agencyrollup.ru_object_state_id;

               v_rollup_due_Amount :=   r_agencyrollup.ru_agent_net_due;

               if v_rollup_status_id = gObjState_ReconReconciled and v_rollup_due_Amount < 0
               then

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         r_agencyrollup.ru_id,
                         pkg_os_constant_bv.gbv_GenObjObjectState,
                         gObjState_ReconProcessed---processed
                    );

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         r_agencyrollup.ru_id,
                         v_datamart_tf
                    );

               end if;

          end loop;

          -- Check if rollup now in other than exclude or processed state


          if  pkg_db_reconciliation.fn_reconstatement_process_tf(in_session_id, in_transaction_id ,v_creator_batrxset_id)   = 'T'
          then

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as below code uncommented in gcna
/*
-- OSBILLING-3884
          begin

               select
                    count(1)
               into
                    v_recon_inproc_cnt
               from
                    dragon_rollup
               where
                    ru_parent_id = v_creator_batrxset_id
               and
                    ru_object_state_id not in (gObjState_ReconProcessed, gObjState_ReconExcluded,gStatus_MarkedExclude,gObjState_Created);

          exception when others then

               v_recon_inproc_cnt:= null;

          end;

--
          if nvl(v_recon_inproc_cnt,1) = 0
          then
*/

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,
                    pkg_os_constant_bv.gbv_GenObjObjectState,
                    gBatchStatus_Processed
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,
                    pkg_db_object.gbv_BillAccTrxSet_ProcessDate,
                    to_char(pkg_os_time.fn_os_sysdate
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billAccTRXset_id
                               ),
                               pkg_os_constant.DragonDateFormatDefault
                              )
               );

-- OSBILLING-3884

               pkg_db_object.sp_billing_acct_trx_process
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,    -- BillingAccountTransactionSet ID
                    in_object_cache,
                    io_action_outcome_id
               );
/* OSBILLING-3884
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,
                    pkg_db_object.gbv_FITrxSet_BATotalBalance,
                    pkg_os_object_io.fn_object_bv_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_batch_parent_billing_acc_id,
                         pkg_db_object.gbv_BillAcc_TotalBalance
                    )
               );

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,
                    v_datamart_tf
               );
OSBILLING-3884 */

          end if;

     end if;

   -- 5. Update the Billing Account Datamart
   --
   if v_batch_parent_billing_acc_id is not null
   then
        r_billing_account_list(r_billing_account_list.count + 1)     :=     v_batch_parent_billing_acc_id;
   end if;

   if r_billing_account_list.count     >     0
   then
        pkg_db_object.sp_update_billingaccount_dm
        (
             in_session_id,
             in_transaction_id,
             r_billing_account_list
        );
   end if ;

   if v_session_control.gLogging_Full
   then
        pkg_os_logging.sp_log
        (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '............... Updated Billing Account Datamart'
        );
   end if;

   -- 6. Set action outcome as OK
   --
   io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_disburse_batch_process;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_reprocess_disbursement
--
--   %USAGE
--   This procedure reprocess payables after clearing the security triggers.
--
--   %ALGORITHM
--
--  1. Get the Object type, batch total amount and transaction count of the batch
--  2. If object type is not equal to Billingaccounttrxset then do nothing
--  3. If object type is billingaccounttrxset
--    i. Get the selected list objects
--    ii. Add the selected fitrasnaction to the deselected fitransaction list
--    iii. Get the reference fitem id of the fitransaction
--    iv. Delink the ReferenceDisbursementBatch reference from the selected FItem
--    v. Get the fitransaction amount and reduce from the batch total amount
--  4. If they are no selected trasnactions to delete, set the outcome and return
--  5. Loop through the list of deselected Fitransactions
--    i . De-link the fitrasaction from its parent
--  6. Set the batch total amount
--  7. Set the control total items of the batch
--  8. Verify the security queues and if no security queue exists, then process the transactions
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_action_object_id                in             object.object_id%type,
--   in_object_cache                    in out nocopy  pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out         gOutcome.gOutcome_id%type,
--   in_current_date_time               in             date default null

-------------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_reprocess_disbursement_new
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billacctrxset_id                in             object.object_id%type,
     in_object_cache                    in out nocopy  pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out   outcome.outcome_id%type,
     in_current_date_time               in             date default null

)as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_reprocess_disbursement';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_deselected_fitrx_id              object.object_id%type;
     v_billing_acc_id            object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_billacctrxset_id);
     v_list_object_id                   object.object_id%type;
     v_ref_fitem_id                     object.object_id%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_batch_processing_date            object_bv_value.business_variable_value%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_list_object_list                 pkg_os_object.t_object_list              := pkg_os_object.gnull_object_list;
     v_selected_elements                varchar2(2000);
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_object_index                     number;
     v_list_object_index                number;
     v_deselected_fitrx_index           number;
     v_selected_items_cnt               number                             :=   0;
     v_txn_cnt                          number;
     v_payable_fitem_balance            number;
     v_batch_total_amount               number                             :=   0;
     v_payable_item_list                t_fitem_list;
     v_deselected_fitrx_list            t_fitransaction_list;
     V_object_type                      object_bv_value.business_variable_value%type;
  v_fitem_object_list         pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_datamart_tf                      char(1)                            :=   'T';

     cursor c_getBillingTransactions is

          select
               b.fitransaction_id id, a.total_items, nvl(a.posted_items,0) posted_items
          from
               dragon_billingaccounttrxset a, dragon_fitransaction b
          where
               a.billingaccounttrxset_id = b.batch_ref_no
          and
               a.billingaccounttrxset_id = in_billacctrxset_id
          and
               b.status_enum = gFITrxStatus_InProcess
          order by
               b.generic_instance_number
          ;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering to reprocess the disbursement batch : '||in_billacctrxset_id||
               ' Billing Account : '||v_billing_acc_id

          );

     end if;

     --
     -- 1. Get the Object type, batch total amount and transaction count of the batch
     --

     v_object_type            :=   pkg_os_object.fn_object_type_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billacctrxset_id
                                   );

     v_batch_total_amount     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billacctrxset_id,
                                        pkg_db_object.gbv_FITrxSet_TotalAmount
                                   );

     v_txn_cnt                :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billacctrxset_id,
                                        pkg_db_object.gbv_FITrxSet_TotalItems
                                   );


     --
     -- 2. If object type is not equal to Billingaccounttrxset then do nothing
     --
     if v_object_type <> gObjType_BillingAccountTrxSet
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... The object is not of type BillingAccountTrxSet : '||v_object_type

               );

          end if;

          null;

     --
     -- 3. If object type is billingaccounttrxset
     --
     else

          v_list_object_list.delete;
          v_payable_item_list.delete;
          v_deselected_fitrx_list.delete;

          --
          -- i. Get the selected list objects
          --

          pkg_os_object_cache_search.sp_obj_cache_children_get
          (
               in_session_id,
               in_transaction_id,
               in_object_cache,
               in_billacctrxset_id,
               pkg_os_constant.gobjType_List,
               v_list_object_list
          );

          if v_list_object_list.count > 0
          then

          v_list_object_index      :=        v_list_object_list.first;

          while v_list_object_index is not null
          loop

               pkg_db_object.sp_list_selected_objects_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_list_object_list(v_list_object_index),
                    in_object_cache,
                    v_fitem_object_list
               );

      v_object_index := v_fitem_object_list.first;

               if ( v_object_index is null)
               then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... User did not make any selection from the list.'
                         );

                    end if;

                    null;

               else

                    while v_object_index is not null
                    loop


                         v_selected_items_cnt     :=   v_selected_items_cnt + 1;

                         v_deselected_fitrx_id      :=   v_fitem_object_list(v_object_index);


                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Deselected Fitrx ID: '||v_deselected_fitrx_id
                              );

                         end if;


                         --
                         -- ii. Add the selected fitrasnaction to the deselected fitransaction list
                         --
                         v_deselected_fitrx_list(v_deselected_fitrx_id)      :=   v_deselected_fitrx_id;

                         --
                         -- iii. Get the reference fitem id of the fitransaction
                         --

                         v_ref_fitem_id                :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_deselected_fitrx_id,
                                                                 gbv_FITrxRefAssociatedFItem

                                                            );

                         --
                         -- iv. Delink the ReferenceDisbursementBatch reference from the selected FItem
                         --

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ref_fitem_id,
                              gbv_FItem_associatedBatch,
                              null

                         );
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ref_fitem_id,
                              pkg_db_constant.gbvCurrDisburseAmount,
                              null
                         );--OSPRODUCT-3715
                         pkg_os_datamart.sp_datamart_update_row (in_session_id,in_transaction_id,v_ref_fitem_id, v_datamart_tf);


                         --
                         -- v. Get the fitransaction amount and reduce from the batch total amount
                         --

                         v_payable_fitem_balance       :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_ref_fitem_id,
                                                                 gbv_fitem_amount_due
                                                            );

                         v_batch_total_amount          :=   v_batch_total_amount - (v_payable_fitem_balance*-1);

                         v_txn_cnt                     :=   v_txn_cnt - 1;

                        v_object_index                 :=   v_fitem_object_list.next( v_object_index );

                    end loop; -- for each selection ...

               end if; -- if the list contains one or more selections ...

               v_list_object_index := v_list_object_list.next(v_list_object_index);

          end loop;

     end if;

          --
          -- 4. If they are no selected trasnactions to delete, set the outcome and return
          --
          if v_selected_items_cnt = 0 then

                io_action_outcome_id       :=       gOutcomeNoSelectedRecord;
                return;

          end if;

          v_deselected_fitrx_index      :=   v_deselected_fitrx_list.first;


          --
          -- 5. Loop through the list of deselected Fitransactions
          --
          while v_deselected_fitrx_index is not null
          loop

               --
               -- i . De-link the fitrasaction from its parent
               --

               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_deselected_fitrx_index,
                    gObjType_FITransaction,
                    null,
                    true
               );

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_deselected_fitrx_index,
                    v_datamart_tf
               );

               v_deselected_fitrx_index :=   v_deselected_fitrx_list.next(v_deselected_fitrx_index);

          end loop;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Total Batch Amount: '||v_batch_total_amount
               );

          end if;

          --
          -- 6. Set the batch total amount
          --

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billacctrxset_id,
               pkg_db_object.gbv_FITrxSet_TotalAmount,
               v_batch_total_amount

          );

          --
          -- 7. Set the control total items of the batch
          --

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billacctrxset_id,
               pkg_db_object.gbv_FITrxSet_TotalItems,
               v_txn_cnt
          );

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_billacctrxset_id,
               v_datamart_tf
          );


          --
          -- 8. Verify the security queues and if no security queue exists, then process the transactions
          --
          sp_disburse_batch_confirm
          (
               in_session_id,
               in_transaction_id,
               in_billacctrxset_id,
               in_object_cache,
               io_action_outcome_id,
               in_current_date_time
          );

     end if;

end  sp_reprocess_disbursement_new;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_auto_disburse
--
--   %USAGE
--   This procedure creates a Disbursement Batch based on default Disbursement Profile and
--   process the batch if the disbursement mode is 'EFT' and in status 'Request sent to AP ' if mode is check
--
--   %ALGORITHM
--
--   1. Get the disbursement profiles for the billing account
--   2. If there is no Disbursement profile selected, then set the outcome as gOutcomeNoProfileExists and return
--   3. Get the First Disbursement Profile and use it as the Default Profile for this Disbursement
--   4. Set the process_flag to true if the disburse mode is EFT and false is its check
--   5. Get the Billing Accouynt Type
--   6. Get the list of Disbursement FItems based on the Billing Account Type
--   7. If Disbursable FItems exists,
--        i. Create a Disbursement Batch
--        ii. Set the BV's for the Disbursement Batch
--        iii. Loop through each disbursable FItem
--           a. Create new FITransaction Object
--          b. Update the FITransaction Datamart
--          c. Set the refernce from FItem to the disbusement batch so that it cannot be used for another disbursement transaction
--          d. update the datamart of dsisbursable FItem
--      iv. Upate the batch total amount for the disbursement batch
--     v. Verify whether the disbursement batch has any security triggers
--     vi. If they are no security triggers, then process the Disbursement Batch
--         a. Loop for the all FITrnsactions
--        b. Create Fitem of category 'Disburse' and of type 'debit' under customer ba
--         c If the process flag  is true, i.e they are no securty triggers and disbursemnent mode is EFT
--           Invoke the sp_disburse_trx_process to process the disbursement
--        d.  Else
--           Set the batch state as Request Sent to AP
--         e. Set the security status as 'Released' and set the outcome as OK
--    vii. Else
--         i. Set the batch state as 'Referred' and security status as 'New'
--         ii. Set the outcome as SecurityTriggerExists
--    viii. Update the datamart of BillingAccountTrxSet
--   8. Else
--      Set the outcome as gOutcomeNoSelectedRecord
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billing_account_id              in             object.object_id%type,
--   in_current_date_time               in             date default null,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type
-----------------------------------------------------------------------------------------------------------------------
procedure sp_auto_disburse
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_current_date_time               in             date default null,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_auto_disburse';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;


     v_profile_list                     pkg_os_object.t_object_list;

     v_fitransaction_list               pkg_os_object.t_object_list;
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_disbursement_item_list           pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_profile_index                    number;
     v_disbursement_item_index          number;
     v_fitransaction_index              number;
     v_trx_count                        number default 0;
     v_disbursement_item_rec            dragon_fitem%rowtype;


     v_billing_acc_trx_set_id           object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_default_profile_id               object.object_id%type;

     v_datamart_tf                      char(1) :=   'T';

     v_batch_total_amount               number                             :=   0;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_disburse_mode                    lookup_list_value.lookup_enum%type;
     v_fitem_status                     lookup_list_value.lookup_enum%type;
     v_process_flag                     boolean default false;

     -- SK: Added variables for OSBILLING -61 GCNA requirement
     v_billing_acc_status               object_bv_value.business_variable_value%type;
     v_stop_credit_disburs              object_bv_value.business_variable_value%type;
     v_policy_term_id                   object_bv_value.business_variable_value%type;
     -- SK: End Added variables for OSBILLING -61 GCNA requirement

     v_stop_all                         object_bv_value.business_variable_value%type;
     v_stop_all_billing                 object_bv_value.business_variable_value%type;
     v_billacc_curr_suspension          object.object_id%type;
     --XXXXDEV-418
     v_cash_src_bats_id                 object.object_id%type;
     v_default_prfl_src                 pd_property.pd_property_value%type;
     v_fitem_category_id                object_bv_value.business_variable_value%type;
     v_cash_exists_tf                   char(1):= 'F';
     v_credit_exists_tf                 char(1):= 'F';
     v_assc_prfl_id                     object.object_id%type;
     v_current_ba_suspension_list       pkg_os_object.t_object_list;
     v_current_ba_susp_list_index       number;
     v_suspended_trx                    varchar2(400):=null;
     v_current_date                     date;
     v_Susp_EffectiveDate               object_bv_value.business_variable_value%type;

     v_fitem_billingaccount_list        t_fitem_billingaccount_tab;  --OSPRODUCT-11625
     v_fitem_ba_list_index              number;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Auto Disbursement for Billing Account ID : '||in_billing_account_id
          );

     end if;

     v_billing_acc_status     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        gbv_BillAcc_Status  -- 210153 Generic Object State
                                   );
     --
     -- Check if credit disbursement needs to be stopped for this billing account's related policies
     -- SK: Added for OSBILLING-61 GCNA requirement
     --

     --OSBilling:1397 Commented below hard-coded value and used a constant
     if v_billing_acc_status = pkg_db_suspension.g_billingaccount_suspend--37346
     then


          -- commenting   osproduct-2013/3343
        /*  v_billacc_curr_suspension     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_billing_account_id,
                                                  gbv_BillAcc_CurrSuspension
                                             );

          v_stop_all                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All
                                             );

         v_stop_all_billing                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All_Billing
                                             );

          v_stop_credit_disburs         :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_Credit_Disb
                                             );

          if   v_stop_credit_disburs = 1
               or
               v_stop_all = 1 or v_stop_all_billing=1
          then

               io_action_outcome_id := 48446;

               return;

          end if;
          */
               --osproduct 2013/3343
          pkg_db_suspension.sp_get_active_susp_objects
					(
						in_session_id,
						in_transaction_id,
						null,
						in_billing_account_id,
						v_current_ba_suspension_list,
						2
					);
           v_current_date := pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, in_billing_account_id);
          if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        'Total suspension Objects: '||v_current_ba_suspension_list.count||
                        '...Current Date: '||v_current_date
                    );
          end if;

          v_current_ba_susp_list_index :=v_current_ba_suspension_list.first;

          while v_current_ba_susp_list_index is not null and v_current_ba_suspension_list.count>0
               loop
               v_suspended_trx := pkg_os_object_io.fn_object_bv_get
												(
												  in_session_id,
												  in_transaction_id,
												  v_current_ba_suspension_list(v_current_ba_susp_list_index),
												  32525248
												 );
                v_Susp_EffectiveDate :=  to_char(
                                               to_date(pkg_os_object_io.fn_object_bv_get
                                                (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_ba_suspension_list(v_current_ba_susp_list_index),
                                                  pkg_db_suspension.gbv_Suspension_Eff_Date
                                                 ),
                                                   pkg_os_constant.DragonDateFormatDefault
                                                  ),
                                                pkg_os_constant.DragonDateFormatDefault);
               if  pkg_os_token.fn_find_in_set ( 3, v_suspended_trx) ='T' -- credit disbursemnt is suspended
                   and trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault)) <= trunc(v_current_date)
                    then
                      io_action_outcome_id := 48446;

               return;


              end if;
          v_current_ba_susp_list_index := v_current_ba_suspension_list.next(v_current_ba_susp_list_index);
          end loop;

          --end loop;

     end if;
     --
     -- SK: End Added for OSBILLING-61 GCNA requirement
     --
     --
     -- 1. Get the disbursement profiles for the billing account
     --
     --XXXXDEV-418
     v_default_prfl_src   := nvl(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.billing_account_id, gDisbursementProfileSrc),1);


     if v_default_prfl_src = gDisbProfileSrcBillingAct
     then  -- XXXXDEV-418
          v_profile_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
              in_session_id,
              in_transaction_id,
              in_billing_account_id,
              gObjTypeDisbursementProfile,
              v_profile_list,
              null,
              null,
              gRule_ActiveDisburseProfile
          );
          --
          --  2. If there is no Disbursement profile selected, then set the outcome as gOutcomeNoProfileExists and return
          --

          if v_profile_list.count = 0
          then

              io_action_outcome_id := gOutcomeNoProfileExists;

              return;

          end if;

          --
          --  3. Get the First Disbursement Profile and use it as the Default Profile for this Disbursement
          --
          v_profile_index               :=   v_profile_list.first;
          v_default_profile_id          :=   v_profile_list(v_profile_index);
          v_disburse_mode               :=  pkg_os_object_io.fn_object_bv_get
                                                 (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_default_profile_id,
                                                     gbv_DisbursementMode          --31690846

                                                 );

          --
          -- 4. Set the process_flag to true if the disburse mode is EFT and false is its check
          --

          if (v_disburse_mode = gBatchDisburseMode_EFT)
          then
              v_fitem_status      :=        gFitemStatus_Processed;
              v_process_flag      :=        true;

          else

              v_fitem_status      :=        gFitemStatus_ReqSentToAP;
              v_process_flag      :=        false;


          end if;

          if v_session_control.gLogging_Full
          then

              pkg_os_logging.sp_log
              (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  '...The disbursement profile selected is '||v_default_profile_id ||
                  'the mode of disbursement is ' || v_disburse_mode
              );

          end if;

       end if;

     --
     --  5. Get the Billing Accouynt Type
     --

     v_billing_account_type_id :=       pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_account_id,
                                            gbv_BillingAccountType
                                        );

     --
     --  6. Get the list of Disbursement FItems based on the Billing Account Type
     --

     v_disbursement_item_list.delete;

     sp_get_disbursement_items
     (
          in_session_id,
          in_transaction_id,
          in_billing_account_id,
          v_billing_account_type_id,
          v_disbursement_item_list
     );

     --
     -- 7. If Disbursable FItems exists,
     --
     if v_disbursement_item_list.count > 0
     then

          --
          --  i. Create a Disbursement Batch
          --

          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_object.gObjType_BillingAccountTrxSet,
               in_billing_account_id,
               v_billing_acc_trx_set_id

          );

          --
          -- ii. Set the BV's for the Disbursement Batch
          --
          v_bv_table.delete;

          v_bv_table (pkg_db_object.gbv_FITrxSet_BatchType       ).business_variable_value :=  gBatch_PayablesDisbBatch;
          v_bv_table (gbv_FITrxSetEntryType                      ).business_variable_value :=  gBatchEntryMethod_System;
          v_bv_table ( gbv_FITrxSetEnteredby                     ).business_variable_value :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
          v_bv_table (gbv_FITrxSetExternalBatchId                ).business_variable_value :=  'Batch'||to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault );
          v_bv_table (pkg_db_object.gbv_FITrxSet_TotalItems      ).business_variable_value :=  v_disbursement_item_list.count;
          v_bv_table (gbv_FITrxSetDatePosted                     ).business_variable_value :=  to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829

          v_disbursement_item_index     :=  v_disbursement_item_list.first;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...The disbursement batch created is '||v_billing_acc_trx_set_id

               );

          end if;

          --
          -- iii. Loop through each disbursable FItem
          --
          while v_disbursement_item_index is not null
          loop

               select
                *
               into
                     v_disbursement_item_rec
               from
                     dragon_fitem
               where
                     fitem_id = v_disbursement_item_list(v_disbursement_item_index)
               ;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... The Fitem selcted for disbursement is ' || v_disbursement_item_list(v_disbursement_item_index)
                    );

               end if;

                      --XXXXDEV-418
               v_cash_src_bats_id   := v_disbursement_item_rec.creator_fitransactionset_id;

               v_fitem_category_id   := v_disbursement_item_rec.Fitem_Category_Id;

              --xxxdev-2241 Sumeet Aug 05 2019  OSBILLING-6460
               if v_default_prfl_src = gDisbProfileSrcOrgPayProf and v_credit_exists_tf  = 'F' and v_fitem_category_id <> gFItem_Category_Cash  --cash
                 then
                           v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_billing_account_id,
                                                             gbv_BA_PreferredDisbProf
                                                        );
                           v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_default_profile_id,
                                                               gbv_Disb_ctf_object_used
                                                         );

                           v_credit_exists_tf  := 'T';
                end if;

               --XXXXDEV-418/OSBILLING-6460
               if v_default_prfl_src = gDisbProfileSrcOrgPayProf and  v_cash_exists_tf   = 'F' and v_fitem_category_id = gFItem_Category_Cash -- Original Payment Profile
               then
                    v_assc_prfl_id :=  pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_cash_src_bats_id,
                                                  PKG_CS_PROFILES.gbv_Ref_AssociatedProfile
                                             );

                    v_cash_exists_tf   := 'T';

                    begin

                         select
                              (pay_profile_id)
                         into
                              v_default_profile_id
                         from
                              dragon_pay_profile
                         where
                              ctf_object_id = v_assc_prfl_id;

                            if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Account Disubrsement for source bats id '||v_cash_src_bats_id ||
                                             ' v_default_profile_id ' || v_default_profile_id  ||
                                             ' v_assc_prfl_id ' || v_assc_prfl_id
                                        );
                         end if;


                     exception
                          when others then
                               v_cash_exists_tf   := 'F';
                     end;

               end if;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Default Profile selected for disbursement : ' || v_default_profile_id
                         ||'Cash Source Bats : '||v_cash_src_bats_id
                         ||'Default profile Source :'||v_default_prfl_src ||
                         ' v_assc_prfl_id ' ||v_assc_prfl_id
                     );

               end if;

               --OSBILLING-6460
               if v_cash_exists_tf ='T' and v_credit_exists_tf ='T'
               then

                    v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_billing_account_id,
                                                             gbv_BA_PreferredDisbProf
                                                        );
                      v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_default_profile_id,
                                                          gbv_Disb_ctf_object_used
                                                    );
               end if;



               if v_default_profile_id is null
               then
                    -- #MP
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... WARNING: disbursement profile not found for billing account ' || in_billing_account_id
                         );
                    end if;
                    -- /#MP

                    io_action_outcome_id := gOutcomeNoProfileExists;
                    return;
               end if;

                    v_disburse_mode               :=   pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_assc_prfl_id,
                                                                       PKG_CS_PROFILES.gbv_CashTrsPrfMode
                                                               );



                    if (v_disburse_mode = gPaymentModeEFT)
                    then

                         v_fitem_status      :=        gFitemStatus_Processed;
                         v_process_flag      :=        true;

                    else

                         v_fitem_status      :=        gFitemStatus_ReqSentToAP;
                         v_process_flag      :=        false;


                    end if;


               --/XXXXDEV-418

               --
               -- a. Create new FITransaction Object
               --
               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billing_acc_trx_set_id,
                    out_fitransaction_id               =>    v_fitransaction_id,
                    in_fitrx_type                      =>    gFITrxType_Disbursement,
                    in_fitrx_ref_billing_account       =>    v_disbursement_item_rec.billing_account_id,
                    in_fitrx_ref_associatedpolicy      =>    v_disbursement_item_rec.policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    v_disbursement_item_rec.policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    v_disbursement_item_rec.policy_id,
                    in_fitrx_ref_actionpoltrx          =>    v_disbursement_item_rec.policy_transaction_id,
                    in_fitrx_ref_associatedfitem       =>    v_disbursement_item_rec.fitem_id,
                    in_fitrx_effective_date            =>    to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                    in_fitrx_gl_date                   =>    to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                    in_fitrx_amount                    =>    (v_disbursement_item_rec.balance)*(-1),
                    in_fitrx_object_state              =>    gFITrxStatus_InProcess
                );

               --
               -- b. Update the FITransaction Datamart
               --
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_datamart_tf

               );

               --
               -- c. Set the refernce from FItem to the disbusement batch so that
               --        it cannot be used for another disbursement transaction
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_disbursement_item_list(v_disbursement_item_index),
                    gbv_FItem_associatedBatch,
                    v_billing_acc_trx_set_id
               );
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_disbursement_item_list(v_disbursement_item_index),
                    pkg_db_constant.gbvCurrDisburseAmount,
                    v_disbursement_item_rec.BALANCE
               );--OSPRODUCT-3715
               --
               -- d. update the datamart of dsisbursable FItem
               --
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_disbursement_item_list(v_disbursement_item_index),
                    v_datamart_tf

               );

               v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);
               v_batch_total_amount          :=   v_batch_total_amount + v_disbursement_item_rec.balance;
               v_trx_count                   :=   v_trx_count + 1;

          end loop;

          --
          -- iv. Upate the batch total amount for the disbursement batch
          --
          v_bv_table (pkg_db_object.gbv_FITrxSet_TotalAmount  ).business_variable_value := (v_batch_total_amount * -1);
          v_bv_table ( pkg_db_object.gbv_FITrxSet_TotalItems  ).business_variable_value := v_trx_count;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_bv_table

          );
          --
          -- v. Verify whether the disbursement batch has any security triggers
          --
          pkg_db_security_trigger.sp_process_security_triggers
          (
               in_session_id                 =>        in_session_id,
               in_transaction_id             =>        in_transaction_id,
               in_object_cache               =>        in_object_cache,
               in_billacc_trx_set_id         =>        v_billing_acc_trx_set_id,
               io_action_outcome_id          =>        io_action_outcome_id,
               in_current_date_time          =>        in_current_date_time,
               io_process_billing_trx_tf     =>        v_process_billing_trx_tf

          );

          --
          --  vi. If they are no security triggers, then process the Disbursement Batch
          --
          if (  v_process_billing_trx_tf = 'T' )
          then

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gObjType_FITransaction,
                    v_fitransaction_list
               );

               v_fitransaction_index    :=     v_fitransaction_list.first;
               --
               -- a. Loop for the all FITrnsactions
               --
               while v_fitransaction_index is not null
               loop

                    --
                    -- b. Create Fitem of category 'Disburse' and of type 'debit' under customer ba
                    --
                    sp_disburse_fitem_create
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitransaction_list(v_fitransaction_index),
                         v_fitem_status,
                         v_fitem_billingaccount_list    --OSPRODUCT-11625
                    );

                    --GCNA Merge

                    --GCNA-1080 set current transaction reference for billing trx
                    pkg_os_object_io.sp_object_bv_set
                    (
                          in_session_id,
                          in_transaction_id,
                          v_billing_acc_trx_set_id,
                          pkg_db_cashpost.gbv_FITrxSetCurrTrx,--29743646,
                          v_fitransaction_list(v_fitransaction_index)
                    );
                         --GCNA Merge
                    v_fitransaction_index := v_fitransaction_list.next(v_fitransaction_index);
               end loop;

               if v_fitem_billingaccount_list.count > 0    --OSPRODUCT-11625
                    then

                        v_fitem_ba_list_index := v_fitem_billingaccount_list.first;

                        while v_fitem_ba_list_index is not null
                        loop

                             if v_session_control.gLogging_Full then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '...... Updating the Datamart for Billing Account ID: '
                                       || v_fitem_billingaccount_list(v_fitem_ba_list_index)
                                  );

                             end if;

                             merge into billingaccount_datamart_update du     --OSPRODUCT-11625 Commented
                             using (select
                                     v_fitem_billingaccount_list(v_fitem_ba_list_index) billing_account_id
                                  from
                                     dual
                                ) stg
                             on (du.billing_account_id = stg.billing_account_id
                                  and
                                  du.process_timestamp is null
                                 )
                             when not matched
                             then
                             insert
                                (
                                    billing_account_id,
                                     entry_timestamp
                                )
                             values
                                (
                                     stg.billing_account_id,
                                     sysdate
                                );



                             v_fitem_ba_list_index := v_fitem_billingaccount_list.next(v_fitem_ba_list_index);

                        end loop;

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_datamart_tf
               );

               --
               -- c. If the process flag  is true, i.e they are no securty triggers and disbursemnent mode is EFT
               --
               if (v_process_flag  = true)
               then

                    --
                    --   Invoke the sp_disburse_trx_process to process the disbursement
                    --

                    pkg_db_object.sp_billing_acct_trx_process
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         in_object_cache,
                         io_action_outcome_id,
                         in_current_date_time

                    );

                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;
                    --
                    -- OSBILLING-1816 : persist Billing Account Total Balance
                    --

                    /*-- OSBILLING-3884
                    v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                          (
                                                                                                               in_session_id,
                                                                                                               in_transaction_id,
                                                                                                               pkg_os_object.fn_object_parent_get
                                                                                                               (
                                                                                                                    in_session_id,
                                                                                                                    in_transaction_id,
                                                                                                                    v_billing_acc_trx_set_id
                                                                                                               ),
                                                                                                               pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                                          );

               OSBILLING-3884 */
               else  -- i.e. Check

                    --
                    --  Set the batch state as Request Sent to AP
                    --
                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := pkg_db_object.gBatchStatus_RequestAP;

               end if;

              --
              -- e. Set the security status as 'Released' and set the outcome as OK
              --
              v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;

              io_action_outcome_id     :=   pkg_os_constant.gOutcome_OK;

          else

              --
              --   i. Set the batch state as 'Referred' and security status as 'New'
              --
              v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Referred;
              v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_New;

              --
              --   ii. Set the outcome as SecurityTriggerExists
              --
              io_action_outcome_id := gOutcomeSecurityTriggerExists;

         end if;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_bv_table

          );

          --
          --   viii. Update the datamart of BillingAccountTrxSet
          --
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_datamart_tf

          );

     else
          --
          -- Set the outcome as gOutcomeNoSelectedRecord
          --
          io_action_outcome_id := gOutcomeNoSelectedRecord;

     end if;   -- if v_profile_list.count > 0

end sp_auto_disburse;


--- Old Package things to backward compatible
procedure sp_disburse_payables_validate
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_payables_validate';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_datamart_tf                      char(1)                            :=   'T';
     v_current_date                     object_bv_value.business_variable_value%type;
     v_billacctrxset_id                 object.object_id%type;
     v_billacctrxset_cnt                number;
     v_fitransaction_id                 object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_fichange_action                  number;
     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_payable_fitem_id                 object.object_id%type;
     v_batch_parent_billing_acc_id      object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_payment_amount                   float                              :=   0;
     v_customer_id                      object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_allocation_type                  number;
     v_rollup_item_amount               float                              :=   0;
     v_rollup_item_ref_fitem            object.object_id%type;
     v_target_fitem_due                 float                              :=   0;
     v_target_fitem_total_due           float                              :=   0;
     v_fitem_due_as_of_date             object_bv_value.business_variable_value%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_batch_processing_date            object_bv_value.business_variable_value%type;
     v_available_trx_balance            float                              :=   0;
     v_available_total_balance          float                              :=   0;
     v_used_amt                         float                              :=   0;
     v_total_recon_amount               float                              :=   0;
     v_billacct_balance                 float                              :=   0;
     v_policy_balance                   float                              :=   0;
     v_policy_trx_balance               float                              :=   0;

     v_list_object_list                 pkg_os_object.t_object_list                   := pkg_os_object.gnull_object_list;
     v_list_object_id                   object.object_id%type;
     v_selected_elements                varchar2(2000);
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_object_index                     number;
     v_list_object_index                number;

     v_payable_item_rec                 t_payable_fitem_rec;
     v_payable_item_index               varchar2(100);
     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_selected_items_cnt               number                                 :=   0;
     v_fitem_rec                        dragon_fitem%rowtype;
     v_payable_item_list                t_fitem_list;

     v_billaccount_Parent_id            object.object_id%type;
     v_txn_cnt                          number;
     v_txn_amount                       number;
     v_payable_fitem_balance            number;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_batch_total_amount               number                             :=   0;
     V_object_type                      object_bv_value.business_variable_value%type;
     v_ref_fitem_id                     object.object_id%type;
     v_object_state                     number;
     r_billing_account_list                 pkg_db_object.t_billing_account_list;


begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Action Account ID : '||in_action_object_id

          );

     end if;
     r_billing_account_list.delete;

     v_object_state                :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             pkg_os_constant_bv.gbv_GenObjObjectState
                                        );

     --
     -- Get parent billing account ID
     --

     v_batch_parent_billing_acc_id :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             gbv_BillAccTrxSet_ParentAcc
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Object State : '||v_object_state

          );

     end if;
     if v_batch_parent_billing_acc_id is not null
     then
          r_billing_account_list(r_billing_account_list.count + 1)     :=     v_batch_parent_billing_acc_id;
     end if;


     if v_object_state <> gBatchStatus_Referred -- It is a new disbursement batch
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Process the new disbursement batch'

               );

          end if;

          v_list_object_list.delete;
          v_payable_item_rec.delete;
          v_payable_item_list.delete;

          pkg_os_object_cache_search.sp_obj_cache_children_get
          (
               in_session_id,
               in_transaction_id,
               in_object_cache,
               v_batch_parent_billing_acc_id,
               pkg_os_constant.gobjType_List,
               v_list_object_list
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Get the list count from cache: '||v_list_object_list.count
               );

          end if;

          if v_list_object_list.count > 0
          then

               v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

               v_list_object_index      :=        v_list_object_list.first;

               while v_list_object_index is not null
               loop

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... List Object ID: '||v_list_object_id
                         );

                    end if;

                    v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_object_cache,
                                                            v_list_object_list(v_list_object_index),
                                                            pkg_os_constant_bv.gbv_ListElementsSelected
                                                       );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                              ' And element list: '||v_selected_elements
                         );

                    end if;

                    if v_selected_elements is not null
                    then

                         v_selected_object_ids.delete;

                         pkg_os_token.sp_tokenize_string
                         (
                              v_selected_elements,
                              ',',
                              v_selected_object_ids
                         );

                         v_object_index           :=        v_selected_object_ids.first;

                         if v_object_index is null
                         then

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ User did not make any selection from the list.'
                                   );

                              end if;

                              null;

                         else

                              while v_object_index is not null
                              loop

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Get the Object ID'
                                        );

                                   end if;

                                   v_selected_items_cnt     :=   v_selected_items_cnt + 1;

                                   v_payable_fitem_id           :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_object_cache,
                                                                      v_selected_object_ids( v_object_index ),
                                                                      pkg_os_constant_bv.gbv_ListElementObject
                                                                 );

                                   v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_payable_fitem_id,
                                                                      gbv_fitem_amount_due
                                                                 );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Payable Fitem ID: '||v_payable_fitem_id||
                                             ', With Balance: '||v_payable_fitem_balance
                                        );

                                   end if;

                                   if v_payable_fitem_balance < 0
                                   then

                                        select
                                             *
                                        into
                                             v_payable_item_rec(v_payable_fitem_id)
                                        from
                                             dragon_fitem
                                        where
                                             fitem_id = v_payable_fitem_id
                                        ;

                                        v_batch_total_amount                    :=   v_batch_total_amount + v_payable_fitem_balance;

                                        v_payable_item_list(v_payable_fitem_id) :=   v_payable_fitem_id;

                                   end if;

                                   v_object_index := v_selected_object_ids.next( v_object_index );

                              end loop; -- for each selection ...

                         end if; -- if the list contains one or more selections ...

                    end if;

                    v_list_object_index         :=        v_list_object_list.next(v_list_object_index);

               end loop;

          end if; -- if able to find the list ...

          if v_selected_items_cnt = 0
          then

               io_action_outcome_id := gOutcomeNoSelectedRecord;

               return;

          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Count of Valid payables items to disburse: '||v_payable_item_list.count
               );

          end if;

          if v_payable_item_list.count > 0
          then

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Get the disbursement profiles for the Partner which are active'
                    );

               end if;

               --
               -- Get the default disbursement profile for the Partner
               --

               v_profile_list.delete;

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_batch_parent_billing_acc_id,
                    gObjTypeDisbursementProfile,
                    v_profile_list,
                    null,
                    null,
                    gRule_ActiveDisburseProfile
               );

               if v_profile_list.count > 0
               then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Loop through very first disbursement profile'
                         );

                    end if;

                    v_profile_index     :=   v_profile_list.first;

                    while v_profile_index is not null
                    loop

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............ Found Disbursement Profile Object'||v_payable_fitem_id
                              );

                         end if;

                         v_billaccount_Parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_batch_parent_billing_acc_id,
                                                                 gbv_BillingAccountParent
                                                            );

                         v_billacctrxset_id            :=   in_action_object_id;

                         -- Set the batch type as 'Payables Disbursement Batch'
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              pkg_db_object.gbv_FITrxSet_BatchType,
                              gBatch_PayablesDisbBatch
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............ Set the payment type as - Payables Disbursement Batch'
                              );

                         end if;

                         -- Set the batch total amount
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              pkg_db_object.gbv_FITrxSet_TotalAmount,
                              (v_batch_total_amount)*(-1)
                         );

                         v_payable_item_index     :=   v_payable_item_list.first;
                         v_txn_amount             :=   0;
                         v_txn_cnt                :=   0;

                         while v_payable_item_index is not null
                         loop

                              v_fitem_rec := v_payable_item_rec(v_payable_item_index);

                              -- Create new FITransaction Object

                              pkg_db_object.sp_fitransaction_create
                              (
                                   in_session_id                      =>    in_session_id,
                                   in_transaction_id                  =>    in_transaction_id,
                                   in_fitrx_parent_fitrxset_id        =>    v_billacctrxset_id,
                                   out_fitransaction_id               =>    v_fitransaction_id,
                                   in_fitrx_type                      =>    gFITrxType_Disbursement,
                                   in_fitrx_ref_billing_account       =>    v_fitem_rec.billing_account_id,
                                   in_fitrx_ref_associatedpolicy      =>    v_fitem_rec.policy_id,
                                   in_fitrx_ref_associatedpoltrx      =>    v_fitem_rec.policy_transaction_id,
                                   in_fitrx_ref_actionpolicy          =>    v_fitem_rec.policy_id,
                                   in_fitrx_ref_actionpoltrx          =>    v_fitem_rec.policy_transaction_id,
                                   in_fitrx_ref_associatedfitem       =>    v_payable_item_index,
                                   in_fitrx_effective_date            =>    to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                                   in_fitrx_gl_date                   =>    to_char(nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                                   in_fitrx_amount                    =>    (v_fitem_rec.balance)*(-1),
                                   in_fitrx_object_state              =>    gFITrxStatus_InProcess
                               );


                              if v_fitem_rec.billing_account_id is not null
                              then
                                   r_billing_account_list(r_billing_account_list.count + 1)     :=     v_fitem_rec.billing_account_id ;
                              end if;



                              -- Update the FITransaction Datamart
                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_fitransaction_id,
                                   v_datamart_tf
                              );

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............... Updated the data mart of FITransaction'
                                 );

                              end if;

                              v_payable_item_index     :=   v_payable_item_list.next(v_payable_item_index);

                              v_txn_amount             :=   v_txn_amount   + (v_fitem_rec.balance*-1);
                              v_txn_cnt                :=   v_txn_cnt + 1;

                         end loop; -- v_payable_item_index is not null

                         -- Set the disbursement profile reference
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              gbv_BATrxSet_RefDisbProfile,
                              v_profile_list(v_profile_index)
                         );

                         v_profile_index     :=   v_profile_list.next(v_profile_index);

                         -- Not handling for multiple disbursement profile.
                         exit;

                    end loop; -- v_profile_index is not null

               else -- v_profile_list.count > 0

                    io_action_outcome_id := gOutcomeNoProfileExists;

                    return;

               end if;  -- v_profile_list.count > 0

          end if; -- v_payable_item_list.count > 0

     end if; -- v_object_state <> gBatchStatus_Referred

     if  r_billing_account_list.count     >     0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;


     io_action_outcome_id := pkg_os_constant.gOutcome_OK;


end  sp_disburse_payables_validate;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disburse_payable_items
--
--   %USAGE
--   This procedure will actually create the FIchange to settle the Fitem.
--
--   %ALGORITHM
--
--   1.     Get the object state of the Batch object
--     2.     If object state is not referred then it is a new batch
--   3.        Get the list objects from cache
--   4.        Loop through each list object
--   5.             Get the selected elements from the list
--   6.             Loop through each selected element
--     7.                    Get the payable fitem object id and the balance amount. Store in a collection variable.
--     8.               Get the disbursement profiles for the Partner
--   9.             Loop through each profile
--   10.                 Get the selected FItems from the cache.
--   11.                 Set the basic business variables of the Batch object
--     12.                    Call the Security Triggers validation process
--   13.                  Loop through each FItransactions created under Batch object
--   14.                      Set the processing business variables of FITransaction
--     15.                         Get the referenced fitem id.
--   16.                      If security rules not voilated then
--   17.                           Create Debit FIChange Object to settle the payable FItem
--   18.                      Else
--   19.                           Keep the FItransaction state as 'in-process'
--     20.                         Update datamart of FItransaction object.
--     21.                    Set the processing variables of the Batch
--   22.  Else, It is referred batch which has come again for the processing after review.
--   23.       Loop through each FItransactions created under Batch object
--   24.            Set the processing business variables of FITransaction
--     25.               Get the referenced fitem id.
--   26.                 Create Debit FIChange Object to settle the payable FItem
--     27.          Update datamart of FItransaction object.
--     28.          Set the processing variables of the Batch
--   29.  Update the data mart of Batch object
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_action_object_id                in             object.object_id%type,
--   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
--   in_current_date_time               in             date default null

-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_disburse_payable_items
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null
)as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_payable_items';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_billacctrxset_id                 object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_target_fitem_policy_id           object.object_id%type;
     v_target_fitem_policy_txn_id       object.object_id%type;
     v_target_fitem_entity_id           object.object_id%type;
     v_payable_fitem_id                 object.object_id%type;
     v_trx_policy_id                    object.object_id%type;
     v_trx_policy_trx_id                object.object_id%type;
     v_batch_parent_billing_acc_id      object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_customer_id                      object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_rollup_item_ref_fitem            object.object_id%type;
     v_billaccount_Parent_id            object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_change_debit_fichange_id         object.object_id%type;
     v_ref_fitem_id                     object.object_id%type;
     v_list_object_id                   object.object_id%type;

     v_current_date                     object_bv_value.business_variable_value%type;
     v_fitem_due_as_of_date             object_bv_value.business_variable_value%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_batch_processing_date            object_bv_value.business_variable_value%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     V_object_type                      object_bv_value.business_variable_value%type;

     v_rollup_item_amount               float                         :=   0;
     v_target_fitem_due                 float                         :=   0;
     v_target_fitem_total_due           float                         :=   0;
     v_available_trx_balance            float                         :=   0;
     v_payment_amount                   float                         :=   0;
     v_rec_amt                          float                         :=   0;
     v_available_total_balance          float                         :=   0;
     v_used_amt                         float                         :=   0;
     v_total_recon_amount               float                         :=   0;
     v_billacct_balance                 float                         :=   0;
     v_policy_balance                   float                         :=   0;
     v_policy_trx_balance               float                         :=   0;

     v_list_object_list                 pkg_os_object.t_object_list              := pkg_os_object.gnull_object_list;
     v_profile_list                     pkg_os_object.t_object_list;
     v_fitem_rec                        dragon_fitem%rowtype;
     v_payable_item_list                t_fitem_list;

     v_selected_object_ids              pkg_os_token.t_string_table;
     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_payable_item_rec                 t_payable_fitem_rec;
     v_payable_item_index               varchar2(100);
     v_selected_elements                varchar2(2000);

     v_debit_fichange_amount            number;
     v_payable_fitem_earned_amt         number;
     v_fichange_action                  number;
     v_billacctrxset_cnt                number;
     v_payable_fitem_unearned_amt       number;
     v_payable_fitem_paid_amt           number;
     v_txn_cnt                          number;
     v_txn_amount                       number;
     v_payable_fitem_balance            number;
     v_object_index                     number;
     v_list_object_index                number;
     v_rec_cnt                          number                        :=   0;
     v_allocation_type                  number;
     v_batch_total_amount               number                        :=   0;
     v_object_state                     number;
     v_profile_index                    number;
     v_selected_items_cnt               number                        :=   0;

     v_process_billing_trx_tf           char(1)                       :=   'F';
     v_datamart_tf                      char(1)                       :=   'T';
     r_billing_account_list             pkg_db_object.t_billing_account_list;


     cursor c_getBillingTransactions is

          select
               b.fitransaction_id id, a.total_items, nvl(a.posted_items,0) posted_items
          from
               dragon_billingaccounttrxset a, dragon_fitransaction b
          where
               a.billingaccounttrxset_id = b.batch_ref_no
          and
               a.billingaccounttrxset_id = in_action_object_id
          and
               b.status_enum = gFITrxStatus_InProcess
          order by
               b.generic_instance_number
          ;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Action Account ID : '||in_action_object_id

          );

     end if;

     r_billing_account_list.delete;

     v_object_state                     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  pkg_os_constant_bv.gbv_GenObjObjectState
                                             );


     v_batch_parent_billing_acc_id      :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  gbv_BillAccTrxSet_ParentAcc
                                             );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Object State : '||v_object_state

          );

     end if;

     if v_object_state <> gBatchStatus_Referred -- It is a new disbursement batch
     then

          v_list_object_list.delete;
          v_payable_item_rec.delete;
          v_payable_item_list.delete;

          pkg_os_object_cache_search.sp_obj_cache_children_get
          (
               in_session_id,
               in_transaction_id,
               in_object_cache,
               v_batch_parent_billing_acc_id,
               pkg_os_constant.gobjType_List,
               v_list_object_list
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Get the list count from cache: '||v_list_object_list.count
               );

          end if;

          if v_list_object_list.count > 0
          then

               v_list_object_id         :=        v_list_object_list(v_list_object_list.first);
               v_list_object_index      :=        v_list_object_list.first;

               while v_list_object_index is not null
               loop

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Process the first record'
                         );

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... List Object ID: '||v_list_object_id
                         );

                    end if;

                    v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_object_cache,
                                                            v_list_object_list(v_list_object_index),
                                                            pkg_os_constant_bv.gbv_ListElementsSelected
                                                       );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                              ' And element list: '||v_selected_elements
                         );

                    end if;

                    if v_selected_elements is not null
                    then

                         v_selected_object_ids.delete;

                         pkg_os_token.sp_tokenize_string
                         (
                              v_selected_elements,
                              ',',
                              v_selected_object_ids
                         );

                         v_object_index           :=        v_selected_object_ids.first;

                         if v_object_index is null
                         then

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ User did not make any selection from the list.'
                                   );

                              end if;

                              null;

                         else

                              while v_object_index is not null
                              loop

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Get the Object ID'
                                        );

                                   end if;

                                   v_selected_items_cnt     :=   v_selected_items_cnt + 1;

                                   v_payable_fitem_id           :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_object_cache,
                                                                      v_selected_object_ids( v_object_index ),
                                                                      pkg_os_constant_bv.gbv_ListElementObject
                                                                 );

                                   v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_payable_fitem_id,
                                                                      gbv_fitem_amount_due
                                                                 );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Payable Fitem ID: '||v_payable_fitem_id||
                                             ', With Balance: '||v_payable_fitem_balance
                                        );

                                   end if;

                                   if v_payable_fitem_balance < 0
                                   then

                                        select
                                             *
                                        into
                                             v_payable_item_rec(v_payable_fitem_id)
                                        from
                                             dragon_fitem
                                        where
                                             fitem_id = v_payable_fitem_id
                                        ;

                                        v_batch_total_amount                    :=   v_batch_total_amount + v_payable_fitem_balance;

                                        v_payable_item_list(v_payable_fitem_id) :=   v_payable_fitem_id;

                                   end if;

                                   v_object_index := v_selected_object_ids.next( v_object_index );

                              end loop; -- for each selection ...

                         end if; -- if the list contains one or more selections ...

                    end if;

                    v_list_object_index         :=        v_list_object_list.next(v_list_object_index);

               end loop;

          end if; -- v_list_object_list.count > 0

          if v_selected_items_cnt = 0
          then

               io_action_outcome_id := gOutcomeNoSelectedRecord;

               return;

          end if;

          if v_payable_item_list.count > 0
          then

               -- Get the default disbursement profile for the Partner
               v_profile_list.delete;

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_batch_parent_billing_acc_id,
                    gObjTypeDisbursementProfile,
                    v_profile_list,
                    null,
                    null,
                    gRule_ActiveDisburseProfile
               );

               if v_profile_list.count > 0
               then

                    v_profile_index     :=   v_profile_list.first;

                    while v_profile_index is not null
                    loop

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Found Disbursement Profile Object'||v_payable_fitem_id
                              );

                         end if;

                         v_billaccount_Parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_batch_parent_billing_acc_id,
                                                                 gbv_BillingAccountParent
                                                            );

                         if v_billaccount_Parent_id is not null
                         then
                              r_billing_account_list(r_billing_account_list.count + 1)     :=     v_billaccount_Parent_id;
                         end if;

                         if v_batch_parent_billing_acc_id is not null
                         then
                              r_billing_account_list(r_billing_account_list.count + 1)     :=     v_batch_parent_billing_acc_id;
                         end if;








                         v_billacctrxset_id            :=   in_action_object_id;


                         -- Set the batch entry type as system

                         v_bv_table.delete;

                         v_bv_table (pkg_db_object.gbv_FITrxSet_EntryType       ).business_variable_value := gBatchEntryMethod_System;
                         v_bv_table (pkg_db_object.gbv_FITrxSet_DatePosted      ).business_variable_value := to_char( NVL(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829
                         v_bv_table (pkg_db_object.gbv_FITrxSet_ExternalBatchId ).business_variable_value := 'Batch'||to_char( nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829
                         v_bv_table (pkg_db_object.gbv_FITrxSet_BatchType       ).business_variable_value := gBatch_PayablesDisbBatch;
                         v_bv_table (pkg_db_object.gbv_FITrxSet_TotalAmount        ).business_variable_value := (v_batch_total_amount)*(-1);

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              v_bv_table

                         );

                         -- Call the Security Triggers validation process
                         pkg_db_security_trigger.sp_process_security_triggers
                         (
                              in_session_id                 =>        in_session_id,
                              in_transaction_id             =>        in_transaction_id,
                              in_object_cache               =>        in_object_cache,
                              in_billacc_trx_set_id         =>        v_billacctrxset_id,
                              io_action_outcome_id          =>        io_action_outcome_id,
                              in_current_date_time          =>        in_current_date_time,
                              io_process_billing_trx_tf     =>        v_process_billing_trx_tf
                         );

                         v_payable_item_index     :=   v_payable_item_list.first;
                         v_txn_amount             :=   0;
                         v_txn_cnt                :=   0;

                         while v_payable_item_index is not null
                         loop

                              v_fitem_rec := v_payable_item_rec(v_payable_item_index);

                              -- Create new FITransaction Object

                              pkg_db_object.sp_fitransaction_create
                              (
                                   in_session_id                      =>    in_session_id,
                                   in_transaction_id                  =>    in_transaction_id,
                                   in_fitrx_parent_fitrxset_id        =>    v_billacctrxset_id,
                                   out_fitransaction_id               =>    v_fitransaction_id,
                                   in_fitrx_type                      =>    gFITrxType_Disbursement,
                                   in_fitrx_ref_billing_account       =>    v_fitem_rec.billing_account_id,
                                   in_fitrx_ref_associatedpolicy      =>    v_fitem_rec.policy_id,
                                   in_fitrx_ref_associatedpoltrx      =>    v_fitem_rec.policy_transaction_id,
                                   in_fitrx_ref_actionpolicy          =>    v_fitem_rec.policy_id,
                                   in_fitrx_ref_actionpoltrx          =>    v_fitem_rec.policy_transaction_id,
                                   in_fitrx_ref_associatedfitem       =>    v_payable_item_index,
                                   in_fitrx_effective_date            =>    to_char( nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                                   in_fitrx_gl_date                   =>    to_char( nvl(in_current_date_time,pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                                   in_fitrx_process_date              =>    to_char( nvl(in_current_date_time,pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                                   in_fitrx_amount                    =>    (v_fitem_rec.balance)*(-1),
                                   in_fitrx_object_state              =>    gFITrxStatus_Processed

                              );
                              if v_fitem_rec.billing_account_id is not null
                              then
                                   r_billing_account_list(r_billing_account_list.count + 1)     :=     v_fitem_rec.billing_account_id;
                              end if;


                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ New FITransaction Created for the Batch: '||v_fitransaction_id
                                   );

                              end if;

                              if v_process_billing_trx_tf  = 'T'
                              then

                                   -- Set the Processing Date to Current Date
                                   v_fichange_process_date       :=        to_char
                                                                           (    nvl(in_current_date_time,
                                                                                pkg_os_time.fn_os_sysdate
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_fitransaction_id--v_debit_fichange_id
                                                                                )),pkg_os_constant.DragonDateFormatDefault
                                                                           );  --OSBILLING-7829

                                   v_fichange_action             :=        gFIChange_Change;

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date
                                      );

                                   end if;

                                   v_debit_fichange_amount        :=        v_fitem_rec.balance*-1;

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Debit FIChange amount: '||v_debit_fichange_amount
                                        );

                                   end if;

                                   v_sum_include                 :=        gFIChange_Yes;

                                   pkg_db_object.sp_fichange_create
                                   (
                                        in_session_id                      =>        in_session_id,
                                        in_transaction_id                  =>        in_transaction_id,
                                        in_parent_fitransaction_id         =>        v_fitransaction_id,
                                        out_fichange_id                    =>        v_debit_fichange_id,
                                        in_fichange_action                 =>        v_fichange_action,
                                        in_fichange_action_delta           =>        v_debit_fichange_amount,
                                        in_fichange_ref_fitem              =>        v_payable_item_index,
                                        in_fichange_sum_include            =>        v_sum_include,
                                        in_fichange_process_date           =>        v_fichange_process_date,
                                        in_fichange_ref_pol                =>        v_fitem_rec.policy_id,
                                        in_fichange_ref_pol_trx            =>        v_fitem_rec.policy_transaction_id,
                                        in_fichange_belongs_to             =>        v_billaccount_Parent_id

                                   );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Created Debit FIChange Object ID: '||v_debit_fichange_id
                                        );

                                    end if;
                                   if v_billaccount_Parent_id is not null
                                   then
                                        r_billing_account_list(r_billing_account_list.count + 1)     :=     v_billaccount_Parent_id;
                                   end if;















                                   -- Update the Debit FIChange Datamart
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_debit_fichange_id,
                                        v_datamart_tf
                                   );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Updated the data marts of Debit Fichange and Payable Fitem'
                                        );

                                   end if;

                                   v_payable_fitem_paid_amt      :=   nvl(pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_payable_item_index,
                                                                           gbv_fitem_paid_amount
                                                                      ),0);

                                   v_payable_fitem_paid_amt         :=   v_payable_fitem_paid_amt + v_fitem_rec.balance;

                                   v_bv_table.delete;
                                   v_bv_table (gbv_fitem_paid_amount               ).business_variable_value := v_payable_fitem_paid_amt;
                                   v_bv_table (gbv_fitem_earned_amount          ).business_variable_value := 0;
                                   v_bv_table (gbv_fitem_unearned_amount        ).business_variable_value := 0;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_payable_item_index,
                                        v_bv_table

                                   );

                                   -- Update the Payable FItem Datamart
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_payable_item_index,
                                        v_datamart_tf
                                   );



                              else -- v_process_billing_trx_tf  = 'T'

                                   v_bv_table.delete;

                                   v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gFITrxStatus_InProcess;
                                   v_bv_table (gbv_FITransaction_ProcessDate              ).business_variable_value := null;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fitransaction_id,
                                        v_bv_table
                                   );

                              end if;-- v_process_billing_trx_tf  = 'T'

                              -- Update the FITransaction Datamart
                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_fitransaction_id,
                                   v_datamart_tf
                              );

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ Updated the data mart of FITransaction'
                                 );

                              end if;

                              v_payable_item_index     :=   v_payable_item_list.next(v_payable_item_index);

                              v_txn_amount             :=   v_txn_amount   + (v_fitem_rec.balance*-1);
                              v_txn_cnt                :=   v_txn_cnt + 1;

                         end loop; -- v_payable_item_index is not null

                         -- Set the Processing Date for Batch to Current Date
                         v_batch_processing_date       :=        to_char
                                                                 (    nvl(in_current_date_time,
                                                                      pkg_os_time.fn_os_sysdate
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_billacctrxset_id
                                                                      )), pkg_os_constant.DragonDateFormatDefault
                                                                 );  --OSBILLING-7829
                         v_bv_table.delete;

                         v_bv_table (pkg_db_object.gbv_FITrxSet_TotalItems       ).business_variable_value := v_txn_cnt;
                         v_bv_table (pkg_db_object.gbv_FITrxSet_TotalAmount      ).business_variable_value := v_txn_amount;

                         if v_process_billing_trx_tf  = 'T'
                         then

                              v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;
                              v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ProcessDate).business_variable_value := v_batch_processing_date;
                              v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;
                              --
                              -- OSBILLING-1816 : persist Billing Account Total Balance
                              --
                              v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                                    (
                                                                                                                         in_session_id,
                                                                                                                         in_transaction_id,
                                                                                                                         pkg_os_object.fn_object_parent_get
                                                                                                                         (
                                                                                                                              in_session_id,
                                                                                                                              in_transaction_id,
                                                                                                                              v_billacctrxset_id
                                                                                                                         ),
                                                                                                                         pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                                                    );

                         if  r_billing_account_list.count   >   0
                         then

                              pkg_db_object.sp_update_billingaccount_dm
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   r_billing_account_list
                              );

                         end if ;

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         else

                              v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Referred;
                              v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_New;

                              io_action_outcome_id := gOutcomeSecurityTriggerExists;

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              v_bv_table
                         );

                         /*-- Set the disbursement profile reference

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              gbv_BATrxSet_RefDisbProfile,
                              v_profile_list(v_profile_index)
                         );*/

                         -- Update the FITransactionSet Datamart
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billacctrxset_id,
                              v_datamart_tf
                         );

                         v_profile_index     :=   v_profile_list.next(v_profile_index);

                         -- Not handling for multiple disbursement profile.
                         exit;

                    end loop; -- v_profile_index is not null

               else -- v_profile_list.count > 0

                    io_action_outcome_id := gOutcomeNoProfileExists;

                    return;

               end if;

          end if;     -- v_payable_item_list.count > 0

     else -- v_object_state <> gBatchStatus_Referred

          for v_getBillingTransactions in c_getBillingTransactions
          loop

               -- Get the reference fitem id
               v_ref_fitem_id      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_getBillingTransactions.id,
                                             gbv_FITrxRefAssociatedFItem
                                        );


               v_fitransaction_id  :=       v_getBillingTransactions.id;

               select
                    *
               into
                    v_payable_item_rec(v_ref_fitem_id)
               from
                    dragon_fitem
               where
                    fitem_id = v_ref_fitem_id
               ;

               v_fitem_rec                := v_payable_item_rec(v_ref_fitem_id);

               v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ref_fitem_id,
                                                  gbv_fitem_amount_due
                                             );





               -- Set the Processing Date to Current Date
               v_fichange_process_date  :=      to_char
                                             (    nvl(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                     v_fitransaction_id--  v_debit_fichange_id
                                                  )),pkg_os_constant.DragonDateFormatDefault
                                             );  --OSBILLING-7829

               v_fichange_action           :=      gFIChange_Change;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date
                  );

               end if;

               v_debit_fichange_amount      :=     v_payable_fitem_balance*-1;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Debit FIChange amount: '||v_debit_fichange_amount
                    );

               end if;

               v_sum_include               :=        gFIChange_Yes;

               v_payable_fitem_paid_amt      :=   nvl(pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ref_fitem_id,
                                                       gbv_fitem_paid_amount
                                                  ),0);

               v_payable_fitem_paid_amt         :=   v_payable_fitem_paid_amt + v_fitem_rec.balance;

               v_bv_table.delete;
               v_bv_table (gbv_fitem_paid_amount                    ).business_variable_value := v_payable_fitem_paid_amt;
               v_bv_table (gbv_fitem_earned_amount               ).business_variable_value := 0;
               v_bv_table (gbv_fitem_unearned_amount             ).business_variable_value := 0;
               v_bv_table (gbv_Fitem_processing_status           ).business_variable_value := gFitemStatus_Processed;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    v_bv_table

               );

               -- Create Debit FIChange Object
               pkg_db_object.sp_fichange_create
               (
                    in_session_id                      =>           in_session_id,
                    in_transaction_id                  =>            in_transaction_id,
                    in_parent_fitransaction_id         =>            v_fitransaction_id,
                    out_fichange_id                    =>            v_debit_fichange_id,
                    in_fichange_action                 =>            v_fichange_action,
                    in_fichange_action_delta           =>            v_debit_fichange_amount,
                    in_fichange_ref_fitem              =>            v_ref_fitem_id,
                    in_fichange_sum_include            =>            v_sum_include,
                    in_fichange_process_date           =>        v_fichange_process_date,
                    in_fichange_ref_pol                =>        v_fitem_rec.policy_id,
                    in_fichange_ref_pol_trx            =>        v_fitem_rec.policy_transaction_id,
                    in_fichange_belongs_to             =>        v_billaccount_Parent_id

               );

               if v_session_control.gLogging_Full
               then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Created Debit FIChange Object ID: '||v_debit_fichange_id
                         );

                end if;

               if v_batch_parent_billing_acc_id is not null
               then
                              r_billing_account_list(r_billing_account_list.count     +     1)     :=     v_batch_parent_billing_acc_id;
               end if;

               -- Update the Debit FIChange Datamart
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_debit_fichange_id,
                    v_datamart_tf
               );

               -- Update the Payable FItem Datamart
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    v_datamart_tf
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Updated the data marts of Debit Fichange and Payable Fitem'
                    );

               end if;




               v_bv_table.delete;

               v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gFITrxStatus_Processed;
               v_bv_table (gbv_FITransaction_ProcessDate              ).business_variable_value := to_char( nvl(in_current_date_time,pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_bv_table
               );

               -- Update the FITransaction Datamart
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_datamart_tf
               );

          end loop; -- v_getBillingTransactions in c_getBillingTransactions


          if  r_billing_account_list.count   >   0
          then

               pkg_db_object.sp_update_billingaccount_dm
               (
                    in_session_id,
                    in_transaction_id,
                    r_billing_account_list
               );

          end if ;

          -- Set the Processing Date for Batch to Current Date
          v_batch_processing_date       :=        to_char
                                                  (    nvl(in_current_date_time,
                                                       pkg_os_time.fn_os_sysdate
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_action_object_id
                                                       )), pkg_os_constant.DragonDateFormatDefault
                                                  );  --OSBILLING-7829

          -- Set the Batch Status to Processed
          v_bv_table.delete;

          v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState        ).business_variable_value := gBatchStatus_Processed;
          v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ProcessDate     ).business_variable_value := to_char(nvl(in_current_date_time,pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,in_action_object_id)), pkg_os_constant.DragonDateFormatDefault);  --OSBILLING-7829
          v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus     ).business_variable_value := gSecurityStatus_Release;
          --
          -- OSBILLING-1816 : persist Billing Account Total Balance
          --
          v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                (
                                                                                                     in_session_id,
                                                                                                     in_transaction_id,
                                                                                                     pkg_os_object.fn_object_parent_get
                                                                                                     (
                                                                                                          in_session_id,
                                                                                                          in_transaction_id,
                                                                                                          in_action_object_id
                                                                                                     ),
                                                                                                     pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                                );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               v_bv_table

          );

          -- Update the FITransactionSet Datamart
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               v_datamart_tf
          );

          if  r_billing_account_list.count   >   0
          then

               pkg_db_object.sp_update_billingaccount_dm
               (
                    in_session_id,
                    in_transaction_id,
                    r_billing_account_list
               );

          end if ;

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;

     end if; -- v_object_state <> gBatchStatus_Referred

end  sp_disburse_payable_items;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_reprocess_disbursement
--
--   %USAGE
--   This procedure reprocess payables after clearing the security triggers.
--
--   %ALGORITHM
--
--   1.   Get all the selected transactions not to be processed for disbursement
--   4.   Delink all selected transaction from its parent
--   5.   Call the Security Triggers validation process
--   6.        Process further if no security rule voilated
--   7.             Search fitransaction objects from Parent Billing Account Transaction Set
--   8.             Loop through each fitransaction object
--   9.                  Call the process to create the FIChange objects to settle the Fitem
--   10.                 Set the processing business variables of FItransaction object
--   11.            Set the business variables of the Billing Account Transaction Set--   12.
--   13.       If rules are voilated, then Set the security status as 'New' for the batch if any of the security rule voilated
--   14.  Update the FITransactionSet Datamart
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_action_object_id                in             object.object_id%type,
--   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type,
--   in_current_date_time               in             date default null

-------------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_reprocess_disbursement
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null
)as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_reprocess_disbursement';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_datamart_tf                      char(1)                            :=   'T';
     v_current_date                     object_bv_value.business_variable_value%type;
     v_billacctrxset_id                 object.object_id%type;
     v_billacctrxset_cnt                number;
     v_fitransaction_id                 object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_fichange_action                  number;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_target_fitem_policy_id           object.object_id%type;
     v_target_fitem_policy_txn_id       object.object_id%type;
     v_target_fitem_entity_id           object.object_id%type;
     v_payable_fitem_id                 object.object_id%type;
     v_deselected_fitrx_id              object.object_id%type;
     v_rec_cnt                          number                             :=   0;
     v_rec_amt                          float                              :=   0;
     v_trx_policy_id                    object.object_id%type;
     v_trx_policy_trx_id                object.object_id%type;
     v_batch_parent_billing_acc_id      object.object_id%type;

     v_policy_id                        object.object_id%type;
     v_payment_amount                   float                              :=   0;
     v_customer_id                      object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_allocation_type                  number;

     v_rollup_item_amount               float                              :=   0;
     v_rollup_item_ref_fitem            object.object_id%type;

     v_target_fitem_due                 float                              :=   0;
     v_target_fitem_total_due           float                              :=   0;
     v_fitem_due_as_of_date             object_bv_value.business_variable_value%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_batch_processing_date            object_bv_value.business_variable_value%type;

     v_available_trx_balance            float                              :=   0;
     v_available_total_balance          float                              :=   0;
     v_used_amt                         float                              :=   0;
     v_total_recon_amount               float                              :=   0;
     v_billacct_balance                 float                              :=   0;
     v_policy_balance                   float                              :=   0;
     v_policy_trx_balance               float                              :=   0;

     v_list_object_list                 pkg_os_object.t_object_list              := pkg_os_object.gnull_object_list;
     v_list_object_id                   object.object_id%type;
     v_selected_elements                varchar2(2000);
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_object_index                     number;
     v_list_object_index                number;

     v_payable_item_rec                 t_payable_fitem_rec;
     v_payable_item_index               varchar2(100);
     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_selected_items_cnt               number    :=   0;
     v_total_items_cnt                  number    :=   0;
     v_fitem_rec                        dragon_fitem%rowtype;
     v_payable_item_list                t_fitem_list;

     v_deselected_fitrx_list            t_fitransaction_list;

     v_billaccount_Parent_id            object.object_id%type;

     v_debit_fichange_id                object.object_id%type;
     v_change_debit_fichange_id         object.object_id%type;
     v_debit_fichange_amount            number;
     v_sum_include                      object_bv_value.business_variable_value%type;

     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_payable_fitem_earned_amt         number;
     v_payable_fitem_unearned_amt       number;
     v_payable_fitem_paid_amt           number;
     v_txn_cnt                          number;
     v_txn_amount                       number;
     v_payable_fitem_balance            number;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_batch_total_amount               number                             :=   0;
     V_object_type                      object_bv_value.business_variable_value%type;
     v_ref_fitem_id                     object.object_id%type;
     v_deselected_fitrx_index           number;
     v_creator_batrxset_id              object.object_id%type;
     v_creator_bats_type_id             db_transaction_set_type.db_trxset_type_id%type;
     --v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_disbursement_start_date          object_bv_value.business_variable_value%type;  --20180725 Cheryl vaultdev-9710
     v_default_profile_id               object.object_id%type;  --osbilling-5618 cheryl 20180911

     cursor c_getBillingTransactions is

          select
               b.fitransaction_id id, a.total_items, nvl(a.posted_items,0) posted_items
          from
               dragon_billingaccounttrxset a, dragon_fitransaction b
          where
               a.billingaccounttrxset_id = b.batch_ref_no
          and
               a.billingaccounttrxset_id = in_action_object_id
          and
               b.status_enum = gFITrxStatus_InProcess
          order by
               b.generic_instance_number
          ;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Action Account ID : '||in_action_object_id

          );
     end if;



     V_object_type            :=   pkg_os_object.fn_object_type_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Object Type : '||V_object_type

          );

     end if;

     v_batch_total_amount     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id,
                                        pkg_db_object.gbv_FITrxSet_TotalAmount
                                   );

     v_txn_cnt                :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id,
                                        pkg_db_object.gbv_FITrxSet_TotalItems
                                   );


     if V_object_type <> gObjType_BillingAccountTrxSet
     then

          null;

     else

          v_list_object_list.delete;
          v_payable_item_rec.delete;
          v_payable_item_list.delete;
          v_deselected_fitrx_list.delete;

          pkg_os_object_cache_search.sp_obj_cache_children_get
          (
               in_session_id,
               in_transaction_id,
               in_object_cache,
               in_action_object_id,
               pkg_os_constant.gobjType_List,
               v_list_object_list
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Get the list count from cache: '||v_list_object_list.count
               );

          end if;

          if v_list_object_list.count > 0
          then

               v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

               v_list_object_index      :=        v_list_object_list.first;

               while v_list_object_index is not null
               loop

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Process the first record'
                         );

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... List Object ID: '||v_list_object_id
                         );

                    end if;

                    v_selected_elements           :=       pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_object_cache,
                                                            v_list_object_list(v_list_object_index),
                                                            pkg_os_constant_bv.gbv_ListElementsSelected
                                                       );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                              ' And element list: '||v_selected_elements
                         );

                    end if;

                    if v_selected_elements is not null
                    then

                         v_selected_object_ids.delete;

                         pkg_os_token.sp_tokenize_string
                         (
                              v_selected_elements,
                              ',',
                              v_selected_object_ids
                         );

                         v_object_index           :=        v_selected_object_ids.first;

                         if v_object_index is null
                         then

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '......... User did not make any selection from the list.'
                                   );

                              end if;

                              null;

                         else

                              while v_object_index is not null
                              loop

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Get the Object ID'
                                        );

                                   end if;

                                   v_selected_items_cnt     :=   v_selected_items_cnt + 1;

                                   v_deselected_fitrx_id      :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_object_cache,
                                                                      v_selected_object_ids( v_object_index ),
                                                                      pkg_os_constant_bv.gbv_ListElementObject
                                                                 );


                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Deselected Fitrx ID: '||v_deselected_fitrx_id
                                        );

                                   end if;


                                   v_deselected_fitrx_list(v_deselected_fitrx_id)      :=   v_deselected_fitrx_id;

                                   -- Get the reference fitem id
                                   v_ref_fitem_id                :=   pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_deselected_fitrx_id,
                                                                           gbv_FITrxRefAssociatedFItem
                                                                      );

                                   --
                                   -- iv. Delink the ReferenceDisbursementBatch reference from the selected FItem
                                   --

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ref_fitem_id,
                                        gbv_FItem_associatedBatch,
                                        null

                                   );
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ref_fitem_id,
                                        pkg_db_constant.gbvCurrDisburseAmount,
                                        null
                                   );--OSPRODUCT-3715
                                   pkg_os_datamart.sp_datamart_update_row (in_session_id,in_transaction_id,v_ref_fitem_id, v_datamart_tf);

                                   v_payable_fitem_balance       :=   pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_ref_fitem_id,
                                                                           gbv_fitem_amount_due
                                                                      );

                                   v_batch_total_amount          :=   v_batch_total_amount - (v_payable_fitem_balance*-1);

                                   v_txn_cnt                     :=   v_txn_cnt - 1;

                                  -- GCNA Merge
                                  ---
                                   --- Updating the FItem Security Status to Deleted as its been removed from Disbursement - GCNA-359
                                   ---
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ref_fitem_id,
                                        gbv_FItem_associatedBatch,
                                        null
                                   );
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ref_fitem_id,
                                        pkg_db_constant.gbvCurrDisburseAmount,
                                        null
                                   );--OSPRODUCT-3715
                                   ---
                                   --- Update the FItem Datamart
                                   ---
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ref_fitem_id,--v_billacctrxset_id,
                                        v_datamart_tf
                                   );
                                   -- GCNA Merge
                                   v_object_index                := v_selected_object_ids.next( v_object_index );

                              end loop; -- for each selection ...

                         end if; -- if the list contains one or more selections ...

                    end if;

                    v_list_object_index         :=        v_list_object_list.next(v_list_object_index);

               end loop;

          end if; -- if able to find the list ...

          if v_selected_items_cnt = 0 then

                io_action_outcome_id       :=       gOutcomeNoSelectedRecord;
                return;

          end if;

          v_deselected_fitrx_index      :=   v_deselected_fitrx_list.first;

          while v_deselected_fitrx_index is not null
          loop

               -- De-link the fitrasaction from its parent

               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_deselected_fitrx_index,
                    gObjType_FITransaction
               );

               v_deselected_fitrx_index :=   v_deselected_fitrx_list.next(v_deselected_fitrx_index);

          end loop;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Total Batch Amount: '||v_batch_total_amount
               );

          end if;

          -- Set the batch total amount

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_db_object.gbv_FITrxSet_TotalAmount,
               v_batch_total_amount
          );

          -- Set the control total items of the batch
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_db_object.gbv_FITrxSet_TotalItems,
               v_txn_cnt
          );

     if pkg_os_object.fn_object_children_count_get(in_action_object_id, gObjType_FITransaction) = 0
     then
          -- Set the Batch Status to Discarded
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_os_constant_bv.gbv_GenObjObjectState,
               gBatchStatus_Discarded
          );

          v_creator_batrxset_id  :=     pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             31756346
                                        );

          v_creator_bats_type_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_creator_batrxset_id,
                                             gbv_FITrxSetBatchType
                                        );


          if v_creator_batrxset_id is not null and v_creator_bats_type_id in (gBatch_PCAS_Policy,gBatch_PCAS_PolicyTrx)
          then

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_creator_batrxset_id,
                    pkg_os_constant_bv.gbv_GenObjObjectState,
                    42746
               );

          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '...... Change the Batch status to Deleted'
               );

          end if;

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               v_datamart_tf
          );
          -- 20180725 Cheryl vaultdev-9710
          -- cycle back for date

          v_batch_parent_billing_acc_id := pkg_os_object.fn_object_parent_get
                                           (in_session_id,
                                           in_transaction_id,
                                           in_action_object_id
                                           );
          --osbilling-5618 cheryl 20180911
          v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_batch_parent_billing_acc_id,
                                             gbv_BA_PreferredDisbProf --31705546
                                        );
          v_disbursement_start_date     := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_default_profile_id,
                                             gbv_BA_RefMstRecntDisbDate  --20180725 Cheryl vaultdev-9710
                                        );
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                      ' disbursement date before : '||v_disbursement_start_date
               );

          end if;
          v_disbursement_start_date := pkg_db_reversal.fn_reverse_disb_batch_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_batch_parent_billing_acc_id,
                                             v_disbursement_start_date
                                        );
        ---OSPRODUCT-1657 Starts-----

          /*pkg_os_object_io.sp_object_bv_set
               (
                in_session_id,
                in_transaction_id,
                v_default_profile_id,  -- osbilling-5618 cheryl 20180911
                gbv_BA_RefMstRecntDisbDate,
                v_disbursement_start_date
                );*/
          pkg_db_object.sp_ba_object_bv_set
                (
                  in_session_id,
                  in_transaction_id,
                  v_default_profile_id,
                  gbv_BA_RefMstRecntDisbDate,
                  v_disbursement_start_date
                );
          ---OSPRODUCT-1657 Ends-----
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                      ' disbursement date after : '||v_disbursement_start_date
               );

          end if;

          io_action_outcome_id := gOutcomeBatchDiscarded;

     else
         -- Call the Security Triggers validation process
          pkg_db_security_trigger.sp_process_security_triggers
          (
               in_session_id                 =>        in_session_id,
               in_transaction_id             =>        in_transaction_id,
               in_object_cache               =>        in_object_cache,
               in_billacc_trx_set_id         =>        in_action_object_id,
               io_action_outcome_id          =>        io_action_outcome_id,
               in_current_date_time          =>        in_current_date_time,
               io_process_billing_trx_tf     =>        v_process_billing_trx_tf
          );


          if v_process_billing_trx_tf = 'T'
          then
--2017/01/08 Cheryl osbilling-4697

               sp_disburse_batch_confirm
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,    -- BillingAccountTransactionSet ID
                    in_object_cache,
                    io_action_outcome_id
               );

/*
               for v_getBillingTransactions in c_getBillingTransactions
               loop

                    -- Get the reference fitem id
                    v_ref_fitem_id      :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_getBillingTransactions.id,
                                                  gbv_FITrxRefAssociatedFItem
                                             );


                    v_fitransaction_id  :=  v_getBillingTransactions.id;

                    select
                         *
                    into
                         v_payable_item_rec(v_ref_fitem_id)
                    from
                         dragon_fitem
                    where
                         fitem_id = v_ref_fitem_id
                    ;

                    v_fitem_rec                := v_payable_item_rec(v_ref_fitem_id);

                    v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ref_fitem_id,
                                                       gbv_fitem_amount_due
                                                  );




                    -- Set the Processing Date to Current Date
                    v_fichange_process_date     :=        to_char
                                                       (
                                                            pkg_os_time.fn_os_sysdate
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                  v_fitransaction_id--v_debit_fichange_id
                                                            ),pkg_os_constant.DragonDateFormatDefault
                                                       );

                    v_fichange_action         :=        gFIChange_Change;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date
                       );

                    end if;

                    v_debit_fichange_amount    :=        v_payable_fitem_balance*-1;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Debit FIChange amount: '||v_debit_fichange_amount
                         );

                    end if;

                    v_sum_include            :=        gFIChange_Yes;

                    v_payable_fitem_paid_amt     :=   nvl(pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ref_fitem_id,
                                                       gbv_fitem_paid_amount
                                                  ),0);

                    v_payable_fitem_paid_amt :=   v_payable_fitem_paid_amt + v_fitem_rec.balance;


                    v_bv_table.delete;

                    v_bv_table (gbv_fitem_paid_amount          ).business_variable_value := v_payable_fitem_paid_amt;
                    v_bv_table (gbv_fitem_earned_amount     ).business_variable_value := 0;
                    v_bv_table (gbv_fitem_unearned_amount   ).business_variable_value := 0;
                    v_bv_table (gbv_Fitem_processing_status ).business_variable_value := gFitemStatus_Processed;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ref_fitem_id,
                         v_bv_table

                    );

                    -- Create Debit FIChange Object

                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                      =>           in_session_id,
                         in_transaction_id                  =>            in_transaction_id,
                         in_parent_fitransaction_id         =>            v_fitransaction_id,
                         out_fichange_id                    =>            v_debit_fichange_id,
                         in_fichange_action                 =>            v_fichange_action,
                         in_fichange_action_delta           =>            v_debit_fichange_amount,
                         in_fichange_ref_fitem              =>            v_ref_fitem_id,
                         in_fichange_sum_include            =>            v_sum_include,
                         in_fichange_process_date           =>        v_fichange_process_date,
                         in_fichange_ref_pol                =>        v_fitem_rec.policy_id,
                         in_fichange_ref_pol_trx            =>        v_fitem_rec.policy_transaction_id,
                         in_fichange_belongs_to             =>        v_billaccount_Parent_id

                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Set BV Values for Fichange Object ID: '||v_debit_fichange_id
                         );

                    end if;

                    -- Update the Debit FIChange Datamart
                    pkg_os_datamart.sp_datamart_update_row   (OSBILLING-7154 wrong comment slash removed)
                    (
                         in_session_id,
                         in_transaction_id,
                         v_debit_fichange_id,
                         v_datamart_tf
                    ); -- OSBILLING-767 Datamat update is part of sp_fichange_create   (OSBILLING-7154 wrong comment slash removed)

                    -- Update the Payable FItem Datamart
                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ref_fitem_id,
                         v_datamart_tf
                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Updated the data marts of Debit Fichange and Payable Fitem'
                         );

                    end if;

                    v_bv_table.delete;

                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gFITrxStatus_Processed;
                    v_bv_table (gbv_FITransaction_ProcessDate              ).business_variable_value := to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billacctrxset_id), pkg_os_constant.DragonDateFormatDefault );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitransaction_id,
                         v_bv_table
                    );

                    -- Update the FITransaction Datamart
                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitransaction_id,
                         v_datamart_tf
                    );

                    v_txn_cnt      :=   v_txn_cnt + 1;
                    v_txn_amount   :=   v_txn_amount + v_debit_fichange_amount;

               end loop;

                 -- Set the batch entered by as current user
                /* pkg_os_object_io.sp_object_bv_set      (OSBILLING-7154,comment corrected)
                 (
                      in_session_id,
                      in_transaction_id,
                      in_action_object_id,
                      gbv_FITrxSetEnteredby,
                      v_entered_by
                 );                                     (OSBILLING-7154,comment corrected)



                 -- Set the Batch Status to Processed
                 pkg_os_object_io.sp_object_bv_set
                 (
                      in_session_id,
                      in_transaction_id,
                      in_action_object_id,
                      pkg_os_constant_bv.gbv_GenObjObjectState,
                      gBatchStatus_Processed
                 );

                 -- OSBILLING-1816 : persist Billing Account Total Balance
                 --
                 pkg_os_object_io.sp_object_bv_set
                 (
                      in_session_id,
                      in_transaction_id,
                      in_action_object_id,
                      pkg_db_object.gbv_FITrxSet_BATotalBalance,
                      pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           pkg_os_object.fn_object_parent_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_action_object_id
                           ),
                           pkg_db_object.gbv_BillAcc_TotalBalance
                      )
                 );

                 if v_session_control.gLogging_Full
                 then

                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           '...... Change the Batch status to Processed'
                      );

                 end if;

    --(OSBILLING-7154,wrong comment slash removed)
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... children_count' || pkg_os_object.fn_object_children_count_get(in_action_object_id, gObjType_FITransaction)
                    );


              if pkg_os_object.fn_object_children_count_get(in_action_object_id, gObjType_FITransaction) = 0
                then
               -- Set the Batch Status to Processed
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    pkg_os_constant_bv.gbv_GenObjObjectState,
                    48746
               );

                end if;
-- (OSBILLING-7154,wrong comment slash removed)
               -- Set the Processing Date for Batch to Current Date
               v_batch_processing_date       :=        to_char
                                                       (
                                                            pkg_os_time.fn_os_sysdate
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_action_object_id
                                                            ), pkg_os_constant.DragonDateFormatDefault
                                                       );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    pkg_db_object.gbv_BillAccTrxSet_ProcessDate,
                    v_batch_processing_date
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Set the Batch Process Date to Current Date'
                    );

               end if;

               -- Set the control total items of the batch
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billacctrxset_id,
                    pkg_db_object.gbv_FITrxSet_TotalItems,
                    v_txn_cnt
               );

               -- Set the control total amount of the batch
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billacctrxset_id,
                    pkg_db_object.gbv_FITrxSet_TotalAmount,
                    v_txn_amount
               );

               -- Set the security status
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus,
                    gSecurityStatus_Release
               );


               -- Update the FITransactionSet Datamart
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    v_datamart_tf
               );
*/ --osbilling-4697 end
               io_action_outcome_id := pkg_os_constant.gOutcome_OK;

          else

               -- Set the security status
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus,
                    gSecurityStatus_New
               );

               -- Update the FITransactionSet Datamart
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    v_datamart_tf
               );

               io_action_outcome_id := gOutcomeSecurityTriggerExists;

          end if;

          end if;
     end if;

end  sp_reprocess_disbursement;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_auto_disburse
--
--   %USAGE
--   This procedure creates a Disbursement Batch based on default Disbursement Profile and
--   sets the Batch Status to Request Sent to AP.
--
--   %ALGORITHM
--
--   1. Get the Default Disbursement Profile
--   2. Get the Billing Account Type
--   3. Call the procedure to get the list of Disbursement FItems
--   4. If number of Disbursement FItems > 0 then
--      a. Create a Disbursement Batch and set BVs
--      b. For each Disbursement FItem, do the following:
--         i. Create FITransaction and set BVs
--         ii. Create Disbursement FItem under recepient Billing Account and set BVs
--         iii. Create FIChange and set BVs
--         iv. Create offset FItem under the Billing Account of the Writing Company
--         v. Create FIChange and set BVs
--      c. Set the Batch Status to Request Sent to AP
--      d. Set the Batch Total Amount
--      e. Set OK Outcome
--   5. Else set the Outcome to No Disbursement Items
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billing_account_id              in             object.object_id%type,
--   in_current_date_time               in             date default null,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type


-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_auto_disburse
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_current_date_time               in             date default null,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_auto_disburse';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_default_profile_id               object.object_id%type;
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_disbursement_item_list           pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_disbursement_item_index          number;
     v_disbursement_fitem_id            object.object_id%type;
     --v_payable_item_rec                 t_payable_fitem_rec;
     v_disbursement_item_rec            dragon_fitem%rowtype;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_billing_acc_trx_set_id           object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_fitem_id                         object.object_id%type;
      v_fitem_offset_id                  object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_datamart_tf                      char(1) :=   'T';
     v_billing_acc_parent_id            object.object_id%type;
     v_batch_total_amount               number                             :=   0;
     v_fitem_sub_category_id            lookup_list_value.lookup_enum%type;

     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

     -- SK: Added variables for OSBILLING -61 GCNA requirement
     v_billing_acc_status               object_bv_value.business_variable_value%type;
     v_stop_credit_disburs              object_bv_value.business_variable_value%type;
     v_stop_credit_disburs_policy       object_bv_value.business_variable_value%type;
     v_policy_term_id                   object_bv_value.business_variable_value%type;
     -- SK: End Added variables for OSBILLING -61 GCNA requirement

     v_stop_all                         object_bv_value.business_variable_value%type;
     v_stop_all_billing                 object_bv_value.business_variable_value%type;
     v_billacc_curr_suspension          object.object_id%type;

     v_refund_wait_period               number;
     v_disburse_item_count              number;
     v_count                            number := 0;
     v_auto_refund_limit                number;
     v_total_disbursement_amt           number := 0;
     v_fitem_balance                    number;
     v_policy_id                        object.object_id%type;
     v_ultimate_template_id             object.object_id%type;

     --XXXXDEV-418
     v_cash_src_bats_id                 object.object_id%type;
     v_default_prfl_src                 pd_property.pd_property_value%type;
     v_assc_prfl_id                     object.object_id%type;
     v_new_usg_created_tf               char(1):= 'F';
     v_disb_prof_usg_updt_id      object.object_id%type;
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_parent_gen_object_id             object.object_id%type;
     v_ba_obj_label                     object_bv_value.business_variable_value%type;
     v_disb_created_using_prfl          object.object_id%type;
     v_disbprfl_mode                    object_bv_value.business_variable_value%type;
     v_disbprfl_used                    object.object_id%type;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     v_auto_disb_tolerance_amnt          pd_property.pd_property_value%type;  --2018-05-17 GCNA-2966 Cheryl Add tolerance
     --xxxdev-2241 Sumeet Aug 05 2019--OSBILLING-6460
     v_disbursement_mode                number;
     v_fitem_category_id                object_bv_value.business_variable_value%type;
     v_cash_exists_tf                   char(1):= 'F';
     v_credit_exists_tf                 char(1):= 'F';
     v_is_cc_prof_exp_tf                char(1) := 'F';
      v_trans_effective_dt               DATE; --OSBILLING-7271


     v_bv_table                         pkg_os_object_io.t_bv_table;          -- OSBILLING-7313
     v_object_cache                     pkg_os_object_cache.t_object_cache ;  -- OSBILLING-7313
     v_process_billing_trx_tf           char(1)     :=   'F';                 -- OSBILLING-7313
     v_fitransaction_list               pkg_os_object.t_object_list;          -- OSBILLING-7313
     v_fitransaction_index              number;
     v_process_flag                     boolean default false;
     v_fitem_status                     lookup_list_value.lookup_enum%type;
     v_current_ba_suspension_list       pkg_os_object.t_object_list;
     v_current_ba_susp_list_index       number;
     v_suspended_trx                    varchar2(400):=null;
     v_current_date                     date;
     v_Susp_EffectiveDate               object_bv_value.business_variable_value%type;

     v_fitem_billingaccount_list        t_fitem_billingaccount_tab;  --OSPRODUCT-11625
     v_fitem_ba_list_index              number;
     --UTPRODUCT-4464
     v_fitem_category_hold              number;
     v_sub_type                         number;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Auto Disbursement for Billing Account ID : '||in_billing_account_id

          );

     end if;

     v_billing_acc_parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountParent
                                        );

     v_billing_acc_status          :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillAcc_Status  -- 210153 Generic Object State
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| v_billing_acc_status : '||v_billing_acc_status
          );

     end if;

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_parent_gen_object_id   :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        29704546--Generic Parent Object
                                   );
     v_ba_obj_label :=   pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_parent_gen_object_id,
                              211882--Object Label
                         );
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     --
     -- Check if credit disbursement needs to be stopped for this billing account's related policies
     -- SK: Added for OSBILLING-61 GCNA requirement
     --
     if v_billing_acc_status = g_BAObjectStateSuspended
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '|||||| Inside if v_billing_acc_status = 37346 : '
               );

          end if;


               -- commenting   osproduct-2013/3343
        /*  v_billacc_curr_suspension     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_billing_account_id,
                                                  gbv_BillAcc_CurrSuspension
                                             );

          v_stop_all                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All
                                             );

         v_stop_all_billing                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All_Billing
                                             );

          v_stop_credit_disburs         :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_Credit_Disb
                                             );

          if   v_stop_credit_disburs = 1
               or
               v_stop_all = 1 or v_stop_all_billing=1
          then

               io_action_outcome_id := 48446;

               return;

          end if;
          */
               --osproduct 2013/3343
          pkg_db_suspension.sp_get_active_susp_objects
					(
						in_session_id,
						in_transaction_id,
						null,
						in_billing_account_id,
						v_current_ba_suspension_list,
						2
					);
           v_current_date := pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, in_billing_account_id);
          if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        'Total suspension Objects: '||v_current_ba_suspension_list.count||
                        '...Current Date: '||v_current_date
                    );
          end if;

          v_current_ba_susp_list_index :=v_current_ba_suspension_list.first;

          while v_current_ba_susp_list_index is not null and v_current_ba_suspension_list.count>0
               loop
               v_suspended_trx := pkg_os_object_io.fn_object_bv_get
												(
												  in_session_id,
												  in_transaction_id,
												  v_current_ba_suspension_list(v_current_ba_susp_list_index),
												  32525248
												 );
                v_Susp_EffectiveDate :=  to_char(
                                               to_date(pkg_os_object_io.fn_object_bv_get
                                                (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_ba_suspension_list(v_current_ba_susp_list_index),
                                                  pkg_db_suspension.gbv_Suspension_Eff_Date
                                                 ),
                                                   pkg_os_constant.DragonDateFormatDefault
                                                  ),
                                                pkg_os_constant.DragonDateFormatDefault);
               if  pkg_os_token.fn_find_in_set ( 3, v_suspended_trx) ='T' -- credit disbursemnt is suspended
                   and trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault)) <= trunc(v_current_date)
                    then
                      io_action_outcome_id := 48446;

               return;


              end if;
          v_current_ba_susp_list_index := v_current_ba_suspension_list.next(v_current_ba_susp_list_index);
          end loop;

          --end loop;

     end if;
     --
     -- SK: End Added for OSBILLING-61 GCNA requirement
     --

     --
     --  Check if there is any active Disbursement Profile
     --

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Get the default disbursement profile'
          );

     end if;
      --
     -- Get the default disbursement profile
     --

      -- get the ref BV value for Preferred Disbursement Profile
     --XXXXDEV-418 --OSBILLING-6460
     v_default_prfl_src   := nvl(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.billing_account_id, gDisbursementProfileSrc),1);

     if v_default_prfl_src = gDisbProfileSrcBillingAct
     then--/XXXXDEV-418
           v_default_profile_id:= pkg_os_object_io.fn_object_bv_get
                                    (
                                          in_session_id,
                                          in_transaction_id,
                                          in_billing_account_id,
                                          gbv_BA_PreferredDisbProf
                                    );

            v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_default_profile_id,
                                                               gbv_Disb_ctf_object_used
                                                         );

            if v_default_profile_id is null
            then

                    io_action_outcome_id := gOutcomeNoProfileExists;

                    return;
            end if;



       end if;

    --
     --  Get the Billing Accouynt Type
     --

     v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_billing_account_id,
                                       gbv_BillingAccountType
                                  );

     --
     --  Get the list of Disbursement FItems based on the Billing Account Type
     --

     v_disbursement_item_list.delete;

     sp_get_disbursement_items
     (
          in_session_id,
          in_transaction_id,
          in_billing_account_id,
          v_billing_account_type_id,
          v_disbursement_item_list
     );

     v_disburse_item_count := v_disbursement_item_list.count;

     if v_disbursement_item_list.count > 0
     then

          v_disbursement_item_index     :=  v_disbursement_item_list.first;

          while v_disbursement_item_index is not null
          loop

               select
                     balance,policy_id,creator_fitransactionset_id,fitem_category_id
               into
                     v_fitem_balance,v_policy_id,v_cash_src_bats_id,v_fitem_category_id--XXXXDEV-418
               from
                     dragon_fitem
               where
                     fitem_id = v_disbursement_item_list(v_disbursement_item_index)
               ;

               v_total_disbursement_amt :=   v_total_disbursement_amt +  nvl(v_fitem_balance,0);
               
               --UTPRODUCT-4464
               if v_fitem_category_hold is null
               then
                    v_sub_type := case when v_fitem_category_id = gFItem_Category_Comm
                                        then gFitem_sub_type_Comm
                                       when v_fitem_category_id = gFItem_Category_Tax
                                        then gFitem_sub_type_Tax
                                       when v_fitem_category_id = gFItem_Category_Fee
                                        then gFitem_sub_type_Fee
                                       when v_fitem_category_id = gFItem_Category_Surcharge
                                        then gFitem_sub_type_Surcharge
                                       when v_fitem_category_id = gFitem_Category_Claim
                                        then gFitem_sub_type_Claim
                                       else gFitem_sub_type_Misc
                                  end;
                    v_fitem_category_hold := v_fitem_category_id;
              elsif v_fitem_category_hold <> v_fitem_category_id
                then v_sub_type := gFitem_sub_type_Misc;

              end if;


                 --OSBILLING-6460
                 if v_default_prfl_src = gDisbProfileSrcOrgPayProf and v_credit_exists_tf  = 'F' and v_fitem_category_id <> gFItem_Category_Cash  --cash
                 then
                           v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_billing_account_id,
                                                             gbv_BA_PreferredDisbProf
                                                        );
                           v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_default_profile_id,
                                                               gbv_Disb_ctf_object_used
                                                         );

                           v_credit_exists_tf  := 'T';
                end if;

               --XXXXDEV-418
               if v_default_prfl_src = gDisbProfileSrcOrgPayProf and  v_cash_exists_tf   = 'F' and v_fitem_category_id = gFItem_Category_Cash -- Original Payment Profile
               then
                    v_assc_prfl_id :=  pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_cash_src_bats_id,
                                                  PKG_CS_PROFILES.gbv_Ref_AssociatedProfile
                                             );

                    v_cash_exists_tf   := 'T';

                    begin

                         select
                              (pay_profile_id)
                         into
                              v_default_profile_id
                         from
                              dragon_pay_profile
                         where
                              ctf_object_id = v_assc_prfl_id;

                            if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Account Disubrsement'||v_disburse_item_count ||
                                             ' v_default_profile_id ' || v_default_profile_id  ||
                                             ' v_assc_prfl_id ' || v_assc_prfl_id
                                        );
                         end if;


                     exception
                          when others then


                               v_cash_exists_tf   := 'F';

                     end;

               end if;


                if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '......  v_default_prfl_src '||v_default_prfl_src ||
                                         ' v_default_profile_id ' || v_default_profile_id ||
                                         ' v_credit_exists_tf ' || v_credit_exists_tf ||
                                         ' v_cash_src_bats_id ' || v_cash_src_bats_id ||
                                         ' v_fitem_category_id ' || v_fitem_category_id ||
                                         ' v_assc_prfl_id ' || v_assc_prfl_id
                                   );

                 end if;

               v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);

          end loop;
          --OSBILLING-6460
          if v_cash_exists_tf ='T' and v_credit_exists_tf ='T'
          then

               v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_billing_account_id,
                                                        gbv_BA_PreferredDisbProf
                                                   );

                 v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                               (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_default_profile_id,
                                                     gbv_Disb_ctf_object_used
                                               );

          end if;
               --xxxdev-2241 Sumeet Aug 05 2019
          if v_default_profile_id is null
          then

               io_action_outcome_id := gOutcomeNoProfileExists;
               return;
          end if;
          --/XXXXDEV-418

          v_disbursement_mode     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                           in_session_id,
                                           in_transaction_id,
                                           v_assc_prfl_id,
                                           PKG_CS_PROFILES.gbv_CashTrsPrfMode
                                     );

          v_total_disbursement_amt :=   v_total_disbursement_amt*-1;

          v_auto_refund_limit      :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id, 12931);
          --2018-05-17 GCNA-2966 Cheryl Add tolerance
          
          /*UTXPRODUCT-55 Start*/
          if v_fitem_category_id = gFItem_Category_Comm then
               v_auto_disb_tolerance_amnt      :=   nvl(pkg_os_product.fn_product_property_get
                                                        ( in_session_id, 
                                                        in_transaction_id,
                                                        v_policy_id,
                                                        gAutoDisbCommToleranceAmnt -- For commission disbursement
                                                        )
                                                        ,0);          
          else
               v_auto_disb_tolerance_amnt      :=   nvl(pkg_os_product.fn_product_property_get
                                                        ( in_session_id, 
                                                        in_transaction_id,
                                                        v_policy_id,
                                                        gAutoDisbToleranceAmnt
                                                        )
                                                        ,0);
          end if;
                                                   
          /*UTXPRODUCT-55 End*/
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Total Disbursement Amt : '||v_total_disbursement_amt||
                    ' Auto Refund Limit : '||v_auto_refund_limit ||
                    ' v_default_profile_id ' || v_default_profile_id ||
                    ' v_total_disbursement_amt ' ||v_total_disbursement_amt ||
                    ' Auto Disbursement Tolerance Amount : ' ||v_auto_disb_tolerance_amnt
               );

          end if;

          --OSBILLING-6460
           if v_disbursement_mode = gPaymentModeCC
                then

                    v_is_cc_prof_exp_tf :=fn_is_cc_prof_expired_tf
                                            (
                                               in_session_id,
                                               in_transaction_id,
                                               v_assc_prfl_id
                                             );


                   if v_is_cc_prof_exp_tf  = 'T'
                    then
                         io_action_outcome_id := gOutcomePayProfiledExpired;
                         return;

                    end if;
           end if;

          if v_total_disbursement_amt <= v_auto_refund_limit
             and v_total_disbursement_amt >= v_auto_disb_tolerance_amnt --2018-05-17 GCNA-2966 Cheryl Add tolerance
          then

               --
               --  Create a Disbursement Batch
               --

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_object.gObjType_BillingAccountTrxSet,
                    in_billing_account_id,
                    v_billing_acc_trx_set_id
               );


               -- Set the batch type as 'Disbursement Batch'
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    pkg_db_object.gbv_FITrxSet_BatchType,
                    gBatch_PayablesDisbBatch
               );
               
               --UTPRODUCT-4464
               -- Set the sub type 
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetSubType,
                    v_sub_type
               );
               

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Set the batch type as - Disbursement Batch'
                    );

               end if;

               -- Set the batch entry type as Manual
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetEntryType,
                    gBatchEntryMethod_System
               );

               -- Set the batch entered by as current user
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetEnteredby,
                    v_entered_by
               );

               -- Set the posted date as current date
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetDatePosted,
                    to_char
                    (    nvl(in_current_date_time,
                         pkg_os_time.fn_os_sysdate
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id
                         )),
                         pkg_os_constant.DragonDateFormatDefault
                    )  --OSBILLING-7829
               );

               -- Set the external batch id
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetExternalBatchId,
                    'Batch'|| to_char
                              (    nvl(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id
                                   )),
                                   pkg_os_constant.DragonDateFormatDefault
                              )  --OSBILLING-7829
               );

               v_disbursement_item_index     :=  v_disbursement_item_list.first;

               while v_disbursement_item_index is not null
               loop

                    select
                         *
                    into
                         v_disbursement_item_rec
                    from
                         dragon_fitem
                    where
                         fitem_id = v_disbursement_item_list(v_disbursement_item_index);

                    --xxxdev-2241 Sumeet Aug 05 2019 --OSBILLING-6460
                    --  v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriod);
                    if v_disbursement_mode = gPaymentModeEFT  then--EFT

                         v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodEFT);

                    elsif v_disbursement_mode = gPaymentModeCC then --CC

                         v_refund_wait_period     :=   pkg_os_product.fn_product_property_get(  in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodCC);

                    elsif v_disbursement_mode = gPaymentModeCheque then--Cheque

                         v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodCheque);

                    end if;

                    if (v_disbursement_mode = gPaymentModeEFT)
                    then

                         v_fitem_status      :=        gFitemStatus_Processed;
                         v_process_flag      :=        true;

                    else

                         v_fitem_status      :=        gFitemStatus_ReqSentToAP;
                         v_process_flag      :=        false;


                    end if;

                    if v_session_control.gLogging_Full
                    then

                          pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............... fitem policy_id '||v_disbursement_item_rec.policy_id||
                              ' v_refund_wait_period : '||v_refund_wait_period ||
                              ' v_disbursement_item_rec.date_effective ' ||v_disbursement_item_rec.date_effective ||
                              ' v_disbursement_item_rec.policy_id ' ||v_disbursement_item_rec.policy_id  ||
                              ' v_disbursement_mode ' ||v_disbursement_mode ||
                              ' v_total_disbursement_amt ' ||v_total_disbursement_amt ||
                              'v_auto_disb_tolerance_amnt ' ||v_auto_disb_tolerance_amnt ||
                              ' v_auto_refund_limit ' || v_auto_refund_limit
                         );

                    end if;

                    --v_disbursement_item_rec := v_payable_item_rec(v_disbursement_item_index);
                    --xxxdev-2241 Sumeet Aug 05 2019 --OSBILLING-6460
                    --if trunc(v_disbursement_item_rec.date_effective) + nvl(v_refund_wait_period,0) <= trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,v_disbursement_item_rec.policy_id))
                    if v_disbursement_item_rec.policy_id IS NULL THEN  --OSBILLING-7271

                         v_trans_effective_dt := PKG_DB_FUNCTIONS.fn_get_billacc_current_date(in_session_id,in_transaction_id,in_billing_account_id);

                    else

                         v_trans_effective_dt :=  pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,v_disbursement_item_rec.policy_id);

                    end if;

                    if trunc(v_disbursement_item_rec.date_effective) + nvl(v_refund_wait_period,0) <= trunc(v_trans_effective_dt)
                    then

                         -- Create new FITransaction Object

                         pkg_db_object.sp_fitransaction_create
                         (
                              in_session_id                      =>    in_session_id,
                              in_transaction_id                  =>    in_transaction_id,
                              in_fitrx_parent_fitrxset_id        =>    v_billing_acc_trx_set_id,
                              out_fitransaction_id               =>    v_fitransaction_id,
                              in_fitrx_type                      =>    gFITrxType_Disbursement,
                              in_fitrx_ref_billing_account       =>    v_disbursement_item_rec.billing_account_id,
                              in_fitrx_ref_associatedpolicy      =>    v_disbursement_item_rec.policy_id,
                              in_fitrx_ref_associatedpoltrx      =>    v_disbursement_item_rec.policy_transaction_id,
                              in_fitrx_ref_actionpolicy          =>    v_disbursement_item_rec.policy_id,
                              in_fitrx_ref_actionpoltrx          =>    v_disbursement_item_rec.policy_transaction_id,
                              in_fitrx_ref_associatedfitem       =>    v_disbursement_item_list(v_disbursement_item_index),
                              in_fitrx_effective_date            =>    to_char( nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                              in_fitrx_gl_date                   =>    to_char( nvl(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                              in_fitrx_amount                    =>    (v_disbursement_item_rec.balance)*(-1),
                              in_fitrx_object_state              =>    gFITrxStatus_InProcess
                          );

                         -- Update the FITransaction Datamart
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitransaction_id,
                              v_datamart_tf
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............... Updated the data mart of FITransaction'
                            );

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_disbursement_item_list(v_disbursement_item_index),
                              gbv_FItem_associatedBatch,
                              v_billing_acc_trx_set_id
                         );
                         pkg_os_object_io.sp_object_bv_set
                          (
                               in_session_id,
                               in_transaction_id,
                               v_disbursement_item_list(v_disbursement_item_index),
                               pkg_db_constant.gbvCurrDisburseAmount,
                               v_disbursement_item_rec.BALANCE
                          );--OSPRODUCT-3715
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_disbursement_item_list(v_disbursement_item_index),
                              v_datamart_tf
                         );

                         v_count := v_count + 1;

                         v_batch_total_amount     :=   v_batch_total_amount + v_disbursement_item_rec.balance;

                    end if;

                    v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);

               end loop; -- while v_disbursement_item_index is not null

               --
               -- iv. Upate the batch total amount for the disbursement batch
               --
               v_bv_table.delete;

               -- Set the batch total amount
               v_bv_table (pkg_db_object.gbv_FITrxSet_TotalAmount  ).business_variable_value := (v_batch_total_amount * -1);

               -- Set the batch total items
               v_bv_table ( pkg_db_object.gbv_FITrxSet_TotalItems  ).business_variable_value := v_count;

               -- Set the disbursement profile reference
               v_bv_table ( gbv_BATrxSet_RefDisbProfile  ).business_variable_value := v_default_profile_id;

               --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
               v_disb_created_using_prfl :=     pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_acc_trx_set_id,
                                             31711146
                                        );

               v_disbprfl_used:= pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disb_created_using_prfl,
                                             30013446
                                        );


               v_disbprfl_mode:= pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disbprfl_used,
                                             30010546
                                        );
               if  v_disbprfl_mode = 1 then --Cheque disbursement mode

                    v_bv_table ( gbv_Disbursement_Payee_Name  ).business_variable_value := v_ba_obj_label;

               end if;
               --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

               -- Set the Object with its BV values
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table

               );
               --
               -- v. Verify whether the disbursement batch has any security triggers
               --
               -- OSBILLING-7313
               pkg_db_security_trigger.sp_process_security_triggers
               (
                    in_session_id                 =>        in_session_id,
                    in_transaction_id             =>        in_transaction_id,
                    in_object_cache               =>        v_object_cache,
                    in_billacc_trx_set_id         =>        v_billing_acc_trx_set_id,
                    io_action_outcome_id          =>        io_action_outcome_id,
                    in_current_date_time          =>        in_current_date_time,
                    io_process_billing_trx_tf     =>        v_process_billing_trx_tf

               );

               --
               -- Verify the Process Billing Trx Status
               --
               if (  v_process_billing_trx_tf = 'T' )
               then

                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         gObjType_FITransaction,
                         v_fitransaction_list
                    );

                    v_fitransaction_index    :=     v_fitransaction_list.first;
                    --
                    -- a. Loop for the all FITrnsactions
                    --
                    while v_fitransaction_index is not null
                    loop

                         --
                         -- b. Create Fitem of category 'Disburse' and of type 'debit' under customer ba
                         --
                         sp_disburse_fitem_create
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitransaction_list(v_fitransaction_index),
                              v_fitem_status,
                              v_fitem_billingaccount_list    --OSPRODUCT-11625
                         );

                         --GCNA Merge

                         --GCNA-1080 set current transaction reference for billing trx
                         pkg_os_object_io.sp_object_bv_set
                         (
                               in_session_id,
                               in_transaction_id,
                               v_billing_acc_trx_set_id,
                               pkg_db_cashpost.gbv_FITrxSetCurrTrx,--29743646,
                               v_fitransaction_list(v_fitransaction_index)
                         );
                              --GCNA Merge
                         v_fitransaction_index := v_fitransaction_list.next(v_fitransaction_index);
                    end loop;

                    if v_fitem_billingaccount_list.count > 0    --OSPRODUCT-11625
                    then

                        v_fitem_ba_list_index := v_fitem_billingaccount_list.first;

                        while v_fitem_ba_list_index is not null
                        loop

                             if v_session_control.gLogging_Full then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '...... Updating the Datamart for Billing Account ID: '
                                       || v_fitem_billingaccount_list(v_fitem_ba_list_index)
                                  );

                             end if;

                             merge into billingaccount_datamart_update du     --OSPRODUCT-11625 Commented
                             using (select
                                     v_fitem_billingaccount_list(v_fitem_ba_list_index) billing_account_id
                                  from
                                     dual
                                ) stg
                             on (du.billing_account_id = stg.billing_account_id
                                  and
                                  du.process_timestamp is null
                                 )
                             when not matched
                             then
                             insert
                                (
                                    billing_account_id,
                                     entry_timestamp
                                )
                             values
                                (
                                     stg.billing_account_id,
                                     sysdate
                                );



                             v_fitem_ba_list_index := v_fitem_billingaccount_list.next(v_fitem_ba_list_index);

                        end loop;

                    end if;

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         v_datamart_tf
                    );

                    --
                    -- c. If the process flag  is true, i.e they are no securty triggers and disbursemnent mode is EFT
                    --
                    if (v_process_flag  = true)
                    then
                         --
                         --   Invoke the sp_disburse_trx_process to process the disbursement
                         --

                         pkg_db_object.sp_billing_acct_trx_process
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,
                              v_object_cache,
                              io_action_outcome_id,
                              in_current_date_time

                         );

                         v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;

                    else  -- i.e. Check

                         --
                         --  Set the batch state as Request Sent to AP
                         --
                         v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := pkg_db_object.gBatchStatus_RequestAP;

                    end if;

                   --
                   -- e. Set the security status as 'Released' and set the outcome as OK
                   --
                   v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;

                   io_action_outcome_id     :=   pkg_os_constant.gOutcome_OK;

               else

                   --
                   --   i. Set the batch state as 'Referred' and security status as 'New'
                   --
                   v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Referred;
                   v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_New;

                   --
                   --   ii. Set the outcome as SecurityTriggerExists
                   --
                   io_action_outcome_id := gOutcomeSecurityTriggerExists;

              end if;

               -- Set the Object with its BV values
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table

               );

               --
               --   viii. Update the datamart of BillingAccountTrxSet
               --
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_datamart_tf

               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............... Updated the data mart of Disbursement Batch' ||v_billing_acc_trx_set_id
                    );

               end if;


          else

               io_action_outcome_id := 51431;

               return;

          end if;

     else

          io_action_outcome_id := gOutcomeNoSelectedRecord;

          return;

     end if;   -- if v_profile_list.count > 0

     if v_count = 0
     then

          pkg_os_object.sp_object_delete
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id ,
               v_billing_acc_trx_set_id,
               gObjType_BillingAccountTrxSet
          );

          io_action_outcome_id := gOutcomeRefundWaitPeriod;

          return;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end  sp_auto_disburse;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_decline_disbursement
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_billing_acc_trx_set_id          in             object.object_id%type,
--   io_action_outcome_id               in out nocopy  outcome.outcome_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_decline_disbursement
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as
     v_procedure_name              constant system_log.program_name%type   := pkg_name||'sp_decline_disbursement';
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_fitx_object_list            pkg_os_object.t_object_list    :=   pkg_os_object.gnull_object_list;
     r_fitrx_index                 number;
     v_ref_fitem_id                object.object_id%type;
     v_Datamart                    char := 'T';
  --new code osproduct-1452
     v_Ref_Cur_Aency_Recon_Batch_id object_type.object_type_id%type;
     v_Ref_Cur_Agency_Recon_Batch   constant object_type.object_type_id%type               :=   32537646;
     v_Ref_Cur_Agency_Recon_state   object_type.object_type_id%type;
     g_StmtBatchReconciledState    constant lookup_list_value.lookup_enum%type := 42746;

begin
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering the process to decline the disbursement batch '||
               'in_billing_acc_trx_set_id'||in_billing_acc_trx_set_id
          );

     end if;


      --
      -- 1. Get the FITransactions created under the Billing Account Transaction Set. This is required to make code re-entrant.
      --

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_billing_acc_trx_set_id,
          gObjType_FITransaction,
          v_fitx_object_list

     );

          r_fitrx_index  :=   v_fitx_object_list.first;



          while r_fitrx_index is not null
          loop


               v_ref_fitem_id      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitx_object_list(r_fitrx_index),
                                             gbv_FITrxRefAssociatedFItem
                                        );
               -- set the ref disbrsemnt batch as null and update the datamart

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    32005946,
                    null
               );
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    pkg_db_constant.gbvCurrDisburseAmount,
                    null
               );--OSPRODUCT-3715

 --new code osproduct-1452
                -- when the disbursemnt is initiated by mistake, it is deleted from the in-process tab, but the agency recon is not reverted to reconciled state
                v_Ref_Cur_Aency_Recon_Batch_id      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ref_fitem_id,
                                             v_Ref_Cur_Agency_Recon_Batch
                                        );

                v_Ref_Cur_Agency_Recon_state      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_Ref_Cur_Aency_Recon_Batch_id,
                                             gbv_BillAcc_Status
                                        );

                pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_Ref_Cur_Aency_Recon_Batch_id,
                    gbv_BillAcc_Status,
                    g_StmtBatchReconciledState
               );

                pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_Ref_Cur_Aency_Recon_Batch_id,
                    v_datamart
               );


               --end code osproduct-1452

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    v_datamart
               );

               r_fitrx_index  :=   v_fitx_object_list.next(r_fitrx_index);

          end loop;



          io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_decline_disbursement;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_auto_disburse_policy
--
--   %USAGE
--   This procedure creates a Disbursement Batch based on default Disbursement Profile and
--   sets the Batch Status to Request Sent to AP.
--
--   %ALGORITHM
--
--   1. Get the Default Disbursement Profile
--   2. Get the Billing Account Type
--   3. Call the procedure to get the list of Disbursement FItems
--   4. If number of Disbursement FItems > 0 then
--      a. Create a Disbursement Batch and set BVs
--      b. For each Disbursement FItem, do the following:
--         i. Create FITransaction and set BVs
--         ii. Create Disbursement FItem under recepient Billing Account and set BVs
--         iii. Create FIChange and set BVs
--         iv. Create offset FItem under the Billing Account of the Writing Company
--         v. Create FIChange and set BVs
--      c. Set the Batch Status to Request Sent to AP
--      d. Set the Batch Total Amount
--      e. Set OK Outcome
--   5. Else set the Outcome to No Disbursement Items
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_policy_id                       in             object.object_id%type,
--   in_current_date_time               in             date default null,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_auto_disburse_policy
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_current_date_time               in             date default null,
     in_object_cache               in out         pkg_os_object_cache.t_object_cache, -- GCNA Merge
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     -- #MP
     in_payer_bilingAccount_id          in             object.object_id%type default null  -- OSPRODUCT-3575
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_auto_disburse_policy';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id               object.object_id%type := pkg_db_functions.fn_get_policy_billing_account(in_session_id, in_transaction_id, in_policy_id);
     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_default_profile_id               object.object_id%type;
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_disbursement_item_list           pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;

     v_disbursement_item_index          number;
     v_disbursement_fitem_id            object.object_id%type;
     --v_payable_item_rec                 t_payable_fitem_rec;
     v_disbursement_item_rec            dragon_fitem%rowtype;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_billing_acc_trx_set_id           object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_datamart_tf                      char(1) :=   'T';
     v_billing_acc_parent_id            object.object_id%type;
     v_batch_total_amount               number                             :=   0;
     v_fitem_sub_category_id            lookup_list_value.lookup_enum%type;

     -- Added variables for OSBILLING -61 GCNA requirement
     --v_billing_acc_status               object_bv_value.business_variable_value%type;
     --v_stop_credit_disburs              object_bv_value.business_variable_value%type;
     --v_policy_term_id                   object_bv_value.business_variable_value%type;
     -- End Added variables for OSBILLING -61 GCNA requirement

     v_refund_wait_period               number;
     v_disburse_item_count              number;
     v_count                            number := 0;
     v_auto_refund_limit                number;
     v_total_disbursement_amt           number := 0;
     v_fitem_balance                    number;
     v_policy_id                        object.object_id%type;
     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_ultimate_template_id             object.object_id%type;
     v_disbursement_mode                number; -- GCNA Merge
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_parent_gen_object_id             object.object_id%type;
     v_ba_obj_label                     object_bv_value.business_variable_value%type;
     v_disb_created_using_prfl          object.object_id%type;
     v_disbprfl_mode                    object_bv_value.business_variable_value%type;
     v_disbprfl_used                    object.object_id%type;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

     -- #MP
     v_payer_rec                        PKG_DB_MULTIPAYER.r_payer;
     v_inv_multipayer_mode              boolean;
     v_policy_term_id                   object.object_id%type;
     -- /#MP
     v_auto_disb_tolerance_amnt          pd_property.pd_property_value%type;  --2018-05-17 GCNA-2966 Cheryl Add tolerance
     -- XXXXDEV-1903
     v_cash_src_bats_id                 object.object_id%type;
     v_default_prfl_src                 pd_property.pd_property_value%type;
     v_assc_prfl_id                     object.object_id%type;
     v_new_usg_created_tf               char(1):= 'F';
     --OSBILLING-6460
      v_disb_prof_usg_updt_id            object.object_id%type;
     v_src_payment_mode                 object_bv_value.business_variable_value%type;
     v_fitem_category_id                object_bv_value.business_variable_value%type;
     v_cash_exists_tf                   char(1):= 'F';
     v_credit_exists_tf                 char(1):= 'F';
     v_is_cc_prof_exp_tf                char(1) := 'F';
     --UTPRODUCT-4464
     v_fitem_category_hold              number;
     v_sub_type                         number;     
     
begin

     -- #MP
     -- Check the multi-payer mode, if ON, put the payer into the v_payer_rec record.
     --
     if in_payer_bilingAccount_id is not null then

        v_billing_account_id := in_payer_bilingAccount_id;

     end if;

     /*v_policy_term_id := pkg_db_functions.fn_get_policy_current_term
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_id
                         );
    PKG_DB_MULTIPAYER.sp_payer_validate
     (
          in_session_id,
          in_transaction_id,
          in_payer_entity_id       => in_payer_entity_id,
          io_payer_rec             => v_payer_rec,                  -- the payer recored will be taken from Policy Term.
          io_inv_multipayer_mode   => v_inv_multipayer_mode,
          in_policy_id             => in_policy_id,
          in_policy_term_id        => v_policy_term_id
     );
     if v_inv_multipayer_mode
     then
          -- Multi payer specific logic
          --
          v_billing_account_id := v_payer_rec.PayerBillingAccount_id;
     else
          -- Single payer specific logic
          --
          null;
          -- leave the v_billing_account_id as is



     end if;*/

     -- /#MP

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Auto Disbursement for Policy ID : '||in_policy_id||
               ' Billing Account ID : '||v_billing_account_id

          );

     end if;

     -- if activity is suspended just return OK outcome
     if   pkg_db_suspension.fn_db_is_activity_suspended
          (
               in_session_id,
               in_transaction_id,
               in_policy_id,
               pkg_db_suspension.gSuspend_CreditDisb_Activity
          ) = 1
     then

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;
          return;

     end if;


     --
     -- SK: End Added for OSBILLING-61 GCNA requirement
     --

     --
     --  Check if there is any active Disbursement Profile
     --
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Get the default disbursement profile'
          );

     end if;


--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_policy_term_id := pkg_db_functions.fn_get_policy_current_term
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id
                                   );
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

      -- XXXXDEV-1903
     v_default_prfl_src   := nvl(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_billing_account_id, gDisbursementProfileSrc),1);
          --OSBILLING-6460
     if v_default_prfl_src = gDisbProfileSrcBillingAct
       then
            -- OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
            -- get the ref BV value for Preferred Disbursement Profile
            v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_billing_account_id,
                                              gbv_BA_PreferredDisbProf
                                         );
           v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_default_profile_id,
                                                               gbv_Disb_ctf_object_used
                                                         );

          if v_default_profile_id is null
          then
               -- #MP
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... WARNING: disbursement profile not found for billing account ' || v_billing_account_id
                    );
               end if;
               -- /#MP

               io_action_outcome_id := gOutcomeNoProfileExists;
               return;
          end if;


      end if;

    -- GCNA Merge
     --
     --  Get the Billing Accouynt Type
     --
     v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_billing_account_id,
                                       gbv_BillingAccountType
                                  );
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_parent_gen_object_id     :=      pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             29704546--Generic Parent Object
                                        );

     v_ba_obj_label             :=      pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_parent_gen_object_id,
                                             211882--Object Label
                                        );
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     --
     --  Get the list of Disbursement FItems based on the Billing Account Type
     --

     v_disbursement_item_list.delete;

     sp_get_disbursement_items
     (
          in_session_id,
          in_transaction_id,
          v_billing_account_id,
          v_billing_account_type_id,
          v_disbursement_item_list,
          in_policy_id  --OSBILLING-6460

     );

     v_disburse_item_count := v_disbursement_item_list.count;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Disbursement item count'||v_disburse_item_count ||
               ' v_default_profile_id ' || v_default_profile_id
          );
     end if;

     if v_disbursement_item_list.count > 0
     then

          v_disbursement_item_index     :=  v_disbursement_item_list.first;

          while v_disbursement_item_index is not null
          loop

               select
                    balance,policy_id,creator_fitransactionset_id,fitem_category_id -- XXXXDEV-1903
                 into
                    v_fitem_balance,v_policy_id,v_cash_src_bats_id,v_fitem_category_id-- XXXXDEV-1903
               from
                  dragon_fitem
               where
                  fitem_id = v_disbursement_item_list(v_disbursement_item_index)
               ;


               --xxxdev-2241 Sumeet Aug 05 2019 --OSBILLING-6460
               if  v_default_prfl_src = gDisbProfileSrcOrgPayProf and  v_credit_exists_tf  = 'F' and v_fitem_category_id <> gFItem_Category_Cash   --cash
                 then
                           v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_billing_account_id,
                                                             gbv_BA_PreferredDisbProf
                                                        );

                           v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_default_profile_id,
                                                               gbv_Disb_ctf_object_used
                                                         );

                          v_credit_exists_tf  := 'T';

                               if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Disbursement item count'||v_disburse_item_count ||
                                             ' v_default_profile_id ' || v_default_profile_id  ||
                                             ' v_credit_exists_tf ' ||v_credit_exists_tf ||
                                             ' v_assc_prfl_id ' ||v_assc_prfl_id
                                        );
                                end if;
                end if;

               if v_policy_id = in_policy_id
               then

                 v_total_disbursement_amt :=   v_total_disbursement_amt +  nvl(v_fitem_balance,0);

	                 --UTPRODUCT-4464
	              if v_fitem_category_hold is null
	              then
	                    v_sub_type := case when v_fitem_category_id = gFItem_Category_Comm
	                                        then gFitem_sub_type_Comm
	                                       when v_fitem_category_id = gFItem_Category_Tax
	                                        then gFitem_sub_type_Tax
	                                       when v_fitem_category_id = gFItem_Category_Fee
	                                        then gFitem_sub_type_Fee
	                                       when v_fitem_category_id = gFItem_Category_Surcharge
	                                        then gFitem_sub_type_Surcharge
	                                       when v_fitem_category_id = gFitem_Category_Claim
	                                        then gFitem_sub_type_Claim
	                                       else gFitem_sub_type_Misc
	                                  end;
	                    v_fitem_category_hold := v_fitem_category_id;
	              elsif v_fitem_category_hold <> v_fitem_category_id
	                then v_sub_type := gFitem_sub_type_Misc;

	              end if;
	      
               end if;
               --OSBILLING-6460
               if v_default_prfl_src = gDisbProfileSrcOrgPayProf   and v_cash_exists_tf  = 'F' and  v_fitem_category_id = gFItem_Category_Cash  -- Original Payment Profile
                then
                    v_assc_prfl_id :=  pkg_os_object_io.fn_object_bv_get
                                       (
                                           in_session_id,
                                           in_transaction_id,
                                           v_cash_src_bats_id,
                                           PKG_CS_PROFILES.gbv_Ref_AssociatedProfile
                                       );

                     begin

                         select
                              (pay_profile_id)
                         into
                              v_default_profile_id
                         from
                              dragon_pay_profile
                         where
                              ctf_object_id = v_assc_prfl_id;

                          if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... Policy Disbursement item count'||v_disburse_item_count ||
                                             ' v_default_profile_id ' || v_default_profile_id  ||
                                             ' v_assc_prfl_id ' || v_assc_prfl_id
                                        );
                         end if;


                     exception
                          when others then

                               v_cash_exists_tf   := 'F';

                     end;

                     v_cash_exists_tf   := 'T';

               end if;      -- XXXXDEV-1903



               --xxxdev-2241 Sumeet Aug 05 2019
               if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                          (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... AutoDisbursement criteria :: v_fitem_balance :' ||v_fitem_balance ||
                              ' v_default_prfl_src ' ||v_default_prfl_src ||
                              ' v_cash_src_bats_id ' || v_cash_src_bats_id||
                              ' v_default_profile_id ' ||v_default_profile_id ||
                              ' v_policy_id ' ||v_policy_id  ||
                              ' v_fitem_category_id ' || v_fitem_category_id ||
                              ' v_cash_exists_tf ' || v_cash_exists_tf ||
                              ' v_credit_exists_tf ' ||v_credit_exists_tf||
                              'v_sub_type:'||v_sub_type --UTPRODUCT-4464

                           );
            end if;

               v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);

          end loop;
          --OSBILLING-6460
         if v_cash_exists_tf ='T' and v_credit_exists_tf ='T'
                 then

                    v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_billing_account_id,
                                                             gbv_BA_PreferredDisbProf
                                                        );

                    v_assc_prfl_id           := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_default_profile_id,
                                                       gbv_Disb_ctf_object_used
                                                  );

        end if;


        if v_default_profile_id is null
          then
               -- #MP
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... WARNING: disbursement profile not found for billing account ' || v_billing_account_id ||
                         ' Returning the outcome ' || gOutcomeNoProfileExists
                    );
               end if;
               -- /#MP

               io_action_outcome_id := gOutcomeNoProfileExists;
               return;
          end if;

          v_disbursement_mode     :=   pkg_os_object_io.fn_object_bv_get
                                     (
                                           in_session_id,
                                           in_transaction_id,
                                           v_assc_prfl_id,
                                           PKG_CS_PROFILES.gbv_CashTrsPrfMode
                                     );
            --OSBILLING-6460
           if v_disbursement_mode = gPaymentModeCC
                then

                    v_is_cc_prof_exp_tf :=fn_is_cc_prof_expired_tf
                                            (
                                               in_session_id,
                                               in_transaction_id,
                                               v_assc_prfl_id
                                             );


                   if v_is_cc_prof_exp_tf  = 'T'
                    then
                         io_action_outcome_id := gOutcomePayProfiledExpired;
                         return;

                    end if;
           end if;

          v_total_disbursement_amt :=   v_total_disbursement_amt*-1;

          v_auto_refund_limit      :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_policy_id, 12931);

          --2018-05-17 GCNA-2966 Cheryl Add tolerance
          v_auto_disb_tolerance_amnt      :=   nvl(pkg_os_product.fn_product_property_get
                                                   (
												   in_session_id,
												   in_transaction_id,
												   v_policy_id,
                                                   gAutoDisbToleranceAmnt
                                                   )
                                                   ,0);
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Total Disbursement Amt : '||v_total_disbursement_amt||
                    ' Auto Refund Limit : '||v_auto_refund_limit
                    || ' Auto disburse tolerance : ' || v_auto_disb_tolerance_amnt ||
                    ' v_disbursement_mode ' || v_disbursement_mode ||
                    ' v_default_profile_id ' || v_default_profile_id
               );

          end if;

          if v_total_disbursement_amt <= v_auto_refund_limit
             and v_total_disbursement_amt >= v_auto_disb_tolerance_amnt --2018-05-17 GCNA-2966 Cheryl Add tolerance
          then

               --
               --  Create a Disbursement Batch
               --
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_object.gObjType_BillingAccountTrxSet,
                    v_billing_account_id,
                    v_billing_acc_trx_set_id
               );



               -- Set the batch type as 'Disbursement Batch'
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    pkg_db_object.gbv_FITrxSet_BatchType,
                    gBatch_PayablesDisbBatch
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Set the batch type as - Disbursement Batch'
                    );

               end if;
               
               --UTPRODUCT-4464
               -- Set the sub type 
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetSubType,
                    v_sub_type
               );
               


               -- Set the batch entry type as System
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetEntryType,
                    gBatchEntryMethod_System
               );
               -- Set the batch entered by as current user
               pkg_os_object_io.sp_object_bv_set


               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetEnteredby,
                    v_entered_by
               );

               -- Set the posted date as current date
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetDatePosted,
                    to_char
                    (
                          --GCNA Merge--GCNA-1397
                         /*pkg_os_time.fn_os_sysdate
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id
                         ),*/
                         pkg_db_functions.fn_get_policy_current_date
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_id
                         ),
                         pkg_os_constant.DragonDateFormatDefault--GCNA Merge
                    )
               );

               -- Set the external batch id
               pkg_os_object_io.sp_object_bv_set


               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_FITrxSetExternalBatchId,
                    'Batch'|| to_char
                              (
                                    -- GCNA Merge --GCNA-1397
                                   /*pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id
                                   ),*/
                                   pkg_db_functions.fn_get_policy_current_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id
                                   ),
                                   pkg_os_constant.DragonDateFormatDefault-- GCNA Merge
                              )
               );

               v_disbursement_item_index     :=  v_disbursement_item_list.first;

               while v_disbursement_item_index is not null
               loop

                    select
                          *
                    into
                          v_disbursement_item_rec
                    from
                          dragon_fitem
                    where
                          fitem_id = v_disbursement_item_list(v_disbursement_item_index)
                    ;

                          if v_disbursement_item_rec.policy_id is not null
                          then


                                -- GCNA Merge
                                if v_disbursement_item_rec.fitem_category_id<>646 and --non cash
                                   NVL(pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitNonCashChk),'N') = 'N' -- OSPRODUCT-8180
                                then

                                    v_refund_wait_period :=0;

                                else
                                     --
                                     --check the wait period according to disbursement mode ((EFT- 14 days, CC- 0 days, Cheque- 30 days)
                                     --

                                     if v_disbursement_mode = gPaymentModeEFT--EFT
                                     then
                                        v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodEFT);
                                     elsif
                                     v_disbursement_mode = gPaymentModeCC--CC
                                     then
                                         v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodCC);
                                     elsif
                                      v_disbursement_mode = gPaymentModeCheque--Cheque
                                     then
                                        v_refund_wait_period     :=   pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, v_disbursement_item_rec.policy_id, gRefundWaitPeriodCheque);
                                     end if;

                                  end if;

                          if v_session_control.gLogging_Full
                          then

                               pkg_os_logging.sp_log
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '............... fitem policy_id '||v_disbursement_item_rec.policy_id||
                                     'v_disbursement_item_rec.balance ' ||v_disbursement_item_rec.balance ||
                                    ' v_refund_wait_period : '||v_refund_wait_period||
                                    'v_disbursement_mode :'||v_disbursement_mode||
                                    ' v_disbursement_item_rec.fitem_Id '||v_disbursement_item_rec.fitem_Id ||
                                    ' v_disbursement_item_rec.fitem_category_id :..'||v_disbursement_item_rec.fitem_category_id
                               );

                          end if;
                          -- GCNA Merge

                          --v_disbursement_item_rec := v_payable_item_rec(v_disbursement_item_index);
                              --OSBILLING-6460
                          if nvl(trunc(
                              pkg_db_suspension.fn_get_date_with_susp_offset(in_session_id, in_transaction_id,v_disbursement_item_rec.fitem_Id, pkg_db_suspension.gSuspend_CreditDisb_Activity)
                            ),
                             trunc(v_disbursement_item_rec.date_effective)) + nvl(v_refund_wait_period,0) <= trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,v_disbursement_item_rec.policy_id))
                               and v_disbursement_item_rec.policy_id = in_policy_id
                          then

                               -- Create new FITransaction Object

                               pkg_db_object.sp_fitransaction_create
                               (
                                    in_session_id                      =>    in_session_id,
                                    in_transaction_id                  =>    in_transaction_id,
                                    in_fitrx_parent_fitrxset_id        =>    v_billing_acc_trx_set_id,
                                    out_fitransaction_id               =>    v_fitransaction_id,
                                    in_fitrx_type                      =>    gFITrxType_Disbursement,
                                    in_fitrx_ref_billing_account       =>    v_disbursement_item_rec.billing_account_id,
                                    in_fitrx_ref_associatedpolicy      =>    v_disbursement_item_rec.policy_id,
                                    in_fitrx_ref_associatedpoltrx      =>    v_disbursement_item_rec.policy_transaction_id,
                                    in_fitrx_ref_actionpolicy          =>    v_disbursement_item_rec.policy_id,
                                    in_fitrx_ref_actionpoltrx          =>    v_disbursement_item_rec.policy_transaction_id,
                                    in_fitrx_ref_associatedfitem       =>    v_disbursement_item_list(v_disbursement_item_index),
                                    in_fitrx_effective_date            =>    to_char( pkg_db_functions.fn_get_policy_current_date( in_session_id, in_transaction_id, in_policy_id), pkg_os_constant.dragondateformatdefault ), --GCNA-1397 replace pkg_os_time.fn_os_sysdate
                                    in_fitrx_gl_date                   =>    to_char( pkg_db_functions.fn_get_policy_current_date( in_session_id, in_transaction_id, in_policy_id), pkg_os_constant.DragonDateFormatDefault ), --GCNA-1397 replace pkg_os_time.fn_os_sysdate
                                    in_fitrx_amount                    =>    (v_disbursement_item_rec.balance)*(-1),
                                    in_fitrx_object_state              =>    gFITrxStatus_InProcess
                                );

                               -- Update the FITransaction Datamart
                               pkg_os_datamart.sp_datamart_update_row
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_fitransaction_id,
                                    v_datamart_tf
                               );

                               if v_session_control.gLogging_Full
                               then

                                    pkg_os_logging.sp_log
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_procedure_name,
                                         '............... Updated the data mart of FITransaction'
                                  );

                               end if;

                               pkg_os_object_io.sp_object_bv_set
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_disbursement_item_list(v_disbursement_item_index),
                                    gbv_FItem_associatedBatch,
                                    v_billing_acc_trx_set_id
                               );
                              pkg_os_object_io.sp_object_bv_set
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_disbursement_item_list(v_disbursement_item_index),
                                    pkg_db_constant.gbvCurrDisburseAmount,
                                    v_disbursement_item_rec.BALANCE
                               );--OSPRODUCT-3715
                               pkg_os_datamart.sp_datamart_update_row
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_disbursement_item_list(v_disbursement_item_index),
                                    v_datamart_tf
                               );

                               --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
                               --
                               -- Set Current Transaction Ref
                               --
                               pkg_os_object_io.sp_object_bv_set
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_billing_acc_trx_set_id,
                                    29743646,
                                    v_fitransaction_id
                               );
                               --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

                               -- Get the Ultimate Template ID of Fitem

                               v_ultimate_template_id   :=   pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_disbursement_item_list(v_disbursement_item_index),
                                                                  pkg_db_object.gbv_FItem_RefUltimateTempID
                                                             );


                               v_count := v_count + 1;
                               v_batch_total_amount     :=   v_batch_total_amount + v_disbursement_item_rec.balance;
                          end if;
                    end if;
                    v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);
               end loop; -- while v_disbursement_item_index is not null
          else
               io_action_outcome_id := 51431;
               return;
          end if;

     else
          io_action_outcome_id := gOutcomeNoSelectedRecord;
          return;

     end if;   -- if v_profile_list.count > 0

     if v_count = 0
     then

          pkg_os_object.sp_object_delete
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id ,
               v_billing_acc_trx_set_id,
               gObjType_BillingAccountTrxSet
          );

          io_action_outcome_id := gOutcomeRefundWaitPeriod;
          return;

     end if;

     -- Set the batch total amount
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          pkg_db_object.gbv_FITrxSet_TotalAmount,
          (v_batch_total_amount)*(-1)
     );

     -- Set the batch total items
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          pkg_db_object.gbv_FITrxSet_TotalItems,
          v_count
     );

     -- Set the disbursement profile reference
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          gbv_BATrxSet_RefDisbProfile,
          v_default_profile_id
     );

     -- GCNA Merge

     --
     -- GCNA-1155 Automated Disbursements need to go through the security queue rules
     --

          -- Set the batch status

     /*
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               pkg_os_constant_bv.gbv_GenObjObjectState,
               pkg_db_object.gBatchStatus_RequestAP
          );
     */
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               pkg_os_constant_bv.gbv_GenObjObjectState,
               49346
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               31755646,
               1
          );

          sp_disburse_batch_confirm
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               in_object_cache,
               io_action_outcome_id
          );

     --
     -- End GCNA-1155
     --
     --
     --- GCNA-882  Set mail flag
     --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    io_action_outcome_id
                 );


--XXXXDEV-211
   pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          v_datamart_tf
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '............... Updated the data mart of Disbursement Batch'
        );

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end  sp_auto_disburse_policy;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_discard_billacctrxset
--
--   %USAGE
--   This procedure creates a Disbursement Batch based on default Disbursement Profile and
--   sets the Batch Status to Request Sent to AP.
--
--   %ALGORITHM
--
--   1. Get all fi transactions from given billing account  transaction set.
--   2. Get related fitem id with each fi trx.
--   3. Set associated batch of each fitem as null.
--   4. Delete fitrx after that.
--   5. Mark state of billing account transaction set as discarded.
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_object_id                       in             object.object_id%type,
--   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
--   io_action_outcome_id               in out         outcome.outcome_id%type
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-7263 start
procedure sp_discard_billacctrxset
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_id                       in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_discard_fitrx_check';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_fitrx_object_index                number;
     v_fitrx_object_list                 pkg_os_object.t_object_list             := pkg_os_object.gnull_object_list;
     v_ref_fitem_id                      object.object_id%type;
     v_datamart_tf                      char(1) :=   'T';

begin

     -----------------------------------------------
     --  Get all child fi_transactions of given bats
     -----------------------------------------------
     pkg_os_object_cache_search.sp_obj_cache_children_get
     (
          in_session_id,
          in_transaction_id,
          in_object_cache,
          in_object_id,
          gObjType_FITransaction,
          v_fitrx_object_list
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'No. of transactions found' || v_fitrx_object_list.count
               );
     end if;

     if v_fitrx_object_list.count > 0
     then

          v_fitrx_object_index        :=        v_fitrx_object_list.first;

          while v_fitrx_object_index is not null
          loop

               -----------------------------------------------
               -- Get the reference fitem id
               -----------------------------------------------
               v_ref_fitem_id                :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitrx_object_list(v_fitrx_object_index),
                                                       gbv_FITrxRefAssociatedFItem
                                                  );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Processing Transaction: ' || v_fitrx_object_list(v_fitrx_object_index) ||
                              'Reference Fitem: ' || v_ref_fitem_id
                         );

               end if;

               -----------------------------------------------
               -- iv. Delink the ReferenceDisbursementBatch reference from the selected FItem
               -----------------------------------------------

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    gbv_FItem_associatedBatch,
                    null

               );
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    pkg_db_constant.gbvCurrDisburseAmount,
                    null
               );--OSPRODUCT-3715
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_ref_fitem_id,
                    v_datamart_tf
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Deleting Transaction: ' || v_fitrx_object_list(v_fitrx_object_index)
                    );

               end if;

               -----------------------------------------------
               -- iv. Delete the fi transaction
               -----------------------------------------------

               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    in_object_id,
                    v_fitrx_object_list(v_fitrx_object_index) ,
                    gObjType_FITransaction
               );

               v_fitrx_object_index        :=        v_fitrx_object_list.next(v_fitrx_object_index);

          end loop;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_discard_billacctrxset;
--OSBILLING-7263 end
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_delete_fitrx_check

(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_id       in             object.object_id%type,
     in_object_cache    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id          in out    outcome.outcome_id%type

)
is

     v_selected_elements                varchar2(2000);
     v_total_elements                   number;
     v_object_index                     number;
     v_list_object_index                number;
     v_list_object_list                 pkg_os_object.t_object_list             := pkg_os_object.gnull_object_list;
     v_list_object_id                   object.object_id%type;
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_selected_items_cnt               number                                  :=   0;
     v_batch_parent_billing_acc_id      object.object_id%type;
     v_list_layout_id                   object.object_id%type;
     v_batch_type_id                    object.object_id%type := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, in_object_id,pkg_db_object.gbv_FITrxSet_BatchType);
     v_page_layout_block_id             object.object_id%type;


begin

     v_batch_parent_billing_acc_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_object_id);

     if ( v_batch_type_id = pkg_db_billing_payable.gBatch_PayablesDisbBatch)
     then

               v_page_layout_block_id :=  919146;

     elsif  ( v_batch_type_id = Pkg_Db_Write_Off.gBatch_ManualWriteOff)
     then
               v_page_layout_block_id := 919746;

     elsif  ( v_batch_type_id = Pkg_Db_Adhoc_Journal.gBatch_Adhoc_Journal)
     then
               v_page_layout_block_id := 1023940;

     end if;

     pkg_os_object_cache_search.sp_obj_cache_children_get
     (
          in_session_id,
          in_transaction_id,
          in_object_cache,
          in_object_id,
          pkg_os_constant.gobjType_List,
          v_list_object_list

     );


     if v_list_object_list.count > 0
     then

          v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

          v_list_object_index      :=        v_list_object_list.first;

          while v_list_object_index is not null
          loop



                v_list_layout_id    :=    pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                         (
                                             in_session_id,
                                             in_transaction_id,
                                             in_object_cache,
                                             v_list_object_list(v_list_object_index),
                                             pkg_os_constant_bv.gbv_ListLayoutBlockID
                                         );


               if ( v_list_layout_id = v_page_layout_block_id  ) --  Write Off or Disbursement
               then

                v_total_elements         :=    pkg_os_object_io.fn_object_bv_get(in_session_id ,in_transaction_id,v_list_object_list(v_list_object_index), 210382);


                v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_cache,
                                                       v_list_object_list(v_list_object_index),
                                                       pkg_os_constant_bv.gbv_ListElementsSelected

                                                  );


                    v_selected_object_ids.delete;

                    pkg_os_token.sp_tokenize_string(v_selected_elements, ',', v_selected_object_ids);

                    v_object_index := v_selected_object_ids.first;

                       while v_object_index is not null
                       loop

                              v_selected_items_cnt          :=   v_selected_items_cnt + 1;

                              v_object_index := v_selected_object_ids.next( v_object_index );

                        end loop; -- for each selection ...


               end if;

           v_list_object_index := v_list_object_list.next(v_list_object_index);

        end loop; -- For each object list ..
    end if; -- if selected items is not null



          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               'KK Test',
               '||||||Seected items' || v_selected_items_cnt
               || 'Total Items ' || v_total_elements
               || 'List layout ID ' || v_list_layout_id
               || 'Batch_type_id' || v_batch_type_id

          );

   if ( v_total_elements = v_selected_items_cnt)
   then

     io_action_outcome_id     :=   gOutcomeBatchDiscarded;

   else

     io_action_outcome_id     :=   pkg_os_constant.gOutcome_OK;

   end if;


   -- OSBILLING - 2095
   --Need to handle a speacial case for Adhoc Journals
   -- In case of Ad Hoc journal there is only 1 Fitransaction record present to be selected / deleted.


   if (v_batch_type_id = Pkg_Db_Adhoc_Journal.gBatch_Adhoc_Journal) then


      if (nvl(v_selected_elements,0) = 0) then -- no records selected

        io_action_outcome_id := gOutcomeNoSelectedRecord;

      else

        io_action_outcome_id := gOutcomeBatchDiscarded;


      end if;

    end if;

   -- OSBILLING - 2095


end sp_delete_fitrx_check;

---------------------------------------------------------------------------------------------------------
procedure sp_suspense_disbrs_item_search
(
     in_session_id                           object.object_id%type ,
     in_transaction_id                       object.object_id%type,
     in_action_object_id                     object.object_id%type, -- Batch ID of CashTransferTrxSet that belong to Suspense Account
     in_object_cache          in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id     in out nocopy  outcome.outcome_id%type
)
as

   v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_suspense_disbrs_item_search';
   v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

   v_refund_fitem_id                  object.object_id%type;
   v_suspense_refund_ba_id            object.object_id%type;

begin
   -- get referenced Suspense Refund BA
   --
   v_suspense_refund_ba_id  := pkg_os_object_io.fn_object_bv_get(
                                                  in_session_id,
                                                  in_transaction_id,
                                                  pkg_os_object.fn_object_parent_get(  -- get Suspense Account BA
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   in_action_object_id
                                                                 ),
                                                   32722246 -- BillingAccount - xReference - _Reference_Billing Account to suspense refund to
                                                   );
   if v_session_control.gLogging_Full
   then
      pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                 '...Searhing for disbursable Fitem for Suspense Refund billing account: '||v_suspense_refund_ba_id
             );
   end if;

   -- Get payable item
   --
   v_refund_fitem_id := pkg_db_functions.fn_suspense_disburse_item_get (in_session_id, in_transaction_id,
                                          --
                                          v_suspense_refund_ba_id,
                                          in_action_object_id
                                          );

   -- Set outcome
   --
   if v_refund_fitem_id is not null
   then
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;
   else
     io_action_outcome_id := gOutcomeNoSelectedRecord;
   end if;

end sp_suspense_disbrs_item_search;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_suspense_disbrs_trx_create
--
--   %USAGE
--   The procedure implememnts the beggining of the 'Disbursement' flow from  Suspense Disbursement Billing Account.
--   It gets disursable fitem from reference "BillingAccount - xReference - _Reference_Selected fitem for suspense refund"
--   This reference is set in a post-init rule of the action AL_BillingAccount_VaildateSuspenseDisbursmntItem_DB(1217446)
--
--   The procedure will validate/confirm the FItems before disbursement process.
--   System will create the placeholder fitransaction
--
--
--   %ALGORITHM
--   1. Get Fitem from reference
--   2. If the FItem has some balance, fetch the FITem record and add to the v_payable_item_list
--   3. Create the placeholder FItransaction
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_suspense_disbrs_trx_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_suspense_disbrs_trx_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_batch_parent_billing_acc_id      object.object_id%type;
     v_payable_fitem_id                 object.object_id%type;
     v_payable_fitem_balance            number;
     v_batch_total_amount               number                                  :=   0;
     v_payable_item_list                t_fitem_list;
     v_payable_item_rec                 t_payable_fitem_rec;
     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

begin

     -- Set the batch entered by as current user
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_billAccTRXset_id,
          gbv_FITrxSetEnteredby,
          v_entered_by
     );

     --   Get parent billing account ID
     --
     v_batch_parent_billing_acc_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_billAccTRXset_id);

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log ( in_session_id, in_transaction_id, v_procedure_name,
               --
               '...Billing Account ID :' || v_batch_parent_billing_acc_id ||
               ', disbursement batch ID : '||in_billAccTRXset_id ||
               ' . Getting disbursable fitem....'
          );
     end if;

     -- 1. Get Fitem from reference
     --
     v_payable_fitem_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,
                                              --
                                              v_batch_parent_billing_acc_id,
                                              32722346 -- BillingAccount - xReference - _Reference_Selected fitem for suspense refund
                                              );

     if v_payable_fitem_id is not null
     then

          v_payable_fitem_balance :=  pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id,
                                                        --
                                                        v_payable_fitem_id,
                                                        gbv_fitem_amount_due
                                                        );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log ( in_session_id, in_transaction_id, v_procedure_name,
                    '............ Payable Fitem ID: '||v_payable_fitem_id||
                    ', with Balance: '||v_payable_fitem_balance
               );

          end if;

          --
          --  2. If the FItem has some balance, fetch the FITem record and add to the v_payable_item_list
          --

          if v_payable_fitem_balance < 0
          then

               select
                         *
               into
                         v_payable_item_rec(v_payable_fitem_id)
               from
                         dragon_fitem
               where
                         fitem_id = v_payable_fitem_id
               ;

               v_batch_total_amount :=  v_payable_fitem_balance;

               v_payable_item_list(v_payable_fitem_id) := v_payable_fitem_id;

          end if;

          --
          --  3. Create the placeholder FItransaction
          --
          sp_disburse_fitrx_create  (in_session_id, in_transaction_id,
                --
                in_billAccTRXset_id      => in_billAccTRXset_id,
                io_action_outcome_id     => io_action_outcome_id,
                in_payable_item_list     => v_payable_item_list,
                in_payable_item_rec      => v_payable_item_rec,
                in_batch_total_amount    => v_batch_total_amount
          );

     else

          --  Set the outcome as No Record Selected and return
          --
          io_action_outcome_id := gOutcomeNoSelectedRecord;

          return;

     end if;

end sp_suspense_disbrs_trx_create;
------------------------------------------------------------------------------------------------------------------------
procedure sp_auto_disburse_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_disburse_profile_id             in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null,
     in_zero_disb                       in             char default 'F',
     in_generation_date                 in             date default null, -- UTPRODUCT-4601
     out_billingaccounttrxset_id        out             object.object_id%type --OSPRODUCT-11817
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_auto_disburse_create';
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_default_profile_id               object.object_id%type;
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_disbursement_item_list           pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_disbursement_item_index          number;
     v_disbursement_fitem_id            object.object_id%type;
     --v_payable_item_rec                 t_payable_fitem_rec;
     v_disbursement_item_rec            dragon_fitem%rowtype;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_billing_acc_trx_set_id           object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_datamart_tf                      char(1) :=   'T';
     v_billing_acc_parent_id            object.object_id%type;
     v_batch_total_amount               number                             :=   0;
     v_fitem_sub_category_id            lookup_list_value.lookup_enum%type;

     -- Added variables for OSBILLING -61 GCNA requirement
     v_billing_acc_status               object_bv_value.business_variable_value%type;
     v_stop_credit_disburs              object_bv_value.business_variable_value%type;
     v_policy_term_id                   object_bv_value.business_variable_value%type;
     -- End Added variables for OSBILLING -61 GCNA requirement

     v_disburse_item_count              number;
     v_count                            number := 0;
     v_auto_disb_tolerance_amnt          pd_property.pd_property_value%type;
     v_total_disbursement_amt           number := 0;
     v_fitem_balance                    number;
     v_policy_id                        object.object_id%type;
     v_profile_date_of_month            number;
     v_date_type                        number;
     v_profile_end_date_of_month            number;
     v_policy_current_day               number;
     v_account_current_day              number;
     v_account_current_date             date;
     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

     v_acc_end_date_of_month            number;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_disburse_mode                    lookup_list_value.lookup_enum%type;
     v_fitem_status                     lookup_list_value.lookup_enum%type;
     v_process_flag                     boolean default false;
     v_fitransaction_list               pkg_os_object.t_object_list;
     v_fitransaction_index              number;
     v_object_cache                     pkg_os_object_cache.t_object_cache;
       v_fitem_category                   number; -- osbilling-4901 Cheryl
     v_fitem_category_hold              number; -- osbilling-4901 Cheryl
     v_sub_type                         number; -- osbilling-4901

       --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_ba_obj_label                     varchar2(100);
     v_parent_gen_object_id             object.object_id%type;
     v_disb_created_using_prfl          object.object_id%type;
     v_disbprfl_used                    object.object_id%type;
     v_disbprfl_mode                    number;
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     v_fitem_billingaccount_list        t_fitem_billingaccount_tab;  --OSPRODUCT-11625
     v_fitem_ba_list_index              number;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering to create Auto Disbursement for Billing Account ID : '||in_billing_account_id

          );

     end if;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_default_profile_id :=  in_disburse_profile_id;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

     v_billing_acc_parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountParent

                                        );

     --GCNA-1397
     v_account_current_date   :=   NVL(pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, in_billing_account_id),pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_billing_account_id));
     v_account_current_day    :=   to_char(v_account_current_date,'DD');


     if (v_disburse_mode = pkg_db_billing_payable.gBatchDisburseMode_EFT)
     then

          v_fitem_status      :=        pkg_db_billing_payable.gFitemStatus_Processed;
          v_process_flag      :=        true;

     else

          v_fitem_status      :=        pkg_db_billing_payable.gFitemStatus_ReqSentToAP;
          v_process_flag      :=        false;

     end if;

     --
     --  Get the Billing Accouynt Type
     --
     v_billing_account_type_id     :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountType
                                        );
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_parent_gen_object_id     :=      pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             29704546
                                        );
     v_ba_obj_label     :=              pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_parent_gen_object_id,
                                             211882
                                        );

--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

     --
     --  Get the list of Disbursement FItems based on the Billing Account Type
     --
     v_disbursement_item_list.delete;

     sp_get_disbursement_items
     (
          in_session_id,
          in_transaction_id,
          in_billing_account_id,
          v_billing_account_type_id,
          v_disbursement_item_list, -- UTPRODUCT-4601
          null,
          null,
          in_generation_date
     );

     v_disburse_item_count := v_disbursement_item_list.count;

     if (v_disbursement_item_list.count > 0 or in_zero_disb = 'T')-- 20180719 Cheryl
     then
          v_fitem_category_hold := null;
          v_disbursement_item_index     :=  v_disbursement_item_list.first;

          while v_disbursement_item_index is not null
          loop

               select
                     balance,policy_id,fitem_category_id
               into
                     v_fitem_balance,v_policy_id, v_fitem_category  -- added v_fitem_category osbilling-4901
               from
                     dragon_fitem
               where
                     fitem_id = v_disbursement_item_list(v_disbursement_item_index)
               ;

               v_total_disbursement_amt      :=   v_total_disbursement_amt +  nvl(v_fitem_balance,0);

               v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);
               --20180508 osbilling-4901 Cheryl
               if v_fitem_category_hold is null
               then
                    v_sub_type := case when v_fitem_category = gFItem_Category_Comm
                                        then gFitem_sub_type_Comm
                                       when v_fitem_category = gFItem_Category_Tax
                                        then gFitem_sub_type_Tax
                                       when v_fitem_category = gFItem_Category_Fee
                                        then gFitem_sub_type_Fee
                                       when v_fitem_category = gFItem_Category_Surcharge
                                        then gFitem_sub_type_Surcharge
                                       when v_fitem_category = gFitem_Category_Claim
                                        then gFitem_sub_type_Claim
                                       else gFitem_sub_type_Misc
                                  end;
                    v_fitem_category_hold := v_fitem_category;
              elsif v_fitem_category_hold <> v_fitem_category
                then v_sub_type := gFitem_sub_type_Misc;
              end if;
                --20180508 osbilling-4901 Cheryl end

          end loop;

          v_total_disbursement_amt :=   NVL(v_total_disbursement_amt,0)*-1;  --20180719 Cheryl

          /*UTXPRODUCT-55 Start*/
          if v_fitem_category = gFItem_Category_Comm then
               v_auto_disb_tolerance_amnt      :=   nvl(pkg_os_product.fn_product_property_get
                                                        ( in_session_id, 
                                                        in_transaction_id,
                                                        v_policy_id,
                                                        gAutoDisbCommToleranceAmnt -- For commission disbursement
                                                        )
                                                        ,0);          
          else
               v_auto_disb_tolerance_amnt      :=   nvl(pkg_os_product.fn_product_property_get
                                                        ( in_session_id, 
                                                        in_transaction_id,
                                                        v_policy_id,
                                                        gAutoDisbToleranceAmnt
                                                        )
                                                        ,0);
          end if;
                                                   
          /*UTXPRODUCT-55 End*/
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Total Disbursement Amt : '||v_total_disbursement_amt||
                    ' Commission Disbursement Tolerance: '||v_auto_disb_tolerance_amnt||
                    ' If zero disbursement True?: '||in_zero_disb
               );

          end if;

--          if (v_total_disbursement_amt >= v_auto_disb_tolerance_amnt or in_zero_disb = 'T') --20180719 Cheryl
          if ((v_total_disbursement_amt >= v_auto_disb_tolerance_amnt and v_total_disbursement_amt <> 0)
                or (v_total_disbursement_amt = 0 and in_zero_disb = 'T')
             ) /*OSPRODUCT-10964*/
          then

               --
               --  Create a Disbursement Batch
               --
               pkg_os_object.sp_object_create
               (
                   in_session_id,
                   in_transaction_id,
                   pkg_db_object.gObjType_BillingAccountTrxSet,
                   in_billing_account_id,
                   v_billing_acc_trx_set_id
               );

               --
               -- ii. Set the BV's for the Disbursement Batch
               --
               v_bv_table.delete;

               v_bv_table (pkg_db_object.gbv_FITrxSet_BatchType       ).business_variable_value :=  gBatch_PayablesDisbBatch;
               v_bv_table (gbv_FITrxSetEntryType                      ).business_variable_value :=  gBatchEntryMethod_System;
               v_bv_table ( gbv_fitrxsetenteredby                     ).business_variable_value :=  v_entered_by;
               v_bv_table (pkg_db_object.gbv_fitrxset_totalitems      ).business_variable_value :=  v_disbursement_item_list.count;
               v_bv_table (gbv_fitrxsetexternalbatchid                ).business_variable_value :=  'Batch'||to_char( v_account_current_date, pkg_os_constant.dragondateformatdefault );
               v_bv_table (gbv_FITrxSetDatePosted                     ).business_variable_value :=  to_char( v_account_current_date, pkg_os_constant.DragonDateFormatDefault );
               v_bv_table (gbv_FITrxSetSubType                        ).business_variable_value :=  v_sub_type;--UTPRODUCT-1818
               --OSPRODUCT-8812 start
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table
               );
               --OSPRODUCT-8812 end
               
               out_billingaccounttrxset_id := v_billing_acc_trx_set_id; --OSPRODUCT-11817

               v_disbursement_item_index     :=  v_disbursement_item_list.first;

               while v_disbursement_item_index is not null
               loop

                  select
                       *
                   into
                       v_disbursement_item_rec
                   from
                       dragon_fitem
                   where
                       fitem_id = v_disbursement_item_list(v_disbursement_item_index);

                   if v_session_control.gLogging_Full
                   then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '............... fitem policy_id '||v_disbursement_item_rec.policy_id
                        );

                   end if;

                    v_policy_current_day     :=   to_char(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,v_disbursement_item_rec.policy_id),'DD');

                     if v_session_control.gLogging_Full
                     then

                       pkg_os_logging.sp_log
                       (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           '...... v_account_current_day = v_profile_date_of_month : '
                       );

                      end if;

                         -- Create new FITransaction Object
                         pkg_db_object.sp_fitransaction_create
                         (
                              in_session_id                      =>    in_session_id,
                              in_transaction_id                  =>    in_transaction_id,
                              in_fitrx_parent_fitrxset_id        =>    v_billing_acc_trx_set_id,
                              out_fitransaction_id               =>    v_fitransaction_id,
                              in_fitrx_type                      =>    gFITrxType_Disbursement,
                              in_fitrx_ref_billing_account       =>    v_disbursement_item_rec.billing_account_id,
                              in_fitrx_ref_associatedpolicy      =>    v_disbursement_item_rec.policy_id,
                              in_fitrx_ref_associatedpoltrx      =>    v_disbursement_item_rec.policy_transaction_id,
                              in_fitrx_ref_actionpolicy          =>    v_disbursement_item_rec.policy_id,
                              in_fitrx_ref_actionpoltrx          =>    v_disbursement_item_rec.policy_transaction_id,
                              in_fitrx_ref_associatedfitem       =>    v_disbursement_item_rec.fitem_id,--v_disbursement_item_list(v_disbursement_item_index), that was before
--                              in_fitrx_effective_date            =>    to_char( v_account_current_date, pkg_os_constant.dragondateformatdefault ),
                              --OSBILLING-7829
                              in_fitrx_effective_date            =>    to_char( NVL(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, in_billing_account_id)), pkg_os_constant.dragondateformatdefault ),  -- 2018-02-12 cheryl osbilling-4914 vaultdev-6642 change to use todays date
                              in_fitrx_gl_date                   =>    to_char( v_account_current_date, pkg_os_constant.dragondateformatdefault ),
                              in_fitrx_amount                    =>    (v_disbursement_item_rec.balance)*(-1),
                              in_fitrx_object_state              =>    gFITrxStatus_InProcess
                          );

                         -- Update the FITransaction Datamart
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitransaction_id,
                              v_datamart_tf
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............... Updated the data mart of FITransaction'
                            );

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_disbursement_item_list(v_disbursement_item_index),
                              gbv_FItem_associatedBatch,
                              v_billing_acc_trx_set_id
                         );
                         pkg_os_object_io.sp_object_bv_set
                          (
                               in_session_id,
                               in_transaction_id,
                               v_disbursement_item_list(v_disbursement_item_index),
                               pkg_db_constant.gbvCurrDisburseAmount,
                               v_disbursement_item_rec.BALANCE
                          );--OSPRODUCT-3715
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_disbursement_item_list(v_disbursement_item_index),
                              v_datamart_tf
                         );

                         v_count := v_count + 1;

                         v_batch_total_amount     :=   v_batch_total_amount + v_disbursement_item_rec.balance;

                    v_disbursement_item_index     :=   v_disbursement_item_list.next(v_disbursement_item_index);

               end loop; -- while v_disbursement_item_index is not null

             --Upate the batch total amount for the disbursement batch
               v_bv_table (pkg_db_object.gbv_FITrxSet_TotalAmount  ).business_variable_value := (v_batch_total_amount * -1);
               v_bv_table (pkg_db_object.gbv_FITrxSet_TotalItems  ).business_variable_value := v_count;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table
               );

               if ((in_zero_disb = 'F') or (in_zero_disb = 'T' and v_disbursement_item_list.count > 0)) -- 20180719 Cheryl
               then
               --Verify whether the disbursement batch has any security triggers
               pkg_db_security_trigger.sp_process_security_triggers
               (
                    in_session_id                 =>        in_session_id,
                    in_transaction_id             =>        in_transaction_id,
                    in_object_cache               =>        v_object_cache,
                    in_billacc_trx_set_id         =>        v_billing_acc_trx_set_id,
                    io_action_outcome_id          =>        io_action_outcome_id,
                    in_current_date_time          =>        in_current_date_time,
                    io_process_billing_trx_tf     =>        v_process_billing_trx_tf
               );
                else
                     v_process_billing_trx_tf := 'T';
               end if;
               -- 20180719 Cheryl end
               --If there are no security triggers, then process the Disbursement Batch
               if (  v_process_billing_trx_tf = 'T' )
               then

                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         gObjType_FITransaction,
                         v_fitransaction_list
                    );

                    v_fitransaction_index    :=     v_fitransaction_list.first;

                    --
                    -- a. Loop for the all FITrnsactions
                    --
                    while v_fitransaction_index is not null
                    loop

                         sp_disburse_fitem_create
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitransaction_list(v_fitransaction_index),
                              v_fitem_status,
                              v_fitem_billingaccount_list    --OSPRODUCT-11625
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                               in_session_id,
                               in_transaction_id,
                               v_billing_acc_trx_set_id,
                               29743646,
                               v_fitransaction_list(v_fitransaction_index)
                         );

                         v_fitransaction_index := v_fitransaction_list.next(v_fitransaction_index);

                    end loop;

                    if v_fitem_billingaccount_list.count > 0    --OSPRODUCT-11625
                    then

                        v_fitem_ba_list_index := v_fitem_billingaccount_list.first;

                        while v_fitem_ba_list_index is not null
                        loop

                             if v_session_control.gLogging_Full then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '...... Updating the Datamart for Billing Account ID: '
                                       || v_fitem_billingaccount_list(v_fitem_ba_list_index)
                                  );

                             end if;

                             merge into billingaccount_datamart_update du     --OSPRODUCT-11625 Commented
                             using (select
                                     v_fitem_billingaccount_list(v_fitem_ba_list_index) billing_account_id
                                  from
                                     dual
                                ) stg
                             on (du.billing_account_id = stg.billing_account_id
                                  and
                                  du.process_timestamp is null
                                 )
                             when not matched
                             then
                             insert
                                (
                                    billing_account_id,
                                     entry_timestamp
                                )
                             values
                                (
                                     stg.billing_account_id,
                                     sysdate
                                );



                             v_fitem_ba_list_index := v_fitem_billingaccount_list.next(v_fitem_ba_list_index);

                        end loop;

                    end if;

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         v_datamart_tf

                    );

                    --
                    -- c. If the process flag  is true, i.e they are no securty triggers and disbursemnent mode is EFT
                    --
                    if ((v_process_flag  = true)  or
                         (in_zero_disb = 'T' and v_disbursement_item_list.count = 0)) -- 20180906 Cheryl vaultdev-9710
                    then

                    --
                    --   Invoke the sp_disburse_trx_process to process the disbursement
                    --

                    pkg_db_object.sp_billing_acct_trx_process
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         v_object_cache,
                         io_action_outcome_id,
                         in_current_date_time

                    );

                    -- Invoke code to create GL Entries- --OSBILLING-400
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as gcna has below code uncommented

/*-- OSBILLING-3884
                    pkg_db_gl_transaction.sp_search_gl_entries
                    (
                        in_session_id ,
                        in_transaction_id ,
                        v_billing_acc_trx_set_id
                    );
OSBILLING-3884 */

                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Processed;
                    --
                    -- OSBILLING-1816 : persist Billing Account Total Balance
                    --

/*OSBILLING-3884
                    v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance   ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                        (
                                                                                                             in_session_id,
                                                                                                             in_transaction_id,
                                                                                                             pkg_os_object.fn_object_parent_get
                                                                                                             (
                                                                                                                  in_session_id,
                                                                                                                  in_transaction_id,
                                                                                                                  v_billing_acc_trx_set_id
                                                                                                             ),
                                                                                                             pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                                        );


OSBILLING-3884 */
               else  -- i.e. Check

                    --
                    --  Set the batch state as Request Sent to AP
                    --
                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := pkg_db_object.gBatchStatus_RequestAP;

               end if;

                    --
                    -- e. Set the security status as 'Released' and set the outcome as OK
                    --
                    v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_Release;

                    io_action_outcome_id     :=   pkg_os_constant.gOutcome_OK;

               else

                    --
                    --   i. Set the batch state as 'Referred' and security status as 'New'
                    --
                    v_bv_table (pkg_os_constant_bv.gbv_GenObjObjectState   ).business_variable_value := gBatchStatus_Referred;
                    v_bv_table (pkg_db_object.gbv_BillAccTrxSet_ScrtyStatus).business_variable_value := gSecurityStatus_New;

                    --
                    --   ii. Set the outcome as SecurityTriggerExists
                    --

                    io_action_outcome_id := gOutcomeSecurityTriggerExists;

               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                      in_session_id,
                      in_transaction_id,
                      v_billing_acc_trx_set_id,
                      v_bv_table
               );

               PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    io_action_outcome_id
                 );

               -- Set the disbursement profile reference
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    gbv_BATrxSet_RefDisbProfile,
                    v_default_profile_id
               );

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
               v_disb_created_using_prfl:=pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_acc_trx_set_id,
                                             31711146
                                        );

               v_disbprfl_used:= pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disb_created_using_prfl,
                                             30013446
                                        );


               v_disbprfl_mode:= pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disbprfl_used,
                                             30010546
                                        );

               v_bv_table.delete;
               --GCNA-2655 :Removed Customer Condition
               if  v_disbprfl_mode = 1 --Agent/Broker and Cheque disbursement mode
               then

                    v_bv_table(gbv_Disbursement_Payee_Name).business_variable_value := v_ba_obj_label;

               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table
               );
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End
               --Update the datamart of BillingAccountTrxSet
               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_datamart_tf
               );

        else

           io_action_outcome_id := gOutcomeLessThanTolerance;    --52146

           return;

        end if;

     else

           io_action_outcome_id := gOutcomeNoSelectedRecord;

           return;

     end if;   -- if v_profile_list.count > 0

     --OSPRODUCT-3087
     pkg_cs_db_payable.sp_disbursement_custom
     (
            in_session_id  ,
            in_transaction_id,
            v_billing_acc_trx_set_id,
            io_action_outcome_id
     );

  io_action_outcome_id := pkg_os_constant.gOutcome_OK;


end sp_auto_disburse_create;
------------------------------------------------------------------------------------------------------

procedure sp_auto_disburse_payables_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_current_date_time               in             date default null,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_auto_disburse_payables_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_profile_list                     pkg_os_object.t_object_list;
     v_profile_index                    number;
     v_default_profile_id               object.object_id%type;
     v_datamart_tf                      char(1) :=   'T';
     v_billing_acc_parent_id            object.object_id%type;
     v_billing_acc_status               object_bv_value.business_variable_value%type;
     v_stop_credit_disburs              object_bv_value.business_variable_value%type;

     v_stop_all                         object_bv_value.business_variable_value%type;
     v_stop_all_billing                 object_bv_value.business_variable_value%type;
     v_billacc_curr_suspension          object.object_id%type;

     v_policy_term_id                   object_bv_value.business_variable_value%type;
     v_profile_date_of_month            number;
     v_date_type                        number;
     v_profile_end_date_of_month        number;
     v_policy_current_day               number;
     v_account_current_day              number;
     v_account_current_date             date;
     --v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_acc_end_date_of_month            number;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_process_billing_trx_tf           char(1)                            :=   'F';
     v_disbure_type                     lookup_list_value.lookup_enum%type;
     v_disbure_schedule                 lookup_list_value.lookup_enum%type;
     v_disburse_mode                    lookup_list_value.lookup_enum%type;
     v_last_disbursement_batch_run      object_bv_value.business_variable_value%type;
     v_disbursement_start_date          object_bv_value.business_variable_value%type;
     v_disbursement_end_date            object_bv_value.business_variable_value%type; --UTPRODUCT-4668
     v_disbursement_generation_date     object_bv_value.business_variable_value%type; --UTPRODUCT-4668
     v_day_of_week                      object_bv_value.business_variable_value%type;
     v_short_day_name                   varchar2(10);
     v_end_date                         object_bv_value.business_variable_value%type;
     v_current_ba_suspension_list       pkg_os_object.t_object_list;
     v_current_ba_susp_list_index       number;
     v_suspended_trx                    varchar2(400):=null;
     v_current_date                     date;
     v_Susp_EffectiveDate               object_bv_value.business_variable_value%type;
     v_account_creation_date            object_bv_value.business_variable_value%type; --OSPRODUCT-9680
     v_profile_start_date               object_bv_value.business_variable_value%type; --OSPRODUCT-11817
     v_display_start_date               object_bv_value.business_variable_value%type;--OSPRODUCT-18018
     v_out_billingaccounttrxset_id      object.object_id%type; --OSPRODUCT-11817
	 --UTXPRODUCT-142
     v_final_start_date                 object_bv_value.business_variable_value%type;
     v_final_end_date                   object_bv_value.business_variable_value%type;
     v_valid_periods                    number := 0;
     v_exit_loop                        number := 0;
     v_consolidated_disb_tf             pd_property.pd_property_value%type;     
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Auto Disbursement for Billing Account ID : '||in_billing_account_id

          );

     end if;

     v_billing_acc_parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                             gbv_BillingAccountParent

                                        );

     v_billing_acc_status     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        gbv_BillAcc_Status  -- 210153 Generic Object State
                                   );
     --GCNA-1397
     v_account_current_date   :=   trunc(NVL(pkg_db_functions.fn_get_billacc_current_date
                                   (in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id),
                                   NVL(in_current_date_time, pkg_os_time.fn_os_sysdate
                                   ( in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id
                                   ))  --OSBILLING-7829
                                   )
                                   );
     v_account_current_day    :=   to_char(v_account_current_date,'DD');

     v_account_creation_date :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        210151
                                   ); --OSPRODUCT-9680

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| v_billing_acc_status : '||v_billing_acc_status
          );

     end if;

     --
     -- Check if credit disbursement needs to be stopped for this billing account's related policies
     -- SK: Added for OSBILLING-61 GCNA requirement
     --
     if v_billing_acc_status = g_BAObjectStateSuspended --37346
     then
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as gcna has below code uncommented
          /*for r_policy in     (   select
                                        dp.*
                                   from
                                        dragon_policy dp--, dragon_policy_term dpt
                                   where
                                        dp.responsible_billing_account      = in_billing_account_id
                                   and
                                        dp.policy_object_state_id          = 71
                              )
          loop

               v_policy_term_id    :=   pkg_db_functions.fn_get_policy_current_term
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             r_policy.policy_id
                                        );

               v_stop_credit_disburs    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_policy_term_id,--r_policy.policy_id,
                                                  32238146--32235746
                                             );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '|||||| Inside for loop v_billing_acc_status = 37346 :v_stop_credit_disburs : '
                         ||v_stop_credit_disburs
                    );

               end if;*/--- Commented Policies loop --OSBILLING-3498
 /* commenting osproduct-2013/3343
          v_billacc_curr_suspension     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_billing_account_id,
                                                  gbv_BillAcc_CurrSuspension
                                             );

          v_stop_all                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All
                                             );

        v_stop_all_billing                    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_All_Billing
                                             );


          v_stop_credit_disburs         :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billacc_curr_suspension,
                                                  gbv_Susp_Stop_Credit_Disb
                                             );

          if   v_stop_credit_disburs = 1
               or
               v_stop_all = 1 or v_stop_all_billing=1
          then

               io_action_outcome_id := gOutcomeBASuspensed; --48446

               return;

          end if;
  */
    --osproduct 2013/3343
          pkg_db_suspension.sp_get_active_susp_objects
					(
						in_session_id,
						in_transaction_id,
						null,
						in_billing_account_id,
						v_current_ba_suspension_list,
						2
					);
          v_current_date := pkg_db_functions.fn_get_billacc_current_date(in_session_id, in_transaction_id, in_billing_account_id);
          if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        'Total suspension Objects: '||v_current_ba_suspension_list.count||
                        '...current date: '||v_current_date
                    );
          end if;
          v_current_ba_susp_list_index :=v_current_ba_suspension_list.first;

          while v_current_ba_susp_list_index is not null and v_current_ba_suspension_list.count>0
               loop
               v_suspended_trx := pkg_os_object_io.fn_object_bv_get
												(
												  in_session_id,
												  in_transaction_id,
												  v_current_ba_suspension_list(v_current_ba_susp_list_index),
												  32525248
												 );
                v_Susp_EffectiveDate :=  to_char(
                                               to_date(pkg_os_object_io.fn_object_bv_get
                                                (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_ba_suspension_list(v_current_ba_susp_list_index),
                                                  pkg_db_suspension.gbv_Suspension_Eff_Date
                                                 ),
                                                   pkg_os_constant.DragonDateFormatDefault
                                                  ),
                                                pkg_os_constant.DragonDateFormatDefault);
               if  pkg_os_token.fn_find_in_set ( 3, v_suspended_trx) ='T' -- credit disbursemnt is suspended
                   and trunc(to_date(v_Susp_EffectiveDate,pkg_os_constant.DragonDateFormatDefault)) <= trunc(v_current_date)
                    then
                    io_action_outcome_id := gOutcomeBASuspensed; --48446

                    return;


              end if;
          v_current_ba_susp_list_index := v_current_ba_suspension_list.next(v_current_ba_susp_list_index);
          end loop;
          --end loop;

     end if;
     --
     -- SK: End Added for OSBILLING-61 GCNA requirement
     --

     --
     --  Check if there is any active Disbursement Profile
     --
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Get the default disbursement profile'
          );

     end if;

     /*--
     -- Get the default disbursement profile
     --
     v_profile_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_billing_account_id,
          gObjTypeDisbursementProfile,
          v_profile_list,
          null,
          null,
          gRule_ActiveDisburseProfile
     );

     if v_profile_list.count = 0
     then

          io_action_outcome_id := gOutcomeNoProfileExists;

          return;

     end if;

     --
     --  Get the First Disbursement Profile and use it as the Default Profile for this Disbursement
     --
     v_profile_index           := v_profile_list.first;

     v_default_profile_id      := v_profile_list(v_profile_index);*/

     --
     -- Get the ref BV value for Preferred Disbursement Profile
     --
     v_default_profile_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        gbv_BA_PreferredDisbProf --31705546
                                   );

     if v_default_profile_id is null
     then

          io_action_outcome_id := gOutcomeNoProfileExists;

          return;

     end if;


     --
     -- Get the last start date of the last Disbursent Batch created date which will serve as the payable start date
     --

     v_disbursement_start_date     := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_default_profile_id,--osbilling-5618 Cheryl 20180911
                                             gbv_BA_RefMstRecntDisbDate  --20180725 Cheryl vaultdev-9710
                                        );

     --
     --   If first time then we need to determine what the date would be for current month so go back a month since we will add a month
     --
      if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.....v_default_profile_id: ' || v_default_profile_id ||
               '; v_default_profile_id: ' || v_default_profile_id
          );
     end if;		
     if v_disbursement_start_date is null
     then
          --2018-02-07 vaultdev-7337 Change to use account current date vs in_billing_account_id, pkg_os_constant_bv.gbv_GenObjCreationDate
          --2018-08-20 Cheryl vaultdev-9710 - determine what the last disbursement would have been to start from

          --OSPRODUCT-11817
          v_profile_start_date := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_default_profile_id,
                                             pkg_db_profiles.gbv_DPUStartDate  --disbursement profile start date
                                        );
                                        
               --
		  if v_session_control.gLogging_Full
		 then

			  pkg_os_logging.sp_log
			  (
				   in_session_id,
				   in_transaction_id,
				   v_procedure_name,
				   '.....v_profile_start_date: ' || v_profile_start_date ||
				   '; v_account_creation_date: ' || v_account_creation_date
			  );
		 end if;                              
                                        
          if   v_profile_start_date is null
               then
                         
               v_profile_start_date := v_account_creation_date  ;
               
          end if;                

          v_disbursement_start_date := pkg_db_reversal.fn_reverse_disb_batch_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_account_id,
                                            -- to_char(v_account_current_date, pkg_os_constant.DragonDateFormatDefault) --OSPRODUCT-9680
                                             v_profile_start_date --OSPRODUCT-11817
                                        );

                                        

      if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.....v_disbursement_start_date: ' || v_disbursement_start_date 
          );
     end if; 
     end if;



     v_disbure_type          :=        pkg_os_object_io.fn_object_bv_get
                                    (
                                        in_session_id,
                                        in_transaction_id,
                                        v_default_profile_id,
                                        gbv_Disbursement_Type
                                     );

     v_disburse_mode          :=        pkg_os_object_io.fn_object_bv_get
                                    (
                                        in_session_id,
                                        in_transaction_id,
                                        v_default_profile_id,
                                        pkg_db_billing_payable.gbv_DisbursementMode          --31690846
                                     );

     v_disbure_schedule      :=     pkg_os_object_io.fn_object_bv_get
                                    (
                                        in_session_id,
                                        in_transaction_id,
                                        v_default_profile_id,
                                        gbv_DisbursementSchedule
                                     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Disburse start date: ' || v_disbursement_start_date ||
               '; Type: ' || v_disbure_type ||
               '; Mode: ' || v_disburse_mode ||
               '; schedule: ' || v_disbure_schedule
          );
     end if;

     if v_disbure_schedule is null
     then
          v_disbure_schedule  :=   g_DisburseFreq_Monthly;

     end if;

     --UTXPRODUCT-142 start
     v_consolidated_disb_tf :=   nvl(pkg_os_product.fn_product_property_get
                                                        ( 
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_billing_account_id,
                                                        gConsolidatedCommDisbursement -- For commission disbursement
                                                        )
                                                        ,'F');
     v_final_start_date := v_disbursement_start_date;
     
     
     while v_exit_loop =0
     loop
	 
	 --UTXPRODUCT-142 end
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......pre condition Disburse start date: ' || v_disbursement_start_date ||
               '; v_valid_periods: ' || v_valid_periods ||
               '; v_exit_loop: ' || v_exit_loop ||
               '; v_consolidated_disb_tf: ' || v_consolidated_disb_tf
          );
     end if;
	 
     if v_disbure_schedule = g_DisburseFreq_Monthly
     then


          v_date_type              :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_default_profile_id,
                                             gbv_Disburse_Monthly_DayType --32861640  --DisbursementProfileUsage - List - Date Type
                                        );
																														   
                                        
--OSPRODUCT-16830 moved this code in the if condition later
/*--2018-03-21 Cheryl For accounting period we will use the actual date this is not needed but leaving for GCNA compatability

          if v_date_type = g_DisburseDayType_AccPer
          then

               -- @Keerthi This is retuning the last date of the account current date always ..

               v_profile_date_of_month := pkg_cs_profiles.fn_get_Acc_Period_End_Date
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  to_char(v_account_current_date)
                                              );


          else


               v_profile_date_of_month  :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_default_profile_id,
                                                  gbv_DisbursementDateofMonth
                                             );

          end if;

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--Need to ask as there are some difference in code


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Profile Date Type: ' || v_date_type ||
                         '; Profile Date of Month: ' || v_profile_date_of_month ||
                         '; Profile End Date of Month: ' || v_profile_end_date_of_month ||
                         '; v_account_current_date: ' || v_account_current_date
                    );

               end if;
               if nvl(v_profile_date_of_month,0) = 0 or v_profile_date_of_month = 31
               then
                --2018-03-13 Cheryl Change from sysdate to v_account_current_date
                    v_profile_date_of_month := to_char(last_day(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault)),'DD'); --OSPRODUCT-16830

               end if;
               if v_session_control.gLogging_Full then

                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           '...... Based on prfile date of month: '|| v_profile_date_of_month
                      );


               end if;
               --2018-03-21 Cheryl check if for accounting period if so use this date
              */				
               if v_date_type = g_DisburseDayType_AccPer
               then

             v_disbursement_end_date  :=   to_char
                                             (
                                                  pkg_cs_db_functions.fn_get_accprd_end_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                   --    to_char(v_account_current_date)
                                                   to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault)  --20180830 Cheryl

                                                   ),
                                                   pkg_os_constant.DragonDateFormatDefault
                                             );

         else


               v_end_date := to_char(add_months(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), 1), pkg_os_constant.DragonDateFormatDefault);

                  --OSPRODUCT-16830 start       

                    v_profile_date_of_month  :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_default_profile_id,
                                                       gbv_DisbursementDateofMonth
                                                  );
                     if nvl(v_profile_date_of_month,0) = 0 or v_profile_date_of_month = 31
                    then
                     --2018-03-13 Cheryl Change from sysdate to v_account_current_date
                         v_profile_date_of_month := to_char(last_day(to_date(v_end_date, pkg_os_constant.DragonDateFormatDefault)),'DD'); --OSPRODUCT-16830

                    end if;
                    if v_session_control.gLogging_Full then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Based on prfile date of month: '|| v_profile_date_of_month||
                                'v_end_date:'||v_end_date
                           );


                    end if;                             
                -- OSPRODUCT-16830 end                              
                    --
           --   Get the Billing end date as per date of month
           --

            v_disbursement_end_date := substr(v_end_date, 1, 6) || lpad(v_profile_date_of_month, 2, '0') || substr(v_end_date, 9);


               --
               --   Calculate the last effective date when date of month is from 29,30,31
               --   and Months in (Feb,April,June,Sep,Nov)
               --

                  if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Based on v_disbursement_end_date1: '|| v_disbursement_end_date
                         );

                    end if;

               if
                    to_number(substr(v_disbursement_end_date,5,2)) in (4,6,9,11)
                    and
                    to_number(substr(v_disbursement_end_date,7,2)) > 30
               then

                    v_disbursement_end_date := substr(v_disbursement_end_date, 1, 6)||'30'||substr(v_disbursement_end_date, 9);

               elsif
                    to_number(substr(v_disbursement_end_date,5,2)) = 2
                    and
                    to_number(substr(v_disbursement_end_date,7,2)) > 29
                    and
                    mod(to_number(substr(v_disbursement_end_date,1,4)),4) = 0
               then

                    v_disbursement_end_date := substr(v_disbursement_end_date, 1, 6)||'29'||substr(v_disbursement_end_date, 9);

               elsif
                    to_number(substr(v_disbursement_end_date,5,2)) = 2
                    and
                    to_number(substr(v_disbursement_end_date,7,2)) > 28
                    and
                    mod(to_number(substr(v_disbursement_end_date,1,4)),4) != 0
               then

                    v_disbursement_end_date := substr(v_disbursement_end_date, 1, 6)||'28'||substr(v_disbursement_end_date, 9);

               end if;

          end if;

     elsif  v_disbure_schedule = g_DisburseFreq_Weekly
     then

          --
          --   Get the day of week for weekly frequency
          --

          v_day_of_week :=    pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_default_profile_id,
                                   gbv_DisbursementDayofWeek
                              );

          --
          --   If day of week is not selected for weekly frequency, default to monday
          --

          if (v_day_of_week is null or v_day_of_week = 0)
          then

               v_day_of_week := pkg_db_stmt.g_DayofWeek_Monday;        -- Monday

          end if;

          v_short_day_name := substr(pkg_os_lookup.fn_lookup_list_text_get(pkg_db_stmt.DaysOfWeekList, v_day_of_week),1,3);

                  if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... short day: '|| UPPER(v_short_day_name)
                              || ' todays type day ' ||  to_char(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), 'DY')
                              || ' disb start ' || v_disbursement_start_date

                         );

                    end if;
          --
          --   Get the Billing end date as per day of week
          --

               v_disbursement_end_date := to_char(next_day(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), v_short_day_name), pkg_os_constant.DragonDateFormatDefault);

     elsif     v_disbure_schedule = g_DisburseFreq_Daily


     then

               v_disbursement_end_date  := to_char((to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault) + 1), pkg_os_constant.DragonDateFormatDefault);

     elsif v_disbure_schedule = g_DisburseFreq_Quarterly
     then
         --
          --   Get the Billing end date for quarterly frequency
          --
-- 2018-03-13 determine the quarterly date based on date
-- Add 1 day to get into the next quarter

          v_disbursement_end_date :=  to_char(add_months((trunc(to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault),'Y') -1) ,(to_number(to_char((to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault) +1),'Q')) * 3)),pkg_os_constant.DragonDateFormatDefault);
          --v_disbursement_end_date := to_char(add_months(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), 3), pkg_os_constant.DragonDateFormatDefault);


      elsif  v_disbure_schedule = g_DisburseFreq_Halfyear
      then

               --
               --   Get the Billing end date for half-yearly frequency
               --
  --2016-03-13 determine the semi annual date

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... half year: '|| to_number(substr(v_disbursement_start_date,6,1))
                    );

          end if;
          --  add 1 to get into the next cycle from previous
          --  if (to_number(substr(v_disbursement_start_date,6,1)) +1) <= 6
          -- changed 20180926 changed to get the full month
          if (to_number(substr(v_disbursement_start_date,5,2))) = 12
          --if substr(to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault),6, 6) <= 6
          then
               v_disbursement_end_date := to_char((add_months(trunc((to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault) +1) ,'Y'),6) -1),pkg_os_constant.DragonDateFormatDefault);--20180926
          else
               v_disbursement_end_date := to_char((add_months(trunc(to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault) ,'Y'),12) -1),pkg_os_constant.DragonDateFormatDefault);
              --v_disbursement_end_date := to_char(add_months(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), 6), pkg_os_constant.DragonDateFormatDefault);
          end if;

     elsif v_disbure_schedule = g_DisburseFreq_Yearly
     then

          --
          --   Get the Billing end date for yearly frequency
          --
-- 2018-03-13 determine the end of year date
--  add 1 to get into the next cycle from previous
          v_disbursement_end_date := to_char((add_months(trunc((to_date(v_disbursement_start_date,pkg_os_constant.DragonDateFormatDefault) +1) ,'Y'),12) -1),pkg_os_constant.DragonDateFormatDefault);
          --v_disbursement_end_date := to_char(add_months(to_date(v_disbursement_start_date, pkg_os_constant.DragonDateFormatDefault), 12), pkg_os_constant.DragonDateFormatDefault);

     end if;


        if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Based on Disbursement Profile Frequency: '|| v_disbure_schedule ||
                    ' - '|| pkg_os_lookup.fn_lookup_list_text_get(gDisbursementFreqList, v_disbure_schedule) ||
                    ' Billing Period End Date is '||v_disbursement_end_date
                    || ' account current date ' || v_account_current_date

                    );

          end if;
          
          --OSPRODUCT-18018
          if v_profile_start_date is not null and v_display_start_date is null then
               v_display_start_date := pkg_db_reversal.fn_reverse_disb_batch_date
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                  -- to_char(v_account_current_date, pkg_os_constant.DragonDateFormatDefault) --OSPRODUCT-9680
                                   v_disbursement_end_date --OSPRODUCT-11817
                              );
          end if;   
               
               --UTPRODUCT-4668
     v_disbursement_generation_date := v_disbursement_end_date;

     pkg_cs_db_billing.sp_disbursement_generation_date
      (
        in_session_id,
        in_transaction_id,
        v_disbursement_generation_date
      );
                
			--UTXPRODUCT-142 start   
               -- if it is found that a disbursement should be generated for this period, 
                    -- start date is updated with end date so that in the next iteration of the loop, new end date can be calculated
                    -- final end date is set so that it can be used further for setting on BATS and profile
                    -- count of valid periods is increased, so that we can later check if we need to create any disbursement or not
               -- if it is found that a disbursement should not be generated for this period, 
                    -- exit the loop;
                    
                                
           if trunc(to_date(v_disbursement_generation_date, pkg_os_constant.DragonDateFormatDefault)) <= trunc(v_account_current_date)
           then
                v_disbursement_start_date := v_disbursement_end_date;
                v_final_end_date          := v_disbursement_end_date;
                v_valid_periods           := v_valid_periods +1;
                       
           else
                v_exit_loop               :=1;
           end if;
           
           -- If Consolidated commission disbursement property is false, exit the loop first time itself.
           if v_consolidated_disb_tf = 'F'
           then
                     
                v_exit_loop               :=1;
                     
           end if; 
           
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......post condition Disburse start date: ' || v_disbursement_start_date ||
                    '; v_valid_periods: ' || v_valid_periods ||
                    '; v_exit_loop: ' || v_exit_loop ||
                    '; v_consolidated_disb_tf: ' || v_consolidated_disb_tf
               );
          end if;              
                    
       end loop;    
       

     --
     --   If Billing end date is <= current date , then generate the statement
     --
     if v_valid_periods >0
     then
	 
	 --UTXPRODUCT-142 end
     --  update the disbursement date to next date
     --  20180725 cheryl VaultDEV-9710
     --  send zero_disb = T
     --- OSPRODUCT 1657 Starts----

          /*pkg_os_object_io.sp_object_bv_set
               (
                in_session_id,
                in_transaction_id,
                v_default_profile_id,  --osbilling-5618 Cheryl 20180911
                gbv_BA_RefMstRecntDisbDate,
                v_disbursement_end_date
                );*/
           pkg_db_object.sp_ba_object_bv_set
                (
                  in_session_id,
                  in_transaction_id,
                  v_default_profile_id,
                  gbv_BA_RefMstRecntDisbDate,
                  v_final_end_date
                );
         --- OSPRODUCT 1657 Ends----

          sp_auto_disburse_create
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               v_default_profile_id,
               io_action_outcome_id,
               null,
               'T',
                to_date(v_final_end_date,pkg_os_constant.DragonDateFormatDefault),-- UTPRODUCT-4601 --UTXPRODUCT-142
                v_out_billingaccounttrxset_id  --OSPRODUCT-11817						   
          );

          --OSPRODUCT-11817
          if v_out_billingaccounttrxset_id is not null
          then
               
          	pkg_db_object.sp_ba_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_out_billingaccounttrxset_id,
                    pkg_db_constant.gbv_FiTransactionSet_startdate,
                    to_char(to_date(NVL(v_display_start_date,v_final_start_date),pkg_os_constant.DragonDateFormatDefault)+1,pkg_os_constant.DragonDateFormatDefault) --OSPRODUCT-18018
               );
               
               pkg_db_object.sp_ba_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_out_billingaccounttrxset_id,
                    pkg_db_constant.gbv_FiTransactionSet_enddate,
                    v_final_end_date --UTXPRODUCT-142
               );
               
          
          end if;
               
     else

        if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... No Disbursement batch needs to be created based on the profile settings ');

          end if ;

          io_action_outcome_id := pkg_db_stmt.gOutcome_NoStmtGenerated;

     end if;


end sp_auto_disburse_payables_tf;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_payable_fi_stmt_get
--
--   %USAGE
--   This procedure will validate/confirm the FItems before disbursement process for agency recon statement
--
--   %ALGORITHM
--   1.   Having a userSession get the statenmet batch from the context
--   2.   Get all rollup objects for the recon statement
--        A.   Get the rollup status, if reconciled and due amount is negative then only proceed
--             I.   Get all rollup members for the rollup
--             II.  Loop through each rollup member
--                  a.   Get the contributor FItem
--                  b.   Check the type of Fitem
--                       i.   set payable Fitem if the type is Credit
--                       ii.  Get payable FItem balance
--                       iii. If balance if negative
--                            iiia.     add payable Fitem to the 'toProcess' fitem list
--   3.   If there is no fitem in the  'toProcess' fitem list
--        A.   Set the outcome as No Record Selected and return
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_payable_fi_stmt_get
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     io_payable_item_list               in out nocopy  t_fitem_list,
     io_payable_item_rec                in out nocopy  t_payable_fitem_rec,
     out_batch_total_amount             out            number,
     out_stmt_batch_id                  out            object.object_id%type
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_payable_fi_stmt_get';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payable_item_rec                 t_payable_fitem_rec;
     v_batch_total_amount               number                   :=   0;
     v_payable_fitem_balance            number;
     v_payable_fitem_id                 object.object_id%type;
     v_stmt_batrxset_id                 object.object_id%type;
     v_stmt_recon_id                    object.object_id%type;
     v_rollup_member_fitem_id           object.object_id%type;
     v_payable_item_list                t_fitem_list;
     v_rollup_status_id                 object_state.object_state_id%type;
     v_rollup_due_Amount                number;
     v_fitem_type_id                    db_fitem_type.db_fitem_type_id%type;
     v_fitem_category_id                db_fitem_category.db_fitem_category_id%type;

     cursor c_agencyrollup(in_batch_id object.object_id%type)
     is
          select
               *
          from

               dragon_rollup
          where
               ru_parent_id = in_batch_id
          and
               ru_object_state_id in (gObjState_ReconReconciled);

     cursor c_agencyrollupmember (in_agency_recon_id object.object_id%type)
     is

          select
               *
          from
               dragon_rollup_member
          where
               rum_parent_id = in_agency_recon_id;
		--OSBILLING-4432 start1 (Associated cash should be available for disbursement as well)
       cursor c_agency_associated_cash (in_batch_id object.object_id%type)
       is
          SELECT
             *
          FROM
                dragon_cash_allocation
          WHERE
                fitemalloc_ass_agencystmt_id =in_batch_id
          AND
                pkg_os_object.fn_object_type_get(1,1,fitem_id) = 2365246
          and
                to_number(replace(FITEM_CASH_BALANCE, ',', '')) < 0
          and
                fitem_category<>'Receipt';

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||Entering to get valid payable fitems list');

     end if ;

     --
     --   1.   Having a userSession get the statenmet batch from the context
     --
     v_stmt_batrxset_id  :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_session_id,
                                   29650546   -- UserSession._Reference_SessionPolicy >>> Policy
                              );


     --
     --   2.   Get all rollup objects for the recon statement
     --
     for r_agencyrollup in c_agencyrollup(v_stmt_batrxset_id)
     loop

          v_rollup_due_Amount :=   r_agencyrollup.ru_agent_net_due;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Rollup Object id : ' ||r_agencyrollup.ru_id||
                    ' Rollup Object status : '||v_rollup_status_id||
                    ' Rollup Object due amount : '||v_rollup_due_Amount
               );

          end if;

          if v_rollup_due_Amount < 0
          then

               --
               --   I.   Get all rollup members for the rollup
               --
               for r_agencyrollupmember in c_agencyrollupmember(r_agencyrollup.ru_id)
               loop

                    --
                    --   a.   Get the contributor FItem
                    --
                    v_rollup_member_fitem_id :=   r_agencyrollupmember.rum_ref_fitem;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............... Rollup member fitem id : ' ||v_rollup_member_fitem_id
                         );

                    end if;

                    v_fitem_type_id     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_rollup_member_fitem_id,
                                                  gbv_FItem_Debit_Credit
                                             );

                    v_fitem_category_id :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_rollup_member_fitem_id,
                                                  gbv_FItem_Category
                                             );

                    --
                    --   b.   Check the type of Fitem
                    --
                    if   v_fitem_type_id = gFItemType_Debit
                         Or
                         (    v_fitem_type_id = gFItemType_Credit
                              and
                              v_fitem_category_id = gFItem_Category_Comm
                         )
                    then

                         --
                         --   i.   set payable Fitem if the type is Credit
                         --
                         v_payable_fitem_id    :=   v_rollup_member_fitem_id;

                         --
                         --   ii.  Get payable FItem balance
                         --
                         v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payable_fitem_id,
                                                            gbv_fitem_amount_due
                                                       );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............... Payable Fitem ID: '||v_payable_fitem_id||
                                   ', With Balance: '||v_payable_fitem_balance
                              );

                         end if;

                         --
                         --   iii. If balance if negative
                         --
                         if v_payable_fitem_balance < 0
                              or
                              (    v_fitem_category_id = gFItem_Category_Comm
                                   and
                                   v_payable_fitem_balance > 0
                              )
                         then

                              --
                              --  iiia. add payable Fitem to the 'toProcess' fitem list
                              --
                              select
                                   *
                              into
                                   v_payable_item_rec(v_payable_fitem_id)
                              from
                                   dragon_fitem
                              where
                                   fitem_id = v_payable_fitem_id
                              ;

                              v_batch_total_amount :=   v_batch_total_amount + v_payable_fitem_balance;

                              v_payable_item_list(v_payable_fitem_id) := v_payable_fitem_id;

                         end if;
                  end if;

               end loop;
                    end if;

               end loop;
		 -- OSBILLING-4432 start2
     -- The associated cash for agency should be available for disbursement
     for r_agency_associated_cash in c_agency_associated_cash(v_stmt_batrxset_id) loop

     v_payable_fitem_id := r_agency_associated_cash.FITEM_ID;
     --get the balance
     v_payable_fitem_balance  :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_payable_fitem_id,
                                                            gbv_fitem_amount_due
                                                       );
	if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.........Associated cash block fitem : ' ||v_payable_fitem_id||
                    ' fitem amount : '||r_agency_associated_cash.FITEM_CASH_BALANCE||
                    ' v_payable_fitem_balance: '||v_payable_fitem_balance
               );
          end if;
		 --add payable Fitem to the 'toProcess' fitem list
   if v_payable_fitem_balance < 0 then

                              select
                                   *
                              into
                                   v_payable_item_rec(v_payable_fitem_id)
                              from
                                   dragon_fitem
                              where
                                   fitem_id = v_payable_fitem_id
                              ;

                              v_batch_total_amount :=   v_batch_total_amount + v_payable_fitem_balance;

                              v_payable_item_list(v_payable_fitem_id) := v_payable_fitem_id;
    end if;
     end loop;

		  --OSBILLING-4432 end2
     --
     --   3.   If there is no fitem in the  'toProcess' fitem list
     --
     if v_payable_item_list.count = 0
     then
          --
          --   A.   Set the outcome as No Record Selected and return
          --
          io_action_outcome_id := gOutcomeNoSelectedRecord;

          return;

     end if;

     --
     --   Set out variables
     --
     io_payable_item_list     :=   v_payable_item_list;
     io_payable_item_rec      :=   v_payable_item_rec;
     out_batch_total_amount   :=   v_batch_total_amount;
     out_stmt_batch_id        :=   v_stmt_batrxset_id;

end sp_payable_fi_stmt_get;
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_disb_fitrx_create_stmt
--
--   %USAGE
--   The procedure implememnts the beggining of the 'Disbursement' flow initiated from agency recon statement batch
--   This procedure will validate/confirm the FItems before disbursement process.
--   System will create the placeholder fitransactions for each selected fitem
--
--
--   %ALGORITHM
--   1. Check the Billing Account status 37346
--      a. Terminate the disb.Batch processing if Billing Account status is 37346
--   2. Get selected payable items and set batch total amount
--   3. Create the placeholder FItransactions for each selected fitem
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_disb_fitrx_create_stmt
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billAccTRXset_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disb_fitrx_create_cashpost';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_account_status_37346_tf          boolean := false;

     v_batch_total_amount               number                                  :=   0;
     v_payable_item_list                t_fitem_list;
     v_payable_item_rec                 t_payable_fitem_rec;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_stmt_batch_id                    object.object_id%type;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||Entering disbursement process for agency recon statement batch');

     end if ;

     --
     --  Check the Billing Account status 37346
     --
     v_entry_method := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_billAccTRXset_id, PKG_DB_OBJECT.gbv_FITrxSet_EntryType);

     if v_entry_method <> gBatchEntryMethod_Manual
     then

          sp_billing_acc_status_check
          (
               in_session_id,
               in_transaction_id,
               in_billAccTRXset_id,
               io_action_outcome_id,
               v_account_status_37346_tf
          );

          if v_account_status_37346_tf
          then

               return;   -- the Billing Account status is 37346

          end if;

     end if;

     sp_payable_fi_stmt_get
     (
          in_session_id,
          in_transaction_id,
          io_action_outcome_id,
          v_payable_item_list,
          v_payable_item_rec,
          v_batch_total_amount,
          v_stmt_batch_id
      );

     if io_action_outcome_id = gOutcomeNoSelectedRecord
     then

          return;

     end if;

     sp_disburse_fitrx_create
     (
          in_session_id,
          in_transaction_id,
          in_billAccTRXset_id,
          io_action_outcome_id,
          v_payable_item_list,
          v_payable_item_rec,
          v_batch_total_amount
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_stmt_batch_id,
          gbv_BatrxsetCreatedBatch,   --31756446
          in_billAccTRXset_id
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_stmt_batch_id,
          pkg_os_constant_bv.gbv_GenObjObjectState,   --210153
          gObjState_DisbInProcess
     );

end sp_disb_fitrx_create_stmt;

--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--    sp_create_partial_earned_fitems
--
--   %USAGE
--   The procedure implememnts the beggining of the 'Disbursement' flow initiated from agency recon statement batch
--   This procedure will validate/confirm the FItems before disbursement process.
--   System will create the placeholder fitransactions for each selected fitem
--
--
--   %ALGORITHM
--   1. Check the Billing Account status 37346
--      a. Terminate the disb.Batch processing if Billing Account status is 37346
--   2. Get selected payable items and set batch total amount
--   3. Create the placeholder FItransactions for each selected fitem
--
procedure sp_create_earned_fitems
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_fitransaction_id                in             object.object_id%type,
     in_payable_fitem_id                 in             object.object_id%type,
     in_earned_amount                    in             number,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_create_earned_fitems'; --OSBILING-6568 Corrected SP name
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payable_fitem_offset_id          object.object_id%type;
     v_payable_fichange_id              object.object_id%type;
     v_payable_offset_fichange_id       object.object_id%type;
     v_earned_offset_fitem_id           object.object_id%type;
     v_earned_fitem_id                  object.object_id%type;
     v_earned_fichange_id               object.object_id%type;
     v_earned_offset_fichange_id        object.object_id%type;
     v_payable_apply_fichange_id        object.object_id%type;
     v_offset_apply_fichange_id         object.object_id%type;
     v_current_date                     object_bv_value.business_variable_value%type:= to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,in_fitransaction_id),pkg_os_constant.DragonDateFormatDefault);
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_datamart_tf                      char(1)                       :=   'T';
     v_policy_id                        object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_instalment_id                    object.object_id%type;
     v_initial_amount                   float;
     v_fitem_category_id                object.object_id%type;
     --v_fitem_creator_fichange_id         object.object_id%type; --commented for OSBILLING-6568
     v_fitem_creator_fitrx_id           object.object_id%type;
     v_fitem_creator_fitrxset_id         object.object_id%type;--added for OSBILLING-6568
     v_fitem_asset_id                   object.object_id%type;--OSBILLING-5665 Added check for Asset ID
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering procedure to create fitems for the earned amount, in_payable_fitem_id  : '||in_payable_fitem_id ||
                '|||||| Earned Amount ' || in_earned_amount

          );
     end if;

     v_payable_fitem_offset_id :=   pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_payable_fitem_id,
                                         pkg_db_object.gbv_AssociatedOffsetFitem
                                    );

     if v_payable_fitem_offset_id is null then

          v_policy_id              :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        29721246
                                   );


          v_policy_transaction_id  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        29748446
                                   );

          v_instalment_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        29704446
                                   );

          v_initial_amount :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        30749646
                                   );


          v_fitem_Category_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        29710146
                                   );
          --<Commented for OSBILLING-6568 starts>
          /*
          v_fitem_creator_fichange_id   :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_payable_fitem_id,
                                                  pkg_db_object.gbv_FItemRefCreatorFiChange
                                             );

          v_fitem_creator_fitrx_id :=   pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_creator_fichange_id
                                        );
          */
          -- <Commented for OSBILLING-6568 ends >
          -- <added for OSBILLING-6568 starts>

          v_fitem_creator_fitrx_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_payable_fitem_id,
                                                  pkg_db_object.gbv_FItem_RefAssWithFItrx
                                             );
          v_fitem_creator_fitrxset_id := pkg_os_object_search.fn_object_get_parent_of_type
                                             (in_session_id,
                                              in_transaction_id,
                                              v_fitem_creator_fitrx_id,
                                              pkg_db_object.gObjType_BillingAccountTrxSet);


          -- <added for OSBILLING-6568 ends>
          v_fitem_asset_id    :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_payable_fitem_id,
                                        29719446
                                   );--OSBILLING-5665

          -- Get the Fitem with the same instalment id, policy transaction
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'v_instalment_id ' || v_instalment_id || ' v_policy_id ' || v_policy_id || ' v_initial_amount ' || v_initial_amount || ' v_policy_transaction_id '
                    || v_policy_transaction_id || ' v_fitem_Category_id ' || v_fitem_Category_id || ' v_fitem_asset_id ' || v_fitem_asset_id || ' v_fitem_creator_fitrx_id '
                    || v_fitem_creator_fitrx_id || ' v_fitem_creator_fitrxset_id ' || v_fitem_creator_fitrxset_id
               );  -- added more variables to show in logs for OSBILLING-6568
          end if;

     begin

          select
               fitem_id
          into
               v_payable_fitem_offset_id
          from
               dragon_fitem f
          where
               f.installment_id = v_instalment_id
          and
               f.policy_id = v_policy_id
          and
               f.policy_transaction_id = v_policy_transaction_id
          and
               abs(f.initial_amount)  = abs( v_initial_amount )
          and
               f.fitem_id <> in_payable_fitem_id
          and
               f.fitem_category_id = v_fitem_Category_id
          and
               f.fitem_asset_id = v_fitem_asset_id --OSBILLING-5665 Added check for Asset ID
          and
                 --< OSBILLING-6568 commented condition on creator_fitransaction_id
                 --  and added condition on creator_fitransactionset_id starts >
                 -- f.creator_fitransaction_id = v_fitem_creator_fitrx_id; --added this for VAULTDEV-10550 OSBILLING-6423
                    f.creator_fitransactionset_id = v_fitem_creator_fitrxset_id;
                  --< OSBILLING-6568 ends >

      exception
          when no_data_found
          then
               null;
      end;


      end if;

     --< commented in OSBILLING-6568 starts >
     /*
     v_payable_fichange_id      :=   pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_payable_fitem_id,
                                         pkg_db_object.gbv_FItemRefCreatorFiChange
                                    );

     if v_payable_fitem_offset_id is not null
     then --Added if block for OSBILLING-6568
     v_payable_offset_fichange_id :=   pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_payable_fitem_offset_id,
                                         pkg_db_object.gbv_FItemRefCreatorFiChange
                                    );
     end if;
     */
     --< commented in OSBILLING-6568 ends >

     -- For the earned amount, create a new Fitem


     pkg_os_object_copy.sp_object_duplicate
     (
          in_session_id,
          in_transaction_id,
          in_payable_fitem_id,
          v_earned_fitem_id,
          'F' --OSPRODUCT-7721
     );



      if v_payable_fitem_offset_id is not null then

     -- Get its offset Fitem

          pkg_os_object_copy.sp_object_duplicate
          (
               in_session_id,
               in_transaction_id,
               v_payable_fitem_offset_id,
               v_earned_offset_fitem_id,
               'F' --OSPRODUCT-7721
          );

      end if;


     v_bv_table.delete;

     v_bv_table(pkg_db_object.gbv_fitem_effective_date     ).business_variable_value     :=   v_current_date;
     v_bv_table(pkg_db_object.gbv_FItem_RefAssWithFItrx    ).business_variable_value     :=   in_fitransaction_id;
     v_bv_table(gbv_fitem_earned_amount                    ).business_variable_value     :=   in_earned_amount*-1;
     v_bv_table(gbv_fitem_EarningStatus                    ).business_variable_value     :=   gFitem_earned;
     -- OSPRODUCT-15900
     v_bv_table(pkg_db_object.gbv_FItem_Earning_Date).business_variable_value   :=   to_char
                                                                                     (
                                                                                          pkg_os_time.fn_os_sysdate
                                                                                          (
                                                                                               in_session_id,
                                                                                               in_transaction_id,
                                                                                               v_earned_fitem_id
                                                                                          ),
                                                                                          pkg_os_constant.DragonDateFormatDefault
                                                                                     );
     -- OSPRODUCT-15900

     v_bv_table(gbv_fitem_unearned_amount                  ).business_variable_value     :=   0;
     v_bv_table(29704146                                   ).business_variable_value     :=  pkg_os_object.fn_object_parent_get (in_session_id , in_transaction_id , in_payable_fitem_id) ;


     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_earned_fitem_id,
          v_bv_table
     );

     v_bv_table(29704146                  ).business_variable_value     :=  pkg_os_object.fn_object_parent_get (in_session_id , in_transaction_id , v_payable_fitem_offset_id) ;

     if v_earned_offset_fitem_id is not null
     then --enclosed it wihtin if block for OSBILLING-6568
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_earned_offset_fitem_id,
               v_bv_table
          );
          -- OSBilling-5665 : Debit offsets are created under the writing company so offsets should be N/A with earned amount as 0.
          pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_earned_offset_fitem_id,
                              gbv_fitem_EarningStatus,
                              4
                         );
          -- OSPRODUCT-15900
          pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_earned_offset_fitem_id,
                              pkg_db_object.gbv_FItem_Earning_Date,
                              null
                         );
          -- OSPRODUCT-15900

          pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_earned_offset_fitem_id,
                              gbv_fitem_earned_amount,
                              0
                         );
     end if;
     -- /OSBilling-5665

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' ....... Created a new Fitem for the earned amount,  in_payable_fitem_id ' || in_payable_fitem_id
               || ' v_payable_fitem_offset_id ' ||v_payable_fitem_offset_id || ' v_earned_fitem_id ' || v_earned_fitem_id ||
               ' v_earned_offset_fitem_id ' || v_earned_offset_fitem_id
          ); -- OSBILLING-6568 Added more variable to show in logs

     end if;
     --   Create FIchange of type 'Create' for the newly created Fitem

     pkg_db_object.sp_fichange_create
     (
          in_session_id                      =>   in_session_id,
          in_transaction_id                  =>   in_transaction_id,
          in_parent_fitransaction_id         =>   in_fitransaction_id,
          out_fichange_id                    =>   v_earned_fichange_id,
          in_fichange_action                 =>   pkg_db_object.gFIChange_Create,
          in_fichange_action_delta           =>   in_earned_amount*(-1),
          in_fichange_ref_fitem              =>   v_earned_fitem_id,
          in_fichange_sum_include            =>   pkg_db_object.gFIChange_Yes,
          in_fichange_process_date           =>   v_current_date

     );

    if v_earned_offset_fitem_id is not null
    then --enclosed it within if block for OSBILLING-6568
          pkg_db_object.sp_fichange_create
          (
               in_session_id                      =>   in_session_id,
               in_transaction_id                  =>   in_transaction_id,
               in_parent_fitransaction_id         =>   in_fitransaction_id,
               out_fichange_id                    =>   v_earned_offset_fichange_id,
               in_fichange_action                 =>   pkg_db_object.gFIChange_Create,
               in_fichange_action_delta           =>   in_earned_amount,
               in_fichange_ref_fitem              =>   v_earned_offset_fitem_id,
               in_fichange_sum_include            =>   pkg_db_object.gFIChange_Yes,
               in_fichange_process_date           =>   v_current_date
          );
    end if;
     -- Close the balance of the payable Fitem id

     pkg_db_object.sp_fichange_create
     (
          in_session_id                      =>   in_session_id,
          in_transaction_id                  =>   in_transaction_id,
          in_parent_fitransaction_id         =>   in_fitransaction_id,
          out_fichange_id                    =>   v_payable_apply_fichange_id,
          in_fichange_action                 =>   pkg_db_object.gFIChange_Change,
          in_fichange_action_delta           =>   in_earned_amount,
          in_fichange_ref_fitem              =>   in_payable_fitem_id,
          in_fichange_sum_include            =>   pkg_db_object.gFIChange_Yes,
          in_fichange_process_date           =>   v_current_date
     );

     if v_payable_fitem_offset_id is not null -- it is a culprit of issue in OSBILLING-6568
     then -- enclosed the call within if block to fix the issue raised in OSBILLING-6568
          pkg_db_object.sp_fichange_create
          (
               in_session_id                      =>   in_session_id,
               in_transaction_id                  =>   in_transaction_id,
               in_parent_fitransaction_id         =>   in_fitransaction_id,
               out_fichange_id                    =>   v_offset_apply_fichange_id,
               in_fichange_action                 =>   pkg_db_object.gFIChange_Change,
               in_fichange_action_delta           =>   in_earned_amount*(-1),
               in_fichange_ref_fitem              =>   v_payable_fitem_offset_id,
               in_fichange_sum_include            =>   pkg_db_object.gFIChange_Yes,
               in_fichange_process_date           =>   v_current_date
          );
     end if;

      pkg_os_datamart.sp_datamart_update_row
      (
           in_session_id,
           in_transaction_id,
           v_earned_fitem_id,
           v_datamart_tf
      );

     if v_earned_offset_fitem_id is not null
     then --enclosed it within if block for OSBILLING-6568
           pkg_os_datamart.sp_datamart_update_row
           (
                in_session_id,
                in_transaction_id,
                v_earned_offset_fitem_id,
                v_datamart_tf
           );
     end if;

     if v_payable_fitem_offset_id is not null
     then --enclosed it within if block for OSBILLING-6568
          pkg_os_datamart.sp_datamart_update_row
          (
                in_session_id,
                in_transaction_id,
                v_payable_fitem_offset_id,
                v_datamart_tf
          );
     end if;


end sp_create_earned_fitems;

-----------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_auto_disburse_multipayer_policy
--
--   %USAGE
--   This procedure creates a Disbursement Batch based on default Disbursement Profile and
--   sets the Batch Status to Request Sent to AP.
--
--   %ALGORITHM
--
--   Not Specified.
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_policy_id                       in             object.object_id%type,
--   in_current_date_time               in             date default null,
--   io_action_outcome_id               in out nocopy  gOutcome.gOutcome_id%type

-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-3575
procedure sp_disburse_multipayer_policy
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_current_date_time               in             date default null,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache, -- GCNA Merge
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as
  --OSPRODUCT-7234 start
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_disburse_multipayer_policy';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_multipayer_enabled_tf            boolean;
     v_term_payer_list                  pkg_os_object.t_object_list;
     v_payer_idx                        number;
     v_primary_insured_ba_id            object.object_id%type := pkg_db_functions.fn_get_policy_billing_account(in_session_id, in_transaction_id, in_policy_id); -- OSPRODUCT-3575
     v_pi_found_tf                      char(1) := 'F';
     v_action_outcome_id                outcome.outcome_id%type:= pkg_os_constant.gOutcome_OK;
     -- #MP
     v_payer_rec                        pkg_db_multipayer.r_payer;
     v_inv_multipayer_mode              boolean;
     v_policy_term_id                   object.object_id%type;
     v_billing_account_id               object.object_id%type;
     -- /#MP

begin

     v_multipayer_enabled_tf := pkg_db_multipayer.fn_multipayer_mode_tf
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_id
                                );

     v_policy_term_id   := pkg_db_functions.fn_get_policy_current_term
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id
                              );

     If v_multipayer_enabled_tf and v_policy_term_id is not null  -- OSPRODUCT-7998
     then
          begin
               Select
                    tp.policy_term_payer_id
               bulk collect into
                    v_term_payer_list
               from
                    dragon_policy_term_payer tp
               where
                    tp.policy_id = in_policy_id
               and
                    tp.policy_term_id =  v_policy_term_id  ;  -- OSPRODUCT-7998
          exception
               when others then null;
          end;

     end if;


     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Starting Processing MultiPayer Disbursements Policy ID : ' || in_policy_id||
               ' :v_primary_insured_ba_id :' ||v_primary_insured_ba_id ||
               ' :Term ID :' || v_policy_term_id
          );
     end if;

     if  v_term_payer_list.count >0
     then

               v_payer_idx := v_term_payer_list.first;

     while v_payer_idx is not null loop


         PKG_DB_MULTIPAYER.sp_payer_validate
          (
               in_session_id,
               in_transaction_id,
               in_payer_entity_id       => v_term_payer_list(v_payer_idx),
               io_payer_rec             => v_payer_rec,                  -- the payer recored will be taken from Policy Term.
               io_inv_multipayer_mode   => v_inv_multipayer_mode,
               in_policy_id             => in_policy_id,
               in_policy_term_id        => v_policy_term_id
          );
          if v_inv_multipayer_mode
          then
               -- Multi payer specific logic
               --
               v_billing_account_id := v_payer_rec.PayerBillingAccount_id;

          end if;


          if v_billing_account_id is not null
          then
               --OSPRODUCT-7234 end
               pkg_db_billing_payable.sp_auto_disburse_policy
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    in_current_date_time,
                    in_object_cache,
                    io_action_outcome_id,
                    v_billing_account_id  --v_term_payer_list(v_payer_idx) --OSPRODUCT-3575
               );

               if   v_billing_account_id = v_primary_insured_ba_id
               then

                    v_pi_found_tf := 'T';

               end if;

               if nvl(io_action_outcome_id,pkg_os_constant.gOutcome_OK) <> pkg_os_constant.gOutcome_OK
               then

                  v_action_outcome_id := io_action_outcome_id;

               end if;

               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' : Policy ID : ' || in_policy_id ||
                         ' : Payer Account ID :' || v_billing_account_id ||
                         ' : Primary Insured Account ID :' || v_primary_insured_ba_id ||
                         ' : Primary Insured Found TF: ' || v_pi_found_tf ||
                         ' : Action Outcome ID :' ||v_action_outcome_id
                    );
               end if;

          end if;

          v_payer_idx := v_term_payer_list.next(v_payer_idx);           --OSPRODUCT-7234

     end loop;
     --OSPRODUCT-7234
     end if;

     --OSPRODUCT-3575
     if v_pi_found_tf = 'F' and v_primary_insured_ba_id is not null   then

          pkg_db_billing_payable.sp_auto_disburse_policy
          (
               in_session_id,
               in_transaction_id,
               in_policy_id,
               in_current_date_time,
               in_object_cache,
               io_action_outcome_id,
               v_primary_insured_ba_id  --v_term_payer_list(v_payer_idx) --OSPRODUCT-3575
          );

          if nvl(io_action_outcome_id,pkg_os_constant.gOutcome_OK) <>  pkg_os_constant.gOutcome_OK
          then

             v_action_outcome_id := io_action_outcome_id;

          end if;

          if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' : Policy ID : ' || in_policy_id ||
                         ' : Primary Insured Account ID :' || v_primary_insured_ba_id ||
                         ' : Primary Insured Found TF: ' || v_pi_found_tf ||
                         ' : Action Outcome ID :' ||v_action_outcome_id
                    );
           end if;

     end if;

     io_action_outcome_id := v_action_outcome_id;

     --OSPRODUCT-3575

end sp_disburse_multipayer_policy;
-- OSPRODUCT-3575
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-12611
--
--   %NAME
--   sp_payable_adj_trx_create
--
--   %USAGE
--      This procedure is used to do addition work for Credit Commission Items as part of Write-off (both Auto and Manual) and Write-off Revesal
--      Emulates what the pkg_db_billing_payable.sp_set_payables_amount does for a qualified payable item:
--        1. Create FiTransaction of type 801- Payables Earning Adjustment
--        2. Create FiChange of type FYI
--
--   %ALGORITHM
--   1. Check if an FiTransaction of type 801 already exists in a Billing Batch in_billing_batch_id
--   2.    If exists - reuase it
--   3.    if not exists - create a new one
--   4. Create FiChange of type FYI  for a Credit Commission Items
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_payable_adj_trx_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_batch_id                in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_policy_trx_id                   in             object.object_id%type,
     in_credit_fitem_id                 in             object.object_id%type,
     in_credit_fichange_amount          in             number
)
as
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_payable_adj_trx_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_fitransaction_801_id             object.object_id%type;
     v_fichange_FYI_id                  object.object_id%type;

     v_fitransaction_list               pkg_os_object.t_object_list;
     v_fitransaction_index              number;          
     v_datamart_tf                      char(1) := 'T';   --OSPRODUCT-13708
     
     v_current_date                     object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get
                                                                                        (
                                                                                             in_session_id,
                                                                                             in_transaction_id,
                                                                                             in_policy_id,
                                                                                             pkg_db_stmt.gbv_PolicyRolledDate
                                                                                        );
                                                                                        
     v_fichange_process_date            object_bv_value.business_variable_value%type := to_char
                                                                                        (
                                                                                             pkg_os_time.fn_os_sysdate
                                                                                             (
                                                                                                  in_session_id,
                                                                                                  in_transaction_id
                                                                                             ),pkg_os_constant.DragonDateFormatDefault
                                                                                        );                                                                                        
begin
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Creating FIChange FYI for Credit fitem='|| in_credit_fitem_id ||
               ', credit fichange amount='||                   in_credit_fichange_amount ||
               ', billing batch=' ||                           in_billing_batch_id ||
               ', policy_id='||                                in_policy_id ||
               ', policy TRX id=' ||                           in_policy_trx_id
          );
     end if;

     -- Get all the children(fitransactions) of billingaccounttransactionset
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_billing_batch_id,
          gObjType_FITransaction,
          v_fitransaction_list,
          in_recurse_flag       => false  -- only immidate children
     );
               
     v_fitransaction_index    :=    v_fitransaction_list.first;
               
     while v_fitransaction_index is not null
     loop               
          if  pkg_db_billing_payable.g_FITrxType_PayableEarning = pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_fitransaction_list(v_fitransaction_index),
                                                                       pkg_db_object.gbv_FITrx_TransactionType
                                                                  )
          then
               v_fitransaction_801_id := v_fitransaction_list(v_fitransaction_index);
               
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Found Billing TRX of type 801. ID='||v_fitransaction_801_id
                    );
               end if;       
                                 
               exit; -- exit loop
          end if;                        

          v_fitransaction_index     :=     v_fitransaction_list.next(v_fitransaction_index);               
     end loop;

               
     if v_fitransaction_801_id is null
     then
          pkg_db_object.sp_fitransaction_create
          (
               in_session_id                      =>             in_session_id,
               in_transaction_id                  =>             in_transaction_id,
               in_fitrx_parent_fitrxset_id        =>             in_billing_batch_id,
               out_fitransaction_id               =>             v_fitransaction_801_id,
               in_fitrx_type                      =>             pkg_db_billing_payable.g_FITrxType_PayableEarning,
               in_fitrx_ref_billing_account       =>             pkg_os_object.fn_object_parent_get
                                                                 (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     in_billing_batch_id -- billing batch
                                                                 ),
               in_fitrx_amount                    =>             0,
               in_fitrx_object_state              =>             pkg_db_cashpost.gFITrxStatus_InProcess,
               in_fitrx_effective_date            =>             v_current_date,
               in_fitrx_gl_date                   =>             v_current_date,
               in_fitrx_posted_date               =>             v_current_date
          ); 
          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Created new Billing TRX of type 801. ID='||v_fitransaction_801_id
               );
          end if;   
          
          pkg_os_object_io.sp_object_bv_set    --OSPRODUCT-13708
               (
                   in_session_id,
                   in_transaction_id,
                   v_fitransaction_801_id,
                   pkg_os_constant_bv.gbv_GenObjObjectState,
                   gFITrxStatus_Processed
               );
          
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_fitransaction_801_id, v_datamart_tf);   --OSPRODUCT-13708
          
     end if;
               
     pkg_db_object.sp_fichange_create
     (
          in_session_id                      =>        in_session_id,
          in_transaction_id                  =>        in_transaction_id,
          in_parent_fitransaction_id         =>        v_fitransaction_801_id,
          out_fichange_id                    =>        v_fichange_FYI_id,
          in_fichange_action                 =>        pkg_db_object.gFIChange_FYI,
          in_fichange_action_delta           =>        0,
          in_fichange_ref_fitem              =>        in_credit_fitem_id,
          in_fichange_sum_include            =>        pkg_db_object.gFIChange_No,
          in_fichange_process_date           =>        v_fichange_process_date,
          in_fichange_ref_pol                =>        in_policy_id,
          in_fichange_ref_pol_trx            =>        in_policy_trx_id,
          in_fichange_belongs_to             =>        in_billing_batch_id,
          in_fitem_lock_tf                   =>        'T',
          in_refresh_datamart                =>        'T',-- 7816 
          in_enable_perf_mode_tf             =>        'T' -- 7816
     );
               
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_fichange_FYI_id,
          pkg_db_billing_modify.gbv_FIChangeAmountFYI,
          in_credit_fichange_amount
     );   
          
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Created FIChange FYI. ID='||v_fichange_FYI_id
          );
     end if;            
                              
end sp_payable_adj_trx_create;
-----------------------------------------------------------------------------------------------------------------------------------------------------


procedure sp_set_payables_wrapper
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
     
)
as

     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_set_payables_wrapper';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_policy_id                        object.object_id%type;
     v_policy_term                      object.object_id%type;
     v_multipayer_enabled_tf            boolean;
     v_term_payer_list                  pkg_db_multipayer.t_payer_tab;
     v_payer_idx                        number;
     v_product_id                       pd_product.pd_product_id%type;                              

     cursor c_policy_terms
     (
          in_product_id         pd_product.pd_product_id%type
     )
     is
          select
              distinct  df.policy_term_id
          from
               dragon_fitem df

          where
               df.policy_id = in_policy_id
          
          and
               df.fitem_type_id = gFItemType_Credit
          and
               -- OSPRODUCT-460
               exists
               (
                    select
                         dbe.credit_fitem_category
                    from
                         db_billing_element dbe
                    where
                         (
                              dbe.pd_product_id = in_product_id
                              or
                              dbe.pd_product_id = gProduct_All
                         )
                    and
                         dbe.create_credit_tf = 'T'
                    and
                         dbe.credit_fitem_category = df.fitem_category_id
                    and
                         (
                         
                         dbe.credit_fitem_sub_category = df.fitem_sub_category_id
                         or 
                         df.fitem_sub_category_id = pkg_db_object.gFItem_SubCat_Comm_Clawback
                         )--LXPRODUCT-282
               )
               -- OSPRODUCT-460
          and
               earning_status !=   pkg_os_lookup.fn_lookup_list_text_get
                                   (
                                        FItemPayablesEarningStatus,
                                        gFitem_Earned
                                   )

          ;

begin



     v_product_id := pkg_os_product.fn_object_product_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id
                              );
     for   r_term in c_policy_terms(v_product_id) loop 
          v_policy_term :=   r_term.policy_term_id;

          v_multipayer_enabled_tf :=    pkg_db_multipayer.fn_multipayer_mode_tf
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_term
                                        );

          if v_multipayer_enabled_tf
          then

               v_term_payer_list.delete;

               pkg_db_multipayer.sp_policy_term_payers_get
               (
                    in_session_Id           =>    in_session_id,
                    in_transaction_id       =>    in_transaction_id,
                    in_policy_term_id       =>    v_policy_term,
                    io_payer_list           =>    v_term_payer_list,   
                    in_print_list           =>    'Y',
                    in_index_by             =>    pkg_db_multipayer.g_PayerGet_idx_BilingAccount -- index by Billing Account ID
               );

               v_payer_idx := v_term_payer_list.first;

               while v_payer_idx is not null 
               loop
                    pkg_db_billing_payable.sp_set_payables_amount
                    (
                         in_session_id,
                         in_transaction_id,
                         in_policy_id                => in_policy_id,
                         io_action_outcome_id        => io_action_outcome_id,
                         in_policy_transaction_id    => null,
                         in_billingacounttrxset_id   => null,
                         in_policy_term_payer_id     => v_term_payer_list(v_payer_idx).PTPayer_object_id,
                         in_policy_term_id           => v_policy_term
                    );

                    v_payer_idx := v_term_payer_list.next(v_payer_idx);

               end loop;

          else
          --OSPRODUCT-6139 ends
               pkg_db_billing_payable.sp_set_payables_amount
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    --'F', --OSPRODUCT-2085
                    --'T', --OSPRODUCT-2085
                    --'T',  -- 2017/10/18 Cheryl do not need to clear installments during nightly process| 27 March,2019 pmadev 3496- switching the flag to T(OSBILLING-6660) --OSPRODUCT-2085
                    io_action_outcome_id,
                    in_policy_term_id => v_policy_term
                    
               );
          --OSPRODUCT-6139 starts
          end if;
               
     end loop;
               
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_set_payables_wrapper;


end PKG_DB_BILLING_PAYABLE;
/
