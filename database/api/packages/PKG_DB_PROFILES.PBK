create or replace package body PKG_DB_PROFILES is

----------------------------------------------------------
-- $Workfile: PKG_DB_PROFILES.PBK  $
-- $Revision: $
-- $Author: rrashmi@OSHQ.ONESHIELD.COM $
-- $Date: 2019-12-26 12:06:57 +0530 (Thur, 26 Dec 2020) $
----------------------------------------------------------

-- Private type declarations
-- type <TypeName> is <Datatype>;

-- Private constant declarations
pkg_name     constant     system_log.program_name%type  := 'pkg_db_profiles.';

-- Private variable declarations
-- <VariableName> <Datatype>;

-- Function and procedure implementations
procedure show_version
is
begin

     dbms_output.put_line('$Workfile: PKG_DB_PROFILES.PBK  $');
     dbms_output.put_line('$Revision: 59953 $');
     dbms_output.put_line('$Author: rrashmi@OSHQ.ONESHIELD.COM $');
     dbms_output.put_line('$Date: 2019-12-26 12:06:57 +0530 (Thur, 26 Dec 2020) $');

exception
    when others then

        dbms_output.put_line(sqlerrm(sqlcode));

end show_version;

-- OSPRODUCT-17719
function fn_is_card_expired
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_card_ctf_id                        in             object.object_id%type,
     in_as_of_date                         in             date default sysdate
)return char
as
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_is_card_expired';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_expired_tf                          char(1); 
     v_expiry_year                         number;
     v_expiry_month                        number;
     v_curr_date_year                      number;
     v_curr_date_month                     number;
     v_ctf_mode_id                         char(1);
     
begin
     
     v_ctf_mode_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_card_ctf_id,
                           gbv_CTFPaymentMode
                      );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. CTF ID: ' || in_card_ctf_id ||
               '.. As of date: '  || in_as_of_date ||
               '.. CTF mode: '    || v_ctf_mode_id
          );

     end if;
     
     if v_ctf_mode_id = g_PaymentMode_Card then
          
          v_expiry_year := to_number ( pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_card_ctf_id,
                                            gbv_CTFCardExpYear
                                       ));
                           
          v_expiry_month := to_number ( pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               in_card_ctf_id,
                                               gbv_CTFCardExpMon
                                           ));
                            
          v_curr_date_year := to_number(to_char(in_as_of_date, 'yyyy'));
          
          v_curr_date_month := to_number(to_char(in_as_of_date, 'mm'));
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Expiry Year: ' || v_expiry_year ||
                    '.. Expiry Month: '  || v_expiry_month ||
                    '.. Current Year: '    || v_curr_date_year ||
                    '.. Current Month: '   || v_curr_date_month
               );

          end if;
          
          if v_expiry_year > v_curr_date_year
             or
             (
                  v_expiry_year = v_curr_date_year 
                  and
                  v_expiry_month >= v_curr_date_month
             )
          then
               v_expired_tf := 'F';
          else
               v_expired_tf := 'T';
          end if;
     
     else
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Passed in CTF is not card. '
               );

          end if;
          
     end if;
     
     return v_expired_tf;

end fn_is_card_expired;

-- OSPRODUCT-4031
function fn_sanity_check_for_profile
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_payment_mode_id           in             char,
     in_placeholder_id            in             object.object_id%type
)return varchar
as

     v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name             constant  system_log.program_name%type  := pkg_name||'fn_sanity_check_for_profile';

     v_plchldr_object_type        object_type.object_type_id%type;
     v_card_type                  object_bv_value.business_variable_value%type;

     v_card_number_16digit        object_bv_value.business_variable_value%type;
     v_card_number_4digit         object_bv_value.business_variable_value%type;
     v_card_expirymonth           object_bv_value.business_variable_value%type;
     v_card_expiryyear            object_bv_value.business_variable_value%type;

     v_eft_bankid                 object_bv_value.business_variable_value%type;
     v_eft_banktransitnumber      object_bv_value.business_variable_value%type;
     v_eft_bankroutingnumber      object_bv_value.business_variable_value%type;
     v_eft_accountnumber          object_bv_value.business_variable_value%type;
     v_eft_accounttype            object_bv_value.business_variable_value%type;
     v_eft_bankcountry            object_bv_value.business_variable_value%type;

     v_sanity_chk_code            object_bv_value.business_variable_value%type := 20;
     v_billing_account_id         object.object_id%type;

     v_ctf_empty_profile          object_bv_value.business_variable_value%type; -- UTPRODUCT-3154

begin

     v_billing_account_id := pkg_os_object.fn_object_parent_get
                             (
                                  in_Session_id,
                                  in_transaction_id,
                                  in_placeholder_id
                             );

     v_ctf_empty_profile := pkg_os_object_io.fn_object_bv_get -- UTPRODUCT-3154
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_placeholder_id,
                                 gbv_CTF_EmptyProfile
                            );

     pkg_cs_db_profiles.sp_validate_profile
     (
          in_Session_id,
          in_transaction_id,
          in_payment_mode_id,
          in_placeholder_id,
          v_billing_account_id
     );

     --OSPRODUCT-2655
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Sanity Check for profile id: ' || in_placeholder_id ||
               '.. Profile Mode: '                || in_payment_mode_id    ||
               '.. Billing Account ID: '          || v_billing_account_id ||
               ', EmptyProfile flag (Yes(1)/No(2,NULL))='|| v_ctf_empty_profile  -- UTPRODUCT-3154
          );

     end if;

     if in_payment_mode_id is null
        or
        in_payment_mode_id not in (g_PaymentMode_Cheque, g_PaymentMode_Card, g_PaymentMode_EFT)
     then

          v_sanity_chk_code := g_PrfVldtnCd_InvldProfileMode;

     elsif v_ctf_empty_profile = g_Yes then     -- UTPRODUCT-3154

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Validation PASSED for empty profile'
               );
          end if;

          v_sanity_chk_code := g_PrfVldtnCd_ValidationPassed;

     elsif in_payment_mode_id in (g_PaymentMode_Card, g_PaymentMode_EFT)  then

          if in_placeholder_id is null then

               v_sanity_chk_code := g_PrfVldtnCd_MissingPlchldr;

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Profile Setup Error. No placeholder found for the setup..'
               );

          else

               v_plchldr_object_type := pkg_os_object.fn_object_type_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_id
                                        );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Placeholder Object Type: ' || v_plchldr_object_type
                    );

               end if;

               if v_plchldr_object_type is null
                  or
                  v_plchldr_object_type not in (pkg_db_constant.gObjType_CashTransferProfile, pkg_db_constant.gObjType_FITransaction)
               then

                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Profile Setup Error - Placeholder type not supported. Supported types are CTF, FItransaction'
                    );

                    v_sanity_chk_code := g_PrfVldtnCd_InvldPlchldrType;

               else

                    -- Get the attributes
                    case

                         -- Get the attributes from the placeholder
                         when in_payment_mode_id = g_PaymentMode_Card then

                              if v_plchldr_object_type = pkg_db_constant.gObjType_CashTransferProfile then

                                   /*pkg_os_object_io.sp_object_bv_set
                                   (in_session_id, in_transaction_id, v_placeholder_id, gbv_CTFCardType, null);
                                   */
                                   -- Card Type - Visa/MasterCard/Amex
                                   v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardType);

                                   -- Card number - 16digit
                                   v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber16digit);

                                   -- Card number - 4digit
                                   v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber4digit);

                                   -- Expiry Month
                                   v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpMon);

                                   -- Expiry Year
                                   v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpYear);

                              elsif v_plchldr_object_type = pkg_db_constant.gObjType_FITransaction then

                                   -- Card Type - Visa/MasterCard/Amex
                                   v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardType);

                                   -- Card number - 16digit
                                   v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardNumber);

                                   -- Card number - 16digit
                                   v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardNumber4Digit);

                                   -- Expiry Month
                                   v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardExpiryMonth);

                                   -- Expiry Year
                                   v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardExpiryYear);

                              else

                                   null;

                              end if;

                              if v_session_control.gLogging_Full then

                                   -- OSPRODUCT-2655
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Card Type: ' || v_card_type||
                                        ' Card Number: '   || v_card_number_16digit  ||
                                        ' Card Expiry Month: '|| v_card_expirymonth  ||
                                        ' Card Expiry Year: ' || v_card_expiryyear

                                   );

                              end if;

                              -- Check for null attribute
                              begin

                                   if nvl(v_card_type,0) = 0
                                      or
                                      ( v_card_number_16digit is null and v_card_number_4digit is null )
                                      or
                                      v_card_expirymonth is null
                                      or
                                      v_card_expiryyear is null
                                   then

                                        -- OSPRODUCT-2655
                                        pkg_os_logging.sp_log_error
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Card Details Missing.. Please verify card type, card number, expiry month and expiry year..'

                                        );

                                        if nvl(v_card_type,0) = 0 then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingCardType;

                                        elsif v_card_number_16digit is null then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingCardNum;

                                        elsif v_card_expirymonth is null then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingCardExpMn;

                                        elsif v_card_expiryyear is null then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingCardExpYr;

                                        end if;

                                   end if;

                              end;

                         when in_payment_mode_id = g_PaymentMode_EFT then

                              if v_plchldr_object_type = pkg_db_constant.gObjType_CashTransferProfile then

                                   -- Bank Account Number
                                   v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccNumber);

                                   -- Bank Country
                                   v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankCountry);

                                   if v_eft_bankcountry = 1 then

                                        -- Bank Account Type
                                        v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccType);

                                        -- Bank Routing Number
                                        v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankRoutingNo);

                                   else

                                        -- Bank ID
                                        v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankID);

                                        -- Bank Transit Number
                                        v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTTransitNo);

                                   end if;

                              elsif v_plchldr_object_type = pkg_db_constant.gObjType_FITransaction then

                                   -- Bank Account Number
                                   v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTAccNumberNew);

                                   -- Bank Country
                                   v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankCountry);

                                   if v_eft_bankcountry = 1 then

                                        -- Bank Account Type
                                        v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTAccountType);

                                        -- Bank Routing Number
                                        v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankRoutingNo);

                                   else
                                        -- Bank ID
                                        v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankIDNumber);

                                        -- Bank Transit Number
                                        v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankTransitNumber);

                                   end if;

                              else

                                   null;

                              end if;

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Account Number: ' || v_eft_accountnumber||
                                        ' Account Type: '   || v_eft_accounttype  ||
                                        ' Bank Country:'    || v_eft_bankcountry  ||
                                        ' Bank Routing Number: ' || v_eft_bankroutingnumber ||
                                        ' Bank ID: '             || v_eft_bankid            ||
                                        ' Bank Transit Num: '    || v_eft_banktransitnumber

                                   );

                              end if;

                              -- Check for null attribute
                              begin

                                   if v_eft_accountnumber is null
                                      or
                                      v_eft_bankcountry is null
                                      or
                                      (
                                           v_eft_bankcountry = 1
                                           and
                                           v_eft_bankroutingnumber is null
                                           and
                                           v_eft_accounttype is null
                                      )
                                      or
                                      (
                                           v_eft_bankcountry != 1
                                           and
                                           v_eft_bankid is null
                                           and
                                           v_eft_banktransitnumber is null
                                      )
                                   then

                                        pkg_os_logging.sp_log_error
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..EFT Details Missing.. Please verify account no, account type, account country, routing number, bank id, transit number.. '
                                        );

                                        if v_eft_accountnumber is null then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingEFTAccNum;

                                        elsif v_eft_bankcountry is null then

                                             v_sanity_chk_code := g_PrfVldtnCd_MissingBankCntry;

                                        else

                                             if v_eft_bankcountry = 1 then

                                                  if v_eft_accounttype is null then

                                                       v_sanity_chk_code := g_PrfVldtnCd_MissingAcctType;

                                                  elsif v_eft_bankroutingnumber is null then

                                                       v_sanity_chk_code := g_PrfVldtnCd_MissingRoutingNum;

                                                  end if;

                                             else

                                                  if v_eft_bankid is null then

                                                       v_sanity_chk_code := g_PrfVldtnCd_MissingBankID;

                                                  elsif v_eft_banktransitnumber is null then

                                                       v_sanity_chk_code := g_PrfVldtnCd_MissingTransitNum;

                                                  end if;

                                             end if;

                                        end if;

                                   end if;

                              end;

                         else

                              null;

                    end case;

               end if;

          end if;

     else

          v_sanity_chk_code := g_PrfVldtnCd_ValidationPassed;

     end if;

     return v_sanity_chk_code;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' - Error: ' || sqlerrm (sqlcode)

          );

          raise;

end fn_sanity_check_for_profile;
-- OSPRODUCT-4031
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_setup_new_ctf
--
--  %USAGE
--    Procedure to set up a new CashTransferProfile object for a BA
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id              Session ID
--  %PARAM  in_transaction_id          Transaction ID
--  %PARAM  in_billing_account_id      Billing Account ID
--  %PARAM  in_payment_mode            Payment Mode
--  %PARAM  in_placeholder_id          Placeholder ID - Required for Card/EFT profile setup
--  %PARAM  out_ctf_id                 Profile object
--  %PARAM  in_plchldr_use_tf          Use the placeholder as the valid profile
--                                     Flag to let the proc know that the placeholder that has the new profile details
--                                     can be used as the new valid profile. There is no need to create a new CTF
--                                     If called with 'T' the caller must remove the placeholder references after 
--                                     profile setup call
--  %PARAM  in_allow_duplicate_prf_tf  Ideally before setting up a new CTF existing CTF's are checked 
--                                     to avoid creation of duplicate profile
--                                     To override the behavior call the proc with 'T'
--                                     Ex.. Setting a down payment profile.           
-------------------------------------------------------------------------------------------------------------------------------------------------
-- OSPRODUCT-4031
procedure sp_setup_new_ctf
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_billing_account_id        in             object.object_id%type,
     in_payment_mode              in             object_bv_value.business_variable_value%type,
     in_placeholder_id            in             object.object_id%type,
     out_ctf_id                   out            object.object_id%type,
     in_plchldr_use_tf            in             char default 'F',
     in_allow_duplicate_prf_tf    in             char default 'F' -- pass T if adhoc profile needs to be created without any duplicate check
)
as

     v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name             constant  system_log.program_name%type  := pkg_name||'sp_setup_new_ctf';

     v_plchldr_object_type        object_type.object_type_id%type;

     v_bv_table                   pkg_os_object_io.t_bv_table;

     v_datamart_tf                char(1) := 'T';

     v_card_holder_name           object_bv_value.business_variable_value%type;
     v_card_type                  object_bv_value.business_variable_value%type;
     v_card_security_code         object_bv_value.business_variable_value%type;
     v_card_number_16digit        object_bv_value.business_variable_value%type;
     v_card_number_4digit         object_bv_value.business_variable_value%type;
     v_card_tokennumber           object_bv_value.business_variable_value%type;
     v_card_expirymonth           object_bv_value.business_variable_value%type;
     v_card_expiryyear            object_bv_value.business_variable_value%type;
     v_card_billing_address       object_bv_value.business_variable_value%type;
     v_card_add1                  object_bv_value.business_variable_value%type;
     v_card_add2                  object_bv_value.business_variable_value%type;
     v_card_address_zip           object_bv_value.business_variable_value%type;
     v_card_address_city          object_bv_value.business_variable_value%type;
     v_card_address_state         object_bv_value.business_variable_value%type;
     v_card_address_country       object_bv_value.business_variable_value%type;

     v_eft_payer_type             object_bv_value.business_variable_value%type;
     v_eft_legalentityttype       object_bv_value.business_variable_value%type;
     v_eft_legalentityname        object_bv_value.business_variable_value%type;
     v_eft_acchldrfirstname       object_bv_value.business_variable_value%type;
     v_eft_acchldrmiddlename      object_bv_value.business_variable_value%type;
     v_eft_acchldrlastname        object_bv_value.business_variable_value%type;
     v_eft_bankid                 object_bv_value.business_variable_value%type;
     v_eft_banktransitnumber      object_bv_value.business_variable_value%type;
     v_eft_bankroutingnumber      object_bv_value.business_variable_value%type;
     v_eft_accountnumber          object_bv_value.business_variable_value%type;
     v_eft_accounttype            object_bv_value.business_variable_value%type;
     v_eft_bankname               object_bv_value.business_variable_value%type;
     v_eft_bankadd1               object_bv_value.business_variable_value%type;
     v_eft_bankadd2               object_bv_value.business_variable_value%type;
     v_eft_bankzip                object_bv_value.business_variable_value%type;
     v_eft_bankpostalcode         object_bv_value.business_variable_value%type;
     v_eft_bankphone              object_bv_value.business_variable_value%type;
     v_eft_bankcurrency           object_bv_value.business_variable_value%type;
     v_eft_bankcity               object_bv_value.business_variable_value%type;
     v_eft_bankcountry            object_bv_value.business_variable_value%type;
     v_eft_bankprovince           object_bv_value.business_variable_value%type;
     v_eft_tokennumber            object_bv_value.business_variable_value%type;

     v_payment_mode               char(1);
     -- OSPRODUCT-30602 Renamed
     v_do_not_save_tf             char(1);
     v_existing_ctf_id            object.object_id%type;
     v_allow_prf_validation_tf    char(1) := pkg_os_system_attribute.fn_get_system_attribute_value
                                             (
                                                  g_profile_validation_attr_name
                                             );

     v_profile_sanity_chk_code    object_bv_value.business_variable_value%type;

     v_ctf_empty_profile          object_bv_value.business_variable_value%type; -- UTPRODUCT-3154

begin

     v_ctf_empty_profile := pkg_os_object_io.fn_object_bv_get  -- UTPRODUCT-3154
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_placeholder_id,
                                 gbv_CTF_EmptyProfile
                            );

     --OSPRODUCT-2655
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Starting Profile setup.. ' ||
               '..Billing Account ID: '      || in_billing_account_id ||
               '..Mode: '                    || in_payment_mode       ||
               '..Placeholder: '             || in_placeholder_id     ||
               '..Use Placeholder?: '        || in_plchldr_use_tf     ||
               '..Skip Duplicate validation: ' || in_allow_duplicate_prf_tf ||
               ', EmptyProfile flag (Yes(1)/No(2,NULL))='|| v_ctf_empty_profile
          );

     end if;

     -- Get the profile error code
     v_profile_sanity_chk_code := fn_sanity_check_for_profile
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_payment_mode,
                                       in_placeholder_id
                                  );

     if v_profile_sanity_chk_code <> g_PrfVldtnCd_ValidationPassed then

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Sanity Check failed.. Error code: ' || v_profile_sanity_chk_code ||
                    '.. Allow Profile Validation: ' ||  v_allow_prf_validation_tf
               );

          end if;

          if nvl(v_allow_prf_validation_tf,'F') = 'F' then

               if v_profile_sanity_chk_code in (g_PrfVldtnCd_MissingPlchldr, g_PrfVldtnCd_InvldProfileMode, g_PrfVldtnCd_InvldPlchldrType) then

                    v_payment_mode := g_PaymentMode_Cheque;

               else

                    v_payment_mode := in_payment_mode;

               end if;

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Profile validation failed with error code: ' || v_profile_sanity_chk_code ||
                    '..Proceeding with profile creation as profile validation attribute is set to F..'
               );

          else

               raise PROFILE_SETUP_ERROR;

          end if;

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Sanity Check passed..' || v_profile_sanity_chk_code
               );

          end if;

          v_payment_mode := in_payment_mode;

     end if;

     if v_payment_mode = g_PaymentMode_Cheque then

          out_ctf_id := pkg_os_object_io.fn_object_bv_get
                        (
                             in_session_id,
                             in_transaction_id,
                             in_billing_account_id,
                             gbv_BAChequeProfile
                        );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..BA Cheque Profile: ' || out_ctf_id
               );

          end if;

          if out_ctf_id is null
             or
             (
                  out_ctf_id is not null
                  and
                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, out_ctf_id, 210153 ) != g_ProfileState_Active
             )
             or
             v_profile_sanity_chk_code <> g_PrfVldtnCd_ValidationPassed
          then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Creating new cheque profile..'
                    );

               end if;

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_constant.gObjType_CashTransferProfile,
                    in_billing_account_id,
                    out_ctf_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    out_ctf_id,
                    gbv_CTFPaymentMode,
                    v_payment_mode
               );

               -- Will be set to recurring always
               -- But can be set as adhoc if not added for future use through a transaction
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    out_ctf_id,
                    gbv_CTFRecurranceMode,
                    g_RecurrencyMode_Recurring
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    out_ctf_id,
                    gbv_CTFStartDate,
                    to_char(sysdate, pkg_os_constant.DragonDateFormatDefault)
               );

                  --2828
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    out_ctf_id,
                    gbv_ProfileErrorCode,
                    v_profile_sanity_chk_code
               );
               if v_profile_sanity_chk_code = g_PrfVldtnCd_ValidationPassed then

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         gbv_BAChequeProfile,
                         out_ctf_id
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Resetting BA Cheque Profile..'
                         );

                    end if;

               end if;

               -- 2828
               pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, out_ctf_id, v_datamart_tf);
          end if;

     elsif v_payment_mode in ( g_PaymentMode_Card, g_PaymentMode_EFT ) then

          if v_profile_sanity_chk_code = g_PrfVldtnCd_ValidationPassed then

               v_plchldr_object_type := pkg_os_object.fn_object_type_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_id
                                        );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Placeholder Object Type: ' || v_plchldr_object_type
                    );

               end if;

               case

                    -- Get the attributes from the placeholder
                    when v_payment_mode = g_PaymentMode_Card then

                         case

                              when v_plchldr_object_type = pkg_db_constant.gObjType_CashTransferProfile then

                                   -- PRODUCT-3043
                                   -- -- OSPRODUCT-30602
                                   v_do_not_save_tf := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                           in_Session_id,
                                                           in_transaction_id,
                                                           in_placeholder_id,
                                                           gbv_CTFAdhocRecurring
                                                       );

                                   if in_plchldr_use_tf = 'F' then

                                        -- Card Type - Visa/MasterCard/Amex
                                        v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardType);

                                        -- Card number - 16digit
                                        v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber16digit);

                                        -- Card number - 4digit
                                        v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber4digit);

                                        -- Expiry Month
                                        v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpMon);

                                        -- Expiry Year
                                        v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpYear);

                                        -- Card Holder Name
                                        v_card_holder_name            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardHolderName);

                                        -- Card Token Number
                                        v_card_tokennumber            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, 32834040);

                                        -- Credit Card Billing Address
                                        v_card_billing_address        := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardBillingAdd);

                                        -- Credit Card Address1
                                        v_card_add1                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardadd1);

                                        -- Credit Card Address2
                                        v_card_add2                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardadd2);

                                        -- Address ZIP Code
                                        v_card_address_zip            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardZip);

                                        -- Address City
                                        v_card_address_city           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardCity);

                                        -- Address State
                                        v_card_address_state          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardState);

                                        -- Address Country
                                        v_card_address_country        := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardCountry);

                                   end if;

                              when v_plchldr_object_type = pkg_db_constant.gObjType_FITransaction then

                                   -- Card Holder Name
                                   v_card_holder_name            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardHolderName);

                                   -- Card Type - Visa/MasterCard/Amex
                                   v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardType);

                                   -- Card number - 16digit
                                   v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardNumber);

                                   -- Card number - 16digit
                                   v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardNumber4Digit);

                                   -- Card Token Number
                                   v_card_tokennumber            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardTokenNumber);

                                   -- Expiry Month
                                   v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardExpiryMonth);

                                   -- Expiry Year
                                   v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardExpiryYear);

                                   -- Card Security Code
                                   v_card_security_code          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_CardSecurityCode);

                              else
                                   null;

                         end case;
                         
                         -- OSPRODUCT-30602
                         -- Duplicate profile check is required in following cases
                         -- 1. When adding a recurring profile, i.e, do not save for future is un checked                         
                         -- 2. The flag is checked but we still want to make sure we are not creating a duplicate 
                         -- Ex for case in_allow_duplicate_prf_tf = 'F' - adding a profile from anonymouse portal
                         -- Ex for case in_allow_duplicate_prf_tf = 'T' - adding a down payment profile in trx processing workflow, as we deactivate it instantly we create it anyway 
                         -- (without duplicate check)
                         if v_do_not_save_tf is null
                            or
                            (
                                 -- OSPRODUCT-30602
                                 v_do_not_save_tf = g_Yes
                                 and
                                 in_allow_duplicate_prf_tf = 'F'
                            )
                         then

                              declare

                                   v_override_duplicate_prf char;

                              begin

                                   -- Get the duplicate profile
                                   pkg_cs_db_profiles.sp_get_duplicate_profile
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        in_placeholder_id,
                                        v_payment_mode,
                                        v_existing_ctf_id,
                                        v_override_duplicate_prf
                                   );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Duplicate Profile: ' || v_existing_ctf_id ||
                                             '..Override Duplicate Profile?: ' || v_override_duplicate_prf
                                        );

                                   end if;

                                   if nvl(v_override_duplicate_prf,'F') = 'F' then

                                        if in_plchldr_use_tf = 'T' then

                                             -- Card Token Number
                                             -- v_card_tokennumber := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardTokenNumber);

                                             if v_card_tokennumber is null then

                                                  -- Card Type - Visa/MasterCard/Amex
                                                  v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardType);

                                                  -- Card number - 16digit
                                                  v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber16digit);

                                                  -- Card number - 4digit
                                                  v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardNumber4digit);

                                                  -- Expiry Month
                                                  v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpMon);

                                                  -- Expiry Year
                                                  v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFCardExpYear);

                                             end if;

                                        end if;

                                        if v_session_control.gLogging_Full then

                                             -- OSPRODUCT-2655
                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  ' Get the existing profile..' ||
                                                  ' Card Type: '                || v_card_type||
                                                  ' Card Number: '              || v_card_number_16digit  ||
                                                  ' Card Expiry Month: '        || v_card_expirymonth  ||
                                                  ' Card Expiry Year: '         || v_card_expiryyear   ||
                                                  ' Card Token Number: '        || v_card_tokennumber

                                             );

                                        end if;

                                        if v_card_tokennumber is not null then

                                             -- Get the existing profile
                                             select
                                                  max(ctf.ctf_id)
                                             into
                                                  v_existing_ctf_id
                                             from
                                                  dragon_cashtransferprofile ctf
                                             where
                                                  ctf.billing_account_id = in_billing_account_id
                                             and
                                                  ctf.profile_mode_id = v_payment_mode
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, 210153) = g_ProfileState_Active -- replace with constant declaration
                                             and
                                                  ctf.profile_recur_mode_id = g_RecurrencyMode_Recurring
                                             and
                                                  ctf.card_token_number = v_card_tokennumber;  -- OSPRODUCT-30602                                            

                                        else
                                             -- Get the existing profile
                                             select
                                                  max(ctf.ctf_id)
                                             into
                                                  v_existing_ctf_id
                                             from
                                                  dragon_cashtransferprofile ctf
                                             where
                                                  ctf.billing_account_id = in_billing_account_id
                                             and
                                                  ctf.profile_mode_id = v_payment_mode
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, 210153) = g_ProfileState_Active
                                             and
                                                  ctf.card_type_id = v_card_type
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFCardNumber16digit) = v_card_number_16digit
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFCardExpMon) = v_card_expirymonth
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFCardExpYear) = v_card_expiryyear
                                             and
                                                  ctf.profile_recur_mode_id = g_RecurrencyMode_Recurring --  OSPRODUCT-30602
                                                  ;

                                        end if;

                                        if v_session_control.gLogging_Full then

                                             -- OSPRODUCT-2655
                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  ' Existing Profile Found: ' || v_existing_ctf_id
                                             );

                                        end if;

                                   end if;

                              exception

                                   when others then

                                        v_existing_ctf_id := null;

                              end;

                         else

                              if v_session_control.gLogging_Full then

                                   -- OSPRODUCT-2655
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Duplicate profile check skipped..'
                                   );

                              end if;

                         end if;

                    when v_payment_mode = g_PaymentMode_EFT then

                         case

                              when v_plchldr_object_type = pkg_db_constant.gObjType_CashTransferProfile then

                                   -- PRODUCT-3043
                                   -- OSPRODUCT-30602
                                   v_do_not_save_tf := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_Session_id,
                                                           in_transaction_id,
                                                           in_placeholder_id,
                                                           gbv_CTFAdhocRecurring
                                                      );

                                   if in_plchldr_use_tf = 'F' then

                                        -- Payer Type
                                        v_eft_payer_type := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTPayerType);

                                        if v_eft_payer_type = g_PayerType_Individual then

                                             -- Account Holder First Name
                                             v_eft_acchldrfirstname   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTAccHolderFirstName);

                                             -- Account Holder Middle Name
                                             v_eft_acchldrmiddlename  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTAccHolderMiddleName);

                                             -- Account Holder Last Name
                                             v_eft_acchldrlastname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTAccHolderLastName);

                                        elsif v_eft_payer_type = g_PayerType_Business then

                                             -- Entity Type
                                             v_eft_legalentityttype       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTLegalEntityType);

                                             -- Entity Name
                                             v_eft_legalentityname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTLegalEntityName);

                                        end if;

                                        -- Bank Country
                                        v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankCountry);

                                        if v_eft_bankcountry = 1 then

                                             -- Bank Routing Number
                                             v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankRoutingNo);

                                             -- Bank Account Type
                                             v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccType);

                                        else

                                             -- Bank ID
                                             v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankID);

                                             -- Bank Transit Number
                                             v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTTransitNo);

                                        end if;

                                        -- Bank Account Number
                                        v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccNumber);

                                        -- Bank name
                                        v_eft_bankname                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankName);

                                        -- Bank Address 1
                                        v_eft_bankadd1                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAdd1);

                                        -- Bank Address 2
                                        v_eft_bankadd2                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAdd2);

                                        -- Bank Address Zip
                                        v_eft_bankzip                 := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankZip);

                                        -- Bank Address Postal Code
                                        v_eft_bankpostalcode          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankPostalCode);

                                        -- Bank Phone
                                        v_eft_bankphone               := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankPhone);

                                        -- Bank Currency
                                        v_eft_bankcurrency            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTCurrency);

                                        -- Bank City
                                        v_eft_bankcity                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankCity);

                                        -- Bank Province
                                        v_eft_bankprovince            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankProvince);

                                        -- Card Token Number
                                        v_eft_tokennumber            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTTokenNumber);

                                   end if;

                              when v_plchldr_object_type = pkg_db_constant.gObjType_FITransaction then

                                   -- Payer Type
                                   v_eft_payer_type := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTPayerType);

                                   if v_eft_payer_type = g_PayerType_Individual then

                                        -- Account Holder First Name
                                        v_eft_acchldrfirstname   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTPayerFirstName);

                                        -- Account Holder Middle Name
                                        v_eft_acchldrmiddlename  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTPayerMiddleName);

                                        -- Account Holder Last Name
                                        v_eft_acchldrlastname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTPayerLastName);

                                   elsif v_eft_payer_type = g_PayerType_Business then

                                        -- Entity Type
                                        v_eft_legalentityttype       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTEntityType);

                                        -- Entity Name
                                        v_eft_legalentityname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTEntityName);

                                   end if;

                                   -- Bank Country
                                   v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankCountry);

                                   if v_eft_bankcountry = 1 then

                                        -- Bank Account Type
                                        v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTAccountType);

                                        -- Bank Routing Number
                                        v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankRoutingNo);

                                   else

                                        -- Bank ID
                                        v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankIDNumber);

                                        -- Bank Transit Number
                                        v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankTransitNumber);

                                   end if;

                                   -- Bank Account Number
                                   v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTAccNumberNew);

                                   -- Bank name
                                   v_eft_bankname                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankName);

                                   -- Bank Address 1
                                   v_eft_bankadd1                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankAddLine1);

                                   -- Bank Address 2
                                   v_eft_bankadd2                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankAddLine2);

                                   -- Bank Address Zip
                                   v_eft_bankzip                 := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankZIPCode);

                                   -- Bank Address Postal Code
                                   v_eft_bankpostalcode          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankPostalCode);

                                   -- Bank Phone
                                   v_eft_bankphone               := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankPhoneNo);

                                   -- Bank Currency
                                   v_eft_bankcurrency            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTCurrency);

                                   -- Bank City
                                   v_eft_bankcity                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankCity);

                                   -- Bank Province
                                   v_eft_bankprovince            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_FITrx_EFTBankProvince);

                              else
                                   null;

                         end case;

                         -- OSPRODUCT-30602
                         -- Duplicate profile check is required in following cases
                         -- 1. When adding a recurring profile, i.e, do not save for future is un checked                         
                         -- 2. The flag is checked but we still want to make sure we are not creating a duplicate 
                         -- Ex for case in_allow_duplicate_prf_tf = 'F' - adding a profile from anonymouse portal
                         -- Ex for case in_allow_duplicate_prf_tf = 'T' - adding a down payment profile in trx processing workflow, as we deactivate it instantly we create it anyway 
                         -- (Without duplicate check)                                             
                         if v_do_not_save_tf is null
                            or
                            (
                                 v_do_not_save_tf = g_Yes
                                 and
                                 in_allow_duplicate_prf_tf = 'F'
                            )
                         then

                              declare

                                   v_override_duplicate_prf char;

                              begin

                                   -- Get the duplicate profile
                                   pkg_cs_db_profiles.sp_get_duplicate_profile
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        in_placeholder_id,
                                        v_payment_mode,
                                        v_existing_ctf_id,
                                        v_override_duplicate_prf
                                   );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Duplicate Profile: ' || v_existing_ctf_id ||
                                             '..Override Duplicate Profile?: ' || v_override_duplicate_prf
                                        );

                                   end if;

                                   if nvl(v_override_duplicate_prf,'F') = 'F' then

                                        if in_plchldr_use_tf = 'T' then

                                             -- EFT Token Number
                                             v_eft_tokennumber := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTTokenNumber);

                                             if v_eft_tokennumber is null then

                                                  -- Bank Account Number
                                                  v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccNumber);

                                                  -- Bank Account Type
                                                  v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccType);

                                                  -- Bank Country
                                                  v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankCountry);

                                                  if v_eft_bankcountry = 1 then

                                                       -- Bank Routing Number
                                                       v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankRoutingNo);

                                                       -- Bank Account Type
                                                       v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankAccType);

                                                  else

                                                       -- Bank ID
                                                       v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTBankID);

                                                       -- Bank Transit Number
                                                       v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_placeholder_id, gbv_CTFEFTTransitNo);

                                                  end if;

                                             end if;

                                        end if;

                                        if v_session_control.gLogging_Full then

                                             -- OSPRODUCT-2655
                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  ' Get the existing profile..' ||
                                                  ' Account Number: '           || v_eft_accountnumber||
                                                  ' Account Type: '             || v_eft_accounttype  ||
                                                  ' Account Country: '          || v_eft_bankcountry  ||
                                                  ' Routing Number: '           || v_eft_bankroutingnumber ||
                                                  ' Account Type: '             || v_eft_accounttype       ||
                                                  ' Bank ID: '                  || v_eft_bankid            ||
                                                  ' Bank Transit Number: '      || v_eft_banktransitnumber ||
                                                  ' EFT Token Number: '         || v_eft_tokennumber

                                             );

                                        end if;

                                        if v_eft_tokennumber is not null then

                                             select
                                                  max(ctf.ctf_id)
                                             into
                                                  v_existing_ctf_id
                                             from
                                                  dragon_cashtransferprofile ctf
                                             where
                                                  ctf.billing_account_id = in_billing_account_id
                                             and
                                                  ctf.profile_mode_id = v_payment_mode  --OSPRODUCT-2557
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, 210153) = g_ProfileState_Active
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFEFTTokenNumber) = v_eft_tokennumber
                                             and
                                                  ctf.profile_recur_mode_id = g_RecurrencyMode_Recurring; --  OSPRODUCT-30602
                                                  
                                        else

                                             select
                                                  max(ctf.ctf_id)
                                             into
                                                  v_existing_ctf_id
                                             from
                                                  dragon_cashtransferprofile ctf
                                             where
                                                  ctf.billing_account_id = in_billing_account_id
                                             and
                                                  ctf.profile_mode_id = v_payment_mode  --OSPRODUCT-2557
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, 210153) = g_ProfileState_Active 
                                             and
                                                  nvl(ctf.eft_account_type_id,0) = v_eft_accounttype
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFEFTBankCountry) = v_eft_bankcountry
                                             and
                                                  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ctf.ctf_id, gbv_CTFEFTBankAccNumber) = v_eft_accountnumber --OSPRODUCT-2557
                                             and
                                                  (

                                                       (
                                                            v_eft_bankcountry = 1
                                                            and
                                                            ctf.eft_bank_routing_number = v_eft_bankroutingnumber
                                                            and
                                                            ctf.eft_account_type_id = v_eft_accounttype
                                                       )
                                                       or
                                                       (
                                                            v_eft_bankcountry != 1
                                                            and
                                                            ctf.eft_bank_id = v_eft_bankid
                                                            and
                                                            ctf.eft_bank_transit_number = v_eft_banktransitnumber
                                                       )
                                                  )
                                             and
                                                  ctf.profile_recur_mode_id = g_RecurrencyMode_Recurring;  -- OSPRODUCT-30602

                                        end if;


                                        if v_session_control.gLogging_Full then

                                             -- OSPRODUCT-2655
                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  ' Existing Profile Found: ' || v_existing_ctf_id
                                             );

                                        end if;

                                   end if;

                              exception

                                   when others then

                                        v_existing_ctf_id := null;

                              end;

                         else

                              if v_session_control.gLogging_Full then

                                   -- OSPRODUCT-2655
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Duplicate profile check skipped..'
                                   );

                              end if;

                         end if;

                    else

                         null;

               end case;

          end if;


            -- 2828
          if v_existing_ctf_id is not null then

               out_ctf_id := v_existing_ctf_id;

               --
               -- Get recurrency mode
               --
               -- PRODUCT-3043
               -- OSPRODUCT-30602 Not required anymore
               /*declare

               v_ctf_recur_mode_id number;

               begin

                    v_ctf_recur_mode_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_Session_id,
                                                in_transaction_id,
                                                out_ctf_id,
                                                gbv_CTFRecurranceMode
                                           );

                    if v_ctf_recur_mode_id = g_RecurrencyMode_Adhoc
                       and
                       v_do_not_save_tf is null
                    then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_Session_id,
                              in_transaction_id,
                              out_ctf_id,
                              gbv_CTFRecurranceMode,
                              g_RecurrencyMode_Recurring
                         );

                    end if;

               end;*/
               
               if in_plchldr_use_tf = 'T' then

                    -- Delete the placeholder as the existing CTF is used
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         in_placeholder_id,
                         null
                    );

                    if v_session_control.gLogging_Full then

                         -- OSPRODUCT-2655
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' As existing profile found deleting the placeholder..'
                         );

                    end if;

               end if;

               if v_session_control.gLogging_Full then

                    -- OSPRODUCT-2655
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' Profile Returned: ' || out_ctf_id
                    );

               end if;

               return;

          elsif v_plchldr_object_type = pkg_db_constant.gObjType_CashTransferProfile
                and
                v_payment_mode in (g_PaymentMode_EFT, g_PaymentMode_Card)
                and
                in_plchldr_use_tf = 'T'
          then

               out_ctf_id := in_placeholder_id;

               v_bv_table.delete;

               -- Date on which the profile got added to the system
               v_bv_table(gbv_CTFStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

               -- Will always be set as null
               v_bv_table(gbv_CTFStopDate).business_variable_value := null;

               -- Set the validation code
               v_bv_table(gbv_ProfileErrorCode).business_variable_value := v_profile_sanity_chk_code;

               -- UTPRODUCT-3154
               v_bv_table(gbv_CTF_EmptyProfile).business_variable_value   := v_ctf_empty_profile;

               if v_ctf_empty_profile = g_Yes
                  and
                  pkg_os_object_io.fn_object_bv_get
                  (
                       in_session_id,
                       in_transaction_id,
                       in_placeholder_id,
                       gbv_CTFPaymentMode
                  ) is null
               then
                    -- Profile Mode - Card/EFT/Cheque
                    -- Note: the gbv_CTFPaymentMode is not set for Prospect partner. In other cases the gbv_CTFPaymentMode should be set, so we should not overwrite it.
                    --
                    v_bv_table(gbv_CTFPaymentMode).business_variable_value := v_payment_mode;
               end if;
               -- / UTPRODUCT-3154

               -- Will be set to recurring always
               -- But can be set as adhoc if not added for future use through a transaction
               -- Enhanced PRODUCT-3043
               if v_do_not_save_tf = g_Yes then
                    v_bv_table(gbv_CTFRecurranceMode).business_variable_value := g_RecurrencyMode_Adhoc;
               else
                    v_bv_table(gbv_CTFRecurranceMode).business_variable_value := g_RecurrencyMode_Recurring;
               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    out_ctf_id,
                    v_bv_table
               );

               if v_session_control.gLogging_Full then

                    -- OSPRODUCT-2655
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' Placeholder profile used.. ' || out_ctf_id
                    );

               end if;

          else

               -- Set up attributes
               begin

                    v_bv_table.delete;

                    -- Date on which the profile got added to the system
                    v_bv_table(gbv_CTFStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

                    -- Will always be set as null
                    v_bv_table(gbv_CTFStopDate).business_variable_value := null;

                    -- Will be set to recurring always
                    -- But can be set as adhoc if not added for future use through a transaction
                    -- Enhanced PRODUCT-3043
                    if v_do_not_save_tf = g_Yes then
                    v_bv_table(gbv_CTFRecurranceMode).business_variable_value := g_RecurrencyMode_Adhoc;
                    else
                         v_bv_table(gbv_CTFRecurranceMode).business_variable_value := g_RecurrencyMode_Recurring;
                    end if;

                    -- Profile Mode - Card/EFT/Cheque
                    v_bv_table(gbv_CTFPaymentMode).business_variable_value := v_payment_mode;

                    -- Set the validation code
                    v_bv_table(gbv_ProfileErrorCode).business_variable_value := v_profile_sanity_chk_code;

                    if v_ctf_empty_profile = g_Yes
                    then
                         -- This is an empty profile. Do not set any details. Just set up a flag that indicates this  CC or ACH/EFT profile is an empty one
                         --
                         v_bv_table(gbv_CTF_EmptyProfile).business_variable_value   := g_Yes;     -- UTPRODUCT-3154

                    elsif v_payment_mode = g_PaymentMode_Card
                    then

                         -- Card Holder name
                         v_bv_table(gbv_CTFCardHolderName).business_variable_value     := v_card_holder_name;

                         -- Card Details
                         v_bv_table(gbv_CTFCardType).business_variable_value              := v_card_type;
                         v_bv_table(gbv_CTFCardNumber16digit).business_variable_value     := v_card_number_16digit;
                         v_bv_table(gbv_CTFCardNumber4digit).business_variable_value      := v_card_number_4digit;
                         v_bv_table(gbv_CTFCardTokenNumber).business_variable_value       := v_card_tokennumber;
                         v_bv_table(gbv_CTFCardExpMon).business_variable_value            := v_card_expirymonth;
                         v_bv_table(gbv_CTFCardExpYear).business_variable_value           := v_card_expiryyear;
                         v_bv_table(gbv_CTFCardSecurityCode).business_variable_value      := v_card_security_code;

                         -- Card Address
                         v_bv_table(gbv_CTFCardBillingAdd).business_variable_value        := v_card_billing_address;
                         v_bv_table(gbv_CTFCardadd1).business_variable_value              := v_card_add1;
                         v_bv_table(gbv_CTFCardadd2).business_variable_value              := v_card_add2;
                         v_bv_table(gbv_CTFCardZip).business_variable_value               := v_card_address_zip;
                         v_bv_table(gbv_CTFCardCity).business_variable_value              := v_card_address_city;
                         v_bv_table(gbv_CTFCardState).business_variable_value             := v_card_address_state;
                         v_bv_table(gbv_CTFCardCountry).business_variable_value           := v_card_address_country;

                    elsif v_payment_mode = g_PaymentMode_EFT
                    then

                         -- Payer Type
                         v_bv_table(gbv_CTFEFTPayerType).business_variable_value                 := v_eft_payer_type;
                         v_bv_table(gbv_CTFEFTTokenNumber).business_variable_value              := v_eft_tokennumber;

                         -- Payer Name
                         if v_eft_payer_type = g_PayerType_Individual then

                              v_bv_table(gbv_CTFEFTAccHolderFirstName).business_variable_value   := v_eft_acchldrfirstname;
                              v_bv_table(gbv_CTFEFTAccHolderMiddleName).business_variable_value  := v_eft_acchldrmiddlename;
                              v_bv_table(gbv_CTFEFTAccHolderLastName).business_variable_value    := v_eft_acchldrlastname;

                         elsif v_eft_payer_type = g_PayerType_Business then

                              v_bv_table(gbv_CTFEFTLegalEntityType).business_variable_value      := v_eft_legalentityttype;
                              v_bv_table(gbv_CTFEFTLegalEntityName).business_variable_value      := v_eft_legalentityname;

                         end if;

                         -- Account Number and account type
                         v_bv_table(gbv_CTFEFTBankAccNumber).business_variable_value             := v_eft_accountnumber;
                         v_bv_table(gbv_CTFEFTBankAccType).business_variable_value               := v_eft_accounttype;

                         -- Bank Detail
                         v_bv_table(gbv_CTFEFTBankID).business_variable_value                    := v_eft_bankid;
                         v_bv_table(gbv_CTFEFTTransitNo).business_variable_value                 := v_eft_banktransitnumber;
                         v_bv_table(gbv_CTFEFTBankRoutingNo).business_variable_value             := v_eft_bankroutingnumber;
                         v_bv_table(gbv_CTFEFTBankName).business_variable_value                  := v_eft_bankname;

                         -- Bank address
                         v_bv_table(gbv_CTFEFTBankAdd1).business_variable_value                  := v_eft_bankadd1;
                         v_bv_table(gbv_CTFEFTBankAdd2).business_variable_value                  := v_eft_bankadd2;
                         v_bv_table(gbv_CTFEFTBankZip).business_variable_value                   := v_eft_bankzip;
                         v_bv_table(gbv_CTFEFTBankPostalCode).business_variable_value            := v_eft_bankpostalcode;
                         v_bv_table(gbv_CTFEFTBankPhone).business_variable_value                 := v_eft_bankphone;
                         v_bv_table(gbv_CTFEFTCurrency).business_variable_value                  := v_eft_bankcurrency;
                         v_bv_table(gbv_CTFEFTBankCity).business_variable_value                  := v_eft_bankcity;
                         v_bv_table(gbv_CTFEFTBankCountry).business_variable_value               := v_eft_bankcountry;
                         v_bv_table(gbv_CTFEFTBankProvince).business_variable_value              := v_eft_bankprovince;

                    end if;

                    pkg_os_object.sp_object_create
                    (
                       in_session_id,
                       in_transaction_id,
                       pkg_db_constant.gObjType_CashTransferProfile,
                       in_billing_account_id,
                       out_ctf_id
                    );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         out_ctf_id,
                         v_bv_table
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' New profile created and setup: ' || out_ctf_id
                         );

                    end if;

               end;

          end if;

     end if;

     if v_profile_sanity_chk_code = g_PrfVldtnCd_ValidationPassed then

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               out_ctf_id,
               210153,
               g_ProfileState_Active --OSPRODUCT-2655
          );

          if v_session_control.gLogging_Full then

               -- OSPRODUCT-2655
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' State Set: ' || out_ctf_id
               );

          end if;

     end if;

     -- OSPRODUCT-5978
     pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, out_ctf_id, v_datamart_tf);
     -- 2828

     -- Datamart Update
     /*begin

          delete from DRAGON_CASHTRANSFERPROFILE where CTF_ID = out_ctf_id;

          insert into
               DRAGON_CASHTRANSFERPROFILE
               (
                    CTF_ID,
                    BILLING_ACCOUNT_ID,
                    PROFILE_MODE_ID,
                    PROFILE_MODE,
                    PROFILE_RECUR_MODE_ID,
                    PROFILE_RECUR_MODE,
                    CARD_HOLDER_NAME,
                    CARD_TYPE_ID,
                    CARD_TYPE,
                    CARD_TOKEN_NUMBER,
                    CARD_BILLING_ADDRESS_ID,
                    EFT_PAYER_TYPE_ID,
                    EFT_PAYER_TYPE,
                    EFT_PAYER_ENTITY_TYPE_ID,
                    EFT_PAYER_ENTITY_TYPE,
                    EFT_PAYER_ENTITY_NAME,
                    EFT_PAYER_FIRST_NAME,
                    EFT_PAYER_MIDDLE_NAME,
                    EFT_PAYER_LAST_NAME,
                    EFT_ACCOUNT_NUMBER,
                    EFT_ACCOUNT_TYPE_ID,
                    EFT_ACCOUNT_TYPE,
                    EFT_BANK_ID,
                    EFT_BANK_TRANSIT_NUMBER,
                    EFT_BANK_ROUTING_NUMBER,
                    EFT_BANK_NAME,
                    PROFILE_START_DATE,
                    STATE
               )
          values
               (
                    out_ctf_id,
                    in_billing_account_id,
                    v_payment_mode,
                    pkg_os_lookup.fn_lookup_list_text_get(5390346,v_payment_mode),
                    g_RecurrencyMode_Recurring,
                    pkg_os_lookup.fn_lookup_list_text_get(5400040,g_RecurrencyMode_Recurring),
                    v_card_holder_name,
                    v_card_type,
                    pkg_os_lookup.fn_lookup_list_text_get(110,v_card_type),
                    v_card_tokennumber,
                    v_card_billing_address,
                    v_eft_payer_type,
                    pkg_os_lookup.fn_lookup_list_text_get(5427446,v_eft_payer_type),
                    v_eft_legalentityttype,
                    pkg_os_lookup.fn_lookup_list_text_get(5427546,v_eft_legalentityttype),
                    v_eft_legalentityname,
                    v_eft_acchldrfirstname,
                    v_eft_acchldrmiddlename,
                    v_eft_acchldrlastname,
                    null,
                    v_eft_accounttype,
                    pkg_os_lookup.fn_lookup_list_text_get(5321105,v_eft_accounttype),
                    v_eft_bankid,
                    v_eft_banktransitnumber,
                    v_eft_bankroutingnumber,
                    v_eft_bankname,
                    to_char(sysdate, pkg_os_constant.DragonDateFormatDefault),
                    g_ProfileState_Active
               );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' Updated the datamart table..'
               );

          end if;

     exception

          when others then
               pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, out_ctf_id, v_datamart_tf);

     end;*/


exception

     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Profile Setup Failed - Billing Account ID: ' || in_billing_account_id ||
               ' - Mode: '           || v_payment_mode ||
               ' - Placeholder: '  || in_placeholder_id ||
               ' - Error: '        || sqlerrm (sqlcode)

          );

          raise;

end sp_setup_new_ctf;
-- OSPRODUCT-4031

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_profile_placeholder
--
--  %USAGE
--    Procedure to set up Profile Placeholder
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id              Session ID
--  %PARAM  in_transaction_id          Transaction ID
--  %PARAM  in_action_object_id        action object id
--  %PARAM  io_object_cache            Object cache
--  %PARAM  io_action_outcome_id       Outcome ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_profile_placeholder
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_action_object_id          in             object.object_id%type,
     io_object_cache              in out nocopy  pkg_os_object_cache.t_object_cache,
     io_action_outcome_id         in out nocopy  outcome.outcome_id%type,
     in_down_payment_prf_tf       in             char default 'F'
)
as
     v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name             constant  system_log.program_name%type  := pkg_name||'sp_create_profile_placeholder';
     v_action_object_type_id      object_type.object_type_id%type;

     v_payer_entity_id            object.object_id%type;
     v_billing_account_id         object.object_id%type;
     --UTPRODUCT-3203
     v_preferred_address          object.object_id%type;
     v_entity_id                  object.object_id%type;
     v_entity_type_id             object_bv_value.business_variable_value%type;
     v_ultimate_customer_id       object.object_id%type;
     v_primary_entity_id          object.object_id%type;
     v_ptp_trx_id                 object.object_id%type;

     v_card_placeholder_id        object.object_id%type;
     v_eft_placeholder_id         object.object_id%type;
     v_cheque_placeholder_id      object.object_id%type;
     v_dwnpmt_card_placeholder_id           object.object_id%type;
     v_dwnpmt_eft_placeholder_id            object.object_id%type;
     v_dwnpmt_cheque_placeholder_id         object.object_id%type;
     v_disb_usage_placeholder_id            object.object_id%type;

     v_found_in_cache_tf                    char(1);
     v_clean_plchldr_tf                     char(1);
     v_batch_type_id                        number; -- OSPRODUCT-2439

     v_bv_table                             pkg_os_object_io.t_bv_table;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Action Object ID: ' || in_action_object_id
          );

     end if;

     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Action Object Type ID: ' || v_action_object_type_id

          );

     end if;

     -- Get the Billing Account ID
     case

          when v_action_object_type_id = pkg_os_constant.gObjType_Customer then

               -- Customer ID
               v_ultimate_customer_id := in_action_object_id;

               -- Primary Entity ID
               v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ultimate_customer_id,
                                          pkg_db_constant.gbv_CustRefPrimaryEntity
                                     );

               -- Billing Account ID
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_primary_entity_id,
                                           pkg_db_constant.gObjType_BillingAccount
                                      );

          when v_action_object_type_id in (pkg_os_constant.gObjType_Partner, pkg_db_constant.gObjType_DragonUser) then

               -- Billing Account ID
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_action_object_id,
                                           pkg_db_constant.gObjType_BillingAccount
                                      );

          when v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

               -- Payer entity ID
               v_payer_entity_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_action_object_id,
                                         pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                    );

               -- Payer Billing Account ID
               v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_payer_entity_id,
                                            pkg_db_constant.gObjType_BillingAccount
                                       );

          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccount then

               -- Billing Account ID
               v_billing_account_id := in_action_object_id;

          -- 2574
          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then

               -- Billing Account ID               
               v_billing_account_id := pkg_os_object.fn_object_parent_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id
                                       );
                                       
               -- Get the batch type
               -- OSPRODUCT-2439
               v_batch_type_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       pkg_db_billing_modify.gbv_FITrxSetBatchType
                                  );

          else

               -- Ultimate Customer ID
               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id,
                                              pkg_os_constant.gObjType_Customer
                                         );

               -- Primary entity ID
               v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ultimate_customer_id,
                                          pkg_db_constant.gbv_CustRefPrimaryEntity
                                     );

               -- Billing Account ID
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_primary_entity_id,
                                           pkg_db_constant.gObjType_BillingAccount
                                      );

     end case;

     -- Check if placeholder already exists
     case

          when v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

               -- PT/Quote Transaction ID
               v_ptp_trx_id := pkg_os_object.fn_object_parent_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_action_object_id
                               );

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment Placeholders
                    -- Card Placeholder
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_trx_id,
                                                  gbv_PTDwnPmntCardPlaceholder
                                             );

                    -- EFT Placeholder
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 gbv_PTDwnPmntEFTPlaceholder
                                            );

                    -- Placeholder to capture profile details
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ptp_trx_id,
                                                    gbv_PTDwnPmntPrfDetailPlchldr
                                               );

                    -- Cleanup required if placeholder exists
                    -- UTXPRODUCT-456
                    v_clean_plchldr_tf := 'F';

               else

                    -- Card Placeholder
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_trx_id,
                                                  pkg_db_constant.gbv_Ref_PT_PlaceholderCC
                                             );

                    -- EFT Placeholder
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 pkg_db_constant.gbv_Ref_PT_PlaceholderEFT
                                            );

                    -- Placeholder to capture profile details
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_trx_id,
                                                  gbv_PTProfileDetailPlchldr
                                               );

                    -- No cleanup required if placeholder exists
                    -- UTXPRODUCT-456
                    v_clean_plchldr_tf := 'F';

               end if;

          when v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment Placeholders
                    -- Card Placeholder
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  gbv_Ref_PayerDwnPmCardPlchldr
                                             );

                    -- EFT Placeholder
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 gbv_Ref_PayerDwnPmEFTPlchldr
                                            );

                    -- Placeholder to capture profile details
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  gbv_Ref_PayerDwnPlchldrPrfInpt
                                               );

                    -- Cleanup required if placeholder exists
                    v_clean_plchldr_tf := 'T';

               else

                    -- Card Placeholder
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  pkg_db_constant.gbv_RefPTPPayerCardPlaceholder
                                             );

                    -- EFT Placeholder
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 pkg_db_constant.gbv_RefPTPPayerEFTPlaceholder
                                            );

                    -- Placeholder to capture profile details
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  gbv_Ref_PTPPayerPlchldrPrfInpt
                                               );

                    -- No cleanup required if placeholder exists
                    v_clean_plchldr_tf := 'F';

               end if;

          -- 2574
          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then

               -- Card Placeholder
               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             gbv_Ref_BatchCardPlaceholder
                                        );

               -- EFT Placeholder
               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            gbv_Ref_BatchEFTPlaceholder
                                       );

               -- Placeholder to capture profile details
               v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             gbv_Ref_BatchPlfPlchldrInput
                                          );


               v_disb_usage_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   gbv_Ref_BatchPlfPlchldrDisb
                                              );

               -- No cleanup required if placeholder exists
               v_clean_plchldr_tf := 'F';

          else

               -- Card Placeholder
               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             pkg_db_constant.gbv_Ref_BAPlaceholderCC
                                        );

               -- EFT Placeholder
               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_billing_account_id,
                                            pkg_db_constant.gbv_Ref_BAPlaceholderEFT
                                       );

               -- Cheque Placeholder
               v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_billing_account_id,
                                               pkg_db_constant.gbv_Ref_BAPlaceholderCheque
                                          );

               -- Disbursement Profile Usage Placeholder
               v_disb_usage_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_billing_account_id,
                                                   pkg_db_constant.gbv_Ref_BAPlaceholderDPU
                                              );

               -- Cleanup placeholder if one already exists
               v_clean_plchldr_tf := 'T';

     end case;
     
     -- OSPRODUCT-2439
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Billing Account ID: ' || v_billing_account_id ||
               '...Action Object ID: '   || in_action_object_id ||
               '... Batch Type ID: '     || v_batch_type_id ||
               '...Card Placeholder: ' || v_card_placeholder_id ||
               '...EFT Placeholder: '  || v_eft_placeholder_id ||
               '...Chk Placeholder: '  || v_cheque_placeholder_id

          );

     end if;

     -- Card Placeholder
     if v_card_placeholder_id is null then

          -- If not already associated, get one
          -- OSPRODUCT-6036
          /*pkg_base_placeholder.sp_placeholder_create
          (
               in_session_id,
               in_transaction_id,
               io_object_cache,
               v_billing_account_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               io_action_outcome_id
          );*/


          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_billing_account_id,
               v_card_placeholder_id
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Card placeholder: ' || v_card_placeholder_id
               );

          end if;

          -- Set up mode
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_card_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_Card
          );
          
          --if v_action_object_type_id in ( pkg_db_constant.gObjType_BillingAccountTrxSet , pkg_db_constant.gObjType_BillingAccount) then   --OSPRODUCT-25427
              -- Set creator of CTF
              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   v_card_placeholder_id,
                   gbv_CTFCreator,
                   in_action_object_id
              );
          
          --end if;
          
          --UTPRODUCT-3203 start
          v_entity_id := pkg_os_object.fn_object_parent_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_billing_account_id
                                       );


          -- Get the parent account type
          v_entity_type_id := pkg_os_object.fn_object_type_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_entity_id
                                         );

          -- Override attributes
          if v_entity_type_id = pkg_os_constant.gObjType_CustomerEntity --Customer Entity
          then

                v_preferred_address := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_entity_id,
                                                   pkg_db_constant.gbv_CustEntityPrimaryAddress
                                              );
               pkg_os_object_io.sp_object_bv_set
                (
                     in_session_id,
                     in_transaction_id,
                     v_card_placeholder_id,
                     gbv_CTFCardBillingAdd,
                     v_preferred_address
                );

          elsif v_entity_type_id = pkg_os_constant.gObjType_Partner
          then

                v_preferred_address := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_entity_id,
                                                   pkg_db_functions.gbv_Partner_RefRrimaryAddress
                                              );
                pkg_os_object_io.sp_object_bv_set
                (
                     in_session_id,
                     in_transaction_id,
                     v_card_placeholder_id,
                     gbv_CTFCardBillingAddPartner,
                     v_preferred_address
                );
          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Preferred address :'||v_preferred_address
                    ||'is set on .. Card placeholder : ' || v_card_placeholder_id
               );

          end if;
          --UTPRODUCT-3203 end

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Card placeholder exists: ' || v_card_placeholder_id
               );

          end if;

          if v_clean_plchldr_tf = 'T' then

               pkg_os_object_io.sp_object_bv_delete
               (
                    in_session_id,
                    in_transaction_id,
                    v_card_placeholder_id
               );

          end if;

          -- Set up mode
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_card_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_Card
          );

     end if;

     -- EFT Placeholder
     if v_eft_placeholder_id is null then

          /*-- If not associated, get one
          -- OSPRODUCT-6036
          pkg_base_placeholder.sp_placeholder_create
          (
               in_session_id,
               in_transaction_id,
               io_object_cache,
               v_billing_account_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               io_action_outcome_id
          );

          -- get the placeholder created from session new object
          v_eft_placeholder_id := pkg_os_object_io.fn_bv_value_cache_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_session_id,
                                       pkg_os_constant_bv.gbv_SessionNewObject,
                                       v_found_in_cache_tf
                                  );*/

          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_billing_account_id,
               v_eft_placeholder_id
          );

          -- Set mode
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_eft_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_EFT
          );

          -- Set country - default to US
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_eft_placeholder_id,
               gbv_CTFEFTBankCountry,
               1 -- US
          );

          -- Set payer type - default to individual
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_eft_placeholder_id,
               gbv_CTFEFTPayerType,
               g_PayerType_Individual
          );
          
          --if v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then   --OSPRODUCT-25427
              -- Set creator of CTF
              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   v_eft_placeholder_id,
                   gbv_CTFCreator,
                   in_action_object_id
              );
          
          --end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'EFT placeholder: ' || v_eft_placeholder_id
               );

          end if;

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. EFT Placeholder exists: ' || v_eft_placeholder_id
               );

          end if;

          if v_clean_plchldr_tf = 'T' then

               pkg_os_object_io.sp_object_bv_delete
               (
                    in_session_id,
                    in_transaction_id,
                    v_eft_placeholder_id
               );

          end if;

          -- Set mode
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_eft_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_EFT
          );

     end if;

     -- Cheque Placeholder
     if v_cheque_placeholder_id is null then

          /*-- create a new placeholder for CashTransferProfile for Cash/Cheque
          pkg_base_placeholder.sp_placeholder_create
          (
               in_session_id,
               in_transaction_id,
               io_object_cache,
               v_billing_account_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               io_action_outcome_id
          );

          -- get the placeholder created from session new object
          v_cheque_placeholder_id := pkg_os_object_io.fn_bv_value_cache_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_session_id,
                                          pkg_os_constant_bv.gbv_SessionNewObject,
                                          v_found_in_cache_tf
                                     );*/

          -- OSPRODUCT-6036
          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_billing_account_id,
               v_cheque_placeholder_id
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Cheque placeholder created: ' || v_cheque_placeholder_id
               );

          end if;

          -- set the mode to Cash/Cheque
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_cheque_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_Cheque
          );
          
          --if v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then   --OSPRODUCT-25427
              -- Set creator of CTF
              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   v_cheque_placeholder_id,
                   gbv_CTFCreator,
                   in_action_object_id
              );
          
          --end if;

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Cheque Placeholder exists/not required: '
               );

          end if;

          -- UTXPRODUCT-456
          -- Do not reset the mode
          /*-- set the mode to Cash/Cheque
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_cheque_placeholder_id,
               gbv_CTFPaymentMode,
               g_PaymentMode_Cheque
          );*/

     end if;

     -- Disbursement Placeholder
     if v_batch_type_id = 2301 -- OSPRODUCT-2439 For manual disb workflow 
        or
        (
             v_disb_usage_placeholder_id is null 
             and
             v_action_object_type_id not in ( pkg_os_constant.gobjType_PolicyTrxPolicy, pkg_db_constant.gobjType_PTPPayer, pkg_db_constant.gObjType_BillingAccountTrxSet)
        )
     then

          /*pkg_base_placeholder.sp_placeholder_create
          (
               in_session_id,
               in_transaction_id,
               io_object_cache,
               v_billing_account_id,
               pkg_db_constant.gObjType_DisbProfileUsage,
               io_action_outcome_id
          );

          -- get the placeholder created from session new object
          v_disb_usage_placeholder_id := pkg_os_object_io.fn_bv_value_cache_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_session_id,
                                             pkg_os_constant_bv.gbv_SessionNewObject,
                                             v_found_in_cache_tf
                                        );*/

          -- OSPRODUCT-6036
          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gObjType_DisbProfileUsage,
               v_billing_account_id,
               v_disb_usage_placeholder_id
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Disbursement Profile Usage placeholder created: ' || v_disb_usage_placeholder_id
               );

          end if;

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Disbursement Profile Usage Placeholder exists/not required. '
               );

          end if;

          if v_clean_plchldr_tf = 'T' then

               -- Do the cleanup
               v_bv_table(gbv_ObjEffectiveDate).business_variable_value := null;
               v_bv_table(gbv_DPUDisbursementType).business_variable_value := null;
               v_bv_table(gbv_DPUInsuranceLine).business_variable_value := null;
               v_bv_table(gbv_DPUUsageDescription).business_variable_value := null;
               v_bv_table(gbv_DPUDisbursementSched).business_variable_value := null;
               v_bv_table(gbv_DPUDateOfMonth).business_variable_value := null;
               v_bv_table(gbv_DPUDayOfWeek).business_variable_value := null;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_disb_usage_placeholder_id,
                    v_bv_table
               );

          end if;

     end if;

     -- Do the setup
     case

          when v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment
                    -- Set up Card placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_Ref_PayerDwnPmCardPlchldr,
                         v_card_placeholder_id
                    );

                    -- Set up EFT placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_Ref_PayerDwnPmEFTPlchldr,
                         v_eft_placeholder_id
                    );

                    -- Set up Profile Detail placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_Ref_PayerDwnPlchldrPrfInpt,
                         v_cheque_placeholder_id
                    );

               else

                    -- Set up Card placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         pkg_db_constant.gbv_RefPTPPayerCardPlaceholder,
                         v_card_placeholder_id
                    );

                    -- Set up EFT placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         pkg_db_constant.gbv_RefPTPPayerEFTPlaceholder,
                         v_eft_placeholder_id
                    );

                    -- Set up Profile Detail placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_Ref_PTPPayerPlchldrPrfInpt,
                         v_cheque_placeholder_id
                    );

               end if;

          when v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment Profile
                    -- Set up Card placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         gbv_PTDwnPmntCardPlaceholder,
                         v_card_placeholder_id
                    );

                    -- Set up EFT placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         gbv_PTDwnPmntEFTPlaceholder,
                         v_eft_placeholder_id
                    );

                    -- Set up Prf Details placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         gbv_PTDwnPmntPrfDetailPlchldr,
                         v_cheque_placeholder_id
                    );

               else

                    -- Set up Card placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         pkg_db_constant.gbv_Ref_PT_PlaceholderCC,
                         v_card_placeholder_id
                    );

                    -- Set up EFT placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         pkg_db_constant.gbv_Ref_PT_PlaceholderEFT,
                         v_eft_placeholder_id
                    );

                    -- Set up Prf Details placeholder
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ptp_trx_id,
                         gbv_PTProfileDetailPlchldr,
                         v_cheque_placeholder_id
                    );

               end if;

          -- 2574
          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then

               -- Set up Card placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    gbv_Ref_BatchCardPlaceholder,
                    v_card_placeholder_id
               );

               -- Set up EFT placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    gbv_Ref_BatchEFTPlaceholder,
                    v_eft_placeholder_id
               );

               -- Set up Prf Details placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    gbv_Ref_BatchPlfPlchldrInput,                    
                    v_cheque_placeholder_id
               );

               -- Set the disbursement profile
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    gbv_Ref_BatchPlfPlchldrDisb,                    
                    v_disb_usage_placeholder_id
               );                         

          else             

               -- Set up Cheque placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BACTFPlchldrCheque,
                    v_cheque_placeholder_id
               );

               -- Set up card placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BACTFPlchldrCard,
                    v_card_placeholder_id
               );

               -- Set up eft placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BACTFPlchldrEFT,
                    v_eft_placeholder_id
               );

               -- Set up DPU Placeholder
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BAPlchldrDisbProfUsage,
                    v_disb_usage_placeholder_id
               );

     end case;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_create_profile_placeholder;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_dpu_for_customer
--
--  %USAGE
--    Procedure to create DisbursementProfileUsage object for Customer
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  in_action_object_id                    PTP, PTPPayer, PT -
--                                                 To get the policy billing method
--                                                 and restrict the workflow to add a DPU for agency billed policies
--  %PARAM  in_cash_transfer_profile_id            Profile object
--                                                 If not passed will be calculated from Policy/BA
--                                                 If not found the action will terminate
--  %PARAM  in_placeholder_dpu_id                  Placeholder DPU
--  %PARAM  io_object_id                           object ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_dpu_for_customer
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type default null,
     in_cash_transfer_profile_id           in             object.object_id%type default null,
     in_placeholder_dpu_id                 in             object.object_id%type default null,
     io_object_id                          out            object.object_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type   :=  pkg_name|| 'sp_create_dpu_for_customer';
     v_session_control                     pkg_os_session.r_dragon_session_control  :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_ptp_id                              object.object_id%type;
     v_policy_transaction_id               object.object_id%type;
     v_policy_term_id                      object.object_id%type;
     v_term_pref_pay_profile               object.object_id%type;
     v_ba_pref_pay_profile                 object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_disb_profile_id                     object.object_id%type;
     v_billaccount_parent_id               object.object_id%type;
     v_customer_address_id                 object.object_id%type;
     v_log_object_id                       object.object_id%type;
     v_object_id                           object.object_id%type;


     v_billing_acc_parent_type_id          object_type.object_type_id%type;

     v_policy_billing_method               object_bv_value.business_variable_value%type;
     v_profile_payment_mode                object_bv_value.business_variable_value%type;
     v_disb_mode                           object_bv_value.business_variable_value%type;
     v_disb_effective_date                 object_bv_value.business_variable_value%type;
     v_disb_type                           object_bv_value.business_variable_value%type;
     v_disb_usage_desc                     object_bv_value.business_variable_value%type;
     v_disb_schedule                       object_bv_value.business_variable_value%type;
     v_disb_date_of_month                  object_bv_value.business_variable_value%type;
     v_disb_date_type                      object_bv_value.business_variable_value%type;
     v_disb_day_of_week                    object_bv_value.business_variable_value%type;
     v_disb_insurance_line                 object_bv_value.business_variable_value%type;
     v_rule_eval_result                    object_bv_value.business_variable_value%type;
     v_cc_expiry_date                      object_bv_value.business_variable_value%type;
     v_cc_expiration_month                 object_bv_value.business_variable_value%type;
     v_cc_expiration_year                  object_bv_value.business_variable_value%type;
     v_expiry_date                         object_bv_value.business_variable_value%type;
     v_action_text                         object_bv_value.business_variable_value%type;

     v_today_date                          date                     :=   trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_account_id));
     v_user_id                             object.object_id%type    :=   pkg_os_wf_session.fn_user_get( in_session_id, in_transaction_id );

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_datamart_tf                         char(1) := 'T';
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing         number;
     -- kiran end OSPRODUCT-29368 / 29370  	 
     --kiran start OSPRODUCT-35200
     v_ptp_bill_plan_enabled_tf            number default g_No;
     --kiran end OSPRODUCT-35200 	 

begin

     -- Get the Billing Account ID
     v_billing_account_id := in_billing_account_id;

     -- Billing Account Parent
     v_billaccount_parent_id := pkg_os_object.fn_object_parent_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_billing_account_id
                                );

     -- Get the parent account type
     v_billing_acc_parent_type_id := pkg_os_object.fn_object_type_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_billaccount_parent_id
                                     );

     -- Get policy transaction ID
     v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     pkg_os_constant.gobjType_PolicyTransaction
                                );

     begin

          begin

               select
                    pt.ptp_id,
                    pt.policy_term_id
               into
                    v_ptp_id,
                    v_policy_term_id
               from
                    dragon_policy_trx pt
               where
                    pt.policy_trx_id = v_policy_transaction_id;

          exception

               when others then
                    null;

          end;

          if v_policy_transaction_id is null then

               v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_action_object_id,
                                               pkg_os_constant.gobjType_PolicyTransaction
                                          );

          end if;

          if v_policy_term_id is null then

               v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_transaction_id,
                                        pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                   );

          end if;

     end;

     -- Policy Billing Method
     v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_ptp_id,
                                     pkg_db_constant.gbv_PTP_BillingMethod -- Broker Or Customer Billed Policy?
                                );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Billing Account ID: ' || v_billing_account_id ||
               '...Customer Type: '      || v_billing_acc_parent_type_id ||
               '...PTP ID; '             || v_ptp_id                     ||
               '...Action Object ID: '   || in_action_object_id          ||
               '...Billing Method: '     || v_policy_billing_method      ||
               '...Policy Term ID: '     || v_policy_term_id             ||
               '...Policy Trx ID: '      || v_policy_transaction_id      ||
               '...Profile ID: '         || in_cash_transfer_profile_id  ||
               '...Placeholder DPU: '    || in_placeholder_dpu_id
          );

     end if;

     --kiran start OSPRODUCT-35200 commenting the below if logic and added new condition    
     /*
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_ptp_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                      );     
     -- kiran end OSPRODUCT-29368 / 29370
     
     -- If not direct billed return
     if in_action_object_id is not null
        and
        --v_policy_billing_method != 1 -- Commented this line.kiran OSPRODUCT-29368 / 29370
        -- kiran start OSPRODUCT-29368 / 29370
        v_policy_billing_method != pkg_db_billing_modify.gBillingMethod_Direct 
        and v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_No
        -- kiran end OSPRODUCT-29368 / 29370
      
      */
      
      v_ptp_bill_plan_enabled_tf   := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_ptp_id,
                                            PKG_DB_CONSTANT.gbv_PTPBillPlanEnabledTF
                                      ); 
                                      
     if v_session_control.gLogging_Full
     then
           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '.. in_action_object_id: ' || in_action_object_id    ||
                ' v_ptp_bill_plan_enabled_tf:'||v_ptp_bill_plan_enabled_tf
           );
     end if;                                         
     
     if in_action_object_id is not null and nvl(v_ptp_bill_plan_enabled_tf, g_No ) = g_No
                                      
     --kiran end OSPRODUCT-35200   
	 
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    --kiran start OSPRODUCT-35200   
                    --'...Leaving the process of disbursement profile creation (it is for Direct Billed policies only.) '
                    '...Exit the process of disbursement profile creation as bill plan is not enabled. (v_ptp_bill_plan_enabled_tf):'|| v_ptp_bill_plan_enabled_tf
                    --kiran end OSPRODUCT-35200                       

               );
          end if;

          return;

     end if;

     -- Get the CTF ID
     if in_cash_transfer_profile_id is null then -- not recommended

          if in_action_object_id is not null then

               -- Get the term's preferred profile
               v_term_pref_pay_profile := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_policy_term_id,
                                               gbv_TermPreferredPayProfile
                                          );

               -- Get the associated CTF
               v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_term_pref_pay_profile,
                                                  gbv_PPUCashTransferProfUSed
                                             );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Term Preferred Profile: ' || v_cash_transfer_profile_id
                    );

               end if;

          else

               -- Get the Billing Account Preferred profile
               v_ba_pref_pay_profile := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             gbv_BAPreferredPayProfUsage
                                        );

               -- Get the associated CTF
               v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ba_pref_pay_profile,
                                                  gbv_PPUCashTransferProfUSed
                                             );
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...BA Preferred Profile: ' || v_cash_transfer_profile_id
                    );

               end if;

          end if;

     else

          v_cash_transfer_profile_id := in_cash_transfer_profile_id;

     end if;

     -- OSPRODUCT-5389
     if v_cash_transfer_profile_id is null then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'DPU setup terminated as profile object not found..'
               );

          end if;

          return;

     end if;

     -- Create the DPU object
     pkg_os_object.sp_object_create
     (
           in_session_id,
           in_transaction_id,
           pkg_db_constant.gObjType_DisbProfileUsage,--- disbursement profile id
           v_billing_account_id,
           v_disb_profile_id
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Disb Profile ID: ' || v_disb_profile_id
          );

     end if;

     -- Setup attributes

     -- Get Disbursement Mode
     v_profile_payment_mode := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_cash_transfer_profile_id,
                                    gbv_CTFPaymentMode
                               );

     if v_profile_payment_mode = g_PaymentMode_Cheque then

          v_disb_mode := g_DisbMode_Cheque;

     elsif v_profile_payment_mode = g_PaymentMode_Card then

          v_disb_mode := g_DisbMode_Card;

     elsif v_profile_payment_mode = g_PaymentMode_EFT then

          v_disb_mode := g_DisbMode_EFT;

     end if;

     -- Get disbursement expiry date
     if v_disb_mode = g_DisbMode_Card then

          v_cc_expiry_date := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_cash_transfer_profile_id,
                                   gbv_CTFCardExpiryDate
                              );

          v_cc_expiration_month := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_cash_transfer_profile_id,
                                        gbv_CTFCardExpMon
                                   );

          v_cc_expiration_year := pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_cash_transfer_profile_id,
                                        gbv_CTFCardExpYear
                                  );

          if v_cc_expiry_date is null
             and
             (
                  v_cc_expiration_month is not null
                  and
                  v_cc_expiration_year is not null
             )
          then

               select
                    to_char(last_day(to_date(concat(to_char(v_cc_expiration_month, '00'),to_char(v_cc_expiration_year)),'MMYYYY')),'YYYYMMDDHH24MISS')
               into
                    v_cc_expiry_date
               from
                    dual;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '... Card expiry month: '
                        || v_cc_expiration_month
                        ||'... Card expiry year: '
                        || v_cc_expiration_year
                        ||'... Card expiry date'
                        ||v_expiry_date
                     );

               end if;

          end if;

     end if;

     if in_placeholder_dpu_id is null then

          -- Effective Date
          v_bv_table(gbv_ObjEffectiveDate).business_variable_value := to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault);

          -- Get the disbursement BVs
          for disbursement_profile in
              (
                   select
                        *
                   from
                        db_account_profile_map
                   where
                        billing_account_type = 2366446 -- customer object type
				   order by 
                        profile_sequence  --OSPRODUCT-23029
              )
          loop

               if disbursement_profile.source_bv_rule is not null
               then

                    v_rule_eval_result := pkg_os_exp.fn_evaluate_expression
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_disb_profile_id,
                                               disbursement_profile.source_bv_rule
                                          );

               elsif disbursement_profile.source_bv_path is not null then

                    v_rule_eval_result := pkg_os_object_io.fn_object_bv_path_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_disb_profile_id,
                                               disbursement_profile.source_bv_path
                                          );

               end if;

               if v_rule_eval_result is not null then

                   if v_session_control.gLogging_Full then

                        pkg_os_logging.sp_log
                        (
                            in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '...Initialize the new disbursement profile object: '
                            ||v_disb_profile_id
                            ||' with setting the BV '
                            || SUBSTR(disbursement_profile.bv_path,1, instr( disbursement_profile.bv_path, disbursement_profile.object_type)-2)
                            || ' to: '
                            || v_rule_eval_result
                         );

                   end if;

                   v_bv_table(substr(disbursement_profile.bv_path,1, instr( disbursement_profile.bv_path, disbursement_profile.object_type)-2)).business_variable_value := v_rule_eval_result;

               end if;

          end loop;

          -- Override attributes
          if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity --Customer Entity
          then

               v_bv_table(gbv_DPUDisbursementSched).business_variable_value := g_DisbSchedule_Daily;
               v_bv_table(gbv_DPUDisbursementType).business_variable_value := 6;

          elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner
          then

               v_bv_table(gbv_DPUDisbursementSched).business_variable_value := g_DisbSchedule_Monthly;
               v_bv_table(gbv_DPUDateOfMonth).business_variable_value := 31;

          end if;

          -- Get Address     
          if v_disb_mode = g_DisbMode_Cheque then

               if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then -- Customer Entity

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billaccount_parent_id,
                                                  nvl(pkg_pc_submission.gbv_CustEntityBillingAddress, pkg_db_constant.gbv_CustEntityMailingAddress)  -- OSPRODUCT-25867
                                             );

                    if v_customer_address_id is null
                    then

                        v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_billaccount_parent_id,
                                                      pkg_db_constant.gbv_CustEntityPrimaryAddress--Primary address
                                                  );

                    end if;


               elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then--Partner(Agent/Broker)               

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billaccount_parent_id,
                                                  pkg_db_constant.gbv_PartnerMailingAddress --Broker Mailing address
                                             );

                    if v_customer_address_id is null then

                         v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_billaccount_parent_id,
                                                       pkg_db_constant.gbv_PartnerPrimaryAddress --Broker Primary address
                                                  );

                    end if;               

               end if;

          end if; 

     else

          -- Effective Date
          v_disb_effective_date := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_placeholder_dpu_id,
                                        gbv_ObjEffectiveDate
                                   );

          -- Disbursement Schedule
          v_disb_schedule := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_placeholder_dpu_id,
                                  gbv_DPUDisbursementSched
                             );

          -- Disbursement Type
          v_disb_type := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_placeholder_dpu_id,
                              gbv_DPUDisbursementType
                         );

          -- Insurance Line
          v_disb_insurance_line := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_placeholder_dpu_id,
                                        gbv_DPUInsuranceLine
                                   );

          -- Usage Description
          v_disb_usage_desc := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_placeholder_dpu_id,
                                    gbv_DPUUsageDescription
                               );

          if v_disb_schedule = g_DisbSchedule_Monthly then

               v_disb_date_of_month := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_dpu_id,
                                             gbv_DPUDateOfMonth
                                        );

               v_disb_date_type := nvl
                                   (
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_dpu_id,
                                             gbv_DPUDateType
                                        ),
                                        0
                                   );
          end if;

          if v_disb_schedule = g_DisbSchedule_Weekly then

               v_disb_day_of_week := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_placeholder_dpu_id,
                                          gbv_DPUDayOfWeek
                                     );
          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Reference Placeholder Disb Profile ID: ' ||
                    in_placeholder_dpu_id ||
                    'Disbursement Effective Date: ' ||
                    v_disb_effective_date ||
                    'Disbursement Schedule: ' ||
                    v_disb_schedule ||
                    'Disbursement Type:' ||
                    v_disb_type ||
                    'Insurance Line:' ||
                    v_disb_insurance_line ||
                    'Disbursement Usage Description :' ||
                    v_disb_usage_desc ||
                    'Disbursement Date of Month:' ||
                    v_disb_date_of_month ||
                    'Disbursement Day of Week:' ||
                    v_disb_day_of_week
               );

          end if;

          v_bv_table(gbv_ObjEffectiveDate).business_variable_value := v_disb_effective_date;
          v_bv_table(gbv_DPUInsuranceLine).business_variable_value := v_disb_insurance_line;
          v_bv_table(gbv_DPUDisbursementSched).business_variable_value := v_disb_schedule;
          v_bv_table(gbv_DPUDisbursementType).business_variable_value := v_disb_type;
          v_bv_table(gbv_DPUUsageDescription).business_variable_value := v_disb_usage_desc;

          if v_disb_schedule = g_DisbSchedule_Monthly
          then

               v_bv_table(gbv_DPUDateOfMonth).business_variable_value := v_disb_date_of_month;
               v_bv_table(gbv_DPUDateType).business_variable_value := v_disb_date_type;

          elsif v_disb_schedule = g_DisbSchedule_Weekly--2 --weekly
          then

               v_bv_table(gbv_DPUDayOfWeek).business_variable_value := v_disb_day_of_week;

          end if;

          -- Get Customer Address     
          if v_disb_mode = g_DisbMode_Cheque then

               if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then -- Customer Entity

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_placeholder_dpu_id,
                                                  gbv_DPUCustomerAddForDisb
                                             );

               elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then--Partner(Agent/Broker)               

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_placeholder_dpu_id,
                                                  gbv_DPUPartnerAddForDisb --Broker Mailing address
                                             );

               end if;

          end if;        

     end if;

     -- Object State
     v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := g_ProfileState_Active;
     --v_bv_table(gbv_DPUState).business_variable_value := g_ProfileState_Active;

     -- Stop date
     v_bv_table(gbv_DPUStopDate).business_variable_value := null;

     -- Disbursement Mode
     v_bv_table(gbv_DPUDisbMode).business_variable_value := v_disb_mode;

     -- Expiration Date (The BV is deprecated)
     v_bv_table(gbv_ObjExpirationDate).business_variable_value := v_cc_expiry_date;

     -- Customer Address
     if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then
          v_bv_table(gbv_DPUCustomerAddForDisb).business_variable_value := v_customer_address_id;
     elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then
          v_bv_table(gbv_DPUPartnerAddForDisb).business_variable_value := v_customer_address_id;
     end if;

     -- Cash Transfer Profile
     v_bv_table(gbv_DPUCashTrsfrProfileUsed).business_variable_value := v_cash_transfer_profile_id;

     -- BV Setup
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_disb_profile_id,
          v_bv_table
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...BV Setup Done.. '
          );

     end if;

     -- Set up log object
     begin

          v_action_text := 'New disbursement profile created automatically';

          v_object_id := v_disb_profile_id;

          pkg_os_object.sp_object_create
          (
                in_session_id,
                in_transaction_id,
                pkg_os_constant.gobjType_ObjectActionLog,
                v_object_id,
                v_log_object_id
          );

          --     Set Log attributes
          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbvObjectActionLog_Action,
                v_action_text
          );

          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbvObjectActionLog_User,
                v_user_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbv_GenObjCreationDate,
                to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault)
          );

     end;

     -- Datamart Update
     pkg_os_datamart.sp_datamart_update_row
     (
           in_session_id,
           in_transaction_id,
           v_disb_profile_id,
           v_datamart_tf
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...Datamart Updated..'
          );

     end if;

     io_object_id := v_disb_profile_id;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...... Not able to create disbursement profile object '
              || ' Error: '
              ||sqlerrm (sqlcode)
          );

          raise;

end sp_create_dpu_for_customer;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_dpu_for_non_customer
--
--  %USAGE
--    Procedure to create DisbursementProfileUsage object for Non Customer
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  in_profile_type_id                     Partner(63), DragonUser(309)
--  %PARAM  in_cash_transfer_profile_id            Profile object
--                                                 If not found the action will terminate
--  %PARAM  in_placeholder_dpu_id                  Placeholder DPU
--  %PARAM  io_object_id                           object ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_dpu_for_non_customer
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     in_profile_type_id                    in             number,
     in_cash_transfer_profile_id           in             object.object_id%type,
     in_placeholder_dpu_id                 in             object.object_id%type default null,
     io_object_id                          out            object.object_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type   :=  pkg_name|| 'sp_create_dpu_for_non_customer';
     v_session_control                     pkg_os_session.r_dragon_session_control  :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_billing_account_id                  object.object_id%type;

     v_cash_transfer_profile_id            object.object_id%type;
     v_disb_profile_id                     object.object_id%type;
     v_billaccount_parent_id               object.object_id%type;
     v_customer_address_id                 object.object_id%type;
     v_log_object_id                       object.object_id%type;
     v_object_id                           object.object_id%type;

     v_billing_acc_parent_type_id          object_type.object_type_id%type;

     v_profile_payment_mode                object_bv_value.business_variable_value%type;
     v_disb_mode                           object_bv_value.business_variable_value%type;
     v_disb_effective_date                 object_bv_value.business_variable_value%type;
     v_disb_type                           object_bv_value.business_variable_value%type;
     v_disb_usage_desc                     object_bv_value.business_variable_value%type;
     v_disb_schedule                       object_bv_value.business_variable_value%type;
     v_disb_date_of_month                  object_bv_value.business_variable_value%type;
     v_disb_date_type                      object_bv_value.business_variable_value%type;
     v_disb_day_of_week                    object_bv_value.business_variable_value%type;
     v_disb_insurance_line                 object_bv_value.business_variable_value%type;
     v_rule_eval_result                    object_bv_value.business_variable_value%type;
     v_cc_expiry_date                      object_bv_value.business_variable_value%type;
     v_cc_expiration_month                 object_bv_value.business_variable_value%type;
     v_cc_expiration_year                  object_bv_value.business_variable_value%type;
     v_expiry_date                         object_bv_value.business_variable_value%type;
     v_action_text                         object_bv_value.business_variable_value%type;

     v_today_date                          date                     :=   trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_account_id));
     v_user_id                             object.object_id%type    :=   pkg_os_wf_session.fn_user_get( in_session_id, in_transaction_id );

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_datamart_tf                         char(1) := 'T';

begin

     -- Get the Billing Account ID
     v_billing_account_id := in_billing_account_id;

     -- Billing Account Parent
     v_billaccount_parent_id := pkg_os_object.fn_object_parent_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_billing_account_id
                                );

     -- Get the parent account type
     v_billing_acc_parent_type_id := pkg_os_object.fn_object_type_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_billaccount_parent_id
                                     );

     v_cash_transfer_profile_id := in_cash_transfer_profile_id;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Billing Account ID: ' || v_billing_account_id ||
               '...Customer Type: '      || v_billing_acc_parent_type_id ||
               '...Profile ID: '         || in_cash_transfer_profile_id  ||
               '...DPU Placeholder ID: ' || in_placeholder_dpu_id
          );

     end if;

     --5389
     if v_cash_transfer_profile_id is null then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'DPU setup terminated as profile object not found..'
               );

          end if;

          return;

     end if;

     -- Create the DPU object
     pkg_os_object.sp_object_create
     (
           in_session_id,
           in_transaction_id,
           pkg_db_constant.gObjType_DisbProfileUsage,--- disbursement profile id
           v_billing_account_id,
           v_disb_profile_id
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Disb Profile ID: ' || v_disb_profile_id
          );

     end if;

     -- Setup attributes

     -- Get Disbursement Mode
     v_profile_payment_mode := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_cash_transfer_profile_id,
                                    gbv_CTFPaymentMode
                               );

     if v_profile_payment_mode = g_PaymentMode_Cheque then

          v_disb_mode := g_DisbMode_Cheque;

     elsif v_profile_payment_mode = g_PaymentMode_Card then

          v_disb_mode := g_DisbMode_Card;

     elsif v_profile_payment_mode = g_PaymentMode_EFT then

          v_disb_mode := g_DisbMode_EFT;

     end if;

     -- Get disbursement expiry date
     if v_disb_mode = g_DisbMode_Card then

          v_cc_expiry_date := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_cash_transfer_profile_id,
                                   gbv_CTFCardExpiryDate
                              );

          v_cc_expiration_month := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_cash_transfer_profile_id,
                                        gbv_CTFCardExpMon
                                   );

          v_cc_expiration_year := pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_cash_transfer_profile_id,
                                        gbv_CTFCardExpYear
                                  );

          if v_cc_expiry_date is null
             and
             (
                  v_cc_expiration_month is not null
                  and
                  v_cc_expiration_year is not null
             )
          then

               select
                    to_char(last_day(to_date(concat(to_char(v_cc_expiration_month, '00'),to_char(v_cc_expiration_year)),'MMYYYY')),'YYYYMMDDHH24MISS')
               into
                    v_cc_expiry_date
               from
                    dual;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '... Card expiry month: '
                        || v_cc_expiration_month
                        ||'... Card expiry year: '
                        || v_cc_expiration_year
                        ||'... Card expiry date'
                        ||v_expiry_date
                     );

               end if;

          end if;

     end if;

     if in_placeholder_dpu_id is null then

          -- Effective Date
          v_bv_table(gbv_ObjEffectiveDate).business_variable_value := to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault);

          -- Get the disbursement BVs
          for disbursement_profile in
              (
                   select
                        *
                   from
                        db_account_profile_map
                   where
                        billing_account_type = in_profile_type_id
				   order by 
                        profile_sequence  --OSPRODUCT-23029
              )
          loop

               if disbursement_profile.source_bv_rule is not null
               then

                    v_rule_eval_result := pkg_os_exp.fn_evaluate_expression
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_disb_profile_id,
                                               disbursement_profile.source_bv_rule
                                          );

               elsif disbursement_profile.source_bv_path is not null then

                    v_rule_eval_result := pkg_os_object_io.fn_object_bv_path_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_disb_profile_id,
                                               disbursement_profile.source_bv_path
                                          );

               end if;

               if v_rule_eval_result is not null then

                   if v_session_control.gLogging_Full then

                        pkg_os_logging.sp_log
                        (
                            in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '...Initialize the new disbursement profile object: '
                            ||v_disb_profile_id
                            ||' with setting the BV '
                            || SUBSTR(disbursement_profile.bv_path,1, instr( disbursement_profile.bv_path, disbursement_profile.object_type)-2)
                            || ' to: '
                            || v_rule_eval_result
                         );

                   end if;

                   v_bv_table(substr(disbursement_profile.bv_path,1, instr( disbursement_profile.bv_path, disbursement_profile.object_type)-2)).business_variable_value := v_rule_eval_result;

               end if;

          end loop;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_disb_profile_id,
               v_bv_table
          );

          v_bv_table.delete;

          -- Override attributes
          if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_disb_profile_id, gbv_DPUDisbursementSched) is null then

               if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then --Customer Entity               

                    v_bv_table(gbv_DPUDisbursementSched).business_variable_value := g_DisbSchedule_Daily;
                    v_bv_table(gbv_DPUDisbursementType).business_variable_value := 6;

               elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then

                    v_bv_table(gbv_DPUDisbursementSched).business_variable_value := g_DisbSchedule_Monthly;
                    v_bv_table(gbv_DPUDateOfMonth).business_variable_value := 31;

               end if;

          end if; 

          -- Get Customer Address     
          if v_disb_mode = g_DisbMode_Cheque then

               if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then -- Customer Entity

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billaccount_parent_id,
                                                  pkg_db_constant.gbv_CustEntityMailingAddress
                                             );

                    if v_customer_address_id is null
                    then

                        v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_billaccount_parent_id,
                                                      pkg_db_constant.gbv_CustEntityPrimaryAddress--Primary address
                                                  );

                    end if;


               elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then--Partner(Agent/Broker)               

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billaccount_parent_id,
                                                  pkg_db_constant.gbv_PartnerMailingAddress --Broker Mailing address
                                             );

                    if v_customer_address_id is null then

                         v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_billaccount_parent_id,
                                                       pkg_db_constant.gbv_PartnerPrimaryAddress --Broker Primary address
                                                  );

                    end if;               

               end if;

          end if;


     else

          -- Effective Date
          v_disb_effective_date := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_placeholder_dpu_id,
                                        gbv_ObjEffectiveDate
                                   );

          -- Disbursement Schedule
          v_disb_schedule := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_placeholder_dpu_id,
                                  gbv_DPUDisbursementSched
                             );

          -- Disbursement Type
          v_disb_type := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_placeholder_dpu_id,
                              gbv_DPUDisbursementType
                         );

          -- Insurance Line
          v_disb_insurance_line := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_placeholder_dpu_id,
                                        gbv_DPUInsuranceLine
                                   );

          -- Usage Description
          v_disb_usage_desc := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_placeholder_dpu_id,
                                    gbv_DPUUsageDescription
                               );

          if v_disb_schedule = g_DisbSchedule_Monthly then

               v_disb_date_of_month := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_dpu_id,
                                             gbv_DPUDateOfMonth
                                        );

               v_disb_date_type := nvl
                                   (
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_placeholder_dpu_id,
                                             gbv_DPUDateType
                                        ),
                                        0
                                   );
          end if;

          if v_disb_schedule = g_DisbSchedule_Weekly then

               v_disb_day_of_week := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_placeholder_dpu_id,
                                          gbv_DPUDayOfWeek
                                     );
          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Reference Placeholder Disb Profile ID: ' ||
                    in_placeholder_dpu_id ||
                    'Disbursement Effective Date: ' ||
                    v_disb_effective_date ||
                    'Disbursement Schedule: ' ||
                    v_disb_schedule ||
                    'Disbursement Type:' ||
                    v_disb_type ||
                    'Insurance Line:' ||
                    v_disb_insurance_line ||
                    'Disbursement Usage Description :' ||
                    v_disb_usage_desc ||
                    'Disbursement Date of Month:' ||
                    v_disb_date_of_month ||
                    'Disbursement Day of Week:' ||
                    v_disb_day_of_week
               );

          end if;

          v_bv_table(gbv_ObjEffectiveDate).business_variable_value := v_disb_effective_date;
          v_bv_table(gbv_DPUInsuranceLine).business_variable_value := v_disb_insurance_line;
          v_bv_table(gbv_DPUDisbursementSched).business_variable_value := v_disb_schedule;
          v_bv_table(gbv_DPUDisbursementType).business_variable_value := v_disb_type;
          v_bv_table(gbv_DPUUsageDescription).business_variable_value := v_disb_usage_desc;

          if v_disb_schedule = g_DisbSchedule_Monthly
          then

               v_bv_table(gbv_DPUDateOfMonth).business_variable_value := v_disb_date_of_month;
               v_bv_table(gbv_DPUDateType).business_variable_value := v_disb_date_type;

          elsif v_disb_schedule = g_DisbSchedule_Weekly--2 --weekly
          then

               v_bv_table(gbv_DPUDayOfWeek).business_variable_value := v_disb_day_of_week;

          end if;

          -- Get the Address     
          if v_disb_mode = g_DisbMode_Cheque then

               if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then -- Customer Entity

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_placeholder_dpu_id,
                                                  gbv_DPUCustomerAddForDisb
                                             );

               elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then--Partner(Agent/Broker)               

                    v_customer_address_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_placeholder_dpu_id,
                                                  gbv_DPUPartnerAddForDisb --Broker Mailing address
                                             );

               end if;

          end if;     

     end if;

     -- Object State
     v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := g_ProfileState_Active;
     --v_bv_table(gbv_DPUState).business_variable_value := g_ProfileState_Active;

     -- Stop date
     v_bv_table(gbv_DPUStopDate).business_variable_value := null;

     -- Disbursement Mode
     v_bv_table(gbv_DPUDisbMode).business_variable_value := v_disb_mode;

     -- Expiration Date (The BV is deprecated)
     v_bv_table(gbv_ObjExpirationDate).business_variable_value := v_cc_expiry_date;

     -- Customer Address
     if v_billing_acc_parent_type_id = pkg_os_constant.gObjType_CustomerEntity then
          v_bv_table(gbv_DPUCustomerAddForDisb).business_variable_value := v_customer_address_id;
     elsif v_billing_acc_parent_type_id = pkg_os_constant.gObjType_Partner then
          v_bv_table(gbv_DPUPartnerAddForDisb).business_variable_value := v_customer_address_id;
     end if;

     -- Cash Transfer Profile
     v_bv_table(gbv_DPUCashTrsfrProfileUsed).business_variable_value := v_cash_transfer_profile_id;

     -- BV Setup
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_disb_profile_id,
          v_bv_table
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...BV Setup Done.. '
          );

     end if;

     -- Set up log object
     begin

          v_action_text := 'New disbursement profile created automatically';

          v_object_id := v_disb_profile_id;

          pkg_os_object.sp_object_create
          (
                in_session_id,
                in_transaction_id,
                pkg_os_constant.gobjType_ObjectActionLog,
                v_object_id,
                v_log_object_id
          );

          --     Set Log attributes
          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbvObjectActionLog_Action,
                v_action_text
          );

          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbvObjectActionLog_User,
                v_user_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
                in_session_id,
                in_transaction_id,
                v_log_object_id,
                pkg_os_constant_bv.gbv_GenObjCreationDate,
                to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault)
          );

     end;

     -- Datamart Update
     pkg_os_datamart.sp_datamart_update_row
     (
           in_session_id,
           in_transaction_id,
           v_disb_profile_id,
           v_datamart_tf
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...Datamart Updated..'
          );

     end if;

     io_object_id := v_disb_profile_id;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...... Not able to create disbursement profile object '
              || ' Error: '
              ||sqlerrm (sqlcode)
          );

          raise;

end sp_create_dpu_for_non_customer;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_ppu
--
--  %USAGE
--    Procedure to create PaymentProfileUsage object for Customer
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  in_action_object_id                    PTP, PTPPayer, PT -
--                                                 To get the policy billing method
--                                                 and restrict the workflow to add a DPU for agency billed policies
--  %PARAM  in_cash_transfer_profile_id            Profile object
--                                                 If not passed will be calculated from Policy/BA
--                                                 If not found the action will terminate
--  %PARAM  io_object_id                           object ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_ppu
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type default null,
     in_cash_transfer_profile_id           in             object.object_id%type default null,
     io_object_id                          out            object.object_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type   :=  pkg_name|| 'sp_create_ppu';
     v_session_control                     pkg_os_session.r_dragon_session_control  :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_ptp_id                              object.object_id%type;
     v_policy_transaction_id               object.object_id%type;
     v_policy_term_id                      object.object_id%type;
     v_term_pref_pay_profile               object.object_id%type;
     v_ba_pref_pay_profile                 object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_payment_profile_id                  object.object_id%type;

     v_policy_billing_method               object_bv_value.business_variable_value%type;

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_datamart_tf                         char(1) := 'T';
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing         number;
     -- kiran end OSPRODUCT-29368 / 29370 
     --kiran start OSPRODUCT-35200
     v_ptp_bill_plan_enabled_tf            number default g_No;
     --kiran end OSPRODUCT-35200    
	 
begin

     -- Get the Billing Account ID
     v_billing_account_id := in_billing_account_id;

     -- Get policy transaction ID
     v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     pkg_os_constant.gobjType_PolicyTransaction
                                );

     begin

          begin

               select
                    pt.ptp_id,
                    pt.policy_term_id
               into
                    v_ptp_id,
                    v_policy_term_id
               from
                    dragon_policy_trx pt
               where
                    pt.policy_trx_id = v_policy_transaction_id;

          exception

               when others then
                    null;

          end;

          if v_policy_transaction_id is null then

               v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_action_object_id,
                                               pkg_os_constant.gobjType_PolicyTransaction
                                          );

          end if;

          if v_policy_term_id is null then

               v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_transaction_id,
                                        pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                   );

          end if;

     end;

     -- Policy Billing Method
     v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_ptp_id,
                                     pkg_db_constant.gbv_PTP_BillingMethod -- Broker Or Customer Billed Policy?
                                );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Billing Account ID: ' || v_billing_account_id ||
               '...PTP ID; '             || v_ptp_id                     ||
               '...Action Object ID: '   || in_action_object_id          ||
               '...Billing Method: '     || v_policy_billing_method      ||
               '...Policy Term ID: '     || v_policy_term_id             ||
               '...Policy Trx ID: '      || v_policy_transaction_id      ||
               '...Profile ID: '         || in_cash_transfer_profile_id
          );

     end if;

     --kiran start OSPRODUCT-35200 commenting the below if logic and added new condition    
     
     /*
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_ptp_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                       );     
     -- kiran end OSPRODUCT-29368 / 29370
     
     -- If not direct billed return
     if in_action_object_id is not null
        and
        v_policy_billing_method != 1
        -- kiran start OSPRODUCT-29368 / 29370
        and
        v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_No
        -- kiran end OSPRODUCT-29368 / 29370          
      */
      
      v_ptp_bill_plan_enabled_tf   := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_ptp_id,
                                            PKG_DB_CONSTANT.gbv_PTPBillPlanEnabledTF
                                      ); 
                                      
     if v_session_control.gLogging_Full
     then
           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '.. in_action_object_id: ' || in_action_object_id ||    
                ' v_ptp_bill_plan_enabled_tf:'||v_ptp_bill_plan_enabled_tf
           );
     end if;                                         
     if in_action_object_id is not null and nvl( v_ptp_bill_plan_enabled_tf, g_No ) = g_No
                                      
     --kiran end OSPRODUCT-35200          

     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    --kiran start OSPRODUCT-35200
                    --'...Leaving the process of disbursement profile creation (it is for Direct Billed policies only.) '
                    '...Exit the process of disbursement profile creation as bill plan is not enabled. (v_ptp_bill_plan_enabled_tf):'|| v_ptp_bill_plan_enabled_tf
                    --kiran end OSPRODUCT-35200
               );
          end if;

          return;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Cash Transfer Profile: ' || in_cash_transfer_profile_id

          );
     end if;

     if in_cash_transfer_profile_id is null then -- not recommended

          if in_action_object_id is not null then

               -- Get the term's preferred profile
               v_term_pref_pay_profile := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_policy_term_id,
                                               gbv_TermPreferredPayProfile
                                          );

               -- Get the associated CTF
               v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_term_pref_pay_profile,
                                                  gbv_PPUCashTransferProfUSed
                                             );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Term Preferred Profile: ' || v_cash_transfer_profile_id
                    );

               end if;

          else

               -- Get the Billing Account Preferred profile
               v_ba_pref_pay_profile := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             gbv_BAPreferredPayProfUsage
                                        );

               -- Get the associated CTF
               v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ba_pref_pay_profile,
                                                  gbv_PPUCashTransferProfUSed
                                             );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...BA Preferred Profile: ' || v_cash_transfer_profile_id
                    );

               end if;

          end if;

     else

          v_cash_transfer_profile_id := in_cash_transfer_profile_id;

     end if;

     if v_cash_transfer_profile_id is null then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'PPU setup terminated as profile object not found..'
               );

          end if;

          return;

     end if;

     -- Create the PPU object
     pkg_os_object.sp_object_create
     (
           in_session_id,
           in_transaction_id,
           pkg_db_constant.gObjType_PaymentProfileUsage,
           v_billing_account_id,
           v_payment_profile_id
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Payment Profile ID: ' || v_payment_profile_id
          );

     end if;

     -- Object State
     v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := g_ProfileState_Active;
     --v_bv_table(gbv_PPUState).business_variable_value := g_ProfileState_Active;

     -- Stop date
     v_bv_table(gbv_PPUStopDate).business_variable_value := null;

     -- Cash Transfer Profile
     v_bv_table(gbv_PPUCashTransferProfUSed).business_variable_value := v_cash_transfer_profile_id;

     -- BV Setup
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_payment_profile_id,
          v_bv_table
     );

     -- Datamart Update
     pkg_os_datamart.sp_datamart_update_row
     (
           in_session_id,
           in_transaction_id,
           v_payment_profile_id,
           v_datamart_tf
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...BV Setup and datamart updated.'
          );

     end if;

     io_object_id := v_payment_profile_id;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...... Not able to create profile object '
              || ' Error: '
              ||sqlerrm (sqlcode)
          );

          raise;

end sp_create_ppu;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_prf_chnged_for_term_tf
--
--  %USAGE
--    Function to determine if the profile is changed for the the passed in term ID
--    Returns T or F
--
--  %ALGORITHM
--    Determine the change by comparing term's current preferre profile with the new profile.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_policy_term_id                      Policy Term ID
--  %PARAM  in_payment_mode                        New Profile's payment Mode
--  %PARAM  in_new_ctf_id                          New Profile object
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_prf_chnged_for_term_tf
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_policy_term_id                     in             object.object_id%type,
     in_payment_mode                       in             char,
     in_new_ctf_id                         in             object.object_id%type
)return char
as
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_prf_chnged_for_term_tf';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_term_preferred_pay_profile          object.object_id%type;
     v_pay_profile_ctf_id                  object.object_id%type;
     v_pay_profile_ctf_details             object_bv_value.business_variable_value%type;
     v_new_ctf_details                     object_bv_value.business_variable_value%type;
     v_profile_payment_mode                char(1);
     v_profile_changed_tf                  char(1) := 'T';

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Calculating change profile flag for term: ' || in_policy_term_id ||
               '.. New Profile: '                              || in_new_ctf_id     ||
               '.. Mode: '                             || in_payment_mode
          );

     end if;

     -- Get the term preferred profile
     v_term_preferred_pay_profile := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_policy_term_id,
                                          gbv_TermPreferredPayProfile
                                     );

     if v_term_preferred_pay_profile is not null then

          -- Get the associated CTF
          v_pay_profile_ctf_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_term_preferred_pay_profile,
                                       gbv_PPUCashTransferProfUSed
                                  );

          -- Get the mode
          v_profile_payment_mode := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_pay_profile_ctf_id,
                                         gbv_CTFPaymentMode
                                    );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Current Profile id: ' || v_pay_profile_ctf_id ||
                    '..Current Profile mode: ' || v_profile_payment_mode
               );

          end if;

          if v_profile_payment_mode = in_payment_mode then

               if v_profile_payment_mode != g_PaymentMode_Cheque then

                    if v_pay_profile_ctf_id = in_new_ctf_id then

                         v_profile_changed_tf := 'F';

                    else

                         -- Get preferred profile details
                         v_pay_profile_ctf_details := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_pay_profile_ctf_id,
                                                           gbv_CTFProfileDetails
                                                      );

                         -- Get new profile details
                         v_new_ctf_details := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_new_ctf_id,
                                                   gbv_CTFProfileDetails
                                              );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Term preferred profile detail: ' || v_pay_profile_ctf_details ||
                                   '.. New profile detail: '            || v_new_ctf_details
                              );

                         end if;

                         if v_pay_profile_ctf_details = v_new_ctf_details then

                              v_profile_changed_tf := 'F';

                         end if;

                    end if;

               else

                    v_profile_changed_tf := 'F';

               end if;

          end if;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Changed?: ' || v_profile_changed_tf
          );

     end if;

     return v_profile_changed_tf;

end fn_prf_chnged_for_term_tf;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_prf_chnged_for_termpayer_tf
--
--  %USAGE
--    Function to determine if the profile is changed for the the passed in term payer ID
--    Returns T or F
--
--  %ALGORITHM
--    Determine the change by comparing term's current preferred profile with the new profile.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_term_payer_id                       Policy Term Payer ID
--  %PARAM  in_payment_mode                        New Profile's payment Mode
--  %PARAM  in_new_ctf_id                          New Profile object
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_prf_chnged_for_termpayer_tf
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_term_payer_id                      in             object.object_id%type,
     in_payment_mode                       in             char,
     in_new_ctf_id                         in             object.object_id%type
)return char
as

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_prf_chnged_for_termpayer_tf';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payer_preferred_pay_profile         object.object_id%type;
     v_pay_profile_ctf_id                  object.object_id%type;
     v_pay_profile_ctf_details             object_bv_value.business_variable_value%type;
     v_new_ctf_details                     object_bv_value.business_variable_value%type;
     v_profile_changed_tf                  char(1) := 'T';
     v_profile_payment_mode                char(1);

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Calculating change profile flag for term: ' || in_term_payer_id ||
               '.. New Profile: '                              || in_new_ctf_id    ||
               '.. Mode: '                             || in_payment_mode
          );

     end if;

     -- Get the term preferred profile
     v_payer_preferred_pay_profile := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_term_payer_id,
                                          gbv_TermPayerPrefPayProf
                                     );

     if v_payer_preferred_pay_profile is not null then

          -- Get the current profile CTF from the term
          v_pay_profile_ctf_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_payer_preferred_pay_profile,
                                       gbv_PPUCashTransferProfUSed
                                  );

          -- Get the mode
          v_profile_payment_mode := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_pay_profile_ctf_id,
                                         gbv_CTFPaymentMode
                                    );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Current Profile id: ' || v_pay_profile_ctf_id ||
                    '..Current Profile mode: ' || v_profile_payment_mode
               );

          end if;

          if v_profile_payment_mode = in_payment_mode then

               if v_profile_payment_mode != g_PaymentMode_Cheque then

                    if v_pay_profile_ctf_id = in_new_ctf_id then

                         v_profile_changed_tf := 'F';

                    else

                         -- Get preferred profile details
                         v_pay_profile_ctf_details := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_pay_profile_ctf_id,
                                                           gbv_CTFProfileDetails
                                                      );

                         -- Get new profile details
                         v_new_ctf_details := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_new_ctf_id,
                                                   gbv_CTFProfileDetails
                                              );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Term preferred profile detail: ' || v_pay_profile_ctf_details ||
                                   '.. New profile detail: '            || v_new_ctf_details
                              );

                         end if;

                         if v_pay_profile_ctf_details = v_new_ctf_details then

                              v_profile_changed_tf := 'F';

                         end if;

                    end if;

               else
                    v_profile_changed_tf := 'F';

               end if;

          end if;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Changed?: ' || v_profile_changed_tf
          );

     end if;

     return v_profile_changed_tf;

end fn_prf_chnged_for_termpayer_tf;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_policy_prf_setup_nb_pnbt
--
--  %USAGE
--    Procedure to set up new profile during NB or PNBT workflow
--    Add the profile as preferred and recurring.
--    Puts a stop date on existing preferred profile.
--
--  %ALGORITHM
--    Not provided
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_policy_trx_id                       Policy Transaction ID
--  %PARAM  in_action_object_id                    PTP, PTPPAyer
--  %PARAM  io_action_outcome_id                   Action outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_policy_prf_setup_nb_pnbt
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_policy_trx_id                      in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type,
     v_rollback_trx_tf                     in             char default 'F'
)
is

     v_session_control                     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                      constant system_log.program_name%type := pkg_name || 'sp_policy_prf_setup_nb_pnbt';

     v_action_object_type_id               object_type.object_type_id%type;

     v_prior_term_id                       object.object_id%type;
     v_policytrx_id                        object.object_id%type;  -- GCNA-2503
     v_quotetrx_id                         object.object_id%type;  -- GCNA-2503
     v_basis_trx_id                        object.object_id%type;
     v_policy_term_id                      object.object_id%type;
     v_policy_image_id                     object.object_id%type;
     v_policy_id                           object.object_id%type;  -- GCNA-2503
     v_ultimate_customer_id                object.object_id%type;
     v_primary_entity_id                   object.object_id%type;
     v_action_object_id                    object.object_id%type;
     v_associated_term_payer               object.object_id%type;
     v_payer_billing_account_id            object.object_id%type;
     v_cust_billing_account_id             object.object_id%type;
     v_billing_account_id                  object.object_id%type;
     v_ptp_payer_id                        object.object_id%type;
     v_new_profile_id                      object.object_id%type;
     v_policy_prior_term_id                object.object_id%type;
     v_policy_prior_termpayer_id           object.object_id%type;
     v_priorterm_preferred_profile         object.object_id%type;
     v_old_bord_policy                     object.object_id%type;
     v_count                               number;
     v_cash_trsp_prf_id                    object.object_id%type;
     v_policy_disb_prfl_usg_id             object.object_id%type;
     v_policy_pmnt_prfl_usg_id             object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type; -- UTPRODUCT-3791
     v_pay_prof_usg_updt_id                object.object_id%type;
     v_disb_prof_usg_updt_id               object.object_id%type;
     v_profile_usage_id                    object.object_id%type;
     v_profile_template_id                 object.object_id%type;
     v_basis_image_id                      object.object_id%type; -- OSPRODUCT-8154
     --OSPRODUCT-2459
     v_chosen_bill_plan_id                 object.object_id%type;
     -- 5906
     v_created_from                        object.object_id%type;
     v_requested_by_ba_trx_set             object.object_id%type;

     v_policy_transaction_type             object_bv_value.business_variable_value%type;
     v_policy_billing_method               object_bv_value.business_variable_value%type;
     v_payment_mode                        object_bv_value.business_variable_value%type;
     v_payment_type                        object_bv_value.business_variable_value%type; -- new/existing
     v_billing_account_type_id             object_bv_value.business_variable_value%type;

     v_ptp_multipayer_enabled_tf           char(1);
     v_bill_plan_enabled_tf                char(1);
     v_change_pay_profile_tf               char(1);
     v_prior_billing_method_id             char(1);
     v_prf_sanity_chk_code                 object_bv_value.business_variable_value%type;
     v_new_term_setup_tf                   char(1);
     v_profile_changed_tf                  char(1);
     v_down_pmnt_profile_tf                char(1);

     -- 4031 | Performance fix
     --v_payer_list                          pkg_db_multipayer.t_payer_tab;
     v_ba_profile_config                   t_ba_profile_config;
     v_ptp_payer_list                      pkg_os_object.t_object_list;
     v_ba_profile_batch                    t_ba_profile_batch;

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_payer_index                         number;
     v_ba_idx                              varchar2(100);
     v_ba_profile_idx                      varchar2(100);

     v_datamart_tf                         char(1) := 'T';
     v_ptp_effective_date                  date;
     -- OSPRODUCT-4319
     v_default_chq_profile_tf              char(1) := null;
     v_payer_valid_tf                      char(1) := null;
     
     -- OSPRODUCT-30602 renamed
     v_do_not_save_tf                      char(1) := null;
     v_override_nb_pnbt_profile            char;
     v_disb_profile_Check_tf               pd_property.pd_property_value%type := nvl(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_trx_id, pkg_db_constant.gDisbursementProfileCheckTF),'F');        --UTPRODUCT-2828
     v_disb_cash_transfer_profile_id       object.object_id%type; --UTPRODUCT-2828

     v_prf_setup_details_plchldr           object.object_id%type;
     v_object_cache                        pkg_os_object_cache.t_object_cache;
     v_batch_entry_method                  object_bv_value.business_variable_value%type; --OSPRODUCT-9906
     v_term_expiry_date                    date; --UTXPRODUCT-67
     v_trx_process_date                    date; --UTXPRODUCT-67
     v_new_prf_state_id                    number; -- OSPRODUCT-17719
     v_new_prf_expired_tf                  char(1); -- OSPRODUCT-17719    
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing         number;
     -- kiran end OSPRODUCT-29368 / 29370	 
     --kiran start OSPRODUCT-35200
     v_ptp_bill_plan_enabled_tf            number default g_No;
     --kiran end OSPRODUCT-35200   	 

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Starting profile setup..'
          );

     end if;

     -- Get the action object type id
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );

     -- 4031 | Performance fix
     begin

          select
               pt.policy_trx_type_id,
               pt.policy_id,
               pt.ptp_id,
               pt.policy_term_id
          into
               v_policy_transaction_type,
               v_policy_id,
               v_policy_image_id,
               v_policy_term_id
          from
               dragon_policy_trx pt
          where
               pt.policy_trx_id = in_policy_trx_id;

     exception

          when others then
               null;
     end;

     -- Policy Billing Method
     v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_cs_profiles.gbv_PolicyBillingMethod
                                   );

     v_requested_by_ba_trx_set := pkg_os_object_io.fn_object_bv_get
                                      (
                                      in_session_id,
                                      in_transaction_id,
                                      in_policy_trx_id,
                                      pkg_db_constant.gbv_Ref_PTRefBillingAccTrxSet
                                   );
								   
     --kiran start OSPRODUCT-35200 commenting the below if logic and added new condition    
     /*     
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                       ); 
     -- kiran end OSPRODUCT-29368 / 29370
     --  kiran start OSPRODUCT-28998 - commenting the if logic                                       
     if --v_policy_billing_method = pkg_db_billing_modify.gBillingMethod_Direct --kiran OSPRODUCT-28998 commenting the line
     -- kiran start OSPRODUCT-29368 / 29370
          --or--kiran OSPRODUCT-28998 commenting the line
        v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_Yes
     -- kiran end OSPRODUCT-29368 / 29370  
     then   --kiran OSPRODUCT-28998 commenting the line
     --  kiran end OSPRODUCT-28998  
      */
      
      v_ptp_bill_plan_enabled_tf   := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            PKG_DB_CONSTANT.gbv_PTPBillPlanEnabledTF
                                      ); 
     if v_session_control.gLogging_Full
     then
           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                ' v_ptp_bill_plan_enabled_tf:'||v_ptp_bill_plan_enabled_tf
           );
     end if;                                         
                                      
     if nvl( v_ptp_bill_plan_enabled_tf ,g_No) = g_Yes   then
     
     --kiran end OSPRODUCT-35200   

          begin

               if v_policy_transaction_type is null then

                    -- Get the transaction type
                    v_policy_transaction_type := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      in_policy_trx_id,
                                                      pkg_os_constant_bv.gbv_PolicyTranType
                                                 );

               end if;

               if v_policy_term_id is null then

                    -- Get the policy Term ID
                    v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                        );

               end if;

          end;
          
          --UTXPRODUCT-67 start
          v_term_expiry_date := to_date(pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_policy_term_id, pkg_db_billing_modify.gbv_PolicyTermExpDate),pkg_os_constant.DragonDateFormatDefault);
          v_trx_process_date := NVL(to_date(pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_policy_trx_id, PKG_OS_POLICY_TRANSACTION.gbv_PolicyTrxProcessDate),pkg_os_constant.DragonDateFormatDefault),sysdate);
                                                            

          -- Get the customer's billing account id
          v_ultimate_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_policy_image_id
                                    );

          -- Get the Primary Customer Entity
          v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_ultimate_customer_id,
                                      pkg_db_constant.gbv_CustRefPrimaryEntity
                                 );

          -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
          v_cust_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_entity_id,
                                            pkg_db_constant.gObjType_BillingAccount
                                       );

          v_ptp_effective_date := to_date ( pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_policy_image_id,
                                                504
                                           ),pkg_os_constant.DragonDateFormatDefault
                                      );

          -- Multipayer enabled?
          v_ptp_multipayer_enabled_tf := nvl
											(
												pkg_os_object_io.fn_object_bv_get
												(
													 in_session_id,
													 in_transaction_id,
													 v_policy_image_id,
													 pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
												),
												g_No
											); --Added nvl condition OSPRODUCT-33288

          -- Bill Plan Enabled?
          v_bill_plan_enabled_tf :=  pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policy_image_id,
                                          pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF
                                     );

          -- if basis trx is null get the value from quote trx
          v_basis_trx_id := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_policy_trx_id,
                                 22605205 -- basis trx id
                            );

          if v_basis_trx_id is not null then

               begin

                    select
                         pt.policy_term_id
                    into
                         v_prior_term_id
                    from
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_basis_trx_id;

               exception

                    when others then
                         null;
               end;

               if v_prior_term_id is null then

                    -- Get the policy Term ID
                    v_prior_term_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_basis_trx_id,
                                             pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                        );

               end if;

               if v_prior_term_id != v_policy_term_id then

                    v_new_term_setup_tf := g_Yes;

               else

                    v_new_term_setup_tf := g_No;

               end if;

          else

               v_new_term_setup_tf := g_Yes;

          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Master Policy ID: '      || v_policy_id ||
                    '.. Policy Transaction ID: ' || in_policy_trx_id ||
                    '.. Policy Image ID: '       || v_policy_image_id ||
                    '.. Customer Billing Account ID: ' || v_cust_billing_account_id ||
                    '.. Multipayer Enabled? '          || v_ptp_multipayer_enabled_tf ||
                    '.. Bill Plan Enabled? '           || v_bill_plan_enabled_tf      ||
                    '.. Policy Billing Method: '       || v_policy_billing_method ||
                    '.. Transaction Type: '            || v_policy_transaction_type ||
                    '.. PTP effective date: '          || v_ptp_effective_date      ||
                    '.. New Term Setup?: '             || v_new_term_setup_tf
               );

          end if;

          -- 1. Prepare the list to get the configuration details for each BA
          begin

               -- if multipayer and bill plan enabled
               if v_ptp_multipayer_enabled_tf = g_Yes
                  and
                  v_bill_plan_enabled_tf = g_Yes
               then

                    --v_payer_list.delete;
                    v_ptp_payer_list.delete;

                    if v_action_object_type_id <> pkg_db_constant.gobjType_PTPPayer then

                         /*pkg_db_multipayer.sp_ptp_payers_get
                         (
                              in_session_id         => in_session_id,
                              in_transaction_id     => in_transaction_id,
                              in_ptp_object_id      => v_policy_image_id,
                              io_payer_list         => v_payer_list,           -- indexed by chosen pay plan ID
                              in_print_list         => 'Y',
                              in_index_by           => pkg_db_multipayer.g_PayerGet_idx_BilingAccount
                         );*/

                         -- 4031 | Performance fix
                         pkg_os_object_search.sp_object_children_of_type_get
                         (
                              in_session_id              =>    in_session_id,
                              in_transaction_id          =>    in_transaction_id,
                              in_object_id               =>    v_policy_image_id,
                              in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
                              in_object_list             =>    v_ptp_payer_list
                         );

                    else

                         v_ptp_payer_list(v_ptp_payer_list.count + 1) := in_action_object_id;

                    end if;

                    v_payer_index := v_ptp_payer_list.first;

                    -- For each payer
                    while v_payer_index is not null loop

                         begin

                              select
                                   payer.billing_account_id
                              into
                                   v_billing_account_id
                              from
                                   dragon_ptp_payer payer
                              where
                                   payer.ptp_payer_id = v_ptp_payer_list(v_payer_index);

                         exception
                              when others then
                                   null;

                         end;

                         begin

                              if v_billing_account_id is null then

                                   v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                pkg_os_object_io.fn_object_bv_get
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_ptp_payer_list(v_payer_index),
                                                                     pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                                ),
                                                                pkg_db_constant.gObjType_BillingAccount
                                                           );

                              end if;

                         end;

                         v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_billing_account_id,
                                                           pkg_db_billing_modify.gbv_BillingAccountType
                                                      ); -- BA type

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Payer Billing Account ID: ' ||v_billing_account_id||
                                   '... Account Type: '             ||v_billing_account_type_id
                              );

                         end if;

                         -- Setup profile for customer account only
                         -- Preferred profile setup - Recurring
                         begin

                              if v_billing_account_id is not null
                                 and
                                 v_billing_account_type_id = pkg_db_constant.gBillingAcType_Customer
                              then

                                   -- Payer
                                   v_ptp_payer_id := v_ptp_payer_list(v_payer_index);

                                   -- Term Payer
                                   -- UTPRODUCT-4211
                                   v_associated_term_payer := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_ptp_payer_id,
                                                                   gbv_AssociatedTermPayer
                                                              );

                                   -- OSPRODUCT-5906
                                   v_payer_valid_tf := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_ptp_payer_id,
                                                           32993324 -- payer valid tf
                                                       );

                                   -- Change Pay Profile Flag
                                   v_profile_changed_tf := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                v_ptp_payer_id,
                                                                pkg_db_payment_arrangement.gbv_PTPPayerChangePayProfileTF
                                                           );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... Payer ID: ' || v_ptp_payer_id ||
                                             '... Change Profile? ' || v_profile_changed_tf ||
                                             '... Payer Valid? '    || v_payer_valid_tf
                                        );

                                   end if;

                                   -- Special handelling when changing from single payer to multi-payer
                                   -- OSPRODUCT-7172 start
                                   -- get the ultimate template of the payer
                                   if v_profile_changed_tf is null then

                                        v_created_from := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_ptp_payer_id,
                                                              26725601
                                                          );

                                        v_basis_image_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_basis_trx_id,
                                                                 212318
                                                            );
                                        if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_created_from) = pkg_os_constant.gobjType_PolicyTrxPolicy
                                           and
                                           -- OSPRODUCT-8154
                                           not pkg_db_multipayer.fn_multipayer_mode_tf(in_session_id, in_transaction_id, v_basis_image_id)
                                        then

                                             -- OSPRODUCT-5906
                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '... Created from?: ' || v_created_from
                                                  );

                                             end if;

                                             -- get the created trx
                                             if v_payer_valid_tf = g_No
                                                or
                                                -- OSPRODUCT-21509
                                                (
                                                     v_new_term_setup_tf = g_No
                                                     and
                                                     pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_policy_term_id,
                                                          gbv_TermPreferredPayProfile
                                                     ) is not null
                                                )
                                                or
                                                (
                                                     v_new_term_setup_tf = g_Yes
                                                     and
                                                     pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_prior_term_id,
                                                          gbv_TermPreferredPayProfile
                                                     ) is not null
                                                )
                                                -- end OSPRODUCT-21509                                                
                                             then

                                                  v_payer_valid_tf := g_Yes;
                                                  v_profile_changed_tf := g_Yes;

                                                  if v_session_control.gLogging_Full
                                                  then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '... Copy the profile from Term.'
                                                       );

                                                  end if;

                                             end if;

                                        end if;

                                   end if;

                                   -- OSPRODUCT-5906 if added
                                   if v_payer_valid_tf = g_Yes then

                                        begin

                                             pkg_cs_db_profiles.sp_override_prf_for_nb_pnbt
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_payer_id,
                                                  v_billing_account_id,
                                                  v_payment_mode,
                                                  v_new_profile_id,
                                                  v_override_nb_pnbt_profile
                                             );

                                        exception
                                             when others then
                                                  null;

                                        end;

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '... Override NB PNBT Profile: ' || v_override_nb_pnbt_profile
                                             );

                                        end if;

                                        if nvl(v_override_nb_pnbt_profile,'F') = 'F' then

                                             -- end OSPRODUCT-5906 new
                                             /*if v_profile_changed_tf is null
                                                and
                                                v_new_term_setup_tf = g_No
                                             then

                                                  -- OSPRODUCT-5906
                                                  v_associated_term_payer := pkg_os_object_io.fn_object_bv_get
                                                                             (
                                                                                  in_session_id,
                                                                                  in_transaction_id,
                                                                                  v_ptp_payer_id,
                                                                                  gbv_AssociatedTermPayer
                                                                             );

                                                  -- get the ultimate template of the payer
                                                  v_created_from := pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        v_ptp_payer_id,
                                                                        26725601
                                                                    ); -- add declaration of v_created_from

                                                  if v_session_control.gLogging_Full
                                                  then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '... Created from?: ' || v_created_from
                                                       );

                                                  end if;

                                                  --if v_created_from = v_ptp_payer_id then

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_associated_term_payer,
                                                                                gbv_TermPayerPrefPayProf
                                                                           );

                                                       if v_new_profile_id is null then

                                                       v_profile_changed_tf := 1;

                                                  end if;
                                                  -- end OSPRODUCT-5906

                                             end if;
                                             */

                                             -- OSPRODUCT-7172 end
                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '... Profile Changed?: ' || v_profile_changed_tf
                                                  );

                                             end if;

                                             if v_rollback_trx_tf = 'T' then

                                                  if nvl(v_bill_plan_enabled_tf, g_No) = g_Yes then

                                                       v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_ptp_payer_id,
                                                                                     pkg_db_payment_arrangement.gbv_Ref_PTPayerChosenBillPlan
                                                                                );

                                                  end if;

                                                  if v_chosen_bill_plan_id is not null then

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_chosen_bill_plan_id,
                                                                                pkg_db_payment_arrangement.gbv_Ref_PmntArrangementCTF
                                                                           );
                                                                           
                                                       -- OSPRODUCT-17719
                                                       -- Get the object state
                                                       v_new_prf_state_id := pkg_os_object_io.fn_object_bv_get
                                                                             (
                                                                                  in_session_id,
                                                                                  in_transaction_id,
                                                                                  v_new_profile_id,
                                                                                  210153
                                                                             );
                                                                             
                                                       v_new_prf_expired_tf := fn_is_card_expired
                                                                               (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    v_new_profile_id
                                                                               );
                                                                               
                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Profile from current bill plan: ' || v_new_profile_id ||
                                                                 '.. Profile state: '                  || v_new_prf_state_id ||
                                                                 '.. Profile expired?: '               || v_new_prf_expired_tf
                                                            );

                                                       end if;
                                                       -- end OSPRODUCT-17719
                                                                          
                                                  end if;
                                                  
                                                  if v_chosen_bill_plan_id is null 
                                                     or
                                                     v_new_prf_state_id != g_ProfileState_Active --OSPRODUCT-17719
                                                     or
                                                     v_new_prf_expired_tf = 'T' --OSPRODUCT-17719
                                                  then

                                                       -- Term Payer
                                                       v_associated_term_payer := pkg_os_object_io.fn_object_bv_get
                                                                                  (
                                                                                       in_session_id,
                                                                                       in_transaction_id,
                                                                                       v_ptp_payer_id,
                                                                                       gbv_AssociatedTermPayer
                                                                                  );

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_associated_term_payer,
                                                                                     gbv_TermPayerPrefPayProf
                                                                                ),
                                                                                gbv_PPUCashTransferProfUSed
                                                                           );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Term Payer: ' || v_associated_term_payer ||
                                                                 '.. Profile from current term: ' || v_new_profile_id
                                                            );

                                                       end if;

                                                  end if;

                                                  -- OSPRODUCT-2459
                                                  if v_new_profile_id is not null then

                                                       v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_new_profile_id,
                                                                              gbv_CTFPaymentMode
                                                                         );

                                                       v_payment_type := g_Profile_Type_Existing;

                                                  end if;

                                                  -- Check if the profile is changed.
                                                  v_change_pay_profile_tf := fn_prf_chnged_for_termpayer_tf
                                                                             (
                                                                                  in_session_id,
                                                                                  in_transaction_id,
                                                                                  v_associated_term_payer,
                                                                                  v_payment_mode,
                                                                                  v_new_profile_id
                                                                             );

                                             elsif v_new_term_setup_tf = g_No
                                                   and
                                                   v_profile_changed_tf is null
                                             then

                                                  -- OSPRODUCT-8154
                                                  if v_bill_plan_enabled_tf = g_No then

                                                       v_change_pay_profile_tf := 'F';

                                                  else

                                                       -- OSPRODUCT-5906
                                                       v_associated_term_payer := pkg_os_object_io.fn_object_bv_get
                                                                                  (
                                                                                       in_session_id,
                                                                                       in_transaction_id,
                                                                                       v_ptp_payer_id,
                                                                                       gbv_AssociatedTermPayer
                                                                                  );

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_associated_term_payer,
                                                                                gbv_TermPayerPrefPayProf
                                                                           );

                                                       if v_new_profile_id is not null then

                                                            v_change_pay_profile_tf := 'F';

                                                       else


                                                            --UTXPRODUCT-67 start
                                                            if v_session_control.gLogging_Full then
                                                                  pkg_os_logging.sp_log
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_procedure_name,
                                                                           '... Trx process date' || v_trx_process_date || '.. term expiry date: ' || v_term_expiry_date
                                                                      );
                                                            end if;
                                                                 
                                                            if trunc(v_trx_process_date) > trunc(v_term_expiry_date) and NVL(v_policy_transaction_type,0) in (PKG_DB_OBJECT.gBillTrxType_CancelInsured,PKG_DB_OBJECT.gBillTrxType_CancelNonPay) then

                                                                 if v_session_control.gLogging_Full then
                                                                      pkg_os_logging.sp_log
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_procedure_name,
                                                                           '... The default profile associated with the payer is expired. So, using current profile: trx process date' || v_trx_process_date || '.. term expiry date: ' || v_term_expiry_date
                                                                      );
                                                                 end if;
                                                                      
                                                                 if nvl(v_bill_plan_enabled_tf, g_No) = g_Yes then

                                                                      v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                                                               (
                                                                                                    in_session_id,
                                                                                                    in_transaction_id,
                                                                                                    v_ptp_payer_id,
                                                                                                    pkg_db_payment_arrangement.gbv_Ref_PTPayerChosenBillPlan
                                                                                               );

                                                                 end if;

                                                                 if v_chosen_bill_plan_id is not null then

                                                                      v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                          (
                                                                                               in_session_id,
                                                                                               in_transaction_id,
                                                                                               v_chosen_bill_plan_id,
                                                                                               pkg_db_payment_arrangement.gbv_Ref_PmntArrangementCTF
                                                                                          );

                                                                      if v_session_control.gLogging_Full then

                                                                           pkg_os_logging.sp_log
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_procedure_name,
                                                                                '.. Profile from current bill plan: ' || v_new_profile_id
                                                                           );

                                                                      end if;


                                                                 end if;
                                                                 -- end OSPRODUCT-2459

                                                                 -- OSPRODUCT-2459
                                                                 if v_new_profile_id is not null then

                                                                      v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                                        (
                                                                                             in_session_id,
                                                                                             in_transaction_id,
                                                                                             v_new_profile_id,
                                                                                             gbv_CTFPaymentMode
                                                                                        );

                                                                      v_payment_type := g_Profile_Type_Existing;

                                                                      
                                                                 else
                                                                                                                        -- OSPRODUCT-5906
                                                                      v_payment_mode := g_PaymentMode_Cheque;
                                                                      v_default_chq_profile_tf := 'T';

                                                                      
                                                                      
                                                                 end if;
                                                                     

                                                                 -- Check if the profile is changed.
                                                                 v_change_pay_profile_tf := 'T';
                                                                          
                                                                                                                       -- OSPRODUCT-5906
                                                            -- No option to change the profile from UI
                                                            elsif pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                                            then

                                                                 -- OSPRODUCT-5906
                                                                 v_change_pay_profile_tf := 'T';
                                                                 v_payment_mode := g_PaymentMode_Cheque;
                                                                 v_default_chq_profile_tf := 'T';

                                                            else

                                                                 -- OSPRODUCT-8154
                                                                 pkg_os_logging.sp_log_error
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_procedure_name,
                                                                      '... The default profile associated with the payer is expired. Please update it to proceed.. Policy Transaction' || in_policy_trx_id || '.. Payer ID: ' || v_ptp_payer_id || '.. Term Payer ID: ' || v_associated_term_payer
                                                                 );

                                                                 raise no_data_found;

                                                            end if;
                                                     
                                                            --UTXPRODUCT-67 end
                                                       end if;

                                                  end if;
                                                  -- end OSPRODUCT-5906

                                             elsif v_basis_trx_id is not null
                                                   and
                                                   v_new_term_setup_tf = g_Yes
                                                   and
                                                   v_profile_changed_tf is null
                                             then

                                                  -- If not found on for current term, try prior term
                                                  begin

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Prior Term ID: ' || v_prior_term_id
                                                            );

                                                       end if;

                                                       if v_prior_term_id is not null then

                                                            begin

                                                                 begin

                                                                      select
                                                                           term_payer.policy_term_payer_id
                                                                      into
                                                                           v_policy_prior_termpayer_id
                                                                      from
                                                                           dragon_policy_term_payer term_payer
                                                                      where
                                                                           term_payer.policy_term_id = v_prior_term_id
                                                                      and
                                                                           term_payer.payer_billing_account_id = v_billing_account_id;

                                                                 exception

                                                                      when others then
                                                                           null;

                                                                 end;

                                                                 -- OSPRODUCT-16825
                                                                 if v_session_control.gLogging_Full then

                                                                      pkg_os_logging.sp_log
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_procedure_name,
                                                                           '.. Prior term payer ID: ' || v_policy_prior_termpayer_id
                                                                      );

                                                                 end if;

                                                                 -- get the preferred profile
                                                                 v_priorterm_preferred_profile := pkg_os_object_io.fn_object_bv_get
                                                                                                  (
                                                                                                      in_session_id,
                                                                                                      in_transaction_id,
                                                                                                      v_policy_prior_termpayer_id, -- OSPRODUCT-16825
                                                                                                      gbv_TermPayerPrefPayProf
                                                                                                  );

                                                                 if v_priorterm_preferred_profile is not null then

                                                                      v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                          (
                                                                                               in_session_id,
                                                                                               in_transaction_id,
                                                                                               v_priorterm_preferred_profile,
                                                                                               gbv_PPUCashTransferProfUSed
                                                                                          );

                                                                      if v_session_control.gLogging_Full then

                                                                           pkg_os_logging.sp_log
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_procedure_name,
                                                                                '.. Profile from prior term: ' || v_new_profile_id
                                                                           );

                                                                      end if;

                                                                 else

                                                                      -- OSPRODUCT-5906
                                                                      -- No option to change the profile from UI
                                                                      if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                                                         or
                                                                         v_bill_plan_enabled_tf = g_No
                                                                      then

                                                                           -- OSPRODUCT-5906
                                                                           -- v_change_pay_profile_tf := 'T';
                                                                           v_payment_mode := g_PaymentMode_Cheque;
                                                                           v_default_chq_profile_tf := 'T';

                                                                      else

                                                                           -- OSPRODUCT-8154
                                                                           pkg_os_logging.sp_log_error
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_procedure_name,
                                                                                '... The default profile associated with the payer is expired. Please update it to proceed.. Policy Transaction' || in_policy_trx_id || '.. Payer ID: ' || v_ptp_payer_id || '.. Prior Term Payer ID: ' || v_prior_term_id
                                                                           );

                                                                           raise no_data_found;

                                                                      end if;

                                                                 end if;

                                                            end;

                                                       else

                                                            if v_session_control.gLogging_Full then

                                                                 pkg_os_logging.sp_log
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_procedure_name,
                                                                      '.. Prior term not found..'
                                                                 );

                                                            end if;

                                                       end if;

                                                  end;

                                                  -- OSPRODUCT-2459
                                                  if v_new_profile_id is not null then

                                                       v_payment_type := g_Profile_Type_Existing;

                                                       v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_new_profile_id,
                                                                              gbv_CTFPaymentMode
                                                                         );

                                                  end if;
                                                  -- end OSPRODUCT-2459

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Profile ID: ' || v_new_profile_id ||
                                                            '.. Profile Type: ' || v_payment_type ||
                                                            '.. Payment Mode: ' || v_payment_mode
                                                       );

                                                  end if;

                                                  v_change_pay_profile_tf := 'T';


                                             else

                                                  -- Get the down mode
                                                  v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                         in_session_id,
                                                                         in_transaction_id,
                                                                         v_ptp_payer_id,
                                                                         gbv_PTPPayerDwnPmntMode
                                                                    );

                                                  -- OSPRODUCT-7172
                                                  if v_payment_mode is not null then

                                                       if v_session_control.gLogging_Full
                                                       then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '... New profile setup requested..' ||
                                                                 '... Payment Mode: ' || v_payment_mode
                                                            );

                                                       end if;

                                                       -- Mode - Cheque
                                                       if v_payment_mode = g_PaymentMode_Cheque then

                                                            v_payment_type := null;
                                                            v_new_profile_id := null;

                                                       end if;

                                                       -- Mode - Card
                                                       if v_payment_mode = g_PaymentMode_Card then

                                                            v_payment_type := pkg_os_object_io.fn_object_bv_get
                                                                              (
                                                                                   in_session_id,
                                                                                   in_transaction_id,
                                                                                   v_ptp_payer_id,
                                                                                   gbv_PTPPayerCardProfileType
                                                                              );

                                                            if v_payment_type = g_Profile_Type_Existing then -- Existed CC

                                                                 v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_ptp_payer_id,
                                                                                          gbv_Ref_PTPPayerCurrentProfile -- Should be set as initialization rule
                                                                                     );

                                                                 if pkg_os_object.fn_object_type_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_new_profile_id
                                                                           ) != pkg_db_constant.gObjType_CashTransferProfile
                                                                 then

                                                                      v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                          (
                                                                                               in_session_id,
                                                                                               in_transaction_id,
                                                                                               v_new_profile_id,
                                                                                               gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                                                                          );

                                                                 end if;

                                                            end if;

                                                            if v_payment_type = g_Profile_Type_New then -- Existed CC

                                                                 v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_ptp_payer_id,
                                                                                          gbv_Ref_PTPPayerCardPlchldr          --33993546  _Ref_Placeholder CashTransferProfile for CC
                                                                                     );

                                                                 pkg_os_object_io.sp_object_bv_set
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_new_profile_id,
                                                                      gbv_CTFPaymentMode,
                                                                      g_PaymentMode_Card
                                                                 );

                                                            end if;

                                                       end if;

                                                       -- Mode - EFT
                                                       if v_payment_mode = g_PaymentMode_EFT then

                                                            v_payment_type := pkg_os_object_io.fn_object_bv_get
                                                                              (
                                                                                   in_session_id,
                                                                                   in_transaction_id,
                                                                                   v_ptp_payer_id,
                                                                                   gbv_PTPPayerEFTProfileType
                                                                              );

                                                            if v_payment_type = g_Profile_Type_Existing then -- Existed CC

                                                                 v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_ptp_payer_id,
                                                                                          gbv_Ref_PTPPayerCurrentProfile -- Should be set as initialization rule
                                                                                     );

                                                                 if pkg_os_object.fn_object_type_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_new_profile_id
                                                                           ) != pkg_db_constant.gObjType_CashTransferProfile
                                                                 then

                                                                      v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                          (
                                                                                               in_session_id,
                                                                                               in_transaction_id,
                                                                                               v_new_profile_id,
                                                                                               gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                                                                          );

                                                                 end if;

                                                            end if;

                                                            if v_payment_type = g_Profile_Type_New then -- Existed CC

                                                                 v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_ptp_payer_id,
                                                                                          gbv_Ref_PTPPayerEFTPlchldr          --33993546  _Ref_Placeholder CashTransferProfile for CC
                                                                                     );

                                                                 pkg_os_object_io.sp_object_bv_set
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_new_profile_id,
                                                                      gbv_CTFPaymentMode,
                                                                      g_PaymentMode_EFT
                                                                 );

                                                            end if;

                                                       end if;

                                                  -- OSPRODUCT-7172 start
                                                  else

                                                       if nvl(v_bill_plan_enabled_tf, g_No) = g_Yes
                                                       then

                                                            v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_ptp_payer_id,
                                                                                          pkg_db_payment_arrangement.gbv_Ref_PTPayerChosenBillPlan
                                                                                     );

                                                       end if;

                                                       if v_chosen_bill_plan_id is not null then

                                                            v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_chosen_bill_plan_id,
                                                                                     pkg_db_payment_arrangement.gbv_Ref_PmntArrangementCTF
                                                                                );

                                                            if v_session_control.gLogging_Full then

                                                                 pkg_os_logging.sp_log
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_procedure_name,
                                                                      '.. Profile from current bill plan: ' || v_new_profile_id
                                                                 );

                                                            end if;

                                                            v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                              (
                                                                                   in_session_id,
                                                                                   in_transaction_id,
                                                                                   v_new_profile_id,
                                                                                   gbv_CTFPaymentMode
                                                                              );

                                                            v_payment_type := g_Profile_Type_Existing;

                                                       end if;

                                                  end if;
                                                  -- OSPRODUCT-7172 end
                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Profile ID: ' || v_new_profile_id ||
                                                            '.. Profile Type: ' || v_payment_type ||
                                                            '.. Payment Mode: ' || v_payment_mode
                                                       );

                                                  end if;

                                                  if v_new_term_setup_tf = g_Yes then

                                                       v_change_pay_profile_tf := 'T';

                                                  else

                                                       -- Check if the profile is changed.
                                                       v_change_pay_profile_tf := fn_prf_chnged_for_termpayer_tf
                                                                                  (
                                                                                       in_session_id,
                                                                                       in_transaction_id,
                                                                                       v_associated_term_payer,
                                                                                       v_payment_mode,
                                                                                       v_new_profile_id
                                                                                  );

                                                  end if;

                                             end if;

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Change Profile Flag: '    || v_change_pay_profile_tf
                                                  );

                                             end if;

                                             if v_change_pay_profile_tf = 'T'
                                                and
                                                (
                                                     v_payment_mode is null
                                                     or
                                                     (
                                                          v_payment_mode in (g_PaymentMode_Card, g_PaymentMode_EFT)
                                                          and
                                                          v_new_profile_id is null
                                                     )
                                                )
                                             then

                                                  /*pkg_os_logging.sp_log_error
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Could not find profile details to setup.. Payment Mode: ' || v_payment_mode || '.. Placeholder: ' || v_new_profile_id
                                                  );*/

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log_error
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '..The request is to set up a new ' || pkg_os_lookup.fn_lookup_list_text_get(5390346, v_payment_mode)  || 
                                                            ' Profile but sufficient information is missing to complete the setup. Since its a non-ui execution proceeding with cheque profile setup, 
                                                            please change the profile if required. 
                                                            Debug details - profile mode:' || v_payment_mode ||
                                                            '..Profile type: ' ||  v_payment_type ||
                                                            '..Placeholder: ' || v_new_profile_id || 
                                                            '..billing account id: ' || v_cust_billing_account_id ||
                                                            '..Policy id: ' || v_policy_id ||
                                                            '..transaction type: ' || v_policy_transaction_type ||
                                                            '..Payer id: ' || v_ptp_payer_id || 
                                                            '..Payer type: ' || pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_ptp_payer_id, pkg_db_multipayer.gbv_PTPPayer_PayerType) ||
                                                            '..ui session flag:  '||  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, pkg_os_constant_bv.gbv_SessionCreatedByUI_TF) 
                                                       );

                                                  end if;
												  
												  if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                                  then

                                                       -- OSPRODUCT-5906
                                                       -- v_change_pay_profile_tf := 'T';
                                                       -- 
                                                       v_payment_mode := g_PaymentMode_Cheque;
                                                       v_default_chq_profile_tf := 'T'; -- OSPRODUCT-19527
                                                       
                                                  end if;

                                             end if;

                                             if v_change_pay_profile_tf = 'T' then

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Profile Changed for Payer''s : ' || v_ptp_payer_id ||
                                                            '.. associated term payer: '         || v_associated_term_payer
                                                       );

                                                  end if;
                                                  
                                                  -- OSPRODUCT-30602
                                                  -- Additional check to make sure we are not adding an adhoc profile to the recurring wf                                   
                                                  v_do_not_save_tf := nvl
																		(	
																			pkg_os_object_io.fn_object_bv_get
																			(
																				in_session_id,
																				in_transaction_id,
																				v_new_profile_id,
																				gbv_CTFAdhocRecurring
																			),
																			g_No 
																		);  --Added nvl condition OSPRODUCT-33288
                                                                      
                                                  if v_do_not_save_tf = g_Yes 
                                                     or
                                                     pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_new_profile_id, gbv_CTFRecurranceMode ) = g_RecurrencyMode_Adhoc                              
                                                  then
                                                       -- OSPRODUCT-33496 start
                                                       --if v_session_control.gLogging_Full then

															pkg_os_logging.sp_log_error
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. The profile is marked to not to be used for any future transactions hence should be not set as the recurring profile.. ' ||
                                                                 '.. Multipayer Flag: ' || v_ptp_multipayer_enabled_tf ||
                                                                 '.. Bill Plan Flag: '  || v_bill_plan_enabled_tf ||
                                                                 '.. Profile ID: '      || v_new_profile_id ||
                                                                 '.. Prior Term ID: '   || v_prior_term_id ||
                                                                 '.. Prior term pref profile: ' || v_priorterm_preferred_profile ||
                                                                 '.. Adhoc flag: '              || v_do_not_save_tf ||
                                                                 '.. Recurrency mode at CTF: '  || pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_new_profile_id, gbv_CTFRecurranceMode ) ||
                                                                 '.. Transaction ID: '          || in_policy_trx_id ||
                                                                 '.. Term ID: '                 || v_policy_term_id ||
                                                                 '.. Payer ID: '                || v_ptp_payer_id
                                                            );

                                                       --end if;
                                                       -- OSPRODUCT-33496 end
													   
                                                       raise PROFILE_SETUP_ERROR;  
                                                       
                                                  else

                                                       -- Add the details
                                                       v_ba_profile_idx := v_ba_profile_config.count + 1;

                                                       -- Add the details
                                                       v_ba_profile_config(v_ba_profile_idx).action_object_id := v_ptp_payer_id;
                                                       v_ba_profile_config(v_ba_profile_idx).action_object_type_id := pkg_db_constant.gobjType_PTPPayer;
                                                       v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
                                                       v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
                                                       v_ba_profile_config(v_ba_profile_idx).profile_type := v_payment_type;
                                                       v_ba_profile_config(v_ba_profile_idx).ctf_id := v_new_profile_id; -- placeholder

                                                       if v_billing_account_id = v_cust_billing_account_id then

                                                            v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := 'T';

                                                       else

                                                            v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := 'F';

                                                       end if;
                                                       
                                                  end if;

                                             else

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Profile not changed for Payer''s : ' || v_ptp_payer_id ||
                                                            '.. associated term payer: '             || v_associated_term_payer
                                                       );

                                                  end if;

                                                  declare

                                                       v_card_plchldr_id     object.object_id%type;
                                                       v_eft_plchldr_id      object.object_id%type;
                                                       v_prfsetup_plchldr_id object.object_id%type;

                                                  begin

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Placeholder cleanup..'
                                                            );

                                                       end if;

                                                       v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_action_object_id,
                                                                                     gbv_Ref_PTPPayerPlchldrPrfInpt
                                                                                );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                                            );

                                                       end if;

                                                       pkg_os_object.sp_object_delete
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            null,
                                                            v_prfsetup_plchldr_id,
                                                            null
                                                       );

                                                       v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                            (
                                                                                 in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_action_object_id,
                                                                                 gbv_Ref_PTPPayerCardPlchldr -- placeholder for cc
                                                                            );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                                            );

                                                       end if;

                                                       pkg_os_object.sp_object_delete
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            null,
                                                            v_card_plchldr_id,
                                                            null
                                                       );

                                                       v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                            (
                                                                                 in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_action_object_id,
                                                                                 gbv_Ref_PTPPayerEFTPlchldr
                                                                            );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                                            );

                                                       end if;

                                                       pkg_os_object.sp_object_delete
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            null,
                                                            v_eft_plchldr_id,
                                                            null
                                                       );

                                                  end;

                                             end if;

                                        end if;

                                   end if; -- OSPRODUCT-5906 if end

                              -- UTPRODUCT-3822
                              elsif v_billing_account_type_id != pkg_db_constant.gBillingAcType_Customer then

                                   if pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_billing_account_id,
                                           gbv_BAPreferredPayProfUsage
                                      ) is null
                                   then

                                        declare

                                        v_ba_plchldr_cheque_ctf object.object_id%type;

                                        begin
                                             -- get the cheque plaeceholdr
                                             -- Cheque Placeholder
                                             v_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                                                        (
                                                                             in_session_id,
                                                                             in_transaction_id,
                                                                             v_billing_account_id,
                                                                             gbv_BACTFPlchldrCheque
                                                                        );

                                             if v_ba_plchldr_cheque_ctf is null then

                                                  -- OSPRODUCT-6036
                                                  pkg_os_object.sp_object_create
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       pkg_db_constant.gObjType_CashTransferProfile,
                                                       v_billing_account_id,
                                                       v_ba_plchldr_cheque_ctf
                                                  );

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            'Cheque placeholder created: ' || v_ba_plchldr_cheque_ctf
                                                       );

                                                  end if;

                                                  -- set the mode to Cash/Cheque
                                                  pkg_os_object_io.sp_object_bv_set
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_ba_plchldr_cheque_ctf,
                                                       gbv_CTFPaymentMode,
                                                       g_PaymentMode_Cheque
                                                  );

                                                  pkg_os_object_io.sp_object_bv_set
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_billing_account_id,
                                                       gbv_BACTFPlchldrCheque,
                                                       v_ba_plchldr_cheque_ctf
                                                  );

                                             end if;

                                             -- set the required BVs
                                             -- get the ref BV value for Cash/Cheque placeholders Mode (credit card / eft / bill me)
                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ba_plchldr_cheque_ctf,
                                                  gbv_CTFPaymentMode,
                                                  1
                                             );

                                             -- Preferred?
                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ba_plchldr_cheque_ctf,
                                                  gbv_CTFPreferredTF,
                                                  g_Yes
                                             );

                                             -- Profile Type
                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ba_plchldr_cheque_ctf,
                                                  gbv_CTFProfileType,
                                                  g_Profile_Type_Both
                                             );

                                             sp_ba_profile_setup
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  io_action_outcome_id
                                             );
                                        end;

                                   end if;
                                   -- end UTPRODUCT-3822

                              end if;

                         end;

                         -- Adhoc Profile Setup
                         -- Down Payment Profile setup - Adhoc
                         -- No restriction on the basis of billing account type
                         begin

                              -- Cleanup the existing reference
                              pkg_os_object_io.sp_object_bv_set
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_ptp_payer_id,
                                    gbv_Ref_PayerDwnPmntProfile,
                                    null
                              );

                              v_down_pmnt_profile_tf := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_ptp_payer_id,
                                                             gbv_PayerAddAdhocDwnPmntPrf
                                                        );

                              -- UTPRODUCT-4113
                              if v_down_pmnt_profile_tf is null then

                                   v_down_pmnt_profile_tf := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_ptp_payer_id,
                                                                  gbv_PayerDifferentAdhocPrf
                                                             );

                              end if;

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Use different profile for down payment?' || v_down_pmnt_profile_tf
                                   );

                              end if;

                              if v_down_pmnt_profile_tf = g_Yes then

                                   -- Get the profile setup laceholder
                                   v_prf_setup_details_plchldr := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_ptp_payer_id,
                                                                       gbv_Ref_PayerDwnPlchldrPrfInpt
                                                                  );

                                   v_payment_type := g_Profile_Type_New;

                                   v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_prf_setup_details_plchldr,
                                                          gbv_CTFPaymentMode
                                                     );

                                   if v_payment_mode = g_PaymentMode_Card then

                                        -- Get the card placeholder
                                        v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_ptp_payer_id,
                                                                   gbv_Ref_PayerDwnPmCardPlchldr
                                                              );

                                        -- Delete EFT placeholder
                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_payer_id,
                                                  gbv_Ref_PayerDwnPmEFTPlchldr
                                             ),
                                             null
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ptp_payer_id,
                                             gbv_Ref_PayerDwnPmCardPlchldr,
                                             null
                                        );

                                   elsif v_payment_mode = g_PaymentMode_EFT then

                                        -- Get the EFT placeholder
                                        v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_ptp_payer_id,
                                                                   gbv_Ref_PayerDwnPmEFTPlchldr
                                                              );

                                        -- Delete Card placeholder
                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_payer_id,
                                                  gbv_Ref_PayerDwnPmCardPlchldr
                                             ),
                                             null
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ptp_payer_id,
                                             gbv_Ref_PayerDwnPmEFTPlchldr,
                                             null
                                        );

                                   else

                                        v_new_profile_id := null;

                                        -- Delete Card placeholder
                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_payer_id,
                                                  gbv_Ref_PayerDwnPmCardPlchldr
                                             ),
                                             null
                                        );

                                        -- Delete EFT placeholder
                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ptp_payer_id,
                                                  gbv_Ref_PayerDwnPmEFTPlchldr
                                             ),
                                             null
                                        );

                                   end if;

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. One Time Profile Details..' ||
                                             '.. Mode: '               || v_payment_mode ||
                                             '.. Placeholder: '        || v_new_profile_id
                                        );

                                   end if;
                                   
                                   -- OSPRODUCT-30602
                                   -- Additional check to make sure we are not adding a recurring profile as a down payment profile                                
                                   v_do_not_save_tf := pkg_os_object_io.fn_object_bv_get
														    (
															    in_session_id,
															    in_transaction_id,
															    v_new_profile_id,
															    gbv_CTFAdhocRecurring
														    );
                                                       
                                   if v_do_not_save_tf is null 
                                      or
                                      pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_new_profile_id, gbv_CTFRecurranceMode ) = g_RecurrencyMode_Recurring
                                   then
                                             
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. The profile is marked as recurring and hence should not be used as down payment profile.. ' 
                                             );

                                        end if;
                                             
                                        raise PROFILE_SETUP_ERROR;
                                             
                                   else

                                        if not ( v_payment_mode is null
                                                or
                                                (
                                                     v_payment_mode in (g_PaymentMode_Card, g_PaymentMode_EFT)
                                                     and
                                                     v_new_profile_id is null
                                                )
                                        )
                                        then

                                             -- Add the details
                                             v_ba_profile_idx := v_ba_profile_config.count + 1;

                                             v_ba_profile_config(v_ba_profile_idx).action_object_id := v_ptp_payer_id;
                                             v_ba_profile_config(v_ba_profile_idx).action_object_type_id := pkg_db_constant.gobjType_PTPPayer;
                                             v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
                                             v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
                                             v_ba_profile_config(v_ba_profile_idx).profile_type := v_payment_type;
                                             v_ba_profile_config(v_ba_profile_idx).ctf_id := v_new_profile_id;

                                             if v_billing_account_id = v_cust_billing_account_id then

                                                  v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := 'T';

                                             else

                                                  v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := 'F';

                                             end if;

                                        end if;
                                        
                                   end if;
                                   -- end OSPRODUCT-30602

                                   -- Delete Details placeholder
                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ptp_payer_id,
                                             gbv_Ref_PayerDwnPlchldrPrfInpt
                                        ),
                                        null
                                   );

                                   -- Reset down payment flag
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ptp_payer_id,
                                        gbv_PayerAddAdhocDwnPmntPrf,
                                        null
                                   );

                                   -- UTPRODUCT-4113
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ptp_payer_id,
                                        gbv_PayerDifferentAdhocPrf,
                                        null
                                   );


                              else

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Down Payment Placeholder cleanup..'
                                        );

                                   end if;

                                   -- Placeholder cleanup
                                   declare

                                        v_card_plchldr_id     object.object_id%type;
                                        v_eft_plchldr_id      object.object_id%type;
                                        v_prfsetup_plchldr_id object.object_id%type;

                                   begin

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Placeholder cleanup..'
                                             );

                                        end if;

                                        v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_ptp_payer_id,
                                                                      gbv_Ref_PayerDwnPlchldrPrfInpt
                                                                 );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_prfsetup_plchldr_id,
                                             null
                                        );

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_ptp_payer_id,
                                                                  gbv_Ref_PayerDwnPmCardPlchldr
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_ptp_payer_id,
                                                                 gbv_Ref_PayerDwnPmEFTPlchldr
                                                            );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end;

                              end if;

                         end;

                         v_payer_index := v_ptp_payer_list.next(v_payer_index);

                    end loop;

               else

                    -- Billing Account
                    v_billing_account_id := v_cust_billing_account_id;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Billing Account ID: ' || v_billing_account_id
                         );

                    end if;

                    if v_basis_trx_id is null then

                         v_quotetrx_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_policy_id ,
                                               pkg_db_constant.gbv_Ref_Derived_From                 --29606209 _Reference_Derived From
                                          );

                         v_policytrx_id := v_quotetrx_id;

                    else

                         v_policytrx_id := in_policy_trx_id;

                    end if;

                    -- Preferred profile setup - Recurring
                    begin

                         begin

                              pkg_cs_db_profiles.sp_override_prf_for_nb_pnbt
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_account_id,
                                   v_policy_image_id,
                                   v_payment_mode,
                                   v_new_profile_id,
                                   v_override_nb_pnbt_profile
                              );

                         exception
                              when others then
                                   raise;

                         end;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Override NB PNBT Profile: ' || v_override_nb_pnbt_profile
                              );

                         end if;

                         if nvl(v_override_nb_pnbt_profile,'F') = 'F' then

                              -- Change Pay Profile Flag
                              v_profile_changed_tf := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_policy_image_id,
                                                              pkg_db_payment_arrangement.gbv_PTPChangePayProfileTF
                                                         );



                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Profile Changed?: ' || v_profile_changed_tf
                                   );

                              end if;

                              if v_rollback_trx_tf = 'T' then

                                   -- OSPRODUCT-2459
                                   -- try getting it from Bill Plan
                                   if nvl(v_bill_plan_enabled_tf, g_No) = g_Yes then

                                        v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_image_id,
                                                                      pkg_db_payment_arrangement.gbv_Ref_PTPAssciatdPmntArngmnt
                                                                 );

                                   end if;

                                   if v_chosen_bill_plan_id is not null then

                                        v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_chosen_bill_plan_id,
                                                                 pkg_db_payment_arrangement.gbv_Ref_PmntArrangementCTF
                                                            );
                                        
                                        -- OSPRODUCT-17719
                                        -- Get the object state
                                        v_new_prf_state_id := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_new_profile_id,
                                                                   210153
                                                              );
                                                              
                                        v_new_prf_expired_tf := fn_is_card_expired
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_new_profile_id
                                                                );
                                                                
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Profile from current bill plan: ' || v_new_profile_id ||
                                                  '.. Profile state: '                  || v_new_prf_state_id ||
                                                  '.. Profile expired?: '               || v_new_prf_expired_tf
                                             );

                                        end if;
                                        -- end OSPRODUCT-17719
                                                           
                                   end if;
                                   
                                   if v_chosen_bill_plan_id is null 
                                      or
                                      v_new_prf_state_id != g_ProfileState_Active --OSPRODUCT-17719
                                      or
                                      v_new_prf_expired_tf = 'T' --OSPRODUCT-17719
                                   then

                                        v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                pkg_os_object_io.fn_object_bv_get
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_policy_term_id,
                                                                     gbv_TermPreferredPayProfile
                                                                ),
                                                                gbv_PPUCashTransferProfUSed
                                                           );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Profile from current term: ' || v_new_profile_id
                                             );

                                        end if;

                                   end if;
                                   -- end OSPRODUCT-2459

                                   -- OSPRODUCT-2459
                                   if v_new_profile_id is not null then

                                        v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_new_profile_id,
                                                               gbv_CTFPaymentMode
                                                          );

                                        v_payment_type := g_Profile_Type_Existing;

                                   end if;

                                   -- Check if the profile is changed.
                                   v_change_pay_profile_tf := fn_prf_chnged_for_term_tf
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_policy_term_id,
                                                                   v_payment_mode,
                                                                   v_new_profile_id
                                                              );

                              elsif v_new_term_setup_tf = g_No
                                    and
                                    v_profile_changed_tf is null
                              then

                                   -- OSPRODUCT-8154
                                   if v_bill_plan_enabled_tf = g_No then

                                        v_change_pay_profile_tf := 'F';

                                   else

                                        -- OSPRODUCT-5906
                                        if pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_policy_term_id,
                                                gbv_TermPreferredPayProfile
                                           ) is not null
                                        then

                                             v_change_pay_profile_tf := 'F';

                                        else

                                             --UTXPRODUCT-67
                    
                                             if v_session_control.gLogging_Full then                                                                    
                                                   pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '... trx process date' || v_trx_process_date || '.. term expiry date: ' || v_term_expiry_date
                                                       
                                                       );
                                             end if;         
                                             if trunc(v_trx_process_date) > trunc(v_term_expiry_date) and NVL(v_policy_transaction_type,0) in (PKG_DB_OBJECT.gBillTrxType_CancelInsured,PKG_DB_OBJECT.gBillTrxType_CancelNonPay) then

                                                  if v_session_control.gLogging_Full then  
                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '... The default profile associated with the PTP is expired. So, using current profile: trx process date' || v_trx_process_date || '.. term expiry date: ' || v_term_expiry_date
                                                       );
                                                  end if;
                                                       
                                                  if nvl(v_bill_plan_enabled_tf, g_No) = g_Yes then

                                                       v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_policy_image_id,
                                                                                     pkg_db_payment_arrangement.gbv_Ref_PTPAssciatdPmntArngmnt
                                                                                );

                                                  end if;

                                                  if v_chosen_bill_plan_id is not null then

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_chosen_bill_plan_id,
                                                                                pkg_db_payment_arrangement.gbv_Ref_PmntArrangementCTF
                                                                           );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Profile from current bill plan: ' || v_new_profile_id
                                                            );

                                                       end if;


                                                  end if;
                                                  -- end OSPRODUCT-2459

                                                  -- OSPRODUCT-2459
                                                  if v_new_profile_id is not null then

                                                       v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_new_profile_id,
                                                                              gbv_CTFPaymentMode
                                                                         );

                                                       v_payment_type := g_Profile_Type_Existing;

                                                       
                                                  else
                                                                                                         -- OSPRODUCT-5906
                                                       v_payment_mode := g_PaymentMode_Cheque;
                                                       v_default_chq_profile_tf := 'T';

                                                       
                                                       
                                                  end if;
                                                      

                                                  -- Check if the profile is changed.
                                                  v_change_pay_profile_tf := 'T';
                                                                                                                                    
                                                  
                                                                                               -- No option to change the profile from UI
                                             elsif pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                             then

                                                  -- OSPRODUCT-5906
                                                  v_change_pay_profile_tf := 'T';
                                                  v_payment_mode := g_PaymentMode_Cheque;
                                                  v_default_chq_profile_tf := 'T';

                                             else
                                                  -- OSPRODUCT-8154
                                                  pkg_os_logging.sp_log_error
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '... The default profile associated with the PTP is expired. Please update it to proceed.. Policy Transaction' || in_policy_trx_id || '.. Term ID: ' || v_policy_term_id
                                                  );

                                                  raise no_data_found;

                                             end if;
            

                                        end if;

                                   end if;

                              elsif v_basis_trx_id is not null
                                    and
                                    v_new_term_setup_tf = g_Yes
                                    and
                                    v_profile_changed_tf is null
                              then

                                   -- As term is changed get the profile details from prior term
                                   begin

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Prior Term ID: ' || v_prior_term_id
                                             );

                                        end if;

                                        if v_prior_term_id is not null then

                                             --OSPRODUCT-601 start
                                             v_old_bord_policy := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policy_id,
                                                                       pkg_db_bor.gRef_BORd_Policy
                                                                  );

                                             if v_old_bord_policy is not null then

                                                  select
                                                       count(1)
                                                  into
                                                       v_count
                                                  from
                                                       (
                                                            Select
                                                                 row_number() over ( order by pt.Policy_Trx_Id ) sort_order,
                                                                 pt.policy_trx_type_id
                                                            from
                                                                 dragon_policy_trx pt
                                                            where
                                                                 pt.policy_id = v_policy_id
                                                       )
                                                  where
                                                       sort_order = 1
                                                  and
                                                       policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_Renewal;

                                             end if;

                                             if v_count = 1 then

                                                 v_new_profile_id := pkg_cs_db_functions.fn_get_bor_ctf
                                                                     (
                                                                          in_session_id,
                                                                          in_transaction_id,
                                                                          v_old_bord_policy,
                                                                          v_billing_account_id
                                                                     );

                                                 if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Bord profile ' || v_new_profile_id
                                                       );

                                                  end if;

                                             else
                                                  -- 62387
                                                  -- Check if the prior term is agency billed
                                                  /*begin

                                                       select
                                                            tp.policy_term_billing_method_id
                                                       into
                                                            v_prior_billing_method_id
                                                       from
                                                            dragon_policy_term tp
                                                       where
                                                            tp.policy_term_id = v_prior_term_id;

                                                  exception

                                                       when others then

                                                            null;

                                                  end;

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '.. Prior billing method: ' || v_prior_billing_method_id ||
                                                            '.. Default profile flag: ' || v_default_chq_profile_tf

                                                       );

                                                  end if;

                                                  if v_prior_billing_method_id = pkg_db_billing_modify.gBillingMethod_Agency then

                                                       -- OSPRODUCT-4319
                                                       v_payment_mode := g_PaymentMode_Cheque;
                                                       v_default_chq_profile_tf := 'T';

                                                  else */

                                                  -- get the preferred profile
                                                  v_priorterm_preferred_profile := pkg_os_object_io.fn_object_bv_get
                                                                                   (
                                                                                       in_session_id,
                                                                                       in_transaction_id,
                                                                                       v_prior_term_id,
                                                                                       gbv_TermPreferredPayProfile
                                                                                   );

                                                  if v_priorterm_preferred_profile is not null then

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_priorterm_preferred_profile,
                                                                                gbv_PPUCashTransferProfUSed
                                                                           );

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Profile from prior term: ' || v_new_profile_id
                                                            );

                                                       end if;

                                                  else

                                                       -- 62387
                                                       -- Check if the prior term is agency billed
                                                       begin

                                                            select
                                                                 tp.policy_term_billing_method_id
                                                            into
                                                                 v_prior_billing_method_id
                                                            from
                                                                 dragon_policy_term tp
                                                            where
                                                                 tp.policy_term_id = v_prior_term_id;

                                                       exception

                                                            when others then

                                                                 null;

                                                       end;

                                                       if v_session_control.gLogging_Full then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '.. Prior billing method: ' || v_prior_billing_method_id

                                                            );

                                                       end if;

                                                       -- OSPRODUCT-5906
                                                       -- No option to change the profile from UI
                                                       if v_bill_plan_enabled_tf = g_No
                                                          or
                                                          pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                                          or
                                                          v_prior_billing_method_id = pkg_db_billing_modify.gBillingMethod_Agency
                                                       then

                                                            -- OSPRODUCT-5906
                                                            v_change_pay_profile_tf := 'T';
                                                            v_payment_mode := g_PaymentMode_Cheque;
                                                            v_default_chq_profile_tf := 'T';

                                                       else

                                                            -- OSPRODUCT-8154
                                                            pkg_os_logging.sp_log_error
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 '... The default profile associated with the prior term is expired. Please update it to proceed.. Policy Transaction' || in_policy_trx_id || '.. Prior Term ID: ' || v_prior_term_id
                                                            );

                                                            raise no_data_found;

                                                       end if;

                                                  end if;
                                                  -- 62387

                                             end if;

                                        else

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Prior term not found..'
                                                  );

                                             end if;

                                        end if;

                                   end;

                                   -- OSPRODUCT-2459
                                   if v_new_profile_id is not null then

                                        v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_new_profile_id,
                                                               gbv_CTFPaymentMode
                                                          );

                                        v_payment_type := g_Profile_Type_Existing;


                                   end if;
                                   -- end OSPRODUCT-2459

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Profile ID: ' || v_new_profile_id ||
                                             '.. Profile Type: ' || v_payment_type ||
                                             '.. Payment Mode: ' || v_payment_mode
                                        );

                                   end if;

                                   v_change_pay_profile_tf := 'T';

                              else

                                   -- Get the down mode
                                   v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_policy_image_id,
                                                          gbv_PTPDownPmntMode
                                                     );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... New profile setup requested..' ||
                                             '... Payment Mode: ' || v_payment_mode
                                        );

                                   end if;


                                   -- Mode - Cheque
                                   if v_payment_mode = g_PaymentMode_Cheque then

                                        v_payment_type := null;
                                        v_new_profile_id := null;

                                   end if;

                                   -- Mode - Card
                                   if v_payment_mode = g_PaymentMode_Card then

                                        v_payment_type := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_policy_image_id,
                                                               gbv_CardProfileNewOrExisting
                                                          );

                                        if v_payment_type = g_Profile_Type_Existing then

                                             v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_image_id,
                                                                      gbv_PTPCurrentProfile
                                                                 );

                                             if pkg_os_object.fn_object_type_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_new_profile_id
                                                  ) != pkg_db_constant.gObjType_CashTransferProfile
                                                  then

                                                       v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_new_profile_id,
                                                                                gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                                                           );

                                             end if;

                                        end if;

                                        if v_payment_type = g_Profile_Type_New then

                                             v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policytrx_id,
                                                                      gbv_PTCardPlaceholder          --33993546  _Ref_Placeholder CashTransferProfile for CC
                                                                 );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_new_profile_id,
                                                  gbv_CTFPaymentMode,
                                                  g_PaymentMode_Card
                                             );

                                        end if;

                                   end if;

                                   -- Mode - EFT
                                   if v_payment_mode = g_PaymentMode_EFT then

                                        v_payment_type := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_policy_image_id,
                                                               gbv_EFTProfileNewOrExisting
                                                          );

                                        if v_payment_type = g_Profile_Type_Existing then -- Existed CC

                                             v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_image_id,
                                                                      gbv_PTPCurrentProfile -- Should be set as initialization rule
                                                                 );

                                             if pkg_os_object.fn_object_type_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_new_profile_id
                                                       ) != pkg_db_constant.gObjType_CashTransferProfile
                                             then

                                                  v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_new_profile_id,
                                                                           gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                                                      );

                                             end if;

                                        end if;

                                        if v_payment_type = g_Profile_Type_New then

                                             v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policytrx_id,
                                                                      gbv_PTEFTPlaceholder
                                                                 );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_new_profile_id,
                                                  gbv_CTFPaymentMode,
                                                  g_PaymentMode_EFT
                                             );

                                        end if;

                                   end if;

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Profile ID: '        || v_new_profile_id ||
                                             '.. Profile Type: '      || v_payment_type ||
                                             '.. Payment Mode: '      || v_payment_mode
                                        );

                                   end if;

                                   if v_new_term_setup_tf = g_Yes then

                                        v_change_pay_profile_tf := 'T';

                                   else

                                        -- Check if the profile is changed.
                                        v_change_pay_profile_tf := fn_prf_chnged_for_term_tf
                                                                   (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        v_policy_term_id,
                                                                        v_payment_mode,
                                                                        v_new_profile_id
                                                                   );

                                   end if;

                              end if;

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Change Profile Flag: ' || v_change_pay_profile_tf
                                   );

                              end if;

                              if v_change_pay_profile_tf = 'T'
                                 and
                                 (
                                      v_payment_mode is null
                                      or
                                      (
                                           v_payment_mode in (g_PaymentMode_Card, g_PaymentMode_EFT)
                                           and
                                           v_new_profile_id is null
                                      )
                                 )
                              then

                                   /*pkg_os_logging.sp_log_error
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Could not find profile details to setup.. Payment Mode: ' || v_payment_mode || '.. Placeholder: ' || v_new_profile_id
                                   );*/

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log_error
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..The request is to set up a new ' || pkg_os_lookup.fn_lookup_list_text_get(5390346, v_payment_mode)  || 
                                             ' Profile but sufficient information is missing to complete the setup. Since its a non-ui execution proceeding with cheque profile setup, 
                                             please change the profile if required. 
                                             Debug details - profile mode:' || v_payment_mode ||
                                             '..Profile type: ' ||  v_payment_type ||
                                             '..Placeholder: ' || v_new_profile_id || 
                                             '..billing account id: ' || v_cust_billing_account_id ||
                                             '..Policy id: ' || v_policy_id ||
                                             '..transaction type: ' || v_policy_transaction_type ||
                                             '..Payer id: ' || v_ptp_payer_id || 
                                             '..Payer type: ' || pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_ptp_payer_id, pkg_db_multipayer.gbv_PTPPayer_PayerType) ||
                                             '..ui session flag:  '||  pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, pkg_os_constant_bv.gbv_SessionCreatedByUI_TF) 
                                        );

                                   end if;
                                   
                                   if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_No
                                   then

                                        v_payment_mode := g_PaymentMode_Cheque;
                                        v_default_chq_profile_tf := 'T'; -- OSPRODUCT-19527
                                                       
                                   end if;
                                   
                              end if;

                              if v_change_pay_profile_tf = 'T' then

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Profile changed for PTP''s : '    || v_policy_id ||
                                             '.. associated term: '                || v_policy_term_id
                                        );

                                   end if;
                                   
                                   -- OSPRODUCT-30602
                                   -- Additional check to make sure we are not adding an adhoc profile to the recurring wf                                   
                                   v_do_not_save_tf := nvl
														 (
															 pkg_os_object_io.fn_object_bv_get
														     (
															     in_session_id,
															     in_transaction_id,
															     v_new_profile_id,
															     gbv_CTFAdhocRecurring
														     ),
														     g_No
													     );  --added nvl condition OSPRODUCT-33288
                                                       
                                   if v_do_not_save_tf = g_Yes 
                                      or
                                      pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_new_profile_id, gbv_CTFRecurranceMode ) = g_RecurrencyMode_Adhoc
                                   then
                                        
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. The profile is marked to not to be used for any future transactions hence should be not set as the recurring profile.. ' 
                                             );

                                        end if;
                                        
                                        raise PROFILE_SETUP_ERROR;                                        
                                   
                                   else

                                        -- Add the details
                                        v_ba_profile_idx := v_ba_profile_config.count + 1;

                                        v_ba_profile_config(v_ba_profile_idx).action_object_id := v_policy_image_id;
                                        v_ba_profile_config(v_ba_profile_idx).action_object_type_id := pkg_os_constant.gobjType_PolicyTrxPolicy;
                                        v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
                                        v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
                                        v_ba_profile_config(v_ba_profile_idx).profile_type := v_payment_type;
                                        v_ba_profile_config(v_ba_profile_idx).ctf_id := v_new_profile_id;
                                        v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := 'T';
                                        
                                   end if;
                                   -- end OSPRODUCT-30602

                              else

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Profile not changed for PTP''s : '    || v_policy_id ||
                                             '.. associated term: '                    || v_policy_term_id
                                        );

                                   end if;

                                   -- Placeholder cleanup
                                   declare

                                        v_card_plchldr_id     object.object_id%type;
                                        v_eft_plchldr_id      object.object_id%type;
                                        v_prfsetup_plchldr_id object.object_id%type;

                                   begin

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Placeholder cleanup..'
                                             );

                                        end if;

                                        v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policytrx_id,
                                                                      gbv_PTProfileDetailPlchldr
                                                                 );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_prfsetup_plchldr_id,
                                             null
                                        );

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                       (
                                                                            in_session_id,
                                                                            in_transaction_id,
                                                                            v_policytrx_id,
                                                                            gbv_PTCardPlaceholder -- placeholder for cc
                                                                       );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policytrx_id,
                                                                       gbv_PTEFTPlaceholder
                                                                  );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end;

                              end if;

                         end if;

                    end;

                    -- Down Payment Profile setup - Adhoc
                    begin

                         v_down_pmnt_profile_tf := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_policy_image_id,
                                                        gbv_PTPAddAdhocDwnPmntPrf
                                                   );

                         -- UTPRODUCT-4113
                         if v_down_pmnt_profile_tf is null then

                              v_down_pmnt_profile_tf := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_policy_image_id,
                                                             gbv_PTPDifferentAdhocPrf
                                                        );

                         end if;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Use different profile for down payment?' || v_down_pmnt_profile_tf
                              );

                         end if;

                         if v_down_pmnt_profile_tf = g_Yes then

                              -- Get the profile setup laceholder
                              v_prf_setup_details_plchldr := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_policytrx_id,
                                                                  gbv_PTDwnPmntPrfDetailPlchldr
                                                             );

                              v_payment_type := g_Profile_Type_New;

                              v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_prf_setup_details_plchldr,
                                                     gbv_CTFPaymentMode
                                                );

                              if v_payment_mode = g_PaymentMode_Card then

                                   -- Get the card placeholder
                                   v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_policytrx_id,
                                                              gbv_PTDwnPmntCardPlaceholder
                                                         );

                                   -- Delete EFT placeholder
                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policytrx_id,
                                             gbv_PTDwnPmntEFTPlaceholder
                                        ),
                                        null
                                   );

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policytrx_id,
                                          gbv_PTDwnPmntCardPlaceholder,
                                          null
                                   );

                              elsif v_payment_mode = g_PaymentMode_EFT then

                                   -- Get the EFT placeholder
                                   v_new_profile_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_policytrx_id,
                                                              gbv_PTDwnPmntEFTPlaceholder
                                                         );

                                   -- Delete Card placeholder
                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policytrx_id,
                                             gbv_PTDwnPmntCardPlaceholder
                                        ),
                                        null
                                   );

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policytrx_id,
                                          gbv_PTDwnPmntEFTPlaceholder,
                                          null
                                   );

                              else

                                   v_new_profile_id := null;

                                   -- Delete EFT placeholder
                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policytrx_id,
                                             gbv_PTDwnPmntEFTPlaceholder
                                        ),
                                        null
                                   );

                                   -- Delete Card placeholder
                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policytrx_id,
                                             gbv_PTDwnPmntCardPlaceholder
                                        ),
                                        null
                                   );

                              end if;

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. One Time Profile Details..' ||
                                        '.. Mode: '               || v_payment_mode ||
                                        '.. Placeholder: '        || v_new_profile_id
                                   );

                              end if;
                              
                              -- OSPRODUCT-30602
                              -- Additional check to make sure we are not adding a recurring profile as a down payment profile                                
                              v_do_not_save_tf := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_new_profile_id,
                                                      gbv_CTFAdhocRecurring
                                                  );
                                                  
                              if v_do_not_save_tf is null 
                                 or
                                 pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_new_profile_id, gbv_CTFRecurranceMode ) = g_RecurrencyMode_Recurring
                              then
                                        
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. The profile is marked as recurring and hence should not be used as down payment profile.. ' 
                                        );

                                   end if;
                                        
                                   raise PROFILE_SETUP_ERROR;
                                        
                              else

                                   if not ( v_payment_mode is null
                                                or
                                                (
                                                     v_payment_mode in (g_PaymentMode_Card, g_PaymentMode_EFT)
                                                     and
                                                     v_new_profile_id is null
                                                )
                                   )
                                   then

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Details added..'
                                             );

                                        end if;

                                        -- Add the details
                                        v_ba_profile_idx := v_ba_profile_config.count + 1;

                                        v_ba_profile_config(v_ba_profile_idx).action_object_id := v_policy_image_id;
                                        v_ba_profile_config(v_ba_profile_idx).action_object_type_id := pkg_os_constant.gobjType_PolicyTrxPolicy;
                                        v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
                                        v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
                                        v_ba_profile_config(v_ba_profile_idx).profile_type := v_payment_type;
                                        v_ba_profile_config(v_ba_profile_idx).ctf_id := v_new_profile_id;
                                        v_ba_profile_config(v_ba_profile_idx).customer_acc_tf := null;

                                   end if;
                              
                              end if;
                              -- end OSPRODUCT-30602                             
                              

                              -- Delete Details placeholder
                              pkg_os_object.sp_object_delete
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   null,
                                   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policytrx_id,
                                        gbv_PTDwnPmntPrfDetailPlchldr
                                   ),
                                   null
                              );

                              -- Reset down payment flag
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_image_id,
                                   gbv_PTPAddAdhocDwnPmntPrf,
                                   null
                              );

                              -- UTPRODUCT-4113
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_image_id,
                                   gbv_PTPDifferentAdhocPrf,
                                   null
                              );

                         else

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Down Payment Placeholder cleanup..'
                                   );

                              end if;

                              -- Placeholder cleanup
                              declare

                                   v_card_plchldr_id     object.object_id%type;
                                   v_eft_plchldr_id      object.object_id%type;
                                   v_prfsetup_plchldr_id object.object_id%type;

                              begin

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Placeholder cleanup..'
                                        );

                                   end if;

                                   v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policytrx_id,
                                                                 gbv_PTDwnPmntPrfDetailPlchldr
                                                            );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                        );

                                   end if;

                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        v_prfsetup_plchldr_id,
                                        null
                                   );

                                   v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_policytrx_id,
                                                             gbv_PTDwnPmntCardPlaceholder
                                                        );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                        );

                                   end if;

                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        v_card_plchldr_id,
                                        null
                                   );

                                   v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_policytrx_id,
                                                                  gbv_PTDwnPmntEFTPlaceholder
                                                             );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                        );

                                   end if;

                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        v_eft_plchldr_id,
                                        null
                                   );

                              end;

                         end if;

                    end;

               end if;

          end;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Starting Profile Setup.. '
               );

          end if;

          -- 2. For each term / term payer
          v_ba_idx := v_ba_profile_config.first;

          v_ba_profile_batch.delete;

          v_billing_acc_trx_set_id := null;

          while v_ba_idx is not null loop

               v_billing_account_id := v_ba_profile_config(v_ba_idx).billing_account_id;
               v_payment_mode := v_ba_profile_config(v_ba_idx).payment_mode;
               v_payment_type := v_ba_profile_config(v_ba_idx).profile_type;
               v_new_profile_id := v_ba_profile_config(v_ba_idx).ctf_id;
               v_action_object_id := v_ba_profile_config(v_ba_idx).action_object_id;
               v_action_object_type_id := v_ba_profile_config(v_ba_idx).action_object_type_id;

               v_policy_pmnt_prfl_usg_id := null;
               v_policy_disb_prfl_usg_id := null;

               -- Get the 'Do not use profile for future use' flag from the CTF
               v_do_not_save_tf := nvl
									 (
										 pkg_os_object_io.fn_object_bv_get
									     (
										     in_session_id,
										     in_transaction_id,
										     v_new_profile_id,
										     gbv_CTFAdhocRecurring
									     ),
										 g_No
									 ); --added nvl condition OSPRODUCT-33288

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Considering Billing Account ID: ' || v_billing_account_id ||
                         '.. Action Object ID: '               || v_action_object_id   ||
                         '.. Mode: '                           || v_payment_mode       ||
                         '.. Type - New or existing? '         || v_payment_type       ||
                         '.. Recurring/Adhoc: '                || v_do_not_save_tf     ||
                         '.. Index: '                          || v_ba_idx
                    );

               end if;

               if v_do_not_save_tf = g_Yes then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Setting up one-time adhoc profile..'
                         );

                    end if;

               end if;

               -- 2.1. Get term associated payer, if setting up profile for PTP Payer
               if v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

                    v_associated_term_payer := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_action_object_id,
                                                    gbv_AssociatedTermPayer
                                               );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Term Payer ID: ' || v_associated_term_payer
                         );

                    end if;

               else

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Term ID: ' || v_policy_term_id
                         );

                    end if;

               end if;

               v_prf_sanity_chk_code := null;

               while v_prf_sanity_chk_code is null
                     or
                     v_prf_sanity_chk_code != g_PrfVldtnCd_ValidationPassed
               loop

                    v_cash_trsp_prf_id := null;
                    v_policy_disb_prfl_usg_id := null;
                    v_policy_pmnt_prfl_usg_id := null;
                    v_billing_acc_trx_set_id := null;

                    -- 2.2 Get profile CTF (CashTrasferProfile)
                    begin

                         if v_payment_mode in ( g_PaymentMode_Card, g_PaymentMode_EFT)
                            and
                            v_payment_type = g_profile_type_Existing
                         then

                              v_cash_trsp_prf_id := v_new_profile_id;

                         else

                              begin

                                   sp_setup_new_ctf
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        v_payment_mode,
                                        v_new_profile_id,
                                        v_cash_trsp_prf_id,
                                        'T',
                                        'T'
                                   );

                              end;

                         end if;

                         if v_cash_trsp_prf_id is null then

                              pkg_os_logging.sp_log_error
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Profile Setup error - Profile not created or found, hence terminating..'
                              );

                              raise PROFILE_SETUP_ERROR;

                         end if;

                         -- Skip the sanity check validation as
                         -- no Bill Me profile is required if the validation is failed
                         if v_do_not_save_tf = g_Yes then

                              v_prf_sanity_chk_code := g_PrfVldtnCd_ValidationPassed;

                         else

                              v_prf_sanity_chk_code := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_cash_trsp_prf_id,
                                                            gbv_ProfileErrorCode
                                                       );

                         end if;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. New Profile ' || v_cash_trsp_prf_id ||
                                   '.. Profile Sanity Code: ' || v_prf_sanity_chk_code
                              );

                         end if;

                    end;

                    -- 2.3. Get the batch that requested the profile setup
                    begin

                         if v_ba_profile_batch.exists(v_billing_account_id) then

                              v_billing_acc_trx_set_id := v_ba_profile_batch(v_billing_account_id);

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Using from the list: ' || v_billing_acc_trx_set_id ||
                                        '... Billing Account ID: ' || v_billing_account_id

                                   );

                              end if;

                         else

                              /*if v_ba_profile_config(v_ba_idx).customer_acc_tf = 'T' then

                                   V_requested_by_ba_trx_set := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    in_policy_trx_id,
                                                                    pkg_db_constant.gbv_Ref_PTRefBillingAccTrxSet
                                                               );

                              end if;*/

                              if v_billing_acc_trx_set_id is null then

                                   -- Create one
                                   pkg_os_object.sp_object_create
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        pkg_db_billing_modify.gObjType_BillingAccountTrxSet,
                                        v_billing_account_id,
                                        v_billing_acc_trx_set_id
                                   );

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,
                                        pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate,
                                        to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault)
                                   );

                                   v_bv_table.delete;
                                   v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;
                                   v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );
                                   v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
                                   v_bv_table(32133240).business_variable_value := pkg_db_functions.fn_get_fitransset_acct_prd
                                                                                                (
                                                                                                     in_session_id,
                                                                                                     in_transaction_id ,
                                                                                                     v_billing_acc_trx_set_id
                                                                                                );
                                   v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := 39846;
                                   v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate (in_session_id,in_transaction_id,v_billing_acc_trx_set_id),pkg_os_constant.DragonDateFormatDefault)  ;
                                   v_bv_table(pkg_db_object.gbv_FITrxSet_CreatedbyBatch).business_variable_value := v_requested_by_ba_trx_set;

                                   if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-9906
                                   then
                                       v_batch_entry_method := gBatchEntryMethod_System;
                                   else
                                       v_batch_entry_method := gBatchEntryMethod_Manual;
                                   end if;
                                   -- Entry method
                                   v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method;  --OSPRODUCT-9906

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,
                                        v_bv_table
                                   );


                                   --OSPRODUCT-12721_2
                                   --Call to Document Processing
                                  /* pkg_db_object.sp_billing_doc_processing
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,
                                        io_action_outcome_id
                                   );*/--LXPRODUCT-356



                                   /*pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,
                                        v_datamart_tf
                                   );*/

                                   /*pkg_db_object.sp_billing_acct_trx_process
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,    -- BillingAccountTransactionSet ID
                                        v_object_cache,
                                        io_action_outcome_id
                                   );*/

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... Created a new BillingAccountTransactionSet Object ID: ' ||
                                             v_billing_acc_trx_set_id
                                        );

                                   end if;

                              /*else

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... Start using an existing BillingAccountTransactionSet Object ID: ' ||
                                             v_billing_acc_trx_set_id
                                        );

                                   end if;*/

                              end if;

                              v_ba_profile_batch(v_billing_account_id) := v_billing_acc_trx_set_id;

                         end if;

                         -- Associated profile (CTF)
                         if v_ba_profile_config(v_ba_idx).customer_acc_tf = 'T'
                            and
                            nvl(v_do_not_save_tf, g_No) = g_No
                         then

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_acc_trx_set_id,
                                   gbv_Ref_BatchAssociatedProfile,
                                   v_cash_trsp_prf_id
                              );
                              

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Setting up associated profile for the batch  ' || v_cash_trsp_prf_id
                                   );

                              end if;

                         end if;

                         -- Create as required
                         /*-- Create Disb usage update
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_constant.gObjType_ProfileUsageUpdate,
                              v_billing_acc_trx_set_id,
                              v_disb_prof_usg_updt_id
                         );

                         -- Create Pay usage update
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_constant.gObjType_ProfileUsageUpdate,
                              v_billing_acc_trx_set_id,
                              v_pay_prof_usg_updt_id
                         ); */

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Profile Usage Update: ' || v_pay_prof_usg_updt_id ||
                                   '... Disbursement Usage Update: ' || v_disb_prof_usg_updt_id
                              );

                         end if;

                    end;

                    -- 2.4. Set up profile usage for Policy
                    begin

                         -- OSPRODUCT-2459
                         /*if v_policy_transaction_type in
                            (
                                 pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                                 pkg_os_policy_transaction.gPolicyTrxType_Renewal,
                                 pkg_os_policy_transaction.gPolicyTrxType_Rewrite,
                                 pkg_os_policy_transaction.gPolicyTrxType_NBRewrite  -- GCNA-2901
                            )
                            and
                            v_ba_profile_config(v_ba_idx).customer_acc_tf = 'T'
                         then

                              -- if a disbursement profile is already created for the policy
                              -- In quote bind workflow the same get created before coming to this proc
                              -- With new design the same will be removed from the wf
                              -- Keeping it here for backward compatibility
                              v_policy_disb_prfl_usg_id := pkg_os_object_search.fn_object_with_attribute_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                v_billing_account_id,
                                                                pkg_cs_profiles.gObjType_BillAcc_Disbprof,
                                                                pkg_cs_profiles.gbv_Ref_UsageOfGenericObject,
                                                                v_policy_term_id
                                                           );

                         end if;*/

                         -- Disbursement Profile usage
                         if v_policy_disb_prfl_usg_id is null
                            and
                            nvl(v_do_not_save_tf, g_No) = g_No -- Not required for one time payment profile
                         then

                              -- UTPRODUCT-2828
                              -- Added another condition to check the pd property v_disb_profile_Check_tf.
                              -- If this property is True, that means that we need to create disbursement profile as Bill me only.
                              -- If this property is Flase, that means that we need to create disbursement profile same as payment profile
                              -- So, added a check that if payment mode is check or this property is false, then only proceed with creating disbursement profile.
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Payment mode is : ' || v_payment_mode ||
                                        '.. disbursement profile as Check only flag is:' || v_disb_profile_Check_tf
                                   );

                              end if;

                              if (nvl(v_payment_mode,g_PaymentMode_Cheque) = g_PaymentMode_Cheque or v_disb_profile_Check_tf = 'F') then

                                   sp_create_dpu_for_customer
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        v_action_object_id,
                                        v_cash_trsp_prf_id,
                                        null, -- no placeholder; default setup
                                        v_policy_disb_prfl_usg_id
                                   );

                                   v_bv_table.delete;

                                   -- Set start date
                                   if trunc(v_ptp_effective_date) < trunc(sysdate) then
                                        v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_ptp_effective_date, pkg_os_constant.DragonDateFormatDefault);
                                   else
                                        v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
                                   end if;

                                   -- Recurring
                                   -- Recurring when added through NB/PNBT workflow
                                   if v_do_not_save_tf = g_Yes then
                                        v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;
                                   else
                                        v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;
                                   end if;

                                   -- Preferred - yes
                                   -- Preferred when added through NB/PNBT workflow
                                   v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;

                                   -- Created by batch
                                   -- UTPRODUCT-3791
                                   v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_requested_by_ba_trx_set;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_disb_prfl_usg_id,
                                        v_bv_table
                                   );

                                   -- Create Disb usage update
                                   pkg_os_object.sp_object_create
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        pkg_db_constant.gObjType_ProfileUsageUpdate,
                                        v_billing_acc_trx_set_id,
                                        v_disb_prof_usg_updt_id
                                   );

                                   -- Set references for usage update object
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_disb_prof_usg_updt_id,
                                        gbv_PrfUpdateRefDisbProfile,
                                        v_policy_disb_prfl_usg_id
                                   );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Disbursement Profile: ' || v_policy_disb_prfl_usg_id ||
                                             '.. Disbursement Profile Usage Updated:' || v_disb_prof_usg_updt_id
                                        );

                                   end if;

                              else

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Preferred Disbursement Profile creation is skipped as it should be check only'
                                        );

                                   end if;

                              end if;     -- 2828

                         end if;

                         -- Profile Usage
                         if v_policy_pmnt_prfl_usg_id is null then

                              -- Create PaymentProfileUsage
                              sp_create_ppu
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_account_id,
                                   v_action_object_id,
                                   v_cash_trsp_prf_id,
                                   v_policy_pmnt_prfl_usg_id
                              );

                              v_bv_table.delete;

                              -- Set start date
                              -- Set start date
                              if trunc(v_ptp_effective_date) < trunc(sysdate) then
                                   v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_ptp_effective_date, pkg_os_constant.DragonDateFormatDefault);
                              else
                                   v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
                              end if;

                              /*-- Recurring
                              -- Recurring when added through NB/PNBT workflow
                              v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;
                              */
                              -- Recurring
                              -- Recurring when added through NB/PNBT workflow
                              if v_do_not_save_tf = g_Yes then
                                   v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;
                              else
                                   v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;
                              end if;

                              -- Preferred - yes
                              -- Preferred when added through NB/PNBT workflow
                              v_bv_table(gbv_PPUPreferredtf).business_variable_value := g_Yes;

                              -- Created by batch
                              -- UTPRODUCT-3791
                              v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_requested_by_ba_trx_set;

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_pmnt_prfl_usg_id,
                                   v_bv_table
                              );

                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_db_constant.gObjType_ProfileUsageUpdate,
                                   v_billing_acc_trx_set_id,
                                   v_pay_prof_usg_updt_id
                              );

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_pay_prof_usg_updt_id,
                                   gbv_PrfUpdateRefPayProfile,
                                   v_policy_pmnt_prfl_usg_id
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Payment Profile: ' || v_policy_pmnt_prfl_usg_id ||
                                        '.. Payment Profile Usage Updated:' || v_pay_prof_usg_updt_id
                                   );

                              end if;

                         end if;

                    end;

                    -- 2.5. Datamart Update
                    begin

                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_pmnt_prfl_usg_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_disb_prfl_usg_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_billing_acc_trx_set_id, v_datamart_tf);

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Datamart Updated..'
                              );

                         end if;

                    end;

                    -- 2.6. Associate policy to profile
                    begin

                         sp_associate_policy_to_profile
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_account_id,
                              v_action_object_id,
                              io_action_outcome_id,
                              v_billing_acc_trx_set_id,
                              v_policy_pmnt_prfl_usg_id,
                              v_policy_disb_prfl_usg_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Profile Associated with the policy..'
                              );

                         end if;

                    end;

                    -- 2.7 Down Payment Profile Setup
                    If v_do_not_save_tf = g_Yes then

                         if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_trx_id,
                                   gbv_PTDwnPmntAdhocProfile, -- placeholder for cc
                                   v_policy_pmnt_prfl_usg_id
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Setting up down payment profile for PT - ' || in_policy_trx_id
                                   );

                              end if;

                         elsif v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_action_object_id,
                                   gbv_Ref_PayerDwnPmntProfile, -- placeholder for cc
                                   v_policy_pmnt_prfl_usg_id
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Setting up down payment profile for PTPPayer -' || v_action_object_id
                                   );

                              end if;

                         end if;

                    end if;

                    -- 2.8. Placeholder cleanup
                    if nvl(v_do_not_save_tf, g_No) = g_No then

                         declare

                              v_card_plchldr_id     object.object_id%type;
                              v_eft_plchldr_id      object.object_id%type;
                              v_prfsetup_plchldr_id object.object_id%type;

                         begin

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Placeholder cleanup..' ||
                                        '.. Action object Type ID..' || v_action_object_type_id
                                   );

                              end if;

                              if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

                                   v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policytrx_id,
                                                                 gbv_PTProfileDetailPlchldr
                                                            );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                        );

                                   end if;

                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        v_prfsetup_plchldr_id,
                                        null
                                   );

                                   if v_payment_mode = g_PaymentMode_Cheque then

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policytrx_id,
                                                                       gbv_PTCardPlaceholder -- placeholder for cc
                                                                  );

                                         if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_policytrx_id,
                                                                  gbv_PTEFTPlaceholder
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end if;

                                   if v_payment_mode = g_PaymentMode_Card then

                                        if v_payment_type = g_profile_type_Existing then

                                             v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policytrx_id,
                                                                       gbv_PTCardPlaceholder -- placeholder for cc
                                                                  );

                                              if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                                  );

                                             end if;

                                             pkg_os_object.sp_object_delete
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  null,
                                                  v_card_plchldr_id,
                                                  null
                                             );

                                        else

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_policytrx_id,
                                                   gbv_PTCardPlaceholder,
                                                   null
                                             );

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Setting Card Placeholder to null..'
                                                  );

                                             end if;

                                        end if;

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_policytrx_id,
                                                                  gbv_PTEFTPlaceholder
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end if;

                                   if v_payment_mode = g_PaymentMode_EFT then

                                        if v_payment_type = g_profile_type_Existing then

                                             v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policytrx_id,
                                                                       gbv_PTEFTPlaceholder
                                                                  );

                                              if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                                  );

                                             end if;

                                             pkg_os_object.sp_object_delete
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  null,
                                                  v_eft_plchldr_id,
                                                  null
                                             );

                                        else

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_policytrx_id,
                                                   gbv_PTEFTPlaceholder,
                                                   null
                                             );

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Setting EFT Placeholder to null..'
                                                  );

                                             end if;

                                        end if;

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_policytrx_id,
                                                                  gbv_PTCardPlaceholder -- placeholder for cc
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                   end if;

                              end if;

                              if v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

                                   v_prfsetup_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_action_object_id,
                                                                 gbv_Ref_PTPPayerPlchldrPrfInpt
                                                            );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Deleting profile setup placeholder..' || v_prfsetup_plchldr_id
                                        );

                                   end if;

                                   pkg_os_object.sp_object_delete
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        null,
                                        v_prfsetup_plchldr_id,
                                        null
                                   );

                                   if v_payment_mode = g_PaymentMode_Cheque then

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_action_object_id,
                                                                  gbv_Ref_PTPPayerCardPlchldr -- placeholder for cc
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_action_object_id,
                                                                  gbv_Ref_PTPPayerEFTPlchldr -- placeholder for cc
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end if;

                                   if v_payment_mode = g_PaymentMode_Card then

                                        if v_payment_type = g_profile_type_Existing then

                                             v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_action_object_id,
                                                                       gbv_Ref_PTPPayerCardPlchldr -- placeholder for cc
                                                                  );

                                              if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                                  );

                                             end if;

                                             pkg_os_object.sp_object_delete
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  null,
                                                  v_card_plchldr_id,
                                                  null
                                             );

                                        else

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_action_object_id,
                                                   gbv_Ref_PTPPayerCardPlchldr,
                                                   null
                                             );

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Setting Card Placeholder to null..'
                                                  );

                                             end if;

                                        end if;

                                        v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_action_object_id,
                                                                  gbv_Ref_PTPPayerEFTPlchldr
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_eft_plchldr_id,
                                             null
                                        );

                                   end if;

                                   if v_payment_mode = g_PaymentMode_EFT then

                                        if v_payment_type = g_profile_type_Existing then

                                             v_eft_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_action_object_id,
                                                                       gbv_Ref_PTPPayerEFTPlchldr -- placeholder for cc
                                                                  );

                                              if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Deleting EFT Placeholder.. ' || v_eft_plchldr_id
                                                  );

                                             end if;

                                             pkg_os_object.sp_object_delete
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  null,
                                                  v_eft_plchldr_id,
                                                  null
                                             );

                                        else

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_action_object_id,
                                                   gbv_Ref_PTPPayerEFTPlchldr,
                                                   null
                                             );

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Setting EFT Placeholder to null..'
                                                  );

                                             end if;

                                        end if;

                                        v_card_plchldr_id := pkg_os_object_io.fn_object_bv_get
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_action_object_id,
                                                                  gbv_Ref_PTPPayerCardPlchldr -- placeholder for cc
                                                             );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Deleting Card Placeholder.. ' || v_card_plchldr_id
                                             );

                                        end if;

                                        pkg_os_object.sp_object_delete
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             null,
                                             v_card_plchldr_id,
                                             null
                                        );

                                   end if;

                              end if;

                         end;

                    end if;

                    if v_prf_sanity_chk_code is null
                       or
                       v_prf_sanity_chk_code != g_PrfVldtnCd_ValidationPassed
                    then

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Create default cheque profile.. '
                              );

                         end if;

                         v_payment_mode := g_PaymentMode_Cheque;
                         v_new_profile_id := null;

                    end if;

               end loop;

               -- UTPRODUCT-2828 start
               if nvl(v_do_not_save_tf, g_No) = g_No then

                    begin

                         -- In case disbursement profile was not created in step 2.4, create it here.
                         if not(nvl(v_payment_mode,0) = g_PaymentMode_Cheque or v_disb_profile_Check_tf = 'F') then --UTPRODUCT-4882

                              --Create CTF for disbursement profile
                              pkg_db_profiles.sp_setup_new_ctf
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_account_id,
                                   g_PaymentMode_Cheque,
                                   null,
                                   v_Disb_cash_transfer_profile_id
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Preferred Disbursement Profile  should be check only. So, creating it seperately'||v_Disb_cash_transfer_profile_id
                                   );

                              end if;

                              -- Create usage object
                              sp_create_dpu_for_customer
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_account_id,
                                   v_action_object_id,
                                   v_Disb_cash_transfer_profile_id,
                                   null, -- no placeholder; default setup
                                   v_policy_disb_prfl_usg_id
                              );

                              v_bv_table.delete;

                              -- Set start date
                              if trunc(v_ptp_effective_date) < trunc(sysdate) then
                                   v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_ptp_effective_date, pkg_os_constant.DragonDateFormatDefault);
                              else
                                   v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
                              end if;

                              -- Recurring
                              -- Recurring when added through NB/PNBT workflow
                              v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                              -- Preferred - yes
                              -- Preferred when added through NB/PNBT workflow
                              v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;

                              -- Created by batch
                              -- new fix
                              -- UTPRODUCT-4882
                              v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_requested_by_ba_trx_set;

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_disb_prfl_usg_id,
                                   v_bv_table
                              );

                              -- Create Disb usage update
                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_db_constant.gObjType_ProfileUsageUpdate,
                                   v_billing_acc_trx_set_id,
                                   v_disb_prof_usg_updt_id
                              );

                              -- Set references for usage update object
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_disb_prof_usg_updt_id,
                                   gbv_PrfUpdateRefDisbProfile,
                                   v_policy_disb_prfl_usg_id
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Disbursement Profile: ' || v_policy_disb_prfl_usg_id ||
                                        '.. Disbursement Profile Usage Updated:' || v_disb_prof_usg_updt_id
                                   );

                              end if;

                              -- Datamart Update
                              begin

                                   pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_disb_prfl_usg_id, v_datamart_tf);
                                   pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_billing_acc_trx_set_id, v_datamart_tf);

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Disbursement Datamart Updated..'
                                        );

                                   end if;

                              end;

                              -- Associate policy to profile
                              begin

                                   sp_associate_policy_to_profile
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        v_action_object_id,
                                        io_action_outcome_id,
                                        v_billing_acc_trx_set_id,
                                        null,
                                        v_policy_disb_prfl_usg_id
                                   );

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Disbursement Profile Associated with the policy..'
                                        );

                                   end if;

                              end;

                         end if;

                    end;

               end if;

               -- UTPRODUCT-2828 end

               -- OSBILLING-5900
               -- For showing single record on the UI
               -- Keeping for backward compatibility (UI is driven by usage)
               if v_policy_pmnt_prfl_usg_id is not null then

                    for v_pay_profile_with_same_ctf in c_pay_profile_with_same_ctf (v_cash_trsp_prf_id) loop

                         v_profile_usage_id := v_pay_profile_with_same_ctf.pay_profile_id;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.... Considering usage id: ' || v_profile_usage_id
                              );

                         end if;

                         v_profile_template_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_profile_usage_id,
                                                       pkg_os_constant_bv.gbv_ultimate_template
                                                  );

                         if v_profile_template_id = v_profile_usage_id then

                              exit;

                         end if;

                    end loop;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_policy_pmnt_prfl_usg_id,
                         pkg_os_constant_bv.gbv_ultimate_template,
                         v_profile_usage_id
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.... Profile ID to be set as the ultimate template for the new profile: ' || v_profile_usage_id
                         );

                    end if;

               end if;

               v_ba_idx := v_ba_profile_config.next (v_ba_idx);

          end loop;

     elsif v_policy_billing_method = pkg_db_billing_modify.gBillingMethod_Agency then

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Exiting without profile setup as the policy is agency billed ..'
               );

          end if;

     else

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Profile Setup Error - Policy Billing Method not set..'
          );

     end if; -- if Policy Billig Method is not Agency Billed

	 -- OSPRODUCT-25867
     -- Sync the profile address
     if v_new_term_setup_tf = g_No then
          
          sp_syncup_disb_prf_address
          (
               in_session_id,
               in_transaction_id,
               in_policy_trx_id,
               io_action_outcome_id
          );
          
     end if;
     -- end OSPRODUCT-25867

     -- OSPRODUCT-4319
     if v_default_chq_profile_tf = 'T'
     then
          io_action_outcome_id := 37046;
     else
          io_action_outcome_id := pkg_os_constant.gOutcome_OK;
     end if;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_policy_prf_setup_nb_pnbt;

-----------------------------------------------------------------------------------------------------------------------------------------------------

-- OSPRODUCT-25867

procedure sp_entity_disb_prf_add  --addeess update on disbursement profile
(
     in_session_id                  in             object.object_id%type,
     in_transaction_id              in             object.object_id%type,
     in_action_object_id            in             object.object_id%type,
     io_action_outcome_id           in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name               constant system_log.program_name%type := pkg_name ||'sp_entity_disb_prf_add';
     v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
     v_ctf_mode_id                  char(1);
     v_multipayer_enabled_tf        char(1);
     v_entity_id                    object.object_id%type;
     v_ultimate_customer_id         object.object_id%type;
     v_entity_billing_account_id    object.object_id%type;
     v_policy_image_id              object.object_id%type;
     v_policy_current_term_id       object.object_id%type;
     v_billing_account_type_id      object.object_id%type;     
     v_ctf_profile                  object_bv_value.business_variable_value%type;     
     v_entity_billing_add           object_bv_value.business_variable_value%type;
     v_pref_disb_profile            object_bv_value.business_variable_value%type;
     
     v_current_date                 date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_action_object_id));
     v_billing_acc_trx_set_id       object.object_id%type;
     
     v_preferred                    object_bv_value.business_variable_value%type;
     v_prf_recurrency_mode          object_bv_value.business_variable_value%type;
     v_ctf_profile_id               object.object_id%type;
     v_batch_entry_method           object_bv_value.business_variable_value%type;
     v_object_cache                 pkg_os_object_cache.t_object_cache;
     v_disb_prf_address_id          object.object_id%type;
     v_dp_object_id                 object.object_id%type;
     v_disb_prof_usg_updt_id        object.object_id%type;
     v_ba_plchldr_cheque_ctf        object.object_id%type;
     v_action_object_type_id        object_type.OBJECT_TYPE_ID%type;
     v_bv_table                     pkg_os_object_io.t_bv_table;
     v_datamart_tf                  char(1) := 'T';
     v_entity_chk_pass_tf           char(1) := 'F';
     v_count                        number;
     v_term_entity_id               object.object_id%type;
     v_cust_primary_entity_id       object.object_id%type;
     
     v_profile_usg_upd_list         pkg_os_object.t_object_list;
     

begin     
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     case
          
          when v_action_object_type_id = pkg_os_constant.gobjType_PolicyTransaction then
               
               -- Get the customer's billing account id
               v_ultimate_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id
                                         );

               -- Get the Primary Customer Entity
               v_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ultimate_customer_id,
                                           pkg_db_constant.gbv_CustRefPrimaryEntity
                                      );

               -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
               v_entity_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_entity_id,
                                                 pkg_db_constant.gObjType_BillingAccount
                                            );
                                            
          when v_action_object_type_id = pkg_os_constant.gObjType_Customer then
               
               -- Get the Primary Customer Entity
               v_ultimate_customer_id := in_action_object_id;
               
               v_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ultimate_customer_id,
                                           pkg_db_constant.gbv_CustRefPrimaryEntity
                                      );               

               -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
               v_entity_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_entity_id,
                                                 pkg_db_constant.gObjType_BillingAccount
                                            );
                                            
               /*v_entity_id := v_primary_entity_id;
               
               v_entity_billing_account_id := v_cust_billing_account_id; */              
                                       
          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccount then
          
               v_entity_billing_account_id := in_action_object_id;
               
               v_entity_id := pkg_os_object.fn_object_parent_get  --Get the customerentity from BA
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_entity_billing_account_id
                                      );
                                      
               v_ultimate_customer_id := pkg_os_object.fn_object_parent_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_entity_id
                                         );                                     
          
          when v_action_object_type_id = pkg_os_constant.gObjType_CustomerEntity then               
               
               v_entity_id := in_action_object_id;
               
               v_ultimate_customer_id := pkg_os_object.fn_object_parent_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_entity_id
                                         ); 

               -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
               v_entity_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_entity_id,
                                                 pkg_db_constant.gObjType_BillingAccount
                                            );    
     
     end case; 
     
     v_entity_id := in_action_object_id;
     
     v_entity_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_entity_id,
                                            pkg_db_constant.gObjType_BillingAccount
                                       ); 
               
     v_ultimate_customer_id := pkg_os_object.fn_object_parent_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_entity_id
                               ); 
                               
     v_cust_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ultimate_customer_id,
                                           pkg_db_constant.gbv_CustRefPrimaryEntity
                                      );
     
     v_entity_billing_add := pkg_os_object_io.fn_object_bv_get  -- get customer billing address fro customer entity
                               (
                                   in_session_id,
                                   in_transaction_id,
                                   v_entity_id,
                                   pkg_pc_submission.gbv_CustEntityBillingAddress 
                               ); 
                               
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Entity Billing Address ' || v_entity_billing_add
          );

     end if;                   
     
     -- Validate the profile for primary customer
     v_pref_disb_profile := pkg_os_object_io.fn_object_bv_get   -- get preferred disb profile from the BA
                              (
                                     in_session_id,
                                     in_transaction_id,
                                     v_entity_billing_account_id,
                                     gbv_BAPreferredDisbProfUsage
                              );
                              
     if v_pref_disb_profile is not null then
                                      
          begin 
                                               
               select
                    ddp.ctf_object_id,
                    ddp.preferred_prof_id,
                    ddp.recur_mode_id,
                    ddp.ctf_mode_id
               into
                    v_ctf_profile_id,
                    v_preferred,
                    v_prf_recurrency_mode,
                    v_ctf_mode_id
               from
                    dragon_disb_profile ddp
               where
                    ddp.disb_profile_id = v_pref_disb_profile;
                    
          exception 
               when others then
                    return;
                                   
          end;
                           
          if v_ctf_mode_id = g_PaymentMode_Cheque then  --CTF Mode : biil me          
                                   
               v_disb_prf_address_id := pkg_os_object_io.fn_object_bv_get  -- disbursement reference address
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_pref_disb_profile,-- disb profile
                                              gbv_DPUCustomerAddForDisb -- is this a caclulated BV ?
                                         );
                                         
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. BA Disb profile address ' || v_disb_prf_address_id
                    );

               end if;
                                                                                 
               if v_entity_billing_add <> v_disb_prf_address_id then
                    
                    begin
                         
                         v_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_entity_billing_account_id,
                                                         gbv_BACTFPlchldrCheque
                                                    );

                         if v_ba_plchldr_cheque_ctf is null then

                              -- OSPRODUCT-6036
                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_db_constant.gObjType_CashTransferProfile,
                                   v_entity_billing_account_id,
                                   v_ba_plchldr_cheque_ctf
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'Cheque placeholder created: ' || v_ba_plchldr_cheque_ctf
                                   );

                              end if;

                              -- set the mode to Cash/Cheque
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ba_plchldr_cheque_ctf,
                                   gbv_CTFPaymentMode,
                                   g_PaymentMode_Cheque
                              );

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_entity_billing_account_id,
                                   gbv_BACTFPlchldrCheque,
                                   v_ba_plchldr_cheque_ctf
                              );

                         end if;
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ba_plchldr_cheque_ctf,
                              gbv_CTFPaymentMode,
                              1
                         );

                         -- Preferred?
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ba_plchldr_cheque_ctf,
                              gbv_CTFPreferredTF,
                              g_Yes
                         );

                         -- Profile Type
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_ba_plchldr_cheque_ctf,
                              gbv_CTFProfileType,
                              g_Profile_Type_Disb
                         );

                         sp_ba_profile_setup
                         (
                              in_session_id,
                              in_transaction_id,
                              v_entity_billing_account_id,
                              io_action_outcome_id
                         );

                         v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_entity_billing_account_id,
                                                            gbv_BACurrentBatch
                                                       );
                                                       
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Profile usage update batch '  || v_billing_acc_trx_set_id
                              );

                         end if;
                         
                    end;
                    
               end if;
               
          end if;
          
     end if;
     
     if v_billing_acc_trx_set_id is null then
                                        
          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gobjtype_billingaccounttrxset,
               v_entity_billing_account_id,
               v_billing_acc_trx_set_id
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Creating the profile usage update batch '  || v_billing_acc_trx_set_id
               );

          end if;

          v_bv_table.delete;

          if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-8104
          then
              v_batch_entry_method := gBatchEntryMethod_System;
           else
              v_batch_entry_method := gBatchEntryMethod_Manual;
           end if;

          -- Batch Type
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;

          -- Batch ID
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch' ||to_char(v_current_date, pkg_os_constant.DragonDateFormatDefault );

          -- Entered By
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

          -- Process date
          v_bv_table(pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate).business_variable_value := to_char(v_current_date, pkg_os_constant.DragonDateFormatDefault );

          -- Object State
          v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := pkg_db_object.gBatchStatus_Processed;

          -- Posted Date
          v_bv_table(29707646).business_variable_value := to_char(v_current_date, pkg_os_constant.DragonDateFormatDefault);          

          -- Entry method
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method; --OSPRODUCT-8104

          -- BV Set
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_bv_table
          );
                                             
     end if;
     
     -- check the payers disb profile
     begin      
          
          for v_active_policy in c_customer_active_policies(v_ultimate_customer_id) loop
               
               v_policy_current_term_id := pkg_db_functions.fn_get_policy_current_term -- Get the policy current term id from policy id
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_active_policy.policy_id
                                           ); 
                                           
               begin           
                                           
                    select count(1)
                      into v_count
                      from dragon_policy_term_payer tp
                     where tp.policy_term_id = v_policy_current_term_id;
                          
                    if v_count = 0 then -- sp
                         
                         v_multipayer_enabled_tf := g_No;
                              
                         v_term_entity_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_ultimate_customer_id,
                                                     pkg_db_constant.gbv_CustRefPrimaryEntity
                                                );
                                                     
                         if v_term_entity_id = v_entity_id then
                              v_entity_chk_pass_tf := 'T';
                         end if;
                                                           
                    end if; 
               
               end;
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Policy ID: ' || v_active_policy.policy_id ||
                         '.. Current Term ID: ' || v_policy_current_term_id ||
                         '.. Multipayer Flag: '||v_multipayer_enabled_tf
                    );

               end if;           
                         
               for v_policy_payer in (
                                       select tp.policy_term_payer_id payer_id,
                                              tp.payer_billing_account_id billing_acc_id,
                                              pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   tp.policy_term_payer_id,
                                                   gbv_TermPayerPrefDisbProf
                                              ) pref_disb_profile_id
                                         from dragon_policy_term_payer tp
                                        where tp.policy_id = v_active_policy.policy_id
                                          and tp.policy_term_id = v_policy_current_term_id
                                          and tp.payer_entity_id = v_entity_id                                          
								union
                                       select v_policy_current_term_id payer_id,
                                              v_entity_billing_account_id billing_acc_id,
                                              pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_policy_current_term_id,
                                                   gbv_TermPreferredDisbProfile
                                              ) pref_disb_profile_id
                                         from dual
                                        where v_entity_id = v_cust_primary_entity_id
                                                       
               )
               loop
                    
                    v_pref_disb_profile := v_policy_payer.pref_disb_profile_id;
                    
                    if v_pref_disb_profile is not null then                   
                    
                         v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get -- Get the Preferred payment profile
                                                      (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_policy_payer.billing_acc_id,
                                                          pkg_db_billing_modify.gbv_BillingAccountType  --
                                                      );
                                                      
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Term / Term Payer ID: ' || v_policy_payer.payer_id ||
                                   '..Billing Account ID: ' || v_policy_payer.billing_acc_id ||
                                   '..Account Type: '||v_billing_account_type_id
                              );

                         end if;
                                                      
                         if v_billing_account_type_id = pkg_db_constant.gBillingAcType_Customer then
                                                                                                     
                              begin 
                                               
                                   select
                                        ddp.ctf_object_id,
                                        ddp.preferred_prof_id,
                                        ddp.recur_mode_id,
                                        ddp.ctf_mode_id
                                   into
                                        v_ctf_profile_id,
                                        v_preferred,
                                        v_prf_recurrency_mode,
                                        v_ctf_mode_id
                                   from
                                        dragon_disb_profile ddp
                                   where
                                        ddp.disb_profile_id = v_pref_disb_profile;
                              
                               exception 
                                   when others then
                                        return;
                                   
                              end;
                              
                              --Cheking a profile
                              if v_ctf_mode_id = g_PaymentMode_Cheque then  --CTF Mode : biil me
                                   
                                   v_disb_prf_address_id := pkg_os_object_io.fn_object_bv_get  -- disbursement reference address
                                                             (
                                                                  in_session_id,
                                                                  in_transaction_id,
                                                                  v_pref_disb_profile,-- disb profile
                                                                  gbv_DPUCustomerAddForDisb -- is this a caclulated BV ?
                                                             );
                                                             
                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Disb profiile address: ' || v_disb_prf_address_id 
                                        );

                                   end if;
                                                                                 
                                   if v_entity_billing_add <> v_disb_prf_address_id then
                                        
                                        -- Create New PaymentProfileUsage object
                                        sp_create_dpu_for_customer
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_payer.billing_acc_id,
                                             v_active_policy.policy_id,
                                             v_ctf_profile_id,
                                             null, -- pass it into the proc
                                             v_dp_object_id
                                        );

                                        v_bv_table.delete;

                                        -- Set start date
                                        v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_current_date, pkg_os_constant.DragonDateFormatDefault);

                                        -- Recurring/Adhoc as requested
                                        v_bv_table(gbv_DPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                        -- Preferred - yes/no as requested
                                        v_bv_table(gbv_DPUPreferredtf).business_variable_value := v_preferred;

                                        -- Created by batch
                                        v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_dp_object_id,
                                             v_bv_table
                                        );
                                        
                                        pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_dp_object_id, v_datamart_tf);                   
                    
                                        -- Associate policy to profile
                                        begin

                                             sp_associate_policy_to_profile
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_policy_payer.billing_acc_id,
                                                  v_active_policy.policy_id,
                                                  io_action_outcome_id,
                                                  v_billing_acc_trx_set_id,
                                                  null,
                                                  v_dp_object_id
                                             );

                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '.. Disbursement Profile Associated with the policy..'
                                                  );

                                             end if;

                                        end;
                                    
                                   end if;
                                   
                              end if; 
                         
                         end if;
                         
                    end if;
                         
               end loop;                                                             
                                      
          end loop;
          
     end;
     
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_Id              =>    in_session_id,
          in_transaction_id          =>    in_transaction_id,
          in_object_id               =>    v_billing_acc_trx_set_id,
          in_child_object_type_id    =>    pkg_db_constant.gObjType_ProfileUsageUpdate,
          in_object_list             =>    v_profile_usg_upd_list
     );
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Usage update count: ' || v_profile_usg_upd_list.count
          );

     end if;
     
     if v_profile_usg_upd_list.count = 0 and pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_billing_acc_trx_set_id, pkg_db_billing_modify.gbv_FITrxSetBatchType) = g_bats_typeid_profileussage then
          
          pkg_os_object.sp_object_delete
          (
               in_session_id,
               in_transaction_id,
               null,
               v_billing_acc_trx_set_id,
               null
          );
     else
     
          pkg_db_object.sp_billing_acct_trx_process
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_object_cache,
               io_action_outcome_id
          );
          
     end if;
           
end sp_entity_disb_prf_add;

--------------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_syncup_disb_prf_address  --addeess update on disbursement profile
(
     in_session_id                  in             object.object_id%type,
     in_transaction_id              in             object.object_id%type,
     in_action_object_id            in             object.object_id%type,
     io_action_outcome_id           in out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name               constant system_log.program_name%type := pkg_name ||'sp_syncup_disb_prf_address';
     v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
     v_ctf_mode_id                  char(1);
     v_multipayer_enabled_tf        char(1);
     v_entity_id                    object.object_id%type;
     --v_current_list                 object.object_id%type;
     v_ultimate_customer_id         object.object_id%type;
     v_entity_billing_account_id    object.object_id%type;
     v_policy_image_id              object.object_id%type;
     v_policy_current_term_id       object.object_id%type;
     v_billing_account_type_id      object.object_id%type;     
     v_ctf_profile                  object_bv_value.business_variable_value%type;     
     v_entity_billing_add           object_bv_value.business_variable_value%type;
     v_pref_disb_profile            object_bv_value.business_variable_value%type;
     
     v_current_date                 date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_action_object_id));
     v_billing_acc_trx_set_id       object.object_id%type;
     
     v_preferred                    object_bv_value.business_variable_value%type;
     v_prf_recurrency_mode          object_bv_value.business_variable_value%type;
     v_ctf_profile_id               object.object_id%type;
     v_batch_entry_method           object_bv_value.business_variable_value%type;
     v_object_cache                 pkg_os_object_cache.t_object_cache;
     v_disb_prf_address_id          object.object_id%type;
     v_dp_object_id                 object.object_id%type;
     v_disb_prof_usg_updt_id        object.object_id%type;
     v_ba_plchldr_cheque_ctf        object.object_id%type;
     v_action_object_type_id        object_type.OBJECT_TYPE_ID%type;
     v_bv_table                     pkg_os_object_io.t_bv_table;
     v_datamart_tf                  char(1) := 'T';
     v_entity_chk_pass_tf           char(1) := 'F';
     v_count                        number;
     v_term_entity_id               object.object_id%type;
     
     v_customer_entity_list         pkg_os_object.t_object_list;
     v_customer_entity_idx          number;  

begin     
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Object type ID: ' || v_action_object_type_id ||
               '..Action Object ID:' || in_action_object_id
          );

     end if;
                                
     case
          
          when v_action_object_type_id = pkg_os_constant.gobjType_PolicyTransaction then
               
               -- Get the customer's billing account id
               v_ultimate_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id
                                         );
                                          
               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_Id              =>    in_session_id,
                    in_transaction_id          =>    in_transaction_id,
                    in_object_id               =>    v_ultimate_customer_id,
                    in_child_object_type_id    =>    pkg_os_constant.gObjType_CustomerEntity,
                    in_object_list             =>    v_customer_entity_list
               );
               
               v_customer_entity_idx := v_customer_entity_list.first;

               while v_customer_entity_idx is not null loop

                    v_entity_id := v_customer_entity_list(v_customer_entity_idx);
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Entity ID: ' || v_entity_id
                         );

                    end if;
                                   
                    sp_entity_disb_prf_add
                    (
                         in_session_id,
                         in_transaction_id,
                         v_entity_id,
                         io_action_outcome_id               
                    );  
                    
                    v_customer_entity_idx := v_customer_entity_list.next(v_customer_entity_idx);                                   
                                   
               end loop;                           
          
          when v_action_object_type_id = pkg_os_constant.gObjType_CustomerEntity then               
               
               v_entity_id := in_action_object_id;
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Entity ID: ' || v_entity_id
                    );

               end if;
                                            
               sp_entity_disb_prf_add
               (
                    in_session_id,
                    in_transaction_id,
                    v_entity_id,
                    io_action_outcome_id               
               );
     
     end case; 
     
end sp_syncup_disb_prf_address;


-- end OSPRODUCT-25867 

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_ba_prf_setup_nb_pnbt
--
--  %USAGE
--    Procedure to set up new profile for Billing Account while binding a new policy
--    or binding a new term transaction
--    Is be called if both preferred Payment and Disbursement profile of the BA is null
--    and after the profile setup is done for teh transaction.
--
--  %ASSUMPTION
--    1. The profile setup is already done for the transaction and the new term
--    2. Profile object (CTF) is present at the PT's associated BATS object
--
--  %ALGORITHM
--    Not provided
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_policy_trx_id                       Policy Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  io_action_outcome_id                   Action Outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_ba_prf_setup_nb_pnbt
(
     in_session_id                  in             object.object_id%type,
     in_transaction_id              in             object.object_id%type,
     in_policy_trx_id               in             object.object_id%type,
     in_billing_account_id          in             object.object_id%type,
     io_action_outcome_id           in out nocopy  outcome.outcome_id%type
)
is
     v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name               constant system_log.program_name%type := pkg_name || 'sp_ba_prf_setup_nb_pnbt';

     v_policy_image_id              object.object_id%type;
     v_billing_account_id           object.object_id%type;
     v_cash_trsp_prf_id             object.object_id%type;
     v_ba_disb_prfl_usg_id          object.object_id%type;
     v_ba_pmnt_prfl_usg_id          object.object_id%type;
     v_billing_acc_trx_set_id       object.object_id%type;
     v_pay_prof_usg_updt_id         object.object_id%type;
     v_disb_prof_usg_updt_id        object.object_id%type;

     v_datamart_tf                  char(1) := 'T';
     v_ptp_effective_date           date;

     v_bv_table                     pkg_os_object_io.t_bv_table;
     --2828
     v_payment_mode                 number;
     v_dis_prf_id                   object.object_id%type;
     v_disb_profile_Check_tf        pd_property.pd_property_value%type := nvl(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_trx_id, pkg_db_constant.gDisbursementProfileCheckTF),'F');        --2828
     v_requested_by_ba_trx_set      object.object_id%type; -- 2828
     v_batch_entry_method           object_bv_value.business_variable_value%type;  --PRODUCT-8104

     v_ba_profile_config            t_ba_profile_config;
     v_multipayer_enabled_tf        lookup_list_value.lookup_enum%type;
     v_ba_profile_idx               number;
     v_ba_idx                       number;
     v_ptp_payer_list               pkg_os_object.t_object_list;
     v_term_pref_pay_profile        object_bv_value.business_variable_value%type;--UTPRODUCT-4882
     v_policy_current_term_id       object.object_id%type;   --UTPRODUCT-4882       
     v_term_payer_pref_pay_profile  object_bv_value.business_variable_value%type;
     v_payer_valid_tf               char(1) := null;
     v_billing_account_type_id      object_bv_value.business_variable_value%type;
     -- UTXPRODUCT-91 Staerts
     v_disb_cashtransferprofile_id  object.object_id%type; 
     v_create_cust_default_prof_tf  pd_property.pd_property_value%type := nvl(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_policy_trx_id, pkg_db_constant.gCreateCustmerDefaultProf_tf),'T');        --UTPRODUCT-2828
     -- UTXPRODUCT-91 Ends      										

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Start profile set up for billing account: ' || in_billing_account_id
          );

     end if;

     v_billing_account_id := in_billing_account_id;

     if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --PRODUCT-8104
     then
           v_batch_entry_method := gBatchEntryMethod_System;
     else
           v_batch_entry_method := gBatchEntryMethod_Manual;
     end if;

     -- Get the batch that requested the profile update
     -- Batch ID
     v_requested_by_ba_trx_set := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_policy_trx_id,
                                      pkg_db_constant.gbv_Ref_PTRefBillingAccTrxSet
                                 );

     v_policy_image_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_policy_trx_id,
                                         pkg_cs_profiles.gbv_PolicyTrxRefCoverages
                                    );

     v_ptp_effective_date := to_date ( pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_policy_image_id,
                                           504
                                      ),pkg_os_constant.DragonDateFormatDefault
                                 );


     -- 1. Check if policy is multipayer (get multipayer flag)
     v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get -- 1=True ; 2=False
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id, --Policy_id ex: 7326999558
                                        pkg_db_multipayer.gbv_MultiPayerEnabled_PTP -- 32704624
                                   );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..MultiPayer Flag: ' || v_multipayer_enabled_tf ||
               '..Requested BATS: ' || v_requested_by_ba_trx_set ||
               '..Policy Image ID: ' || v_policy_image_id ||
               '..PTP effective Date: ' || v_ptp_effective_date
          );

     end if;

     -- 1.1. if single payer
     if nvl(v_multipayer_enabled_tf, g_No) = g_No then

          -- 1.1.1 Get Billing Account ID
          v_billing_account_id := in_billing_account_id;

          -- 1.1.2 Check if profile is not yet setup
          begin

               -- Get the preferred profile
               v_ba_pmnt_prfl_usg_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             gbv_BAPreferredPayProfUsage
                                        );

               -- Get the preferred disbursment profile
               v_ba_disb_prfl_usg_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             gbv_BAPreferredDisbProfUsage
                                        );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Preferred payment profile: ' || v_ba_pmnt_prfl_usg_id ||
                         '..Preferred disb profile: '    || v_ba_disb_prfl_usg_id
                    );

               end if;

          end;

          -- 1.1.3 if not setup Get the CTF from requested batch
          if v_ba_pmnt_prfl_usg_id is null and v_ba_disb_prfl_usg_id is null then

               --UTPRODUCT-4882 changed that preferred profile should be get from term. 
               --Same logic is written for multipayer case where profile is getting picked from term payer
              /* v_cash_trsp_prf_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_requested_by_ba_trx_set,
                                                    gbv_Ref_BatchAssociatedProfile
                                               );*/
                                               
                -- Associated profile on term
                
               v_policy_current_term_id  := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_policy_trx_id,
                                                  pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                             );
               v_term_pref_pay_profile := pkg_os_object_io.fn_object_bv_get 
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_policy_current_term_id,
                                                         gbv_TermPreferredPayProfile 
                                                    );

               v_cash_trsp_prf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_term_pref_pay_profile,-- use term payer
                                          gbv_PPUCashTransferProfUSed
                                     );
                                

               -- UTPRODUCT-4882 end

               -- UTPRODUCT-2828                      
               v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_cash_trsp_prf_id,
                                          gbv_CTFPaymentMode
                                     );

               v_ba_profile_idx := v_ba_profile_config.count + 1;

               v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
               v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
               v_ba_profile_config(v_ba_profile_idx).ctf_id := v_cash_trsp_prf_id;


          end if;

     -- 1.2 If multipayer
     else

          -- Start the loop for each valid payer
          for r_payer in (
                         --
                         -- With Clause Query
                         --
                         with payers_tab 
                         ( 
                              payer_billing_account_id,
                              policy_term_payer_id 
                         ) 
                         as
                         (
                         select 
                              -- utxproduct-91 starts  
                              -- *   -- commented 
                              payer_billing_account_id,
                              policy_term_payer_id
                              -- utxproduct-91 esnds
                         from 
                              dragon_policy_term_payer
                         where 
                              policy_id = (  select 
                                                  policy_id 
                                             from 
                                                  dragon_policy_trx
                                             where 
                                                  POLICY_TRX_ID = in_policy_trx_id
                                           )
                              and 
                                   policy_term_id = pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_policy_trx_id,
                                                            pkg_db_constant.gbv_Ref_PTBelongsToTerm  -- 29728801 -- policy_term_id
                                                        )
                         )
                         --
                         -- Main Query
                         --
                         select
                              payer_billing_account_id,
                              policy_term_payer_id
                         from
                              payers_tab
                         union all                                               
                         select 
                              in_billing_account_id     payer_billing_account_id, -- PI Billing Account. 
                              to_number(null)           policy_term_payer_id
                         from 
                              dual 
                         where
                              not exists
                              (
                                   select
                                        'x'
                                   from
                                        payers_tab
                                   where 
                                        payer_billing_account_id = in_billing_account_id
                              )     
                          and 
                              nvl(v_create_cust_default_prof_tf,'T') = 'T'                                              
                           )
          loop

               -- 1.2.1 Get Billing Account ID
               v_billing_account_id := r_payer.payer_billing_account_id;

               v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_billing_account_id,
                                                 pkg_db_billing_modify.gbv_BillingAccountType
                                            ); -- BA type

               if v_billing_account_id is not null
                  and
                  v_billing_account_type_id <> pkg_db_constant.gBillingAcType_Customer
               then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Skipping as not a Customer Account:' || v_billing_account_type_id
                         );

                    end if;

               else

                    if r_payer.policy_term_payer_id is not null 
                    then -- UTXPRODUCT-91
                    
                         v_payer_valid_tf := pkg_os_object_io.fn_object_bv_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 r_payer.policy_term_payer_id, --v_ptp_payer_id,
                                                 32993324 -- payer valid tf
                                             );
                    
                    end if;  -- UTXPRODUCT-91 
                    
                    if nvl(v_payer_valid_tf,g_No) = g_Yes 
                       or 
                       r_payer.policy_term_payer_id is null  -- UTXPRODUCT-91
                    then

                         -- 1.1.2 Check if profile is not yet setup
                         begin

                              -- Get the preferred profile
                              v_ba_pmnt_prfl_usg_id := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_billing_account_id,
                                                            gbv_BAPreferredPayProfUsage
                                                       );

                              -- Get the preferred disbursment profile
                              v_ba_disb_prfl_usg_id := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_billing_account_id,
                                                            gbv_BAPreferredDisbProfUsage
                                                       );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '..Preferred payment profile: ' || v_ba_pmnt_prfl_usg_id ||
                                        '..Preferred disb profile: '    || v_ba_disb_prfl_usg_id
                                   );

                              end if;

                         end;

                         -- 1.1.3 if not setup Get the CTF from term payer
                         if v_ba_pmnt_prfl_usg_id is null and v_ba_disb_prfl_usg_id is null
                         then

                              -- Get the Cash Transfer profile
                              begin

                                   --if r_payer.policy_term_payer_id is not null 
                                   -- -- [RR]
                                   if v_billing_account_id != in_billing_account_id
                                      or
                                      (
                                           v_billing_account_id = in_billing_account_id
                                           and
                                           r_payer.policy_term_payer_id is not null
                                      )
                                   then
                                         
                                        -- Associated profile
                                        v_term_payer_pref_pay_profile := pkg_os_object_io.fn_object_bv_get ---step - 2
                                                                             (
                                                                                  in_session_id,
                                                                                  in_transaction_id,
                                                                                  r_payer.policy_term_payer_id,
                                                                                  gbv_TermPayerPrefPayProf --
                                                                             );

                                        v_cash_trsp_prf_id := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_term_payer_pref_pay_profile,-- use term payer
                                                                   gbv_PPUCashTransferProfUSed
                                                              );

                                        -- UTPRODUCT-2828
                                        v_payment_mode := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_cash_trsp_prf_id,
                                                                   gbv_CTFPaymentMode
                                                              );

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Batch ID: ' || v_requested_by_ba_trx_set ||
                                                  '..Term Payer preferred profile: '||v_term_payer_pref_pay_profile||
                                                  '..Cash Transfer Profile ID: '||v_cash_trsp_prf_id||
                                                  '..Profile ID: ' || v_cash_trsp_prf_id||
                                                  '..Payer Billing Account ID: ' || v_billing_account_id||
                                                  '..If valid Payer: ' || v_payer_valid_tf||
                                                  '..Mode: '|| v_payment_mode
                                             );

                                        end if;
                                        
                                   -- UTXPRODUCT-91 Starts
                                   else
                                        -- [RR]
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Creating default profile for the customer..'
                                             );

                                        end if;
                                        
                                   
                                        v_payment_mode := g_PaymentMode_Cheque;
                                        --Create CTF for disbursement profile
                                        
                                        pkg_db_profiles.sp_setup_new_ctf
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             g_PaymentMode_Cheque,
                                             null,
                                             --v_disb_cashtransferprofile_id -- [rr] additional variable is not required
                                             v_cash_trsp_prf_id
                                        );
                                        
                                        --v_cash_trsp_prf_id := v_disb_cashtransferprofile_id; 
                                        
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Batch ID..: ' || v_requested_by_ba_trx_set ||
                                                  '..Cash Transfer Profile ID: '||v_cash_trsp_prf_id||
                                                  '..Payer Billing Account ID: ' || v_billing_account_id||
                                                  '..Mode: '|| v_payment_mode
                                             );

                                        end if;
                                   
                                   end if;
                                   -- UTXPRODUCT-91 Ends.  

                              end;

                              v_ba_profile_idx := v_ba_profile_config.count + 1;

                              v_ba_profile_config(v_ba_profile_idx).billing_account_id := v_billing_account_id;
                              v_ba_profile_config(v_ba_profile_idx).payment_mode := v_payment_mode;
                              v_ba_profile_config(v_ba_profile_idx).ctf_id := v_cash_trsp_prf_id;

                         end if;

                    else

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Not a VALID Payer.. Payer ID: '||r_payer.policy_term_payer_id
                              );

                         end if;

                    end if;

               end if;

          end loop;

     end if;

     -- 2. Do the setup for each billing account
     v_ba_idx := v_ba_profile_config.first;

     while v_ba_idx is not null loop

          v_cash_trsp_prf_id := v_ba_profile_config(v_ba_idx).ctf_id;
          v_billing_account_id := v_ba_profile_config(v_ba_idx).billing_account_id;
          v_payment_mode := v_ba_profile_config(v_ba_idx).payment_mode;
          v_ba_pmnt_prfl_usg_id := null;
          v_ba_disb_prfl_usg_id := null;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Cash transfer profile ID: ' || v_cash_trsp_prf_id ||
                    '..Payer Billing Account ID: '||v_billing_account_id||
                    '..Payment Mode: '||v_payment_mode||
                    '..Payment profile usage ID: '||v_ba_pmnt_prfl_usg_id||
                    '..Disbursement profile usage ID: '||v_ba_disb_prfl_usg_id
               );

          end if;

          -- Set up the usage object
          begin

               if v_ba_pmnt_prfl_usg_id is null then

                    -- Profile
                    sp_create_ppu
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_account_id,
                         in_policy_trx_id,
                         v_cash_trsp_prf_id,
                         v_ba_pmnt_prfl_usg_id
                    );

                    -- Do trx specific setup
                    v_bv_table.delete;

                    -- Set start date
                    -- Set start date
                    if trunc(v_ptp_effective_date) < trunc(sysdate) then
                         v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_ptp_effective_date, pkg_os_constant.DragonDateFormatDefault);
                    else
                         v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
                    end if;

                    -- Recurring
                    -- Recurring when added through NB/PNBT workflow
                    v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                    -- Preferred - yes
                    -- Preferred when added through NB/PNBT workflow
                    v_bv_table(gbv_PPUPreferredtf).business_variable_value := g_Yes;

                    -- Created by batch
                    v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_requested_by_ba_trx_set;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ba_pmnt_prfl_usg_id,
                         v_bv_table
                    );

                    /*-- Create Pay usage update
                    -- UTPRODUCT-3791
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         pkg_db_constant.gObjType_ProfileUsageUpdate,
                         v_requested_by_ba_trx_set,
                         v_pay_prof_usg_updt_id
                    );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_pay_prof_usg_updt_id,
                         gbv_PrfUpdateRefPayProfile,
                         v_ba_pmnt_prfl_usg_id
                    );*/

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Payment Profile: ' || v_requested_by_ba_trx_set ||
                              '.. Payment Profile Usage Update: ' || v_pay_prof_usg_updt_id
                         );

                    end if;

               end if;

               if v_ba_disb_prfl_usg_id is null then

                    --2828
                    if not(nvl(v_payment_mode,0) = g_PaymentMode_Cheque or v_disb_profile_Check_tf='F') then ----UTPRODUCT-4882

                         pkg_db_profiles.sp_setup_new_ctf
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_account_id,
                              g_PaymentMode_Cheque,
                              null,
                              v_dis_prf_id
                         );

                        if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Disbursement profile CTF ID: ' || v_dis_prf_id ||
                                   '.. Payment profile CTF ID: ' || v_cash_trsp_prf_id
                              );

                    end if;

                    else

                         v_dis_prf_id := v_cash_trsp_prf_id;

                    end if;

                    -- 2828 end
                    -- Disbursement Profile
                    sp_create_dpu_for_customer
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_account_id,
                         in_policy_trx_id,
                         v_dis_prf_id,  -- 2828
                         null, -- no placeholder; default setup
                         v_ba_disb_prfl_usg_id
                    );

                    -- Do the trx specific setup
                    v_bv_table.delete;

                    -- Set start date
                    if trunc(v_ptp_effective_date) < trunc(sysdate) then
                         v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_ptp_effective_date, pkg_os_constant.DragonDateFormatDefault);
                    else
                         v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
                    end if;

                    -- Recurring
                    -- Recurring when added through NB/PNBT workflow
                    v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                    -- Preferred - yes
                    -- Preferred when added through NB/PNBT workflow
                    v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;

                    -- Created by batch
                    -- UTPRODUCT-3791
                    v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_requested_by_ba_trx_set;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ba_disb_prfl_usg_id,
                         v_bv_table
                    );

                    /*-- Create Disb usage update
                    -- -- UTPRODUCT-3791
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         pkg_db_constant.gObjType_ProfileUsageUpdate,
                         v_requested_by_ba_trx_set,
                         v_disb_prof_usg_updt_id
                    );

                    -- Set references for usage update object
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_disb_prof_usg_updt_id,
                         gbv_PrfUpdateRefDisbProfile,
                         v_ba_disb_prfl_usg_id
                    );*/

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Disb Profile: ' || v_requested_by_ba_trx_set ||
                              '.. Disb Profile Usage Update: ' || v_pay_prof_usg_updt_id
                         );

                    end if;

               end if;

          end;

          -- Associate the profile to Billing Account
          begin

               -- Set preferred profile reference on BA
               -- OSPRODUCT-7957
               -- BV made calculated
               /*pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BAPreferredPayProfUsage,
                    v_ba_pmnt_prfl_usg_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    gbv_BAPreferredDisbProfUsage,
                    v_ba_disb_prfl_usg_id
               );*/
               -- end OSPRODUCT-7957

               -- Set usage of reference on profile usage
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ba_pmnt_prfl_usg_id,
                    gbv_UsageOfGenericObject,
                    v_billing_account_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_ba_disb_prfl_usg_id,
                    gbv_UsageOfGenericObject,
                    v_billing_account_id
               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profiles associated with the Billing Account.'
                    );

               end if;

          end;

          -- Set up new ProfileUsageUpdate Batch to keep a history of the association to BA of the new profile
          begin


               -- 2828
               -- Check if in_requested_by_ba_trx_set has already created a BATS of type profileusageupdate.
               -- if yes, use same BATS, else create new.
               begin

                    select
                         billingaccounttrxset_id
                    into
                         v_billing_acc_trx_set_id
                    from
                         dragon_billingaccounttrxset bats
                    where
                         bats.parent_billing_account_id = v_billing_account_id
                    and
                         bats.created_by_billingtrxset = v_requested_by_ba_trx_set -- -- UTPRODUCT-3791
                    and
                         batch_type_id = g_bats_typeid_profileussage;

               exception

                    when no_data_found then

                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_constant.gObjType_BillingAccountTrxSet,
                              v_billing_account_id,
                              v_billing_acc_trx_set_id
                         );

                         -- Created by batch
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,
                              pkg_db_object.gbv_FITrxSet_CreatedbyBatch,
                              v_requested_by_ba_trx_set
                         );
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. profileupdate batch is not created for this transaction. So, create new: '  || v_billing_acc_trx_set_id
                              );

                         end if;

                         -- 2828 end
                         v_bv_table.delete;

                         -- Batch Type
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;

                         -- Batch ID
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );

                         -- Entered By
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

                         -- Process date
                         v_bv_table(pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault);

                         -- Object State
                         v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := pkg_db_object.gBatchStatus_Processed;

                         -- Posted Date
                         v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault);

                         -- Associated CTF
                         v_bv_table(gbv_Ref_BatchAssociatedProfile).business_variable_value := v_cash_trsp_prf_id;

                         -- Entry method
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method;  --PRODUCT-8104


                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,
                              v_bv_table
                         );
                         
                         --OSPRODUCT-12721_2
                         --Call to Document Processing
                         pkg_db_object.sp_billing_doc_processing
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,    
                              io_action_outcome_id
                         );
                         

               

               end;
               -- 2828

               -- Create Pay usage update
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_constant.gObjType_ProfileUsageUpdate,
                    v_billing_acc_trx_set_id,
                    v_pay_prof_usg_updt_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_pay_prof_usg_updt_id,
                    gbv_PrfUpdateRefPayProfile,
                    v_ba_pmnt_prfl_usg_id
               );

               -- Create Disb usage update
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_constant.gObjType_ProfileUsageUpdate,
                    v_billing_acc_trx_set_id,
                    v_disb_prof_usg_updt_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_disb_prof_usg_updt_id,
                    gbv_PrfUpdateRefPayProfile,
                    v_ba_disb_prfl_usg_id
               );

               /*pkg_db_object.sp_billing_acct_trx_process
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_object_cache,
                    io_action_outcome_id
               );*/

          end;

          -- Datamart update
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_ba_pmnt_prfl_usg_id, v_datamart_tf);
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_ba_disb_prfl_usg_id, v_datamart_tf);
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_billing_acc_trx_set_id, v_datamart_tf);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Datamart Updated.'
               );

          end if;

          v_ba_idx := v_ba_profile_config.next(v_ba_idx);

     end loop;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_ba_prf_setup_nb_pnbt;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_ba_profile_setup
--
--  %USAGE
--    Procedure to set up new profile for Billing Account
--    Workflow : BA -> Profile Summary -> New Payment/Disbursement Profile
--    Assumption : BA's Cheque Placholder holds the profile attributes entered by the user
--
--  %ALGORITHM
--    Not provided
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  io_action_outcome_id                   Action Outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_ba_profile_setup
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type
) is

     v_procedure_name                      constant system_log.program_name%type := pkg_name ||'sp_ba_profile_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);

     v_ba_plchldr_cheque_ctf               object.object_id%type;
     v_ba_plchldr_prf_ctf                  object.object_id%type;
     v_ba_plchldr_disb_prof                object.object_id%type;
     v_pp_object_id                        object.object_id%type;
     v_dp_object_id                        object.object_id%type;
     v_ctf_object_id                       object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type;
     v_disb_prof_usg_updt_id               object.object_id%type;
     v_pay_prof_usg_updt_id                object.object_id%type;
     v_profile_to_stop_id                  object.object_id%type;
     v_pref_pay_prof_id                    object.object_id%type; --OSPRODUCT-8715

     v_preferred_tf                        object_bv_value.business_variable_value%type;
     v_payment_method                      object_bv_value.business_variable_value%type;
     v_profile_new_or_existing             object_bv_value.business_variable_value%type;
     v_profile_type                        object_bv_value.business_variable_value%type;
     v_associate_prof_to_policy            object_bv_value.business_variable_value%type;
     v_existing_profile_stop_date          object_bv_value.business_variable_value%type;
     v_prf_sanity_chk_code                 object_bv_value.business_variable_value%type;  
     v_batch_entry_method                  object_bv_value.business_variable_value%type;

     v_bv_table                            pkg_os_object_io.t_bv_table;
     io_object_cache                       pkg_os_object_cache.t_object_cache;    

     v_profile_start_date                  object_bv_value.business_variable_value%type;
     v_current_date                        date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_account_id));    
     v_datamart_tf                         char(1) := 'T';

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Billing Account ID: ' || in_billing_account_id               
          );

     end if;

     -- Cheque Placeholder
     v_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_billing_account_id,
                                     gbv_BACTFPlchldrCheque
                                );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Cheque Placeholder CTF ID: ' || v_ba_plchldr_cheque_ctf
          );

     end if;

     if v_ba_plchldr_cheque_ctf is not null then

          -- 1. Get the UI inputs from cheque placeholder         
          begin

               -- get the ref BV value for Cash/Cheque placeholders Mode (credit card / eft / bill me)
               v_payment_method := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ba_plchldr_cheque_ctf,
                                        gbv_CTFPaymentMode
                                   );

               -- Preferred?
               v_preferred_tf := nvl( pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ba_plchldr_cheque_ctf,
                                           gbv_CTFPreferredTF
                                      ), g_No
                                    );

               -- Profile Type
               v_profile_type := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_ba_plchldr_cheque_ctf,
                                      gbv_CTFProfileType
                                 );

               -- Profile Start date
               -- OSPRODUCT-2442               
               v_profile_start_date := pkg_os_object_io.fn_object_bv_get
                                       (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ba_plchldr_cheque_ctf,
                                             gbv_CTFStartDate
                                       );

                                     
               -- OSPRODUCT-4031
               if v_profile_start_date is null
                  or
                  trunc(to_date(v_profile_start_date, pkg_os_constant.DragonDateFormatDefault)) < v_current_date
               then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Date entered on UI: ' || v_profile_start_date
                         );

                    end if;

                    v_profile_start_date := to_char(v_current_date,pkg_os_constant.DragonDateFormatDefault);

               end if;                    

               -- OSPRODUCT-2558
               -- Reverted OSPRODUCT-2442                                    
               -- v_profile_start_date := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

               -- Associate to Policy                                        
               v_associate_prof_to_policy := nvl ( pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_ba_plchldr_cheque_ctf,
                                                        gbv_CTFAssociateToPolicy
                                                   ), g_No);

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Method: ' || v_payment_method ||
                         '.. Preferred?: '     || v_preferred_tf   ||
                         '.. Profile Type: '   || v_profile_type   ||
                         '.. Start Date: '     || v_profile_start_date ||
                         '.. Sysdate: '        || sysdate || 
                         '.. Associate Profile to Policy: ' || v_associate_prof_to_policy
                    );

               end if;

               if v_payment_method is null
                  or
                  v_profile_type is null
               then               

                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Profile setup error - Insufficient details.'
                    );

                    raise PROFILE_SETUP_ERROR;

               end if;

          end;

          v_prf_sanity_chk_code := null;

          while v_prf_sanity_chk_code is null
                or
                (
                     v_prf_sanity_chk_code != g_PrfVldtnCd_ValidationPassed
                     and
                     v_preferred_tf = g_Yes
                )
          loop

               v_ctf_object_id := null;
               v_pp_object_id := null;
               v_dp_object_id := null;

               -- 2. Get existing CTF or create new 
               begin

                    case

                         when v_payment_method = g_PaymentMode_Cheque then

                              v_profile_new_or_existing := null;
                              v_ba_plchldr_prf_ctf := null;

                         when v_payment_method = g_PaymentMode_Card then

                              v_profile_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                v_ba_plchldr_cheque_ctf,
                                                                gbv_CTFCardNewOrExisting
                                                           );

                         when v_payment_method = g_PaymentMode_EFT then

                              v_profile_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                v_ba_plchldr_cheque_ctf,
                                                                gbv_CTFEFTNewOrExisting
                                                           );

                         else

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Payment method not supported..'               
                                   );

                              end if;

                              null;

                    end case;

                    if v_profile_new_or_existing = g_Profile_Type_Existing then

                         v_ctf_object_id := pkg_os_object_io.fn_object_bv_path_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_billing_account_id,
                                                 '210356.211681.210133.210135'
                                            );
                         --UTPRODUCT-4407                   
                         if v_ctf_object_id is null
                         then
                              
                              v_ctf_object_id :=  pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_account_id,
                                            33046048
                                       );                  
                         end if;
                                            
                         if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_ctf_object_id) = pkg_db_constant.gObjType_PaymentProfileUsage then

                              v_ctf_object_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_ctf_object_id,
                                                      gbv_PPUCashTransferProfUSed
                                                 );

                         end if;

                    else

                         if v_payment_method = g_PaymentMode_Card then

                              v_ba_plchldr_prf_ctf := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_billing_account_id,
                                                           gbv_BACTFPlchldrCard
                                                      );

                         elsif v_payment_method = g_PaymentMode_EFT then

                              v_ba_plchldr_prf_ctf := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_billing_account_id,
                                                           gbv_BACTFPlchldrEFT
                                                      );

                         else

                              v_ba_plchldr_prf_ctf := null;

                         end if;

                         sp_setup_new_ctf
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              v_payment_method,
                              v_ba_plchldr_prf_ctf,
                              v_ctf_object_id,
                              'T'
                         );

                    end if;

                    --if v_cash_trsp_prf_id is not null
                    v_prf_sanity_chk_code := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ctf_object_id,
                                                  gbv_ProfileErrorCode
                                             );                    

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Profile object: ' || v_ctf_object_id ||
                              '.. Sanity Check Code: ' || v_prf_sanity_chk_code
                         );

                    end if;

                    if v_ctf_object_id is null then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Profile setup error - Profile object not created or found, hence terminating'
                         );

                         raise PROFILE_SETUP_ERROR;

                    end if;

               end;

               -- 3. Set up Profile usage update batch          
               begin

                    if v_billing_acc_trx_set_id is null then

                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_billing_modify.gObjType_BillingAccountTrxSet,
                              in_billing_account_id,
                              v_billing_acc_trx_set_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'Profile uUpdate batch created: ' || v_billing_acc_trx_set_id   --KP --OSPRODUCT-6123
                              );

                         end if;
                         
                         if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-6123
                              then 
                                  v_batch_entry_method := gBatchEntryMethod_System;
                               else
                                  v_batch_entry_method := gBatchEntryMethod_Manual;
                               end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,
                              pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate,
                              to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault)
                         );

                         v_bv_table.delete;
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
                         v_bv_table(32133240).business_variable_value := pkg_db_functions.fn_get_fitransset_acct_prd
                                                                                      (
                                                                                           in_session_id,
                                                                                           in_transaction_id ,
                                                                                           v_billing_acc_trx_set_id
                                                                                      );
                         -- Entry method  
                         v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method; --OSPRODUCT-6123                                                         
                         v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := 39846;
                         v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate (in_session_id,in_transaction_id,v_billing_acc_trx_set_id),pkg_os_constant.DragonDateFormatDefault)  ;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_acc_trx_set_id,
                              v_bv_table
                         );

                    end if;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_acc_trx_set_id,
                         gbv_Ref_BatchAssociatedProfile,
                         v_ctf_object_id
                    );

               end;

               -- 4. Setup usage
               begin

                    -- Profile          
                    if v_profile_type = g_Profile_Type_Pmnt
                       or
                       v_profile_type = g_Profile_Type_Both
                    then

                         sp_create_ppu
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              null,
                              v_ctf_object_id,
                              v_pp_object_id
                         );

                         v_bv_table.delete;

                         -- Set start date
                         v_bv_table(gbv_PPUStartDate).business_variable_value := v_profile_start_date;

                         -- Recurring/Adhoc as requested
                         v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                         -- Preferred - yes/no as requested
                         v_bv_table(gbv_PPUPreferredtf).business_variable_value := v_preferred_tf;

                         -- Created by batch
                         v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_pp_object_id,
                              v_bv_table
                         );

                         -- Create ProfileUsageUpdate for corresponding to this BillingAccountTransactionSet
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_constant.gObjType_ProfileUsageUpdate, --ProfileUsageUpdate
                              v_billing_acc_trx_set_id,
                              v_pay_prof_usg_updt_id
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_pay_prof_usg_updt_id,
                              gbv_PrfUpdateRefPayProfile, --RReference_Referred Profile
                              v_pp_object_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Payment Profile: ' || v_pp_object_id ||
                                   '.. Payment Profile Usage Update: ' || v_pay_prof_usg_updt_id                               
                              );

                         end if;                    

                    end if;

                    -- Disbursement Profile
                    if v_profile_type = g_Profile_Type_Disb 
                       or
                       v_profile_type = g_Profile_Type_Both
                    then

                         -- get the ref BV value for Disb Profile placeholders.
                         v_ba_plchldr_disb_prof := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_billing_account_id,
                                                        gbv_BAPlchldrDisbProfUsage
                                                   );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...Reference Placeholder Disb Profile ID: ' ||
                                   v_ba_plchldr_disb_prof
                              );

                         end if;

                         -- Create New DisbursementProfilelUsage object
                         sp_create_dpu_for_customer
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              null,
                              v_ctf_object_id,
                              v_ba_plchldr_disb_prof,
                              v_dp_object_id
                         );

                         v_bv_table.delete;

                         -- Set start date
                         v_bv_table(gbv_DPUStartDate).business_variable_value := v_profile_start_date;

                         -- Recurring/Adhoc as requested
                         v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                         -- Preferred - yes/no as requested
                         v_bv_table(gbv_DPUPreferredtf).business_variable_value := v_preferred_tf;

                         -- Created by batch
                         v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_dp_object_id,
                              v_bv_table
                         );

                         -- Usage update
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_db_constant.gObjType_ProfileUsageUpdate, --ProfileUsageUpdate
                              v_billing_acc_trx_set_id,
                              v_disb_prof_usg_updt_id
                         );

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_disb_prof_usg_updt_id,
                              gbv_PrfUpdateRefDisbProfile, --RReference_Referred disb Profile
                              v_dp_object_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Disbursement Profile: ' || v_dp_object_id ||
                                   '.. Disbursement Profile Usage Update: ' || v_disb_prof_usg_updt_id                               
                              );

                         end if;                  

                    end if;

               end; 

               -- 5. Associate the profile to the BA
               begin

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Associating profile to billing account.'
                         );

                    end if;

                    -- Associate Profile to Account
                    if v_pp_object_id is not null then                              

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_pp_object_id,
                              gbv_UsageOfGenericObject,
                              in_billing_account_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Payment Profile associated to BA..'
                              );

                         end if;

                    end if;

                    if v_dp_object_id is not null then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_dp_object_id,
                              gbv_UsageOfGenericObject,
                              in_billing_account_id
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Disbursement Profile associated to BA..'
                              );

                         end if;

                    end if;

                    -- Associate account to profile                    
                    if v_preferred_tf is not null
                       and
                       v_preferred_tf = g_Yes
                       and
                       v_prf_sanity_chk_code = g_PrfVldtnCd_ValidationPassed
                    then

                         -- OSPRODUCT-2992
                         -- [RR - Review] Promote this condition
                         if trunc(to_date(v_profile_start_date,'YYYYMMDDHH24MISS')) = trunc(v_current_date) then

                              if v_pp_object_id is not null then

                                   -- Associate account to profile
                                   -- OSPRODUCT-7957
                                   -- BV made calculated
                                   /*
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        gbv_BAPreferredPayProfUsage,
                                        v_pp_object_id
                                   );
                                   */
                                   -- end OSPRODUCT-7957

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Preferred Payment Profile set on BA..'
                                        );

                                   end if;

                              end if;

                              if v_dp_object_id is not null then

                                   -- Associate account to profile
                                   -- OSPRODUCT-7957
                                   -- BV made calculated
                                   /*
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_account_id,
                                        gbv_BAPreferredDisbProfUsage,
                                        v_dp_object_id
                                   );
                                   */
                                   -- end OSPRODUCT-7957

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Preferred Disbursement Profile set on BA..'
                                        );

                                   end if;

                              end if;

                         else

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_pp_object_id,
                                   gbv_PPUProfileDirty,
                                   pkg_db_constant.g_Yes
                              );


                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_dp_object_id,
                                   gbv_DPUProfileDirty,
                                   pkg_db_constant.g_Yes
                              );        

                              -- [RR - Review] Add a log that is make more sense
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'Preferrred profile added, effective from future date. '
                                   );

                              end if;

                         end if;

                    end if;

               end;      

               -- OSPRODUCT-2558
               -- 6. Put stop date on existing preferred profiles.
               begin

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Put stop date on existing profiles..' || v_existing_profile_stop_date                      
                         );

                    end if;

                    if v_preferred_tf = g_Yes 
                       and
                       v_prf_sanity_chk_code = g_PrfVldtnCd_ValidationPassed
                    then

                         -- Profile Stop date
                         v_existing_profile_stop_date := to_char(trunc ( to_date ( v_profile_start_date ,'YYYYMMDDHH24MISS' )) - 1, 'YYYYMMDDHH24MISS');          

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Stop Date: ' || v_existing_profile_stop_date                      
                              );

                         end if;

                         if v_profile_type = g_Profile_Type_Pmnt
                            or
                            v_profile_type = g_Profile_Type_Both
                         then

                              -- OSPRODUCT-2992                    
                              for v_profile_rec in c_ba_pay_profile_to_stop 
                                                   ( 
                                                        in_billing_account_id,
                                                        v_pp_object_id,
                                                        to_date ( v_profile_start_date ,'YYYYMMDDHH24MISS' )
                                                   ) 
                              loop

                                   v_profile_to_stop_id := v_profile_rec.pay_profile_id;

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             'Stopping pay profile: ' || v_profile_to_stop_id
                                        );

                                   end if; 

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_profile_to_stop_id,
                                        gbv_PPUStopDate,
                                        v_existing_profile_stop_date
                                   );

                                   pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_profile_to_stop_id, v_datamart_tf);

                              end loop;

                         end if;

                         if v_profile_type = g_Profile_Type_Disb
                            or
                            v_profile_type = g_Profile_Type_Both
                         then

                              -- OSPRODUCT-2992
                              for v_profile_rec in c_ba_disb_profile_to_stop 
                                                   ( 
                                                        in_billing_account_id,
                                                        v_dp_object_id,
                                                        to_date ( v_profile_start_date ,'YYYYMMDDHH24MISS' )
                                                   ) 
                              loop

                                   v_profile_to_stop_id := v_profile_rec.disb_profile_id;

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             'Stopping disb profile: ' || v_profile_to_stop_id
                                        );

                                   end if; 

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_profile_to_stop_id,
                                        gbv_DPUStopDate,
                                        v_existing_profile_stop_date
                                   );

                                   pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_profile_to_stop_id, v_datamart_tf);

                              end loop;

                         end if;

                    end if;

               end;

               -- 7 Cache cleanup OSPRODUCT-8715
               declare

               v_list_idx varchar2(500);

               begin
                    
                    if v_session_control.gLogging_Full 
                    then

                        pkg_os_logging.sp_log
                        (
                            in_session_id, 
                            in_transaction_id, 
                            v_procedure_name,
                            '..Clearing up the cache..'
                        );

                    end if;

                    v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.first;

                    while v_list_idx is not null
                    loop
                         
                         if v_session_control.gLogging_Full 
                         then

                             pkg_os_logging.sp_log
                             (
                                 in_session_id, 
                                 in_transaction_id, 
                                 v_procedure_name,
                                 '.. List Index: ' || v_list_idx ||
                                 '.. Value: '      || pkg_db_object_cache_io.g_preferred_profile_cache(v_list_idx)
                             );

                         end if;

                         if instr(v_list_idx, in_billing_account_id) <> 0
                         then
                              
                              pkg_db_object_cache_io.g_preferred_profile_cache.delete(v_list_idx);

                              if v_session_control.gLogging_Full 
                              then

                                  pkg_os_logging.sp_log
                                  (
                                      in_session_id, 
                                      in_transaction_id, 
                                      v_procedure_name,
                                      ' Deleted index.. ' || v_list_idx
                                  );

                              end if;

                              exit;

                         end if;

                         v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.next(v_list_idx);

                    end loop;

               end;
               
               -- 8 Datamart update
               begin
                    -- Update datamart
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_pp_object_id, v_datamart_tf);
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_dp_object_id, v_datamart_tf);
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_pay_prof_usg_updt_id, v_datamart_tf);
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_disb_prof_usg_updt_id, v_datamart_tf);
                    --pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_billing_account_id, v_datamart_tf);
                    
                    --OSPRODUCT-8715
                    v_pref_pay_prof_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id , in_billing_account_id, gbv_BAPreferredPayProfUsage);
                     
                    if v_pref_pay_prof_id is not null 
                    then
                         
                        update dragon_billingaccount
                        set 
                            pref_payment_profile_id = v_pref_pay_prof_id, 
                            session_id = in_session_id,
                            transaction_id = in_transaction_id ,
                            last_updation_date = sysdate
                        where 
                            billingaccount_id = in_billing_account_id;
                            
                    end if;


                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Datamart Updated..'
                         );

                    end if;

               end;

               if v_prf_sanity_chk_code is null 
                  or
                  v_prf_sanity_chk_code != g_PrfVldtnCd_ValidationPassed
               then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Create default cheque profile.. '
                         );

                    end if; 

                    v_payment_method := g_PaymentMode_Cheque;

               end if;    

          end loop;

          -- 7. Placeholder Cleanup
          begin

               if v_associate_prof_to_policy = g_No then

                    pkg_os_object_io.sp_object_bv_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         v_ba_plchldr_cheque_ctf
                    ); 
                    
                    
                    -- get the ref BV value for Disb Profile placeholders. KP testing
                     v_ba_plchldr_disb_prof := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_billing_account_id,
                                                    gbv_BAPlchldrDisbProfUsage
                                               );
                                               
                      pkg_os_object.sp_object_delete
                       (
                          in_session_id,
                          in_transaction_id,
                          in_billing_account_id,
                          v_ba_plchldr_disb_prof,
                          2384646
                       );                          

               end if;

               if v_payment_method = g_PaymentMode_Card
                  and
                  v_profile_new_or_existing = g_Profile_Type_New
               then

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         gbv_BACTFPlchldrCard, -- Pleceholder used
                         null
                    );

               end if;

               if v_payment_method = g_PaymentMode_EFT
                  and
                  v_profile_new_or_existing = g_Profile_Type_New
               then

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         gbv_BACTFPlchldrEFT, -- Placeholder used
                         null
                    );
                                       

               end if;

          end;

          -- 8. Process the batch          
          begin

               pkg_db_object.sp_billing_acct_trx_process
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,    -- BillingAccountTransactionSet ID
                    io_object_cache,
                    io_action_outcome_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_billing_account_id,
                    gbv_BACurrentBatch,
                    v_billing_acc_trx_set_id
               );

          end;

     else

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Profile Setup Error - Placeholder not found..'
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_ba_profile_setup;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_ba_assoc_policy_prf_setup
--
--  %USAGE
--    Procedure to get the attributes before calling sp_associate_policy_to_profile for
--    associating the new profile created for the Billing Account to the policies under the account.
--
--  %ASSUMPTION
--    1. The Cheque Placeholder CTF of BA holds the required attributes for a new profile setup
--       Attributes: Recurrency Mode, Start Date, Mode, Profile Type, Preferred?, Associated to Policy?
--       Note: The attributes can be captured from the UI.
--
--  %ALGORITHM
--    Not provided
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_action_object_id                    Billing Account ID or Customer ID
--  %PARAM  io_action_outcome_id                   Action Outcome
--  %PARAM  in_policy_list_from_ui_tf              Default - T,
--                                                 Set it to F if the policies are not selected from the UI
--  %PARAM  in_policy_list                         Comma separated policy list
--                                                 Read if in_policy_list_from_ui_tf is set to F
--                                                 If null all the Policies under the account is considered.
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_ba_assoc_policy_prf_setup
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type,
     in_policy_list_from_ui_tf             in             char default 'T',
     in_policy_list                        in             object_bv_value.business_variable_value%type default null,
     in_bor_flag                           in             char := 'F'
)
is
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_ba_assoc_policy_prf_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_primary_customer_entity             object.object_id%type;
     v_billing_account_id                  object.object_id%type;
     v_placeholder_ctf_id                  object.object_id%type;
     v_profile_ctf_id                      object.object_id%type;
     v_current_list                        object.object_id%type;
     v_disb_placeholder_id                 object.object_id%type;
     v_ultimate_customer_id                object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type;

     v_action_object_type_id               object_type.object_type_id%type;

     v_selected_policies                   object_bv_value.business_variable_value%type;
     v_preferred_tf                        object_bv_value.business_variable_value%type;
     v_payment_method                      object_bv_value.business_variable_value%type;

     v_profile_type                        object_bv_value.business_variable_value%type;

     v_associate_prof_to_policy            object_bv_value.business_variable_value%type;
     v_profile_start_date                  object_bv_value.business_variable_value%type;
     v_prof_recurrency_mode                object_bv_value.business_variable_value%type;
     v_session_obj_of_interest             object_bv_value.business_variable_value%type;                                                         

     v_current_date                        date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_action_object_id));

begin

     -- Get the action object type id
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Action object type: ' || v_action_object_type_id
          );

     end if;

     -- 1. Get the Billing Account ID
     case

          when v_action_object_type_id = pkg_os_constant.gObjType_Customer then

               -- OSPRODUCT-7858
               v_ultimate_customer_id := in_action_object_id; -- OSPRODUCT-11829
               /*v_ultimate_customer_id := in_action_object_id;

               v_primary_customer_entity := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ultimate_customer_id,
                                                 pkg_db_constant.gbv_CustRefPrimaryEntity
                                            );

               v_billing_account_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_customer_entity,
                                            29704646
                                       );*/

               v_billing_account_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_session_id,
                                            pkg_db_constant.gbv_UserSessionObjectOfIntrst
                                       );

               if v_billing_account_id is null
                  or
                  pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_billing_account_id) != pkg_db_constant.gObjType_BillingAccount
               then

                    v_ultimate_customer_id := in_action_object_id;

                    v_primary_customer_entity := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_ultimate_customer_id,
                                                      pkg_db_constant.gbv_CustRefPrimaryEntity
                                                 );

                    v_billing_account_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_primary_customer_entity,
                                                 29704646
                                            );

               end if;
               -- end OSPRODUCT-7858

          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccount then

               v_billing_account_id := in_action_object_id;

               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_billing_account_id,
                                              pkg_os_constant.gObjType_Customer
                                         );

          else

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Profile Association Error - Billing Account not found..'
               );

               raise PROFILE_SETUP_ERROR;

     end case;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Billing Account ID; ' || v_billing_account_id ||
               '.. Ultimate Customer ID: ' || v_ultimate_customer_id
          );

     end if;

     -- 2. Get the policies
     begin

          if in_policy_list_from_ui_tf = 'T' then

               v_current_list := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_session_id,
                                      211681 -- Ref Current List
                                 );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Policy List ' || v_current_list
                    );

               end if;

               v_selected_policies := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_current_list,
                                           31814434 -- List Selected objects
                                      );

          elsif in_policy_list is not null then

               v_selected_policies := in_policy_list;

          else

               for v_active_policy in c_customer_active_policies(v_ultimate_customer_id) loop

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Adding Policy ID: ' || v_active_policy.policy_id
                         );

                    end if;

                    if v_selected_policies is null then
                         v_selected_policies := v_active_policy.policy_id;
                    else
                         v_selected_policies := v_selected_policies || ',' ||v_active_policy.policy_id;
                    end if;

               end loop;

          end if;

          if v_selected_policies is null then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile Association Error - No policy found to do the association..'
               );

               raise PROFILE_SETUP_ERROR;

          end if;

     end;

     -- 3. Get BATS
     begin

          v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_billing_account_id,
                                           gbv_BACurrentBatch
                                      );

     end;

     -- 4. Get the profile CTF ID
     begin

          v_profile_ctf_id:= pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_billing_acc_trx_set_id, --OSBILLING-7098
                                  gbv_Ref_BatchAssociatedProfile
                             );

          if v_profile_ctf_id is null then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile Association Error - Profile CTF not found on BA Current Batch..'
               );

               raise PROFILE_SETUP_ERROR;

          end if;

     end;

     -- 5. Get the placeholder CTF ID
     begin

          v_placeholder_ctf_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_billing_account_id,
                                       gbv_BACTFPlchldrCheque
                                  );

          if v_placeholder_ctf_id is null then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile Association Error - Placeholder Cheque CTF not found at BA..'
               );

               raise PROFILE_SETUP_ERROR;

          end if;

     end;

     -- 6. Get the disbursement placeholder ID:
     begin

          v_disb_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        gbv_BAPlchldrDisbProfUsage
                                   );

     end;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Action ID: ' || in_action_object_id ||
               '.. Action Object Type ID: ' || v_action_object_type_id ||
               '.. Billing Account ID: ' || v_billing_account_id ||
               '.. Policy List: '        || v_selected_policies ||
               '.. Profile CTF ID: '     || v_profile_ctf_id ||
               '.. Placeholder CTF ID: ' || v_placeholder_ctf_id ||
               '.. Placeholder DPU ID: ' || v_disb_placeholder_id
          );

     end if;

     -- 7. Get the profile attributes from placeholder CTF
     begin

          -- get the ref BV value for Cash/Cheque placeholders Mode (credit card / eft / bill me)
          v_payment_method := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFPaymentMode);

          -- Preferred?
          v_preferred_tf := nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFPreferredTF) , g_No);

          -- Profile Type
          v_profile_type := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFProfileType);

          -- Profile Start date
          v_profile_start_date := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFStartDate);

          if v_profile_start_date is null
             or
             trunc(to_date(v_profile_start_date, pkg_os_constant.DragonDateFormatDefault)) < v_current_date
          then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Date entered on UI: ' || v_profile_start_date
                    );

               end if;

               v_profile_start_date := to_char(v_current_date,pkg_os_constant.DragonDateFormatDefault);

          end if;

          -- Recurrency Mode
          v_prof_recurrency_mode := nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFRecurranceMode), g_RecurrencyMode_Recurring);

          -- Associate to Policy
          v_associate_prof_to_policy := nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_placeholder_ctf_id, gbv_CTFAssociateToPolicy), g_No);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payment Method: ' || v_payment_method ||
                    '.. Preferred?: '     || v_preferred_tf   ||
                    '.. Profile Type: '   || v_profile_type   ||
                    '.. Start Date: '     || v_profile_start_date ||
                    '.. Recurrency Mode: '|| v_prof_recurrency_mode ||
                    '.. Associate Profile to Policy: ' || v_associate_prof_to_policy

               );

          end if;

          if v_payment_method is null
             or
             v_profile_type is null
          then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Profile setup error - Insufficient details.'
               );

               raise PROFILE_SETUP_ERROR;

          end if;

     end;

     -- 8. Call the working horse
     begin

          sp_associate_policy_to_profile
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               v_selected_policies,
               io_action_outcome_id,
               v_billing_acc_trx_set_id,--null, --OSPRODUCT-6123
               null,
               null,
               'F',
               v_profile_ctf_id,
               v_disb_placeholder_id,
               v_profile_type,
               v_profile_start_date,
               v_preferred_tf,
               v_prof_recurrency_mode,
               'T'
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile Associated to Polici(es)..'

               );

          end if;

     end;

     -- 9. DXF     
     if v_billing_acc_trx_set_id is not null then

          pkg_cs_db_dxf_exoskeleton.sp_create_exoskeleton
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               io_action_outcome_id
          );  

     end if; 
     
     -- 10. BOR
     if in_bor_flag = 'F' then
          
          v_session_obj_of_interest := pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            in_session_id,
                                            pkg_db_constant.gbv_UserSessionObjectOfIntrst
                                        );


          for r_customer_billing_account in c_customer_billing_account(v_ultimate_customer_id) loop          

               /*pkg_cs_db_functions.sp_bor_profile
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    r_customer_billing_account.responsible_billing_account
               );*/
               
               -- OSPRODUCT-11829
               sp_cascade_prf_to_bor_acct
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    r_customer_billing_account.responsible_billing_account
               );
               
               sp_ba_profile_setup
               (
                    in_session_id,
                    in_transaction_id,
                    r_customer_billing_account.responsible_billing_account,
                    io_action_outcome_id
               );
               
               pkg_os_object_io.sp_object_bv_set
               (
                   in_session_id,
                   in_transaction_id,
                   in_session_id,
                   pkg_db_constant.gbv_UserSessionObjectOfIntrst,
                   r_customer_billing_account.responsible_billing_account
               );

               sp_ba_assoc_policy_prf_setup
               (
                    in_session_id,
                    in_transaction_id,
                    r_customer_billing_account.customer_id,
                    io_action_outcome_id,
                    'F',
                    r_customer_billing_account.policy_id,
                    'T'
               );

          end loop;
          
          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              in_session_id,
              pkg_db_constant.gbv_UserSessionObjectOfIntrst,
              v_session_obj_of_interest
          );

     end if;
     
     -- 11. Cleanup placeholder - OSPRODUCT-11829
     begin
          
          pkg_os_object_io.sp_object_bv_delete
          (
               in_session_id,
               in_transaction_id,
               v_placeholder_ctf_id
          );
          
          v_disb_placeholder_id := pkg_os_object_io.fn_object_bv_get  --KP testing
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        gbv_BAPlchldrDisbProfUsage
                                   );
           pkg_os_object.sp_object_delete
                       (
                          in_session_id,
                          in_transaction_id,
                          v_billing_account_id,
                          v_disb_placeholder_id,
                          2384646
                       );                        
                                   

     end;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;    

end sp_ba_assoc_policy_prf_setup;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_associate_policy_to_profile
--
--  %USAGE
--    Procedure to associate a profile with policy
--    The procedure needs a usage objects to do the association and if not found creates one
--    based on the attributes provide
--
--  %ALGORITHM
--    If new profile is prefrred and recurring then exiting preferred and recurring profiles
--    of the term will get a stop date.
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  in_policy_list                         Policy List (Comma separated)
--                                                 PTP, Policy, PTPPayer
--  %PARAM  in_requested_by_ba_trx_set             The batch that requested the Association
--  %PARAM  in_pay_profile_id                      PaymentProfileUsage Object ID
--  %PARAM  in_disb_profile_id                     Disbusrement ProfileUsage Object ID
--  %PARAM  in_associate_to_curr_term_tf           Default T (i.e., the profile will associate to current term only)
--                                                 If set to F the profile will be associated to
--                                                 1. Next term if one found
--                                                 2. Previous term if one found and has some open balance
--                                                 Mote: The attribute will be checked only if the Policy List has objects of type policy.
--  Below attributes are needed if the usage objects (in_pay_profile_id, in_disb_profile_id)
--  are not passed in. The procedure will set up the usage and will do the association.
--  %PARAM  in_ctf_id                              Profile Object - CTF ID
--  %PARAM  in_disb_placeholder_id                 Disbusrement Profile ID, if not provided default setup will be done.
--                                                 Should be setup at BA
--  %PARAM  in_profile_type                        Profile Type
--                                                 1. Payment, 2. Disbursement, 3. Both
--  %PARAM  in_profile_start_date                  Profile start date
--  %PARAM  in_preferred_tf                        Preferred? - 1. Yes, 2. No
--  %PARAM  in_recurring_tf                        Recurrence Mode - 1. Recurring, 2. Adhoc
--  %PARAM  in_billplan_update_tf                  Bill Plan Update required?

-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_associate_policy_to_profile
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     in_policy_list                        in             object_bv_value.business_variable_value%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type,
     in_requested_by_ba_trx_set            in             object.object_id%type default null,
     in_pay_profile_id                     in             object.object_id%type default null,
     in_disb_profile_id                    in             object.object_id%type default null,
     in_associate_to_curr_term_tf          in             char := 'T',
     in_ctf_id                             in             object.object_id%type default null,
     in_disb_placeholder_id                in             object.object_id%type default null,
     in_profile_type                       in             object_bv_value.business_variable_value%type default g_Profile_Type_Both,
     in_profile_start_date                 in             object_bv_value.business_variable_value%type default null,
     in_preferred_tf                       in             char default g_Yes,
     in_recurring_tf                       in             char default g_RecurrencyMode_Recurring,
     in_billplan_update_tf                 in             char default 'F',
     in_adhoc_profile_tf                   in             char default 'F'
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_associate_policy_to_profile';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_ultimate_customer_id                object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_policy_id                           object.object_id%type;
     v_policy_current_term_id              object.object_id%type;
     v_policy_prior_term_id                object.object_id%type;
     v_policy_next_term_id                 object.object_id%type;
     v_pp_object_id                        object.object_id%type;
     v_dp_object_id                        object.object_id%type;
     v_priorterm_pp_object_id              object.object_id%type;
     v_priorterm_dp_object_id              object.object_id%type;
     v_nextterm_pp_object_id               object.object_id%type;
     v_nextterm_dp_object_id               object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type;
     v_disb_prof_usg_updt_id               object.object_id%type;
     v_pay_prof_usg_updt_id                object.object_id%type;
     v_ba_plchldr_dpu                      object.object_id%type;
     v_profile_to_stop_id                  object.object_id%type;
     v_associated_term_payer_id            object.object_id%type;
     v_associated_nextterm_payer_id        object.object_id%type;
     v_associated_prevterm_payer_id        object.object_id%type;
     v_entity_id                           object.object_id%type;
     v_pref_pay_prof_id                    object.object_id%type; --OSPRODUCT-8715

     v_policy_object_type_id               object_type.object_type_id%type;
     v_policy_image_id                     object.object_id%type;
     v_policy_trx_id                       object.object_id%type;
     v_ptp_payer_id                        object.object_id%type;
     v_multipayer_enabled_tf               char(1);

     v_policy_prior_term_balance           number;
     v_current_date                        date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_account_id));
     v_new_profile_start_date              date;
     v_old_profile_start_date              date; -- OSPRODUCT-17719
     v_term_expiry_date                    date; -- OSPRODUCT-17719
     v_ba_profile_review_date              date;
     v_new_review_date                     date;
     v_existing_profile_stop_date          object_bv_value.business_variable_value%type;

     v_profile_type                        object_bv_value.business_variable_value%type;
     v_profile_pmnt_mode                   object_bv_value.business_variable_value%type;
     v_preferred                           object_bv_value.business_variable_value%type;
     v_prf_recurrency_mode                 object_bv_value.business_variable_value%type;
     v_prf_sanity_chk_code                 object_bv_value.business_variable_value%type;

     v_object_index                        number;

     v_policy_list                         db_policy_list_tt;
     v_datamart_tf                         char(1) := 'T';

     v_uTemplate_object_id                 object.object_id%type;

     v_policy_temp_object_list             pkg_os_token.t_string_table;
     v_temp_index                          number;
     v_pt_trx_id                           object.object_id%type;
     v_most_recent_ptp_id                  object.object_id%type;

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_object_cache                        pkg_os_object_cache.t_object_cache;
     v_req_by_bats_type                    number; --OSPRODUCT-AKM
     v_batch_entry_method                  object_bv_value.business_variable_value%type;  --PRODUCT-8104
     v_responsible_billing_account         object.object_id%type; -- UTPRODUCT-3819
     v_responsible_billing_account_id      object.object_id%type; --OSPRODUCT-30830
	 v_policy_term_expiration_date         date; --OSPRODUCT-30830

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Policy List: ' || in_policy_list ||
               '.. Requested by batch: ' || in_requested_by_ba_trx_set ||
               '.. Pay Profile: ' || in_pay_profile_id ||
               '.. Disb Profile: '|| in_disb_profile_id ||
               '.. CTF ID: '      || in_ctf_id ||
               '.. Profile Type: '|| in_profile_type ||
               '.. Start Date: '  || in_profile_start_date ||
               '.. Recurrency: '  || in_recurring_tf ||
               '.. Preferred?: '  || in_preferred_tf

          );

     end if;

     v_policy_list := new db_policy_list_tt();

     v_billing_account_id := in_billing_account_id;

     v_cash_transfer_profile_id := in_ctf_id;

     if in_policy_list is not null then

          -- 1. Get the profile details.
          begin

               if in_pay_profile_id is not null
                  and
                  in_disb_profile_id is not null
               then

                    -- Profile type - Payment, Disbursement or Both
                    v_profile_type := g_Profile_Type_Both;

                    -- Pay Profile
                    v_pp_object_id := in_pay_profile_id;

                    -- Disbursement Profile
                    v_dp_object_id := in_disb_profile_id;

                    -- Get other attributes
                    begin
                         select
                              dpp.ctf_object_id,
                              trunc(dpp.profile_start_date),
                              dpp.preferred_prof_id,
                              dpp.recur_mode_id,
                              dpp.ctf_mode_id
                         into
                              v_cash_transfer_profile_id,
                              v_new_profile_start_date,
                              v_preferred,
                              v_prf_recurrency_mode,
                              v_profile_pmnt_mode
                         from
                              dragon_pay_profile dpp
                         where
                              dpp.pay_profile_id = v_pp_object_id;

                    end;

               elsif in_pay_profile_id is not null then

                    -- Profile type - Payment, Disbursement or Both
                    v_profile_type := g_Profile_Type_Pmnt;

                    -- Pay Profile
                    v_pp_object_id := in_pay_profile_id;

                    -- Disbursement Profile
                    v_dp_object_id := null;

                    -- Get other attributes
                    begin
                         select
                              dpp.ctf_object_id,
                              trunc(dpp.profile_start_date),
                              dpp.preferred_prof_id,
                              dpp.recur_mode_id,
                              dpp.ctf_mode_id
                         into
                              v_cash_transfer_profile_id,
                              v_new_profile_start_date,
                              v_preferred,
                              v_prf_recurrency_mode,
                              v_profile_pmnt_mode
                         from
                              dragon_pay_profile dpp
                         where
                              dpp.pay_profile_id = v_pp_object_id;

                    end;

               elsif in_disb_profile_id is not null then

                    -- Profile type - Payment, Disbursement or Both
                    v_profile_type := g_Profile_Type_Disb;

                    -- Pay profile
                    v_pp_object_id := null;

                    -- Disbursment Profile
                    v_dp_object_id := in_disb_profile_id;

                    -- Get other attributes
                    begin
                         select
                              ddp.ctf_object_id,
                              trunc(ddp.profile_start_date),
                              ddp.preferred_prof_id,
                              ddp.recur_mode_id,
                              ddp.ctf_mode_id
                         into
                              v_cash_transfer_profile_id,
                              v_new_profile_start_date,
                              v_preferred,
                              v_prf_recurrency_mode,
                              v_profile_pmnt_mode
                         from
                              dragon_disb_profile ddp
                         where
                              ddp.disb_profile_id = v_dp_object_id;

                    end;

               elsif v_cash_transfer_profile_id is not null then

                    -- Profile type - Payment, Disbursement or Both
                    v_profile_type := in_profile_type;

                    -- Profile Start date
                    if in_profile_start_date is not null then
                         v_new_profile_start_date := trunc ( to_date ( in_profile_start_date ,'YYYYMMDDHH24MISS' ));
                    else
                         v_new_profile_start_date := v_current_date;
                    end if;

                    -- Payment mode
                    v_profile_pmnt_mode := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_cash_transfer_profile_id,
                                                gbv_CTFPaymentMode
                                           );

                    -- Preferred?
                    v_preferred := in_preferred_tf;

                    -- Recurrency mode
                    v_prf_recurrency_mode := in_recurring_tf;

                    -- Pay profile; will have to create first before associating it to the policy
                    v_pp_object_id := null;

                    -- Disb profile; will have to create first before associating it to the policy
                    v_dp_object_id := null;

                    -- Get the disbursement placeholder object
                    if v_profile_type = g_Profile_Type_Both
                       or
                       v_profile_type = g_Profile_Type_Disb
                    then

                         v_ba_plchldr_dpu := in_disb_placeholder_id;

                    end if;

               else

                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profile association error - Profile details not found, hence terminating..'
                    );

                    raise PROFILE_SETUP_ERROR;

               end if;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Pay Profile: ' || v_pp_object_id ||
                         '.. Disb Profile: '|| v_dp_object_id ||
                         '.. CTF ID: '      || v_cash_transfer_profile_id ||
                         '.. Profile Type: '|| v_profile_type ||
                         '.. Start Date: '  || v_new_profile_start_date ||
                         '.. Recurrency: '  || v_prf_recurrency_mode ||
                         '.. Preferred?: '  || v_preferred
                    );

               end if;

               if v_cash_transfer_profile_id is null
                  or
                  v_profile_type is null
                  or
                  v_new_profile_start_date is null
                  or
                  v_prf_recurrency_mode is null
                  or
                  v_preferred is null
               then

                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profile association error - All attributes not provided, hence terminating'
                    );

                    raise PROFILE_SETUP_ERROR;

               else

                    v_prf_sanity_chk_code := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_cash_transfer_profile_id,
                                                  gbv_ProfileErrorCode
                                             );

               end if;

          end;

          -- 2. Set up new ProfileUsageUpdate Batch
          begin

               begin

                    select
                         batch_type_id
                    into
                         v_req_by_bats_type
                    from
                         dragon_billingaccounttrxset
                    where
                         billingaccounttrxset_id = in_requested_by_ba_trx_set;   --osproduct-akm
               exception

                    when others then
                         null;

               end;

               if nvl(v_req_by_bats_type,0) <> g_bats_typeid_profileussage  --osproduct-akm
               then

                    -- 2828
                    -- Check if in_requested_by_ba_trx_set has already created a BATS of type profileusageupdate.
                    -- if yes, use same BATS, else create new.
                    begin

                         select
                              billingaccounttrxset_id
                         into
                              v_billing_acc_trx_set_id
                         from
                              dragon_billingaccounttrxset
                         where
                              created_by_billingtrxset = in_requested_by_ba_trx_set
                         and
                              batch_type_id = g_bats_typeid_profileussage;

                    exception

                         when no_data_found then

                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_db_constant.gobjtype_billingaccounttrxset,
                                   v_billing_account_id,
                                   v_billing_acc_trx_set_id
                              );

                              -- Created by batch
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_acc_trx_set_id,
                                   pkg_db_object.gbv_FITrxSet_CreatedbyBatch,
                                   in_requested_by_ba_trx_set
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. profileupdate batch is not created for this transaction. So, create new: '  || v_billing_acc_trx_set_id
                                   );

                              end if;

                              v_bv_table.delete;

                              if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-8104
                              then
                                  v_batch_entry_method := gBatchEntryMethod_System;
                               else
                                  v_batch_entry_method := gBatchEntryMethod_Manual;
                               end if;

                              -- Batch Type
                              v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;

                              -- Batch ID
                              v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );

                              -- Entered By
                              v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

                              -- Process date
                              v_bv_table(pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault);

                              -- Object State
                              v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := pkg_db_object.gBatchStatus_Processed;

                              -- Posted Date
                              v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault);

                              -- Associated CTF
                              v_bv_table(gbv_Ref_BatchAssociatedProfile).business_variable_value := v_cash_transfer_profile_id;

                              -- Entry method
                              v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method; --OSPRODUCT-8104


                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_billing_acc_trx_set_id,
                                   v_bv_table
                              );

                    end;
                    -- 2828 end

               else

                    v_billing_acc_trx_set_id := in_requested_by_ba_trx_set;

               end if;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. New Profile Usage Update Batch set: ' || v_billing_acc_trx_set_id
                    );

               end if;

          end;

          -- 4. Create the policy object list
          -- if comma separated list is not provided get all the policies under the BA
          begin

               -- Specific list of policies
               pkg_os_token.sp_tokenize_string(in_policy_list, ',' , v_policy_temp_object_list);

               v_temp_index := v_policy_temp_object_list.first;

               while v_temp_index is not null
               loop

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Adding Policy ID: ' || v_policy_temp_object_list(v_temp_index)
                         );

                    end if;

                    -- Add policy to the table
                    v_policy_list.extend;
                    v_policy_list( v_policy_list.count ) := new db_policy_list_ot( v_policy_temp_object_list(v_temp_index), null, null );

                    v_temp_index := v_policy_temp_object_list.next(v_temp_index);

               end loop;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Policy Count: ' || v_policy_list.count
                    );

               end if;

          end;

          -- 5. For each policy
          v_object_index := v_policy_list.first;

          while v_object_index is not null loop

               -- Policy ID
               v_policy_id := v_policy_list(v_object_index).policy_id;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Considering Policy ID: '|| v_policy_id
                    );

               end if;

               if v_policy_id is not null then

                    -- OSPRODUCT-17719
                    -- Reset the profile start date with original start before each loop
                    -- The profile start date is overridden later in the code if the term associated with the policy is expired
                    if v_old_profile_start_date is not null then                         
                         v_new_profile_start_date := v_old_profile_start_date;
                         v_old_profile_start_date := null;                 
                    end if;
                    -- end OSPRODUCT-17719
					
					-- 5.1 Get the term to associate profile
                    begin

                         --v_policy_id                      := null;
                         v_policy_trx_id                  := null;
                         v_policy_image_id                := null;
                         v_ptp_payer_id                   := null;
                         v_policy_current_term_id         := null;
                         v_associated_term_payer_id       := null;
                         v_policy_next_term_id            := null;
                         v_associated_nextterm_payer_id   := null;
                         v_policy_prior_term_id           := null;
                         v_associated_prevterm_payer_id   := null;

                         -- Get the object type id
                         v_policy_object_type_id := pkg_os_object.fn_object_type_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_policy_id
                                                    );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'Object type: '|| v_policy_object_type_id
                              );

                         end if;

                         case

                              when v_policy_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

                                   -- PTP ID
                                   v_policy_image_id := v_policy_id;

                                   -- Policy Transaction
                                   v_policy_trx_id := pkg_os_object.fn_object_parent_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_policy_image_id
                                                      );

                                   -- OSPRODUCT-3235
                                   -- Get policy and term
                                   begin

                                        begin

                                             select
                                                  pt.policy_id,
                                                  pt.policy_term_id
                                             into
                                                  v_policy_id,
                                                  v_policy_current_term_id
                                             from
                                                  dragon_policy_trx pt
                                             where
                                                  pt.policy_trx_id = v_policy_trx_id;

                                        exception
                                             when others then
                                                  null;

                                        end;

                                        if v_policy_id is null then

                                             v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policy_trx_id,
                                                                 pkg_os_constant.gObjType_Policy
                                                            );

                                        end if;

                                        -- Get the term
                                        if v_policy_current_term_id is null then

                                             v_policy_current_term_id := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_policy_trx_id,
                                                                              pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                                                         );

                                        end if;

                                   end;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_acc_trx_set_id,
                                        gbv_Ref_CurrentFiTransaction,
                                        pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, v_policy_trx_id,'31866546.29743646')
                                   );

                                   -- multipayer get the term payer associated with the passed in BA
                                   v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   v_policy_image_id,
                                                                   pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
                                                              );

                                   if v_multipayer_enabled_tf = g_Yes then

                                        begin

                                             begin
                                                  -- Get the term payer
                                                  select
                                                       term_payer.policy_term_payer_id
                                                    into
                                                       v_associated_term_payer_id
                                                    from
                                                       dragon_policy_term_payer term_payer
                                                   where
                                                       term_payer.payer_billing_account_id = v_billing_account_id
                                                     and
                                                       term_payer.policy_id = v_policy_id
                                                    and
                                                       term_payer.policy_term_id = v_policy_current_term_id;

                                             exception

                                                  when others then
                                                       null;
                                             end;

                                             if v_associated_term_payer_id is null then

                                                  if v_session_control.gLogging_Full
                                                  then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            'Not found in datamart..'
                                                       );

                                                  end if;

                                                  declare

                                                       v_policy_term_payer_list    pkg_os_object.t_object_list;
                                                       v_entity_id                 object.object_id%type;
                                                       v_payer_billing_account_id  object.object_id%type;
                                                       v_idx                       number;

                                                  begin

                                                       pkg_os_object_search.sp_object_children_of_type_get
                                                       (
                                                            in_session_Id              =>    in_session_id,
                                                            in_transaction_id          =>    in_transaction_id,
                                                            in_object_id               =>    v_policy_current_term_id,
                                                            in_child_object_type_id    =>    pkg_db_multipayer.gObjType_PolicyTermAccPayer,
                                                            in_object_list             =>    v_policy_term_payer_list
                                                       );

                                                       -- get the payer
                                                       v_idx := v_policy_term_payer_list.first;

                                                       while v_idx is not null loop

                                                            v_entity_id := pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                               in_session_id,
                                                                               in_transaction_id,
                                                                               v_policy_term_payer_list(v_idx),
                                                                               pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                                           );

                                                            v_payer_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                                                         (
                                                                                              in_session_id,
                                                                                              in_transaction_id,
                                                                                              v_entity_id,
                                                                                              pkg_db_multipayer.gObjType_BillingAccount
                                                                                         );

                                                            if v_payer_billing_account_id = v_billing_account_id then

                                                                 v_associated_term_payer_id := v_policy_term_payer_list(v_idx);
                                                                 exit;

                                                            end if;

                                                            v_idx := v_policy_term_payer_list.next(v_idx);

                                                       end loop;

                                                  end;

                                             end if;

                                        -- end OSPRODUCT-3235
                                        end;

                                   end if;

                              -- OSPRODUCT-2442
                              when v_policy_object_type_id = pkg_os_constant.gobjType_PolicyTerm then

                                   -- Policy Term ID
                                   v_policy_current_term_id := v_policy_id;

                                   begin
                                        select
                                             pterm.policy_id
                                        into
                                             v_policy_id
                                        from
                                             dragon_policy_term pterm
                                        where
                                             pterm.policy_term_id = v_policy_current_term_id;
                                   exception
                                        when others then
                                             null;
                                   end;

                                   if v_policy_id is null then

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  'Not found in datamart..'
                                             );

                                        end if;
                                        -- Policy
                                        v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_policy_current_term_id,
                                                            pkg_os_constant.gObjType_Policy
                                                       );

                                   end if;


                              when v_policy_object_type_id = pkg_db_constant.gobjType_PTPPayer then

                                   -- PTPPayer ID
                                   v_ptp_payer_id := v_policy_id;

                                   -- Policy Transaction
                                   v_policy_trx_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_ptp_payer_id,
                                                           pkg_os_constant.gObjType_PolicyTransaction
                                                      );


                                   begin

                                        begin
                                             select
                                                  policy_id,
                                                  policy_term_id
                                             into
                                                  v_policy_id,
                                                  v_policy_current_term_id
                                             from
                                                  dragon_policy_trx pt
                                             where
                                                  pt.policy_trx_id = v_policy_trx_id;

                                        exception
                                             when others then
                                                  null;
                                        end;


                                        if v_policy_id is null then

                                             v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policy_trx_id,
                                                                 pkg_os_constant.gObjType_Policy
                                                            );

                                        end if;

                                        if v_policy_current_term_id is null then

                                             v_policy_current_term_id := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_policy_trx_id,
                                                                              pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm
                                                                         );

                                        end if;

                                   end;

                                   -- end OSPRODUCT-3235

                                   -- Associated term payer
                                   v_associated_term_payer_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_ptp_payer_id,
                                                                      gbv_AssociatedTermPayer
                                                                 );

                              -- OSPRODUCT-2442
                              when v_policy_object_type_id = pkg_db_multipayer.gObjType_PolicyTermAccPayer then

                                   -- PTPPayer ID
                                   v_associated_term_payer_id := v_policy_id;

                                   begin

                                        begin
                                             select
                                                  term_payer.policy_id,
                                                  term_payer.policy_term_id
                                             into
                                                  v_policy_id,
                                                  v_policy_current_term_id
                                             from
                                                  dragon_policy_term_payer term_payer
                                             where
                                                  term_payer.policy_term_payer_id = v_associated_term_payer_id; -- OSPRODUCT-16834

                                        exception
                                             when others then
                                                  null;
                                        end;

                                        if v_policy_current_term_id is null then

                                             v_policy_current_term_id := pkg_os_object.fn_object_parent_get
                                                                         (
                                                                              in_session_id,
                                                                              in_transaction_id,
                                                                              v_associated_term_payer_id
                                                                         );
                                        end if;

                                        if v_policy_id is null then

                                             v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policy_current_term_id,
                                                                 pkg_os_constant.gObjType_Policy
                                                            );

                                        end if;

                                   end;

                              when v_policy_object_type_id = pkg_os_constant.gobjType_Policy then

                                   v_policy_current_term_id := pkg_db_functions.fn_get_policy_current_term
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_policy_id
                                                               );

                                   v_multipayer_enabled_tf :=  pkg_db_multipayer.fn_multipayer_mode
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_policy_id
                                                               );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             'Current Term ID: '||v_policy_current_term_id ||
                                             'Multipayer Flag: '||v_multipayer_enabled_tf
                                        );

                                   end if;

                                   if v_multipayer_enabled_tf = g_Yes then

                                        begin -- UTPRODUCT-3819
                                             select
                                                  dp.responsible_billing_account
                                             into
                                                  v_responsible_billing_account
                                             from
                                                  dragon_policy dp
                                             where
                                                  dp.policy_id = v_policy_id;

                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       'Responsible Billing Account: '|| v_responsible_billing_account ||
                                                       'Adhoc profile Flag:  '||in_adhoc_profile_tf
                                                  );

                                             end if;

                                        exception
                                             when others then
                                                  null;
                                        end; -- UTPRODUCT-3819

                                        begin
                                             -- Get the term payer
                                             select
                                                  term_payer.policy_term_payer_id
                                               into
                                                  v_associated_term_payer_id
                                               from
                                                  dragon_policy_term_payer term_payer
                                             where
                                                  term_payer.payer_billing_account_id = v_billing_account_id
                                               and
                                                  term_payer.policy_id = v_policy_id
                                               and
                                                  term_payer.policy_term_id = v_policy_current_term_id;

                                        exception
                                             when others then
                                                  if v_responsible_billing_account is not null -- UTPRODUCT-3819
                                                     and
                                                     v_responsible_billing_account = in_billing_account_id
                                                     and
                                                     in_adhoc_profile_tf = 'T'
                                                  then
                                                       null;

                                                       if v_session_control.gLogging_Full
                                                       then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 'Associated term payer ID: '|| v_associated_term_payer_id ||
                                                                 'Adhoc profile Flag:  '||in_adhoc_profile_tf
                                                            );

                                                       end if;

                                                  else
                                                       raise;
                                                  end if; -- UTPRODUCT-3819
                                        end;

                                   end if;

                                   if in_associate_to_curr_term_tf = 'F' then

                                        v_policy_next_term_id := pkg_db_functions.fn_get_policy_next_term
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_id
                                                                 );---GCNA-2598

                                        if /*v_multipayer_enabled_tf = g_Yes 
                                           and*/                              --OSPRODUCT-30830 multipayer flag removed
                                           v_policy_next_term_id is not null
                                        then

                                             begin

                                                  -- Get the term payer
                                                  select
                                                       term_payer.policy_term_payer_id
                                                    into
                                                       v_associated_nextterm_payer_id
                                                    from
                                                       dragon_policy_term_payer term_payer
                                                  where
                                                       term_payer.payer_billing_account_id = v_billing_account_id
                                                    and
                                                       term_payer.policy_id = v_policy_id
                                                    and
                                                       term_payer.policy_term_id = v_policy_next_term_id;

                                             exception
                                                  when others then

                                                       --OSPRODUCT-34513 start
                                                       declare
                                                       
                                                       v_count number;
                                                       
                                                       begin
                                                            
                                                            select
                                                                 count(1)
                                                            into
                                                                 v_count
                                                            from
                                                                 dragon_policy_term_payer term_payer
                                                            where                                                                 
                                                                 term_payer.policy_id = v_policy_id
                                                            and
                                                                 term_payer.policy_term_id = v_policy_next_term_id;
                                                                 
                                                            if v_count = 0 then
															
                                                                 --OSPRODUCT-30830 start
                                                                 v_responsible_billing_account_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_id,
                                                                      pkg_db_object.gbv_responsible_billingacct_id   --33887946 responsible billing account(calc)
                                                                 );
                                                                 
                                                                 if v_responsible_billing_account_id = v_billing_account_id
                                                                 then 
                                                                      v_associated_nextterm_payer_id := null;
                                                                 else
                                                                      v_policy_next_term_id := null;
                                                                      v_associated_nextterm_payer_id := null;        
                                                                 end if;
                                                                 
                                                            else
                                                                 
                                                                 v_policy_next_term_id := null;
                                                                 v_associated_nextterm_payer_id := null;     
                                                                 
                                                            end if;
                                                                 
                                                       end;
                                                       
                                                       if v_session_control.gLogging_Full
                                                       then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 'Responsible Billing Account ID: '|| v_responsible_billing_account_id ||
                                                                 'V_Billing account id: '||v_billing_account_id ||
                                                                 'Associated next term payer: '||v_associated_nextterm_payer_id ||
                                                                 'Policy next term id: '||v_policy_next_term_id
                                                                 
                                                            );

                                                       end if;
                                                       /*v_policy_next_term_id := null;
                                                       v_associated_nextterm_payer_id := null;
                                                       raise no_data_found;*/
                                                       --OSPRODUCT-30830 end
													   --OSPRODUCT-34513 end

                                             end;

                                        end if;

                                        v_policy_prior_term_id := pkg_db_functions.fn_get_policy_prior_term
                                                                  (
                                                                       in_session_id,
                                                                       in_transaction_id,
                                                                       v_policy_id
                                                                  );---GCNA-1674

                                        v_policy_prior_term_balance := pkg_db_functions.fn_get_term_due_amt
                                                                       (
                                                                            in_session_id,
                                                                            in_transaction_id,
                                                                            v_policy_prior_term_id
                                                                       );---GCNA-1674

                                        if /*v_multipayer_enabled_tf = g_Yes 
                                           and*/                              --OSPRODUCT-30830 multipayer flag removed
                                           v_policy_prior_term_id is not null
                                           and
                                           v_policy_prior_term_balance > 0
                                        then

                                             begin
                                                  -- Get the term payer
                                                  select
                                                       term_payer.policy_term_payer_id
                                                    into
                                                       v_associated_prevterm_payer_id
                                                    from
                                                       dragon_policy_term_payer term_payer
                                                  where
                                                       term_payer.payer_billing_account_id = v_billing_account_id
                                                    and
                                                       term_payer.policy_id = v_policy_id
                                                    and
                                                       term_payer.policy_term_id = v_policy_prior_term_id;

                                             exception

                                                  when others then

                                                       --OSPRODUCT-34513 end
                                                       declare
                                                       
                                                       v_count number;
                                                       
                                                       begin
                                                       
                                                            select
                                                                 count(1)
                                                            into
                                                                 v_count
                                                            from
                                                                 dragon_policy_term_payer term_payer
                                                            where                                                                 
                                                                 term_payer.policy_id = v_policy_id
                                                            and
                                                                 term_payer.policy_term_id = v_policy_prior_term_id;
                                                                 
                                                            if v_count = 0 then
                                                                 
                                                                 --OSPRODUCT-30830 start
                                                                 v_responsible_billing_account_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_policy_id,
                                                                      pkg_db_object.gbv_responsible_billingacct_id   --33887946 responsible billing account(calc)
                                                                 );                                      
                                                                 
                                                                 if v_responsible_billing_account_id = v_billing_account_id
                                                                 then 
                                                                      
                                                                      v_associated_prevterm_payer_id := null;
                                                                          
                                                                 else
                                                                      
                                                                      v_policy_prior_term_id := null;
                                                                      v_associated_prevterm_payer_id := null;
                                                                             
                                                                 end if;
                                                                 
                                                            else
                                                                 
                                                                 v_policy_prior_term_id := null;
                                                                 v_associated_prevterm_payer_id := null;
                                                                 
                                                            end if;
                                                                 
                                                       end;
                                                       
                                                       if v_session_control.gLogging_Full
                                                       then

                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 'Responsible Billing Account ID: '|| v_responsible_billing_account_id ||
                                                                 'V_Billing account id: '||v_billing_account_id ||
                                                                 'Associated previous term payer: '||v_associated_prevterm_payer_id ||
                                                                 'Policy prior term id: '||v_policy_prior_term_id
                                                                 
                                                            );

                                                       end if;
                                                       
                                                       /*v_policy_prior_term_id := null;
                                                       v_associated_prevterm_payer_id := null;*/
                                                       --OSPRODUCT-30830 end
													   --OSPRODUCT-34513 end
                                             end;

                                        end if;

                                   end if;

                              else

                                   pkg_os_logging.sp_log_error
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Profile association error - Object type not supported..'
                                   );

                                   raise PROFILE_SETUP_ERROR;

                         end case;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Policy: '                || v_policy_id ||
                                   '..Current Policy Term: '   || v_policy_current_term_id  ||
                                   '..Next Policy Term: '      || v_policy_next_term_id     ||
                                   '..Prior Policy Term: '     || v_policy_prior_term_id    ||
                                   '..Prior Term Balance: '    || v_policy_prior_term_balance ||
                                   '..Current term payer: '    || v_associated_term_payer_id  ||
                                   '..Prior term payer: '      || v_associated_prevterm_payer_id ||
                                   '..Next term payer: '       || v_associated_nextterm_payer_id
                              );

                         end if;

                    end ;
                    
                    -- OSPRODUCT-17719
                    -- If the term is expired update the start date
                    -- Do it only when pay profile or disb profile is not passed and the call is just to associate the profile with policy
                    if in_pay_profile_id is null
                       and
                       in_disb_profile_id is null
                    then
                         
                         v_term_expiry_date := trunc (
                                                          to_date
                                                          (
                                                               pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_policy_current_term_id,
                                                                    29705946
                                                               ),
                                                               pkg_os_constant.DragonDateFormatDefault
                                                          )
                                                     );
                         
                         -- save the profile date before overriding it to reset it before the loop start                    
                         v_old_profile_start_date := v_new_profile_start_date;                    
                         v_new_profile_start_date := trunc(least(v_new_profile_start_date, v_term_expiry_date));
                         
                    end if;
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Term expiry date: ' || v_term_expiry_date ||
                              '.. After considering the term expiry date new start date: ' || v_new_profile_start_date ||
                              '.. Old Profile start date: ' || v_old_profile_start_date
                         );

                    end if;                    
                    -- end OSPRODUCT-17719

                    -- 5.2 Set up profile usage if not passed in
                    begin

                         -- Payment Profile Usage
                         if v_profile_type = g_Profile_Type_Pmnt
                            or
                            v_profile_type = g_Profile_Type_Both
                         then

                              declare

                                   v_ctf_id                 object.object_id%type;
                                   v_duplicated_object_id   object.object_id%type;

                              begin

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Before Payment Profile Usage Setup: ' ||
                                             '..Current Term PP object ID: ' || v_pp_object_id ||
                                             '..Next Term PP object ID: '    || v_nextterm_pp_object_id

                                        );

                                   end if;

                                   -- For current term
                                   if v_pp_object_id is not null and v_object_index > 1 then

                                        -- Get the profile
                                        v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_pp_object_id,
                                                         gbv_PPUCashTransferProfUSed
                                                    );


                                        pkg_os_object_copy.sp_object_duplicate
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pp_object_id ,
                                             v_duplicated_object_id,
                                             'F' --OSPRODUCT-7721
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_duplicated_object_id,
                                             gbv_PPUCashTransferProfUSed,
                                             v_ctf_id
                                        );

                                        v_pp_object_id := v_duplicated_object_id;

                                   elsif v_pp_object_id is null then

                                        -- Create New PaymentProfileUsage object
                                        sp_create_ppu
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             v_policy_id,
                                             v_cash_transfer_profile_id,
                                             v_pp_object_id
                                        );

                                        v_bv_table.delete;

                                        -- Set start date
                                        v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_new_profile_start_date, pkg_os_constant.DragonDateFormatDefault);

                                        -- Recurring/Adhoc as requested
                                        v_bv_table(gbv_PPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                        -- Preferred - yes/no as requested
                                        v_bv_table(gbv_PPUPreferredtf).business_variable_value := v_preferred;

                                        -- Created by batch
                                        v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := nvl(in_requested_by_ba_trx_set, v_billing_acc_trx_set_id);

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pp_object_id,
                                             v_bv_table
                                        );

                                   end if;

                                   -- For prior term
                                   if v_policy_prior_term_id is not null and v_policy_prior_term_balance > 0 then

                                        if v_priorterm_pp_object_id is not null and v_object_index > 1 then

                                             -- Get the profile
                                             v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_priorterm_pp_object_id,
                                                              gbv_PPUCashTransferProfUSed
                                                         );


                                             pkg_os_object_copy.sp_object_duplicate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_priorterm_pp_object_id ,
                                                  v_duplicated_object_id,
                                                  'F' --OSPRODUCT-7721
                                             );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_duplicated_object_id,
                                                  gbv_PPUCashTransferProfUSed,
                                                  v_ctf_id
                                             );

                                             v_priorterm_pp_object_id := v_duplicated_object_id;

                                        elsif v_priorterm_pp_object_id is null then

                                             sp_create_ppu
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  v_policy_id,
                                                  v_cash_transfer_profile_id,
                                                  v_priorterm_pp_object_id
                                             );

                                             v_bv_table.delete;
											 
                                             --OSPRODUCT-30830 start
                                             v_policy_term_expiration_date := trunc(
                                                                                       to_date
                                                                                       (
                                                                                             pkg_os_object_io.fn_object_bv_get
                                                                                             (
                                                                                                  in_session_id,
                                                                                                  in_transaction_id,
                                                                                                  v_policy_prior_term_id,
                                                                                                  gbv_PolicyTermExpirationDate   --29705946 policy expiration date on term (calc)
                                                                                             ),
                                                                                             pkg_os_constant.DragonDateFormatDefault 
                                                                                       )
                                                                                   ); 
                                             --OSPRODUCT-30830 end

                                             -- Set start date (OSPRODUCT-30830 added least condition)
                                             v_bv_table(gbv_PPUStartDate).business_variable_value := to_char((least(v_policy_term_expiration_date,v_new_profile_start_date)), pkg_os_constant.DragonDateFormatDefault);

                                             -- Recurring/Adhoc as requested
                                             v_bv_table(gbv_PPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                             -- Preferred - yes/no as requested
                                             v_bv_table(gbv_PPUPreferredtf).business_variable_value := v_preferred;

                                             -- Created by batch
                                             v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := nvl(in_requested_by_ba_trx_set, v_billing_acc_trx_set_id);

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_priorterm_pp_object_id,
                                                  v_bv_table
                                             );

                                        end if;

                                   end if;

                                   -- For next term
                                   if v_policy_next_term_id is not null then  --- GCNA-2598

                                        if v_nextterm_pp_object_id is not null and v_object_index > 1 then

                                             -- Get the profile
                                             v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_nextterm_pp_object_id,
                                                              gbv_PPUCashTransferProfUSed
                                                         );


                                             pkg_os_object_copy.sp_object_duplicate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_nextterm_pp_object_id ,
                                                  v_duplicated_object_id,
                                                  'F' --OSPRODUCT-7721
                                             );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_duplicated_object_id,
                                                  gbv_PPUCashTransferProfUSed,
                                                  v_ctf_id
                                             );

                                             v_nextterm_pp_object_id := v_duplicated_object_id;

                                        elsif v_nextterm_pp_object_id is null then

                                             sp_create_ppu
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  v_policy_id,
                                                  v_cash_transfer_profile_id,
                                                  v_nextterm_pp_object_id
                                             );

                                             v_bv_table.delete;

                                             -- Set start date
                                             v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_new_profile_start_date, pkg_os_constant.DragonDateFormatDefault);

                                             -- Recurring/Adhoc as requested
                                             v_bv_table(gbv_PPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                             -- Preferred - yes/no as requested
                                             v_bv_table(gbv_PPUPreferredtf).business_variable_value := v_preferred;

                                             -- Created by batch
                                             v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_nextterm_pp_object_id,
                                                  v_bv_table
                                             );

                                        end if;

                                   end if;

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..After Setup: ' ||
                                             '..Payment profile for current term: '|| v_pp_object_id ||
                                             '..Payment profile for next term: '   || v_nextterm_pp_object_id ||
                                             '..Next Term: '                       || v_policy_next_term_id ||
                                             '..Payment profile for prior term: '  || v_priorterm_pp_object_id  ||
                                             '..Prior Term: '                      || v_policy_prior_term_id
                                        );

                                   end if;

                              end;

                              -- Set usage update for the usage objects created.
                              begin

                                   if v_pp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_pay_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pay_prof_usg_updt_id,
                                             gbv_PrfUpdateRefPayProfile,
                                             v_pp_object_id
                                        );

                                   end if;

                                   if v_priorterm_pp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_pay_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pay_prof_usg_updt_id,
                                             gbv_PrfUpdateRefPayProfile, --Reference_Referred Payment Profile
                                             v_priorterm_pp_object_id
                                        );

                                   end if;

                                   if v_nextterm_pp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_pay_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_pay_prof_usg_updt_id,
                                             gbv_PrfUpdateRefPayProfile, --Reference_Referred Payment Profile
                                             v_nextterm_pp_object_id
                                        );

                                   end if;

                              end;

                         end if;

                         -- Disbursement Profile usage
                         if v_profile_type = g_Profile_Type_Disb
                            or
                            v_profile_type = g_Profile_Type_Both
                         then

                              declare

                                   v_ctf_id                 object.object_id%type;
                                   v_duplicated_object_id   object.object_id%type;

                              begin

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Before Disbursement Profile Usage Setup: ' ||
                                             '..Current Term PP object ID: ' || v_pp_object_id ||
                                             '..Next Term PP object ID: '    || v_nextterm_pp_object_id

                                        );

                                   end if;

                                   -- For current term
                                   if v_dp_object_id is not null and v_object_index > 1 then

                                        -- Get the profile
                                        v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_dp_object_id,
                                                         gbv_PPUCashTransferProfUSed
                                                    );

                                        pkg_os_object_copy.sp_object_duplicate
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_dp_object_id ,
                                             v_duplicated_object_id,
                                             'F' --OSPRODUCT-7721
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_duplicated_object_id,
                                             gbv_DPUCashTrsfrProfileUsed,
                                             v_ctf_id
                                        );

                                        v_dp_object_id := v_duplicated_object_id;

                                   elsif v_dp_object_id is null then

                                        -- Create New PaymentProfileUsage object
                                        sp_create_dpu_for_customer
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             v_policy_id,
                                             v_cash_transfer_profile_id,
                                             v_ba_plchldr_dpu, -- pass it into the proc
                                             v_dp_object_id
                                        );

                                        v_bv_table.delete;

                                        -- Set start date
                                        v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_new_profile_start_date, pkg_os_constant.DragonDateFormatDefault);

                                        -- Recurring/Adhoc as requested
                                        v_bv_table(gbv_DPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                        -- Preferred - yes/no as requested
                                        v_bv_table(gbv_DPUPreferredtf).business_variable_value := v_preferred;

                                        -- Created by batch
                                        v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := nvl(in_requested_by_ba_trx_set, v_billing_acc_trx_set_id);

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_dp_object_id,
                                             v_bv_table
                                        );

                                   end if;

                                   -- For prior term
                                   if v_policy_prior_term_id is not null and v_policy_prior_term_balance > 0 then

                                        if v_priorterm_dp_object_id is not null and v_object_index > 1 then

                                             -- Get the profile
                                             v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_priorterm_dp_object_id,
                                                              gbv_PPUCashTransferProfUSed
                                                         );


                                             pkg_os_object_copy.sp_object_duplicate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_priorterm_dp_object_id ,
                                                  v_duplicated_object_id,
                                                  'F' --OSPRODUCT-7721
                                             );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_duplicated_object_id,
                                                  gbv_DPUCashTrsfrProfileUsed,
                                                  v_ctf_id
                                             );

                                             v_priorterm_dp_object_id := v_duplicated_object_id;

                                        elsif v_priorterm_dp_object_id is null then

                                             sp_create_dpu_for_customer
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  v_policy_id,
                                                  v_cash_transfer_profile_id,
                                                  v_ba_plchldr_dpu,
                                                  v_priorterm_dp_object_id
                                             );

                                             v_bv_table.delete;
											 
                                             --OSPRODUCT-30830 start
                                             v_policy_term_expiration_date := trunc(
                                                                                       to_date
                                                                                       (
                                                                                             pkg_os_object_io.fn_object_bv_get
                                                                                             (
                                                                                                  in_session_id,
                                                                                                  in_transaction_id,
                                                                                                  v_policy_prior_term_id,
                                                                                                  gbv_PolicyTermExpirationDate   --29705946 policy expiration date on term (calc)
                                                                                             ),
                                                                                             pkg_os_constant.DragonDateFormatDefault 
                                                                                       )
                                                                                   ); 
                                             --OSPRODUCT-30830 end											 

                                             -- Set start date (OSPRODUCT-30830 added least condition)
                                             v_bv_table(gbv_DPUStartDate).business_variable_value := to_char((least(v_new_profile_start_date,v_policy_term_expiration_date)), pkg_os_constant.DragonDateFormatDefault);

                                             -- Recurring/Adhoc as requested
                                             v_bv_table(gbv_DPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                             -- Preferred - yes/no as requested
                                             v_bv_table(gbv_DPUPreferredtf).business_variable_value := v_preferred;

                                             -- Created by batch
                                             v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := nvl(in_requested_by_ba_trx_set, v_billing_acc_trx_set_id);

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_priorterm_dp_object_id,
                                                  v_bv_table
                                             );

                                        end if;

                                   end if;

                                   -- For next term
                                   if v_policy_next_term_id is not null then  --- GCNA-2598

                                        if v_nextterm_dp_object_id is not null and v_object_index > 1 then

                                             -- Get the profile
                                             v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_nextterm_dp_object_id,
                                                              gbv_PPUCashTransferProfUSed
                                                         );

                                             pkg_os_object_copy.sp_object_duplicate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_nextterm_dp_object_id ,
                                                  v_duplicated_object_id,
                                                  'F' --OSPRODUCT-7721
                                             );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_duplicated_object_id,
                                                  gbv_DPUCashTrsfrProfileUsed,
                                                  v_ctf_id
                                             );

                                             v_nextterm_dp_object_id := v_duplicated_object_id;

                                        elsif v_nextterm_dp_object_id is null then

                                             sp_create_Dpu_for_customer
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_billing_account_id,
                                                  v_policy_id,
                                                  v_cash_transfer_profile_id,
                                                  v_ba_plchldr_dpu,
                                                  v_nextterm_dp_object_id
                                             );

                                             v_bv_table.delete;

                                             -- Set start date
                                             v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_new_profile_start_date, pkg_os_constant.DragonDateFormatDefault);

                                             -- Recurring/Adhoc as requested
                                             v_bv_table(gbv_DPURecurrencyMode).business_variable_value := v_prf_recurrency_mode;

                                             -- Preferred - yes/no as requested
                                             v_bv_table(gbv_DPUPreferredtf).business_variable_value := v_preferred;

                                             -- Created by batch
                                             v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := nvl(in_requested_by_ba_trx_set, v_billing_acc_trx_set_id);

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_nextterm_dp_object_id,
                                                  v_bv_table
                                             );

                                        end if;

                                   end if;

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..After Setup: ' ||
                                             '..Disbursement profile for current term: '|| v_dp_object_id ||
                                             '..Disbursement profile for next term: '   || v_nextterm_dp_object_id ||
                                             '..Disbursement profile for prior term: '  || v_priorterm_dp_object_id
                                        );

                                   end if;
                              end;

                              -- set up usage update for the usage objects
                              begin
                                   -- do not execute
                                   if v_dp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_disb_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disb_prof_usg_updt_id,
                                             gbv_PrfUpdateRefDisbProfile,
                                             v_dp_object_id
                                        );

                                   end if;

                                   if v_priorterm_dp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_disb_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disb_prof_usg_updt_id,
                                             gbv_PrfUpdateRefDisbProfile, --Reference_Referred Payment Profile
                                             v_priorterm_dp_object_id
                                        );

                                   end if;

                                   if v_nextterm_dp_object_id is not null then

                                        pkg_os_object.sp_object_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             pkg_db_constant.gObjType_ProfileUsageUpdate,
                                             v_billing_acc_trx_set_id,
                                             v_disb_prof_usg_updt_id
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_disb_prof_usg_updt_id,
                                             gbv_PrfUpdateRefDisbProfile, --Reference_Referred Payment Profile
                                             v_nextterm_dp_object_id
                                        );

                                   end if;

                              end;

                         end if;

                    end;

                    -- Associate policy to profile
                    -- 5.3 Do the association
                    begin

                         --Calculate ultimate template for backward compatibility
                         if v_object_index = 1 then

                              if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_pp_object_id, pkg_os_constant_bv.gbv_ultimate_template) != v_pp_object_id then

                                   v_uTemplate_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_pp_object_id, pkg_os_constant_bv.gbv_ultimate_template);

                              else

                                   v_uTemplate_object_id := v_pp_object_id;

                              end if;

                         end if;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Associating the profile to policy '
                              );

                         end if;

                         -- Current Term preferred pay prof setup
                         if v_pp_object_id is not null then

                              --GCNA-1415
                              --Keeping for backward compatibility
                              -- UTPRODUCT-4217
                              pkg_db_object.sp_ba_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_id,
                                   211929,
                                   v_profile_pmnt_mode
                              );

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_current_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_PPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_PPUAssociatedToTerm).business_variable_value := v_policy_current_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_PPUAssociatedTermPayer).business_variable_value := v_associated_term_payer_id;

                              -- Set ultimate template
                              v_bv_table(pkg_os_constant_bv.gbv_ultimate_template).business_variable_value := v_uTemplate_object_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_pp_object_id,
                                   v_bv_table
                              );

                         end if;

                         -- Prior Term preferred pay prof setup
                         if v_priorterm_pp_object_id is not null then

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_prior_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_PPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_PPUAssociatedToTerm).business_variable_value := v_policy_prior_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_PPUAssociatedTermPayer).business_variable_value := v_associated_prevterm_payer_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_priorterm_pp_object_id,
                                   v_bv_table
                              );

                         end if;

                         -- Next Term preferred pay prof setup
                         if v_nextterm_pp_object_id is not null then
						 
							  if v_session_control.gLogging_Full then
								  pkg_os_logging.sp_log
                                       (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '.. Usage Object: ' || v_nextterm_pp_object_id ||
                                          '.. Policy Term: '  || v_policy_next_term_id
                                        );
							  end if;

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_next_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_PPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_PPUAssociatedToTerm).business_variable_value := v_policy_next_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_PPUAssociatedTermPayer).business_variable_value := v_associated_nextterm_payer_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_nextterm_pp_object_id,
                                   v_bv_table
                              );

                         end if;

                         -- Current Term preferred disb prof setup
                         if v_dp_object_id is not null
                         then

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_current_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_DPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_DPUAssociatedToTerm).business_variable_value := v_policy_current_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_DPUAssociatedTermPayer).business_variable_value := v_associated_term_payer_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_dp_object_id,
                                   v_bv_table
                              );

                         end if;

                          -- Prior Term preferred disb prof setup
                         if v_priorterm_dp_object_id is not null then --GCNA-1674

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_prior_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_DPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_DPUAssociatedToTerm).business_variable_value := v_policy_prior_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_DPUAssociatedTermPayer).business_variable_value := v_associated_prevterm_payer_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_priorterm_dp_object_id,
                                   v_bv_table
                              );

                         end if;

                          -- Next Term preferred disb prof setup
                         if v_nextterm_dp_object_id is not null then--GCNA-2598

                              -- Associate profile to policy
                              v_bv_table.delete;

                              -- Set usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := v_policy_next_term_id;

                              -- Set associated policy
                              v_bv_table(gbv_DPUAssociatedToPolicy).business_variable_value := v_policy_id;

                              -- Set associated term
                              v_bv_table(gbv_DPUAssociatedToTerm).business_variable_value := v_policy_next_term_id;

                              -- Set associated term payer
                              v_bv_table(gbv_DPUAssociatedTermPayer).business_variable_value := v_associated_nextterm_payer_id;

                              -- BV Set
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_nextterm_dp_object_id,
                                   v_bv_table
                              );

                         end if;

                    end;

                    -- 5.4 Put a stop date on the existing preferred profiles
                    begin

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Put stop date on existing profiles..' || v_existing_profile_stop_date
                              );

                         end if;

                         if v_preferred = g_Yes
                            and
                            v_prf_recurrency_mode = g_RecurrencyMode_Recurring
                            and
                            v_prf_sanity_chk_code = g_PrfVldtnCd_ValidationPassed
                         then

                              -- Profile Stop date
                              v_existing_profile_stop_date := to_char(v_new_profile_start_date - 1, 'YYYYMMDDHH24MISS');

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '..Stop Date: ' || v_existing_profile_stop_date
                                   );

                              end if;

                              if v_profile_type = g_Profile_Type_Pmnt
                                 or
                                 v_profile_type = g_Profile_Type_Both
                              then

                                   for v_profile_rec in c_policy_pay_profile_to_stop
                                                        (
                                                             v_billing_account_id,
                                                             v_policy_id,
                                                             v_policy_current_term_id,
                                                             v_policy_next_term_id,
                                                             case
                                                                  when v_policy_prior_term_balance > 0 then
                                                                       v_policy_prior_term_id
                                                                  else
                                                                       null
                                                             end,
                                                             v_new_profile_start_date,
                                                             v_pp_object_id
                                                        )
                                   loop

                                        v_profile_to_stop_id := v_profile_rec.pay_profile_id;

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  'Stopping pay profile: ' || v_profile_to_stop_id
                                             );

                                        end if;

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_profile_to_stop_id,
                                             gbv_PPUStopDate,
                                             v_existing_profile_stop_date
                                        );

                                        pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_profile_to_stop_id, v_datamart_tf);

                                   end loop;

                              end if;

                              if v_profile_type = g_Profile_Type_Disb
                                 or
                                 v_profile_type = g_Profile_Type_Both
                              then

                                   for v_profile_rec in c_policy_disb_profile_to_stop
                                                        (
                                                             v_billing_account_id,
                                                             v_policy_id,
                                                             v_policy_current_term_id,
                                                             v_policy_next_term_id,
                                                             case
                                                                  when v_policy_prior_term_balance > 0 then
                                                                       v_policy_prior_term_id
                                                                  else
                                                                       null
                                                             end,
                                                             v_new_profile_start_date,
                                                             v_dp_object_id
                                                        )
                                   loop

                                        v_profile_to_stop_id := v_profile_rec.disb_profile_id;

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  'Stopping disb profile: ' || v_profile_to_stop_id
                                             );

                                        end if;

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_profile_to_stop_id,
                                             gbv_DPUStopDate,
                                             v_existing_profile_stop_date
                                        );

                                        pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_profile_to_stop_id, v_datamart_tf);

                                   end loop;

                              end if;

                         end if;

                    end;

                    -- 5.5 Datamart update
                    begin

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Updating the datamart..' || v_existing_profile_stop_date
                              );

                         end if;

                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_pp_object_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_dp_object_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_disb_prof_usg_updt_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_pay_prof_usg_updt_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_current_term_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_priorterm_pp_object_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_priorterm_dp_object_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_prior_term_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_nextterm_pp_object_id, v_datamart_tf);--GCNA-2598
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_nextterm_dp_object_id, v_datamart_tf);--GCNA-2598
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_next_term_id, v_datamart_tf);

                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_associated_term_payer_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_associated_prevterm_payer_id, v_datamart_tf);
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_associated_nextterm_payer_id, v_datamart_tf);

                    end;

                    -- 5.6 Cache cleanup and bill plan/account schedule updates
                    -- OSPRODUCT-6566
                    begin

                         v_current_date := pkg_db_functions.fn_get_policy_current_date
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_policy_id
                                           );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Bill Plan Update?: ' || in_billplan_update_tf ||
                                   '.. Preferred?: '        || v_preferred ||
                                   '.. Recurrency: '        || v_prf_recurrency_mode ||
                                   '.. Current Date: '      || v_current_date        ||
                                   '.. Profile Start Date: '|| v_new_profile_start_date
                              );

                         end if;

                         if trunc(v_new_profile_start_date) <= trunc(v_current_date) then -- OSPRODUCT-17719

                              -- Cache Cleanup
                              -- OSPRODUCT-6566
                              declare

                                   v_list_idx varchar2(500);

                              begin

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '..Clearing up the cache..'
                                        );

                                   end if;

                                   v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.first;

                                   while v_list_idx is not null
                                   loop

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 '.. List Index: ' || v_list_idx ||
                                                 '.. Value: '      || pkg_db_object_cache_io.g_preferred_profile_cache(v_list_idx)
                                             );

                                        end if;

                                        if instr(v_list_idx, v_policy_id) <> 0
                                        then

                                             pkg_db_object_cache_io.g_preferred_profile_cache.delete(v_list_idx);

                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_procedure_name,
                                                      ' Deleted index.. ' || v_list_idx
                                                  );

                                             end if;

                                             exit;

                                        end if;

                                        v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.next(v_list_idx);

                                   end loop;

                              end;

                              -- Bill Plan update
                              if in_billplan_update_tf = 'T'
                                 and
                                 v_preferred = g_Yes
                                 and
                                 v_prf_recurrency_mode = g_RecurrencyMode_Recurring
                                 and
                                 -- 4031
                                 v_prf_sanity_chk_code = g_PrfVldtnCd_ValidationPassed
                              then

                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Current date: ' || v_current_date ||
                                             '.. Profile start date: ' || v_new_profile_start_date
                                        );

                                   end if;

                                   -- Update Bill Plan and in turn Billing Account Installment
                                   if v_profile_type in ( g_Profile_Type_Pmnt, g_Profile_Type_Both) then

                                        if v_policy_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

                                             v_most_recent_ptp_id := v_policy_image_id;

                                        elsif v_policy_object_type_id = pkg_db_constant.gobjType_PTPPayer then

                                             v_most_recent_ptp_id := v_ptp_payer_id;

                                        else

                                             begin

                                                  -- Most current functional transaction associated with current term
                                                  select nvl(max(pt.policy_trx_id), 0)
                                                    into v_pt_trx_id
                                                    from dragon_policy_trx pt
                                                   where pt.policy_id = v_policy_id
                                                     and pt.policy_term_id = v_policy_current_term_id
                                                     and (
                                                              (
                                                                   pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                                                                   and
                                                                   pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id, pkg_cs_functions.g_ObjStateSet_PrcessedPending) = 'T'
                                                              )
                                                              or
                                                              (
                                                                   pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                                                                   and
                                                                   pkg_os_policy_transaction_type.fn_transaction_type_in_set (policy_trx_type_id, pkg_cs_functions.g_PdTrxSet_All_Non_Floating  ) = 'T' --7846
                                                              )
                                                         );

                                                   v_most_recent_ptp_id := pkg_os_object_io.fn_object_bv_get
                                                                          (
                                                                               in_session_id,
                                                                               in_transaction_id,
                                                                               v_pt_trx_id,
                                                                               212318 -- Coverage
                                                                          );

                                                  -- OSPRODUCT-2442
                                                  if v_associated_term_payer_id is not null then

                                                       -- Get the entity
                                                       v_entity_id := pkg_os_object.fn_object_parent_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_billing_account_id
                                                                      );

                                                       -- Get the payer
                                                       v_most_recent_ptp_id := pkg_os_object_search.fn_object_with_attribute_get
                                                                               (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    v_most_recent_ptp_id,
                                                                                    pkg_db_constant.gobjType_PTPPayer,
                                                                                    pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                                                                    v_entity_id
                                                                               );

                                                  end if;

                                             end;

                                        end if;

                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '...... Updating billing account installment. Policy Transaction ID: ' || v_pt_trx_id ||
                                                  '...... PTP ID: ' || v_most_recent_ptp_id
                                             );

                                        end if;

                                        pkg_db_payment_arrangement.sp_bill_plan_update
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_most_recent_ptp_id,
                                             io_action_outcome_id,
                                             v_cash_transfer_profile_id -- OSPRODUCT-17719
                                        );

                                        pkg_db_payplan_modify.sp_ba_sched_payment_generate
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_most_recent_ptp_id
                                        );

                                        pkg_db_billing_modify.sp_billaccinstallment_create
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_most_recent_ptp_id,
                                             io_action_outcome_id
                                        );

                                        -- Update Billing Account Installment for next term
                                        if v_policy_next_term_id is not null then --- GCNA-2598

                                             begin

                                                  -- Most current functional transaction associated with current term
                                                  select nvl(max(pt.policy_trx_id), 0)
                                                    into v_pt_trx_id
                                                    from dragon_policy_trx pt
                                                   where pt.policy_id = v_policy_id
                                                     and pt.policy_term_id = v_policy_next_term_id
                                                     and (
                                                              (
                                                                   pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                                                                   and
                                                                   pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id, pkg_cs_functions.g_ObjStateSet_PrcessedPending) = 'T'
                                                              )
                                                              or
                                                              (
                                                                   pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                                                                   and
                                                                   pkg_os_policy_transaction_type.fn_transaction_type_in_set (policy_trx_type_id, pkg_cs_functions.g_PdTrxSet_All_Non_Floating  ) = 'T' --7846
                                                              )
                                                         );

                                                  v_most_recent_ptp_id := pkg_os_object_io.fn_object_bv_get
                                                                          (
                                                                               in_session_id,
                                                                               in_transaction_id,
                                                                               v_pt_trx_id,
                                                                               212318 -- Coverage
                                                                          );

                                                  -- OSPRODUCT-2442
                                                  if v_associated_nextterm_payer_id is not null then

                                                       -- Get the entity
                                                       v_entity_id := pkg_os_object.fn_object_parent_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_billing_account_id
                                                                      );

                                                       -- Get the payer
                                                       v_most_recent_ptp_id := pkg_os_object_search.fn_object_with_attribute_get
                                                                               (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    v_most_recent_ptp_id,
                                                                                    pkg_db_constant.gobjType_PTPPayer,
                                                                                    pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                                                                    v_entity_id
                                                                               );

                                                  end if;

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '...... Updating billing account installment. Policy Transaction ID: ' || v_pt_trx_id ||
                                                            '...... PTP ID: ' || v_most_recent_ptp_id
                                                       );

                                                  end if;

                                                  pkg_db_payment_arrangement.sp_bill_plan_update
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id,
                                                       io_action_outcome_id,
                                                       v_cash_transfer_profile_id --OSPRODUCT-17719
                                                  );

                                                  pkg_db_payplan_modify.sp_ba_sched_payment_generate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id
                                                  );

                                                  pkg_db_billing_modify.sp_billaccinstallment_create
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id,
                                                       io_action_outcome_id
                                                  );

                                             end;

                                        end if;

                                        if v_policy_prior_term_id is not null and v_policy_prior_term_balance > 0 then

                                             begin

                                                  -- Most current functional transaction associated with current term
                                                  select nvl(max(pt.policy_trx_id), 0)
                                                    into v_pt_trx_id
                                                    from dragon_policy_trx pt
                                                   where pt.policy_id = v_policy_id
                                                     and pt.policy_term_id = v_policy_prior_term_id
                                                     and (
                                                              (
                                                                   pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                                                                   and
                                                                   pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id, pkg_cs_functions.g_ObjStateSet_PrcessedPending) = 'T'
                                                              )
                                                              or
                                                              (
                                                                   pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                                                                   and
                                                                   pkg_os_policy_transaction_type.fn_transaction_type_in_set (policy_trx_type_id, pkg_cs_functions.g_PdTrxSet_All_Non_Floating  ) = 'T' --7846
                                                              )
                                                         );

                                                  v_most_recent_ptp_id := pkg_os_object_io.fn_object_bv_get
                                                                          (
                                                                               in_session_id,
                                                                               in_transaction_id,
                                                                               v_pt_trx_id,
                                                                               212318 -- Coverage
                                                                          );

                                                  -- OSPRODUCT-2442
                                                  if v_associated_prevterm_payer_id is not null then

                                                       -- Get the entity
                                                       v_entity_id := pkg_os_object.fn_object_parent_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_billing_account_id
                                                                      );

                                                       -- Get the payer
                                                       v_most_recent_ptp_id := pkg_os_object_search.fn_object_with_attribute_get
                                                                               (
                                                                                    in_session_id,
                                                                                    in_transaction_id,
                                                                                    v_most_recent_ptp_id,
                                                                                    pkg_db_constant.gobjType_PTPPayer,
                                                                                    pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                                                                    v_entity_id
                                                                               );

                                                  end if;

                                                  if v_session_control.gLogging_Full then

                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '...... Updating billing account installment. Policy Transaction ID: ' || v_pt_trx_id ||
                                                            '...... PTP ID: ' || v_most_recent_ptp_id
                                                       );

                                                  end if;

                                                  pkg_db_payment_arrangement.sp_bill_plan_update
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id,
                                                       io_action_outcome_id,
                                                       v_cash_transfer_profile_id --OSPRODUCT-17719
                                                  );

                                                  pkg_db_payplan_modify.sp_ba_sched_payment_generate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id
                                                  );

                                                  pkg_db_billing_modify.sp_billaccinstallment_create
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_most_recent_ptp_id,
                                                       io_action_outcome_id
                                                  );

                                             end;

                                        end if;

                                   end if;

                              end if;

                         -- OSPRODUCT-2992
                         else

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_pp_object_id,
                                   gbv_PPUProfileDirty,
                                   pkg_db_constant.g_Yes
                              );


                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_dp_object_id,
                                   gbv_DPUProfileDirty,
                                   pkg_db_constant.g_Yes
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'Dirty flag set.. Disb Profile: '||v_dp_object_id||
                                        'Pay Profile: '                  ||v_pp_object_id
                                   );

                              end if;

                              -- Update Datamart
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_pp_object_id, v_datamart_tf);
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_dp_object_id, v_datamart_tf);

                         end if;

                    end;

                    -- 5.7 update BA datamart
                    -- OSPRODUCT-8715
                    v_pref_pay_prof_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id , in_billing_account_id, gbv_BAPreferredPayProfUsage);

                    if v_pref_pay_prof_id is not null
                    then

                         update dragon_billingaccount
                         set
                              pref_payment_profile_id = v_pref_pay_prof_id,
                              session_id = in_session_id,
                              transaction_id = in_transaction_id ,
                              last_updation_date = sysdate

                         where
                              billingaccount_id = in_billing_account_id;

                    end if;

                    -- 5.8 Reset the usage objects
                    begin

                         v_pp_object_id := null;
                         v_nextterm_pp_object_id := null;
                         v_priorterm_pp_object_id := null;
                         v_dp_object_id := null;
                         v_nextterm_dp_object_id := null;
                         v_priorterm_dp_object_id := null;

                    end;

               else

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Policy id null'
                         );

                    end if;

               end if;

               v_object_index := v_policy_list.next( v_object_index );

          end loop; -- for each selection ...

     else

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile association error - Policy list empty..'
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     -- OSBILLING-3884
     pkg_db_object.sp_billing_acct_trx_process
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          v_object_cache,
          io_action_outcome_id
     );
     -- OSBILLING-3884

end sp_associate_policy_to_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_init_fitrx_with_ctf
--
--  %USAGE
--    Procedure to setup profile attributes on FITransaction object.
--    Called during Single Payment transaction with an existing profile.
--
--  %ALGORITHM
--    Not profivided
--
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_fitransaction_id                    FITransaction
--  %PARAM  in_ctf_id                              Profile Object
--  %PARAM  io_action_outcome_id                   Outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_init_fitrx_with_ctf
(
     in_session_id              in             object.object_id%type,
     in_transaction_id          in             object.object_id%type,
     in_fitransaction_id        in             object.object_id%type,
     in_ctf_id                  in             object.object_id%type,
     io_action_outcome_id       in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name           constant  system_log.program_name%type       :=  pkg_name||'sp_init_fitrx_with_ctf';
     v_session_control          pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_bv_table                 pkg_os_object_io.t_bv_table;

     v_profile_mode             object_bv_value.business_variable_value%type;

     v_card_holder_name         object_bv_value.business_variable_value%type;
     v_card_type                object_bv_value.business_variable_value%type;
     v_card_security_code       object_bv_value.business_variable_value%type;
     v_card_number_16digit      object_bv_value.business_variable_value%type;
     v_card_number_4digit       object_bv_value.business_variable_value%type;
     v_card_tokennumber         object_bv_value.business_variable_value%type;
     v_card_expirymonth         object_bv_value.business_variable_value%type;
     v_card_expiryyear          object_bv_value.business_variable_value%type;

     v_eft_payer_type           object_bv_value.business_variable_value%type;
     v_eft_legalentityttype     object_bv_value.business_variable_value%type;
     v_eft_legalentityname      object_bv_value.business_variable_value%type;
     v_eft_acchldrfirstname     object_bv_value.business_variable_value%type;
     v_eft_acchldrmiddlename    object_bv_value.business_variable_value%type;
     v_eft_acchldrlastname      object_bv_value.business_variable_value%type;
     v_eft_bankid               object_bv_value.business_variable_value%type;
     v_eft_banktransitnumber    object_bv_value.business_variable_value%type;
     v_eft_bankroutingnumber    object_bv_value.business_variable_value%type;
     v_eft_accountnumber        object_bv_value.business_variable_value%type;
     v_eft_accounttype          object_bv_value.business_variable_value%type;
     v_eft_bankname             object_bv_value.business_variable_value%type;
     v_eft_bankadd1             object_bv_value.business_variable_value%type;
     v_eft_bankadd2             object_bv_value.business_variable_value%type;
     v_eft_bankzip              object_bv_value.business_variable_value%type;
     v_eft_bankpostalcode       object_bv_value.business_variable_value%type;
     v_eft_bankphone            object_bv_value.business_variable_value%type;
     v_eft_bankcurrency         object_bv_value.business_variable_value%type;
     v_eft_bankcity             object_bv_value.business_variable_value%type;
     v_eft_bankcountry          object_bv_value.business_variable_value%type;
     v_eft_bankprovince         object_bv_value.business_variable_value%type;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Started profile details setup on FITransaction.. '
          );

     end if;

     if in_fitransaction_id is null or in_ctf_id is null then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Leaving the process of fitransaction initialization..'
               );

          end if;

          return;

     end if;

     -- Profile Mode
     v_profile_mode := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFPaymentMode);

     begin

          if v_profile_mode = g_PaymentMode_Card then

               -- Card Holder Name
               v_card_holder_name            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardHolderName);

               -- Card Type - Visa/MasterCard/Amex
               v_card_type                   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardType);

               -- Card number - 16digit
               v_card_number_16digit         := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardNumber16digit);

               -- Card number - 4digit
               v_card_number_4digit          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardNumber4digit);

               -- Card Token Number
               v_card_tokennumber            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, 32834040);

               -- Expiry Month
               v_card_expirymonth            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardExpMon);

               -- Expiry Year
               v_card_expiryyear             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardExpYear);

               -- Security Code
               v_card_security_code          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFCardSecurityCode);

          end if;

          if v_profile_mode = g_PaymentMode_EFT then

               -- Payer Type
               v_eft_payer_type              := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTPayerType);

               if v_eft_payer_type = g_PayerType_Individual then

                    -- Account Holder First Name
                    v_eft_acchldrfirstname   := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTAccHolderFirstName);

                    -- Account Holder Middle Name
                    v_eft_acchldrmiddlename  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTAccHolderMiddleName);

                    -- Account Holder Last Name
                    v_eft_acchldrlastname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTAccHolderLastName);

               elsif v_eft_payer_type = g_PayerType_Business then

                    -- Entity Type
                    v_eft_legalentityttype      := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTLegalEntityType);

                    -- Entity Name
                    v_eft_legalentityname    := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTLegalEntityName);

               end if;

               -- Bank Account Number
               v_eft_accountnumber           := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankAccNumber);

               -- Bank Account Type
               v_eft_accounttype             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankAccType);

               -- Bank ID
               v_eft_bankid                  := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankID);

               -- Bank Transit Number
               v_eft_banktransitnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTTransitNo);

               -- Bank Routing Number
               v_eft_bankroutingnumber       := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankRoutingNo);

               -- Bank name
               v_eft_bankname                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankName);

               -- Bank Address 1
               v_eft_bankadd1                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankAdd1);

               -- Bank Address 2
               v_eft_bankadd2                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankAdd2);

               -- Bank Address Zip
               v_eft_bankzip                 := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankZip);

               -- Bank Address Postal Code
               v_eft_bankpostalcode          := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankPostalCode);

               -- Bank Phone
               v_eft_bankphone               := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankPhone);

               -- Bank Currency
               v_eft_bankcurrency            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTCurrency);

               -- Bank City
               v_eft_bankcity                := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankCity);

               -- Bank Country
               v_eft_bankcountry             := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankCountry);

               -- Bank Province
               v_eft_bankprovince            := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_id, gbv_CTFEFTBankProvince);

          end if;

     end;

     v_bv_table.delete;

     if v_profile_mode = g_PaymentMode_Card then

          v_bv_table(gbv_FITrx_CardHolderName).business_variable_value  := v_card_holder_name;
          v_bv_table(gbv_FITrx_CardType).business_variable_value           := v_card_type;
          v_bv_table(gbv_FITrx_CardNumber).business_variable_value         := v_card_number_16digit;
          v_bv_table(gbv_FITrx_CardNumber4Digit).business_variable_value   := v_card_number_4digit;
          v_bv_table(gbv_FITrx_CardExpiryMonth).business_variable_value    := v_card_expirymonth;
          v_bv_table(gbv_FITrx_CardExpiryYear).business_variable_value     := v_card_expiryyear;
          v_bv_table(gbv_FITrx_CardSecurityCode).business_variable_value   := v_card_security_code;
          v_bv_table(gbv_FITrx_CardTokenNumber).business_variable_value    := v_card_tokennumber;

     end if;

     if v_profile_mode = g_PaymentMode_EFT then

          v_bv_table(gbv_FITrx_EFTPayerFirstName).business_variable_value    := v_eft_acchldrfirstname;
          v_bv_table(gbv_FITrx_EFTPayerMiddleName).business_variable_value   := v_eft_acchldrmiddlename;
          v_bv_table(gbv_FITrx_EFTPayerLastName).business_variable_value     := v_eft_acchldrlastname;

          v_bv_table(gbv_FITrx_EFTBankTransitNumber).business_variable_value := v_eft_banktransitnumber;
          v_bv_table(gbv_FITrx_EFTBankName).business_variable_value          := v_eft_bankname;
          v_bv_table(gbv_FITrx_EFTBankIDNumber).business_variable_value      := v_eft_bankid;
          v_bv_table(gbv_FITrx_EFTBankAccNumber).business_variable_value     := v_eft_accountnumber;
          v_bv_table(gbv_FITrx_EFTBankRoutingNo).business_variable_value     := v_eft_bankroutingnumber;

          v_bv_table(gbv_FITrx_EFTBankAddLine1).business_variable_value      := v_eft_bankadd1;
          v_bv_table(gbv_FITrx_EFTBankAddLine2).business_variable_value      := v_eft_bankadd2;
          v_bv_table(gbv_FITrx_EFTBankPhoneNo).business_variable_value       := v_eft_bankphone;
          --v_bv_table(gbv_FITrx_EFTCurrency).business_variable_value          := v_eft_bankcurrency;  --OSPRODUCT-9667

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_fitransaction_id,
          v_bv_table
     );

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...... not able to initialize fitransaction  object '
              || ' Error: '
              ||sqlerrm (sqlcode)
          );

          raise;

end sp_init_fitrx_with_ctf;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_single_pmnt_profile_setup
--
--  %USAGE
--    Procedure to setup profile during single payment transaction
--
--  %ALGORITHM
--    Not profivided
--
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_fitransaction_id                    FITransaction
--  %PARAM  in_ctf_id                              Profile Object
--  %PARAM  io_action_outcome_id                   Outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_single_pmnt_profile_setup
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_acc_trx_set_id             in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_single_pmnt_profile_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_fitransaction_id                    object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_selected_profile_id                 object.object_id%type;
     v_trx_associated_policy               object.object_id%type;
     v_new_disbursement_profile_id         object.object_id%type;
     v_new_payment_profile_id              object.object_id%type;
     v_chk_placeholder_id                  object.object_id%type;
     v_eft_placeholder_id                  object.object_id%type;
     v_card_placeholder_id                 object.object_id%type;
     v_prf_placeholder_id                  object.object_id%type;

     v_profile_new_or_existing             object_bv_value.business_variable_value%type;
     v_payment_mode                        object_bv_value.business_variable_value%type;
     v_prf_setup_with_fitrx_tf             char(1) := 'T';

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_profile_usage_list                  object_tt := new object_tt();
     v_profile_usage_index                 number;
     v_profile_usage_id                    object.object_id%type;
     v_profile_template_id                 object.object_id%type;
     v_profile_adhoc_tf                    char(1);
     v_datamart_tf                         char(1) := 'T';

begin

     v_billing_account_id := pkg_os_object_search.fn_object_get_parent_of_type
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_billing_acc_trx_set_id,
                                  pkg_db_constant.gObjType_BillingAccount
                             );

     if v_billing_account_id is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Setup Error - Can not find parent billing account.'
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     v_fitransaction_id := pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_billing_acc_trx_set_id,
                                gbv_Ref_CurrentFiTransaction
                           );

     if v_fitransaction_id is null
     then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Setup Error - Fitransaction Object not found.'
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     v_payment_mode := pkg_os_object_io.fn_object_bv_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_fitransaction_id,
                            gbv_FITrx_PaymentMode
                       );

     --OSBILLING-7764
     if v_payment_mode not in
        (
             g_FITrx_PaymentMode_Card,
             g_FITrx_PymntModeAgntPrtl_Card,
             g_FITrx_PymntModeCustPrtl_Card,
             g_FITrx_PaymentMode_EFT,
             g_FITrx_PymntModeAgntPrtl_EFT,
             g_FITrx_PymntModeCustPrtl_EFT
        )
     then

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile setup will be done for card or EFT payment mode.'
               );

          end if;

          -- Do the placeholder cleanup
          v_chk_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_acc_trx_set_id,
                                        gbv_Ref_BatchPlfPlchldrInput
                                   );

          if v_chk_placeholder_id is not null then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting Cheque Placeholder.. ' || v_chk_placeholder_id
                    );

               end if;

               -- Delete chk placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_chk_placeholder_id,
                    null
               );

               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_acc_trx_set_id,
                                        gbv_Ref_BatchCardPlaceholder
                                   );

               if v_card_placeholder_id is not null then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting Card Placeholder.. ' || v_card_placeholder_id
                         );

                    end if;

                    -- Delete card placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_card_placeholder_id,
                         null
                    );

               end if;

               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_acc_trx_set_id,
                                            gbv_Ref_BatchEFTPlaceholder
                                       );

               if v_eft_placeholder_id is not null then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting EFT Placeholder.. ' || v_eft_placeholder_id
                         );

                    end if;

                    -- Delete eft placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_eft_placeholder_id,
                         null
                    );

               end if;

          end if;

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;
          return;
          --raise PROFILE_SETUP_ERROR;

     else

          if v_payment_mode in
             (
                  g_FITrx_PaymentMode_Card,
                  g_FITrx_PymntModeAgntPrtl_Card,
                  g_FITrx_PymntModeCustPrtl_Card
             )
          then

               v_payment_mode := g_PaymentMode_Card;

               v_profile_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_fitransaction_id,
                                                 gbv_FITrx_CardNewOrExisting
                                            );

               if v_profile_new_or_existing = g_Profile_Type_New then

                    v_prf_placeholder_id := nvl ( pkg_os_object_io.fn_object_bv_get
                                                  (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      in_billing_acc_trx_set_id,
                                                      gbv_Ref_BatchCardPlaceholder
                                                  ), v_fitransaction_id );

               end if;

          else

               v_payment_mode := g_PaymentMode_EFT;

               v_profile_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_fitransaction_id,
                                                 gbv_FITrx_EFTNewOrExisting
                                            );

               if v_profile_new_or_existing = g_Profile_Type_New then

                    v_prf_placeholder_id := nvl ( pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_billing_acc_trx_set_id,
                                                       gbv_Ref_BatchEFTPlaceholder
                                                  ), v_fitransaction_id ) ;

               end if;

          end if;

          if v_prf_placeholder_id != v_fitransaction_id then

               v_prf_setup_with_fitrx_tf := 'F';

          end if;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile setup for Single Payment.. ' ||
               '.. Billing Account ID: '                || v_billing_account_id ||
               '.. FI Transaction ID: '                 || v_fitransaction_id   ||
               '.. Mode: '                              || v_payment_mode       ||
               '.. Profile New or existing: '           || v_profile_new_or_existing ||
               '.. Profile Placeholder: '               || v_prf_placeholder_id
          );

     end if;

     -- 1. Profile Setup
     case

          when v_profile_new_or_existing = g_Profile_Type_New then

               sp_setup_new_ctf
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_payment_mode,
                    v_prf_placeholder_id,
                    v_cash_transfer_profile_id,
                    'T'
               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. New profile Setup.. ' || v_cash_transfer_profile_id
                    );

               end if;

               if v_prf_setup_with_fitrx_tf = 'F' then

                    sp_init_fitrx_with_ctf
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitransaction_id,
                         v_cash_transfer_profile_id,
                         io_action_outcome_id
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Resetting values to FITransaction.. '
                         );

                    end if;

               end if;

               -- 2257
               -- OSPRODUCT-15437
               /*v_profile_adhoc_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_id,
                                          32790248
                                     );*/
                                     
               v_profile_adhoc_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_billing_acc_trx_set_id, -- OSPRODUCT-15437
                                          gbv_ProfileNotForFutureUse -- OSPRODUCT-15437 (declaration added to spec)
                                     );
                                     
               -- end OSPRODUCT-15437

               if v_profile_adhoc_tf = g_Yes then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Not for future use.. '
                         );

                    end if;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_cash_transfer_profile_id,
                         gbv_CTFRecurranceMode,
                         g_RecurrencyMode_Adhoc
                    );

                    /*begin

                         update
                              dragon_cashtransferprofile ctf
                         set
                              ctf.profile_recur_mode_id = g_RecurrencyMode_Adhoc,
                              ctf.profile_recur_mode = pkg_os_lookup.fn_lookup_list_text_get(5400040, g_RecurrencyMode_Adhoc)
                         where
                              ctf.ctf_id = v_cash_transfer_profile_id;

                    exception

                         when others then
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_cash_transfer_profile_id, v_datamart_tf);

                    end;*/

                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_cash_transfer_profile_id, v_datamart_tf);

               end if;

          when v_profile_new_or_existing = g_Profile_Type_Existing then

               v_selected_profile_id := pkg_os_object_io.fn_object_bv_path_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_session_id,
                                             '210356.211681.210133.210135'
                                        );

               if v_selected_profile_id is null then

                    v_selected_profile_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_billing_acc_trx_set_id,
                                                  gbv_Ref_BatchAssociatedProfile
                                             );

               end if;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Existing profile: ' || v_selected_profile_id
                    );

               end if;

               if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_selected_profile_id) = pkg_db_constant.gObjType_PaymentProfileUsage then

                    v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_selected_profile_id,
                                                       gbv_PPUCashTransferProfUSed
                                                  );

               elsif pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_selected_profile_id) = pkg_db_constant.gObjType_CashTransferProfile then

                    v_cash_transfer_profile_id := v_selected_profile_id;

               else

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profile setup error, existing profile not found..'
                    );

                    raise PROFILE_SETUP_ERROR;

               end if;

               sp_init_fitrx_with_ctf
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_cash_transfer_profile_id,
                    io_action_outcome_id
               );

               -- Keeping for backward compatibility
               for v_profile_usage_id in (
                                             select
                                                  dp.pay_profile_id
                                             from
                                                  dragon_pay_profile dp
                                             where
                                                  dp.ctf_object_id = v_cash_transfer_profile_id
               )
               loop

                    v_profile_template_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_profile_usage_id.pay_profile_id,
                                                  pkg_os_constant_bv.gbv_ultimate_template
                                             );

                    if v_profile_template_id = v_profile_usage_id.pay_profile_id then

                         exit;

                    end if;

                    v_profile_usage_index := v_profile_usage_list.next( v_profile_usage_index );

               end loop;

          else

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Profile Setup Error - Neither new nor existing.. Payment Mode: ' || v_payment_mode
               );

               raise PROFILE_SETUP_ERROR;


     end case;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile CTF: ' || v_cash_transfer_profile_id
          );

     end if;

     if v_cash_transfer_profile_id is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Setup Error - Profile not created. ' || v_payment_mode
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     -- 2. Associate the CTF to batch
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_billing_acc_trx_set_id,
          gbv_Ref_BatchAssociatedProfile,
          v_cash_transfer_profile_id
     );

     -- 3. Setup usage
     begin

          v_trx_associated_policy := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_fitransaction_id,
                                          gbv_FITrx_Ref_ActionPolicy
                                     );

          sp_create_ppu
          (
              in_session_id,
              in_transaction_id,
              v_billing_account_id,
              v_trx_associated_policy,
              v_cash_transfer_profile_id,
              v_new_payment_profile_id
          );

          v_bv_table.delete;

          -- Set start date
          v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

          -- Recurrence mode
          -- Adhoc when added through Single workflow
          v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;

          -- Preferred - no
          -- Non preferred when added through Single workflow
          v_bv_table(gbv_PPUPreferredtf).business_variable_value := g_No;

          -- Created by batch
          v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := in_billing_acc_trx_set_id;

          -- Ultimate template
          if v_profile_usage_id is not null then

               v_bv_table(pkg_os_constant_bv.gbv_ultimate_template).business_variable_value := v_profile_usage_id;

          end if;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_payment_profile_id,
               v_bv_table
          );

          pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, v_new_payment_profile_id, v_datamart_tf);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payment Profile created: ' || v_new_payment_profile_id
               );

          end if;

          if v_trx_associated_policy is not null then

               sp_create_dpu_for_customer
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_trx_associated_policy,
                    v_cash_transfer_profile_id,
                    null,
                    v_new_disbursement_profile_id
               );

               v_bv_table.delete;

               -- Set start date
               v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

               -- Recurrence mode
               -- Adhoc when added through Single workflow
               v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;

               -- Preferred - no
               -- Non preferred when added through Single workflow
               v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_No;

               -- Created by batch
               v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := in_billing_acc_trx_set_id;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_disbursement_profile_id,
                    v_bv_table
               );

               pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, v_new_disbursement_profile_id, v_datamart_tf);

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. As the is associated with policy: ' || v_trx_associated_policy ||
                         '.. created Disbursement Profile as well: ' || v_new_disbursement_profile_id
                    );

              end if;

          end if;

     end;

     -- 4. Associate to Policy
     if v_trx_associated_policy is not null then

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Associating to Policy: ' || v_trx_associated_policy
               );

          end if;

          sp_associate_policy_to_profile
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               v_trx_associated_policy,
               io_action_outcome_id,
               in_billing_acc_trx_set_id,
               v_new_payment_profile_id,
               v_new_disbursement_profile_id,
               in_adhoc_profile_tf => 'T'     --UTPRODUCT-3819
          );

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Associating to Billing Account: '
               );

          end if;

          -- Associate profile to billing account
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_payment_profile_id,
               gbv_UsageOfGenericObject,
               v_billing_account_id
          );

     end if;

     -- 5. Placeholder cleanup
     begin

          -- Do the placeholder cleanup
          v_chk_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_billing_acc_trx_set_id,
                                        gbv_Ref_BatchPlfPlchldrInput
                                   );

          if v_chk_placeholder_id is not null then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting Chk Placeholder..' || v_chk_placeholder_id
                    );

               end if;

               -- Delete card placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_chk_placeholder_id,
                    null
               );

               if v_payment_mode = g_PaymentMode_Card then

                    if v_profile_new_or_existing = g_Profile_Type_New then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_acc_trx_set_id,
                              gbv_Ref_BatchCardPlaceholder,
                              null
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Setting Card Placeholder to null..'
                              );

                         end if;

                    else

                         v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_billing_acc_trx_set_id,
                                                       gbv_Ref_BatchCardPlaceholder
                                                  );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Deleting Card Placeholder..' || v_card_placeholder_id
                              );

                         end if;

                         -- Delete card placeholder
                         pkg_os_object.sp_object_delete
                         (
                              in_session_id,
                              in_transaction_id,
                              null,
                              v_card_placeholder_id,
                              null
                         );

                    end if;

                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_billing_acc_trx_set_id,
                                                 gbv_Ref_BatchEFTPlaceholder
                                            );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting EFT Placeholder.. ' || v_eft_placeholder_id
                         );

                    end if;

                    -- Delete eft placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_eft_placeholder_id,
                         null
                    );

               else

                    if v_profile_new_or_existing = g_Profile_Type_New then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_acc_trx_set_id,
                              gbv_Ref_BatchEFTPlaceholder,
                              null
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Setting EFT Placeholder to null..'
                              );

                         end if;

                    else

                         v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      in_billing_acc_trx_set_id,
                                                      gbv_Ref_BatchEFTPlaceholder
                                                 );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Deleting EFT Placeholder..' || v_eft_placeholder_id
                              );

                         end if;

                         -- Delete card placeholder
                         pkg_os_object.sp_object_delete
                         (
                              in_session_id,
                              in_transaction_id,
                              null,
                              v_eft_placeholder_id,
                              null
                         );

                    end if;

                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_billing_acc_trx_set_id,
                                                  gbv_Ref_BatchCardPlaceholder
                                             );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting Card Placeholder.. ' || v_card_placeholder_id
                         );

                    end if;

                    -- Delete card placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_card_placeholder_id,
                         null
                    );

               end if;

          end if;

     end;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_single_pmnt_profile_setup;

/*procedure sp_disbursement_profile_setup
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_acc_trx_set_id             in             object.object_id%type,
     in_new_setup_tf                       in             char default 'F',
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_single_pmnt_profile_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_fitransaction_id                    object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_selected_profile_id                 object.object_id%type;
     v_trx_associated_policy               object.object_id%type;
     v_new_disbursement_profile_id         object.object_id%type;
     v_new_payment_profile_id              object.object_id%type;
     v_chk_placeholder_id                  object.object_id%type;
     v_eft_placeholder_id                  object.object_id%type;
     v_card_placeholder_id                 object.object_id%type;
     v_prf_placeholder_id                  object.object_id%type;

     v_profile_new_or_existing             object_bv_value.business_variable_value%type;     
     v_payment_mode                        object_bv_value.business_variable_value%type;
     v_prf_setup_with_fitrx_tf             char(1) := 'T';

     v_bv_table                            pkg_os_object_io.t_bv_table;
     v_profile_usage_list                  object_tt := new object_tt();
     v_profile_usage_index                 number;
     v_profile_usage_id                    object.object_id%type;
     v_profile_template_id                 object.object_id%type;
     v_profile_adhoc_tf                    char(1);
     v_datamart_tf                         char(1) := 'T';

     v_billing_acc_trx_set_id              object.object_id%type;
     v_disb_placeholder_id                 object.object_id%type;

begin

     \*v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_action_object_id,
                                      gbv_BACurrentBatch --31904446 -- btx Set
                                 );*\

     v_billing_account_id := pkg_os_object.fn_object_parent_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_billing_acc_trx_set_id
                             );

     -- Get the check placeholder          
     v_chk_placeholder_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_acc_trx_set_id,
                                   gbv_Ref_BatchPlfPlchldrInput
                              );

     -- Get the disbursement profile
     v_disb_placeholder_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_acc_trx_set_id,
                                   gbv_Ref_BatchPlfPlchldrDisb -- add a new ref BV
                              );

     v_payment_mode := pkg_os_object_io.fn_object_bv_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_chk_placeholder_id,
                            gbv_CTFPaymentMode
                       );

     -- 1. Profile Setup
     case

          when in_new_setup_tf = 'T' then              

               sp_setup_new_ctf
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_payment_mode,
                    v_chk_placeholder_id,
                    v_cash_transfer_profile_id,
                    'T'
               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. New profile Setup.. ' || v_cash_transfer_profile_id
                    );

               end if;

          when in_new_setup_tf = 'T' then              

               v_selected_profile_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_billing_acc_trx_set_id,
                                             gbv_DPUBatchCreatedUsingPrf
                                        );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Existing profile: ' || v_selected_profile_id
                    );

               end if;

               if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_selected_profile_id) = pkg_db_constant.gObjType_DisbProfileUsage then

                    v_cash_transfer_profile_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_selected_profile_id,
                                                       gbv_DPUCashTrsfrProfileUsed
                                                  );

               elsif pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_selected_profile_id) = pkg_db_constant.gObjType_CashTransferProfile then

                    v_cash_transfer_profile_id := v_selected_profile_id;

               else

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profile setup error, existing profile not found..'  
                    );

                    raise PROFILE_SETUP_ERROR;

               end if;

          else

               null;

     end case;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile CTF: ' || v_cash_transfer_profile_id  
          );

     end if;

     if v_cash_transfer_profile_id is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Setup Error - Profile not created. ' || v_payment_mode
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     -- 2. Associate the CTF to batch
     begin

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchAssociatedProfile,
               v_cash_transfer_profile_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_DPUBatchCreatedUsingPrf, -- Newly added in psk
               v_cash_transfer_profile_id
          );

     end;

     -- 3. Setup usage
     begin

          sp_create_dpu_for_non_customer
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               v_trx_associated_policy,
               v_cash_transfer_profile_id,
               v_disb_placeholder_id,
               v_new_disbursement_profile_id
          );

          v_bv_table.delete;

          -- Set start date
          v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

          -- Recurrence mode
          -- Adhoc when added through Single workflow
          v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;

          -- Preferred - no
          -- Non preferred when added through Single workflow
          v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_No;

          -- Created by batch
          v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := in_billing_acc_trx_set_id;

          -- Do the address setup as entered on the UI

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_disbursement_profile_id,
               v_bv_table
          );

          -- set the New DPU object in Session
          -- For backward compatibility
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_session_id,
               210395, --session new object bv
               v_new_disbursement_profile_id
          );

          pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, v_new_disbursement_profile_id, v_datamart_tf);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. As the is associated with policy: ' || v_trx_associated_policy ||
                    '.. created Disbursement Profile as well: ' || v_new_disbursement_profile_id
               );

         end if;

     end;

     -- 5. Placeholder cleanup
     begin

          if in_new_setup_tf = 'T' then

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_billing_acc_trx_set_id,
                    gbv_Ref_BatchPlfPlchldrInput,
                    null
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_billing_acc_trx_set_id,
                    gbv_Ref_BatchPlfPlchldrDisb,
                    null
               );

          else

               if v_chk_placeholder_id is not null then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting Chk Placeholder..' || v_chk_placeholder_id
                         );

                    end if;

                    -- Delete card placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_chk_placeholder_id,
                         null
                    );

               end if;

               if v_disb_placeholder_id is not null then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Deleting Chk Placeholder..' || v_disb_placeholder_id
                         );

                    end if;

                    -- Delete card placeholder
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         null,
                         v_disb_placeholder_id,
                         null
                    );

               end if;

          end if;              

     end;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_disbursement_profile_setup;*/
-- 2439
procedure sp_disbursement_profile_setup
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_acc_trx_set_id             in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_disbursement_profile_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id                  object.object_id%type;
     v_fitransaction_id                    object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     
     v_new_disbursement_profile_id         object.object_id%type;
     v_chk_placeholder_id                  object.object_id%type;
     v_eft_placeholder_id                  object.object_id%type;
     v_card_placeholder_id                 object.object_id%type;
     v_prf_placeholder_id                  object.object_id%type;
     
     v_payment_mode                        object_bv_value.business_variable_value%type;    
     v_bv_table                            pkg_os_object_io.t_bv_table;     
     
     v_profile_adhoc_tf                    char(1);
     v_datamart_tf                         char(1) := 'T';
     
     v_disb_placeholder_id                 object.object_id%type;

begin

     /*v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_action_object_id,
                                      gbv_BACurrentBatch --31904446 -- btx Set
                                 );*/
                                 
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action Object ID: ' || in_billing_acc_trx_set_id  
          );

     end if;

     v_billing_account_id := pkg_os_object.fn_object_parent_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_billing_acc_trx_set_id
                             );

     -- Get the check placeholder          
     v_chk_placeholder_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_acc_trx_set_id,
                                   gbv_Ref_BatchPlfPlchldrInput
                              );

     -- Get the disbursement profile
     v_disb_placeholder_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_acc_trx_set_id,
                                   gbv_Ref_BatchPlfPlchldrDisb -- add a new ref BV
                              );

     v_payment_mode := pkg_os_object_io.fn_object_bv_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_chk_placeholder_id,
                            gbv_CTFPaymentMode
                       );                       

     -- 1. Profile Setup
     begin

          -- Get the appropriate placeholder based on the mode
          if v_payment_mode = g_PaymentMode_Card then
                    
               v_prf_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_acc_trx_set_id,
                                            gbv_Ref_BatchCardPlaceholder
                                       );
                                            
          elsif v_payment_mode = g_PaymentMode_EFT then
                    
               v_prf_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_acc_trx_set_id,
                                            gbv_Ref_BatchEFTPlaceholder
                                       );
                                            
          end if;         
          
          -- Get the adhoc option selected on the UI
          -- OSPRODUCT-15437
          v_profile_adhoc_tf := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_billing_acc_trx_set_id, -- OSPRODUCT-15437
                                     gbv_ProfileNotForFutureUse -- OSPRODUCT-15437
                                );

          if v_profile_adhoc_tf = g_Yes then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Not for future use.. '
                    );

               end if;
               
               pkg_os_object_io.sp_object_bv_set 
               (
                   in_Session_id, 
                   in_transaction_id, 
                   v_prf_placeholder_id, 
                   gbv_CTFAdhocRecurring,
                   g_Yes
               );
               
               sp_setup_new_ctf
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_payment_mode,
                    v_prf_placeholder_id,
                    v_cash_transfer_profile_id,
                    'T',
                    'T'
               );
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. New profile Setup.. ' || v_cash_transfer_profile_id
                    );

               end if;
               
          else
               
               sp_setup_new_ctf
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_payment_mode,
                    v_prf_placeholder_id,
                    v_cash_transfer_profile_id,
                    'T'
               );
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. New profile Setup.. ' || v_cash_transfer_profile_id
                    );

               end if;
               
          end if;

     end;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile CTF: ' || v_cash_transfer_profile_id  
          );

     end if;

     if v_cash_transfer_profile_id is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile Setup Error - Profile not created. ' || v_payment_mode
          );

          raise PROFILE_SETUP_ERROR;

     end if;

     -- 2. Setup usage
     begin

          sp_create_dpu_for_non_customer
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               null,
               v_cash_transfer_profile_id,
               v_disb_placeholder_id,
               v_new_disbursement_profile_id
          );

          v_bv_table.delete;

          -- Set start date
          v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);

          -- Recurrence mode
          -- Adhoc when added through disbursement workflow
          v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Adhoc;

          -- Preferred - no
          -- Non preferred when added through disbursement workflow
          v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_No;

          -- Created by batch
          v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := in_billing_acc_trx_set_id;

          -- Do the address setup as entered on the UI

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_disbursement_profile_id,
               v_bv_table
          );

          -- set the New DPU object in Session
          -- For backward compatibility
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_session_id,
               210395, --session new object bv
               v_new_disbursement_profile_id
          );

          pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, v_new_disbursement_profile_id, v_datamart_tf);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Created Disbursement Profile as well: ' || v_new_disbursement_profile_id
               );

         end if;

     end;
     
     -- 3. Associate the CTF to batch
     begin

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchAssociatedProfile,
               v_cash_transfer_profile_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_DPUBatchCreatedUsingPrf, -- Newly added in psk
               v_new_disbursement_profile_id
          );
          
          /*pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               31711146, --ref disb batch created
               v_new_disbursement_profile_id
          );*/

     end;
     
     -- 4. Associate to BA
     begin
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Associating to Billing Account: '
               );

          end if;

          -- Associate profile to billing account
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_disbursement_profile_id, -- OSPRODUCT-11829
               gbv_UsageOfGenericObject,
               v_billing_account_id
          );
     
     end;
     
     -- 5. Placeholder cleanup
     begin
          
          -- If mode is card then delete eft, chk and dpu
          -- If mode is eft then delete card, chk and dpu          
          if v_chk_placeholder_id is not null then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting Chk Placeholder..' || v_chk_placeholder_id
                    );

               end if;

               -- Delete chk placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_chk_placeholder_id,
                    null
               );

          end if;
          
          if v_disb_placeholder_id is not null then
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting Disb Placeholder..' || v_disb_placeholder_id
                    );

               end if;

               -- Delete chk placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_disb_placeholder_id,
                    null
               );
               
          end if;
               
          if v_payment_mode = g_PaymentMode_Card then
                    
               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_acc_trx_set_id,
                                            gbv_Ref_BatchEFTPlaceholder
                                       );
                                       
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting EFT Placeholder..' || v_eft_placeholder_id
                    );

               end if;
                                       
               -- Delete card placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_eft_placeholder_id,
                    null
               );
                                            
          elsif v_payment_mode = g_PaymentMode_EFT then
                    
               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            in_billing_acc_trx_set_id,
                                            gbv_Ref_BatchCardPlaceholder
                                        );
                                        
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Deleting Card Placeholder..' || v_card_placeholder_id
                    );

               end if;
                                        
               -- Delete card placeholder
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    null,
                    v_card_placeholder_id,
                    null
               );
                                            
          end if;
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchPlfPlchldrInput,
               null
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchPlfPlchldrDisb,
               null
          );
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchCardPlaceholder,
               null
          );
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_acc_trx_set_id,
               gbv_Ref_BatchEFTPlaceholder,
               null
          );        

     end;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_disbursement_profile_setup;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_preferred_pmnt_disb_profile
--
--  %USAGE
--    Function to get the preferred payment/disbursement profile of a term or term payer
--    as on current date.
--
--  %ALGORITHM
--    Not profivided
--
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_object_id                           Term/Term Payer
--  %PARAM  in_profile_type                        object type of PaymentProfileUsage or DisbursementProfileUsage
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_preferred_pmnt_disb_profile
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_object_id                          in             object.object_id%type, -- Policy term ID (Can be implemented for BA)
     in_profile_type                       in             object_type.object_type_id%type -- PaymentProfileUsage or DisbursementProfileUsage
)    return object.object_id%type
as
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_preferred_pmnt_disb_profile';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_acc_id                      object.object_id%type;
     v_object_type_id                      object_type.object_type_id%type;
     v_termpayer_billing_acc_id            object.object_id%type;
     v_ultimate_customer_id                object.object_id%type;
     v_term_billing_acc_id                 object.object_id%type;
     v_primary_entity_id                   object.object_id%type;
     v_policy_term_payer_id                object.object_id%type := null;
     v_policy_billing_method               object_bv_value.business_variable_value%type;
     v_current_date                        date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_object_id));
     v_policy_effective_date               date ;
     v_term_expiry_date                    date ;
     v_idx                                 varchar2(100);
     v_list_idx                            varchar2(100);
     v_policy_id                           object.object_id%type;
     v_policy_term_id                      object.object_id%type;
     v_return_value                        object_bv_value.business_variable_value%type := null;
     v_billing_acc_type_id                 object_bv_value.business_variable_value%type := null;
     v_exp_cc_prop                         number;      --OSPRODUCT-12663
     v_count                               number; --OSPRODUCT-27727
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing         number;
     -- kiran end OSPRODUCT-29368 / 29370	 
     --kiran start OSPRODUCT-35200
     v_ptp_bill_plan_enabled_tf            number default g_No;
     --kiran end OSPRODUCT-35200 	 

begin

     -- Get the object type of the passed in object id
     v_object_type_id := pkg_os_object.fn_object_type_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_object_id
                         );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Getting the preferred profile for object: ' || in_object_id ||
               '.. Object Type ID: '                           || v_object_type_id ||
               '.. Profile Type: '                             || in_profile_type
          );

     end if;

     -- Get the policy term
     if v_object_type_id = pkg_os_constant.gobjType_PolicyTerm then

          v_policy_term_id := in_object_id;

     elsif v_object_type_id = pkg_db_multipayer.gObjType_PolicyTermAccPayer then--3349024

          v_policy_term_payer_id := in_object_id;

          begin

               select
                    term_payer.payer_billing_account_id,
                    term_payer.policy_term_id
               into
                    v_termpayer_billing_acc_id,
                    v_policy_term_id
               from
                    dragon_policy_term_payer term_payer
               where
                    term_payer.policy_term_payer_id = v_policy_term_payer_id;

          exception

               when others then
                    null;

          end;

          if v_policy_term_id is null then

               v_policy_term_id := pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_object_id
                                   );

          end if;

     elsif v_object_type_id = pkg_db_constant.gObjType_BillingAccount then

          v_policy_term_id := null;
          v_policy_term_payer_id := null;
          v_policy_id := null;

     else
          -- kiran start OSPRODUCT-29368 / 29370 for debugging
          if v_session_control.gLogging_Full then
     
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..returns null ' 
                );
     
          end if;
          -- kiran end OSPRODUCT-29368 / 29370 for debugging
          return null;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Policy Term ID: ' || v_policy_term_id ||
               '.. Term Payer ID: '  || v_policy_term_payer_id
          );

     end if;
     
     v_exp_cc_prop  :=   nvl(pkg_os_product.fn_product_property_get ( v_policy_id , 19448 ),0);       --OSPRODUCT-12663

     if v_session_control.gLogging_Full                  --OSPRODUCT-12663
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Expired Credit Card Property (1-Yes, 0/null-No): ' || v_exp_cc_prop
          );
     end if;
     
     if v_policy_term_id is not null then

          begin

               select
                    policy_term.policy_term_billing_method_id,
                    policy_term.policy_id ,
                    trunc(policy_term.policy_term_exp_date)
               into
                    v_policy_billing_method,
                    v_policy_id,
                    v_term_expiry_date
               from
                    dragon_policy_term policy_term
               where
                    policy_term.policy_term_id = v_policy_term_id;

          exception

               when others then

                    -- OSPRODUCT-6721
                    -- Removed the error logging as there is not functional impact
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Cant get term details from datamart that may impact overall performance'
                         );

                    end if;

          end;

          begin

               if v_policy_billing_method is null then

                    v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_policy_term_id,
                                                    pkg_db_billing_modify.gbv_PolicyTermBillingMethod
                                               );
               end if;

               if v_policy_id is null then

                    v_policy_id := pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_term_id
                                   );

               end if;

               if v_term_expiry_date is null then

                    v_term_expiry_date := trunc (
                                                     to_date
                                                     (
                                                          pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_policy_term_id,
                                                               29705946
                                                          ),
                                                          pkg_os_constant.DragonDateFormatDefault
                                                     )
                                                );

               end if;

          end;

     end if;

     --kiran start OSPRODUCT-35200 commenting the below if logic and added new condition    
     /*
     -- kiran start OSPRODUCT-29368 / 29370
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                       );
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Policy Id: ' || v_policy_id||
               '..v_ptp_agency_requires_billing:'||v_ptp_agency_requires_billing
          );
     end if;                                   
     -- kiran end OSPRODUCT-29368 / 29370
     if v_policy_billing_method = pkg_db_billing_modify.gBillingMethod_Direct
        or
        v_object_type_id = pkg_db_constant.gObjType_BillingAccount
        -- kiran start OSPRODUCT-29368 / 29370
        or
        v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_Yes
        -- kiran end OSPRODUCT-29368 / 29370         
     then
          -- kiran start OSPRODUCT-29368 / 29370
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. v_object_type_id Id: ' || v_object_type_id                    
               );
          end if;                                   
          -- kiran end OSPRODUCT-29368 / 29370 

      */
      
      v_ptp_bill_plan_enabled_tf   := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_id,
                                            PKG_DB_CONSTANT.gbv_PTPBillPlanEnabledTF
                                      ); 
                                      
     if v_session_control.gLogging_Full
     then
           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '.. v_object_type_id Id: ' || v_object_type_id    ||
                ' v_ptp_bill_plan_enabled_tf:'||v_ptp_bill_plan_enabled_tf
           );
     end if;                                      
     
     if v_object_type_id = pkg_db_constant.gObjType_BillingAccount
        or nvl( v_ptp_bill_plan_enabled_tf, g_No) = g_Yes then
                                      
     --kiran end OSPRODUCT-35200          
		  
          if v_object_type_id = pkg_os_constant.gobjType_PolicyTerm then

               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_policy_term_id,
                                              pkg_os_constant.gObjType_Customer
                                         );

               v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ultimate_customer_id,
                                           pkg_base_customer.gbv_CustRefPrimaryEntity
                                      );

               v_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        pkg_db_constant.gObjType_BillingAccount
                                   );

          elsif v_object_type_id = pkg_db_multipayer.gObjType_PolicyTermAccPayer then

               v_billing_acc_id := v_termpayer_billing_acc_id;

               v_billing_acc_type_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_acc_id,
                                             pkg_db_billing_modify.gbv_BillingAccountType
                                        );
										
               -- kiran start OSPRODUCT-29368 / 29370
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. v_billing_acc_id Id: ' || v_billing_acc_id||
                         '.. v_billing_acc_type_id Id: ' || v_billing_acc_type_id||
                         '.. v_policy_term_id Id: ' || v_policy_term_id||
                         '.. v_policy_term_payer_id Id: ' || v_policy_term_payer_id||
                         '.. v_policy_id Id: ' || v_policy_id
                    );
               end if;                                   
               -- kiran end OSPRODUCT-29368 / 29370										

               if v_billing_acc_type_id <> 201 then

                    v_policy_term_id := null;
                    v_policy_term_payer_id := null;
                    v_policy_id := null;

               end if;

          else

               v_billing_acc_id := in_object_id;

          end if;

          --OSPRODUCT-2992
          if v_policy_id is not null then

               v_current_date:= pkg_db_functions.fn_get_policy_current_date
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_policy_id
                                );
               --OSPRODUCT-2992 end
               v_current_date := trunc(least(v_current_date, v_term_expiry_date));
               
          else
               
                        -- OSPRODUCT-27727
               begin
                    
                    select
                         count(1)
                    into
                         v_count
                    from
                         dragon_billingaccount db
                    where
                         db.billingaccount_id = v_billing_acc_id;
                    
                    if v_count = 1 then
                    
                         v_current_date:= pkg_db_functions.fn_get_billacc_current_date
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_billing_acc_id
                                          );
                                          
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' Account Current Date: ' || v_current_date                     
                              );

                         end if;
                         
                    end if;
                         
               exception
                    when others then
                         
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. In exception block..'              
                              );

                         end if;
                         
                         null;
                                     
               end;               
               -- end OSPRODUCT-27727

          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' Billing_Account_ID: : '       || v_billing_acc_id ||
                    ' Policy Effective Date: '      || v_policy_effective_date ||
                    ' Term Expiry Date: '           || v_term_expiry_date ||
                    ' Current Date: '               || v_current_date                    );

          end if;

          if v_policy_term_id is null and v_policy_term_payer_id is null then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Getting the overridded preferred profile for the account: ' || v_billing_acc_id
                    );

               end if;
               -- Get the overridden preferred flag

               -- Payment profile
               if in_profile_type = pkg_db_constant.gObjType_PaymentProfileUsage then

                    begin

                         select
                              dpp.pay_profile_id
                         into
                              v_return_value
                         from
                              dragon_pay_profile dpp
                         where
                              dpp.billing_account_id = v_billing_acc_id
                         and
                              nvl(dpp.profile_override_flag, g_No) = g_Yes
                         and   --OSPRODUCT-24117 start
                              (
                                   (
                                        dpp.ctf_mode_id = g_PaymentMode_Card 
                                        and 
                                        v_exp_cc_prop = 1
                                        and
                                        pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, dpp.pay_profile_id, gbv_PPUState) = g_ProfileState_Expired
                                        and
                                        (dpp.profile_end_date is null or dpp.profile_end_date > v_current_date)
                                   )
                                      
                                   or
                                   (
                                        pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, dpp.pay_profile_id, gbv_PPUState) = g_ProfileState_Active  -- end OSPRODUCT-4754 
                                        
                                        and
                                        (
                                             dpp.ctf_mode_id is null
                                             or
                                             dpp.ctf_mode_id != g_PaymentMode_Card
                                             or
                                             
                                                 ( 
                                                
                                                    to_number ( pkg_os_object_io.fn_object_bv_get
                                                                   (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        dpp.ctf_object_id,
                                                                        gbv_CTFCardExpYear
                                                                    )
                                                                 ) > to_number(to_char(v_current_date, 'yyyy'))
                                                     or
                                                     (
                                                        to_number ( pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        dpp.ctf_object_id,
                                                                        gbv_CTFCardExpYear
                                                                     )
                                                                   ) = to_number(to_char(v_current_date, 'yyyy'))
                                                        and
                                                        to_number ( pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        dpp.ctf_object_id,
                                                                        gbv_CTFCardExpMon
                                                                     )
                                                                   ) >= to_number(to_char(v_current_date, 'mm'))
                                                     )
                                                  )      
                                                  
                                        )
                                   )
                              );  --OSPRODUCT-24117 end

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Found overridden preferred profile for the account..' || v_return_value

                              );

                         end if;

                    exception

                          when NO_DATA_FOUND then

                               v_return_value := null;

                          when TOO_MANY_ROWS then

                               pkg_os_logging.sp_log_error
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '... Override preferred flag is set on multiple payment profile usage objects. Please fix it for BA: '|| v_billing_acc_id ||
                                    ' Error: ' ||sqlerrm
                               );

                               raise;

                    end;

               end if;

               -- Disbursement
               if in_profile_type = pkg_db_constant.gObjType_DisbProfileUsage then

                    begin

                         select
                              ddp.disb_profile_id
                         into
                              v_return_value
                         from
                              dragon_disb_profile ddp
                         where
                              ddp.billing_account_id = v_billing_acc_id
                         and
                              nvl(pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ddp.disb_profile_id, 33002348), g_No) = g_Yes;

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Found overridden preferred profile for the account..' || v_return_value

                              );

                         end if;

                    exception

                          when NO_DATA_FOUND then

                               v_return_value := null;

                          when TOO_MANY_ROWS then

                               pkg_os_logging.sp_log_error
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '... Override preferred flag is set on multiple disbursement profile usage objects. Please fix it for BA: '|| v_billing_acc_id ||
                                    ' Error: ' ||sqlerrm
                               );

                               raise;

                    end;

               end if;

          end if;

          if v_return_value is null then

               -- OSPRODUCT-6566 Prepare the index
               v_idx := in_transaction_id || ':' || v_policy_id || ':' || in_object_id || ':' || in_profile_type || ':' || v_current_date;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' Billing_Account_ID: : '       || v_billing_acc_id ||
                         ' Policy Effective Date: '      || v_policy_effective_date ||
                         ' Term Expiry Date: '           || v_term_expiry_date ||
                         ' Current Date: '               || v_current_date     ||
                         ' Index: '                      || v_idx
                    );

               end if;
               -- OSPRODUCT-6566 Get the profile
               if pkg_db_object_cache_io.g_preferred_profile_cache.exists(v_idx) then

                    v_return_value := pkg_db_object_cache_io.g_preferred_profile_cache(v_idx);

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. Profile found from cache: ' || v_return_value
                         );

                    end if;

               else

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Profile not found in cache.. Recalculating..'
                         );

                    end if;

                    -- Get the profile
                    if in_profile_type = pkg_db_constant.gObjType_PaymentProfileUsage then
					
                         -- kiran start OSPRODUCT-29368 / 29370                    
                         if v_session_control.gLogging_Full
                         then
     
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' Inside Get Profile PaymentProfileUsage..'||in_profile_type
                              );     
                         end if;
                         -- kiran end OSPRODUCT-29368 / 29370
						 
                         select
                              max(dpp.pay_profile_id)
                         into
                              v_return_value
                         from
                              dragon_pay_profile dpp
                         where
                              dpp.billing_account_id = v_billing_acc_id
                         and
                              (
                                   (
                                        v_policy_term_id is null
                                        and
                                        dpp.policy_term_id is null
                                        and
                                        dpp.associated_term_payer is null
                                   )
                                   or
                                   (
                                        v_policy_term_id is not null
                                        and
                                        dpp.policy_term_id = v_policy_term_id
                                        and
                                        (
                                             v_policy_term_payer_id is null
                                             or
                                             dpp.associated_term_payer = v_policy_term_payer_id
                                        )
                                   )
                              )
                         and
                              dpp.preferred_prof_id = g_Yes
                         and
                              dpp.recur_mode_id = g_RecurrencyMode_Recurring
                         and
                              nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, dpp.ctf_object_id, gbv_ProfileErrorCode ), g_PrfVldtnCd_ValidationPassed) = g_PrfVldtnCd_ValidationPassed
                         and
                              trunc(dpp.profile_start_date) <= v_current_date
                         and
                              (
                                   -- OSPRODUCT-4754
                                   /*(
                                        dpp.profile_end_date is null
                                        or
                                        v_current_date <= trunc(dpp.profile_end_date)
                                   )*/
								   
								   (
                                        dpp.ctf_mode_id = g_PaymentMode_Card 
                                        and 
                                        v_exp_cc_prop = 1
                                        and
                                        pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, dpp.pay_profile_id, gbv_PPUState) = g_ProfileState_Expired
                                        and
                                        (dpp.profile_end_date is null or dpp.profile_end_date > v_current_date)
                                   )
                                      
                                   or
								   (
                                   pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, dpp.pay_profile_id, gbv_PPUState) = g_ProfileState_Active
                                   -- end OSPRODUCT-4754
                                   and
                                   (
                                          dpp.ctf_mode_id is null
                                          or
                                          dpp.ctf_mode_id != g_PaymentMode_Card
                                          /*or
                                             v_exp_cc_prop = 1                    --OSPRODUCT-12663*/
                                          or
                                          to_number ( pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           dpp.ctf_object_id,
                                                           gbv_CTFCardExpYear
                                                      )
                                                      ) > to_number(to_char(v_current_date, 'yyyy'))
                                          or
                                          (
                                               to_number ( pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                dpp.ctf_object_id,
                                                                gbv_CTFCardExpYear
                                                           )
                                                           ) = to_number(to_char(v_current_date, 'yyyy'))
                                               and
                                               to_number ( pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                dpp.ctf_object_id,
                                                                gbv_CTFCardExpMon
                                                           )
                                                           ) >= to_number(to_char(v_current_date, 'mm'))
                                          )
                                   )
								   )
                              );

                    end if;

                    if in_profile_type = pkg_db_constant.gObjType_DisbProfileUsage then

                         select
                              max(ddp.disb_profile_id)
                         into
                              v_return_value
                         from
                              dragon_disb_profile ddp
                         where
                              ddp.billing_account_id = v_billing_acc_id
                         and
                              (
                                   (
                                        v_policy_term_id is null
                                        and
                                        ddp.policy_id is null
                                        and
                                        ddp.associated_term_payer is null
                                   )
                                   or
                                   (
                                        v_policy_term_id is not null
                                        and
                                        ddp.policy_term_id = v_policy_term_id
                                        and
                                        (
                                             v_policy_term_payer_id is null
                                             or
                                             ddp.associated_term_payer = v_policy_term_payer_id
                                        )
                                   )
                              )
                         and
                              ddp.preferred_prof_id = g_Yes
                         and
                              ddp.recur_mode_id = g_RecurrencyMode_Recurring
                         and
                              nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, ddp.ctf_object_id, gbv_ProfileErrorCode ), g_PrfVldtnCd_ValidationPassed)  = g_PrfVldtnCd_ValidationPassed
                         and
                              trunc(ddp.profile_start_date) <= v_current_date
                         and
                              (
                                   -- OSPRODUCT-4754
                                   /*(
                                   ddp.profile_end_date is null
                                   or
                                   v_current_date <= trunc(ddp.profile_end_date)
                                   )*/
                                   -- end OSPRODUCT-4754
                                   pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, ddp.disb_profile_id, gbv_DPUState) = g_ProfileState_Active
                                   and
                                   (
                                        ddp.ctf_mode_id is null
                                        or
                                        ddp.ctf_mode_id != g_PaymentMode_Card
                                        or
                                        to_number ( pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         ddp.ctf_object_id,
                                                         gbv_CTFCardExpYear
                                                    )
                                                    ) > to_number(to_char(v_current_date, 'yyyy'))
                                        or
                                        (
                                             to_number ( pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              ddp.ctf_object_id,
                                                              gbv_CTFCardExpYear
                                                         )
                                                         ) = to_number(to_char(v_current_date, 'yyyy'))
                                             and
                                             to_number ( pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              ddp.ctf_object_id,
                                                              gbv_CTFCardExpMon
                                                         )
                                                         ) >= to_number(to_char(v_current_date, 'mm'))
                                        )
                                )
                           );

                    end if;

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Preferred Profile: ' || v_return_value
                         );

                    end if;

                    -- OSPRODUCT-6566 Populate the cache
                    begin

                         if pkg_db_object_cache_io.g_preferred_profile_cache.count > 0 then

                              -- First cleanup the existing index
                              v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.first;

                              while v_list_idx is not null
                              loop

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '.. List Index - ' || v_list_idx ||
                                            '.. Value - '      || pkg_db_object_cache_io.g_preferred_profile_cache(v_list_idx)
                                        );

                                   end if;

                                   if instr(v_list_idx, in_object_id || ':' || in_profile_type) <> 0
                                   then

                                        pkg_db_object_cache_io.g_preferred_profile_cache.delete(v_list_idx);

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 ' Deleted index.. ' || v_list_idx
                                             );

                                        end if;

                                        exit;

                                   end if;

                                   v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.next(v_list_idx);

                              end loop;

                         end if;

                         pkg_db_object_cache_io.sp_pref_profile_cache_load
                         (
                              in_session_id,
                              in_transaction_id,
                              v_idx,
                              v_return_value
                         );

                    end;

               end if;

          end if;

     else -- not a direct billed policy

           if v_session_control.gLogging_Full then

                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Not a direct billed policy..'
                );

           end if;

           return null;

     end if;

     return v_return_value;

end fn_preferred_pmnt_disb_profile;

procedure sp_asso_pols_to_new_profile
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_object_cache                       in out         pkg_os_object_cache.t_object_cache,
     in_action_object_id                   in             object.object_id%type,
     io_action_outcome_id                  in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_asso_pols_to_new_profile';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_child_CustomerEntity                object.object_id%type;
     v_billing_account                     object.object_id%type;

     v_object_of_interest                  object.object_id%type;
     v_old_profile_id                      object.object_id%type;
     v_new_profile_id                      object.object_id%type;

     v_old_profileusage_id                 object.object_id%type;
     v_policy_list                         varchar2(100);

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering with Action Object ID (Customer ID) - ' || in_action_object_id
          );

     end if;

     v_child_CustomerEntity := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_action_object_id,
                                    pkg_db_constant.gbv_CustRefPrimaryEntity
                               );

     v_billing_account := pkg_os_object_io.fn_object_bv_get
                          (
                               in_session_id,
                               in_transaction_id,
                               v_child_CustomerEntity,
                               29704646 --pkg_db_constant.gObjType_BillingAccount
                          );
     /*
     v_prof_usg_upd_trx_set_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_billing_account,
                                       gbv_BACurrentBatch
                                  );

     v_lastCTF := pkg_os_object_io.fn_object_bv_get
                  (
                       in_session_id,
                       in_transaction_id,
                       v_prof_usg_upd_trx_set_id,
                       gbv_Ref_BatchAssociatedProfile
                  );*/

     v_object_of_interest := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_session_id,
                                  pkg_os_constant_bv.gbv_SessionObjectOfInterest
                             );

     v_old_profileusage_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_object_of_interest,
                                   31711146
                              );

     v_old_profile_id := pkg_os_object_io.fn_object_bv_get
                          (
                               in_session_id,
                               in_transaction_id,
                               v_old_profileusage_id,
                               gbv_DPUCashTrsfrProfileUsed
                          );


     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Customer Entity: '       || v_child_CustomerEntity ||
               '.. Billing Account ID: '    || v_billing_account ||
               '.. Object of Interest: '    || v_object_of_interest ||
               '.. Old profile ID: '        || v_old_profile_id ||
               '.. New Profile ID: '        || v_new_profile_id
          );

     end if;

     for r_policies in (
                            select
                                 distinct(policy_id)
                            from
                                 dragon_disb_profile
                            where
                                 CTF_object_id = v_old_profile_id
                       )

     loop

          if v_policy_list is null then

               v_policy_list := r_policies.policy_id;

          else

               v_policy_list := v_policy_list|| ','||r_policies.policy_id;

          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Policy ID: ' || r_policies.policy_id
               );

          end if;

     end loop;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Policy List: ' || v_policy_list
          );

     end if;

     ---OSPRODUCT-953----
     /*sp_associate_policy_to_profile
     (
          in_session_id,
          in_transaction_id,
          in_object_cache ,
          in_action_object_id,
          io_action_outcome_id,
          'F',
          v_policy_list,
          v_lastCTF,
          'T'
     );*/

     sp_ba_assoc_policy_prf_setup
     (
          in_session_id,
          in_transaction_id,
          in_action_object_id,
          io_action_outcome_id,
          'F',
          v_policy_list
     );
     ---OSPRODUCT-953----

     io_action_outcome_id := pkg_os_constant.gOutcome_OK; --set OK outcome

end sp_asso_pols_to_new_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_inactivate_profile
--
--  %USAGE
--    Procedure to inactivate the selected profile
--
--  %ALGORITHM
--    Not profivided
--
--  %PARAM  in_session_id                          Session ID
--  %PARAM  in_transaction_id                      Transaction ID
--  %PARAM  in_billing_account_id                  Billing Account ID
--  %PARAM  io_action_outcome_id                   io_action_outcome_id
--  %PARAM  in_ctf_id                              Cash Transfer Profile ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_inactivate_profile
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     io_action_outcome_id                  in out         outcome.outcome_id%type,
     in_ctf_id                             in             object.object_id%type default null
)
as

     v_session_control                     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                      constant system_log.program_name%type   := pkg_name||'sp_inactivate_profile';

     v_profile_list                        pkg_os_token.t_string_table;
     v_profile_id                          object.object_id%type;
     v_today_date                          date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_account_id));
     v_profile_stop_date                   object_bv_value.business_variable_value%type;
     v_datamart_tf                         char(1) := 'T';
     v_index                               number;
     v_policy_id                           object.object_id%type;
     v_term_associated_payer_id            object.object_id%type;
     v_policy_term_id                      object.object_id%type;
     v_pref_profile_id                     object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_pref_profileupd_flag                char(1) := 'F';
     v_err_message                         varchar2(500);
     v_policy_number                       object_bv_value.business_variable_value%type;
     v_transaction_type                    object_bv_value.business_variable_value%type;
     v_profile_updated_tf                  char(1) := 'F';
     v_ba_pmnt_ctf_id                      object.object_id%type;
     v_ba_disb_ctf_id                      object.object_id%type;
     v_pay_profile_id                      object.object_id%type;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' Billing Account: ' || in_billing_account_id
          );

     end if;

     -- Get preferred payment profile of the billing account
     v_ba_pmnt_ctf_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                   gbv_BAPreferredPayProfUsage -- Ref Current List
                              ),
                              gbv_PPUCashTransferProfUSed
                         );

     -- Get preferred disbursement profile of the billing account
     v_ba_disb_ctf_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                   gbv_BAPreferredDisbProfUsage -- Ref Current List
                              ),
                              gbv_DPUCashTrsfrProfileUsed
                         );

     declare

          v_current_list      object.object_id%type;
          v_selected_profile  varchar2(500);

     begin

        /* JIRA ID 2286 */
          if in_ctf_id is null then

               v_current_list := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_session_id,
                                      211681 -- Ref Current List
                                 );

               v_selected_profile := pkg_os_object_io.fn_object_bv_get
                                     (
                                         in_session_id,
                                         in_transaction_id,
                                         v_current_list,
                                         31814434 -- List Selected objects
                                     );

          else

               v_selected_profile := in_ctf_id;

          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Current List: ' || v_current_list ||
                    '.. Selected Profiles: ' || v_selected_profile
               );

          end if;

          if v_selected_profile is null then

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. No profile selected to deactivate.'
                    );

               end if;

               io_action_outcome_id := 35546;  -- no record selected
               return;

          else

               pkg_os_token.sp_tokenize_string ( v_selected_profile, ',' , v_profile_list);

          end if;

     end;

     --v_profile_stop_date := to_char(v_today_date - 1, 'YYYYMMDDHH24MISS');

     -- Discard all the future dated profiles
     if v_profile_list.count > 0 then

          v_index := v_profile_list.first;

          while v_index is not null loop

               v_profile_id := v_profile_list(v_index);

               -- Ideally it should be CTF
               if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_profile_id) = pkg_db_constant.gObjType_PaymentProfileUsage then

                    -- get ctf id
                    v_profile_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_profile_id,
                                         gbv_PPUCashTransferProfUSed
                                    );

               end if;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' Inactivating Profile: ' || v_profile_id
                    );

               end if;

               if v_ba_pmnt_ctf_id = v_profile_id then

                    -- set preferred ba profile to null
                    -- OSPRODUCT-7957
                    -- BV made calculated
                    /*
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         gbv_BAPreferredPayProfUsage, -- Ref Current List
                         null
                    );
                    */
                    -- end OSPRODUCT-7957

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Updating BA preferred payment profile to null. Current Preferred profile: ' || v_ba_pmnt_ctf_id
                         );

                    end if;

               end if;

               if v_ba_disb_ctf_id = v_profile_id then

                    -- set preferred ba profile to null
                    -- OSPRODUCT-7957
                    -- BV made calculated
                    /*
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         gbv_BAPreferredDisbProfUsage, -- Ref Current List
                         null
                    );
                    */
                    -- end OSPRODUCT-7957

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Updating BA preferred disbursement profile to null. Current Preferred profile: ' || v_ba_disb_ctf_id
                         );

                    end if;

               end if;


               /*-- put a stop date on the profile
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_pay_profile_id,
                    gbv_PPUStopDate,
                    v_profile_stop_date
               );*/

               -- Setup default profile for policy point to the current CTF
               -- Get the policy for which the preferred profile is pointing to current ctf
               for v_profile_list_to_stop in
                   (
                        select
                             pp.pay_profile_id,
                             pp.policy_id,
                             pp.policy_term_id,
                             pp.associated_term_payer,
                             pp.transaction_type
                        from
                             dragon_pay_profile pp
                        where
                             pp.billing_account_id = in_billing_account_id
                        and
                             pp.ctf_object_id = v_profile_id
                        and
                             pp.policy_id is not null
                        and
                             pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, pp.pay_profile_id, gbv_PPUState) = g_ProfileState_Active
                   )
               loop

                    v_term_associated_payer_id := v_profile_list_to_stop.associated_term_payer;
                    v_policy_term_id           := v_profile_list_to_stop.policy_term_id;
                    v_pay_profile_id           := v_profile_list_to_stop.pay_profile_id;
                    v_policy_id                := v_profile_list_to_stop.policy_id;
                    v_transaction_type         := v_profile_list_to_stop.transaction_type;

                    -- Get the preferred profile
                    if v_term_associated_payer_id is not null then

                         v_pref_profile_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_term_associated_payer_id,
                                                    gbv_TermPayerPrefPayProf
                                               );

                    else

                         v_pref_profile_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_policy_term_id,
                                                    gbv_TermPayerPrefPayProf
                                               );

                    end if;

                    if v_pref_profile_id = v_pay_profile_id then

                         -- 1. Create new profile (bill me)
                         -- OSPRODUCT-2442

                         pkg_cs_db_functions.sp_create_default_cheque_prf
                         (
                              in_session_id,
                              in_transaction_id,
                              v_pay_profile_id,
                              in_billing_account_id,
                              v_policy_term_id,
                              v_term_associated_payer_id,
                              v_profile_updated_tf,
                              io_action_outcome_id
                         );

                         -- 2. Clear the cache
                         -- OSPRODUCT-8154
                         if nvl(v_profile_updated_tf,'F') = 'F' then

                              declare
                                   v_list_idx varchar2(500);
                              begin

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '..Clearing up the cache..'
                                        );

                                   end if;

                                   v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.first;

                                   while v_list_idx is not null
                                   loop

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 '.. List Index: ' || v_list_idx ||
                                                 '.. Value: '      || pkg_db_object_cache_io.g_preferred_profile_cache(v_list_idx)
                                             );

                                        end if;

                                        if instr(v_list_idx, v_policy_id) <> 0
                                        then

                                             pkg_db_object_cache_io.g_preferred_profile_cache.delete(v_list_idx);

                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_procedure_name,
                                                      ' Deleted index.. ' || v_list_idx
                                                  );

                                             end if;

                                             exit;

                                        end if;

                                        v_list_idx := pkg_db_object_cache_io.g_preferred_profile_cache.next(v_list_idx);

                                   end loop;

                              end;

                         end if;
                         -- end OSPRODUCT-8154

                         begin
                              select
                                   p.policy_number
                              into
                                   v_policy_number
                              from
                                   dragon_policy p
                              where
                                   policy_id = v_policy_id;

                         end;

                         v_pref_profileupd_flag := 'T';

                         if v_err_message is null then

                              v_err_message := 'Preferred profile inactivated for the terms - ' || v_policy_number || '(' || v_transaction_type || ')';

                         else
                              v_err_message := v_err_message || ', ' || v_policy_number || '(' || v_transaction_type || ')';

                         end if;

                    end if;

               end loop;

               -- if preferred profile
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_profile_id,
                    210153,
                    g_ProfileState_Discarded --OSPRODUCT-2655
               );

               -- OSPRODUCT-5549 starts
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_profile_id, v_datamart_tf );

               --Update PPU Datamart
               for rec in (select pay_profile_id from dragon_pay_profile where ctf_object_id = v_profile_id)
               loop
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, rec.pay_profile_id, v_datamart_tf);
               end loop;

               --Update DPU Datamart
               for rec in (select disb_profile_id from dragon_disb_profile where ctf_object_id = v_profile_id)
               loop
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, rec.disb_profile_id, v_datamart_tf);
               end loop;

               -- OSPRODUCT-5549 ends

               v_index := v_profile_list.next(v_index);

          end loop;

     end if;

     if v_pref_profileupd_flag = 'T' then

          if v_profile_updated_tf = 'T' then

               v_err_message := v_err_message || '. As configured, a preferred cheque profile is created for the mentioned terms. ';

          else
               v_err_message := v_err_message || '. Please add a preferred profile at the earliest.';

          end if;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               32835148,
               v_err_message
          );

          io_action_outcome_id := 37046;

     else

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;--37046

     end if;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' Error: ' || sqlerrm (sqlcode)
          );

          raise;

end sp_inactivate_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_partner_setup_new_profiles
--
--  %USAGE
--    This procedure creates Payment Profiles Usage and Disbursement Profile Usage objects
--    during new partner setup
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_billing_account_id             Policy Transaction ID
--  %PARAM  io_action_outcome_id              Action Outcome ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_partner_setup_new_profiles
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_billing_account_id                 in             object.object_id%type,
     io_action_outcome_id                  in             out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_partner_setup_new_profiles';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_new_disb_profile_id                 object.object_id%type;
     v_new_payment_profile_id              object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_broker_id                           object.object_id%type;
     v_partner_payment_mode                object_bv_value.business_variable_value%type;
	 v_partner_Type                        object_bv_value.business_variable_value%type;
     v_ctf_mode                            object_bv_value.business_variable_value%type;
     v_today_date                          date :=   trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_account_id));

     v_datamart_tf                         char(1) := 'T';
     v_profile_list_index                  number;

     v_bv_table                            pkg_os_object_io.t_bv_table;

     v_profile_list                        pkg_os_object.t_object_list;
     v_new_profile_list                    t_db_object_list;

     v_placeholder_ctf_id                  object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type;
     v_pref_pay_prof_id                    object.object_id%type; --OSPRODUCT-8715
     v_preferred                           number;

     v_ctf_empty_profile                   object_bv_value.business_variable_value%type; -- UTPRODUCT-3154
     v_ba_xRef_plchldr_cheque_ctf          object.object_id%type;                        -- UTPRODUCT-3154
     v_batch_entry_method                  object_bv_value.business_variable_value%type; --OSPRODUCT-9906
begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...Entering the process to create disbursement and payment profile(s) for Partner '
          );

     end if;

     v_broker_id := pkg_os_object_search.fn_object_get_parent_of_type
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         pkg_os_constant.gObjType_Partner
                    ); --63 - Broker Type

     v_partner_payment_mode := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_broker_id,
                                    gbv_PartnerPaymentMode --Partner payment mode = billme/cc/ach-eft
                               );
	 -- OSPRODUCT-34452
     v_partner_Type := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_broker_id,
                                    PKG_PC_ADMIN.gbv_partner_type --Partner type
                               );
     if v_partner_Type = 1501 then  	
          io_action_outcome_id := pkg_os_constant.gOutcome_OK;					   
	else 							   
     -- UTPRODUCT-3154
     --
     v_ba_xRef_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_billing_account_id,
                                          gbv_BACTFPlchldrCheque
                                     );

     if v_ba_xRef_plchldr_cheque_ctf is null -- UTPRODUCT-3392
     then
          pkg_cs_db_profiles.sp_partner_CTF_create
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               out_ctf_object_id      => v_ba_xRef_plchldr_cheque_ctf
          );
     end if;

     v_ctf_empty_profile := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_ba_xRef_plchldr_cheque_ctf,
                                 gbv_CTF_EmptyProfile
                            );

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Partner payment mode=' || v_partner_payment_mode ||
               ', BA xRef CTF_cheque=' || v_ba_xRef_plchldr_cheque_ctf ||
               ', EmptyProfile flag (Yes(1)/No(2,NULL))='|| v_ctf_empty_profile
          );
     end if;
     -- /UTPRODUCT-3154

     -- 1. Set up new ctf
     if v_partner_payment_mode = g_PaymentMode_Cheque
     then

          sp_setup_new_ctf
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               v_partner_payment_mode,
               null,
               v_cash_transfer_profile_id
          );

          v_new_profile_list( v_cash_transfer_profile_id ) := v_cash_transfer_profile_id;

     elsif  v_ctf_empty_profile = g_Yes      -- UTPRODUCT-3154
     then
          -- UTPRODUCT-3154
          --
          -- Creating EMPTY CC or ACH/EFT profile
          --
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Setting up EMPTY profile: ' || v_ba_xRef_plchldr_cheque_ctf
               );
          end if;

          sp_setup_new_ctf
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id   => in_billing_account_id,
               in_payment_mode         => v_partner_payment_mode,
               in_placeholder_id       => v_ba_xRef_plchldr_cheque_ctf, -- reuse this CTF for new empty profile
               out_ctf_id              => v_cash_transfer_profile_id,
               in_plchldr_use_tf       => 'T'
          );

          -- Need to reset to NULL the BA xRef Placeholder CTF_cheque.
          -- This will allow to create the correct Cheque CTF palceholder when creating profiles from Billing Account | PROFILES
          --
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gbv_BACTFPlchldrCheque,
               null
          );

          v_new_profile_list( v_cash_transfer_profile_id ) := v_cash_transfer_profile_id; -- to make it preferred profile the index should be = value

          -- / UTPRODUCT-3154

     else
          -- Creating CC or ACH/EFT profile
          --
          v_profile_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_profile_list
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Partner ID: '   || v_broker_id ||
                    '.. Mode: ' || v_partner_payment_mode ||
                    '.. CTF Object Found: ' || v_profile_list.count
               );

          end if;

          v_profile_list_index := v_profile_list.first;

          while v_profile_list_index is not null loop

               v_placeholder_ctf_id := v_profile_list(v_profile_list_index);

               v_ctf_mode := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_placeholder_ctf_id,
                                  gbv_CTFPaymentMode
                             );

               if v_ctf_mode = v_partner_payment_mode then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Setting up '|| case when v_ctf_empty_profile = g_Yes then 'EMPTY' else '' end ||' profile: ' || v_placeholder_ctf_id
                         );

                    end if;

                    sp_setup_new_ctf
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         v_partner_payment_mode,
                         v_placeholder_ctf_id,
                         v_cash_transfer_profile_id
                    );

                    v_new_profile_list( v_placeholder_ctf_id ) := v_cash_transfer_profile_id;

               end if;

               v_profile_list_index := v_profile_list.next( v_profile_list_index );

          end loop;

     end if;

     -- 2. Set up Profile usage update batch
     begin

          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_billing_modify.gObjType_BillingAccountTrxSet,
               in_billing_account_id,
               v_billing_acc_trx_set_id
          );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Profile Usage Update batch created: ' || v_billing_acc_trx_set_id
               );

          end if;

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate,
               to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault)
          );

          v_bv_table.delete;
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
          v_bv_table(32133240).business_variable_value := pkg_db_functions.fn_get_fitransset_acct_prd
                                                                       (
                                                                            in_session_id,
                                                                            in_transaction_id ,
                                                                            v_billing_acc_trx_set_id
                                                                       );

          v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := 39846;
          v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate (in_session_id,in_transaction_id,v_billing_acc_trx_set_id),pkg_os_constant.DragonDateFormatDefault)  ;

           if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-9906
                                   then
                                       v_batch_entry_method := gBatchEntryMethod_System;
                                   else
                                       v_batch_entry_method := gBatchEntryMethod_Manual;
                                   end if;
          -- Entry method
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method;  --OSPRODUCT-9906

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_bv_table
          );
          
          --OSPRODUCT-12721
          --Call to Document Processing
          pkg_db_object.sp_billing_doc_processing
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,    
               io_action_outcome_id
          );
          
          pkg_os_datamart.sp_datamart_update_row  --OSPRODUCT-11553
            (
                 in_session_id,
                 in_transaction_id,
                 v_billing_acc_trx_set_id,
                 v_datamart_tf
            );

     end;

     -- 3. Setup Usage
     -- 4. Associate Profile to BA
     -- 5. Datamart Update
     if v_new_profile_list.count > 0 then

          v_profile_list_index := v_new_profile_list.first;

          while v_profile_list_index is not null loop

               v_cash_transfer_profile_id := v_new_profile_list (v_profile_list_index);

               -- Get the preferred flag
               if v_profile_list_index = v_cash_transfer_profile_id then

                    v_preferred := g_Yes;

               else

                    v_preferred := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_profile_list_index,
                                        gbv_CTFPreferredTF
                                   );

               end if;

               -- Payment Profile Usage
               begin

                    sp_create_ppu
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         null,
                         v_cash_transfer_profile_id,
                         v_new_payment_profile_id
                    );


                    if v_new_payment_profile_id is not null then

                         v_bv_table.delete;

                         -- Set start date
                         v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault);

                         -- Recurring/Adhoc as requested
                         v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                         -- Set up usage of
                         v_bv_table(gbv_UsageOfGenericObject).business_variable_value := in_billing_account_id;

                         -- Created by batch
                         v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                         -- Preferred as required
                         if v_preferred = g_yes then

                              v_bv_table(gbv_PPUPreferredtf).business_variable_value := g_Yes;

                              -- 5. Asociate profile with BA
                              -- Set the BA's preferred profile
                              -- OSPRODUCT-7957
                              -- BV made calculate
                              /*
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                   gbv_BAPreferredPayProfUsage,
                                   v_new_payment_profile_id
                              );
                              */
                              -- end OSPRODUCT-7957

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_new_payment_profile_id,
                              v_bv_table
                         );

                    end if;

               end;

               -- Disbursement Profile Usage
               begin

                    sp_create_dpu_for_non_customer
                    (
                         in_session_id,
                         in_transaction_id,
                         in_billing_account_id,
                         pkg_os_constant.gObjType_Partner,
                         v_cash_transfer_profile_id,
                         null,
                         v_new_disb_profile_id
                    );

                    if v_new_disb_profile_id is not null then

                         v_bv_table.delete;

                         -- Set start date
                         v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_today_date,pkg_os_constant.DragonDateFormatDefault);

                         -- Recurring
                         v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                         -- Set up usage of
                         v_bv_table(gbv_UsageOfGenericObject).business_variable_value := in_billing_account_id;

                         -- Created by batch
                         v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                         -- Preferred as required
                         if v_preferred = g_yes then

                              v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;

                              -- 5. Asociate profile with BA
                              -- Set the BA's preferred profile
                              -- OSPRODUCT-7957
                              -- BV made calculated
                              /*
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_billing_account_id,
                                   gbv_BAPreferredDisbProfUsage,
                                   v_new_disb_profile_id
                              );
                              */
                              -- end OSPRODUCT-7957

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_new_disb_profile_id,
                              v_bv_table
                         );

                    end if;

               end;

               --Datamart update
               begin

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_new_payment_profile_id,
                         v_datamart_tf
                    );

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_new_disb_profile_id,
                         v_datamart_tf
                    );

               end;

               v_profile_list_index := v_new_profile_list.next(v_profile_list_index);

          end loop;

     end if;

     -- 6. OSPRODUCT-8715
     -- Update BA datamart
     begin

          v_pref_pay_prof_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id , in_billing_account_id, gbv_BAPreferredPayProfUsage);

          if v_pref_pay_prof_id is not null
          then

               update dragon_billingaccount
               set
                    pref_payment_profile_id = v_pref_pay_prof_id,
                    session_id = in_session_id,
                    transaction_id = in_transaction_id ,
                    last_updation_date = sysdate

               where
                    billingaccount_id = in_billing_account_id;

          end if;

     end;

     -- 7. Cleanup
     begin

          if v_profile_list.count > 0 then

               v_profile_list_index := v_profile_list.first;

               while v_profile_list_index is not null loop

                    v_ctf_mode := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_profile_list(v_profile_list_index),
                                       gbv_CTFPaymentMode
                                  );

                    if v_ctf_mode is not null then

                         pkg_os_object.sp_object_delete
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              v_profile_list(v_profile_list_index),
                              pkg_db_constant.gObjType_CashTransferProfile
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Deleted Placeholder: ' || v_profile_list(v_profile_list_index)
                              );

                         end if;

                    end if;

                    v_profile_list_index := v_profile_list.next(v_profile_list_index);

               end loop;

          end if;

     end;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

/*exception

     when others then

          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              'Not able to create profile objects '
              || ' Error: '
              ||sqlerrm (sqlcode)
          );

          raise;*/
     end if;
end sp_partner_setup_new_profiles;
--OSPRODUCT-29500
procedure sp_writing_comp_disb_prf_setup
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     io_action_outcome_id               in             out nocopy  outcome.outcome_id%type
)
is
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_writing_comp_disb_prf_setup';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_new_disb_profile_id                 object.object_id%type;
     v_new_payment_profile_id              object.object_id%type;
     v_cash_transfer_profile_id            object.object_id%type;
     v_broker_id                           object.object_id%type;
     v_partner_payment_mode                object_bv_value.business_variable_value%type;
     v_ctf_mode                            object_bv_value.business_variable_value%type;
     v_today_date                          date :=   trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_action_object_id));     
     v_profile_list_index                  number;

     v_usersession_exchange_id             object.object_id%type;
     v_exchange_sponsor_partner_id         object.object_id%type;
     v_billing_account_id                  object.object_id%type;
     v_pref_pay_prof_id                    object.object_id%type; --OSPRODUCT-8715
     v_preferred                           number;

     v_ctf_empty_profile                   object_bv_value.business_variable_value%type; -- UTPRODUCT-3154
     v_ba_xRef_plchldr_cheque_ctf          object.object_id%type;                        -- UTPRODUCT-3154
     
     v_batch_entry_method                  object_bv_value.business_variable_value%type; --OSPRODUCT-9906
     
     v_Carrier_id					   object.object_id%type;
     
     v_ba_disb_prfl_usg_id                 object.object_id%type;
     v_billing_acc_trx_set_id              object.object_id%type;
     v_Disb_cash_transfer_profile_id       object.object_id%type;
     v_disb_prof_usg_updt_id               object.object_id%type;
     v_datamart_tf                         char(1) := 'T';
     v_bv_table                            pkg_os_object_io.t_bv_table;

begin
     v_usersession_exchange_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_session_id,
                                        PKG_OS_CONSTANT_BV.gbv_SessionExchange
                                   );
     
     v_exchange_sponsor_partner_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_usersession_exchange_id,
                                        PKG_PC_ADMIN.gbv_sponsor_partner_id
                                   ); --118
     v_Carrier_id := pkg_os_object.fn_object_parent_get 
                    (
                         in_session_id, 
                         in_transaction_id, 
                         in_action_object_id
                    );	
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' User Session Exchange ID: '||v_usersession_exchange_id||
			   ' Exchange sponsor partner ID: '||v_exchange_sponsor_partner_id||
			   '  Carrier ID: '||v_Carrier_id||
			   '  partner ID: '||in_action_object_id
          );
     end if;

     if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_action_object_id, PKG_OS_CONSTANT_BV.gbv_PartnerType) = 1501  --Writing company
          and v_exchange_sponsor_partner_id is not null and v_exchange_sponsor_partner_id != v_Carrier_id
          then
                                   
          v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id,
                                        gObjType_BillingAccount
                                   );
                                        
          if v_session_control.gLogging_Full then
     
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Setting up disbursement profile for the writing company: '||v_billing_account_id
               );
     
          end if;
          
          -- 1. Set up Profile usage update batch
          begin
     
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    pkg_db_billing_modify.gObjType_BillingAccountTrxSet,
                    v_billing_account_id,
                    v_billing_acc_trx_set_id
               );
     
               if v_session_control.gLogging_Full then
     
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Profile Usage Update batch created: ' || v_billing_acc_trx_set_id
                    );
     
               end if;
     
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate,
                    to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault)
               );
     
               v_bv_table.delete;
               v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;
               v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id), pkg_os_constant.DragonDateFormatDefault );
               v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
               v_bv_table(32133240).business_variable_value := pkg_db_functions.fn_get_fitransset_acct_prd
                                                                            (
                                                                                 in_session_id,
                                                                                 in_transaction_id ,
                                                                                 v_billing_acc_trx_set_id
                                                                            );
     
               v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := 39846;
               v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate (in_session_id,in_transaction_id,v_billing_acc_trx_set_id),pkg_os_constant.DragonDateFormatDefault)  ;
     
                if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-9906
                                        then
                                            v_batch_entry_method := gBatchEntryMethod_System;
                                        else
                                            v_batch_entry_method := gBatchEntryMethod_Manual;
                                        end if;
               -- Entry method
               v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method;  --OSPRODUCT-9906
     
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table
               );
     
               --OSPRODUCT-12721
               --Call to Document Processing
               pkg_db_object.sp_billing_doc_processing
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    io_action_outcome_id
               );
     
               pkg_os_datamart.sp_datamart_update_row  --OSPRODUCT-11553
                 (
                      in_session_id,
                      in_transaction_id,
                      v_billing_acc_trx_set_id,
                      v_datamart_tf
                 );
     
          end;
          
          --2. Create CTF for disbursement profile
          pkg_db_profiles.sp_setup_new_ctf
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               g_PaymentMode_Cheque,
               null,
               v_Disb_cash_transfer_profile_id
          );
     
          -- Create usage object
          sp_create_dpu_for_customer
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               null,
               v_Disb_cash_transfer_profile_id,
               null, -- no placeholder; default setup
               v_ba_disb_prfl_usg_id
          );
     
          v_bv_table.delete;
          
          v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
     
          -- Recurring
          -- Recurring when added through NB/PNBT workflow
          v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;
     
          -- Preferred - yes
          -- Preferred when added through NB/PNBT workflow
          v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;
     
          -- Created by batch
          -- new fix
          -- UTPRODUCT-4882
          v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;
     
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_ba_disb_prfl_usg_id,
               v_bv_table
          );
     
          -- Create Disb usage update
          pkg_os_object.sp_object_create
          (
               in_session_id,
               in_transaction_id,
               pkg_db_constant.gObjType_ProfileUsageUpdate,
               v_billing_acc_trx_set_id,
               v_disb_prof_usg_updt_id
          );
     
          -- Set references for usage update object
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_disb_prof_usg_updt_id,
               gbv_PrfUpdateRefDisbProfile,
               v_ba_disb_prfl_usg_id
          );
     
          if v_session_control.gLogging_Full then
     
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Disbursement Profile: ' || v_ba_disb_prfl_usg_id ||
                    '.. Disbursement Profile Usage Updated:' || v_disb_prof_usg_updt_id
               );
     
          end if;
     
          -- Datamart Update
          begin
     
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_ba_disb_prfl_usg_id, v_datamart_tf);
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_billing_acc_trx_set_id, v_datamart_tf);
     
               if v_session_control.gLogging_Full then
     
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Disbursement Datamart Updated..'
                    );
     
               end if;
     
          end;
     end if;          
end sp_writing_comp_disb_prf_setup;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_ba_preferred_profile_count
--
--  %USAGE
--    Implemented for validation rule configured on partner set up page.
--    Rule ID: 10908746
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_action_object_id               Billing Account ID
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_ba_preferred_profile_count
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type
)    return char
as
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_ba_preferred_profile_count';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_profile_list                        pkg_os_object.t_object_list;
     v_profile_list_index                  number;
     v_pref_object_counter                 number := 0;
     v_partner_id                          object.object_id%type;
     v_partner_payment_mode                object_bv_value.business_variable_value%type;
     v_ctf_mode                            object_bv_value.business_variable_value%type;
     v_ctf_preferred                       object_bv_value.business_variable_value%type;

     v_ctf_empty_profile                   object_bv_value.business_variable_value%type; -- UTPRODUCT-3154
     v_ba_xRef_plchldr_cheque_ctf          object.object_id%type;                        -- UTPRODUCT-3154

     v_err_message                         varchar2(500);
     v_return_value                        char(1);

begin

     v_partner_id := pkg_os_object_search.fn_object_get_parent_of_type
                     (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         pkg_os_constant.gObjType_Partner
                     ); --63 - Broker Type

     v_partner_payment_mode := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_partner_id,
                                    gbv_PartnerPaymentMode --Partner payment mode = billme/cc/ach-eft
                               );

     -- UTPRODUCT-3154
     --
     v_ba_xRef_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_action_object_id,
                                          gbv_BACTFPlchldrCheque
                                     );

     v_ctf_empty_profile := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_ba_xRef_plchldr_cheque_ctf,
                                 gbv_CTF_EmptyProfile
                            );

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Partner payment mode=' || v_partner_payment_mode ||
               ', BA xRef CTF_cheque=' || v_ba_xRef_plchldr_cheque_ctf ||
               ', EmptyProfile flag (Yes(1)/No(2,NULL))='|| v_ctf_empty_profile
          );
     end if;
     -- /UTPRODUCT-3154

     if v_partner_payment_mode = g_PaymentMode_Cheque then

          v_return_value := 'T';

     elsif v_ctf_empty_profile = g_Yes then  -- UTPRODUCT-3154

          v_return_value := 'T';

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... An Empty profile will be created. Skipping Preferred profile count check.'
               );
          end if;

     else

          v_profile_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_profile_list
          );

          if v_profile_list.count > 0 then

               v_profile_list_index := v_profile_list.first;

               while v_profile_list_index is not null loop

                    v_ctf_mode := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_profile_list(v_profile_list_index),
                                       gbv_CTFPaymentMode
                                  );

                    v_ctf_preferred := pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_profile_list(v_profile_list_index),
                                            gbv_CTFPreferredTF
                                        );

                    if v_ctf_mode = v_partner_payment_mode
                       and
                       v_ctf_preferred = g_Yes
                    then

                         v_pref_object_counter := v_pref_object_counter + 1;

                    end if;

                    v_profile_list_index := v_profile_list.next(v_profile_list_index);

               end loop;

               if v_pref_object_counter > 1 then

                    v_err_message := 'Multiple profiles cannot be set to preferred';
                    v_return_value := 'F';

               elsif v_pref_object_counter < 1 then

                    v_err_message := 'Specify the preferred profile from the added profile(s)';
                    v_return_value := 'F';

               else

                    v_return_value := 'T';

               end if;

          else

               v_err_message := 'Add profile(s) for the selected mode';

          end if;

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_session_id,
          pkg_db_functions.gbv_Error_message,
          v_err_message
     );

     return v_return_value;

end fn_ba_preferred_profile_count;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_ba_eft_profile_validation
--
--  %USAGE
--    Implemented for validation rule configured on partner set up page.
--    Rule ID: 10912146
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_action_object_id               Billing Account ID
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_ba_eft_profile_validation
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type
)    return char
as
     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'fn_ba_eft_profile_validation';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_profile_list                        pkg_os_object.t_object_list;
     v_profile_list_index                  number;
     v_pref_object_counter                 number := 0;
     v_partner_id                          object.object_id%type;
     v_partner_payment_mode                object_bv_value.business_variable_value%type;
     v_bank_id                             object_bv_value.business_variable_value%type;
     v_bank_routing_num                    object_bv_value.business_variable_value%type;
     v_bank_AccType                        object_bv_value.business_variable_value%type; --OSPRODUCT-18751
     v_bank_TransitNo                      object_bv_value.business_variable_value%type; --OSPRODUCT-18751
     v_bank_Country                        object_bv_value.business_variable_value%type; --OSPRODUCT-18751

     v_ctf_empty_profile                   object_bv_value.business_variable_value%type; -- UTPRODUCT-3154
     v_ba_xRef_plchldr_cheque_ctf          object.object_id%type;                        -- UTPRODUCT-3154

     v_err_message                         varchar2(500);
     v_return_value                        char(1);

begin

     v_partner_id := pkg_os_object_search.fn_object_get_parent_of_type
                     (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         pkg_os_constant.gObjType_Partner
                     ); --63 - Broker Type

     v_partner_payment_mode := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_partner_id,
                                    gbv_PartnerPaymentMode --Partner payment mode = billme/cc/ach-eft
                               );

     -- UTPRODUCT-3154
     --
     v_ba_xRef_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_action_object_id,
                                          gbv_BACTFPlchldrCheque
                                     );

     v_ctf_empty_profile := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_ba_xRef_plchldr_cheque_ctf,
                                 gbv_CTF_EmptyProfile
                            );

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...Partner payment mode=' || v_partner_payment_mode ||
               ', BA xRef CTF_cheque=' || v_ba_xRef_plchldr_cheque_ctf ||
               ', EmptyProfile flag (Yes(1)/No(2,NULL))='|| v_ctf_empty_profile
          );
     end if;
     -- /UTPRODUCT-3154

     if v_partner_payment_mode in (g_PaymentMode_Cheque, g_PaymentMode_Card)  then

          v_return_value := 'T';

     elsif v_ctf_empty_profile = g_Yes then  -- UTPRODUCT-3154

          v_return_value := 'T';

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... An Empty ACH/EFT profile will be created. Skipping profile validation'
               );
          end if;
     else
          v_profile_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_db_constant.gObjType_CashTransferProfile,
               v_profile_list
          );

          if v_profile_list.count > 0 then

               v_profile_list_index := v_profile_list.first;

               while v_profile_list_index is not null loop

                    v_bank_country := pkg_os_object_io.fn_object_bv_get  ---OSPRODUCT-18751
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_profile_list(v_profile_list_index),
                                      gbv_CTFEFTBankCountry
                                 );
                                 
                    v_bank_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_profile_list(v_profile_list_index),
                                      gbv_CTFEFTBankID
                                 );
                    v_bank_TransitNo := pkg_os_object_io.fn_object_bv_get ---OSPRODUCT-18751
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_profile_list(v_profile_list_index),
                                      gbv_CTFEFTTransitNo
                                 );

                    v_bank_routing_num := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_profile_list(v_profile_list_index),
                                               gbv_CTFEFTBankRoutingNo
                                          );
                                          
                    v_bank_AccType := pkg_os_object_io.fn_object_bv_get ---OSPRODUCT-18751
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_profile_list(v_profile_list_index),
                                               gbv_CTFEFTBankAccType
                                          );
                                          
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...Bank Country : '|| v_bank_country ||
                              '...Bank Id : '|| v_bank_id ||
                              '...Bank TransitNo : '|| v_bank_TransitNo ||
                              '...Bank Routing No : '|| v_bank_routing_num ||
                              '...Bank Account Type : '|| v_bank_AccType 
                         );
                    end if;

                    /* OSPRODUCT-18751 Start */
                    if v_bank_country = 1 then
                    
                         if v_bank_routing_num is null or v_bank_AccType is null 
                         then
                              v_return_value := 'F';
                              v_err_message := 'Please add Bank Routing # and Bank Account type for the EFT profile(s) added.';
                              exit;
                         else
                              v_return_value := 'T';
                         end if;
                         
                    elsif v_bank_country <> 1 then
                    
                         if v_bank_id is null or v_bank_TransitNo is null 
                         then
                              v_return_value := 'F';
                              v_err_message := 'Please add Bank Id and Bank Transit No. for the EFT profile(s) added.';
                              exit;
                    else
                         v_return_value := 'T';
                         end if;                   

                    end if;
                    /* OSPRODUCT-18751 End */

--                    if v_bank_id is null
--                       and
--                       v_bank_routing_num is null
--                    then
--
--                         v_return_value := 'F';
--                         exit;
--
--                    else
--                         v_return_value := 'T';
--
--                    end if;

                    v_profile_list_index := v_profile_list.next(v_profile_list_index);

               end loop;

--               if v_return_value = 'F' then
--
--                    v_err_message := 'Please add Bank ID or Bank Routing # for the EFT profile(s) added.';
--
--               end if;

          end if;

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_session_id,
          pkg_db_functions.gbv_Error_message,
          v_err_message
     );

     return v_return_value;

end fn_ba_eft_profile_validation;


-- OSPRODUCT-2442
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_future_dated_profile_upd
--
--  %USAGE
--    Will be used to update bill plan, consolidated schedule and billing account installmenet
--    on updated of preferred profile on a term (future dated profile)
--    Will be used to update preferred payment and disbursement profile of Billing Account
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_profile_id                     Profile ID
--  %PARAM  in_policy_term_id                 Term ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_future_dated_profile_upd
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_profile_id                      in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type default null
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_future_dated_profile_upd';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_ultimate_customer_id             object.object_id%type;

     v_policy_id                        object.object_id%type;
     v_term_payer_id                    object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_preferred_prof_id                object.object_id%type;
     v_ptp_payer_id                     object.object_id%type;
     v_ptp_id                           object.object_id%type;
     v_pt_trx_id                        object.object_id%type;
     v_profile_type_id                  object_type.object_type_id%type;
     v_action_outcome_id                outcome.outcome_id%type;
     v_associated_bill_plan_id          object.object_id%type;
     v_ctf_id                           object.object_id%type;
     v_bill_plan_ctf_id                 object.object_id%type;

     v_datamart_tf                      char(1) := 'T';
     v_bill_plan_enabled_tf             char(1);
     v_is_dirty                         object.object_id%type;   --OSPRODUCT-2992 Added variable

begin

     -- Get the billing account id
     v_billing_account_id := pkg_os_object.fn_object_parent_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_profile_id
                             );

     -- Get profile object type
     v_profile_type_id := pkg_os_object.fn_object_type_get
                          (
                               in_session_id,
                               in_transaction_id,
                               in_profile_id
                          );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Profile to be updated' || in_profile_id ||
               '.. Billing Account ID: '  || v_billing_account_id ||
               '.. Profile type (2384546-Payment; 2384646-Disbursement): ' || v_profile_type_id
          );

     end if;

     if v_profile_type_id = pkg_db_constant.gObjType_PaymentProfileUsage then

          begin
               select
                    dpp.policy_id,
                    dpp.policy_term_id,
                    dpp.associated_term_payer,
                    dpp.ctf_object_id
               into
                    v_policy_id,
                    v_policy_term_id,
                    v_term_payer_id,
                    v_ctf_id
               from
                    dragon_pay_profile dpp
               where
                    dpp.billing_account_id = v_billing_account_id
                 and
                    dpp.pay_profile_id = in_profile_id;

          exception
               when no_data_found then
                    raise;

          end;

     elsif v_profile_type_id = pkg_db_constant.gObjType_DisbProfileUsage then

          begin
               select
                    ddp.policy_id,
                    ddp.policy_term_id,
                    ddp.associated_term_payer,
                    ddp.ctf_object_id
               into
                    v_policy_id,
                    v_policy_term_id,
                    v_term_payer_id,
                    v_ctf_id
               from
                    dragon_disb_profile ddp
               where
                    ddp.billing_account_id = v_billing_account_id
                 and
                    ddp.disb_profile_id = in_profile_id;

          exception
               when no_data_found then
                    raise;

          end;

     else

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Skipping as object type not supprted..'
               );

          end if;

          return;

     end if;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Policy ID: ' || v_policy_id ||
               '.. Policy Term ID: '  || v_policy_term_id ||
               '.. Billing Account ID: ' || v_billing_account_id ||
               '.. Term Payer ID: '      || v_term_payer_id
          );

     end if;

     -- Associated with policy
     if v_policy_id is not null
        and
        v_profile_type_id = pkg_db_constant.gObjType_PaymentProfileUsage
     then

          -- If MP get the term payer preferred profile else get term's pref profile.
          if v_term_payer_id is not null then

               v_preferred_prof_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_term_payer_id,
                                           gbv_TermPayerPrefPayProf
                                      );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Term Payer Preferred Profile ID: ' || v_preferred_prof_id
                    );

               end if;

          else

               v_preferred_prof_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_policy_term_id,
                                           gbv_TermPreferredPayProfile
                                      );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Term Preferred Profile ID: ' || v_preferred_prof_id
                    );

               end if;

          end if;

          -- OSPRODUCT-2992  Get the dirty flag
          v_is_dirty := pkg_os_object_io.fn_object_bv_get
                        (
                             in_session_id,
                             in_transaction_id,
                             in_profile_id,
                             gbv_PPUProfileDirty
                        );

          if v_preferred_prof_id = in_profile_id
             and
             nvl (v_is_dirty, g_No) = g_Yes
          then

               -- Get the most recent function PTP of the policy
               select nvl(max(pt.policy_trx_id), 0)
                 into v_pt_trx_id
                 from dragon_policy_trx pt
                where pt.policy_id = v_policy_id
                  and pt.policy_term_id = v_policy_term_id
                  and (
                           (
                                pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                                and
                                pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id, pkg_cs_functions.g_ObjStateSet_PrcessedPending) = 'T'
                           )
                           or
                           (
                                pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                                and
                                pkg_os_policy_transaction_type.fn_transaction_type_in_set (policy_trx_type_id, pkg_cs_functions.g_PdTrxSet_All_Non_Floating  ) = 'T' --7846
                           )
                      );

               -- Get PTP
               v_ptp_id := pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                v_pt_trx_id,
                                212318 -- Coverage
                           );

               v_bill_plan_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_ptp_id,
                                               pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF
                                          );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. PTP ID: ' || v_ptp_id ||
                         '.. Bill Plan Enabled?: ' || v_bill_plan_enabled_tf
                    );

               end if;

               if v_term_payer_id is not null then

                    -- Get the PTPPayer
                    v_ptp_payer_id := pkg_os_object_search.fn_object_with_attribute_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ptp_id,
                                           pkg_db_constant.gobjType_PTPPayer,
                                           pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                           pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_term_payer_id,
                                                pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr --32714824 check if it is present-- Payer entity
                                           )
                                      );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. PTP Payer ID: ' || v_ptp_payer_id
                         );

                    end if;

               end if;

               -- Update.
               begin

                    if v_bill_plan_enabled_tf = g_Yes then

                         pkg_db_payment_arrangement.sp_bill_plan_update
                         (
                              in_session_id,
                              in_transaction_id,
                              nvl(v_ptp_payer_id, v_ptp_id),
                              v_action_outcome_id
                         );

                    end if;

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Updated Bill Plan..'
                         );

                    end if;

                    pkg_db_payplan_modify.sp_ba_sched_payment_generate
                    (
                         in_session_id,
                         in_transaction_id,
                         nvl(v_ptp_payer_id, v_ptp_id)
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Updated Consolidated Schedule..'
                         );

                    end if;

                    pkg_db_billing_modify.sp_billaccinstallment_create
                    (
                         in_session_id,
                         in_transaction_id,
                         nvl(v_ptp_payer_id, v_ptp_id),
                         v_action_outcome_id
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Updated Account Installment..'
                         );

                    end if;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_profile_id,
                         gbv_PPUProfileDirty,
                         null
                    );

               end;

          elsif v_preferred_prof_id != in_profile_id
                and
                nvl (v_is_dirty, g_No) = g_Yes
          then

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_profile_id,
                    gbv_PPUProfileDirty,
                    null
               );

          end if;

     elsif v_policy_id is null then

          case

               when v_profile_type_id = pkg_db_constant.gObjType_PaymentProfileUsage then

                    -- Get the BA preferred profile.
                    v_preferred_prof_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_billing_account_id,
                                                gbv_BAPreferredPayProfUsage
                                           );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Preferred profile: ' || v_preferred_prof_id ||
                              '.. Profile ID: '        || in_profile_id
                         );

                    end if;

                    if v_preferred_prof_id != in_profile_id then

                         -- OSPRODUCT-7957
                         -- BV made calculated
                         /*
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_account_id,
                              gbv_BAPreferredPayProfUsage,
                              in_profile_id
                         );
                         */
                         -- end OSPRODUCT-7957

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. BA Preferred pay profile updated..'
                              );

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_profile_id,
                              gbv_PPUProfileDirty,
                              null
                         );

                    else

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_profile_id,
                              gbv_PPUProfileDirty,
                              null
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Dirty flag updated.'
                              );

                         end if;

                    end if;

               when v_profile_type_id = pkg_db_constant.gObjType_DisbProfileUsage then

                    -- Get the BA preferred profile.
                    v_preferred_prof_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_billing_account_id,
                                                gbv_BAPreferredDisbProfUsage
                                           );

                    if v_preferred_prof_id != in_profile_id then

                         -- OSPRODUCT-7957
                         -- BV made calculated
                         /*
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_account_id,
                              gbv_BAPreferredDisbProfUsage,
                              in_profile_id
                         );
                         */
                         -- end OSPRODUCT-7957

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. BA Preferred disb profile updated..'
                              );

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_profile_id,
                              gbv_DPUProfileDirty,
                              null
                         );

                    else

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_profile_id,
                              gbv_DPUProfileDirty,
                              null
                         );

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Updated Dirty Flag..'
                              );

                         end if;

                    end if;

               else
                    null;

          end case;


          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. BA Preferred profile: ' || v_preferred_prof_id
               );

          end if;

     else

          null;

     end if;

    -- Update Datamart
    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_profile_id, v_datamart_tf);
	
end sp_future_dated_profile_upd;

-- OSPRODUCT-4487
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_remove_expired_card_details
--
--  %USAGE
--    Will be used to remove expired card details
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_ctf_id                         ctf ID
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_remove_expired_card_details
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ctf_id                          in             object.object_id%type
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_expired_card_details_upd';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_datamart_tf                      char(1) := 'T';
begin
     -- UTPRODUCT-4548
     -- Batch deprecated
     null;

     /*if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. CTF to be updated' || in_ctf_id
          );

     end if;                          

     --1 Update ExpiryMonth
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_ctfcardexpmon,
          null
     );

     --2 Update ExpiryYear
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_ctfcardexpyear,
          null
     );

     --3 Update CardType
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_ctfcardtype,
          null
     );

     --4 Update Card Holder Name
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_ctfcardholdername,
          null
     );

     --5 Update Card Number
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_CTFCardNumber16digit,
          null
     );

     --6 Update Address

     --6.1 When Parent Object is Customer
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_ctfcardbillingadd,
          null
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          30794546,
          null
     );     

     --6.3 When Parent Object is Partner
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          30794446,
          null
     );

     --7 Update Status

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          210153,
          g_ProfileState_Discarded
     );

\*     --7.1 Update Profile Status
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_cs_profiles.gbv_Pay_Profile_State,
          pkg_db_profiles.g_ProfileState_Inactive
     );

     --7.2 Update Disbursement Profile Status
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_cs_profiles.gbv_disb_profile_state,
          pkg_db_profiles.g_ProfileState_Inactive
     );*\

     --OSPRODUCT-5943 Start
     --8  Update Card's last 4 digit to NULL
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ctf_id,
          pkg_db_profiles.gbv_CTFCardNumber4digit,
          null
     );

     --Update CTF Datamart
     pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_ctf_id, v_datamart_tf);

     --Update PPU Datamart
     for rec in (select pay_profile_id from dragon_pay_profile where ctf_object_id=in_ctf_id)
     loop
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, rec.pay_profile_id, v_datamart_tf);          
     end loop;

     --Update DPU Datamart
     for rec in (select disb_profile_id from dragon_disb_profile where ctf_object_id=in_ctf_id) 
     loop
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, rec.disb_profile_id, v_datamart_tf);
     end loop;

     --OSPRODUCT-5943 End*/

end sp_remove_expired_card_details;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_intermediary_prof
--
--  %USAGE
--    This procedure creates a placeholder object for Intermediary profile.
--
--  %ALGORITHM
--    This procedure checks if there is any existing black CTP object created, if no then it will create a new one.
--
--  %PARAM  in_session_id                  Session ID
--  %PARAM  in_transaction_id              Transaction ID
--  %PARAM  in_action_object_id            Partner/BA ID
--  %PARAM  in_action_object_type_id       Partner/BA
--  %PARAM  iio_action_outcome_id          outcome

-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_intermediary_prof
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type,
     io_action_outcome_id                  in out         outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_create_intermediary_disb_prof';
     v_profile_list                        pkg_os_object.t_object_list;
     v_billing_account_id                  object.object_id%type;
     v_new_inermediary_prf_id              object.object_id%type;
     blank_intermediary_prf                char(1) := 'F';
     v_profile_idx                         number;
     v_if_intermediary_prf                 object_bv_value.business_variable_value%type;
     v_acc_number                          object_bv_value.business_variable_value%type;


begin

     v_billing_account_id := in_action_object_id;

     v_profile_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                         in_transaction_id,
                                                         v_billing_account_id,
                                                         pkg_db_constant.gObjType_CashTransferProfile,
                                                         v_profile_list);

     v_profile_idx := v_profile_list.first;

     while v_profile_idx is not null loop

          v_if_intermediary_prf := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                     in_transaction_id,
                                                                     v_profile_list(v_profile_idx),
                                                                     gbv_CTFIntermediaryPrflTF
                                                                     );

          v_acc_number := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_profile_list(v_profile_idx),
                                                            gbv_CTFEFTBankAccNumber
                                                            );

          if (v_acc_number is null and v_if_intermediary_prf = g_Yes0) then

               blank_intermediary_prf := 'T';

          end if;

          v_profile_idx := v_profile_list.next(v_profile_idx);

     end loop;

     --create a place holder object for intemediary CTF.
     if (blank_intermediary_prf = 'F') then

          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         pkg_db_constant.gObjType_CashTransferProfile,
                                         v_billing_account_id,
                                         v_new_inermediary_prf_id);
     end if;

     pkg_os_object_io.sp_object_bv_set(in_session_id,
                                       in_transaction_id,
                                       v_new_inermediary_prf_id,
                                       gbv_CTFPreferredTF,
                                       g_No);

     pkg_os_object_io.sp_object_bv_set(in_session_id,
                                       in_transaction_id,
                                       v_new_inermediary_prf_id,
                                       gbv_CTFIntermediaryPrflTF,
                                       g_Yes0);

     pkg_os_object_io.sp_object_bv_set(in_session_id,
                                       in_transaction_id,
                                       v_new_inermediary_prf_id,
                                       gbv_CTFPaymentMode,
                                       g_PaymentMode_EFT);

end sp_create_intermediary_prof;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_create_cl_multiple_prfl
--
--  %USAGE
--    This procedure creates multiple Payment Profiles Usage and Disbursement Profile Usage objects
--    for a newly created partner
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_billing_account_id             Billing Account ID
--  %PARAM  io_action_outcome_id            Action outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_cl_multiple_prfl
(
      in_session_id                         in             object.object_id%type,
      in_transaction_id                     in             object.object_id%type,
      in_billing_account_id                 in             object.object_id%type,
      io_action_outcome_id                  in             out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name           constant system_log.program_name%type := pkg_name || 'sp_create_cl_multiple_prfl';
     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                 in_transaction_id);
     v_new_disb_profile_id      object.object_id%type;
     v_new_payment_profile_id   object.object_id%type;
     v_placeholder_ctf_id       object.object_id%type;
     v_broker_id                object.object_id%type;
     v_datamart_tf              char(1) := 'T';
     v_profile_list_index       number;
     v_all_profile_index        number;
     v_all_profile_list         pkg_os_object.t_object_list;
     v_profile_list             pkg_os_object.t_object_list;
     v_ctf_profile_type         object_bv_value.business_variable_value%type;
     v_today_date               date := trunc(pkg_os_time.fn_os_sysdate(in_session_id,
                                                                        in_transaction_id,
                                                                        in_billing_account_id));
     v_bv_table                 pkg_os_object_io.t_bv_table;
     v_preferred                number;
     v_billing_acc_trx_set_id   object.object_id%type;
     v_new_profile_list         t_db_object_list;
     v_ctf_mode                 object_bv_value.business_variable_value%type;
     v_cash_transfer_profile_id object.object_id%type;
     v_intermediary_prfl        object.object_id%type;
     v_disb_prfl_list           pkg_os_object.t_object_list;

     v_ctf_account_name         varchar2(100);
     v_ctf_intrmdry_req         varchar2(100);
     v_ctf_sort_code            varchar2(100);
     v_ctf_iban                 varchar2(100);
     v_ctf_swift_code           varchar2(100);
     v_ctf_additional_info      varchar2(100);
     v_ba_plchldr_cheque_ctf    object.object_id%type;
     v_ba_plchldr_prf_ctf       object.object_id%type;
     v_batch_entry_method                  object_bv_value.business_variable_value%type; --OSPRODUCT-9906

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...Entering the process to create disbursement and payment profile(s) for Claims Partner ');

     end if;

     v_broker_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                      in_transaction_id,
                                                                      in_billing_account_id,
                                                                      pkg_os_constant.gObjType_Partner);

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '..Billing Account Id: ' ||
                                in_billing_account_id || '..Partner ID: ' ||
                                v_broker_id);

     end if;

     v_profile_list.delete;
     v_all_profile_list.delete;

     --clear exiting check profile refrence so that it is not deleted during cleanup.
     pkg_os_object_io.sp_object_bv_set(in_session_id,
                                       in_transaction_id,
                                       in_billing_account_id,
                                       gbv_BAChequeProfile,
                                       null);

     pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                         in_transaction_id,
                                                         in_billing_account_id,
                                                         pkg_db_constant.gObjType_CashTransferProfile,
                                                         v_all_profile_list);

     v_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                  in_transaction_id,
                                                                  in_billing_account_id,
                                                                  gbv_BACTFPlchldrCheque);

     v_ba_plchldr_prf_ctf := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                               in_transaction_id,
                                                               in_billing_account_id,
                                                               gbv_BACTFPlchldrEFT);

     -- Remove intermediary profiles from the list
     if v_all_profile_list.count > 0 then

          v_all_profile_index := v_all_profile_list.first;

          while v_all_profile_index is not null loop

               if (pkg_os_object_io.fn_object_bv_get(in_session_id,
                                           in_transaction_id,
                                           v_all_profile_list(v_all_profile_index),
                                           gbv_CTFIntermediaryPrflTF) is null and
               (v_ba_plchldr_cheque_ctf is null or v_all_profile_list(v_all_profile_index) <> v_ba_plchldr_cheque_ctf )
            and (v_ba_plchldr_prf_ctf is null or v_all_profile_list(v_all_profile_index) <> v_ba_plchldr_prf_ctf))
            then

                    v_profile_list(v_profile_list.count) := v_all_profile_list(v_all_profile_index);

               end if;

               v_all_profile_index := v_all_profile_list.next(v_all_profile_index);

          end loop;
     end if;

     -- 1. Set up new ctf
     if v_profile_list.count > 0 then

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log(in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '..Creating new CTF objects...');

          end if;

          v_profile_list_index := v_profile_list.first;

          while v_profile_list_index is not null loop

               v_placeholder_ctf_id := v_profile_list(v_profile_list_index);

               v_ctf_mode := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                               in_transaction_id,
                                                               v_placeholder_ctf_id,
                                                               gbv_CTFPaymentMode);

               sp_setup_new_ctf(in_session_id,
                                in_transaction_id,
                                in_billing_account_id,
                                v_ctf_mode,
                                v_placeholder_ctf_id,
                                v_cash_transfer_profile_id);

               -- Set wire mode related additional BVs
               if v_ctf_mode = g_PaymentMode_EFT then

                    v_intermediary_prfl := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                             in_transaction_id,
                                                                             v_placeholder_ctf_id,
                                                                             gbv_CTFRefIntermediaryPrfl);

                    v_ctf_account_name := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_placeholder_ctf_id,
                                                                            gbv_CTFEFTAccountName);

                    v_ctf_intrmdry_req := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_placeholder_ctf_id,
                                                                            gbv_CTFIntermediaryPrflReq);

                    v_ctf_sort_code := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_placeholder_ctf_id,
                                                                         gbv_CTFSortCode);

                    v_ctf_iban := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_placeholder_ctf_id,
                                                                    gbv_CTFIBAN);

                    v_ctf_swift_code := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                          in_transaction_id,
                                                                          v_placeholder_ctf_id,
                                                                          gbv_CTFSwiftCode);

                    v_ctf_additional_info := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                               in_transaction_id,
                                                                               v_placeholder_ctf_id,
                                                                               gbv_CTFAdditionalInfo);

                    if v_intermediary_prfl is not null then

                         pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                           in_transaction_id,
                                                           v_cash_transfer_profile_id,
                                                           gbv_CTFRefIntermediaryPrfl,
                                                           v_intermediary_prfl);

                         pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                           in_transaction_id,
                                                           v_cash_transfer_profile_id,
                                                           gbv_CTFIntermediaryPrflReq,
                                                           v_ctf_intrmdry_req);

                    end if;

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                      in_transaction_id,
                                                      v_cash_transfer_profile_id,
                                                      gbv_CTFSortCode,
                                                      v_ctf_sort_code);

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                      in_transaction_id,
                                                      v_cash_transfer_profile_id,
                                                      gbv_CTFIBAN,
                                                      v_ctf_iban);

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                      in_transaction_id,
                                                      v_cash_transfer_profile_id,
                                                      gbv_CTFSwiftCode,
                                                      v_ctf_swift_code);

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                      in_transaction_id,
                                                      v_cash_transfer_profile_id,
                                                      gbv_CTFAdditionalInfo,
                                                      v_ctf_additional_info);

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                      in_transaction_id,
                                                      v_cash_transfer_profile_id,
                                                      gbv_CTFEFTAccountName,
                                                      v_ctf_account_name);

               end if;

               v_new_profile_list(v_placeholder_ctf_id) := v_cash_transfer_profile_id;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log(in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '...... References set properly for the new CTF:' ||
                                          v_cash_transfer_profile_id);

               end if;

               v_profile_list_index := v_profile_list.next(v_profile_list_index);

          end loop;

     end if;

     -- 2. Set up Profile usage update batch
     begin

          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         pkg_db_billing_modify.gObjType_BillingAccountTrxSet,
                                         in_billing_account_id,
                                         v_billing_acc_trx_set_id);

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log(in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     'Profile Usage Update batch created: ' ||
                                     v_billing_acc_trx_set_id);

          end if;

          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_billing_acc_trx_set_id,
                                            pkg_db_billing_modify.gbv_BillAccTrxSet_ProcessDate,
                                            to_char(pkg_os_time.fn_os_sysdate(in_session_id,
                                                                              in_transaction_id,
                                                                              v_billing_acc_trx_set_id),
                                                                              pkg_os_constant.DragonDateFormatDefault));

          v_bv_table.delete;
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetBatchType).business_variable_value := g_bats_typeid_profileussage;
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetExternalBatchId).business_variable_value := 'Batch' ||
                                                                                                   to_char(pkg_os_time.fn_os_sysdate(in_session_id,
                                                                                                                                     in_transaction_id,
                                                                                                                                     v_billing_acc_trx_set_id),
                                                                                                                                     pkg_os_constant.DragonDateFormatDefault);
          v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEnteredby).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                                                                    in_transaction_id,
                                                                                                                                    in_session_id,
                                                                                                                                    '210086.211882');
          v_bv_table(32133240).business_variable_value := pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,
                                                                                                      in_transaction_id,
                                                                                                      v_billing_acc_trx_set_id);

          v_bv_table(pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value := 39846;
          v_bv_table(29707646).business_variable_value := to_char(pkg_os_time.fn_os_sysdate(in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_billing_acc_trx_set_id),
                                                                                            pkg_os_constant.DragonDateFormatDefault);

           if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, PKG_OS_CONSTANT_BV.gbv_SessionCreatedByUI_TF) = g_No  --OSPRODUCT-9906
           then
               v_batch_entry_method := gBatchEntryMethod_System;
           else
               v_batch_entry_method := gBatchEntryMethod_Manual;
           end if;
           -- Entry method
           v_bv_table(pkg_db_billing_modify.gbv_FITrxSetEntryType).business_variable_value := v_batch_entry_method;  --OSPRODUCT-9906

          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_billing_acc_trx_set_id,
                                            v_bv_table);
                                            
          --OSPRODUCT-12721_2
          --Call to Document Processing
          pkg_db_object.sp_billing_doc_processing
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,    
               io_action_outcome_id
          );                                            

     end;

     -- 3. Setup Usage
     if v_new_profile_list.count > 0 then

          v_profile_list_index := v_new_profile_list.first;

          while v_profile_list_index is not null loop

               v_cash_transfer_profile_id := v_new_profile_list(v_profile_list_index);
               v_placeholder_ctf_id       := v_profile_list_index;

               -- Get the preferred flag
               if v_profile_list_index = v_cash_transfer_profile_id then

                    v_preferred := g_Yes;

               else

                    v_preferred := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                     in_transaction_id,
                                                                     v_profile_list_index,
                                                                     gbv_CTFPreferredTF);

               end if;

               v_ctf_profile_type := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_placeholder_ctf_id,
                                                                       gbv_CTFProfileType);

               if (v_ctf_profile_type = g_Profile_Type_Disb or v_ctf_profile_type = g_Profile_Type_Both)
               then

                    -- Disbursement Profile Usage
                    sp_create_dpu_for_non_customer(in_session_id,
                                                   in_transaction_id,
                                                   in_billing_account_id,
                                                   pkg_os_constant.gObjType_Partner,
                                                   v_cash_transfer_profile_id,
                                                   null,
                                                   v_new_disb_profile_id);

                    if v_new_disb_profile_id is not null then

                         v_bv_table.delete;

                         -- Set start date
                         v_bv_table(gbv_DPUStartDate).business_variable_value := to_char(v_today_date,
                                                                                         pkg_os_constant.DragonDateFormatDefault);

                         -- Recurring
                         v_bv_table(gbv_DPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                         -- Set up usage of
                         v_bv_table(gbv_UsageOfGenericObject).business_variable_value := in_billing_account_id;

                         -- Created by batch
                         v_bv_table(gbv_DPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                         -- Preferred as required
                         if v_preferred = g_yes then

                              v_bv_table(gbv_DPUPreferredtf).business_variable_value := g_Yes;

                              -- 5. Asociate profile with BA
                              -- Set the BA's preferred profile
                              -- OSPRODUCT-7957
                              -- BV made calculated
                              /*
                              pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                                in_transaction_id,
                                                                in_billing_account_id,
                                                                gbv_BAPreferredDisbProfUsage,
                                                                v_new_disb_profile_id);

                              */
                              -- end OSPRODUCT-7957

                         end if;

                         pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                           in_transaction_id,
                                                           v_new_disb_profile_id,
                                                           v_bv_table);

                    end if;

               -- Payment Profile Usage
               elsif (v_ctf_profile_type = g_Profile_Type_Pmnt or v_ctf_profile_type = g_Profile_Type_Both)
               then
                    begin

                         sp_create_ppu(in_session_id,
                                       in_transaction_id,
                                       in_billing_account_id,
                                       null,
                                       v_cash_transfer_profile_id,
                                       v_new_payment_profile_id);

                         if v_new_payment_profile_id is not null then

                              v_bv_table.delete;

                              -- Set start date
                              v_bv_table(gbv_PPUStartDate).business_variable_value := to_char(v_today_date,
                                                                                              pkg_os_constant.DragonDateFormatDefault);

                              -- Recurring/Adhoc as requested
                              v_bv_table(gbv_PPURecurrencyMode).business_variable_value := g_RecurrencyMode_Recurring;

                              -- Set up usage of
                              v_bv_table(gbv_UsageOfGenericObject).business_variable_value := in_billing_account_id;

                              -- Created by batch
                              v_bv_table(gbv_PPUCreatedByBatch).business_variable_value := v_billing_acc_trx_set_id;

                              -- Preferred as required
                              if v_preferred = g_yes then

                                   v_bv_table(gbv_PPUPreferredtf).business_variable_value := g_Yes;

                                   -- 5. Asociate profile with BA
                                   -- Set the BA's preferred profile
                                   -- OSPRODUCT-7957
                                   -- BV made calculated
                                   /*
                                   pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                                     in_transaction_id,
                                                                     in_billing_account_id,
                                                                     gbv_BAPreferredPayProfUsage,
                                                                     v_new_payment_profile_id);

                                   */
                                   -- end OSPRODUCT-7957
                              end if;

                              pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                                in_transaction_id,
                                                                v_new_payment_profile_id,
                                                                v_bv_table);

                         end if;

                    end;

               end if;

               --Datamart update
               begin

                    pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                                           in_transaction_id,
                                                           v_new_payment_profile_id,
                                                           v_datamart_tf);

                    pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                                           in_transaction_id,
                                                           v_new_disb_profile_id,
                                                           v_datamart_tf);

               end;

               v_profile_list_index := v_new_profile_list.next(v_profile_list_index);

          end loop;

     end if;

     -- 4. Cleanup
     begin

          if v_profile_list.count > 0 then

               v_profile_list_index := v_profile_list.first;

               while v_profile_list_index is not null loop

                    v_ctf_mode := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_profile_list(v_profile_list_index),
                                                                    gbv_CTFPaymentMode);

                    if v_ctf_mode is not null then

                         pkg_os_object.sp_object_delete(in_session_id,
                                                        in_transaction_id,
                                                        in_billing_account_id,
                                                        v_profile_list(v_profile_list_index), -- delete the plch
                                                        pkg_db_constant.gObjType_CashTransferProfile);

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log(in_session_id,
                                                    in_transaction_id,
                                                    v_procedure_name,
                                                    '..Deleted Placeholder: ' ||
                                                    v_profile_list(v_profile_list_index));

                         end if;

                    end if;

                    v_profile_list_index := v_profile_list.next(v_profile_list_index);

               end loop;

          end if;

     end;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_create_cl_multiple_prfl;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_cl_create_new_prfl
--
--  %USAGE
--    This procedure creates a new profile and Disbursement Profile Usage object
--    for a Billing Account
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_billing_account_id             Billing Account ID
--  %PARAM  io_action_outcome_id              Action outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_cl_create_new_prfl
(
      in_session_id                         in             object.object_id%type,
      in_transaction_id                     in             object.object_id%type,
      in_billing_account_id                 in             object.object_id%type,
      io_action_outcome_id                  in             out nocopy  outcome.outcome_id%type
)
is

      v_procedure_name                      constant system_log.program_name%type := pkg_name ||'sp_cl_create_new_prfl';
      v_session_control                     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);

      v_ba_plchldr_cheque_ctf               object.object_id%type;
      v_ba_plchldr_prf_ctf                  object.object_id%type;
      v_ba_plchldr_disb_prof                object.object_id%type;
      v_dp_object_id                        object.object_id%type;
      v_ctf_object_id                       object.object_id%type;
      v_disb_prof_usg_updt_id               object.object_id%type;
      v_profile_to_stop_id                  object.object_id%type;

      v_preferred_tf                        object_bv_value.business_variable_value%type := g_No;
      v_profile_type                        object_bv_value.business_variable_value%type;
      v_associate_prof_to_policy            object_bv_value.business_variable_value%type;
      v_existing_profile_stop_date          object_bv_value.business_variable_value%type;

      v_bv_table                            pkg_os_object_io.t_bv_table;
      io_object_cache                       pkg_os_object_cache.t_object_cache;

      v_profile_start_date                  object_bv_value.business_variable_value%type :=  to_char(sysdate, pkg_os_constant.DragonDateFormatDefault);
      v_current_date                        date := trunc(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, in_billing_account_id));
      v_datamart_tf                         char(1) := 'T';
      v_message                             object_bv_value.business_variable_value%type;
      v_intermediary_prfl                    object.object_id%type;
      v_ctf_account_name                    varchar2(100);
      v_ctf_intrmdry_req                    varchar2(100);
      v_ctf_sort_code                       varchar2(100);
      v_ctf_iban                            varchar2(100);
      v_ctf_swift_code                      varchar2(100);
      v_ctf_additional_info                 varchar2(100);
      v_bill_add_EFT_Cstmr                  object.object_id%type;
      v_bank_add_Cstmr                      object.object_id%type;
      v_bill_add_EFT_IE                     object.object_id%type;
      v_bank_add_IE                         object.object_id%type;
      v_bank_add_Ptnr                       object.object_id%type;
      v_bill_add_EFT_Ptnr                   object.object_id%type;

begin

      if v_session_control.gLogging_Full
      then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '...Entering the process to create a new disbursement profile (Claims)'
            );

      end if;

       -- Cheque Placeholder
      v_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              in_billing_account_id,
                                              gbv_BACTFPlchldrCheque
                                        );


   --Set required attributes
   pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_cheque_ctf,
                                              gbv_CTFPreferredTF,
                                              g_No);


     pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_cheque_ctf,
                                              gbv_CTFStartDate,
                                              v_profile_start_date);


   v_ba_plchldr_prf_ctf := pkg_os_object_io.fn_object_bv_get
                                              (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_billing_account_id,
                                                    gbv_BACTFPlchldrEFT
                                              );

  if v_ba_plchldr_prf_ctf is not null then

  v_intermediary_prfl := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefIntermediaryPrfl);

  v_ctf_account_name :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFEFTAccountName);

  v_ctf_intrmdry_req :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFIntermediaryPrflReq);

  v_ctf_sort_code :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFSortCode);

      v_ctf_iban :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFIBAN);

      v_ctf_swift_code :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFSwiftCode);

   v_ctf_additional_info :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFAdditionalInfo);

   v_bill_add_EFT_Cstmr :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBillAddCstmr);

   v_bank_add_Cstmr :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBankAddCstmr);

   v_bill_add_EFT_IE :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBillAddIE);

   v_bank_add_IE :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBankAddIE);

   v_bank_add_Ptnr :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBankAddPtnr);

   v_bill_add_EFT_Ptnr :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              v_ba_plchldr_prf_ctf,
                                              gbv_CTFRefEFTBillAddPtnr);

  end if;

    sp_ba_profile_setup
               (
                    in_session_id,
                    in_transaction_id,
                    in_billing_account_id,
                    io_action_outcome_id
               );

    v_ctf_object_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                              in_transaction_id,
                                              in_billing_account_id,
                                              '31904446.32828640'); -- get the latest CTF created




   --BillingAccount - xReference - _Reference_Current Batch(31904446) -  v_billing_acc_trx_set_id . gbv_Ref_BatchAssociatedProfile .



    if v_ctf_object_id is not null and v_ba_plchldr_prf_ctf is not null then

           if v_intermediary_prfl is not null then

               pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                  in_transaction_id,
                                                  v_ctf_object_id,
                                                  gbv_CTFRefIntermediaryPrfl,
                                                  v_intermediary_prfl);


               pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                  in_transaction_id,
                                                  v_ctf_object_id,
                                                  gbv_CTFIntermediaryPrflReq,
                                                  v_ctf_intrmdry_req);

           end if;


           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFSortCode,
                                              v_ctf_sort_code);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFIBAN,
                                              v_ctf_iban);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFSwiftCode,
                                              v_ctf_swift_code);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFAdditionalInfo,
                                              v_ctf_additional_info);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBillAddCstmr,
                                              v_bill_add_EFT_Cstmr);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBankAddCstmr,
                                              v_bank_add_Cstmr);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBillAddIE,
                                              v_bill_add_EFT_IE);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBankAddIE,
                                              v_bank_add_IE);

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBankAddPtnr,
                                              v_bank_add_Ptnr);

           pkg_os_object_io.sp_object_bv_set(in_session_id,    
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              210153,          -- object state
                                              75);             -- GenericAlive
           
           pkg_os_object_io.sp_object_bv_set(in_session_id,    
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFRefEFTBillAddPtnr,
                                              v_bill_add_EFT_Ptnr);
    end if;

    if v_ctf_account_name is not null and v_ctf_object_id is not null then

           pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_ctf_object_id,
                                              gbv_CTFEFTAccountName,
                                              v_ctf_account_name);

    end if;

    if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '.. Profile object: ' || v_ctf_object_id
           );

    end if;

end sp_cl_create_new_prfl;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_cl_clear_CTP_plchldr
--
--  %USAGE
--    This procedure creates a new profile and Disbursement Profile Usage object
--    for an existing partner
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id                     Session ID
--  %PARAM  in_transaction_id                 Transaction ID
--  %PARAM  in_action_object_id               Policy Transaction ID
--  %PARAM  io_action_outcome_id              Action outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_cl_clear_CTP_plchldr
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type,
     io_action_outcome_id                  in             out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                      constant  system_log.program_name%type       :=  pkg_name||'sp_cl_clear_CTP_plchldr';
     v_session_control                     pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_old_CTP_id                          object.object_id%type;
     v_new_CTP_id                          object.object_id%type;


begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...Entering the process to clear the placeholder objects.'
          );

     end if;
     --rr please use the bv delete instead of recreating a blank object.
     --Processing cleaning of check placeholder
     v_old_CTP_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                       in_transaction_id,
                                                       in_action_object_id,
                                                       gbv_BACTFPlchldrCheque
                                                      );

     if v_old_CTP_id is not null then
       pkg_os_object.sp_object_delete(in_session_id,
                                      in_transaction_id,
                                      in_action_object_id,
                                      v_old_CTP_id,
                                      null
                                     );
     end if;

     pkg_os_object.sp_object_create
      (
         in_session_id,
         in_transaction_id,
         pkg_db_constant.gObjType_CashTransferProfile,
         in_action_object_id,
         v_new_CTP_id
      );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         v_new_CTP_id,
         gbv_CTFRecurrencyMode,
         g_RecurrencyMode_Adhoc
       );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         v_new_CTP_id,
         gbv_CTFPaymentMode,
         g_PaymentMode_Cheque
       );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         in_action_object_id,
         gbv_BACTFPlchldrCheque,
         v_new_CTP_id
       );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...New Check placeholder create: ' || v_new_CTP_id
          );

     end if;


     --Processing cleaning of EFT placeholder
     v_old_CTP_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                       in_transaction_id,
                                                       in_action_object_id,
                                                       gbv_BACTFPlchldrEFT
                                                      );
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...Old EFT placeholder: ' || v_old_CTP_id
          );

     end if;
     
     if v_old_CTP_id is not null and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_old_CTP_id, 210153 )!= g_ProfileState_Active then
       pkg_os_object.sp_object_delete(in_session_id,
                                      in_transaction_id,
                                      in_action_object_id,
                                      v_old_CTP_id,
                                      null
                                     );
     end if;

     pkg_os_object.sp_object_create
      (
         in_session_id,
         in_transaction_id,
         pkg_db_constant.gObjType_CashTransferProfile,
         in_action_object_id,
         v_new_CTP_id
      );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         v_new_CTP_id,
         gbv_CTFRecurrencyMode,
         g_RecurrencyMode_Adhoc
       );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         v_new_CTP_id,
         gbv_CTFPaymentMode,
         g_PaymentMode_EFT
       );

     pkg_os_object_io.sp_object_bv_set
       (
         in_session_id,
         in_transaction_id,
         in_action_object_id,
         gbv_BACTFPlchldrEFT,
         v_new_CTP_id
       );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...New EFT placeholder create: ' || v_new_CTP_id
          );

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
             '...Cleaning complete...'
          );

     end if;

end sp_cl_clear_CTP_plchldr;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_insert_bank_info
--
--  %USAGE
--    Not Specified.
--
--  %ALGORITHM
--    Not Specified.
--
--  %PARAM  in_session_id    Session ID
--  %PARAM  in_transaction_id  Transaction ID
--  %PARAM  in_cashtrasferprofile_id  CashTransferProfile ID
--  %PARAM  io_action_outcome_id  Outcome
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_insert_bank_info
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_cashtrasferprofile_id           in             object.object_id%type,            /*CashTransferProfile id*/
     io_action_outcome_id               in out         outcome.outcome_id%type
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_insert_bank_info';

     v_bv_value_bankid                  object_bv_value.business_variable_value%type;
     v_bv_value_bank_transit_number     object_bv_value.business_variable_value%type;
     v_bv_value_EFTBankRoutingNo        object_bv_value.business_variable_value%type; -- OSBILLING-4876
     v_Ref_Account_Type                 object_bv_value.business_variable_value%type; -- DDWIDEV-1367
     v_bv_value_bank_address_line1      object_bv_value.business_variable_value%type;
     v_bv_value_bank_address_line2      object_bv_value.business_variable_value%type;
     v_bv_value_bank_postal_code        object_bv_value.business_variable_value%type;
     v_bv_value_bank_phone_number       object_bv_value.business_variable_value%type;
     v_bv_value_bank_province           object_bv_value.business_variable_value%type;
     v_bv_value_bank_currency           object_bv_value.business_variable_value%type;
     v_maxid                            number;
     v_product_id                       pd_product.pd_product_id%type := 57405; --Automobile --pkg_os_product.fn_object_product_get( in_session_id, in_transaction_id, in_cashtrasferprofile_id );
     v_filing                           pd_filing.pd_filing_id%type   := 14206; -- Automobile--pkg_os_product.fn_policy_filing_get(in_session_id,in_transaction_id,in_cashtrasferprofile_id,v_product_id);

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Insertion process for CashTransferProfile Id: '||in_cashtrasferprofile_id
          );

     end if;

     --
     --   1.   Get the bank details
     --

     v_bv_value_bankid                   :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrfBankId
                                                  );

     v_bv_value_bank_transit_number      :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankTransitNo
                                                  );

     -- OSBILLING-4876
     v_bv_value_EFTBankRoutingNo        :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_Ref_EFTBankRoutingNo
                                                  );

     -- DDWIDEV-1367
     v_Ref_Account_Type                 :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_Ref_Account_Type
                                                  );

     v_bv_value_bank_address_line1       :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankAddLine1
                                                  );

     v_bv_value_bank_address_line2       :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankAddLine2
                                                  );

     v_bv_value_bank_postal_code         :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankPostalCode
                                                  );

     v_bv_value_bank_phone_number        :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankPhoneNo
                                                  );

      v_bv_value_bank_province           :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankProvince
                                                  );

      v_bv_value_bank_currency           :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankCurrency
                                                  );

    if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Insertion process for CashTransferProfile Id: '||in_cashtrasferprofile_id ||
               'Bank ID = '||v_bv_value_bankid||'bank transit number = '||v_bv_value_bank_transit_number||'v_bv_value_bank_address_line1 = '||v_bv_value_bank_address_line1
          );

     end if;

     select
          max(ID)
     into
          v_maxid
     from
          st_bank_info;  --OSBILLING-6054


     INSERT INTO
          st_bank_info  --OSBILLING-6054
          (
               bank_id,
               bank_transit_number,
               routing_number, --OSBILLING-4374
               bank_address_line_1,
               bank_address_line_2,
               bank_postal_code,
               bank_phone_number,
               bank_province,
               bank_currency,
               id,pd_product_id,pd_filing_id
          )
     VALUES
          (
               v_bv_value_bankid,
               v_bv_value_bank_transit_number,
               v_bv_value_EFTBankRoutingNo, --OSBILLING-4374
               v_bv_value_bank_address_line1,
               v_bv_value_bank_address_line2,
               v_bv_value_bank_postal_code,
               v_bv_value_bank_phone_number,
               v_bv_value_bank_province,
               v_bv_value_bank_currency,
               v_maxid+100,
               v_product_id,
               v_filing
          );

     io_action_outcome_id   :=   pkg_os_constant.gOutcome_OK;

exception

     when DUP_VAL_ON_INDEX then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_UserInputInvalid;

     when others then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered while executing the sp_insert_bank_info: ' || in_cashtrasferprofile_id ||
               ' Error: ' ||sqlerrm

          );

end sp_insert_bank_info;
-- Added in OSPRODUCT-8106
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    sp_refresh_bank_info
--
--  %USAGE
--    Not Specified.
--
--  %ALGORITHM
--    Not Specified.
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_refresh_bank_info
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_cashtrasferprofile_id           in             object.object_id%type            /*CashTransferProfile id*/
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_refresh_bank_info';

     v_bv_value_bankid                  object_bv_value.business_variable_value%type;
     v_bv_value_bank_transit_number     object_bv_value.business_variable_value%type;
     v_bv_value_EFTBankRoutingNo        object_bv_value.business_variable_value%type; -- OSBILLING-4876
     v_Ref_Account_Type                 object_bv_value.business_variable_value%type; -- DDWIDEV-1367
     v_bv_value_bank_address_line1      object_bv_value.business_variable_value%type;
     v_bv_value_bank_address_line2      object_bv_value.business_variable_value%type;
     v_bv_value_bank_postal_code        object_bv_value.business_variable_value%type;
     v_bv_value_bank_phone_number       object_bv_value.business_variable_value%type;
     v_bv_value_bank_country            object_bv_value.business_variable_value%type;
     v_bv_value_bank_province           object_bv_value.business_variable_value%type;
     v_bv_value_bank_city               object_bv_value.business_variable_value%type;
     v_bv_value_bank_zip                object_bv_value.business_variable_value%type;
     v_bv_value_bank_currency           object_bv_value.business_variable_value%type;
     v_bv_value_bank_name               object_bv_value.business_variable_value%type;
     v_maxid                            number;
     -- v_object_list                   pkg_os_object.t_object_list;   --OSBILLING-4374
     v_product_id                       pd_product.pd_product_id%type := 57405; --Automobile --pkg_os_product.fn_object_product_get( in_session_id, in_transaction_id, in_cashtrasferprofile_id );
     v_filing                           pd_filing.pd_filing_id%type   := 14206; -- Automobile--pkg_os_product.fn_policy_filing_get(in_session_id,in_transaction_id,in_cashtrasferprofile_id,v_product_id);
     v_temp                             st_bank_info.bank_name%type;  --OSBILLING-6054
     v_action_object_type_id            object.object_id%type;  --OSBILLING-6054
begin
--OSBILLING-6054 start



    v_action_object_type_id := pkg_os_object.fn_object_type_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_cashtrasferprofile_id
                                                   );
     If v_action_object_type_id = 2384446 then   --OSBILLING-6054 end
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Insertion process for CashTransferProfile Id: '||in_cashtrasferprofile_id
          );

     end if;

     --
     --   1.   Get the bank details
     --
     v_bv_value_bankid                   :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrfBankId
                                                  );
                                                  --DBMS_OUTPUT.PUT_LINE('v_bv_value_bankid = ' || v_bv_value_bankid);

     v_bv_value_bank_transit_number      :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankTransitNo
                                                  );

     -- OSBILLING-4876
     v_bv_value_EFTBankRoutingNo        :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_Ref_EFTBankRoutingNo
                                                  );

     -- DDWIDEV-1367
     v_Ref_Account_Type                 :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_Ref_Account_Type
                                                  );
                                                  --DBMS_OUTPUT.PUT_LINE('v_bv_value_bank_transit_number = ' || v_bv_value_bank_transit_number);

      v_bv_value_bank_name      :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankName
                                                  );
      -- OSPRODUCT-5432 start
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'v_bv_value_bank_name: '||v_bv_value_bank_name
          );

     end if;
     if v_bv_value_bank_name is null then

          v_bv_value_bank_name      :=      pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_cashtrasferprofile_id,
                                                            32971663

                                                       );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'v_bv_value_bank_name: '||v_bv_value_bank_name
               );

          end if;

     end if;
      -- OSPRODUCT-5432 end
     v_bv_value_bank_address_line1       :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankAddLine1
                                                  );

     v_bv_value_bank_address_line2       :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankAddLine2
                                                  );

     v_bv_value_bank_postal_code         :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankPostalCode
                                                  );

     v_bv_value_bank_phone_number        :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankPhoneNo
                                                  );
      v_bv_value_bank_country            :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankCountry
                                                  );
      v_bv_value_bank_province           :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankProvince
                                                  );

      v_bv_value_bank_city               :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankCity
                                                  );

      v_bv_value_bank_zip              :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_Ref_EFT_ZIP
                                                  );
      v_bv_value_bank_currency           :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_cashtrasferprofile_id,
                                                       pkg_cs_profiles.gbv_CashTrsPrBankCurrency
                                                  );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Insertion process for CashTransferProfile Id: '||in_cashtrasferprofile_id ||
               'Bank ID = '||v_bv_value_bankid||'bank transit number = '||v_bv_value_bank_transit_number||'v_bv_value_bank_address_line1 = '||v_bv_value_bank_address_line1
               ||'v_bv_value_bank_city := '||v_bv_value_bank_city||'v_bv_value_bank_zip :='||v_bv_value_bank_zip ||
               'Routing Number = '||v_bv_value_EFTBankRoutingNo  --OSBILLING-4374
          );

     end if;
     elsif v_action_object_type_id = 2364876 then   --OSBILLING-6054 start
           if v_session_control.gLogging_Full
           then

                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '|||||| Entering Insertion process for UserSessionSearchCriteria Id: '||in_cashtrasferprofile_id
                );

           end if;
           --
           --   1.   Get the bank details
           --
           v_bv_value_bankid                   :=      pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_cashtrasferprofile_id,
                                                             pkg_cs_profiles.gbv_UsrSsnSrchCrt_Bk_ID
                                                        );
                                                        --DBMS_OUTPUT.PUT_LINE('v_bv_value_bankid = ' || v_bv_value_bankid);

           v_bv_value_bank_transit_number      :=      pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_cashtrasferprofile_id,
                                                             pkg_cs_profiles.gbv_UsrSsnSrchCrt_Bk_Trnst_Num
                                                        );

           -- OSBILLING-4876
           v_bv_value_EFTBankRoutingNo         :=      pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_cashtrasferprofile_id,
                                                             pkg_cs_profiles.gbv_UsrSsnSrchCrt_Bk_Rout_Num
                                                        );

            v_bv_value_bank_name               :=      pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_cashtrasferprofile_id,
                                                             pkg_cs_profiles.gbv_UsrSsnSrchCrt_Bk_Name
                                                        );

            v_bv_value_bank_country            :=      pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_cashtrasferprofile_id,
                                                             pkg_cs_profiles.gbv_UsrSsnSrchCrt_Bk_Country
                                                        );

           if v_session_control.gLogging_Full
           then

                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '|||||| Entering Insertion process for UserSessionSearchCriteria Id: '||in_cashtrasferprofile_id ||
                     'Bank ID = '||v_bv_value_bankid||'bank transit number = '||v_bv_value_bank_transit_number||
                     'Routing Number = '||v_bv_value_EFTBankRoutingNo  --OSBILLING-4374
                );

           end if;
     end if;  --OSBILLING-6054 end


     pkg_os_logging.sp_log
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '|||||| sp_refresh_bank_info# '||in_cashtrasferprofile_id||
          ' v_action_object_type_id#    '||v_action_object_type_id
     );

     --OSBILLING-4374
     SELECT
          max(ID)
     INTO
          v_maxid
     FROM
          st_bank_info;  --OSBILLING-6054

     MERGE INTO
          st_bank_info  --OSBILLING-6054
     USING dual h
     ON
          (
               (
                    bank_id = trim(v_bv_value_bankid)
                    and
                    BANK_TRANSIT_NUMBER = trim(v_bv_value_bank_transit_number)
                    and
                    v_bv_value_bank_country != 1
               )
               OR
               (
               routing_number = trim(v_bv_value_EFTBankRoutingNo)
               and
               v_bv_value_bank_country = 1
               )
          )
     WHEN MATCHED THEN
          UPDATE
          SET
               BANK_CURRENCY = v_bv_value_bank_currency,
               BANK_ADDRESS_LINE_1 = v_bv_value_bank_address_line1,
               BANK_ADDRESS_LINE_2 = v_bv_value_bank_address_line2,
               BANK_POSTAL_CODE = v_bv_value_bank_postal_code,
               BANK_PHONE_NUMBER = v_bv_value_bank_phone_number,
               bank_name = v_bv_value_bank_name,
               bank_province = v_bv_value_bank_province,
               bank_city = v_bv_value_bank_city,
               bank_zip_code = v_bv_value_bank_zip,
               bank_country = v_bv_value_bank_country
          WHEN NOT MATCHED THEN
          INSERT
               (
                    bank_id,
                    bank_transit_number,
                    routing_number,   --OSBILLING-4374
                    bank_address_line_1,
                    bank_address_line_2,
                    bank_postal_code,
                    bank_phone_number,
                    bank_country,
                    bank_province,
                    bank_currency,
                    bank_name,
                    bank_city,
                    bank_zip_code,
                    id,pd_product_id,pd_filing_id
               )
          VALUES
               (
                    decode(v_bv_value_bank_country,1,null,v_bv_value_bankid),
                    decode(v_bv_value_bank_country,1,null,v_bv_value_bank_transit_number),
                    decode(v_bv_value_bank_country,1,v_bv_value_EFTBankRoutingNo,null),    --OSBILLING-4374
                    v_bv_value_bank_address_line1,
                    v_bv_value_bank_address_line2,
                    v_bv_value_bank_postal_code,
                    v_bv_value_bank_phone_number,
                    v_bv_value_bank_country,
                    v_bv_value_bank_province,
                    v_bv_value_bank_currency,
                    v_bv_value_bank_name,
                    v_bv_value_bank_city,
                    v_bv_value_bank_zip,
                    v_maxid+100,
                    v_product_id,
                    v_filing
               );

     Case v_bv_value_bank_country
     when 1 then

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_cashtrasferprofile_id,
               pkg_cs_profiles.gbv_CashTrsPrfBankId,
               null
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_cashtrasferprofile_id,
               pkg_cs_profiles.gbv_CashTrsPrBankTransitNo,
               null
          );
     else

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_cashtrasferprofile_id,
               pkg_cs_profiles.gbv_Ref_EFTBankRoutingNo,
               null
          );
     end case;

exception

     when others then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered while executing the sp_insert_bank_info: ' || in_cashtrasferprofile_id ||
               ' Error: ' ||sqlerrm
          );

          return ;

end sp_refresh_bank_info;
-- Added in OSPRODUCT-8106
-------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_bank_info
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_action_object_id                   in             object.object_id%type
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_bank_info';
     v_action_object_type_id            object_type.object_type_id%type;
     v_multipayer_enable_tf             char(1);
     v_customerprofile_id               object_type.object_type_id%type;
     v_ptppayerdwnpmntmode              object_type.object_type_id%type;
     v_ptppayereftprofiletype           object_type.object_type_id%type;
     v_profilemode_id                   object_type.object_type_id%type;
     v_profiletype_id                   object_type.object_type_id%type;
     v_ptp_payer_list                   pkg_os_object.t_object_list;
     v_payer_index                      number;
     v_billing_account_id               object.object_id%type;
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_payer_valid_tf                   char(1) := null;
     v_policytrx_id                     object_type.object_type_id%type;
     v_policy_id                        object_type.object_type_id%type;
     v_basis_trx_id                     object_type.object_type_id%type;
     v_quotetrx_id                      object_type.object_type_id%type;
begin

     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                 );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '...... v_action_object_type_id : '||v_action_object_type_id
          );

     end if;

     if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then

          v_multipayer_enable_tf := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_action_object_id,
                                         pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
                                    );

          if nvl(v_multipayer_enable_tf, pkg_db_constant.g_No) = pkg_db_constant.g_No
          then

               v_profilemode_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_PTPDownPmntMode
                                           );

               v_profiletype_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_EFTProfileNewOrExisting
                                           );

               if v_profilemode_id=g_PaymentMode_EFT and
                  v_profiletype_id=g_Profile_Type_New
               then
                    v_policytrx_id := pkg_os_object.fn_object_parent_get
                                      (
                                        in_session_id,
                                        in_transaction_id,
                                        in_action_object_id
                                      );
                    v_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_policytrx_id,
                                                                 pkg_os_constant.gObjType_Policy
                                                            );
                    v_basis_trx_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_policytrx_id,
                                           pkg_db_functions.gbv_policytrx_basisreftrx
                                      );

                    if v_basis_trx_id is null then
                         v_quotetrx_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                v_policy_id ,
                                                pkg_db_constant.gbv_Ref_Derived_From
                                           );
                         v_policytrx_id := v_quotetrx_id;
                    end if;
                    v_customerprofile_id := pkg_os_object_io.fn_object_bv_path_get
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                  v_policytrx_id,
                                                  gbv_pteftplaceholder
                                           );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                               in_session_id,
                               in_transaction_id,
                               v_procedure_name,
                               '...... v_multipayer_enable_tf : '||v_multipayer_enable_tf||
                               '...... v_customerprofile_id : '||v_customerprofile_id||
                               '...... v_policytrx_id : '||v_policytrx_id||
                               '...... v_policy_id : '||v_policy_id||
                               '...... v_basis_trx_id : '||v_basis_trx_id||
                               '...... v_quotetrx_id  : '||v_quotetrx_id
                         );

                    end if;

                    if v_customerprofile_id is not null then

                         pkg_db_profiles.sp_refresh_bank_info
                         (
                              in_session_id => in_session_id,
                              in_transaction_id =>in_transaction_id,
                              in_cashtrasferprofile_id => v_customerprofile_id
                         );

                    end if;

               end if;

          else

               v_ptp_payer_list.delete;

               pkg_os_object_search.sp_object_children_of_type_get
               (
                 in_session_id              =>    in_session_id,
                 in_transaction_id          =>    in_transaction_id,
                 in_object_id               =>    in_action_object_id,
                 in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
                 in_object_list             =>    v_ptp_payer_list
               );

               v_payer_index := v_ptp_payer_list.first;

               -- For each payer
               while v_payer_index is not null loop

                    select
                         payer.billing_account_id
                    into
                         v_billing_account_id
                    from
                         dragon_ptp_payer payer
                    where
                         payer.ptp_payer_id = v_ptp_payer_list(v_payer_index);


                    if v_billing_account_id is null then

                         v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_ptp_payer_list(v_payer_index),
                                                            pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                       ),
                                                       pkg_db_constant.gObjType_BillingAccount
                                                 );

                    end if;

                     v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_billing_account_id,
                                                               pkg_db_billing_modify.gbv_BillingAccountType
                                                         );

                     if v_session_control.gLogging_Full
                     then

                           pkg_os_logging.sp_log
                           (
                                 in_session_id,
                                 in_transaction_id,
                                 v_procedure_name,
                                 '... Payer Billing Account ID: ' ||v_billing_account_id||
                                 '... Account Type: '             ||v_billing_account_type_id
                           );

                     end if;

                     if v_billing_account_id is not null
                         and
                         v_billing_account_type_id = pkg_db_constant.gBillingAcType_Customer
                     then

                      v_payer_valid_tf := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_ptp_payer_list(v_payer_index),
                                                    pkg_db_payplan_modify.gbv_is_valid_payer_tf
                                               );

                           if v_payer_valid_tf = g_Yes then


                              v_PTPPayerDwnPmntMode := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_ptp_payer_list(v_payer_index),
                                                           pkg_db_profiles.gbv_PTPPayerDwnPmntMode
                                                      );

                              v_PTPPayerEFTProfileType := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_ptp_payer_list(v_payer_index),
                                                           pkg_db_profiles.gbv_PTPPayerEFTProfileType
                                                      );

                              v_customerprofile_id := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_ptp_payer_list(v_payer_index),
                                                           pkg_db_multipayer.gbv_refptppayereftplaceholder
                                                      );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                         in_session_id,
                                         in_transaction_id,
                                         v_procedure_name,
                                         '...... PTP-Payer Object : '||v_ptp_payer_list(v_payer_index)||
                                         '.....v_PTPPayerEFTProfileType : '||v_PTPPayerEFTProfileType||
                                         '.....v_PTPPayerDwnPmntMode : '||v_PTPPayerDwnPmntMode||
                                         '.....v_customerprofile_id : '||v_customerprofile_id
                                   );

                              end if;

                              if  (
                                   v_PTPPayerDwnPmntMode=pkg_cs_profiles.g_Pymnt_Mode_EFT and
                                   v_PTPPayerEFTProfileType=pkg_cs_profiles.g_EFT_Mode_New and
                                   v_customerprofile_id is not null
                                   )
                              then

                                   pkg_db_profiles.sp_refresh_bank_info
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_customerprofile_id
                                    );

                              end if;

                           end if;

                    end if;

                    v_payer_index := v_ptp_payer_list.next(v_payer_index);

               end loop;

          end if;

     elsif v_action_object_type_id = pkg_db_constant.gobjtype_cashtransferprofile then

          v_profilemode_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_customerprofile_id,
                                       gbv_CTFPaymentMode
                                  );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '...... v_profilemode_id : '||v_profilemode_id||
                     '...... v_customerprofile_id : '||v_customerprofile_id
               );

          end if;

          if v_profilemode_id=g_PaymentMode_EFT then

               pkg_db_profiles.sp_refresh_bank_info
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id
               );

          end if;

     elsif v_action_object_type_id = pkg_db_constant.gobjtype_billingaccounttrxset then

          v_customerprofile_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       gbv_Ref_BatchPlfPlchldrInput
                                  );

          v_profilemode_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_customerprofile_id,
                                       gbv_CTFPaymentMode
                                  );

          v_profiletype_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_customerprofile_id,
                                       gbv_CTFEFTNewOrExisting
                                  );

          v_customerprofile_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       gbv_Ref_BatchEFTPlaceholder
                                  );

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     '...... Action Object Type : '||v_action_object_type_id||
                     '...... v_profilemode_id : '||v_profilemode_id||
                     '...... v_profiletype_id : '||v_profiletype_id||
                     '...... v_customerprofile_id is : '||v_customerprofile_id
               );

          end if;

          if v_profilemode_id=g_PaymentMode_EFT and
             v_profiletype_id=g_Profile_Type_New and
             v_customerprofile_id is not null
          then
               pkg_db_profiles.sp_refresh_bank_info
                         (
                              in_session_id,
                              in_transaction_id,
                              v_customerprofile_id
                          );
          end if;

     end if;

exception
     when others then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered while executing the sp_bank_info: in_action_object_id:' || in_action_object_id ||
               ' Error: ' ||sqlerrm
          );
          return;

end sp_bank_info;

procedure sp_inactivate_adhoc_profile
(
     in_session_id                    in             object.object_id%type,
     in_transaction_id                in             object.object_id%type,
     in_action_object_id              in             object.object_id%type, -- PTP ID
     io_action_outcome_id             in out         outcome.outcome_id%type
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   := pkg_name||'sp_inactivate_adhoc_profile';
     v_multipayer_enabled_tf            char(1);
     v_down_payment_profile             object.object_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_account_id               object.object_id%type;

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '......Inactivating down payment profile..' ||
                '.. PTP ID: ' || in_action_object_id
          );

     end if;

     v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                (
                                    in_session_id,
                                    in_transaction_id,
                                    in_action_object_id, -- PTP ID
                                    pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
                                );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '......Multipayer enabled? ' || v_multipayer_enabled_tf
          );

     end if;

     if nvl(v_multipayer_enabled_tf, g_No) = g_No then -- single payer

          -- Get the down payment profile
          v_down_payment_profile := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         pkg_os_object.fn_object_parent_get
                                         (
                                              in_session_id, -- PTP ID
                                              in_transaction_id,
                                              in_action_object_id
                                         ),
                                         pkg_db_profiles.gbv_PTDwnPmntAdhocProfile
                                    );

          if v_down_payment_profile is not null then

               v_down_payment_profile := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_down_payment_profile,
                                             pkg_db_profiles.gbv_PPUCashTransferProfUSed
                                        );

               -- get the billing account
               -- Get the customer's billing account id
               v_ultimate_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id
                                         );

               -- Get the Primary Customer Entity
               v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_ultimate_customer_id,
                                           pkg_db_constant.gbv_CustRefPrimaryEntity
                                      );

               -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
               v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_entity_id,
                                            pkg_db_constant.gObjType_BillingAccount
                                       );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '......Billing Account: ' || v_billing_account_id ||
                          '......Down Payment Profile: ' || v_down_payment_profile
                    );

               end if;

               pkg_db_profiles.sp_inactivate_profile
               (
                   in_session_id,
                   in_transaction_id ,
                   v_billing_account_id,
                   io_action_outcome_id,
                   v_down_payment_profile
               );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '......Profile Inactivated..'
                    );

               end if;

          end if;

     else

          for v_payer_rec in (select ptp_payer_id, billing_account_id from dragon_ptp_payer where ptp_id = in_action_object_id) loop

               -- Get the down payment profile
               v_down_payment_profile := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_payer_rec.ptp_payer_id,
                                             pkg_db_profiles.gbv_Ref_PayerDwnPmntProfile
                                        );

               v_down_payment_profile := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_down_payment_profile,
                                             pkg_db_profiles.gbv_PPUCashTransferProfUSed
                                        );

               v_billing_account_id := v_payer_rec.billing_account_id;

               if v_down_payment_profile is not null then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                               in_session_id,
                               in_transaction_id,
                               v_procedure_name,
                               '......Payer ID: ' || v_payer_rec.ptp_payer_id ||
                               '......Billing Account: ' || v_billing_account_id ||
                               '......Down Payment Profile: ' || v_down_payment_profile
                         );

                    end if;

                    pkg_db_profiles.sp_inactivate_profile
                    (
                        in_session_id,
                        in_transaction_id ,
                        v_billing_Account_id,
                        io_action_outcome_id,
                        v_down_payment_profile
                    );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                               in_session_id,
                               in_transaction_id,
                               v_procedure_name,
                               '......Profile Inactivated..'
                         );

                    end if;

               end if;

          end loop;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_inactivate_adhoc_profile;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_trunc_number
--
--  %USAGE
--    Local function.
--    Truncates Credit Card number or Bank Account Number to the specified number of digits.
--    Optionally, restores the length of the original number by adding '*' on the left side.
--
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_trunc_number
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_number                             in             object_bv_value.business_variable_value%type,
     in_digits                             in             number,
     in_keep_length_tf                     in             char
)
return object_bv_value.business_variable_value%type
as
     --v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     --v_procedure_name                   constant system_log.program_name%type   := pkg_name||'fn_trunc_number';
     v_orig_length                      number := length(in_number);
     v_return                           object_bv_value.business_variable_value%type;
begin

     v_return := substr(in_number, greatest(-length(in_number),-in_digits), in_digits);

     if in_keep_length_tf = 'T'
     then
          v_return := lpad(v_return,length(in_number),'*');
     end if;


     -- !!!! We should not write the CC number or Bank Account number to the system log. This code is for debugging only !!!!
     --
     --if v_session_control.gLogging_Full
     --then
     --     pkg_os_logging.sp_log
     --     (
     --           in_session_id,
     --           in_transaction_id,
     --           v_procedure_name,
     --           '......truncating number ' || in_number || ' to ' || in_digits || ' digits. Keep length =' ||in_keep_length_tf || '. Returning ' ||v_return || '.'
     --     );
     --end if;

     return v_return;

end fn_trunc_number;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_trunc_CC_number
--
--  %USAGE
--    Used in Rules to truncate Credit Card number to the specified number of digits.
--    By default, restores the length of the original number by adding '*' on the left side.
--
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_trunc_CC_number
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_cc_number                          in             object_bv_value.business_variable_value%type,
     in_digits                             in             number default 4,
     in_keep_length_tf                     in             char   default 'T'
)
return object_bv_value.business_variable_value%type
as
     v_return                           object_bv_value.business_variable_value%type;
begin
     if nvl(
              pkg_os_object_io.fn_object_bv_path_get
              (
                   in_session_id,
                   in_transaction_id,
                   in_session_id,
                   gbv_path_Payment_Integration
              ),
              pkg_db_constant.g_No
            ) = pkg_db_constant.g_Yes
     then
          v_return := fn_trunc_number
                      (
                           in_session_id,
                           in_transaction_id,
                           in_cc_number,
                           in_digits,
                           in_keep_length_tf
                      );

     else
          v_return := in_cc_number;  -- do not change
     end if;

     return v_return;

end fn_trunc_CC_number;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--    fn_trunc_bankaccnt_number
--
--  %USAGE
--    Used in Rules to truncate Bank Account number to the specified number of digits.
--    By default, restores the length of the original number by adding '*' on the left side.
--
-------------------------------------------------------------------------------------------------------------------------------------------------
function fn_trunc_bankaccnt_number
(
     in_session_id                         in             object.object_id%type,
     in_transaction_id                     in             object.object_id%type,
     in_bankaccnt_number                   in             object_bv_value.business_variable_value%type,
     in_digits                             in             number default 4,
     in_keep_length_tf                     in             char   default 'T'
)
return object_bv_value.business_variable_value%type
as
     v_return                           object_bv_value.business_variable_value%type;
begin
     if nvl(
              pkg_os_object_io.fn_object_bv_path_get
              (
                   in_session_id,
                   in_transaction_id,
                   in_session_id,
                   gbv_path_Payment_Integration
              ),
              pkg_db_constant.g_No
            ) = pkg_db_constant.g_Yes
     then
          v_return := fn_trunc_number
                      (
                           in_session_id,
                           in_transaction_id,
                           in_bankaccnt_number,
                           in_digits,
                           in_keep_length_tf
                      );

     else
          v_return := in_bankaccnt_number;  -- do not change
     end if;

     return v_return;

end fn_trunc_bankaccnt_number;

procedure sp_cascade_prf_to_bor_acct
(
     in_session_id                          object.object_id%type,
     in_transaction_id                      object.object_id%type,
     in_old_billing_account                 object.object_id%type,
     in_new_billing_account                 object.object_id%type
)
is
     
     v_procedure_name                       constant  system_log.program_name%type       :=  pkg_name||'sp_cascade_prf_to_bor_acct';
     v_session_control                      pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_old_ba_plchldr_cheque_ctf            object.object_id%type;
     v_new_ba_plchldr_cheque_ctf            object.object_id%type;
     v_old_ba_plchldr_disb_prof             object.object_id%type;
     v_new_ba_plchldr_disb_prof             object.object_id%type;
     v_mode                                 number                                  := 0;
     v_profile_new_or_existing              number                                  := 0;
     v_profile_type                         number                                  := 0;
     v_old_profile_placeholder              object.object_id%type;
     v_new_profile_placeholder              object.object_id%type;

     v_excluded_types                       pkg_os_object_copy.t_object_type_list := pkg_os_object_copy.gnull_object_type_list;
     v_included_types                       pkg_os_object_copy.t_object_type_list := pkg_os_object_copy.gnull_object_type_list;
     
     v_object_list                          pkg_os_object_copy.t_object_list;
     
     
begin
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.New BA: ' || in_new_billing_account ||
               '.Old BA: ' || in_old_billing_account                       

          );

     end if;
     
     -- 1. Set up the cheque placeholder
     begin
          
          v_old_ba_plchldr_cheque_ctf := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_old_billing_account,
                                              gbv_BACTFPlchldrCheque
                                         );

          pkg_os_object_copy.sp_object_clone
          (
               in_session_id,
               in_transaction_id,
               v_old_ba_plchldr_cheque_ctf,
               v_excluded_types,
               v_included_types,
               v_new_ba_plchldr_cheque_ctf
          );
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Old Cheque Profile: ' || v_old_ba_plchldr_cheque_ctf ||
                    '..New Cheque Profile: ' || v_new_ba_plchldr_cheque_ctf                 

               );

          end if;

          pkg_os_object.sp_object_parent_set
          (
               in_session_id,
               in_transaction_id,
               v_new_ba_plchldr_cheque_ctf,
               in_new_billing_account
          );
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_new_billing_account,
               gbv_BACTFPlchldrCheque,
               v_new_ba_plchldr_cheque_ctf
          );
     
     end;
     
     -- 2. Set up the disb placeholder     
     begin
          -- get the Disbursement Profile placeholder                        
          v_old_ba_plchldr_disb_prof := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_old_billing_account,
                                              gbv_BAPlchldrDisbProfUsage
                                         );

          pkg_os_object_copy.sp_object_clone
          (
               in_session_id,
               in_transaction_id,
               v_old_ba_plchldr_disb_prof,
               v_excluded_types,
               v_included_types,
               v_new_ba_plchldr_disb_prof
          );

          pkg_os_object.sp_object_parent_set
          (
               in_session_id,
               in_transaction_id,
               v_new_ba_plchldr_disb_prof,
               in_new_billing_account
          );
          
          -- Set the Disbursement placeholder on new BA
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_new_billing_account,
               gbv_BAPlchldrDisbProfUsage,
               v_new_ba_plchldr_disb_prof
          );
     
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Old Disb Profile: ' || v_old_ba_plchldr_disb_prof ||
                    '..New Disb Profile: ' || v_new_ba_plchldr_cheque_ctf      
               );

          end if;
          
     end;
     
     -- 3. Set up the profile placeholder if the mode is card or eft   
     begin

          -- get the ref BV value for Cash/Cheque placeholders Mode (credit card / eft / bill me)
          v_mode := pkg_os_object_io.fn_object_bv_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_new_ba_plchldr_cheque_ctf,
                         gbv_CTFPaymentMode
                    );
                    
          if v_mode in (g_PaymentMode_Card, g_PaymentMode_EFT) then
                    
               -- Get the profile type
               v_profile_type := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_new_ba_plchldr_cheque_ctf,
                                        gbv_CTFProfileType
                                   );
          
               -- Get the profile
               if v_profile_type = g_Profile_Type_Pmnt
                  or
                  v_profile_type = g_Profile_Type_Both
               then
                              
                    -- get from payment profile usage
                    v_old_profile_placeholder := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_old_billing_account,
                                                           gbv_BAPreferredPayProfUsage --3074446
                                                      ),
                                                      gbv_PPUCashTransferProfUSed
                                                 );
                                                        
               else
                              
                    -- Get from DPU
                    v_old_profile_placeholder := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_old_billing_account,
                                                           gbv_BAPreferredDisbProfUsage --3074446
                                                      ),
                                                      gbv_DPUCashTrsfrProfileUsed
                                                 );
                              
                                                        
               end if;
          
               pkg_os_object_copy.sp_object_clone
               (
                    in_session_id,
                    in_transaction_id,
                    v_old_profile_placeholder,
                    v_excluded_types,
                    v_included_types,
                    v_new_profile_placeholder
               );

               pkg_os_object.sp_object_parent_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_profile_placeholder,
                    in_new_billing_account
               );
                              
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Mode: ' || v_mode ||
                         '..profile Type: ' || v_profile_type ||
                         '.. Old Profile Placeholder: ' || v_old_profile_placeholder ||
                         '.. New Profile Placeholder: ' || v_new_profile_placeholder                    

                    );

               end if;
               
               if v_mode = g_PaymentMode_Card then

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_new_billing_account ,
                         gbv_BACTFPlchldrCard,
                         v_new_profile_placeholder
                    );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_new_ba_plchldr_cheque_ctf,
                         gbv_CTFCardNewOrExisting,
                         g_Profile_Type_New
                    );
                    
               elsif v_mode = g_PaymentMode_EFT then         
                    
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_new_billing_account ,
                         gbv_BACTFPlchldrEFT,
                         v_new_profile_placeholder
                    );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_new_ba_plchldr_cheque_ctf,
                         gbv_CTFEFTNewOrExisting,
                         g_Profile_Type_New
                    );
               
               end if;
               
          end if;
          
     end;
               
end sp_cascade_prf_to_bor_acct;
-------------------------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-13624
procedure sp_cleanup_profile_placeholder   
(
     in_session_id                          object.object_id%type,
     in_transaction_id                      object.object_id%type,
     in_action_object_id                    object.object_id%type,
     io_action_outcome_id      in out       outcome.outcome_id%type,
     in_down_payment_prf_tf    in           char default 'F'
) 
is

     v_procedure_name                       constant  system_log.program_name%type       :=  pkg_name||'sp_cleanup_profile_placeholder';
     v_session_control                      pkg_os_session.r_dragon_session_control      :=  pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_card_placeholder_id                 object.object_id%type;   
     v_eft_placeholder_id                  object.object_id%type;   
     v_cheque_placeholder_id               object.object_id%type;   
     v_action_object_type_id               object_type.object_type_id%type;   
     v_disb_usage_placeholder_id           object.object_id%type;
     io_clean_placeholders                 boolean default false;
     v_ptp_trx_id                          object.object_id%type;

begin 
    
    v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
    if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Deleting placeholder created for ' || in_action_object_id ||
               ' of type ' || v_action_object_type_id
          );

    end if;                            
                            
    case

          when v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 gbv_Ref_PayerDwnPmCardPlchldr                                                 
                                            );

                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 gbv_Ref_PayerDwnPmEFTPlchldr
                                            );

                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     gbv_Ref_PayerDwnPlchldrPrfInpt
                                                );

               else
                    
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 pkg_db_constant.gbv_RefPTPPayerCardPlaceholder
                                            );
                    
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 pkg_db_constant.gbv_RefPTPPayerEFTPlaceholder
                                            );

                   
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     gbv_Ref_PTPPayerPlchldrPrfInpt
                                                );

               end if;

          when v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then
          
               v_ptp_trx_id := pkg_os_object.fn_object_parent_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_action_object_id
                               );

               if in_down_payment_prf_tf = 'T' then

                    -- Down Payment Profile
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 gbv_PTDwnPmntCardPlaceholder
                                            );
                    
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 gbv_PTDwnPmntEFTPlaceholder
                                            );
                    
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_ptp_trx_id,
                                                     gbv_PTDwnPmntPrfDetailPlchldr
                                                );

               else
                    
                    v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 pkg_db_constant.gbv_Ref_PT_PlaceholderCC
                                            );
                    
                    v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_ptp_trx_id,
                                                 pkg_db_constant.gbv_Ref_PT_PlaceholderEFT
                                            );
                    
                    v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_ptp_trx_id,
                                                     gbv_PTProfileDetailPlchldr
                                                );

               end if;
          
          when v_action_object_type_id = pkg_db_constant.gObjType_BillingAccountTrxSet then
               
               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            gbv_Ref_BatchCardPlaceholder
                                       );
               
               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            gbv_Ref_BatchEFTPlaceholder
                                       );
               
               v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_Ref_BatchPlfPlchldrInput
                                           );
              
               v_disb_usage_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_action_object_id,
                                                    gbv_Ref_BatchPlfPlchldrDisb
                                               );                         

          else             
               
               v_cheque_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_BACTFPlchldrCheque
                                           );
               
               v_card_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            gbv_BACTFPlchldrCard
                                       );
               
               v_eft_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            gbv_BACTFPlchldrEFT
                                       );
               
               v_disb_usage_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_action_object_id,
                                                    gbv_BAPlchldrDisbProfUsage
                                               );

     end case;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Deleting cheque placeholder ' || v_cheque_placeholder_id ||
               ' card placeholder ' || v_card_placeholder_id ||
               ' EFT placeholder ' || v_eft_placeholder_id ||
               ' Disb usage  placeholder ' || v_disb_usage_placeholder_id
          );

     end if;
     
     if v_cheque_placeholder_id is not null then
     
           pkg_os_object.sp_object_delete
            (
                 in_session_id,
                 in_transaction_id,
                 null,
                 v_cheque_placeholder_id,
                 null
            );
     end if;       
     
     if v_card_placeholder_id is not null then
     
           pkg_os_object.sp_object_delete
            (
                 in_session_id,
                 in_transaction_id,
                 null,
                 v_card_placeholder_id,
                 null
            );
     end if;  
     
     if v_eft_placeholder_id is not null then
     
           pkg_os_object.sp_object_delete
            (
                 in_session_id,
                 in_transaction_id,
                 null,
                 v_eft_placeholder_id,
                 null
            );
     end if;  
     
     if v_disb_usage_placeholder_id is not null then
     
           pkg_os_object.sp_object_delete
            (
                 in_session_id,
                 in_transaction_id,
                 null,
                 v_disb_usage_placeholder_id,
                 null
            );
     end if;  
     
end sp_cleanup_profile_placeholder;
---------------------------------------------------------------------------------------------------------------------------
----- OSPRODUCT-14788  ----
procedure sp_create_profile_placeholder
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_action_object_id          in             object.object_id%type,
     io_action_outcome_id         in out nocopy  outcome.outcome_id%type
)
as

     v_object_cache pkg_os_object_cache.t_object_cache;

begin

sp_create_profile_placeholder
(
     in_session_id,in_transaction_id,in_action_object_id,v_object_cache,io_action_outcome_id
);

end;

---------------------------------------------------------------------------------------------------
--OSPRODUCT-29325
function fn_bind_with_pmnt_allowd_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type
)
return  char
is
     v_procedure_name                   constant     system_log.program_name%type := pkg_name || 'fn_bind_with_pmnt_allowd_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
     
    
     v_use_downpay_profile              object_bv_value.business_variable_value%type;
     v_use_diff_downpay_profile         object_bv_value.business_variable_value%type;
     v_fab_payment_profile_id           object_bv_value.business_variable_value%type;
     
     v_prf_input_ctf_id                 object.object_id%type;
     v_quote_trxn_id                    object.object_id%type;
     v_prof_input_downpay_ctf_id        object.object_id%type;
     v_ctf_mode                         number;
     v_bind_with_payment_tf             char := 'F';
     
     cursor c_term_payer(in_policy_id object.object_id%type) is
    
          select  
                tp.ptp_payer_id
          from 
                dragon_ptp_payer tp
          where 
                tp.ptp_id = in_policy_id;
begin
     
     if nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_ptp_id,pkg_db_multipayer.gbv_MultiPayerEnabled_PTP),g_No) = g_Yes
     then
          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Inside multipayer if condition ' || 'in_ptp_id ' || in_ptp_id
               );
          end if;    
                     
          for v_payer in c_term_payer (in_ptp_id) loop
                             
               v_use_diff_downpay_profile := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_payer.ptp_payer_id,
                                              pkg_db_profiles.gbv_PayerDifferentAdhocPrf  --33029548
                                         );
                                                                            
                                         
               if nvl(v_use_diff_downpay_profile ,g_ProfileForAll) = g_ProfileForAll  --2->Use the same method for all the payments.... 1->Use a different method for the down payment
               then
                    
                    v_prf_input_ctf_id := pkg_os_object_io.fn_object_bv_get  
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_payer.ptp_payer_id,
                                              pkg_db_profiles.gbv_Ref_PTPPayerPlchldrPrfInpt --32924748 
                                         );
                    v_ctf_mode         := pkg_os_object_io.fn_object_bv_get  
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_prf_input_ctf_id,
                                              pkg_db_profiles.gbv_CTFPaymentMode --30010546 
                                         );
                                                  
                    if  v_ctf_mode <> g_PaymentMode_Card       --card
                    then 
                         
                         v_bind_with_payment_tf := 'F';                                                                                     
                         return v_bind_with_payment_tf;
                         
                    end if;
                                                                    
                    v_fab_payment_profile_id :=  pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payer.ptp_payer_id,
                                                      gbv_Ref_PTPPayerRecurringCTF        --33030048 
                                                 ),
                                              gbv_CTFFabricPayPrfId     --33990448
                                         );
                    if v_session_control.gLogging_Full
                    then
                         
                         pkg_os_logging.sp_log
                         (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           'inside Multipayer, reccuring radio button selected' || 
                           ' v_prf_input_ctf_id ' || v_prf_input_ctf_id ||
                           ' v_ctf_mode ' || v_ctf_mode || 
                           ' v_fab_payment_profile_id ' || v_fab_payment_profile_id 
                         );
                    end if;  
                                                                     
                    if v_fab_payment_profile_id is not null
                    then
                         v_bind_with_payment_tf := 'T';
                    else
                         v_bind_with_payment_tf := 'F';
                         exit;
                    end if;
                                          
                                             
               else  
                    v_prof_input_downpay_ctf_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payer.ptp_payer_id,
                                                      pkg_db_profiles.gbv_Ref_PayerDwnPlchldrPrfInpt   --33016548
                                                 );
                    v_ctf_mode :=    pkg_os_object_io.fn_object_bv_get  
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_prof_input_downpay_ctf_id,
                                              pkg_db_profiles.gbv_CTFPaymentMode --30010546 
                                         );
                                                  
                    if  v_ctf_mode <> g_PaymentMode_Card --card
                    then 
                         
                         v_bind_with_payment_tf := 'F';                                                                                   
                         return v_bind_with_payment_tf;
                         
                    end if;
                                                  
                    v_fab_payment_profile_id :=  pkg_os_object_io.fn_object_bv_get
                                              (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  pkg_os_object_io.fn_object_bv_get
                                                  (  
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payer.ptp_payer_id,
                                                      gbv_Ref_PTPPayerDownPaymentCTF     --33030148  
                                                  ),
                                                   gbv_CTFFabricPayPrfId     --33990448
                                              );
                                                                            
                    if v_session_control.gLogging_Full
                    then
                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'inside Multipayer,use different down payment radio button selected' || 
                                ' v_prof_input_downpay_ctf_id ' || v_prof_input_downpay_ctf_id ||
                                ' v_ctf_mode ' || v_ctf_mode || 
                                ' v_fab_payment_profile_id ' || v_fab_payment_profile_id 
                           );
                    end if;  
                                                                   
                    if  v_fab_payment_profile_id is not null
                    then
                         v_bind_with_payment_tf := 'T';
                    else 
                         v_bind_with_payment_tf := 'F';
                         exit;
                    end if; 
                                                    
               end if; 
                                         
          end loop;                                                  
                                                     
     else
          
          v_use_diff_downpay_profile := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_ptp_id,
                                               pkg_db_profiles.gbv_PTPDifferentAdhocPrf  --33028548
                                          );
                                      
          v_quote_trxn_id := pkg_os_object_search.fn_object_get_parent_of_type( in_session_id, in_transaction_id, in_ptp_id ,629); --PolicyTransaction
                                                
          if nvl(v_use_diff_downpay_profile ,g_ProfileForAll) = g_ProfileForAll  --2->Use the same method for all the payments.... 1->Use a different method for the down payment
          then
                  
               v_prf_input_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_quote_trxn_id,
                                          pkg_db_profiles.gbv_PTProfileDetailPlchldr --32924648
                                     );
                                              
               v_ctf_mode := pkg_os_object_io.fn_object_bv_get  
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_prf_input_ctf_id,
                                          pkg_db_profiles.gbv_CTFPaymentMode --30010546 
                                     );
                          
               if  v_ctf_mode <> g_PaymentMode_Card --card
               then 
                   v_bind_with_payment_tf := 'F';
                                                           
                   return v_bind_with_payment_tf;
               end if;                          
                                            
               v_fab_payment_profile_id :=  pkg_os_object_io.fn_object_bv_get
                                           (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_quote_trxn_id,
                                                          gbv_Ref_PTRecurringCTF           --33026848 
                                                     ),
                                                   gbv_CTFFabricPayPrfId     --33990448
                                           ); 
               
               if v_session_control.gLogging_Full
               then
                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           'inside single payer,use reccurring profile radio button selected' || 
                           ' v_prf_input_ctf_id ' || v_prf_input_ctf_id ||
                           ' v_ctf_mode ' || v_ctf_mode || 
                           ' v_fab_payment_profile_id ' || v_fab_payment_profile_id 
                      );
              end if;
                                             
          else
               
               v_prof_input_downpay_ctf_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_quote_trxn_id,
                                                  pkg_db_profiles.gbv_PTDwnPmntPrfDetailPlchldr  --33016248
                                             );
                                          
               v_ctf_mode :=    pkg_os_object_io.fn_object_bv_get  
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_prof_input_downpay_ctf_id,
                                                  pkg_db_profiles.gbv_CTFPaymentMode --30010546 
                                             );
                                                 
               if  v_ctf_mode <> g_PaymentMode_Card --card
               then 
                   v_bind_with_payment_tf := 'F';
                                                 
                   return v_bind_with_payment_tf;
               end if;                          
                                 
               v_fab_payment_profile_id :=  pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_quote_trxn_id,
                                                          gbv_Ref_PTDownPaymentCTF  --33028648
                                                     ),
                                                   gbv_CTFFabricPayPrfId     --33990448
                                             ); 
                                            
               if v_session_control.gLogging_Full
               then
                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           'inside Multipayer,use different down payment radio button selected' || 
                           ' v_prof_input_downpay_ctf_id ' || v_prof_input_downpay_ctf_id ||
                           ' v_ctf_mode ' || v_ctf_mode || 
                           ' v_fab_payment_profile_id ' || v_fab_payment_profile_id 
                      );
               end if;                                
                   
           end if;
               
               
          if v_fab_payment_profile_id is not null
          then
                v_bind_with_payment_tf := 'T';
          else
                v_bind_with_payment_tf := 'F';
          end if;   
                           
     end if;
           
     return v_bind_with_payment_tf;
     
end fn_bind_with_pmnt_allowd_tf;

function fn_bind_with_payment_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type
)
return  char
is
     v_procedure_name                   constant     system_log.program_name%type := pkg_name || 'fn_bind_with_pmnt_allowd_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
     
    
     v_use_downpay_profile              object_bv_value.business_variable_value%type;
     v_use_diff_downpay_profile         object_bv_value.business_variable_value%type;
     v_fab_payment_profile_id           object_bv_value.business_variable_value%type;
     
     v_prf_input_ctf_id                 object.object_id%type;
     v_quote_trxn_id                    object.object_id%type;
     v_prof_input_downpay_ctf_id        object.object_id%type;
     v_ctf_mode                         number;
     v_bind_with_payment_tf             char := 'F';
     
     cursor c_term_payer(in_policy_id object.object_id%type) is
    
          select  
                tp.ptp_payer_id
          from 
                dragon_ptp_payer tp
          where 
                tp.ptp_id = in_policy_id;
begin
  
 null;
 
end fn_bind_with_payment_tf;

begin
     null;

end PKG_DB_PROFILES;
/
