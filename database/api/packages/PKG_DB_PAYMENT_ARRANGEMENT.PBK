create or replace package body PKG_DB_PAYMENT_ARRANGEMENT is

-----------------------------------------------------------------------------------------------------------------------------------------------------
--  package constants ...
-----------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure show_version
is
begin

     dbms_output.put_line('$Workfile: PKG_DB_PAYMENT_ARRANGEMENT.PBK  $');
     dbms_output.put_line('$Revision: 112490 $');
     dbms_output.put_line('$Author: rrashmi@OSHQ.ONESHIELD.COM $');
     dbms_output.put_line('$Date: 2019-01-29 01:20:16 -0500 (Tue, 29 Jan 2019) $');

exception
    when others then

        dbms_output.put_line(sqlerrm(sqlcode));

end show_version;

procedure sp_set_bill_plan_attribute
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_exchange_id               in             object.object_id%type
)
as

     v_procedure_name  constant   system_log.program_name%type := pkg_name||'sp_set_bill_plan_attribute';
     
     v_pa_attribute_tf            char(1);
     v_pa_attribute_name          varchar2(50) := 'Enable Payment Arrangement Workflow';
     v_id                         number;
     v_insert_attribute           char(1) := 'F';
     
begin
     
     -- Get the exchange
     v_pa_attribute_tf := pkg_os_object_io.fn_object_bv_get
                          (
                               in_session_id,
                               in_transaction_id,
                               in_exchange_id,
                               gbv_ExchangeEnableBillPlanWF -- added to billing constant
                          );
                          
     begin
          select
               system_attribute_id
          into
               v_id
          from
               system_attribute
          where
               system_attribute_name = v_pa_attribute_name;

     exception
          
          --
          -- If the attribute does not exist already, add it because someone assumes that it needs to exist
          -- 
          when NO_DATA_FOUND then
               
               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'Payment Arrangement Attribute not found. Adding it..'
               );
               
               v_insert_attribute := 'T';     
     end;
                          
     if v_pa_attribute_tf = 1 then
          
          if v_insert_attribute = 'T' then
               
               pkg_os_system_attribute.insert_system_attribute
               (
                    v_pa_attribute_name,
                    'T',
                    'Value - T/F (Set the value to F to disable the Payment Arrangement Workflow'
               );
               
          else
          
               begin
               
                    update
                         system_attribute_value
                    set
                         system_attribute_value = 'T'
                    where
                         system_attribute_id = v_id;
               end;
               
          end if;
          
     else
          
          if v_insert_attribute = 'T' then
               
               pkg_os_system_attribute.insert_system_attribute
               (
                    v_pa_attribute_name,
                    'F',
                    'Value - T/F (Set the value to F to disable the Payment Arrangement Workflow'
               );
               
          else
               
               begin
               
                    update
                         system_attribute_value
                    set
                         system_attribute_value = 'F'
                    where
                         system_attribute_id = v_id;
               end;
               
          end if;
     
     end if;
     
end sp_set_bill_plan_attribute;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_set_billplan_enable_flag
--
--   %USAGE
--        The procedure will set the Bill Plan Enabled? flag on the passed in PTP id to yes or no.
--
--   %ALGORITHM
--        Set the flag to what is set at Billing Account.
--        If not set at BA, then do the calculation
--        Set it to yes if the policy is direct billed and payment arrangement attribute is T
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_ptp_object_id                    PTP ID
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_set_billplan_enable_flag
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_object_id                   in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_set_billplan_enable_flag';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_policy_trx_id                    object.object_id%type;
     v_policy_trx_type                  object_bv_value.business_variable_value%type;     
     v_policy_billing_method            object_bv_value.business_variable_value%type;
     
     -- OSPRODUCT-3351
     v_bill_plan_attr_tf                char(1);
     v_billing_account_id               object.object_id%type;--OSBLIING 7856
     v_ultimate_customer_id             object.object_id%type;--OSBLIING 7856
     v_primary_entity_id                object.object_id%type;--OSBLIING 7856
     v_ba_bill_plan_enabled_tf          char(1);--OSBLIING 7856
     v_ptp_bill_plan_enabled_tf         char(1);
     v_policy_count                     number := null;
     -- end OSPRODUCT-3351
	 
     -- kiran start OSPRODUCT-29368 / 29370
	 v_agency_requires_billing          number        default    PKG_OS_CONSTANT.gBoolean_No; 
     v_ptp_agency_requires_billing      number;
     -- kiran end OSPRODUCT-29368 / 29370	 
     
     -- kiran start OSPRODUCT-35200     
     v_product_id                       pd_product.pd_product_id%type;
     v_billplan_relationship_tf         char(1) := 'F';
     -- kiran start OSPRODUCT-35200
     
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*v_sid varchar2(100);
     v_return number;*/
     -- End Debug code variables for profiling  
     
begin
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*select sys_context('USERENV','SID') into v_sid from dual;
     DBMS_HPROF.START_PROFILING('ONESHIELD_DATA_PUMP','pkg_db_payment_arrangement'||v_sid);*/
     -- End Debug code to start profiling
     
     -- OSPRODUCT-2908
     -- OSPRODUCT-3351 Do not need transaction ID and transaction type
     begin
          
          select
               qt.billing_account_id,
               qt.billing_method_id
          into
               v_billing_account_id,
               v_policy_billing_method
          from
               dragon_policy_quote qt
          where
               qt.policyquote_id = in_ptp_object_id;
               
     exception
          
          when NO_DATA_FOUND then
               -- OSPRODUCT-3351 Moved the retrieval later
               null;
               
               
     end;
     
     -- OSPRODUCT-3351
     begin
                       
          -- OSBLIING 7856 starts     
          v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_ptp_object_id,
                                         pkg_os_constant.gObjType_Customer
                                    );
                                         
          if v_billing_account_id is null then

               -- Primary Entity
               v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_ultimate_customer_id,
                                             gbv_Ref_CustPrimaryEntity
                                        );
                                        
               -- Billing Account
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_primary_entity_id,
                                             gObjType_BillingAccount
                                        );
                                        
          end if;
          
          if v_policy_billing_method is null then
                                        
               -- Billing Method
               v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_ptp_object_id,
                                               pkg_db_billing.gbv_PolicyBillingMethod
                                          );
                                          
          end if;
          
          -- OSPRODUCT-3351 Added to alloww the switch between PA mode until the first quote is bound
          begin
               
               select
                    count(1)
               into
                    v_policy_count
               from
                    dragon_policy p
               where
                    p.customer_id = v_ultimate_customer_id;
                    
          exception
               
               when others then
                    v_policy_count := 0;
                    
          end;
          
                                   
     end;  
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Count ' || v_policy_count
          );

     end if;                      
     
     -- BA bill plan enabled
     -- One time setup
     v_ba_bill_plan_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        gbv_BABillPlanEnabledTF
                                   );
                                   
     -- OSPRODUCT-3351 Modified the chk
     if v_ba_bill_plan_enabled_tf is null 
        or
        (v_policy_count is not null and v_policy_count = 0)
     then
               
          begin
		       
			  v_bill_plan_attr_tf := pkg_os_system_attribute.fn_get_system_attribute_value
                                           (
                                           g_bill_plan_attribute_name
                                           ); --OSPRODUCT-24741
                                                                                
                    
               if v_bill_plan_attr_tf = 'T'
               then
                         
                    v_ba_bill_plan_enabled_tf := g_Yes;
                    
               else
                    
                    v_ba_bill_plan_enabled_tf := g_No;
                             
               end if;
                                                                                  
          exception
                    
               when NO_DATA_FOUND then
                         
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Warning - Payment Arrangement Attribute not setup, hence returning..'
                    );
                         
                    v_ba_bill_plan_enabled_tf := g_No;
                         
          end;
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_account_id,
               gbv_BABillPlanEnabledTF,
               v_ba_bill_plan_enabled_tf
          );
          
     end if;     
	 

     -- kiran start OSPRODUCT-35200 commenting the below logic and added new logic
     
     /*
     -- kiran start OSPRODUCT-29368 / 29370
     
     v_agency_requires_billing	  := pkg_os_object_io.fn_object_bv_path_get
                                     (
                                         in_session_id,
                                         in_transaction_id,
                                         in_ptp_object_id,
                                         '26590907.34920748'--Partner.Agency requires Y/N
                                      ); 
                                        
    if v_policy_billing_method = pkg_db_billing.gBillingMethod_Agency and v_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_Yes 
              or
       v_policy_billing_method = pkg_db_billing.gBillingMethod_Direct  
    then  
       pkg_os_object_io.sp_object_bv_set
       (
             in_session_id,
             in_transaction_id,
             in_ptp_object_id,
             PKG_DB_CONSTANT.gbv_AgencyRequiresBilling,
             PKG_OS_CONSTANT.gBoolean_Yes
        );  
        
     else
       
       pkg_os_object_io.sp_object_bv_set
       (
             in_session_id,
             in_transaction_id,
             in_ptp_object_id,
             PKG_DB_CONSTANT.gbv_AgencyRequiresBilling,
             PKG_OS_CONSTANT.gBoolean_No
        );                                   
    end if; 
         
     
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            in_ptp_object_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                      );     
     -- kiran end OSPRODUCT-29368 / 29370
     */
     
     v_product_id                := pkg_os_product.fn_object_product_get
                                    (
                                        in_session_id,
                                        in_transaction_id,
                                        in_ptp_object_id
                                     );
                                     
     v_billplan_relationship_tf  := pkg_db_business_relationship.fn_billplan_relationship_tf
                                    (
                                        in_session_id,
                                        in_transaction_id,
                                        v_product_id,
                                        in_ptp_object_id
                                    );
                                                                        
     /*                                                                   
     if v_billplan_relationship_tf = 'T' then                                   
       
        pkg_os_object_io.sp_object_bv_set
        (
             in_session_id,
             in_transaction_id,
             in_ptp_object_id,
             PKG_DB_CONSTANT.gbv_AgencyRequiresBilling,
             PKG_OS_CONSTANT.gBoolean_Yes
        );
     else
        pkg_os_object_io.sp_object_bv_set
        (
             in_session_id,
             in_transaction_id,
             in_ptp_object_id,
             PKG_DB_CONSTANT.gbv_AgencyRequiresBilling,
             PKG_OS_CONSTANT.gBoolean_No
        );                 
             
     end if;
     
     v_ptp_agency_requires_billing := pkg_os_object_io.fn_object_bv_get
                                      (
                                            in_session_id,
                                            in_transaction_id,
                                            in_ptp_object_id,
                                            PKG_DB_CONSTANT.gbv_AgencyRequiresBilling
                                      );  
     */
     --kiran end OSPRODUCT-35200
	 
	 
     -- PTP Setup    
     --kiran start OSPRODUCT-35200 commenting the below if logic and added new condition
     
     /*
     if v_policy_billing_method != pkg_db_billing.gBillingMethod_Direct
        -- kiran start OSPRODUCT-29368 / 29370
        and v_ptp_agency_requires_billing = g_No
        -- kiran end OSPRODUCT-29368 / 29370
     */
     
     if v_billplan_relationship_tf = 'F'
     
     --kiran end OSPRODUCT-35200 
	 
	 then
          
          v_ptp_bill_plan_enabled_tf := g_No;
          
     else
          
          v_ptp_bill_plan_enabled_tf := v_ba_bill_plan_enabled_tf;
          
     end if;
                         
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ptp_object_id,
          gbv_PTPBillPlanEnabledTF,
          v_ptp_bill_plan_enabled_tf
     );
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Bill Plan enabled - BA? ' || v_ba_bill_plan_enabled_tf || 
               '.. Bill Plan enabled - PTP? ' || v_ptp_bill_plan_enabled_tf || 
               '.. Policy Billing Methdod: '|| v_policy_billing_method
          );

     end if;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;     
     -- end OSPRODUCT-3351
     
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*DBMS_HPROF.STOP_PROFILING();
     v_return:=DBMS_HPROF.ANALYZE('ONESHIELD_DATA_PUMP','pkg_db_payment_arrangement'||v_sid);*/
     -- End debug code to stop profiling and load results 
     
     /*if v_session_control.gLogging_Full then                    

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. HPROF Run ID: '|| v_return
          );

     end if;*/
     
end sp_set_billplan_enable_flag;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_bill_plan_nid_get
--
--   %USAGE
--        The function returns the Next Invoice date of a Bill Plan
--
--   %ALGORITHM
--        Get the terms associated with teh passed in bill plan
--        Return the most recent NID of all the NID's of the terms
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           PTP Payer ID
--   %PARAM    in_modify_tf                  char - T when in endorsement wf
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_bill_plan_nid_get
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_bill_plan_id                    in             object.object_id%type
)
return object_bv_value.business_variable_value%type
is

     --v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_pa_default_name_get';
     --v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_term_id                          object.object_id%type;
     v_ultimate_customer_id             object.object_id%type;

     v_next_invoice_date                object_bv_value.business_variable_value%type;
     v_term_nid                         object_bv_value.business_variable_value%type;

     v_term_list                        object_tt := new object_tt();

     v_term_payer_list                  object_tt := new object_tt();
     v_term_payer_id                    object.object_id%type;
     v_term_payer_nid                   object_bv_value.business_variable_value%type;
     v_index                            number;

     cursor c_term
     is
     select
           *
     from
          dragon_policy_term
     where
          pref_bill_plan_id=in_bill_plan_id;
     --and
     --     nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id,policy_id,7),0) <> 1;  --OSPRODUCT-13161  commented under OSPRODUCT-13563

     cursor c_term_payer
     is
     select
           *
     from
           dragon_policy_term_payer
     where
           pref_bill_plan_id=in_bill_plan_id;
     --and
     --     nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id,policy_id,7),0) <> 1;   --OSPRODUCT-13161  commented under OSPRODUCT-13563

begin


     For r_term in c_term loop

	     if nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id,pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, r_term.policy_term_id),7),0) <> 1 then    --OSPRODUCT-13563

			  v_term_id := r_term.policy_term_id;

			  -- see if the term status is active
			  if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_term_id ,pkg_db_constant.gbv_term_pas_status) <> pkg_os_policy_transaction.gState_PolicyTrxRolledback
                -- OSPRODUCT-21005
                OR
                (       pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_term_id ,pkg_db_constant.gbv_term_pas_status) = pkg_os_policy_transaction.gState_PolicyTrxRolledback
                  And   nvl(r_term.outstanding_balance,0) != 0 ) 
              then

				   --1074
				   if not PKG_DB_MULTIPAYER.fn_multipayer_mode_tf(in_session_id,in_transaction_id, v_term_id) then

					   v_term_nid := pkg_os_object_io.fn_object_bv_get
					   (
							in_session_id,
							in_transaction_id,
							v_term_id,
							gbv_TermNextInvoiceDate
					   );

					   if v_next_invoice_date is null then

							v_next_invoice_date := v_term_nid;

					   else
							if trunc ( to_date ( v_term_nid, pkg_os_constant.DragonDateFormatDefault ) )
							<
							trunc ( to_date ( v_next_invoice_date, pkg_os_constant.DragonDateFormatDefault ) )
							then

								 v_next_invoice_date := v_term_nid;

							end if;

					   end if;

			       end if;

	          end if;

       	 end if;

     end loop;

     For r_term_payer in c_term_payer loop

          v_term_payer_id     := r_term_payer.policy_term_payer_id;
          v_term_id           := r_term_payer.policy_term_id;

          -- see if the term status is active
          if pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_term_id ,pkg_db_constant.gbv_term_pas_status) <> pkg_os_policy_transaction.gState_PolicyTrxRolledback 
                -- OSPRODUCT-21005
                OR
                (      pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_term_id ,pkg_db_constant.gbv_term_pas_status) = pkg_os_policy_transaction.gState_PolicyTrxRolledback 
                  And   nvl( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_term_id ,pkg_db_functions.gbv_TermOutstandingBal),0) != 0 ) 
          then
               v_term_payer_nid := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_term_payer_id,
                                   pkg_db_multipayer.gbv_PolicyTerm_Payer_NID
                              );

               if v_next_invoice_date is null
               then
                    if nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id,pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, r_term_payer.policy_term_id),7),0) <> 1 then  --OSPRODUCT-13563    --OSPRODUCT-15337
                         v_next_invoice_date := v_term_payer_nid;
                    end if;
               else
                    if   trunc ( to_date ( v_term_payer_nid, pkg_os_constant.DragonDateFormatDefault ) )
                         <
                         trunc ( to_date ( v_next_invoice_date, pkg_os_constant.DragonDateFormatDefault ) )
                    then
                         if nvl(pkg_db_suspension.fn_db_is_activity_suspended(in_session_id,in_transaction_id,pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, r_term_payer.policy_term_id),7),0) <> 1 then  --OSPRODUCT-13563    --OSPRODUCT-15337
                              v_next_invoice_date := v_term_payer_nid;
                         end if;
                    end if;
               end if;
          end if;
     end loop;

     return v_next_invoice_date;

end fn_bill_plan_nid_get;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_bill_plan_modified_tf
--
--   %USAGE
--        Return T is the passed in bill plan object is modified and cannot be used as a placeholder
--
--   %ALGORITHM
--        Not specified.
--
--
--   %PARAM    in_action_object_id           Action Object ID - PTP/PTPPayer             
--   %PARAM    in_bill_plan_id               Bill Plan ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_bill_plan_modified_tf
(
	in_action_object_id  object.object_id%type,
     in_bill_plan_id      object.object_id%type
) return char
is

     v_modified_tf             char := 'F';
     v_key_value               object_bv_value.business_variable_value%type;
     
     v_action_object_type_id   object_type.object_type_id%type;
     
     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          order by
                pa_installation_id;

begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     0,
                                     0,
                                     in_action_object_id
                                );
     if v_action_object_type_id not in (gObjType_PTP, gObjType_PTPPayer) then
          v_action_object_type_id := gObjType_PTP;
     end if; 
     
     for v_pa_installation in c_pa_installation (v_action_object_type_id) loop
               
          v_key_value := pkg_os_object_io.fn_object_bv_get
                         (
                              0,
                              0,
                              in_bill_plan_id,
                              v_pa_installation.business_variable_id
                         );
          
     
          if v_key_value is not null then
                  
               v_modified_tf := 'T';
               exit;
                              
          end if;
          
     end loop;
     
     return v_modified_tf;
     
end fn_bill_plan_modified_tf;

-- OSPRODUCT-10484
function fn_get_billplan_placeholder
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type, -- PTP or PTPPayer
     in_billing_account_id              in             object.object_id%type
) 
return object.object_id%type
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_billplan_placeholder';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;          
     v_plchldr_pmnt_arngmnt_id          object.object_id%type;        

begin
                    
     select
          bp.bill_plan_id
     into
          v_plchldr_pmnt_arngmnt_id
     from
          dragon_bill_plan bp
     where
          bp.billing_account_id = in_billing_account_id
     and
          bp.bill_plan_key is null
     and
          pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, bp.bill_plan_id, 33043548) = in_action_object_id;
                    
     --io_action_outcome_id := pkg_os_constant.gOutcome_OK;
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Placeholder: ' || v_plchldr_pmnt_arngmnt_id
          );

     end if;
     
     return v_plchldr_pmnt_arngmnt_id;
     
exception
     
     when no_data_found then
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Placeholder not exists.. '
               );

          end if;
          
          return null;

end fn_get_billplan_placeholder;
-- end OSPRODUCT-10484

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_pa_create_placeholder
--
--   %USAGE
--        The procedure will create a new placeholder PaymentArrangement Object 
--        under BillingAccount. If already exists will do nothing.
--        Implemented for multi-payer object model too.
--
--   %ALGORITHM
--        Not specified.
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 Action Object ID -- PTP ID / PTP Payer ID
--   %PARAM    in_object_cache                     Object Cache
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

-- Native Command - DBCreatePaymentArrangementPlcnldr
-- New action to be added in the workflow after action ID:989346 (CSCashTransferProfileCreate) is executed
procedure sp_billplan_create_placeholder
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_object_cache                    in out nocopy  pkg_os_object_cache.t_object_cache,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_payer_tf                        in             char := 'F' -- sending a payer
)
as
     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name           constant  system_log.program_name%type  := pkg_name||'sp_billplan_create_placeholder';

     v_ultimate_customer_id     object.object_id%type;
     v_primary_entity_id        object.object_id%type;
     v_billing_account_id       object.object_id%type;
     v_plchldr_pmnt_arngmnt_id  object.object_id%type;
     v_ptp_trx_id               object.object_id%type;
     v_key                      varchar2(500);

     --v_action_object_type_id    object_type.object_type_id%type;
     v_pt_object_type_id        object_type.object_type_id%type;
     --v_found_in_cache_tf        char(1);
     
     --v_object_list              pkg_os_object.t_object_list;
     --v_object_index             number;
     --v_found_tf                 char(1) := 'F';
     
     v_bill_plan_enable_tf      char(1);
     v_datamart_tf              char(1) := 'T';
     
     v_bv_table                 pkg_os_object_io.t_bv_table;                 
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*v_sid varchar2(100);
     v_return number;*/
     -- End Debug code variables for profiling  
     
begin
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*select sys_context('USERENV','SID') into v_sid from dual;
     DBMS_HPROF.START_PROFILING('ONESHIELD_DATA_PUMP','v_procedure_name'||v_sid);*/
     -- End Debug code to start profiling 

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Entering with Action Object ID: ' || in_action_object_id ||
               '..Payer: '                          || in_payer_tf
          );

     end if;

     -- Get the Billing Account ID
     case
          
          when in_payer_tf = 'F' then
               
               -- Get bill plan enabled flag
               v_bill_plan_enable_tf := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id,
                                             gbv_PTPBillPlanEnabledTF
                                        );              
               
               if v_billing_account_id is null then
                    
                    -- Get the Ultimate Customer ID
                    v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   pkg_os_constant.gObjType_Customer
                                              );

                    -- get the primary entity id
                    v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_ultimate_customer_id,
                                               gbv_Ref_CustPrimaryEntity
                                          );


                    -- Get the child Billing Account for the Primary Entity
                    v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_primary_entity_id,
                                                gObjType_BillingAccount
                                           );
                                           
               end if;                 
          
          else
                           
               -- Set bill plan enabled flag
               v_bill_plan_enable_tf := g_Yes;
               
               begin
                    
                    select
                         pp.billing_account_id
                    into
                         v_billing_account_id
                    from
                         dragon_ptp_payer pp
                    where
                         pp.ptp_payer_id = in_action_object_id;
               
               exception
                    
                    when NO_DATA_FOUND then
                    
                         -- Get entity               
                         v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                );
                                                
                         -- Get Billing account
                         v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_primary_entity_id,
                                                      gObjType_BillingAccount
                                                 );
                                                 
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Warning - Billing Account ID not found in the datamart hence the overall performance will be impacted. 
                                   Retreived from the storage: ' || v_billing_account_id
                              );

                         end if;
                         
               end;

     
     end case;
     
     if v_session_control.gLogging_Full then -- OSPRODUCT-3927

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Billing Account ID: ' || v_billing_account_id
          );

     end if;
     
     -- OSPRODUCT-10484     
     if v_bill_plan_enable_tf = g_Yes then
          
          /*v_plchldr_pmnt_arngmnt_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_billing_account_id,
                                               gbv_Ref_BAPlchldrPmntArngmnt
                                          );*/
                                          
          begin
               
               select
                    bp.bill_plan_id
               into
                    v_plchldr_pmnt_arngmnt_id
               from
                    dragon_bill_plan bp
               where
                    bp.billing_account_id = v_billing_account_id
               and
                    bp.bill_plan_key is null
               and
                    pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, bp.bill_plan_id, gbv_Ref_PlaceholderOf) = in_action_object_id;
                    
          exception
               
               when no_data_found then
                                          
                    if v_session_control.gLogging_Full then -- OSPRODUCT-3927

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..No placeholder found for the object..' || in_action_object_id
                         );

                    end if;
                                                 
          end;
          
          if v_plchldr_pmnt_arngmnt_id is null then
               
               -- first check if any blank bill plan exist
               begin
                    
                    select
                         min(bp.bill_plan_id) 
                    into
                         v_plchldr_pmnt_arngmnt_id
                    from
                         dragon_bill_plan bp
                    where
                         bp.billing_account_id = v_billing_account_id
                    and
                         bp.bill_plan_key is null
                    and
                         pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, bp.bill_plan_id, gbv_Ref_PlaceholderOf) is null; 
                    
                    if v_plchldr_pmnt_arngmnt_id is not null then
                         
                         v_bv_table.delete;

                         -- Default name flag
                         v_bv_table(gbv_BillPlanDefaultNameTF).business_variable_value := g_Yes;

                         -- Placeholder Of
                         v_bv_table(gbv_Ref_PlaceholderOf).business_variable_value := in_action_object_id;
                         
                         -- Take a lock and then do a BV set
                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_plchldr_pmnt_arngmnt_id,
                              v_bv_table
                         );
                         
                         if in_payer_tf = 'F' then
                         
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_action_object_id,
                                   gbv_Ref_PTPBillPlanPlchldr,-- 33043748,
                                   v_plchldr_pmnt_arngmnt_id
                              );
                              
                         else
                         
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_action_object_id,
                                   gbv_Ref_PTPayerBillPlanPlchldr, -- 33043648,
                                   v_plchldr_pmnt_arngmnt_id
                              );
                         
                         end if;
                    
                         if v_session_control.gLogging_Full then
                                   
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Found an existing Bill Plan placeholder:'|| v_plchldr_pmnt_arngmnt_id
                              );
                                   
                         end if;                  
                         
                    end if;
                    
               end;
                             
               if v_plchldr_pmnt_arngmnt_id is null then                        
               
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         gObjType_PaymentArrangement,
                         v_billing_account_id,
                         v_plchldr_pmnt_arngmnt_id
                    );
                         
                    /*-- Set reference from BillingAccount
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_account_id,
                         gbv_Ref_BAPlchldrPmntArngmnt,
                         v_plchldr_pmnt_arngmnt_id
                    );*/
                    
                    -- Set reference on the bill plan
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_plchldr_pmnt_arngmnt_id,
                         gbv_Ref_PlaceholderOf,
                         in_action_object_id
                    );
                    
                    if in_payer_tf = 'F' then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_Ref_PTPBillPlanPlchldr,-- 33043748,
                              v_plchldr_pmnt_arngmnt_id
                         );
                              
                    else
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_Ref_PTPayerBillPlanPlchldr, -- 33043648,
                              v_plchldr_pmnt_arngmnt_id
                         );
                         
                    end if;
                         
                    pkg_os_datamart.sp_datamart_update_row (in_session_id, in_transaction_id, v_plchldr_pmnt_arngmnt_id, v_datamart_tf); 
                         
                    if v_session_control.gLogging_Full then
                              
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Created new Bill Plan placeholder:'|| v_plchldr_pmnt_arngmnt_id
                         );
                              
                    end if;
               
               end if;
               
               --
               -- Store the object that can be used as a placeholder in Session New Object
               --
               if ( v_plchldr_pmnt_arngmnt_id is not null ) then

                    /*pkg_os_object_io.sp_bv_value_cache_add
                    (
                         in_session_id,
                         pkg_os_constant_bv.gbv_SessionNewObject,
                         v_plchldr_pmnt_arngmnt_id
                    );*/  --OSPRODUCT-14393
					
					pkg_os_object_io.sp_object_bv_set   --OSPRODUCT-14393
                    (    
                         in_session_id,
                         in_transaction_id,
                         in_session_id,
                         pkg_os_constant_bv.gbv_SessionNewObject,
                         v_plchldr_pmnt_arngmnt_id
                    );  

               end if;
          
          end if;
          
     else
          
          begin
               
               select
                    bp.bill_plan_id
               into
                    v_plchldr_pmnt_arngmnt_id
               from
                    dragon_bill_plan bp
               where
                    bp.billing_account_id = v_billing_account_id
               and
                    bp.bill_plan_key is null
               and
                    pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, bp.bill_plan_id, gbv_Ref_PlaceholderOf) = in_action_object_id;
                    
          exception
               
               when no_data_found then
                                          
                    if v_session_control.gLogging_Full then -- OSPRODUCT-3927

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..No placeholder found for the object..' || in_action_object_id
                         );

                    end if;
                    
                    v_plchldr_pmnt_arngmnt_id := null;
                                                 
          end;
                                       
          if v_plchldr_pmnt_arngmnt_id is not null then               
          
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Bill Plan not enabled. Deleting the placeholder bill plan: ' || v_plchldr_pmnt_arngmnt_id
                    );

               end if;     
               
               pkg_os_object.sp_object_delete
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_account_id,
                    v_plchldr_pmnt_arngmnt_id,
                    gObjType_PaymentArrangement
               );
          
          end if;
          
     end if;     
     -- end OSPRODUCT-10484
     
     if v_session_control.gLogging_Full then
                         
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Placeholder: '|| v_plchldr_pmnt_arngmnt_id
          );
                         
     end if; 

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;
     
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
    /*DBMS_HPROF.STOP_PROFILING();
    v_return:=DBMS_HPROF.ANALYZE('ONESHIELD_DATA_PUMP','v_procedure_name'||v_sid);*/
    -- End debug code to stop profiling and load results
     
     /*if v_session_control.gLogging_Full then                    

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. hprof#'||v_return
          );

    end if;*/

end sp_billplan_create_placeholder;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_bill_plan_eligible_tf
--
--   %USAGE
--        Eligible to be displayed for a policy based on the payment plan it is associated with
--
--   %ALGORITHM
--        Not specified.
--
--   %PARAM    in_session_id           Session ID             
--   %PARAM    in_transaction_id       Transaction ID
--   %PARAM    in_action_object_id     Action Object ID - PTP/PTPPayer             
--   %PARAM    in_bill_plan_id         Bill Plan ID
--
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1433				 
/*function fn_bill_plan_eligible_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_bill_plan_id                    in             object.object_id%type,
     in_account_type_id                 in             number default null

) return number
is
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                     constant system_log.program_name%type := pkg_name||'fn_bill_plan_eligible_tf';
     v_payment_plan_list                  pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_index                              number;
     v_pay_plan_id                        object.object_id%type;
     v_bill_plan_policy_id                object.object_id%type;
     v_bill_plan_freq_value               object_bv_value.business_variable_value%type;
     v_pay_plan_payment_freq_value        object_bv_value.business_variable_value%type;

     v_ptp_transaction_id                 object.object_id%type;
     v_pt_transaction_id                  object.object_id%type;
     v_ptp_id                             object.object_id%type;
     v_exchange_id                        object.object_id%type;
     v_policy_id                          object.object_id%type;
     v_billing_account_id                 object.object_id%type;
     v_payer_placeholder                  object.object_id%type;
     v_ptp_payer_id                       object.object_id%type;

     v_action_object_type_id              object_type.object_type_id%type;
     v_pt_type_id                         object_type.object_type_id%type;
     v_ptp_payer_list                     pkg_os_object.t_object_list;

     v_bill_method                        char(1) := null; --1. policy, 2.account
     v_bill_method_noncust                char(1) := null;
     v_billing_acc_type_id                number;
     v_payer_index                        number;
     v_payment_plan_md_id                 object_bv_value.business_variable_value%type; --OSPRODUCT-14611
     v_valid_payment_plan                 char(1) := null; --OSPRODUCT-14611

begin

	-- Get the placeholder bill plan
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );

     -- Policy Transaction
     v_pt_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_action_object_id,
                                  pkg_os_constant.gobjType_PolicyTransaction
                             );

     -- Policy Transaction Policy --OSPRODUCT-11724
     v_ptp_transaction_id := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_pt_transaction_id,
                                  pkg_db_constant.gbv_PolicyTrxRefCoverages
                             );

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Considering Bill Plan Id: ' || in_bill_plan_id ||
               '.. Action Object ID: '         || in_action_object_id ||
               '.. Action object type ID: '    || v_action_object_type_id ||
               '.. Policy Transaction ID: '    || v_ptp_transaction_id  ||
               '.. Policy Transaction Policy ID: '    || v_ptp_transaction_id
           );

     end if;

     if v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then

          -- get the payers
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id              =>    in_session_id,
               in_transaction_id          =>    in_transaction_id,
               in_object_id               =>    v_ptp_transaction_id,
               in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
               in_object_list             =>    v_ptp_payer_list
          );

          -- OSPRODUCT-3351 Removed error log
          v_payer_index := v_ptp_payer_list.first;

          while v_payer_index is not null loop

               v_ptp_payer_id := v_ptp_payer_list(v_payer_index);

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Payer ID: ' || v_ptp_payer_id
                     );

               end if;

               -- get the placeholder of reference
               v_payer_placeholder := pkg_os_object_io.fn_object_bv_get
                                      (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ptp_payer_id,
                                          33043648 -- added to billing constant
                                      );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Placeholder: ' || v_payer_placeholder
                     );

               end if;

               if v_payer_placeholder = in_bill_plan_id then
                    return g_Yes;
               end if;

               v_payer_index := v_ptp_payer_list.next (v_payer_index);

          end loop;

     end if;

     -- Get the exchange
     v_exchange_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_session_id,
                           pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                      );

     -- Get the Billing Method
     v_bill_method := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           v_exchange_id,
                           gbv_ExchangeBillMethod-- added to pkg spec
                      );

     -- Get the Billing Method
     -- 2358
     v_bill_method_noncust := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_exchange_id,
                                             gbv_ExchangeBillMethodNonCust-- added to pkg spec
                                        ), g_Account) ;

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Action Object ID: ' || in_action_object_id ||
               '.. Bill Plan Id: '     || in_bill_plan_id     ||
               '.. Exchange ID: '      || v_exchange_id       ||
               '.. Billing Account Type: ' || in_account_type_id ||
               '.. Bill Method Customer (1. Policy; 2. Account): ' || v_bill_method ||
               '.. Bill Method Non - Customer (1. Policy; 2. Account): ' || v_bill_method_noncust
           );

     end if;

     if (
             in_account_type_id = g_BAAcctTypeCustomer
             and
             v_bill_method = g_Policy -- 1433
        )
        or
        (
             in_account_type_id not in (g_BAAcctTypeAgent, g_BAAcctTypeCustomer) -- customer and agent
             and
             v_bill_method_noncust = g_Policy -- 2358
        )
     then

          -- Get Policy
          begin

               select
                    pt.policy_id
               into
                    v_policy_id
               from
                    dragon_policy_trx pt
               where
                    pt.policy_trx_id = v_pt_transaction_id;

          exception

               when no_data_found then -- for quote transaction
                    null;

          end;

          -- read the policy reference from bill plan
          v_bill_plan_policy_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_bill_plan_id,
                                        gbv_Ref_BillPlanPolicy
                                   );

          if v_bill_plan_policy_id = v_policy_id then

               return g_Yes;

          else

               return g_No;

          end if;

     else -- 1433 existing logic moved to else

          v_bill_plan_freq_value := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_bill_plan_id,
                                         gbv_PmntArrangementTiming
                                    );

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               gObjType_PaymentPlan,
               v_payment_plan_list
          );

          v_index := v_payment_plan_list.first;

          while v_index is not null loop

               v_pay_plan_id := v_payment_plan_list(v_index);

               v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_pay_plan_id,
                                                       gbv_PaymentPlanTimingMDID
                                                  );

               --OSPRODUCT-14611 Start
               v_payment_plan_md_id     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_pay_plan_id,
                                                  gbv_PaymentPlanMDID
                                             );

               v_valid_payment_plan     :=   nvl(pkg_db_payplan_modify.fn_restriction_payplan_tf
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_action_object_id,
                                                  v_pay_plan_id,
                                                  v_payment_plan_md_id
                                             ),'T');
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Action Object ID: ' || in_action_object_id ||
                         '.. Pay Plan Payment Frequency Value: '     || v_pay_plan_payment_freq_value     ||
                         '.. Payment Plan MD ID: '      || v_payment_plan_md_id       ||
                         '.. Valid Payment Plan: ' || v_valid_payment_plan
                     );
               end if;
               --OSPRODUCT-14611 end
               if v_bill_plan_freq_value = v_pay_plan_payment_freq_value and v_valid_payment_plan = 'F' then

                     return g_Yes;

               end if;

               v_index := v_payment_plan_list.next(v_index);

          end loop;

          return g_No;

     end if;

end fn_bill_plan_eligible_tf;*/
--OSBILLING-7504 ends

-- OSPRODUCT-20577
function fn_bill_plan_eligible_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type, -- PTP ID
     in_bill_plan_id                    in             object.object_id%type,
     in_account_type_id                 in             number default null,
     in_modified_bill_plan_list_tf      in             char default 'N'

) return number
is
     v_session_control                    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                     constant system_log.program_name%type := pkg_name||'fn_bill_plan_eligible_tf';
     v_payment_plan_list                  pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_index                              number;
     v_pay_plan_id                        object.object_id%type;
     v_bill_plan_policy_id                object.object_id%type;
     v_bill_plan_freq_value               object_bv_value.business_variable_value%type;
     v_pay_plan_payment_freq_value        object_bv_value.business_variable_value%type;

     v_policy_trx_id                      object.object_id%type;
     v_pt_transaction_id                  object.object_id%type;
     v_ptp_id                             object.object_id%type;
     v_exchange_id                        object.object_id%type;
     v_policy_id                          object.object_id%type;
     v_billing_account_id                 object.object_id%type;
     v_payer_placeholder                  object.object_id%type;
     v_ptp_payer_id                       object.object_id%type;

     v_action_object_type_id              object_type.object_type_id%type;
     v_pt_type_id                         object_type.object_type_id%type;
     v_ptp_payer_list                     pkg_os_object.t_object_list;

     v_bill_method                        char(1) := null; --1. policy, 2.account
     v_bill_method_noncust                char(1) := null;
     v_billing_acc_type_id                number;
     v_payer_index                        number;
     v_payment_plan_md_id                 object_bv_value.business_variable_value%type; --OSPRODUCT-14611
     v_valid_payment_plan                 char(1) := null; --OSPRODUCT-14611
     
     v_allow_cpp_with_end_tf              char(1) := nvl(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_action_object_id, 64248), 'F') ;
     v_chosen_pay_plan                    object.object_id%type;
     
     v_policy_bill_plan_tf                char(1) := 'F';
     
     v_bill_plan_entity_id                object.object_id%type;
     v_payer_entity_id                    object.object_id%type;
     v_action_object_id                   object.object_id%type;
     v_trx_type_id                        number;
     
begin
     
     -- Get the placeholder bill plan
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then
          
          v_action_object_id := pkg_os_object.fn_object_parent_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     else
          
          v_action_object_id := in_action_object_id;
          
     end if;
     
     v_policy_trx_id := pkg_os_object_search.fn_object_get_parent_of_type
                        (
                             in_session_id,
                             in_transaction_id,
                             v_action_object_id,
                             pkg_os_constant.gobjType_PolicyTransaction
                        );
     
     --v_billing_account_id := pkg_os_object.fn_object_parent_get
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Considering Bill Plan Id: ' || in_bill_plan_id ||
               '.. Action Object ID: '         || in_action_object_id ||
               '.. Updated action object id: ' || v_action_object_id ||
               '.. Action object type ID: '    || v_action_object_type_id ||
               '.. Policy Transaction ID: '    || v_policy_trx_id 
           );

     end if;
     
     -- Get the exchange
     v_exchange_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_session_id,
                           pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                      );

     -- Get the Billing Method
     v_bill_method := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           v_exchange_id,
                           gbv_ExchangeBillMethod-- added to pkg spec
                      );
                      
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Action Object ID: ' || in_action_object_id ||
               '.. Bill Plan Id: '     || in_bill_plan_id     ||
               '.. Exchange ID: '      || v_exchange_id       ||
               '.. Billing Account Type: ' || in_account_type_id ||
               '.. Bill Method Customer (1. Policy; 2. Account): ' || v_bill_method ||
               '.. Bill Method Non - Customer (1. Policy; 2. Account): ' || v_bill_method_noncust
           );

     end if;

     -- Get the Billing Method
     -- 2358
     v_bill_method_noncust := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_exchange_id,
                                             gbv_ExchangeBillMethodNonCust-- added to pkg spec
                                        ), g_Account) ;
                                        
     if (
             in_account_type_id = g_BAAcctTypeCustomer
             and
             v_bill_method = g_Policy -- 1433
        )
        or
        (
             in_account_type_id not in (g_BAAcctTypeAgent, g_BAAcctTypeCustomer) -- customer and agent
             and
             v_bill_method_noncust = g_Policy -- 2358
        )
     then
          
          v_policy_bill_plan_tf := 'T'; -- Only bill plan that is associated with the passed in policy
          
          -- Get Policy
          v_policy_id := pkg_os_object.fn_object_parent_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_trx_id
                         );
          
          -- read the policy reference from bill plan
          v_bill_plan_policy_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_bill_plan_id,
                                        gbv_Ref_BillPlanPolicy
                                   );
                                   
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Policy ID: ' || v_policy_id ||
                    '.. Bill Plan Policy: ' || v_bill_plan_policy_id
                );

          end if;

     end if;
     
     if in_modified_bill_plan_list_tf = 'Y'
        and 
        v_allow_cpp_with_end_tf = 'F' 
     then
          
          v_trx_type_id := pkg_os_object_io.fn_object_bv_get 
                           ( 
                                in_session_id, 
                                in_transaction_id, 
                                v_policy_trx_id, 
                                pkg_os_constant_bv.gbv_PolicyTranType 
                           );
                           
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Policy Trx Type ID: ' || v_trx_type_id   
                );

          end if;
          
     end if;
     
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id              =>    in_session_id,
          in_transaction_id          =>    in_transaction_id,
          in_object_id               =>    v_action_object_id,
          in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
          in_object_list             =>    v_ptp_payer_list
     );
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Payer Count: ' || v_ptp_payer_list.count   
           );

     end if;
     
     if v_ptp_payer_list.count > 0 then -- MP
          
          -- Get the BA 
          v_bill_plan_entity_id := pkg_os_object.fn_object_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        pkg_os_object.fn_object_parent_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_bill_plan_id
                                        )
                                   );
                                   
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Bill Plan Entity ID: ' || v_bill_plan_entity_id
                );

          end if;
          
          -- OSPRODUCT-3351 Removed error log
          v_payer_index := v_ptp_payer_list.first;

          while v_payer_index is not null loop

               v_ptp_payer_id := v_ptp_payer_list(v_payer_index);
               
               v_payer_entity_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_ptp_payer_id,
                                         pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                    );

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Payer ID: ' || v_ptp_payer_id ||
                         '.. Payer Entity ID: ' || v_payer_entity_id
                     );

               end if;
                                    
               if v_payer_entity_id = v_bill_plan_entity_id then
                    
                    -- get the placeholder of reference
                    v_payer_placeholder := pkg_os_object_io.fn_object_bv_get
                                           (
                                               in_session_id,
                                               in_transaction_id,
                                               v_ptp_payer_id,
                                               33043648 -- added to billing constant
                                           );
                                           
                    v_bill_plan_freq_value := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        in_bill_plan_id,
                                                        gbv_PmntArrangementTiming
                                                   );

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Bill Plan Frequency: ' || v_bill_plan_freq_value
                          );

                    end if;

                    if v_payer_placeholder = in_bill_plan_id then
                         
                         return g_Yes;
                    
                    elsif v_policy_bill_plan_tf = 'T' then
                         
                         if v_bill_plan_policy_id is not null
                            and
                            v_bill_plan_policy_id = v_policy_id
                         then
                              
                              if in_modified_bill_plan_list_tf = 'Y'
                                 and 
                                 v_allow_cpp_with_end_tf = 'F'
                                 and
                                 v_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                              then
                                   
                                   v_chosen_pay_plan := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_ptp_payer_id,
                                                             32705024
                                                        );
                                                        
                                   v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_chosen_pay_plan,
                                                                 gbv_PaymentPlanMDID
                                                            );
                                                                 
                                   v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                                     (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_chosen_pay_plan,
                                                                           gbv_PaymentPlanTimingMDID
                                                                      ); 
                                                                      
                                   if v_bill_plan_freq_value = v_pay_plan_payment_freq_value then
                                        return g_Yes;                                   
                                   else
                                        return g_No;
                                   end if;
                                   
                              else                                   
                                   return g_Yes;                                   
                              end if;
                              
                         else                              
                              return g_No;                              
                         end if;
                         
                    else
                             
                         if in_modified_bill_plan_list_tf = 'Y'
                            and 
                            v_allow_cpp_with_end_tf = 'F'
                            and
                            v_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                         then
                              
                              v_chosen_pay_plan := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_ptp_payer_id,
                                                        32705024
                                                   );
                                                   
                              v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_chosen_pay_plan,
                                                            gbv_PaymentPlanMDID
                                                       );
                                                            
                              v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                                (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_chosen_pay_plan,
                                                                      gbv_PaymentPlanTimingMDID
                                                                 ); 
                                                                 
                              if v_bill_plan_freq_value = v_pay_plan_payment_freq_value then

                                    return g_Yes;

                              end if;
                              
                         else
                              
                              pkg_os_object_search.sp_object_children_of_type_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ptp_payer_id,
                                   gObjType_PaymentPlan,
                                   v_payment_plan_list
                              );

                              v_index := v_payment_plan_list.first;

                              while v_index is not null loop

                                   v_pay_plan_id := v_payment_plan_list(v_index);

                                   v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                                     (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_pay_plan_id,
                                                                           gbv_PaymentPlanTimingMDID
                                                                      );

                                   --OSPRODUCT-14611 Start
                                   v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_pay_plan_id,
                                                                      gbv_PaymentPlanMDID
                                                                 );

                                   v_valid_payment_plan := nvl(pkg_db_payplan_modify.fn_restriction_payplan_tf
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_ptp_payer_id,
                                                                      v_pay_plan_id,
                                                                      v_payment_plan_md_id
                                                                 ),'T');
                                                                 
                                   if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Pay Plan ID: ' || v_pay_plan_id ||
                                             '.. Pay Plan Payment Frequency Value: ' || v_pay_plan_payment_freq_value     ||
                                             '.. Payment Plan MD ID: ' || v_payment_plan_md_id       ||
                                             '.. Valid Payment Plan: ' || v_valid_payment_plan
                                         );
                                   end if;
                                   
                                   --OSPRODUCT-14611 end
                                   if v_bill_plan_freq_value = v_pay_plan_payment_freq_value and v_valid_payment_plan = 'F' then

                                         return g_Yes;

                                   end if;

                                   v_index := v_payment_plan_list.next(v_index);

                              end loop;
                                                   
                         end if;
                         
                    end if;
                    
                    return g_No;
               
               end if;
               
               v_payer_index := v_ptp_payer_list.next (v_payer_index);

          end loop;
          
     else
          
          v_bill_plan_freq_value := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_bill_plan_id,
                                         gbv_PmntArrangementTiming
                                    );
                                    
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Bill Plan Frequency: ' || v_bill_plan_freq_value
                );

          end if;
          
          if v_policy_bill_plan_tf = 'T' then             
          
               if v_bill_plan_policy_id is not null
                  and
                  v_bill_plan_policy_id = v_policy_id 
               then
                    
                    if in_modified_bill_plan_list_tf = 'Y'
                       and
                       v_allow_cpp_with_end_tf = 'F'
                       and
                       v_trx_type_id = 4
                    then
                    
                         v_chosen_pay_plan := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_action_object_id,
                                                   212021
                                              );
                                                        
                         v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_chosen_pay_plan,
                                                       gbv_PaymentPlanMDID
                                                  );
                                                                 
                         v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_chosen_pay_plan,
                                                                 gbv_PaymentPlanTimingMDID
                                                            ); 
                                                                      
                         if v_bill_plan_freq_value = v_pay_plan_payment_freq_value then
                              
                              return g_Yes;
                               
                         else
                              return g_No;

                         end if;
                         
                    else
                         return g_Yes;
                    
                    end if;
                               
               else
                    
                    return g_No;
                    
               end if;
                                    
          else
               
               if in_modified_bill_plan_list_tf = 'Y'
                  and
                  v_allow_cpp_with_end_tf = 'F'
                  and
                  v_trx_type_id = 4
               then
                    
                    v_chosen_pay_plan := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_action_object_id,
                                              212021
                                         );
                                                   
                    v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_chosen_pay_plan,
                                                  gbv_PaymentPlanMDID
                                             );
                                                            
                    v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_chosen_pay_plan,
                                                            gbv_PaymentPlanTimingMDID
                                                       ); 
                                                                 
                    if v_bill_plan_freq_value = v_pay_plan_payment_freq_value then

                          return g_Yes;

                    end if;
                         
               else
                         
                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_action_object_id,
                         gObjType_PaymentPlan,
                         v_payment_plan_list
                    );

                    v_index := v_payment_plan_list.first;

                    while v_index is not null loop

                         v_pay_plan_id := v_payment_plan_list(v_index);

                         v_pay_plan_payment_freq_value := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_pay_plan_id,
                                                                 gbv_PaymentPlanTimingMDID
                                                            );

                         --OSPRODUCT-14611 Start
                         v_payment_plan_md_id     :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_pay_plan_id,
                                                            gbv_PaymentPlanMDID
                                                       );

                         v_valid_payment_plan     :=   nvl(pkg_db_payplan_modify.fn_restriction_payplan_tf
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_action_object_id,
                                                            v_pay_plan_id,
                                                            v_payment_plan_md_id
                                                       ),'T');
                                                            
                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Action Object ID: ' || v_action_object_id ||
                                   '.. Pay Plan Payment Frequency Value: '     || v_pay_plan_payment_freq_value     ||
                                   '.. Payment Plan MD ID: '      || v_payment_plan_md_id       ||
                                   '.. Valid Payment Plan: ' || v_valid_payment_plan
                               );
                         end if;
                              
                         --OSPRODUCT-14611 end
                         if v_bill_plan_freq_value = v_pay_plan_payment_freq_value and v_valid_payment_plan = 'F' then

                               return g_Yes;

                         end if;

                         v_index := v_payment_plan_list.next(v_index);

                    end loop;

               end if;
               
          end if;
                         
     end if;

     return g_No;

end fn_bill_plan_eligible_tf;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_get_ptp_profile
--
--   %USAGE
--        The procedure will get the profile object CTF and payment mode from PTP.
--
--   %ALGORITHM
--        Not specified.
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_policy_image_id                  Action Object ID -- PTP ID
--   %PARAM    out_payment_mode                    Profile Mode
--   %PARAM    out_ctf_id                          Profile (CTF Object)
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_get_ptp_profile
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_image_id                 in             object.object_id%type,
     out_payment_mode                   out            char,
     out_ctf_id                         out            object.object_id%type     
)
is
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_get_ptp_profile';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
          
     v_action_object_type_id            object_type.object_type_id%type;
     v_profile_object_type_id           object_type.object_type_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_master_policy_id                 object.object_id%type;
     v_ctf_id                           object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_policy_prior_term_id             object.object_id%type;
     --OSPRODUCT-2459
     v_chosen_bill_plan_id              object.object_id%type;
     v_payment_mode_id                  object_bv_value.business_variable_value%type; 
     v_payment_type                     object_bv_value.business_variable_value%type;
     
     v_change_pay_profile_tf            char(1);
     
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_image_id
                                );
                                
     if v_action_object_type_id != pkg_os_constant.gobjType_PolicyTrxPolicy then
          
          out_payment_mode := null;
          out_ctf_id       := null;
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Please pass PTP object ID.. Passed in object ID: ' || in_policy_image_id ||
               '.. Object Type: '                                     || v_action_object_type_id
          );
     
     end if;
     
     v_change_pay_profile_tf := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_image_id,
                                     gbv_PTPChangePayProfileTF
                                );
                                
     -- If change pay profile is null  
     if v_change_pay_profile_tf is null then
          
          -- OSPRODUCT-2459
          -- try getting it from the asoociated Bill Plan                                     
          v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_image_id,
                                        gbv_Ref_PTPAssciatdPmntArngmnt
                                   );
                                                  
          if v_chosen_bill_plan_id is not null then
               
               v_ctf_id := pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                v_chosen_bill_plan_id,
                                gbv_Ref_PmntArrangementCTF
                           );
                                                  
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Profile from current bill plan: ' || v_ctf_id
                    );

               end if;
                         
          else
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Calculating from prior term: ' || v_policy_prior_term_id
                    );

               end if;
                                             
               -- Get ptp
               v_master_policy_id := pkg_os_object.fn_object_parent_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_transaction_id
                                       );               
                                        
               v_policy_prior_term_id := pkg_db_functions.fn_get_policy_prior_term
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_master_policy_id
                                         );
                                                                       
               if v_policy_prior_term_id is not null then
                                                            
                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policy_prior_term_id,
                                          gbv_Ref_TermPrefPmntProfile
                                     ),
                                     gbv_PPUCashTransferProfUSed
                                );
                                                            
               end if;                                           
                                                  
          end if;
          
     end if;
     
     if v_ctf_id is null then -- getting default name during quote bind
          
          v_policy_transaction_id := pkg_os_object.fn_object_parent_get
                                     (
                                          in_session_id, 
                                          in_transaction_id, 
                                          in_policy_image_id
                                     );
                             
          v_payment_mode_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_image_id,
                                    211929 -- Down Payment Mode
                               );
                               
          if v_session_control.gLogging_Full then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Policy Image ID: ' || in_policy_image_id ||
                    '.. Policy Trx ID: '   || v_policy_transaction_id  ||
                    '.. PTP Payment Mode: '|| v_payment_mode_id  
               );
               
          end if;
          
          out_payment_mode := v_payment_mode_id;
                    
          if v_payment_mode_id = gllv_BillMe then          
                                   
               v_ctf_id := null;
                    
          end if;
                    
          if v_payment_mode_id = gllv_Card then

               v_payment_type := pkg_os_object_io.fn_object_bv_get 
                                 (
                                      in_session_id, 
                                      in_transaction_id, 
                                      in_policy_image_id, 
                                      gbv_PTPCCProfileNewOrExisting
                                 );

               if v_payment_type = gllv_PTPProfExisting then

                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_image_id,
                                     gbv_Ref_PTPCurrentProfile
                                );
                    
                    v_profile_object_type_id := pkg_os_object.fn_object_type_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_ctf_id
                                                );
                                                            
                    if v_profile_object_type_id = pkg_db_constant.gObjType_PaymentProfileUsage then                    
                                                       
                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_ctf_id,
                                                  gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                             );
                                                  
                    elsif v_profile_object_type_id != pkg_db_constant.gObjType_CashTransferProfile then
                         
                         out_payment_mode := null;
                         out_ctf_id       := null;
                         
                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Profile Object not found, hence returning..'
                         );
                                                                      
                    end if;

               end if;

               if v_payment_type = gllv_PTPProfNew then

                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_policy_transaction_id,
                                     gbv_Ref_PTPlchldrCTFForCC
                                );
                                
               end if;

          end if;
                    
          if v_payment_mode_id = gllv_EFT then

               v_payment_type := pkg_os_object_io.fn_object_bv_get 
                                 (
                                      in_session_id, 
                                      in_transaction_id, 
                                      in_policy_image_id, 
                                      gbv_PTPEFTProfileNewOrExisting
                                 );

               if v_payment_type = gllv_PTPProfExisting then

                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_image_id,
                                     gbv_Ref_PTPCurrentProfile
                                );
                    
                    v_profile_object_type_id := pkg_os_object.fn_object_type_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_ctf_id
                                                );
                                                            
                    if v_profile_object_type_id = pkg_db_constant.gObjType_PaymentProfileUsage then                    
                                                       
                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ctf_id,
                                          gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                     );
                                                  
                    elsif v_profile_object_type_id != pkg_db_constant.gObjType_CashTransferProfile then
                         
                         out_payment_mode := null;
                         out_ctf_id       := null;
                         
                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Profile Object not found, hence returning..'
                         );
                                                                      
                    end if;

               end if;

               if v_payment_type = gllv_PTPProfNew then

                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_policy_transaction_id,
                                     gbv_Ref_PTPlchldrCTFForEFT
                                );

               end if;

          end if; 
          
     end if;
               
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Payment Mode: ' || v_payment_mode_id ||
               '.. Payment Type: ' || v_payment_type ||
               '.. CTF ID: '       || v_ctf_id
          );

     end if;
               
     out_ctf_id        := v_ctf_id;
     out_payment_mode  := v_payment_mode_id;
               
end sp_get_ptp_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_get_ptppayer_profile
--
--   %USAGE
--        The procedure will get the profile from PTPPayer.
--
--   %ALGORITHM
--        Not specified.
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_ptp_payer_id                     Action Object ID -- PTPPayer ID
--   %PARAM    out_payment_mode                    Profile Mode
--   %PARAM    out_ctf_id                          Profile (CTF Object)
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_get_ptppayer_profile
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_payer_id                    in             object.object_id%type,
     out_payment_mode                   out            char,
     out_ctf_id                         out            object.object_id%type     
)
is
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_get_ptppayer_profile';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
          
     v_action_object_type_id            object_type.object_type_id%type;     
     v_billing_account_id               object.object_id%type;
     v_ctf_id                           object.object_id%type;
     v_policy_prior_term_id             object.object_id%type;
     v_policy_prior_termpayer_id        object.object_id%type;
     v_associated_term_payer            object.object_id%type;
     v_master_policy_id                 object.object_id%type;
     --OSPRODUCT-2459
     v_chosen_bill_plan_id              object.object_id%type;
     v_change_pay_profile_tf            char(1);
     
     v_billing_account_type_id          object_bv_value.business_variable_value%type;
     v_payment_mode_id                  object_bv_value.business_variable_value%type;
     v_payment_type                     object_bv_value.business_variable_value%type;
     
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_ptp_payer_id
                                );
                                
     if v_action_object_type_id != pkg_db_constant.gobjType_PTPPayer then
          
          out_payment_mode := null;
          out_ctf_id       := null;
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Please pass PTPPayer object ID.. Passed in object ID: ' || in_ptp_payer_id ||
               '.. Object Type: '                                          || v_action_object_type_id
          );
     
     end if;
     
     -- Get Billing Account
     v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_ptp_payer_id,
                                        pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                   ),
                                   pkg_db_constant.gObjType_BillingAccount
                              );
                              
     v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_billing_account_id,
                                       pkg_db_billing_modify.gbv_BillingAccountType
                                  ); -- BA type
                                  
     if v_billing_account_id is null then
          
          out_payment_mode := null;
          out_ctf_id       := null;
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Associated Billing Account not found for the payer: ' || in_ptp_payer_id
          );
          
     else
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payer ID: ' || in_ptp_payer_id ||
                    '.. Billing Account ID: ' || v_billing_account_id ||
                    '.. Account Type: '       || v_billing_account_type_id
               );

          end if;
          
     end if;
     
     if v_billing_account_id is not null 
        and 
        v_billing_account_type_id = pkg_db_constant.gBillingAcType_Customer 
     then
          
          -- OSPRODUCT-2459 
          v_change_pay_profile_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_ptp_payer_id,
                                          gbv_PTPPayerChangePayProfileTF
                                     );
                                     
          if v_change_pay_profile_tf is null then
               
               -- OSPRODUCT-2459               
               -- try getting it from Bill Plan
               v_chosen_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_ptp_payer_id,
                                             gbv_Ref_PTPayerChosenBillPlan
                                        );
               
               if v_chosen_bill_plan_id is not null then
                                        
                    v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_chosen_bill_plan_id,
                                     gbv_Ref_PmntArrangementCTF
                                );
                                                            
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Profile from current bill plan: ' || v_ctf_id
                         );

                    end if;
                                   
               else
                    
                    -- Get ptp
                    v_master_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_ptp_payer_id,
                                                 pkg_os_constant.gobjType_Policy
                                            );               
                                        
                    v_policy_prior_term_id := pkg_db_functions.fn_get_policy_prior_term
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_master_policy_id
                                              );
                                                                       
                    if v_policy_prior_term_id is not null then
                                                  
                         begin
                              
                              select
                                   term_payer.policy_term_payer_id
                              into
                                   v_policy_prior_termpayer_id
                              from
                                   dragon_policy_term_payer term_payer
                              where
                                   term_payer.policy_term_id = v_policy_prior_term_id
                              and
                                   term_payer.payer_billing_account_id = v_billing_account_id;
                                   
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Getting from prior term: ' || v_policy_prior_termpayer_id ||
                                        '.. Prior Term: '              || v_policy_prior_term_id      ||
                                        '.. Master Policy ID: '        || v_master_policy_id
                                   );

                              end if;
                                   
                              v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               pkg_os_object_io.fn_object_bv_get 
                                               (
                                                    in_session_id, 
                                                    in_transaction_id, 
                                                    v_policy_prior_term_id, 
                                                    pkg_db_profiles.gbv_TermPayerPrefPayProf
                                               ),
                                               gbv_PPUCashTransferProfUSed
                                          );
                                                  
                         exception
                              
                              when others then
                                   
                                   v_ctf_id := null;
                                                                           
                         end;                         
                                                       
                    end if;
                                        
               end if;
                          
          end if;
          
          if v_ctf_id is null then -- NB flag is not set and trx not yet processed.
                                                                        
               -- Get the down payment mode
               v_payment_mode_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_ptp_payer_id,
                                         pkg_db_profiles.gbv_PTPPayerDwnPmntMode
                                    );
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Payment Mode: ' || v_payment_mode_id
                    );

               end if;
                                   
               -- Payment Mode - Cheque
               if v_payment_mode_id = gllv_BillMe then

                    v_payment_type := null;
                    v_ctf_id := null;

               end if;

               -- Payment Mode - Card
               if v_payment_mode_id = gllv_Card then
                                                     
                    v_payment_type := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_ptp_payer_id,
                                           pkg_db_profiles.gbv_PTPPayerCardProfileType
                                      );

                    if v_payment_type = gllv_PTPProfExisting then -- Existed CC

                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_ptp_payer_id,
                                          pkg_db_profiles.gbv_Ref_PTPPayerCurrentProfile -- Should be set as initialization rule
                                     );
                                                                 
                         if pkg_os_object.fn_object_type_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ctf_id
                                   ) = pkg_db_constant.gObjType_PaymentProfileUsage
                         then
                                                       
                              v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_ctf_id,
                                               gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                          );
                                                                      
                         end if;

                    end if;

                    if v_payment_type = gllv_PTPProfNew then -- Existed CC

                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_ptp_payer_id,
                                          pkg_db_profiles.gbv_Ref_PTPPayerCardPlchldr          --33993546  _Ref_Placeholder CashTransferProfile for CC
                                     );

                    end if;

               end if;
                                   
               -- Payment Mode - EFT
               if v_payment_mode_id = gllv_EFT then

                    v_payment_type := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_ptp_payer_id,
                                           pkg_db_profiles.gbv_PTPPayerEFTProfileType
                                      );

                    if v_payment_type = gllv_PTPProfExisting then -- Existed CC

                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_ptp_payer_id,
                                          pkg_db_profiles.gbv_Ref_PTPPayerCurrentProfile -- Should be set as initialization rule
                                     );
                                                                 
                         if pkg_os_object.fn_object_type_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ctf_id
                                   ) = pkg_db_constant.gObjType_PaymentProfileUsage
                         then
                                                       
                              v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_ctf_id,
                                               gbv_PPUCashTransferProfUSed -- Should be set as initialization rule
                                          );
                                                                      
                         end if;

                    end if;

                    if v_payment_type = gllv_PTPProfNew then -- Existed CC

                         v_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_ptp_payer_id,
                                          pkg_db_profiles.gbv_Ref_PTPPayerEFTPlchldr          --33993546  _Ref_Placeholder CashTransferProfile for CC
                                     );

                    end if;

               end if;
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Payment Type: ' || v_payment_type ||
                         '.. Profile: '      || v_ctf_id
                    );

               end if;
			 
          end if;             
           
     else
          
          -- Get BA preferred profile
          v_ctf_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                v_billing_account_id,
                                gbv_BA_PrefPaymentProfile
                           ),
                           gbv_PPUCashTransferProfUSed
                      );
                      
     end if;
                                   
     if v_ctf_id is not null then
                                             
          v_payment_mode_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_ctf_id,
                                    gbv_CTFPaymentMode
                               );
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Payment Mode: ' || v_payment_mode_id ||
               '.. CTF ID: '       || v_ctf_id
          );

     end if;
               
     out_ctf_id        := v_ctf_id;
     out_payment_mode  := v_payment_mode_id;
               
end sp_get_ptppayer_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_billplan_profile_detail
--
--   %USAGE
--        Given CTF ID retuns the profile details
--        Mode = Bill; Bill ME
--        Mode = Card; Card Num - Expiry month - Expiry year
--        Mode = EFT; ACC Num - Routing num / Acc Num - Bank ID -  Bank transit num
--
--   %ALGORITHM
--         % Not Specified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_ctf_object_id              CTF object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_billplan_profile_detail
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,     
     in_ctf_object_id                   in             object.object_id%type,
     in_payment_mode_id                 in             number default null
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name || 'fn_get_billplan_profile_detail';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_attribute_value                  object_bv_value.business_variable_value%type := null;
     v_payment_mode_id                  object_bv_value.business_variable_value%type;
                
begin
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..CTF ID: ' || in_ctf_object_id ||
               '..Payment Mode ID: ' || in_payment_mode_id
          );

     end if;
     
     if in_payment_mode_id = gllv_BillMe then
          
          return pkg_os_lookup.fn_lookup_list_text_get(pkg_db_functions.PaymentModeList,pkg_db_functions.gPaymentMode_BillMe); --OSBILLING-7900
          
     elsif in_ctf_object_id is not null then
                        
          v_payment_mode_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id, 
                                    in_transaction_id, 
                                    in_ctf_object_id, 
                                    gbv_CTFPaymentMode
                               );
                                                  
          if v_payment_mode_id = gllv_BillMe then
               
               v_attribute_value := pkg_os_lookup.fn_lookup_list_text_get(pkg_db_functions.PaymentModeList,pkg_db_functions.gPaymentMode_BillMe) ; --OSBILLING-7900
                              
          elsif v_payment_mode_id in (4, gllv_Card) then
                              
               v_attribute_value := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFCardNumber )
                                    || ' - ' ||
                                    pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFCardExpYear )  
                                    || ' - ' ||
                                    pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFCardExpMonth );
                                                   
          elsif v_payment_mode_id in (5, gllv_EFT)
                and
                pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTCountryID ) = 1
          then
                                             
               v_attribute_value := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTAccNumber ) 
                                    || ' - ' ||
                                    pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTRoutingNum );
                                                                                      
          elsif v_payment_mode_id in (5, gllv_EFT)
                and
                pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTCountryID ) != 1
          then
                                             
               v_attribute_value := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTAccNumber ) 
                                    || ' - ' ||
                                    pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTBankID )
                                    || ' - ' ||
                                    pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_ctf_object_id, gbv_CTFEFTBankTransitNum );
                                                   
          else
                              
               v_attribute_value := 'Mode not supported';                
                         
          end if;
          
     else
          
          v_attribute_value := null;
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Payment Mode or CTF not provided..'
          );
          
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Bill Plan Profile: ' || v_attribute_value
          );

     end if;
     
     return v_attribute_value;
     
end fn_get_billplan_profile_detail;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_payment_profile
--
--   %USAGE
--        Will return the profile detail in format used in Bill Plan Default Name and Bill Plan key
--        Get the payment profile for PTP or PTP Payer
--
--   %ALGORITHM
--         % Not Specified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           PTP/PTP Payer ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_payment_profile
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,     
     in_action_object_id                in             object.object_id%type        
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_payment_profile';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_payment_mode_id                  object_bv_value.business_variable_value%type;
     v_attribute_value                  object_bv_value.business_variable_value%type := null;
     v_change_pay_profile_tf            object_bv_value.business_variable_value%type; 
     v_source_bv_path                   object_bv_value.business_variable_value%type;          
     
     v_action_object_type_id            object_type.object_type_id%type;
                
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_action_object_type_id not in (pkg_os_constant.gobjType_PolicyTrxPolicy, pkg_db_constant.gobjType_PTPPayer) then
                    
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Object type not supported..'
          );
          
          return null;
     
     end if;
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action object id: '      || in_action_object_id ||
               '..Action object type id: ' || v_action_object_type_id
          );

     end if;
     
     begin
          
          select
               source_bv_path
          into
               v_source_bv_path
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = v_action_object_type_id
          and
               business_variable_id = gbv_Ref_PmntArrangementCTF;
     
     exception
          when others then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'No configuration found for the profile attribute..'
               );
               
               raise;
               
     end;
     
     if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then                
                         
          v_change_pay_profile_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id, 
                                          in_transaction_id, 
                                          in_action_object_id, 
                                          gbv_PTPChangePayProfileTF
                                     );
     
     else
               
          v_change_pay_profile_tf := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id, 
                                          in_transaction_id, 
                                          in_action_object_id, 
                                          gbv_PTPPayerChangePayProfileTF
                                     );
          
     end if;
     
     if v_attribute_value is null then
                                               
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Change Pay Profile flag: ' || v_change_pay_profile_tf
               );

          end if;
                         
          if v_change_pay_profile_tf is null then
                              
               v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_action_object_id,
                                         rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor)
                                    );
                                                   
               v_payment_mode_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_attribute_value,
                                         gbv_CTFPaymentMode
                                    );
                              
                                                   
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Profile (CTF) ID from the source path configuration: ' || v_attribute_value ||
                         '.. Payment Mode: ' || v_payment_mode_id
                    );

               end if;
                         
          end if;
          
          if v_attribute_value is null then                                   
								   
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Calculating profile from action object id.. ' 
                    );

               end if;
               
               if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then  
                                   
                    sp_get_ptp_profile
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         v_payment_mode_id,                  
                         v_attribute_value
                    );
                    
               else
                    
                    sp_get_ptppayer_profile
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         v_payment_mode_id,                  
                         v_attribute_value
                    );
                    
               end if;
                         
          end if;
     
     end if;
     
     if v_payment_mode_id = gllv_BillMe then
          
          v_attribute_value := fn_get_billplan_profile_detail
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_attribute_value,
                                    v_payment_mode_id
                               );
                               
     else
          
          if pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_attribute_value) = pkg_db_constant.gObjType_CashTransferProfile then 
          
               v_attribute_value := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_attribute_value,
                                         gbv_CTFProfileDetail
                                    );
                                    
          else
               
               v_attribute_value := null;
                                    
          end if;
                               
     end if;                          
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Profile Detail: ' || v_attribute_value
          );

     end if;
     
     return v_attribute_value;
     
end fn_get_payment_profile;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_payment_plan
--
--   %USAGE
--        Will return the payment plan detail in format used in Bill Plan Default Name and Bill Plan key
--        Get the payment profile for PTP or PTP Payer
--
--   %ALGORITHM
--         % Not Specified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           PTP/PTP Payer ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_payment_plan
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,     
     in_action_object_id                in             object.object_id%type        
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_payment_plan';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_pay_plan_id                      object.object_id%type;
     v_ptp_id                           object.object_id%type;
     v_attribute_value                  object_bv_value.business_variable_value%type;     
     v_change_pay_plan_tf               object_bv_value.business_variable_value%type;
     v_source_bv_path                   object_bv_value.business_variable_value%type;
     
     v_action_object_type_id            object_type.object_type_id%type;
                
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_action_object_type_id not in (pkg_os_constant.gobjType_PolicyTrxPolicy, pkg_db_constant.gobjType_PTPPayer) then
                    
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Object type not supported..'
          );
          
          return null;
     
     end if;
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action object id: '      || in_action_object_id ||
               '..Action object type id: ' || v_action_object_type_id
          );

     end if;
     
     begin
          
          select
               source_bv_path
          into
               v_source_bv_path
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = v_action_object_type_id
          and
               business_variable_id = gbv_PmntArrangementTiming;
               
     exception
          
          when others then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'No configuration found for the pay plan attribute..'
               );
               
               raise;
               
     end;
     
     if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then                
                         
          v_ptp_id := in_action_object_id;
          
          -- get modified pay plan indicator
          v_change_pay_plan_tf := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id, 
                                       in_transaction_id, 
                                       v_ptp_id, -- get the ptp id 
                                       gbv_PTPChangePayPlanTF
                                  );
     
     else
          
          v_ptp_id := pkg_os_object.fn_object_parent_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_action_object_id
                      );                    
				 
          -- get modified pay plan indicator
          v_change_pay_plan_tf := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id, 
                                       in_transaction_id, 
                                       in_action_object_id, -- get the ptp id 
                                       gbv_PTPPayerChangePayPlanTF
                                  );
     
     end if;
                                                                                    
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Change Pay Plan flag:' || v_change_pay_plan_tf
          );

     end if;
                                                      
     if v_change_pay_plan_tf = gllv_ChangePayPlan then
          
          if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then
                    
               v_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id, 
                                     in_transaction_id, 
                                     in_action_object_id, 
                                     gbv_Ref_PTPModPaymentPlan
                                );
                                
          else
               
               v_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id, 
                                     in_transaction_id, 
                                     in_action_object_id, 
                                     gbv_Ref_PTPayerModPayPlan
                                );
          
          end if;
                                                   
          -- Payment Plan Timing ID
          v_attribute_value := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_pay_plan_id,
                                    gbv_PaymentPlanTimingMDID
                               );
                                              
     end if;
                    
     if v_pay_plan_id is null then
                         
          v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_action_object_id,
                                    rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor)
                               );
                                              
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Pay Plan Timing ID: ' || v_attribute_value
          );

     end if;
     
     return v_attribute_value;
     
end fn_get_payment_plan;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_bill_plan_key
--
--   %USAGE
--        Given a Bill Plan ID, the function returns the unique key of the plan 
--        consiting of the attribute values as configured in PMNT_ARNGMNT_INSTALLATION table
--        Configuration is read as per the object type id (PTP or PTP Payer)
--
--   %ALGORITHM
--         % Not Specified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           PTP ID / PTP Payer ID
--   %PARAM    in_bill_plan_id               Bill Plan ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_bill_plan_key
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,     
     in_action_object_type_id           in             object_type.object_type_id%type, -- PTP/PTPPayer ID    
     in_bill_plan_id                    in             object.object_id%type
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_bill_plan_key';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_attribute_value                  object_bv_value.business_variable_value%type;     
     v_key                              object_bv_value.business_variable_value%type;
     v_target_bv_id                     object_bv_value.business_variable_value%type;
     v_attribute_name                   object_bv_value.business_variable_value%type;
     
     v_action_object_type_id            object_type.object_type_id%type;
     v_dm_update_tf                     char(1) := 'T';
     
     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          and 
               business_variable_id <> gbv_PaymentArrangementName
          order by
                pa_installation_id;
                
begin
     
     v_action_object_type_id := in_action_object_type_id;
                                
     if v_action_object_type_id not in (pkg_os_constant.gobjType_PolicyTrxPolicy, pkg_db_constant.gobjType_PTPPayer) then
                    
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Bill Plan Setup Error - Object type not supported..'
          );
          
          raise BILL_PLAN_SETUP_ERROR;
     
     end if;
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Bill Plan ID: '      || in_bill_plan_id ||
               'Action object type id: ' || v_action_object_type_id
          );

     end if;
	 
     -- OSPRODUCT-3423 | Performance fix
     begin
          
          select
               billplan.bill_plan_key
          into
               v_key
          from
               dragon_bill_plan billplan
          where
               billplan.bill_plan_id = in_bill_plan_id;
               
     exception
          when no_data_found then
               v_dm_update_tf := 'F';
     end;
                        
     if in_bill_plan_id is not null 
        and
        (
             v_dm_update_tf = 'F'
             or
             v_key is null -- OSPRODUCT-3927
        )
     then
          
          for v_pa_installation in c_pa_installation (v_action_object_type_id) loop
               
               v_attribute_value := null;
          
               if v_pa_installation.business_variable_id is not null then

                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_bill_plan_id,
                                              v_pa_installation.business_variable_id
                                         );
                                         
               end if;             
                              
               if v_attribute_value is not null
                  and
                  v_pa_installation.business_variable_id = gbv_Ref_PmntArrangementCTF 
               then
                                             
                    v_attribute_value := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_attribute_value,
                                              gbv_CTFProfileDetail
                                         );
               end if;
               
               if v_pa_installation.business_variable_id in (gbv_PmntArrangementTiming, gbv_Ref_PmntArrangementCTF)
                  and
                  v_attribute_value is null
               then
                         
                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'New Bill Plan Setup Error - Attribute not found..' || 
                         '.. Attribute Name: ' || v_pa_installation.attribute_name
                    );
                         
                    raise BILL_PLAN_SETUP_ERROR;
                    
               end if;
               
               if v_attribute_value is null then
                    
                    v_attribute_value := 'Not Specified';
                    
               end if;
               
               if v_key is null then
                    
                    v_key := v_pa_installation.attribute_name || ' - ' || v_attribute_value;
               
               else
                    v_key := v_key || ' : ' || v_pa_installation.attribute_name || ' - ' || v_attribute_value;
               
               end if;
               
          end loop;
          
          v_attribute_value := null;
          
          -- Get the name     
          begin
               
               select
                    business_variable_id,
                    attribute_name
               into
                    v_target_bv_id,
                    v_attribute_name
               from
                    pmnt_arngmnt_installation
               where
                    active_tf = 'T'
               and
                    context_object_type = v_action_object_type_id
               and
                    business_variable_id = gbv_PaymentArrangementName;
                    
               v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_bill_plan_id,
                                         v_target_bv_id
                                    );
                         
               if v_attribute_value is null then
                              
                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'New Bill Plan Setup Error - Attribute not found..' || 
                         '.. Attribute Name: ' || v_attribute_name
                    );
                         
                    raise BILL_PLAN_SETUP_ERROR;
               
               else
                    
                    v_key := v_key || ' : ' || v_attribute_name || ' - ' || v_attribute_value;
                              
               end if;
               
          end;
          
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Bill Plan ID: ' || in_bill_plan_id ||
               '..Key: '        || v_key
          );

     end if;
     
     return v_key;
     
end fn_get_bill_plan_key;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_new_billplan_default_nm
--
--   %USAGE
--        Given Policy Image ID/PTP PAyer retuns the default name for the payment arrangement
--        <<Customer Name>> | <<Payment Plan>> | <<Payment Mode>> | Withdrawal Day: <<Preferred Withdrawal Day>>
--
--   %ALGORITHM
--         Using PTP ID
--               1. Get the customer Name
--               2. Get the payment plan timing name from chosen payment plan object
--               3. Get the preferred Payment Profile Mode
--               4. Get the preferred withdrawal Day, if null , get the billing day of the 
--                  the first installment
--               5. Concatenate the above values to get a default name
--               6. Flavor 2 - if provided a bill plan id the function will get the attribute values
--                  as stored in the bill plan object to create the default name.
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_image_id            PTP ID
--   %PARAM    in_modify_payplan_tf          T if Pay plan is modified
--   %PARAM    in_bill_plan_id               If default name is required for a bill plan
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- 1433
function fn_get_new_billplan_default_nm
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_profile_details                 in out         object_bv_value.business_variable_value%type,
     in_payplan_details                 in out         object_bv_value.business_variable_value%type  
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_new_billplan_default_nm';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_ptp_id                           object.object_id%type;
     v_ptp_transaction_id               object.object_id%type;
     v_exchange_id                      object.object_id%type; 
     --OSPRODUCT-3423
     v_policy_term_id                   object.object_id%type := null;                             
     
     v_action_object_type_id            object_type.object_type_id%type;
     v_pt_type_id                       object_type.object_type_id%type;
     
     v_customer_name                    object_bv_value.business_variable_value%type;
     v_policy_number                    object_bv_value.business_variable_value%type;                  
     
     v_bill_plan_frequency_id           object_bv_value.business_variable_value%type;
     v_bill_plan_frequency              object_bv_value.business_variable_value%type;
     v_bill_plan_withdrawal_day         object_bv_value.business_variable_value%type;      
     v_bill_plan_pmnt_mode              object_bv_value.business_variable_value%type;     
     v_entity_type                      object_bv_value.business_variable_value%type;
     v_default_name                     object_bv_value.business_variable_value%type;
     v_payer_entity                     object.object_id%type;
     
     v_bill_method                      char(1) := null;--1. Policy, 2.Account
     v_bill_method_noncust              char(1) := null;
     v_billing_account_type_id          number;
     
begin
     
     -- Get the exchange
     v_exchange_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_session_id,
                           pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                      );
     
     -- Get the Billing Method
v_bill_method := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           v_exchange_id,
                           gbv_ExchangeBillMethod-- added to pkg spec
                      );
                      
     -- Get the Billing Method
     -- 2358
     v_bill_method_noncust := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_exchange_id,
                                             gbv_ExchangeBillMethodNonCust-- added to pkg spec
                                        ), g_Account );
     
     -- Get action object type
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action Object ID: '        || in_action_object_id ||
               '..Action object type id: '   || v_action_object_type_id ||
               '..Profile Detail: '          || in_profile_details ||
               '..Payplan Details: '         || in_payplan_details ||
               '..Exchange ID: '             || v_exchange_id      ||
               '..Bill Method: '             || v_bill_method
          );
          
     end if;
     
     -- Get PTP
     if v_action_object_type_id = pkg_db_constant.gobjType_PTPPayer then
                                           
          -- PTP
          v_ptp_id := pkg_os_object.fn_object_parent_get
                      (
                           in_session_id, 
                           in_transaction_id, 
                           in_action_object_id
                      );
                      
          -- Payer entity
          v_payer_entity := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id,
                                 pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                            );
     
     elsif v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then 
          
          v_ptp_id := in_action_object_id;   
                             
     else
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Object type not supported.. '
          );
          
          return null;
          
     end if;
     
     -- PTP transaction
     v_ptp_transaction_id := pkg_os_object.fn_object_parent_get
                             (
                                  in_session_id, 
                                  in_transaction_id, 
                                  v_ptp_id
                             );
                             
     -- Get the transaction type
     v_pt_type_id := pkg_os_object.fn_object_type_get
                     (
                          in_session_id,
                          in_transaction_id,
                          v_ptp_transaction_id
                     );
     
     -- 1433
     -- Get policy and customer details.                  
     if v_pt_type_id = pkg_os_constant.gobjType_PolicyTransaction then
               
          select
               policy_trx_policy_number,
               primary_entity_full_name,
               pt.customer_id,
               pt.policy_term_id --OSPRODUCT-3423
          into
               v_policy_number,
               v_customer_name,
               v_ultimate_customer_id,
               v_policy_term_id
          from
               dragon_policy_trx pt
          where
               pt.policy_trx_id = v_ptp_transaction_id;
     
     else -- quote trx
          
          select
               qt.policyquote_name || '_' || v_ptp_id,
               qt.primary_entity_full_name,
               qt.customer_id
          into
               v_policy_number,
               v_customer_name,
               v_ultimate_customer_id          
          from
               dragon_policy_quote qt
          where
               qt.policyquote_id = v_ptp_id;
               
     end if;
     
     -- Get the account type
     if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then
          
          -- get primary entity
          begin
               
               select
                    cust.primary_entity_id
               into
                    v_primary_entity_id
               from
                    dragon_customer cust
               where
                    cust.customer_id = v_ultimate_customer_id;
                    
          end;
          
          /*v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_Session_id,
                                      in_transaction_id,
                                      v_ultimate_customer_id,
                                      gbv_Ref_CustPrimaryEntity
                                 );
                                 */
          begin
                                 
               select
                    ba.account_type_id
               into
                    v_billing_account_type_id
               from
                    dragon_billingaccount ba
               where
                    ba.billingaccount_id = pkg_os_object_search.fn_object_11_child_get(in_session_id, in_transaction_id, v_primary_entity_id, pkg_db_constant.gObjType_BillingAccount);
          
          exception
               
               when others then
                    
                    v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      pkg_os_object_search.fn_object_11_child_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_primary_entity_id,
                                                           pkg_db_multipayer.gObjType_BillingAccount
                                                      ),
                                                      pkg_db_billing_modify.gbv_BillingAccountType
                                                 );
                                                 
          end;                                       
               
     else
          
          begin
                                 
               select
                    ba.account_type_id,
                    ba.partner_name
               into
                    v_billing_account_type_id,
                    v_customer_name
               from
                    dragon_billingaccount ba
               where
                    ba.billingaccount_id = pkg_os_object_search.fn_object_11_child_get(in_session_id, in_transaction_id, v_payer_entity, pkg_db_constant.gObjType_BillingAccount);
          
          exception
               
               when others then
                    
                    -- Get from referenced billing account                                  
                    v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      pkg_os_object_search.fn_object_11_child_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_payer_entity,
                                                           pkg_db_multipayer.gObjType_BillingAccount
                                                      ),
                                                      pkg_db_billing_modify.gbv_BillingAccountType
                                                 );
                                                 
          end;
               
     end if;      
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Customer Name: ' || v_customer_name || 
               '.. Policy Number: ' || v_policy_number ||
               '.. Account Type: '  || v_billing_account_type_id 
          );

     end if;
     
     -- Get the payment plan         
     begin
          
          if in_payplan_details is null then
               
               v_bill_plan_frequency_id := fn_get_payment_plan
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id
                                           );
                                        
               in_payplan_details := v_bill_plan_frequency_id;
          
          else
               
               v_bill_plan_frequency_id := in_payplan_details;
               
          end if;
               
          v_bill_plan_frequency := pkg_db_payplan_modify.fn_get_payplan_timing_name 
                                   (
                                        in_session_id, 
                                        in_transaction_id, 
                                        null, 
                                        v_bill_plan_frequency_id
                                   );
                                        
          -- If null               
          if v_bill_plan_frequency is null then
                    
               v_bill_plan_frequency := 'Payment Frequency: Not Specified';
               
          end if;
               
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payment frequency: ' || v_bill_plan_frequency
               );

          end if;
               
     end;
     
     -- Get profile details          
     begin
          
          if in_profile_details is null then                  
                         
               v_bill_plan_pmnt_mode := fn_get_payment_profile
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_action_object_id
                                        );
                                              
               in_profile_details := v_bill_plan_pmnt_mode;
                                              
          else
                              
               v_bill_plan_pmnt_mode := in_profile_details;
                              
          end if;
           
          if v_bill_plan_pmnt_mode is not null then
                    
               v_bill_plan_pmnt_mode := REPLACE(v_bill_plan_pmnt_mode, '|', '-');
                         
          else
                    
               v_bill_plan_pmnt_mode := 'Payment Mode: Not Specified';
                                             
          end if;
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Payment profile: ' || v_bill_plan_pmnt_mode
               );

          end if;
               
     end;
          
     -- Get withdrawal Day
     begin
          
          if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then
               --OSPRODUCT-3423
               if v_policy_term_id is not null then
                    
                    v_bill_plan_withdrawal_day := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id, 
                                                       in_transaction_id, 
                                                       v_policy_term_id, 
                                                       gbv_TermPrefWithdrawalDay --32853540 added in spec
                                                  );
                                                  
               end if;
               
               if v_bill_plan_withdrawal_day is null then
                    
                    -- Withdrawal Day          
                    v_bill_plan_withdrawal_day := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id, 
                                                       in_transaction_id, 
                                                       in_action_object_id, 
                                                       gbv_PTPPreferredWithdrawalDay
                                                  );
               end if;
          
          else
               
               -- Withdrawal Day          
               v_bill_plan_withdrawal_day := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id, 
                                                  in_transaction_id, 
                                                  in_action_object_id, 
                                                  gbv_PTPayerPrefWithdrawalDay
                                             );
                                             
          end if;          
          
          -- If withdrawal is not provided by the user show text 'Not Specified'               
          if nvl(v_bill_plan_withdrawal_day,0) = 0 then
                    
               v_bill_plan_withdrawal_day := 'Not Specified';
               
          end if;
     
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Withdrawal Day: ' || v_bill_plan_withdrawal_day
               );

          end if;
          
     end;
     
     -- Create name
     -- 1433
     if (
             v_billing_account_type_id = g_BAAcctTypeCustomer
             and
             v_bill_method = g_Policy              
        )
        -- 2358
        or
        (
             v_billing_account_type_id not in (g_BAAcctTypeAgent, g_BAAcctTypeCustomer)
             and
             v_bill_method_noncust = g_Policy
        )
     then
          
          if v_bill_plan_withdrawal_day = 'Not Specified' then
               
               v_default_name := v_policy_number || ' | ' || v_bill_plan_frequency || ' | ' || v_bill_plan_pmnt_mode;
          else
               
               v_default_name := v_policy_number || ' | ' || v_bill_plan_frequency || ' | ' || v_bill_plan_pmnt_mode || ' | Withdrawal Day: ' || v_bill_plan_withdrawal_day;
               
          end if;
          
     else
          
          if v_bill_plan_withdrawal_day = 'Not Specified' then
               
               v_default_name := trim(v_customer_name) || ' | ' || v_bill_plan_frequency || ' | ' || v_bill_plan_pmnt_mode;
          else
               
               v_default_name := trim(v_customer_name) || ' | ' || v_bill_plan_frequency || ' | ' || v_bill_plan_pmnt_mode || ' | Withdrawal Day: ' || v_bill_plan_withdrawal_day;
               
          end if;
          
     end if;
     
     return v_default_name;
     
end fn_get_new_billplan_default_nm;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_new_bill_plan_key
--
--   %USAGE
--        Given a PTP/PTP Payer ID, the function returns the unique key of the new plan 
--        based on the attribute set at passed in object. The attributes are read from the 
--        pmnt_arngmnt_installation table and value from the action object id using source BV path
--
--   %ALGORITHM
--         % Not Specified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           PTP Payer ID
--   %PARAM    in_profile_detail             detail if already calculated
--   %PARAM    in_payplan_detail             detail if already calculated
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_new_bill_plan_key
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,     
     in_action_object_id                in             object.object_id%type,
     in_profile_details                 in out         object_bv_value.business_variable_value%type,
     in_payplan_details                 in out         object_bv_value.business_variable_value%type,
     in_old_bill_plan_key               in             object_bv_value.business_variable_value%type default null --OSPRODUCT-14807
)
return object_bv_value.business_variable_value%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_new_bill_plan_key';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_bill_plan_id                     object.object_id%type;
     v_mod_bill_plan_id                 object.object_id%type;        
       
     v_action_object_type_id            object_type.object_type_id%type;     
     v_bill_plan_new_or_existing        object_bv_value.business_variable_value%type;
     v_source_bv_path                   object_bv_value.business_variable_value%type;
     v_attribute_name                   object_bv_value.business_variable_value%type;
     v_attribute_value                  object_bv_value.business_variable_value%type;
     v_change_billplan_tf               char(1);
          
     v_key                              object_bv_value.business_variable_value%type;
     v_old_key_without_name             object_bv_value.business_variable_value%type; -- OSPRODUCT-14807
     
     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          and 
               business_variable_id <> gbv_PaymentArrangementName
          order by
                pa_installation_id;
                
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_action_object_type_id not in (pkg_os_constant.gobjType_PolicyTrxPolicy, pkg_db_constant.gobjType_PTPPayer) then
          
          -- OSPRODUCT-6719          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Bill Plan Setup - Object type not supported..'
               );
          
          end if;
          
          raise BILL_PLAN_SETUP_ERROR;
     
     end if;
                              
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action Object ID: '   || in_action_object_id ||
               '..Action object type id: ' || v_action_object_type_id ||
               '..Profile Detail: '        || in_profile_details ||
               '..Payplan Details'         || in_payplan_details
          );
          
     end if;
                        
     if in_action_object_id is not null then
               
          for v_pa_installation in c_pa_installation (v_action_object_type_id) loop
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Attribute Name: ' || v_pa_installation.attribute_name
                    );

               end if;
               
               v_attribute_value := null;        
          
               -- Get the profile
               if v_pa_installation.business_variable_id = gbv_Ref_PmntArrangementCTF then
                    
                    if in_profile_details is null then                  
                         
                         v_attribute_value := fn_get_payment_profile
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id
                                              );
                                              
                         in_profile_details := v_attribute_value;
                                              
                    else
                              
                         v_attribute_value := in_profile_details;
                              
                    end if;
                                              
                    if v_attribute_value is null then
                         
                         -- OSPRODUCT-6719
                         if v_session_control.gLogging_Full then
                              
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'New Bill Plan Setup - Profile value not found for the new key..' 
                              );
                              
                         end if;
                              
                         raise BILL_PLAN_PRF_NOT_FOUND; -- OSPRODUCT-19527                   
                    
                    end if;
                                         
               -- Get the payment plan timing
               elsif v_pa_installation.business_variable_id = gbv_PmntArrangementTiming then
                    
                    if in_payplan_details is null then
                         
                         v_attribute_value := fn_get_payment_plan
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id
                                              );
                                              
                         in_payplan_details := v_attribute_value;
                                              
                    else
                         
                         v_attribute_value := in_payplan_details;
                         
                    end if;
                    
                    if v_attribute_value is null then
                         
                         -- OSPRODUCT-6719
                         if v_session_control.gLogging_Full then
                              
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'New Bill Plan Setup - Payment Plan not found for the new key..' 
                              );
                              
                         end if;
                         
                         raise BILL_PLAN_PAYPLAN_NOT_FOUND; -- OSPRODUCT-19527
                         
                    end if;
                    
               else

                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id,
                                              rtrim(v_pa_installation.source_bv_path, pkg_os_constant.bv_path_segmentor)
                                         );
               
               end if;
               
               -- OSPRODUCT-3423
               if v_pa_installation.business_variable_id = gbv_PmntArrangementWithdrwlDay
                  and 
                  v_attribute_value is null 
               then
                    -- Not considering the MP case 
                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id,
                                              gbv_PTPPreferredWithdrawalDay 
                                         );
                                         
               end if;               
               
               if v_attribute_value is null then

                    v_attribute_value := 'Not Specified';

               end if;
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Attribute Value: ' || v_attribute_value
                    );

               end if;
                                      
               if v_key is null then
                         
                    v_key := v_pa_installation.attribute_name || ' - ' || v_attribute_value;
               
               else
                    v_key := v_key || ' : ' || v_pa_installation.attribute_name || ' - ' || v_attribute_value;
                    
               end if;

          end loop;
         
          -- Get the name     
          begin
               
               select
                    source_bv_path,
                    attribute_name
               into
                    v_source_bv_path,
                    v_attribute_name
               from
                    pmnt_arngmnt_installation
               where
                    active_tf = 'T'
               and
                    context_object_type = v_action_object_type_id
               and
                    business_variable_id = gbv_PaymentArrangementName;
                    
               v_attribute_value := null;
                    
               if v_action_object_type_id = pkg_os_constant.gobjType_PolicyTrxPolicy then
                                          
                    v_change_billplan_tf := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 gbv_PTPChangeBillPlanTF
                                            );
                    
                    if v_change_billplan_tf is null then                    
                         
                         v_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                           (     
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_Ref_PTPAssciatdPmntArngmnt
                                           );
                                           
                    else
                         
                         -- Get the modified bill plan
                         v_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                               (     
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_action_object_id,
                                                    gbv_Ref_PTPModifiedPmntArngmnt
                                               );
                                               
                    end if;
                                               
                    if v_bill_plan_id is not null then
                         
                         v_bill_plan_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             gbv_PTPPmntArngmntNewExisting
                                                        );
                                          
                    end if;
                                              
               else
                                          
                    v_change_billplan_tf := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_action_object_id,
                                                 gbv_PTPPayerChangeBillPlanTF
                                            );
                                      
                    if v_change_billplan_tf is null then                    
                         
                         v_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                           (	
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_Ref_PTPayerChosenBillPlan
                                           );
                                           
                    else
                         
                         -- Get the modified bill plan
                         v_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_action_object_id,
                                                    gbv_Ref_PTPayerModBillPlan
                                               );
                                          
                    end if;
                    
                    if v_bill_plan_id is not null then
                         
                         v_bill_plan_new_or_existing := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             gbv_PTPayerBillPlanNewExisting --OSPRODUCT-3927
                                                        );
                                          
                    end if;
                                                   
               end if; 
               
               -- OSPRODUCT-14807
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Bill Plan ID: ' || v_bill_plan_id ||
                         '.. Change Bill Plan Flag: ' || v_change_billplan_tf ||
                         '.. Bill Plan New(1) or Existing(2)? ' || v_bill_plan_new_or_existing
                    );

               end if; 
                                                   
               if v_bill_plan_id is not null 
                  and
                  v_bill_plan_new_or_existing is not null
                  and
                  (
                       v_bill_plan_new_or_existing = gllv_PTPPAExisting
                       or
                       (
                            v_bill_plan_new_or_existing = gllv_PTPPANew
                            and
                            pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_bill_plan_id, gbv_BillPlanDefaultNameTF) is null
                       )
                  )
               then
                  
                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor)
                                       );
                                         
               else
                    
                    -- OSPRODUCT-14807                    
                    v_old_key_without_name := trim ( substr ( in_old_bill_plan_key, 1, instr(in_old_bill_plan_key, v_attribute_name) - 3 ) );
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Old key without name: ' || v_old_key_without_name ||
                              '..New key without name: ' || v_key
                         );

                    end if;
                       
                    if v_old_key_without_name = v_key then
                         
                         v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor)
                                              );
                         
                    end if;
                                              
                    if v_attribute_value is null then
          
                         v_attribute_value := fn_get_new_billplan_default_nm
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      in_action_object_id,
                                                      in_profile_details,
                                                      in_payplan_details                                              
                                                 );
                                                 
                    end if;
                    -- OSPRODUCT-14807
                                         
               end if;               
               -- end OSPRODUCT-2459
                         
               if v_attribute_value is null then
                    
                    -- OSPRODUCT-6719
                    if v_session_control.gLogging_Full then
                              
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'New Bill Plan Setup - Bill Plan name not found for the new key..' 
                         );
                         
                    end if;
                              
                    raise BILL_PLAN_NAME_NOT_FOUND; -- OSPRODUCT-19527
               
               else
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Attribute Name: '  || 'Bill Plan Name: ' ||
                              '.. Attribute Value: ' || v_attribute_value 
                         );

                    end if;                            
                    
                    v_key := v_key || ' : ' || v_attribute_name || ' - ' || v_attribute_value;
                              
               end if;
               
          end;
     
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'New Key: ' || v_key
          );

     end if;
     
     return v_key;
     
end fn_get_new_bill_plan_key;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_duplicate_billplan_tf
--
--   %USAGE
--        Return T or F
--
--   %ALGORITHM
--         % Not Sepcified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id            PTP ID,             
--   %PARAM    in_modify_payplan_tf           char
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_duplicate_billplan_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_profile_details                 in out         object_bv_value.business_variable_value%type,
     in_payplan_details                 in out         object_bv_value.business_variable_value%type  
)
return char
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_duplicate_billplan_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_billing_account_id               object.object_id%type;
     v_chk_bill_plan_id                 object.object_id%type := null;
     v_primary_entity_id                object.object_id%type := null;
     v_ultimate_customer_id             object.object_id%type := null;											   
     v_billplan_id                      object.object_id%type;
     v_new_key                          object_bv_value.business_variable_value%type;
     v_existing_key                     object_bv_value.business_variable_value%type;
     v_action_object_type_id            object_type.object_type_id%type;
     
     v_bill_plan_count                  char(1);     
     v_return_value                     char(1) := 'F';
     
begin
     
     -- Action object type
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     -- Get the Billing Account ID
     case

          when v_action_object_type_id = gObjType_PTP then

               -- Get the Ultimate Customer ID
               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id,
                                              pkg_os_constant.gObjType_Customer
                                         );

               -- get the primary entity id
               v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ultimate_customer_id,
                                          gbv_Ref_CustPrimaryEntity
                                     );

               -- Get the child Billing Account for the Primary Entity
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_primary_entity_id,
                                           gObjType_BillingAccount
                                      );

          when v_action_object_type_id = gObjType_PTPPayer then

               -- Get entity
               v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_action_object_id,
                                           pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                      );

               -- Get Billing account
               v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_entity_id,
                                            gObjType_BillingAccount
                                       );
                                       
          when v_action_object_type_id = gObjType_PaymentArrangement then
               
               v_billing_account_id := pkg_os_object.fn_object_parent_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id
                                       );
                                       
               v_new_key := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id,
                                 gbv_PmntArrangementKey
                            );
                                       
               v_chk_bill_plan_id := in_action_object_id;

          else

               null; -- Can be extended if passed in object id is of type other than PTP or PTPPayer

     end case;
     
     if v_chk_bill_plan_id is null then
          
          begin
     
               v_new_key := fn_get_new_bill_plan_key
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id,
                                 in_profile_details,
                                 in_payplan_details
                            );
                            
          exception
               
               when others then -- OSPRODUCT-19527
                    
                    -- OSPRODUCT-6719                    
                    if v_session_control.gLogging_Full then
                    
                         pkg_os_logging.sp_log
                         (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. New Key not yet setup.. '
                         );
                    
                    end if;
          end;
                       
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.. New Key: ' || v_new_key
          );

     end if;
     
     -- 1433
     -- Replaced the code that was doing child search and comparing each bill plan individually
     -- with a datamart query     
     begin
          
          select
               count(bill_plan_id)
           into
               v_bill_plan_count
           from
               dragon_bill_plan
          where
               billing_account_id = v_billing_account_id
            and
               bill_plan_key is not null
            and
               bill_plan_key = v_new_key
            and 
               (
                    v_chk_bill_plan_id is null
                    or
                    bill_plan_id <> v_chk_bill_plan_id
               );
                  
          if v_bill_plan_count > 0 then
                                        
               v_return_value := 'T';
                                   
          end if;
          
     end;
     
     return v_return_value; 
     
end fn_duplicate_billplan_tf;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_duplicate_billplan_id
--
--   %USAGE
--        Return T or F
--
--   %ALGORITHM
--         % Not Sepcified
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id            PTP ID,             
--   %PARAM    in_modify_payplan_tf           char
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_duplicate_billplan_id
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_profile_details                 in out         object_bv_value.business_variable_value%type,
     in_payplan_details                 in out         object_bv_value.business_variable_value%type  
)
return object.object_id%type
is
     
     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_duplicate_billplan_tf';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_billing_account_id               object.object_id%type;
     v_chk_bill_plan_id                 object.object_id%type := null;
     v_primary_entity_id                object.object_id%type := null;
     v_ultimate_customer_id             object.object_id%type := null;
     
     v_billplan_id                      object.object_id%type;
     v_new_key                          object_bv_value.business_variable_value%type;
     v_action_object_type_id            object_type.object_type_id%type;
     
begin
     
     -- Action object type
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Action Object ID: '   || in_action_object_id ||
               '..Action object type id: ' || v_action_object_type_id ||
               '..Profile Detail: '        || in_profile_details ||
               '..Payplan Details'      || in_payplan_details
          );
          
     end if;
     
     -- Get the Billing Account ID
     case

          when v_action_object_type_id = gObjType_PTP then

               -- Get the Ultimate Customer ID
               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              in_action_object_id,
                                              pkg_os_constant.gObjType_Customer
                                         );

               -- get the primary entity id
               v_primary_entity_id:= pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_ultimate_customer_id,
                                          gbv_Ref_CustPrimaryEntity
                                     );

               -- Get the child Billing Account for the Primary Entity
               v_billing_account_id:= pkg_os_object_search.fn_object_11_child_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_primary_entity_id,
                                           gObjType_BillingAccount
                                      );

          when v_action_object_type_id = gObjType_PTPPayer then

               -- Get entity
               v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_action_object_id,
                                           pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                      );

               -- Get Billing account
               v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_entity_id,
                                            gObjType_BillingAccount
                                       );
                                       
          when v_action_object_type_id = gObjType_PaymentArrangement then
               
               v_billing_account_id := pkg_os_object.fn_object_parent_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id
                                       );
                                       
               v_new_key := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id,
                                 gbv_PmntArrangementKey
                            );
                                       
               v_chk_bill_plan_id := in_action_object_id;

          else

               null; -- Can be extended if passed in object id is of type other than PTP or PTPPayer

     end case;
     
     if v_chk_bill_plan_id is null then
          
          begin
     
               v_new_key := fn_get_new_bill_plan_key
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 in_action_object_id,
                                 in_profile_details,
                                 in_payplan_details
                            );
                            
          exception
               
               when others then -- OSPRODUCT-19527
                    
                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '.. New Key not yet setup.. '
                    );
          end;
                       
     end if;
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.. New Key: ' || v_new_key
          );

     end if;
     
     -- 1433
     -- Replaced the code that was doing child search and comparing each bill plan individually
     -- with a datamart query
     begin
          
          select
               min(bill_plan_id)
           into
               v_billplan_id
           from
               dragon_bill_plan
          where
               billing_account_id = v_billing_account_id
            and
               bill_plan_key is not null
            and
               bill_plan_key = v_new_key
            and 
               (
                    v_chk_bill_plan_id is null
                    or
                    bill_plan_id <> v_chk_bill_plan_id
               );
          
     end;
          
     return v_billplan_id; 
     
end fn_get_duplicate_billplan_id;


function fn_get_duplicate_billplan_id
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type
)
return object.object_id%type
is

     v_profile_details           object_bv_value.business_variable_value%type;
     v_payplan_details           object_bv_value.business_variable_value%type;
     v_bill_plan_id              object.object_id%type;
begin
     
     v_bill_plan_id := fn_get_duplicate_billplan_id
                       (
                            in_session_id,
                            in_transaction_id,
                            in_action_object_id,
                            v_profile_details,
                            v_payplan_details
                       );
                       
     return v_bill_plan_id;
                       
end fn_get_duplicate_billplan_id;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_set_billplan_detail_to_ptp
--
--   %USAGE
--        This procedure will be used to set up the PTP BVs from the key attributes of the PTP's
--        associated Payment Arrangement Object.
--        The procedure has to be called when the user chooses to associate a policy with an
--        existing arrangement during NB journey to maintain backwaard compatibility.  
--
--   %ALGORITHM
--        1. Read attributes - withdrawal day, CTF ID and payment plan timing id from associtaed 
--           payment arrangement object
--        2. Set attributes of PTP - Preferred withdrawal day, chosen payment plan and current profile
--           2.1 Use arrangement's timing id to get the associated payment plan md id
--           2.2 Get the PaymentPlan object under PTP with payment plan md id from 2.1
--           2.3 Set the same as the chosen payment plan
--        3. Call the respective procedure to generate teh payment and consolidated schedules.
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 Action Object ID
--   %PARAM    io_action_outcome_id                Action Outcome
--   %PARAM    in_modified_tf                      char
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_set_billplan_detail_to_ptp
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_modified_tf                     in             char := 'F' -- set to T when in Endorsement wf
)
as

     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name           constant  system_log.program_name%type  := pkg_name||'sp_set_pmnt_detail_for_ptp';

     v_payment_plan_obj         object.object_id%type;
     v_billplan_id              object.object_id%type;
     v_ctf_mode                 object_bv_value.business_variable_value%type;
     v_payplan_md_id            object_bv_value.business_variable_value%type;    
     v_attribute_value          object_bv_value.business_variable_value%type;          
     v_action_object_type_id    object_type.object_type_id%type;
     
     --OSPRODUCT-2327
     v_policy_term_type         object_bv_value.business_variable_value%type;

     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          order by
                pa_installation_id;

begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Action object id: '      || in_action_object_id ||
               'Action object type id: ' || v_action_object_type_id
          );
          
     end if;
     
     if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, gbv_PTPPmntArngmntNewExisting ) = gllv_PTPPAExisting then
     
          -- PTP's associated Payment Arrangement   
          if in_modified_tf = 'F' then
               
               v_billplan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     gbv_Ref_PTPAssciatdPmntArngmnt
                                );
                                         
          else
               
               v_billplan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     gbv_Ref_PTPModifiedPmntArngmnt
                                );
                                         
          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Associated Bill Plan: ' || v_billplan_id
               );

          end if;
          
          --OSPRODUCT-2327
          v_policy_term_type := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id ,
                                     PKG_OS_CONSTANT_BV.gbv_PolicyTerm
                                );
          
          for v_pa_installation in c_pa_installation (v_action_object_type_id) loop
          
               if v_pa_installation.business_variable_id is not null then

                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_billplan_id,
                                              v_pa_installation.business_variable_id
                                         );
                                         
               end if;
                     
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Attribute Name: ' || v_pa_installation.attribute_name ||
                         '.. Attribute Value: '|| v_attribute_value                
                    );

               end if;
               
               if v_attribute_value is not null
                  and
                  v_pa_installation.business_variable_id = gbv_Ref_PmntArrangementCTF
               then
                    
                    -- from ctf get the payment mode
                    v_ctf_mode := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_attribute_value,
                                       gbv_CTFPaymentMode
                                  );

                    -- Set the PTP down payment mode and ctf profile
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_PTPPmntDownPmntMode, -- PTP -> DownPaymentMode
                         v_ctf_mode
                    );

                    if v_ctf_mode = gllv_Card then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_PTPCCProfileNewOrExisting,
                              gllv_PTPProfExisting
                         );
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              29494046, -- Current Profile
                              v_attribute_value
                         );
                    
                    end if;
                    
                    if v_ctf_mode = gllv_EFT then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_PTPEFTProfileNewOrExisting, 
                              gllv_PTPProfExisting
                         );
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              29494046, -- Current Profile
                              v_attribute_value
                         );
                    
                    end if;
                    
               elsif v_attribute_value is not null
                     and 
                     v_pa_installation.business_variable_id = gbv_PmntArrangementTiming 
               then               
                    
                    begin

                         select
                              pp.payment_plan_id
                         into
                              v_payplan_md_id
                         from
                              payment_plan pp
                         where
                              (
                                   pp.pd_product_id = pkg_os_product.fn_object_product_get (in_session_id, in_transaction_id, in_action_object_id)
                                   or
                                   pp.pd_product_id = pkg_os_constant.gDefaultProductID
                              )
                         and
                              (pp.payment_plan_timing_id is not null and pp.payment_plan_timing_id = v_attribute_value)
                         and
                              (
                                   active_tf = 'T'
                                   or
                                   active_tf is null     --     backward compatible
                              )
                         and
                              (
                                   pp.availability_rule_id is null
                                   or
                                   --pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_action_object_id, pp.availability_rule_id ) = 'T'  --LXPRODUCT-254
                                   pkg_db_payplan_modify.fn_restriction_payplan_tf(in_session_id, in_transaction_id,in_action_object_id,pkg_os_object_search.fn_object_with_attribute_get(in_session_id,in_transaction_id,in_action_object_id,gObjType_PaymentPlan,gbv_PaymentPlanMDID,pp.payment_plan_id),pp.payment_plan_id ) = 'F'  --LXPRODUCT-254
                              )
                         and  --LXPRODUCT-254
                              (
                                   pp.restriction_rule_id is null
                                   or
                                   pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_action_object_id, pp.restriction_rule_id ) = 'T'
                              )     
                         and
                              pp.pd_term_id = v_policy_term_type  --OSPRODUCT-2327
                         ;

                    exception

                         when others then
                              raise;

                    end;
                    
                    v_payment_plan_obj := pkg_os_object_search.fn_object_with_attribute_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_action_object_id,
                                               gObjType_PaymentPlan,
                                               gbv_PaymentPlanMDID,
                                               v_payplan_md_id
                                          );
                                          
                    -- OSPRODUCT-3351 
                    -- Set chosen pay plan when changing from agency to direct billed through PNBT
                    if in_modified_tf = 'T'
                       and
                       pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, gbv_Ref_PTPAssciatdPmntArngmnt) is not null
                       -- OSPRODUCT-20925
                       and
                       pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, gbv_Ref_PTPChosenPaymentPlan) <> v_payment_plan_obj
                    then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_Ref_PTPModPaymentPlan,
                              v_payment_plan_obj
                         );
                                                  
                    else
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              gbv_Ref_PTPChosenPaymentPlan,
                              v_payment_plan_obj
                         );


                    end if;
                    
                    -- end 3351                            
          
               else
                       
                    pkg_os_object_io.sp_object_bv_path_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         v_pa_installation.source_bv_path,
                         v_attribute_value
                    );
                    
               end if;
               
          end loop;
          
     end if;     

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          io_action_outcome_id := pkg_os_constant.gOutcome_UserInputInvalid;


end sp_set_billplan_detail_to_ptp;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_billplan_detail_to_ptppayer
--
--   %USAGE
--        This procedure will be used to set up the PTP BVs from the key attributes of the PTP's
--        associated Payment Arrangement Object.
--        The procedure has to be called when the user chooses to associate a policy with an
--        existing arrangement during NB journey to maintain backwaard compatibility.  
--
--   %ALGORITHM
--        1. Read attributes - withdrawal day, CTF ID and payment plan timing id from associtaed 
--           payment arrangement object
--        2. Set attributes of PTP - Preferred withdrawal day, chosen payment plan and current profile
--           2.1 Use arrangement's timing id to get the associated payment plan md id
--           2.2 Get the PaymentPlan object under PTP with payment plan md id from 2.1
--           2.3 Set the same as the chosen payment plan
--        3. Call the respective procedure to generate teh payment and consolidated schedules.
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_ptp_payer_id                     Action Object ID
--   %PARAM    io_action_outcome_id                Action Outcome
--   %PARAM    in_modified_tf                      char
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_billplan_detail_to_ptppayer
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_payer_id                    in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_modified_tf                     in             char := 'F' -- set to T when in Endorsement wf
)
as

     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name           constant  system_log.program_name%type  := pkg_name||'sp_billplan_detail_to_ptppayer';

     v_payment_plan_obj         object.object_id%type;
     v_billplan_id              object.object_id%type;
     v_ctf_mode                 object_bv_value.business_variable_value%type;
     v_payplan_md_id            object_bv_value.business_variable_value%type;    
     v_attribute_value          object_bv_value.business_variable_value%type;          
     v_action_object_type_id    object_type.object_type_id%type;
     --OSPRODUCT-2327
     v_ptp_id                   object.object_id%type;
     v_policy_term_type         object_bv_value.business_variable_value%type;
     
     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          order by
                pa_installation_id;

begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_ptp_payer_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Payer object id: '       || in_ptp_payer_id ||
               'Action object type id: ' || v_action_object_type_id
          );
          
     end if;
     
     if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_ptp_payer_id, gbv_PTPayerBillPlanNewExisting ) = gllv_PTPPAExisting then
     
          -- PTP's associated Payment Arrangement   
          if in_modified_tf = 'F' then
               
               v_billplan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_ptp_payer_id,
                                     gbv_Ref_PTPayerChosenBillPlan
                                );
                                         
          else
               
               v_billplan_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_ptp_payer_id,
                                     gbv_Ref_PTPayerModBillPlan
                                );
                                         
          end if;

          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Associated Bill Plan: ' || v_billplan_id
               );

          end if;
          
          --OSPRODUCT-2327
          v_ptp_id := pkg_os_object.fn_object_parent_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_ptp_payer_id
                      );
          v_policy_term_type := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_ptp_id ,
                                     pkg_os_constant_bv.gbv_PolicyTerm
                                );
          
          for v_pa_installation in c_pa_installation (v_action_object_type_id) loop
          
               if v_pa_installation.business_variable_id is not null then

                    v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_billplan_id,
                                              v_pa_installation.business_variable_id
                                         );
                                         
               end if;
                     
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Attribute Name: ' || v_pa_installation.attribute_name ||
                         '.. Attribute Value: '|| v_attribute_value                
                    );

               end if;
               
               if v_attribute_value is not null
                  and
                  v_pa_installation.business_variable_id = gbv_Ref_PmntArrangementCTF
               then
                    
                    -- from ctf get the payment mode
                    v_ctf_mode := pkg_os_object_io.fn_object_bv_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_attribute_value,
                                       gbv_CTFPaymentMode
                                  );

                    -- Set the PTP down payment mode and ctf profile
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_ptp_payer_id,
                         gbv_PTPayerDownPaymentMode, -- PTPPayer -> DownPaymentMode
                         v_ctf_mode
                    );
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Payment Mode: ' || v_ctf_mode            
                         );

                    end if;

                    if v_ctf_mode = gllv_Card then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_PTPayerCardNewOrExisting,
                              gllv_PTPProfExisting
                         );
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_Ref_PTPayerSelectedCTF, -- Current Profile
                              v_attribute_value
                         );
                    
                    end if;
                    
                    if v_ctf_mode = gllv_EFT then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_PTPayerEFTNewOrExisting, 
                              gllv_PTPProfExisting
                         );
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_Ref_PTPayerSelectedCTF, -- Current Profile
                              v_attribute_value
                         );
                    
                    end if;
                    
               elsif v_attribute_value is not null
                     and 
                     v_pa_installation.business_variable_id = gbv_PmntArrangementTiming 
               then               
                    declare
                    
                         v_ptp_id	object.object_id%type := pkg_os_object.fn_object_parent_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_ptp_payer_id
                                                            );
                    begin

                         select
                              pp.payment_plan_id
                         into
                              v_payplan_md_id
                         from
                              payment_plan pp
                         where
                              (
                                   pp.pd_product_id = pkg_os_product.fn_object_product_get (in_session_id, in_transaction_id, v_ptp_id)
                                   or
                                   pp.pd_product_id = pkg_os_constant.gDefaultProductID
                              )
                         and
                              (pp.payment_plan_timing_id is not null and pp.payment_plan_timing_id = v_attribute_value)
                         and
                              (
                                   active_tf = 'T'
                                   or
                                   active_tf is null     --     backward compatible
                              )
                         and
                              (
                                   pp.availability_rule_id is null
                                   or
                                   --pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, v_ptp_id, pp.availability_rule_id ) = 'T'
                                   pkg_db_payplan_modify.fn_restriction_payplan_tf(in_session_id, in_transaction_id,v_ptp_id,pkg_os_object_search.fn_object_with_attribute_get(in_session_id,in_transaction_id,v_ptp_id,gObjType_PaymentPlan,gbv_PaymentPlanMDID,pp.payment_plan_id),pp.payment_plan_id ) = 'F'  --LXPRODUCT-254
                              )
                         and 
                              (
                                   pp.restriction_rule_id is null   --LXPRODUCT-254
                                   or 
                                   pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, v_ptp_id, pp.restriction_rule_id ) = 'T'  --LXPRODUCT-254

                              )
                         and
                              pp.pd_term_id = v_policy_term_type
                         ;

                    exception

                         when others then
                              raise;

                    end;
                    
                    v_payment_plan_obj := pkg_os_object_search.fn_object_with_attribute_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_ptp_payer_id,
                                               gObjType_PaymentPlan,
                                               gbv_PaymentPlanMDID,
                                               v_payplan_md_id
                                          );
                                
                    if in_modified_tf = 'T'
                       and
                       pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_ptp_payer_id, gbv_Ref_PTPayerChosenBillPlan) is not null
                       and
                       -- OSPRODUCT-20925
                       pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_ptp_payer_id, gbv_Ref_PTPayerChosenPayPlan) <> v_payment_plan_obj
                    then
                         
                         -- Schedule generation handelled in workflow
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_Ref_PTPayerModPayPlan,
                              v_payment_plan_obj
                         );                         
                    else
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_payer_id,
                              gbv_Ref_PTPayerChosenPayPlan,
                              v_payment_plan_obj
                         );

                    end if;
          
               else
                       
                    pkg_os_object_io.sp_object_bv_path_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_ptp_payer_id,
                         v_pa_installation.source_bv_path,
                         v_attribute_value
                    );
                    
               end if;
               
          end loop;
          
     end if;     

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          io_action_outcome_id := pkg_os_constant.gOutcome_UserInputInvalid;

end sp_billplan_detail_to_ptppayer;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_mod_bill_plan_id
--
--   %USAGE
--        This function will return the new bill plan object id in case bill plan key is changed
--
--   %ALGORITHM
--        %Not specified
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 PTP/PTPPayer
--   %PARAM    in_billing_account_id               Billing Account ID
--   %PARAM    in_modified_billplan_id             new bill plan id if passed in through the workflow
--   %PARAM    out_new_or_existing_tf              new / existing flag (T or F) to be set on action object
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_mod_bill_plan_id
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type, -- PTP or PTPPayer
     in_billing_account_id              in             object.object_id%type,
     in_modified_billplan_id            in             object.object_id%type default null,
     in_profile_details                 in out         object_bv_value.business_variable_value%type,
     in_payplan_details                 in out         object_bv_value.business_variable_value%type,
     out_new_or_existing_tf             out            char
) 
return object.object_id%type
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'fn_get_mod_bill_plan_id';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_new_bill_plan_id                 object.object_id%type;
     
     -- OSPRODUCT-3351
     v_key                              object_bv_value.business_variable_value%type;
     v_datamart_tf                      char(1) := 'T';

	v_object_cache                     pkg_os_object_cache.t_object_cache;
     v_action_outcome_id                outcome.outcome_id%type;
     v_payer_tf                         char(1);   

begin
          
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Modified Bill Plan: ' || in_modified_billplan_id
          );

     end if;
                    
     v_new_bill_plan_id := fn_get_duplicate_billplan_id
                           (
                                in_session_id,
                                in_transaction_id,
                                in_action_object_id,
                                in_profile_details,
                                in_payplan_details
                           );
                                          
     if v_new_bill_plan_id is null then
                         
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. No existing bill found with the new key: ' || v_new_bill_plan_id 
               );

          end if;
                              
          if in_modified_billplan_id is not null then
                              
               v_new_bill_plan_id := in_modified_billplan_id;
                       
          else
               
               -- OSPRODUCT-3351
               -- OSPRODUCT-10484
               if pkg_os_object.fn_object_type_get (in_session_id, in_transaction_id, in_action_object_id) = gObjType_PTPPayer then
                    v_payer_tf := 'T';
               else
                    v_payer_tf := 'F';
               end if;
               
               sp_billplan_create_placeholder
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    v_object_cache,
                    v_action_outcome_id,
                    v_payer_tf
               );
               
               v_new_bill_plan_id := fn_get_billplan_placeholder
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_action_object_id,
                                          in_billing_account_id
                                     );
               
               -- end OSPRODUCT-10484
               
               if v_new_bill_plan_id is null then
                    
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         gObjType_PaymentArrangement,
                         in_billing_account_id,
                         v_new_bill_plan_id
                    );
                    
               end if;           
                              
          end if;
          
          out_new_or_existing_tf := gllv_PTPPANew; 
                         
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. New Bill Plan ID:  ' || v_new_bill_plan_id 
               );

          end if;
                         
     else
                         
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Existing bill plan found with the new key: ' || v_new_bill_plan_id 
               );

          end if;
                         
          if in_modified_billplan_id is not null 
             and
             pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_session_id, 29758801) = g_Yes -- OSPRODUCT-19527
          then
               
               out_new_or_existing_tf := null;
               
               -- OSPRODUCT-19527
               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Bill Plan Setup Error - An existing bill plan found with the same attribite. Please select the same from the UI to proceed...'
               );
                              
               raise DUP_BILL_PLAN_KEY_FOUND;
                              
          end if;          
          
          out_new_or_existing_tf := gllv_PTPPAExisting; 
          
     end if;

     --io_action_outcome_id := pkg_os_constant.gOutcome_OK;
     return v_new_bill_plan_id;
     
exception
     
     when DUP_BILL_PLAN_KEY_FOUND then
          
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Add validation on UI to stop user from creating a new bill plan with an existing key.' || v_new_bill_plan_id
          );
          
          raise;

end fn_get_mod_bill_plan_id;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_bill_plan_create
--
--   %USAGE
--        Associate a Bill Plan with a PTP or PTP Payer id
--
--   %ALGORITHM
--        % Not Specified
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 PTP ID/ PTP Payer ID
--   $PARAM    in_bill_plan_id                     Bill Plan ID (object ID)
--   %PARAM    in_billing_account_id               Billing Account ID
--   %PARAM    in_bill_plan_new_existing           char
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- 1433				 
procedure sp_bill_plan_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     in_bill_plan_id                    in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,
     in_bill_plan_new_existing          in             char,   
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type   
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_bill_plan_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_policy_transaction_id            object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_associated_term_payer            object.object_id%type;
     v_policy_id                        object.object_id%type;
     v_bill_plan_policy                 object.object_id%type;
     v_template_bill_plan_id            object.object_id%type;
     v_exchange_id                      object.object_id%type;
     v_current_bill_plan_id             object.object_id%type;
     
     v_ptp_effective_date               object_bv_value.business_variable_value%type;
     
     v_attribute_value                  object_bv_value.business_variable_value%type;
     v_bill_plan_key                    object_bv_value.business_variable_value%type;
     v_source_bv_path                   object_bv_value.business_variable_value%type;
     v_attribute_name                   object_bv_value.business_variable_value%type;
     v_profile_details                  object_bv_value.business_variable_value%type;
     v_payplan_details                  object_bv_value.business_variable_value%type;
     v_duplicate_bill_plan_name         object_bv_value.business_variable_value%type;
     v_policy_number                    object_bv_value.business_variable_value%type;
     v_new_policy_list                  varchar2(4000);
     v_current_policy_list              varchar2(4000);
     v_bill_plan_secondary_key          object_bv_value.business_variable_value%type;                  
     
     v_bv_table                         pkg_os_object_io.t_bv_table;
     
     v_action_object_type_id            object_type.object_type_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_bill_method                      char(1) := null;
     v_bill_method_noncust              char(1) := null;
     v_billing_acc_type_id              number;
     v_new_policy_list_id               number; --OSPRODUCT-4079
	v_billplan_placeholder_id          object.object_id%type;
     v_lock_status                      char;

     cursor c_pa_installation (in_object_type_id in object_type.object_type_id%type)
     is
          select
               *
          from
               pmnt_arngmnt_installation
          where
               active_tf = 'T'
          and
               context_object_type = in_object_type_id
          and 
               business_variable_id <> gbv_PaymentArrangementName
          order by
               pa_installation_id;
               
     cursor c_term_installments
     is
          select 
               * 
          from 
               dragon_scheduled_installment 
          where 
               policy_term_id = v_policy_term_id;

begin
     
     -- Get the exchange
     v_exchange_id := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_session_id,
                           pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                      );
     
     -- Get the Billing Method
     v_bill_method := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           v_exchange_id,
                           gbv_ExchangeBillMethod-- added to pkg spec
                      );
                      
     -- Get the Billing Method
     -- 2358
     v_bill_method_noncust := nvl ( pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_exchange_id,
                                             gbv_ExchangeBillMethodNonCust-- added to pkg spec
                                        ), g_Account);   
                      
     -- Action object type id
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );    
     
     -- Policy Transaction ID
     v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                (
                                     in_session_id, 
                                     in_transaction_id, 
                                     in_action_object_id, 
                                     pkg_os_constant.gobjType_PolicyTransaction
                                );
                        
     -- Get the policy ID
     begin
          select
               pt.policy_id,
               pt.policy_trx_policy_number,
               to_char(pt.policy_trx_eff_date,pkg_os_constant.DragonDateFormatDefault),
               pt.policy_term_id
          into
               v_policy_id,
               v_policy_number,
               v_ptp_effective_date,
               v_policy_term_id
          from
               dragon_policy_trx pt
          where
               pt.policy_trx_id = v_policy_transaction_id;
     end;
     
     -- OSPRODUCT-9652
     /*-- Get the account type
     begin
          select
               account_type_id
          into
               v_billing_acc_type_id
          from
               dragon_billingaccount
          where
               billingaccount_id = in_billing_account_id;
     exception
          when others then
              null;
     end;*/
     
     -- UTPRODUCT-3822
     v_billing_acc_type_id := pkg_os_object_io.fn_object_bv_get
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  in_billing_account_id,
                                  pkg_db_billing_modify.gbv_BillingAccountType
                              ); -- BA type
          
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Action object id: '         || in_action_object_id ||
               '.. Object type ID: '           || v_action_object_type_id ||
               '.. Bill Plan New or existing: '|| in_bill_plan_new_existing ||
               '.. Billing Account ID: '       || in_billing_account_id ||
               '.. Bill Plan ID: '             || in_bill_plan_id       ||
               '.. Policy Transaction ID: '    || v_policy_transaction_id ||
               '.. Transaction Effective Date: ' || v_ptp_effective_date  ||
               '.. Policy Number: '              || v_policy_number       ||
               '.. Term ID: '                    || v_policy_term_id      ||
               '.. Exchange ID: '                || v_exchange_id         ||
               '.. Bill Method: '                || v_bill_method         ||
               '.. Account Type: '               || v_billing_acc_type_id          
          );

     end if; 
     
     if in_bill_plan_new_existing = gllv_PTPPANew then       
          
          -- OSPRODUCT-10484
          if v_billing_acc_type_id not in (g_BAAcctTypeCustomer, g_BAAcctTypeAgent)
             and
             v_bill_method_noncust = g_Account
          then
                    
               declare
               v_obj object.object_id%type;
               begin
                    
                    select
                         object_id
                    into
                         v_obj
                    from
                         wf_tmp_object_lock
                    where
                         session_id = in_session_id
                    and
                         object_id = in_billing_account_id;
                         
               exception
                    
                    when no_data_found then
          
                         pkg_db_object.sp_db_set_object_lock
                         (
                              in_session_id,
                              in_transaction_id,
                              in_billing_account_id,
                              v_lock_status
                              --in_ancestor_list => v_ancestor_list
                         );
                         
               end;
               
          end if;
          -- end OSPRODUCT-10484
		
		-- 1. Set the key values of the bill plan except bill plan name
          begin
               
               v_bv_table.delete;
                    																																						 
               for v_pa_installation in c_pa_installation (v_action_object_type_id) loop

                    if v_pa_installation.source_bv_path is not null then

                         v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   rtrim(v_pa_installation.source_bv_path, pkg_os_constant.bv_path_segmentor)
                                              );
                         if v_pa_installation.business_variable_id = gbv_Ref_PmntArrangementCTF then
                              
                              if v_attribute_value is null then
                                   
                                   pkg_os_logging.sp_log_error
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'New Bill Plan Setup Error - Attribute not found..' || 
                                        '.. Attribute Name: ' || v_pa_installation.attribute_name
                                   );
                                   
                                   raise BILL_PLAN_SETUP_ERROR;
                                   
                              else
                              
                                   v_profile_details := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_attribute_value,
                                                             gbv_CTFProfileDetail
                                                        );
                                                        
                              end if;
                                              
                         elsif v_pa_installation.business_variable_id  = gbv_PmntArrangementTiming then
                         
                              if v_attribute_value is null then
                                   
                                   pkg_os_logging.sp_log_error
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'New Bill Plan Setup Error - Attribute not found..' || 
                                        '.. Attribute Name: ' || v_pa_installation.attribute_name
                                   );
                                   
                                   raise BILL_PLAN_SETUP_ERROR;
                                   
                              else
                                   
                                   v_payplan_details := v_attribute_value;
                                   
                              end if;
                         -- OSPRODUCT-3423
                         elsif v_pa_installation.business_variable_id  = gbv_PmntArrangementWithdrwlDay then                              
                         
                              if v_attribute_value is null then
                                   
                                   -- Not yet considering multi-payer case
                                   v_attribute_value := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             gbv_PTPPreferredWithdrawalDay
                                                        );                                                        
                              end if;                              
                         
                         end if;
                         
                         v_bv_table(v_pa_installation.business_variable_id).business_variable_value := v_attribute_value;
                         
                         if v_session_control.gLogging_Full then
                              
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Setting Attribute: ' || v_pa_installation.attribute_name ||
                                   '..From BV: '           || rtrim(v_pa_installation.source_bv_path, pkg_os_constant.bv_path_segmentor) ||
                                   '..To BV ID: '          || v_pa_installation.business_variable_id ||
                                   '..BV Value: '          || v_attribute_value
                              );

                         end if;

                    end if;

               end loop;
               
               -- BV set 
               pkg_db_object.sp_ba_object_bv_set  --pkg_os_object_io.sp_object_bv_set --OSPRODUCT-21878
               (
                    in_session_id,
                    in_transaction_id,
                    in_bill_plan_id,
                    v_bv_table
               );
               
          end;
          
          -- 2. Set Bill Plan Name and bill plan Key
          begin
          
               v_attribute_value := null;
               
               -- Get the name     
               begin
                    
                    select
                         source_bv_path,
                         attribute_name
                    into
                         v_source_bv_path,
                         v_attribute_name
                    from
                         pmnt_arngmnt_installation
                    where
                         active_tf = 'T'
                    and
                         context_object_type = v_action_object_type_id
                    and
                         business_variable_id = gbv_PaymentArrangementName;
                                                        
                    if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_bill_plan_id, gbv_BillPlanDefaultNameTF) is null then
                         
                         v_attribute_value := pkg_os_object_io.fn_object_bv_path_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor)
                                              );
                    
                    else
                         
                         v_attribute_value := fn_get_new_billplan_default_nm
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_action_object_id,
                                                   v_profile_details,
                                                   v_payplan_details
                                              );
                         
                    end if;
                    
                    if v_attribute_value is null then
                                   
                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'New Bill Plan Setup Error - Bill Plan name not found for the new key..' 
                         );
                                   
                         raise BILL_PLAN_SETUP_ERROR;
                    
                    else
                         
                         if v_session_control.gLogging_Full then
                              
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Setting Attribute: ' || v_attribute_name ||
                                   '..From BV: '           || rtrim(v_source_bv_path, pkg_os_constant.bv_path_segmentor) ||
                                   '..To BV ID: '          || gbv_PaymentArrangementName ||
                                   '..BV Value: '          || v_attribute_value
                              );

                         end if;
                               
                    end if;
                    
                    -- Bill Plan Name                    
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_bill_plan_id,
                         gbv_PaymentArrangementName,
                         v_attribute_value
                    );
					
               end;     
               
               -- Get the key
               v_bill_plan_key := fn_get_bill_plan_key 
                                  (
                                       in_session_id, 
                                       in_transaction_id,
                                       v_action_object_type_id, 
                                       in_bill_plan_id
                                  );
                                  
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_bill_plan_id,
                    gbv_PmntArrangementKey,
                    v_bill_plan_key
               );
               
          end;
          
          -- 3. Check for duplicate bill plan
          begin
               
               v_duplicate_bill_plan_name := fn_get_duplicate_billplan_id
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_bill_plan_id,
                                                  v_profile_details,
                                                  v_payplan_details
                                             );
               
               if v_duplicate_bill_plan_name is not null then
                    
                    pkg_os_logging.sp_log_error
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'New Bill Plan Setup Error - Existing Bill Plan Found with the same attribute - Name: ' || v_duplicate_bill_plan_name 
                    );
                    
                    raise DUP_BILL_PLAN_KEY_FOUND;
                    
               end if;
               
          end;          
          
          -- 4. Set associated policy
          -- 1433
          begin
               
               v_bv_table.delete;
               
               -- 4079
               -- Add the policy to the policy list               
               pkg_os_long_string.set_long_string
               (
                    in_session_id,
                    in_transaction_id,
                    in_bill_plan_id,
                    gbv_BillPlanPolicyList, -- notdescription CLOB
                    v_policy_number,
                    v_new_policy_list_id
               );
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. List ID: ' || v_new_policy_list_id
                    );

               end if;
               
               v_bv_table(gbv_BillPlanPolicyList).business_variable_value := v_new_policy_list_id;                              
               -- OSPRODUCT-4079
               
               -- Add the policy reference
               if (
                       v_billing_acc_type_id = g_BAAcctTypeCustomer -- customer
                       and
                       v_bill_method = g_Policy
                       
                  )
                  -- 2358
                  or
                  (
                       v_billing_acc_type_id not in (g_BAAcctTypeCustomer, g_BAAcctTypeAgent) -- customer, agent/broker
                       and
                       v_bill_method_noncust = g_Policy                       
                  )
               then -- policy
               
                    v_bv_table(gbv_Ref_BillPlanPolicy).business_variable_value := v_policy_id;
                    
                    -- Set the mergeable flag
                    -- Get the secondary key
                    v_bill_plan_secondary_key := trim ( substr ( v_bill_plan_key, 1, instr(v_bill_plan_key, 'Bill Plan Name') - 3 ) );
                    
                    begin
                         
                         select
                              min(bill_plan_id)
                         into
                              v_template_bill_plan_id
                         from
                              dragon_bill_plan
                         where
                              billing_account_id = in_billing_account_id 
                         and
                              trim ( substr ( bill_plan_key, 1, instr(bill_plan_key, 'Bill Plan Name') - 3 ) ) = v_bill_plan_secondary_key;
                         
                         if v_template_bill_plan_id is not null then
                              
                              -- Set the mergeable flag
                              v_bv_table(gbv_BillPlanMergeTF).business_variable_value := g_Yes; 
                              
                              -- set the bill plan template
                              v_bv_table(pkg_os_constant_bv.gbv_ultimate_template).business_variable_value := v_template_bill_plan_id; 
                              
                         else
                              v_bv_table(pkg_os_constant_bv.gbv_ultimate_template).business_variable_value := in_bill_plan_id;
                         
                         end if;
                         
                    end;                              
               
               end if;
               -- end 1433
               
               -- Set Start Date
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_bill_plan_id,
                    v_bv_table
               );
                
          end;
          
          -- Set start date
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_bill_plan_id,
               gbv_PmntArrangementStartDate,
               v_ptp_effective_date
          );
          
     else
          
          -- Get the policy ref of bill plan
          v_bill_plan_policy := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_bill_plan_id,
                                     gbv_Ref_BillPlanPolicy
                                );
                                
          if v_bill_plan_policy is null
             or
             v_bill_plan_policy != v_policy_id 
          then
               
               --OSPRODUCT-8747
               pkg_db_object.sp_ba_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_bill_plan_id,
                    gbv_Ref_BillPlanPolicy,
                    null
               );
               --OSPRODUCT-8747
               
               -- Add the new policy number to the list
               -- Get the current list
			   -- OSPRODUCT-4079
               v_new_policy_list := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_bill_plan_id,
                                         gbv_BillPlanPolicyList
                                    );          
                                                       
               begin
                    
                    select to_number(v_new_policy_list) into v_new_policy_list_id from dual;
                    
                    v_new_policy_list := pkg_os_long_string.fn_get_long_string 
                                         (
                                              in_session_id, 
                                              in_transaction_id, 
                                              v_new_policy_list_id
                                         );
                     
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. List ID: ' || v_new_policy_list_id ||
                              '.. String: '  || v_new_policy_list
                         );

                    end if;                   
                    
               exception
                    
                    when INVALID_NUMBER then
                         
                         -- OSPRODUCT-4079
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Correcting old bad data..'
                              );

                         end if;  
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_bill_plan_id,
                              gbv_BillPlanPolicyList,
                              null
                         );
                         
               end;                
                                        
               if length(v_new_policy_list || ',' || v_policy_number) < 3500 then               
                    
                    if nvl(instr(v_new_policy_list, v_policy_number), 0) = 0 then -- OSPRODUCT-19527

                         v_new_policy_list := v_new_policy_list || ',' || v_policy_number;

                         -- OSPRODUCT-4079
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Policy List: ' || v_new_policy_list
                              );

                         end if;

                         -- v_new_policy_list_id := pkg_os_long_string.fn_create_long_string(in_session_id, in_transaction_id, v_new_policy_list);
                         pkg_os_long_string.set_long_string
                         (
                              in_session_id,
                              in_transaction_id,
                              in_bill_plan_id,
                              gbv_BillPlanPolicyList, -- notdescription CLOB
                              v_new_policy_list,
                              v_new_policy_list_id
                         );

                         --OSPRODUCT-8747
                         pkg_db_object.sp_ba_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              in_bill_plan_id,
                              gbv_BillPlanPolicyList,
                              v_new_policy_list_id
                         );
                         --OSPRODUCT-8747
                         
                    end if;
                    
               end if;
               -- end OSPRODUCT-4079
			   
          end if;
                                                                                                                                                                                                           
     end if; -- end 1433
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '..Setting references on PTP and Policy Term..'
          );

     end if;
     
     if v_action_object_type_id = gObjType_PTP then          
     
          -- Get the current bill plan id
          -- OSPRODUCT-3423
          begin
               
               select
                    pterm.pref_bill_plan_id
               into
                    v_current_bill_plan_id
               from
                    dragon_policy_term pterm
               where
                    pterm.policy_term_id = v_policy_term_id;
                    
          exception
               
               when no_data_found then
                    
                    v_current_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_policy_term_id,
                                                   gbv_Ref_TermCurrentPmntArngmnt
                                              );
                                              
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Warning.. Bill Plan not found in datamart. Retrived from storage: ' || v_current_bill_plan_id
                         );

                    end if;
                                              
          end;
          
          -- OSPRODUCT-2620
          -- Associate the bill plan PTP
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               gbv_Ref_PTPAssciatdPmntArngmnt,
               in_bill_plan_id
          );
                         
          -- Associate the Bill Plan with the Policy Term
          --OSPRODUCT-8747
          pkg_db_object.sp_ba_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               gbv_Ref_TermCurrentPmntArngmnt,
               in_bill_plan_id
          );
		
		-- OSPRODUCT-10484
          -- Get the associated placehlder
          v_billplan_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_Ref_PTPBillPlanPlchldr
                                           );
                                           
          -- Set the placeholder of reference to null
          pkg_db_object.sp_ba_object_bv_set--pkg_os_object_io.sp_object_bv_set --OSPRODUCT-21878
          (
               in_session_id,
               in_transaction_id,
               v_billplan_placeholder_id,
               gbv_Ref_PlaceholderOf,
               null
          );
          
          -- Set the bill plan placeholder of reference to null
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               gbv_Ref_PTPBillPlanPlchldr,
               null
          );
          -- end OSPRODUCT-10484
		
          --OSPRODUCT-8747
          -- Update term datamart          
          pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, v_policy_term_id, v_datamart_tf);
                         
     end if;
          
     if v_action_object_type_id = gObjType_PTPPayer then         
    
          -- Get associated Term Payer ID     
          v_associated_term_payer := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, 32578848);
          
          -- Get the current bill plan id
          -- OSPRODUCT-3423
          begin
               
               select
                    tpayer.pref_bill_plan_id
               into
                    v_current_bill_plan_id
               from
                    dragon_policy_term_payer tpayer
               where
                    tpayer.policy_term_payer_id = v_associated_term_payer;
                    
          exception
               
               when no_data_found then
                    
                    v_current_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_associated_term_payer,
                                                   gbv_Ref_TermPayerPrefBillPlan
                                              );
                                              
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..Warning.. Bill Plan not found in datamart. Retrived from storage: ' || v_current_bill_plan_id
                         );

                    end if;
                                              
          end;
          
                                    
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Associated Term Payer: ' || v_associated_term_payer ||
                    '..Current Bill Plan ID; '  || gbv_Ref_TermPayerPrefBillPlan
               );

          end if;
          
          -- Associate the bill plan with the PTPPayer
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               gbv_Ref_PTPayerChosenBillPlan,
               in_bill_plan_id
          ); 
          
          -- Associate the bill plan with the TermPayer             
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_associated_term_payer,
               gbv_Ref_TermPayerPrefBillPlan,
               in_bill_plan_id
          );
		
		-- OSPRODUCT-10484
          -- Get the associated placehlder
          v_billplan_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_action_object_id,
                                                gbv_Ref_PTPayerBillPlanPlchldr
                                           );
                                           
          -- Set the placeholder of reference to null
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billplan_placeholder_id,
               gbv_Ref_PlaceholderOf,
               null
          );
          
          -- Set the bill plan placeholder of reference to null
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               gbv_Ref_PTPayerBillPlanPlchldr,
               null
          );
          -- end OSPRODUCT-10484
                
          pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, v_associated_term_payer, v_datamart_tf);
               
     end if;
     
     -- OSPRODUCT-3423
     if v_current_bill_plan_id is not null
        and
        v_current_bill_plan_id <> in_bill_plan_id
             
     then
          -- Update term datamart          
          pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, v_current_bill_plan_id, v_datamart_tf);
          
     end if;
     
     --354
     if in_bill_plan_id is not null then 
     
        pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, in_bill_plan_id, v_datamart_tf);
     
     end if;
     
     -- 301
     for r_term_installments in c_term_installments loop
          
         pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, r_term_installments.installment_id, v_datamart_tf);
     
     end loop;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_bill_plan_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_bill_plan_create
--
--   %USAGE
--        Associate a Bill Plan with a PTP or PTP Payer id
--
--   %ALGORITHM
--        % Not Specified
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 PTP ID/ PTP Payer ID
--   $PARAM    in_bill_plan_id                     Bill Plan ID (object ID)
--   %PARAM    in_billing_account_id               Billing Account ID
--   %PARAM    in_bill_plan_new_existing           char
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_bill_plan_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,    
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type     
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_bill_plan_create';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     -- OSPRODUCT-3423
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_cust_billing_account_id          object.object_id%type;
     
     -- OSPRODUCT-3423
     v_payer_entity_id                  object.object_id%type;
     v_policy_id                        object.object_id%type;
     
     v_bill_plan_id                     object.object_id%type;
     v_ptp_payer_id                     object.object_id%type;
     v_action_object_type_id            object_type.object_type_id%type;
     v_bill_plan_new_existing           object_bv_value.business_variable_value%type;
     v_ptp_payer_list                   pkg_os_object.t_object_list;
          
     -- OSPRODUCT-3423
     --v_payer_list                       pkg_db_multipayer.t_payer_tab;
     v_payer_index                      number;     
     v_multipayer_enabled_tf            number;
     
     -- OSPRODUCT-3351
     v_key                              object_bv_value.business_variable_value%type;
     v_bill_plan_enabled_tf             number;
     v_datamart_tf                      char(1) := 'T';
	
	v_object_cache                     pkg_os_object_cache.t_object_cache;
    
	-- kiran start OSPRODUCT-29003
    v_billing_account_type             number; 
    -- kiran end OSPRODUCT-29003	

begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
                                
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Initiating Bill Plan creation.. Action Object Type ID: ' || v_action_object_type_id 
          );

     end if;
                                
     if v_action_object_type_id = gObjType_PTP then
          
          -- Get Bill Plan Enabled flag
          -- OSPRODUCT-3351 (get into the setup only if bill plan is enabled)
          v_bill_plan_enabled_tf := nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_action_object_id, gbv_PTPBillPlanEnabledTF), g_No);
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Action Object ID: ' || in_action_object_id ||
                    '.. Bill Plan Enabled?: ' || v_bill_plan_enabled_tf
               );

          end if;
          
          -- OSPRODUCT-3351 Added the condition
          if v_bill_plan_enabled_tf = g_Yes then
          
               -- Get the multipayer flag
               v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, pkg_db_multipayer.gbv_MultiPayerEnabled_PTP);
               
               -- OSPRODUCT-3423 | Performance fix
               -- Get policy transaction id
               v_policy_transaction_id := pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, in_action_object_id);
               
               begin
                    
                    select
                         pt.policy_id,
                         pt.policy_term_id
                    into
                         v_policy_id,
                         v_policy_term_id
                    from
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_id;
                         
                    -- 2358
                    -- Removed as this may create problem
                    /*select
                         p.responsible_billing_account
                    into
                         v_cust_billing_account_id
                    from
                         dragon_policy p
                    where
                         p.policy_id = v_policy_id;*/
                         
               exception
                    
                    when others then
                         
                         v_policy_id := pkg_os_object.fn_object_parent_get (in_session_id, in_transaction_id, v_policy_transaction_id);
                         v_policy_term_id := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_policy_transaction_id, pkg_db_billing_modify.gbv_PolicyTrxRefPolicyTerm);
                    
               end;
               
               -- 2358
               -- Ultimate Customer ID
               v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, in_action_object_id, pkg_os_constant.gObjType_Customer);

               -- Primary Entity ID
               v_primary_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ultimate_customer_id, gbv_Ref_CustPrimaryEntity);

               -- Billing Account ID
               v_cust_billing_account_id := pkg_os_object_search.fn_object_11_child_get (in_session_id, in_transaction_id, v_primary_entity_id, gObjType_BillingAccount);          
					
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Customer Billing Account ID: ' || v_cust_billing_account_id ||
                         '.. Multipayer Enabled? '          || v_multipayer_enabled_tf
                    );

               end if;
               
               -- If not multipayer
               if nvl(v_multipayer_enabled_tf, g_No) = g_No then
               
                    -- Billing Account ID
                    v_billing_account_id := v_cust_billing_account_id;               
                    
                    -- get the payment arrangement request flag
                    v_bill_plan_new_existing := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, gbv_PTPPmntArngmntNewExisting);
                    
                    -- Get the Bill Plan ID               
                    v_bill_plan_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, gbv_Ref_PTPAssciatdPmntArngmnt);
                         
                    if v_bill_plan_id is null 
                       and
                       v_bill_plan_new_existing = gllv_PTPPANew
                    then
                                            
                         -- OSPRODUCT-10484                         
                         sp_billplan_create_placeholder
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              v_object_cache,
                              io_action_outcome_id,
                              'F'
                         );
                         
                         v_bill_plan_id := fn_get_billplan_placeholder
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_action_object_id,
                                                    v_billing_account_id
                                               );
                                               
                         -- end OSPRODUCT-10484
                                           
                         if v_bill_plan_id is null then
                              
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Creating new bill plan ID..'
                                   );

                              end if;
                              
                              pkg_os_object.sp_object_create
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   gObjType_PaymentArrangement,
                                   v_billing_account_id,
                                   v_bill_plan_id
                              );
                         
                         end if;
                         
                    end if;
                    
                    if v_bill_plan_id is not null then       
                    
                         sp_bill_plan_create
                         (
                              in_session_id,
                              in_transaction_id,
                              in_action_object_id,
                              v_bill_plan_id,
                              v_billing_account_id,
                              v_bill_plan_new_existing,
                              io_action_outcome_id
                         );
                    
                    else
                         
                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Bill Plan Setup Error - Bill Plan Object not found..' 
                         );
                         
                         raise BILL_PLAN_SETUP_ERROR;
                    
                    end if;
                    
               else
                    
                    /*pkg_db_multipayer.sp_ptp_payers_get
                    (
                         in_session_id         => in_session_id,
                         in_transaction_id     => in_transaction_id,
                         in_ptp_object_id      => in_action_object_id,
                         io_payer_list         => v_payer_list,           -- indexed by chosen pay plan ID
                         in_print_list         => 'Y',
                         in_index_by           => pkg_db_multipayer.g_PayerGet_idx_BilingAccount
                    );*/
                    
                    -- OSPRODUCT-3423 | Performance fix
                    -- Calling sp_ptp_payers_get tries getting other BVs as well not required for current case
                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id              =>    in_session_id,
                         in_transaction_id          =>    in_transaction_id,
                         in_object_id               =>    in_action_object_id,
                         in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
                         in_object_list             =>    v_ptp_payer_list
                    );
                    
                    -- OSPRODUCT-3351 Removed error log 
					
                    v_payer_index := v_ptp_payer_list.first;
                         
                    while v_payer_index is not null loop
                         
                         v_ptp_payer_id := v_ptp_payer_list(v_payer_index);
                         
                         -- OSPRODUCT-3351 Performance
                         begin
                              select 
                                   payer.billing_account_id
                              into
                                   v_billing_account_id
                              from
                                   dragon_ptp_payer payer
                              where
                                   payer.ptp_payer_id = v_ptp_payer_id;
                                   
                         exception
                              
                              when no_data_found then
                                   null;
                                   
                         end;
                         -- kiran start OSPRODUCT-29003
                         
                         v_billing_account_type   := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_billing_account_id, PKG_DB_CONSTANT.gbv_BAType);
                         
                         if v_session_control.gLogging_Full then
                            pkg_os_logging.sp_log
                            (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '.. Billing account type (v_billing_account_type):'||v_billing_account_type
                            );

                         end if;
                              
                         if v_billing_account_type <> PKG_DB_CONSTANT.gBillingAcType_AgentBroker then
                         -- kiran end OSPRODUCT-29003                              
                            if v_billing_account_id is null then
                                                              
                                v_payer_entity_id := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_ptp_payer_id,
                                                             pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                        );
                                                              
                                v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_payer_entity_id,
                                                             pkg_db_constant.gObjType_BillingAccount
                                                        );
                                                                                      
                            end if;
                         
                            v_bill_plan_new_existing := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ptp_payer_id, gbv_PTPayerBillPlanNewExisting);--32578948
                                                         
                            v_bill_plan_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ptp_payer_id, gbv_Ref_PTPayerChosenBillPlan);
                                                         
                            if v_bill_plan_id is null 
                              and
                              v_bill_plan_new_existing = gllv_PTPPANew
                            then
                                                              
                                -- OSPRODUCT-10484                         
                                sp_billplan_create_placeholder
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_cache,
                                     io_action_outcome_id,
                                     'T'
                                );
                                                              
                                v_bill_plan_id := fn_get_billplan_placeholder
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_action_object_id,
                                                           v_billing_account_id
                                                      );
                                                              
                                -- end OSPRODUCT-10484
                                                                                
                                if v_bill_plan_id is null then
                                                                   
                                     if v_session_control.gLogging_Full then

                                          pkg_os_logging.sp_log
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_procedure_name,
                                               '.. Creating new bill plan ID..'
                                          );

                                     end if;
                                                                   
                                     pkg_os_object.sp_object_create
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          gObjType_PaymentArrangement,
                                          v_billing_account_id,
                                          v_bill_plan_id
                                     );
                                                              
                                end if;
                                                              
                            end if;
                                                         
                            sp_bill_plan_create
                            (
                                in_session_id,
                                in_transaction_id,
                                v_ptp_payer_id,
                                v_bill_plan_id,
                                v_billing_account_id,
                                v_bill_plan_new_existing,
                                io_action_outcome_id
                            );
                                                         
                            if v_billing_account_id = v_cust_billing_account_id then
                                                              
                                /*-- Policy Transaction ID
                                v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, in_action_object_id, pkg_os_constant.gobjType_PolicyTransaction);
                                                              
                                -- Policy Term ID
                                v_policy_term_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_transaction_id, gbv_Ref_PTBelongsToPolicyTerm);
                                */
                                -- Associate the bill plan with the PTP
                                pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     gbv_Ref_PTPAssciatdPmntArngmnt,
                                     v_bill_plan_id
                                );
                                                              
                                -- Associate the Arrangement with the Policy Term
                                pkg_os_object_io.sp_object_bv_set
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_policy_term_id,
                                     gbv_Ref_TermCurrentPmntArngmnt,
                                     v_bill_plan_id
                                );
                                                              
                                -- Update term datamart          
                                pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, v_policy_term_id, v_datamart_tf);          
                                                              
                            end if;
                         
                         -- kiran start OSPRODUCT-29003
                         else
                             if v_session_control.gLogging_Full then
                                pkg_os_logging.sp_log
                                (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '.. Skipping Bill Plan Creation as it is Agency Payer '||v_billing_account_type
                                );
    
                             end if;                         
                         end if;
                         -- kiran end OSPRODUCT-29003  
                         
						 v_payer_index := v_ptp_payer_list.next (v_payer_index);
                         
                    end loop;
                    
               end if;
          
          else
               -- OSPRODUCT-9652
               if v_session_control.gLogging_Full then
                     
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Skipping Bill Plan Creation as bill plan is disabled..' --3351
                    );
                    
               end if;
               
          end if;
          
     else
          
          -- OSPRODUCT-9652      
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Object Type passed in not PTP. Please fix the workflow to pass PTP ID..' --3351
          );
          
          raise no_data_found;
          
     end if;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

-- OSPRODUCT-9652
exception
     
     when others then
          
          pkg_os_logging.sp_log_error
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.. Bill Plan Set up failed for the PTP ID.  Error: ' || sqlerrm (sqlcode)
          );
          raise;

end sp_bill_plan_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_bill_plan_update
--
--   %USAGE
--        The procedure will update the Bill Plan of the passed in policy
--
--   %ALGORITHM
--        PNBT Transaction
--        1. Get the modified bill plan id from action object id
--        2. If existing associate it with the action object id
--        2. If new set the bill plan id with new attributes (call sp_bill_plan_create)
--        Flavour 2-
--        3. The same procedure can be called in other workflow too that is changing any of the
--           configured key attribute
--        4. if the modified bill plan reference is not set and a key attribute is changed
--           then create a new bill plan object and set it up to associate it with current policy
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_action_object_id                 Action Object ID - Policy ID/PTP ID
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_bill_plan_update
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_pay_profile_id                  in             object.object_id%type default null -- --OSPRODUCT-17719 if called with profile update                 
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_bill_plan_update';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_master_policy_id                 object.object_id%type;
     v_payer_billing_account_id         object.object_id%type;

     v_action_object_type_id            object_type.object_type_id%type;
     
     v_bill_plan_enable_tf              char(1);
     v_new_bill_plan_id                 object.object_id%type;
     v_current_bill_plan_id             object.object_id%type;
     v_modified_bill_plan_id            object.object_id%type;
     v_ptp_payer_id                     object.object_id%type;
     
     v_multipayer_enabled_tf            object_bv_value.business_variable_value%type;
     
     v_current_bill_plan_key            object_bv_value.business_variable_value%type;

     v_new_plan_key                     object_bv_value.business_variable_value%type;
     v_profile_detail                   object_bv_value.business_variable_value%type;
     v_payplan_detail                   object_bv_value.business_variable_value%type;
     
     v_payer_list                       pkg_db_multipayer.t_payer_tab;
     v_payer_index                      number;
     v_new_or_existing_tf               char;
     v_cust_billing_account_id          object.object_id%type;    --OSPRODUCT-1245
     v_datamart_tf                      char(1) := 'T';
     v_payer_valid_tf                   char(1);

     -- OSPRODUCT-2620
     v_ptp_billing_method               char(1);
     
     -- OSPRODUCT-19005
     v_most_recent_trx                  object.object_id%type;
     v_most_recent_ptp                  object.object_id%type;
     v_most_recent_payer                object.object_id%type;
     v_payer_entity_id                  object.object_id%type;
     
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get (in_session_id, in_transaction_id, in_action_object_id);

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Start Bill Plan Update..
                .. Action object ID:'    || in_action_object_id ||
               '.. Action Object Type: ' || v_action_object_type_id ||
               '.. Payment Profile Details: '   || in_pay_profile_id --OSPRODUCT-17719
          );

     end if;
     
     if v_action_object_type_id not in (gObjType_Policy, gObjType_PTP, pkg_db_constant.gobjType_PTPPayer) then
          
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Bill Plan Update terminated. Object type not supported..'
          );
          
          -- OSPRODUCT-2620
          io_action_outcome_id := pkg_os_constant.gOutcome_OK;
          
          return;
          
     end if;

     
     v_policy_transaction_id := pkg_os_object_search.fn_object_get_parent_of_type
                                (
                                     in_session_id, 
                                     in_transaction_id, 
                                     in_action_object_id, 
                                     pkg_os_constant.gobjType_PolicyTransaction
                                );
                                
     begin
          
          select
               pt.ptp_id,
               pt.policy_term_id,
               pt.policy_id               
          into
               v_policy_image_id,
               v_policy_term_id,
               v_master_policy_id
          from
               dragon_policy_trx pt
          where
               pt.policy_trx_id = v_policy_transaction_id;
               
     end;
     
     /*begin
         select 
              dp.billing_method_id,
              dp.responsible_billing_account
         into
              v_ptp_billing_method,
              v_cust_billing_account_id
         from
              dragon_policy dp
         where 
              dp.policy_id = v_master_policy_id;

     end;*/
     
     -- OSPRODUCT-4319
     v_ptp_billing_method := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_cs_profiles.gbv_PolicyBillingMethod
                                   );
                                   
     v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                               (
                                    in_session_id, 
                                    in_transaction_id, 
                                    v_policy_term_id, 
                                    pkg_os_constant.gObjType_Customer
                               );

     v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id, 
                                 in_transaction_id, 
                                 v_ultimate_customer_id, 
                                 pkg_base_customer.gbv_CustRefPrimaryEntity
                            );

     v_cust_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        pkg_db_constant.gObjType_BillingAccount
                                  );
     
     -- OSPRODUCT-19005
     -- Get the most recent transaction
     v_most_recent_trx := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_master_policy_id,
                                    212298 -- 
                               );
                                                             
     v_most_recent_ptp := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_most_recent_trx,
                                    212318
                               );                               
     -- end OSPRODUCT-19005

     -- Bill Plan Enabled Flag
     v_bill_plan_enable_tf := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_policy_image_id, gbv_PTPBillPlanEnabledTF);
     
     -- Get the multipayer flag
     v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, v_policy_image_id, pkg_db_multipayer.gbv_MultiPayerEnabled_PTP);
     -- OSPRODUCT-2620 end
     
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Bill Plan Enable ? ' || v_bill_plan_enable_tf ||
               '.. Multipayer Enable? ' || v_multipayer_enabled_tf ||
               '.. Customer Billing Account ID; ' || v_cust_billing_account_id
          );

     end if;
     
     -- OSPRODUCT-2620
     -- If else added
     if v_ptp_billing_method = gllv_BillMethodDirect then
               
          -- OSPRODUCT-2620
          -- Bill Plan Flag retrieval moved outside
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,               
                    '.. Policy Image ID: ' || v_policy_image_id ||
                    '.. Policy Term ID: '  || v_policy_term_id  ||
                    '.. Policy Transaction ID: ' || v_policy_transaction_id
               );

          end if;
                                   
          if v_bill_plan_enable_tf = g_Yes then
               
               -- OSPRODUCT-2620
               -- MP Flag retrieval moved outside                                          
               if nvl(v_multipayer_enabled_tf, g_No) = g_No then -- single payer workflow                    
               
                    -- OSPRODUCT-2459
                    -- Set the Pay Plan flag off
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_PTPChangePayPlanTF,
                         null
                    );
                    
                    -- Set the Pay Profile flag off                              
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_PTPChangePayProfileTF,
                         null
                    );
                    
                    -- Set Change Bill Plan Flag
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_action_object_id,
                         gbv_PTPChangeBillPlanTF,
                         gllv_ChangeBillPlan
                    );
                    
                    v_profile_detail := null;
                    v_payplan_detail := null;
                    -- end OSPRODUCT-2459
                    
                    -- Billing Account ID
                    v_billing_account_id:= v_cust_billing_account_id;
                    
                    -- Chosen Bill Plan          
                    v_current_bill_plan_id := pkg_os_object_io.fn_object_bv_get 
                                              (
                                                  in_session_id, 
                                                  in_transaction_id, 
                                                  v_policy_image_id, 
                                                  gbv_Ref_PTPAssciatdPmntArngmnt
                                              );
                                                  
                    -- Modified Bill Plan
                    v_modified_bill_plan_id := pkg_os_object_io.fn_object_bv_get 
                                               (
                                                    in_session_id, 
                                                    in_transaction_id, 
                                                    v_policy_image_id, 
                                                    gbv_Ref_PTPModifiedPmntArngmnt
                                               );
                                               
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Chosen Bill Plan: ' || v_current_bill_plan_id ||
                              '.. Modified Bill Plan: ' || v_modified_bill_plan_id
                         );

                    end if;
                    
                    -- OSPRODUCT-3351                    
                    /*if v_current_bill_plan_id is null and v_modified_bill_plan_id is null then
                         
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Bill Plan Update terminated. Current bill plan and modified bill plan not found'
                         );
                         
                         --OSPRODUCT-2620
                         io_action_outcome_id := pkg_os_constant.gOutcome_OK;
                         
                         return;
                         
                    end if;  */     
                    
                    begin
                         
                         if v_modified_bill_plan_id is not null 
                            and
                            pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_image_id, gbv_PTPPmntArngmntNewExisting) = gllv_PTPPAExisting
                         then
                                    
                              v_new_bill_plan_id := v_modified_bill_plan_id;                         
                                   
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Existing bill plan chosen as the new plan. ' || v_new_bill_plan_id
                                   );

                              end if;
                         
                         else
                              
                              if v_current_bill_plan_id is null then                               
                                   
                                   v_current_bill_plan_key := null;                       
                                        
                              else
                                   
                                   v_current_bill_plan_key := fn_get_bill_plan_key
                                                              (
                                                                   in_session_id,
                                                                   in_transaction_id,
                                                                   pkg_os_constant.gobjType_PolicyTrxPolicy,
                                                                   v_current_bill_plan_id
                                                              );
                                                                                                     
                                   --OSPRODUCT-17719
                                   if in_pay_profile_id is not null then
                                        
                                        v_profile_detail := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_pay_profile_id,
                                                                 gbv_CTFProfileDetail
                                                            );
                                   end if;
                                   -- end OSPRODUCT-17719

                                   -- OSPRODUCT-19527
                                   begin

                                        v_new_plan_key := fn_get_new_bill_plan_key
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_policy_image_id,
                                                               v_profile_detail,
                                                               v_payplan_detail,
                                                               v_current_bill_plan_key -- OSPRODUCT-14807
                                                          );
                                                          
                                   exception
                                        
                                        when BILL_PLAN_PRF_NOT_FOUND then
                                             
                                             pkg_os_logging.sp_log_error
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Error - Preferred profile not found for the new bill plan.. ' || dbms_utility.format_error_backtrace
                                             );
                                             
                                             raise;
                                             
                                        when BILL_PLAN_PAYPLAN_NOT_FOUND then
                                             
                                             pkg_os_logging.sp_log_error
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Error - Chosen pay plan not found for the new bill plan.. ' || dbms_utility.format_error_backtrace
                                             );
                                             
                                             raise;
                                             
                                        when BILL_PLAN_NAME_NOT_FOUND then
                                             
                                             pkg_os_logging.sp_log_error
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Error - Bill Plan name not found for the current term.. ' || dbms_utility.format_error_backtrace
                                             );
                                             
                                             raise;
                                             
                                        when others then
                                             
                                             pkg_os_logging.sp_log_error
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '..Error - New Key for the bill plan could not be found.. ' || dbms_utility.format_error_backtrace
                                             );
                                             
                                             raise no_data_found;
                                             
                                   
                                   end;
                                   -- OSPRODUCT-19527
                                                     
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Current Bill Plan Key: ' || v_current_bill_plan_key ||
                                             '..New Bill Plan Key: '     || v_new_plan_key
                                        );

                                   end if;
                                                     
                              end if;          
                              
                              if v_current_bill_plan_key is null
                                 or
                                 v_current_bill_plan_key != v_new_plan_key 
                              then
                                   
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..Starting Bill Plan Update..'
                                        );

                                   end if;
                                   
                                   -- OSPRODUCT-2242 Failed case
                                   v_new_bill_plan_id := fn_get_mod_bill_plan_id
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_policy_image_id,
                                                              v_billing_account_id,
                                                              v_modified_bill_plan_id,
                                                              v_profile_detail,
                                                              v_payplan_detail,
                                                              v_new_or_existing_tf                    
                                                         );
                                                         
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. New Bill Plan: ' || v_new_bill_plan_id
                                        );

                                   end if;
                                                         
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id, 
                                        in_transaction_id, 
                                        v_policy_image_id, 
                                        gbv_PTPPmntArngmntNewExisting,
                                        v_new_or_existing_tf
                                   );
                                   
                              else
                         
                                   if v_session_control.gLogging_Full then

                                         pkg_os_logging.sp_log
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_procedure_name,
                                              '.. Key not changed. Bill Plan update not required. Setiing references..'      
                                         );
                                             
                                   end if;                        
                                                           
                                   v_new_bill_plan_id := v_current_bill_plan_id;
                                   
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id, 
                                        in_transaction_id, 
                                        v_policy_image_id, 
                                        gbv_PTPPmntArngmntNewExisting,
                                        gllv_PTPPAExisting
                                   );
                              
                              end if; 
                                   
                         end if;
                         
                         sp_bill_plan_create
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_image_id,
                              v_new_bill_plan_id,
                              v_billing_account_id,
                              pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_image_id, gbv_PTPPmntArngmntNewExisting),
                              io_action_outcome_id
                         ); 
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_image_id,
                              gbv_Ref_PTPModifiedPmntArngmnt,
                              null
                         );
                         
                         -- OSPRODUCT-19005                                                   
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Most Recent Func Trx' || v_most_recent_trx ||
                                   '.. Most Recent Func PTP' || v_most_recent_ptp ||
                                   '.. PT: '                 || v_policy_transaction_id ||
                                   '.. Current Bill Plan: '  || v_current_bill_plan_id ||
                                   '.. New bill Plan'        || v_new_bill_plan_id
                              );

                         end if;
                                                   
                         if v_most_recent_trx <> v_policy_transaction_id 
                            and
                            pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_trx, 21912302) = in_action_object_id -- basis coverage
                            and
                            pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_ptp,210153) <> 106 -- not processed
                            and
                            pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_ptp,gbv_Ref_PTPAssciatdPmntArngmnt) = v_current_bill_plan_id
                         then
                              
                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Resetting the bill plan on the unprocessed transaction..'  
                                   );

                              end if;
                              
                              -- Associate the bill plan with the PTPPayer
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_most_recent_ptp,
                                   gbv_Ref_PTPAssciatdPmntArngmnt,
                                   v_new_bill_plan_id
                              );
                              
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_most_recent_ptp,
                                   gbv_PTPPmntArngmntNewExisting,
                                   gllv_PTPPAExisting
                              );
                         
                         end if;
                         -- end OSPRODUCT-19005 

                    end;
                                                 
               else
                    
                    if v_action_object_type_id <> pkg_db_constant.gobjType_PTPPayer then 
                         
                         pkg_db_multipayer.sp_ptp_payers_get
                         (
                              in_session_id         => in_session_id,
                              in_transaction_id     => in_transaction_id,
                              in_ptp_object_id      => v_policy_image_id,
                              io_payer_list         => v_payer_list,           -- indexed by chosen pay plan ID
                              in_print_list         => 'Y',
                              in_index_by           => pkg_db_multipayer.g_PayerGet_idx_BilingAccount
                         );
                         
                    else
                         
                         v_payer_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_action_object_id,
                                                                      pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                                 ),
                                                                 pkg_db_constant.gObjType_BillingAccount
                                                            );
                              
                              
                         v_payer_list(v_payer_billing_account_id).PTPayer_object_id := in_action_object_id;

                         v_payer_list(v_payer_billing_account_id).PayerBillingAccount_id := v_payer_billing_account_id;
                    
                    end if;
                                   
                    v_payer_index := v_payer_list.first;
                                   
                    while v_payer_index is not null loop
                         
                         -- PTP Payer ID                                   
                         v_ptp_payer_id := v_payer_list(v_payer_index).PTPayer_object_id;
                         
                         v_payer_valid_tf := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id, 
                                                  in_transaction_id, 
                                                  v_ptp_payer_id, 
                                                  32993324
                                             );
                                             
                         if v_payer_valid_tf = g_Yes then
                              
                              -- OSPRODUCT-2459
                              -- Set the Pay Plan flag off 
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ptp_payer_id,
                                   gbv_PTPPayerChangePayPlanTF,
                                   null
                              );
                              
                              -- Set the Pay Profile flag off                              
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ptp_payer_id,
                                   gbv_PTPPayerChangePayProfileTF,
                                   null
                              );
                              
                              -- Set Change Bill Plan Flag
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_ptp_payer_id,
                                   gbv_PTPPayerChangeBillPlanTF,
                                   gllv_ChangeBillPlan
                              );
                              
                              v_profile_detail := null;
                              v_payplan_detail := null;                         
                              -- end OSPRODUCT-2459                 
                                   
                              -- Billing Account ID                        
                              v_billing_account_id := v_payer_list(v_payer_index).payerbillingaccount_id;
                                   
                              -- Chosen Bill Plan              
                              v_current_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id, 
                                                             in_transaction_id, 
                                                             v_ptp_payer_id, 
                                                             gbv_Ref_PTPayerChosenBillPlan
                                                        );
                                                             
                              -- Modified Bill Plan
                              v_modified_bill_plan_id := pkg_os_object_io.fn_object_bv_get 
                                                         (
                                                              in_session_id, 
                                                              in_transaction_id, 
                                                              v_ptp_payer_id, 
                                                              gbv_Ref_PTPayerModBillPlan
                                                         );
                                                         
                                                         
                              if v_session_control.gLogging_Full then

                                    pkg_os_logging.sp_log
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_procedure_name,
                                         '.. Payer ID: ' || v_ptp_payer_id ||
                                         '.. Payer Billing Account ID: ' || v_billing_account_id ||
                                         '.. Chosen Bill Plan: ' || v_current_bill_plan_id ||
                                         '.. Modified Bill Plan: ' || v_modified_bill_plan_id 
                                    );
                                                  
                              end if;
							  
                              --OSPRODUCT-16825
                              /*if v_current_bill_plan_id is null and v_modified_bill_plan_id is null then
                              
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.. Bill Plan Update terminated. Current bill plan and modified bill plan not found'
                                   );
                                   
                                   -- OSPRODUCT-2620
                                   io_action_outcome_id := pkg_os_constant.gOutcome_OK;
                                   
                                   return;
                                   
                              end if;*/                
                              
                              begin
                              
                                   if v_modified_bill_plan_id is not null 
                                      and
                                      pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ptp_payer_id, gbv_PTPayerBillPlanNewExisting) = gllv_PTPPAExisting
                                   then
                                              
                                        v_new_bill_plan_id := v_modified_bill_plan_id;
                                             
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Existing bill plan chosen as the new plan. ' || v_new_bill_plan_id
                                             );

                                        end if;
                                             
                                   else
                                        
                                         if v_current_bill_plan_id is null then                               
                                        
                                             v_current_bill_plan_key := null;                       
                                                  
                                        else
                                             
                                             v_current_bill_plan_key := fn_get_bill_plan_key
                                                                        (
                                                                             in_session_id,
                                                                             in_transaction_id,
                                                                             pkg_db_constant.gobjType_PTPPayer,
                                                                             v_current_bill_plan_id
                                                                        );
                                                                                                                  
                                             --OSPRODUCT-17719
                                             if in_pay_profile_id is not null then
                                                  
                                                  v_profile_detail := pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           in_pay_profile_id,
                                                                           gbv_CTFProfileDetail
                                                                      );
                                             end if;
                                             -- end OSPRODUCT-17719

                                             -- OSPRODUCT-19527
                                             begin

                                                  v_new_plan_key := fn_get_new_bill_plan_key
                                                                    (
                                                                         in_session_id,
                                                                         in_transaction_id,
                                                                         v_ptp_payer_id,
                                                                         v_profile_detail,
                                                                         v_payplan_detail,
                                                                         v_current_bill_plan_key -- OSPRODUCT-14807
                                                                    );
                                                                    
                                             exception
                                                  
                                                  when BILL_PLAN_PRF_NOT_FOUND then
                                                       
                                                       pkg_os_logging.sp_log_error
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '..Error - Preferred profile not found for the new bill plan.. ' || dbms_utility.format_error_backtrace
                                                       );
                                                       
                                                       raise BILL_PLAN_PRF_NOT_FOUND;
                                                       
                                                  when BILL_PLAN_PAYPLAN_NOT_FOUND then
                                                       
                                                       pkg_os_logging.sp_log_error
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '..Error - Chosen pay plan not found for the new bill plan.. ' || dbms_utility.format_error_backtrace
                                                       );
                                                       
                                                       raise BILL_PLAN_PRF_NOT_FOUND;
                                                       
                                                  when BILL_PLAN_NAME_NOT_FOUND then
                                                       
                                                       pkg_os_logging.sp_log_error
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '..Error - Bill Plan name not found for the current term.. ' || dbms_utility.format_error_backtrace
                                                       );
                                                       
                                                       raise BILL_PLAN_PRF_NOT_FOUND;
                                                       
                                                  when others then
                                                       
                                                       pkg_os_logging.sp_log_error
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            '..Error - New Key for the bill plan could not be found.. ' || dbms_utility.format_error_backtrace
                                                       );
                                                       
                                                       raise no_data_found;
                                                       
                                             
                                             end;
                                             -- OSPRODUCT-19527
                                                               
                                        end if;                                            
                                        
                                        if v_current_bill_plan_key is null
                                           or
                                           v_current_bill_plan_key != v_new_plan_key 
                                        then
                                             
                                             if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '..Starting Bill Plan Update..'
                                                  );

                                             end if;
                                             
                                             v_new_bill_plan_id := fn_get_mod_bill_plan_id
                                                                   (
                                                                        in_session_id,
                                                                        in_transaction_id,
                                                                        v_ptp_payer_id,
                                                                        v_billing_account_id,
                                                                        v_modified_bill_plan_id,
                                                                        v_profile_detail,
                                                                        v_payplan_detail,
                                                                        v_new_or_existing_tf                    
                                                                   );
                                                                   
                                             if v_session_control.gLogging_Full then

                                                   pkg_os_logging.sp_log
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_procedure_name,
                                                        '.. New Bill Plan: ' || v_new_bill_plan_id
                                                   );
                                                                 
                                             end if; 
                                                                   
                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id, 
                                                  in_transaction_id, 
                                                  v_ptp_payer_id, 
                                                  gbv_PTPayerBillPlanNewExisting,
                                                  v_new_or_existing_tf
                                             );
                                             
                                        else
                                   
                                             if v_session_control.gLogging_Full then

                                                   pkg_os_logging.sp_log
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_procedure_name,
                                                        '.. Key not changed. Bill Plan update not required. Setting references..'      
                                                   );
                                                       
                                             end if;                        
                                                                     
                                             v_new_bill_plan_id := v_current_bill_plan_id;
                                             
                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id, 
                                                  in_transaction_id, 
                                                  v_ptp_payer_id, 
                                                  gbv_PTPayerBillPlanNewExisting,
                                                  gllv_PTPPAExisting
                                             );
                                        
                                        end if; 
                                             
                                   end if;
                                   
                                   sp_bill_plan_create
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ptp_payer_id,
                                        v_new_bill_plan_id,
                                        v_billing_account_id,
                                        pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ptp_payer_id, gbv_PTPayerBillPlanNewExisting),
                                        io_action_outcome_id
                                   );  
                                   
                                   pkg_os_object_io.sp_object_bv_set 
                                   (
                                        in_session_id, 
                                        in_transaction_id, 
                                        v_ptp_payer_id, 
                                        gbv_Ref_PTPayerModBillPlan,
                                        null
                                   );
                                   
                                   --OSPRODUCT-1245 Starts
                                   if v_billing_account_id = v_cust_billing_account_id then
                                        
                                        -- Associate the Bill Plan with the Policy Term
                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_term_id,
                                             gbv_Ref_TermCurrentPmntArngmnt,
                                             v_new_bill_plan_id
                                        );
                                        
                                        -- Associate the Bill Plan with the Policy image id
                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_image_id,
                                             gbv_Ref_PTPAssciatdPmntArngmnt,
                                             v_new_bill_plan_id
                                        );
                                        
                                        -- Update the datamart        
                                        pkg_os_datamart.sp_datamart_update_row( in_session_id, in_transaction_id, v_policy_term_id, v_datamart_tf);  
                    
                                   end if;
                                   --OSPRODUCT-1245 Ends
                                   
                                   -- OSPRODUCT-19005                                   
                                   v_payer_entity_id := pkg_os_object.fn_object_parent_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_billing_account_id
                                                        );
                                                        
                                   -- Get the corresponding payer in the most recent func trc
                                   v_most_recent_payer := pkg_os_object_search.fn_object_with_attribute_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_most_recent_ptp,
                                                                    pkg_db_multipayer.gObjType_PTPPayer,
                                                                    pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr,
                                                                    v_payer_entity_id
                                                               );
                                                             
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Payer entity ID: ' || v_payer_entity_id ||
                                             '.. Most Recent Func PTPPayer' || v_most_recent_payer
                                        );

                                   end if;
                                                             
                                   if v_most_recent_payer is not null 
                                      and
                                      v_most_recent_trx <> v_policy_transaction_id 
                                      and
                                      pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_trx, 21912302) = v_policy_image_id -- basis coverage
                                      and
                                      pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_ptp,210153) <> 106
                                      and
                                      pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,v_most_recent_payer,gbv_Ref_PTPayerChosenBillPlan) = v_current_bill_plan_id
                                   then
                                        
                                        if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Resetting the bill plan on the unprocessed transaction..' 
                                             );

                                        end if;
                                        
                                        -- Associate the bill plan with the PTPPayer
                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_most_recent_payer,
                                             gbv_Ref_PTPayerChosenBillPlan,
                                             v_new_bill_plan_id
                                        );
                                        
                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_most_recent_payer,
                                             gbv_PTPayerBillPlanNewExisting,
                                             gllv_PTPPAExisting
                                        );
                                   
                                   end if;
                                   -- end OSPRODUCT-19005 

                              end;
                              
                         else
                              if v_session_control.gLogging_Full then

                                    pkg_os_logging.sp_log
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_procedure_name,
                                         '.. Skipping the payer as the same is not valid'      
                                    );
                                                       
                              end if;
						
						-- Cleaning up the placeholder
                              -- OSPRODUCT-11205
                              -- Get the associated placehlder
                              declare
                              
                              v_billplan_placeholder_id  object.object_id%type;
                              
                              begin
                                   v_billplan_placeholder_id := pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                         in_session_id,
                                                                         in_transaction_id,
                                                                         v_ptp_payer_id,
                                                                         gbv_Ref_PTPayerBillPlanPlchldr
                                                                    );
                                                                    
                                   -- Set the placeholder of reference to null
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billplan_placeholder_id,
                                        gbv_Ref_PlaceholderOf,
                                        null
                                   );
                                   
                                   -- Set the bill plan placeholder of reference to null
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ptp_payer_id,
                                        gbv_Ref_PTPayerBillPlanPlchldr,
                                        null
                                   );
                                   -- end OSPRODUCT-11205
                                   
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_procedure_name,
                                              '.. Placeholder cleaned up..'      
                                        );
                                                       
                                   end if;
							
						end;
                         
                         end if;
                                                         
                         v_payer_index := v_payer_list.next(v_payer_index);                                         
                              
                    end loop; 
                    
               end if; 
          
          else
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,               
                         '.. Skipping bill plan update as bill plan is disabled.' --3351
                    );

               end if;
               
          end if; 

     else
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. Skipping Bill Plan Update as the PTP is not direct billed. PTP Billing Method: ' || v_ptp_billing_method
               );

          end if;
          
          if nvl(v_multipayer_enabled_tf, g_No) = g_No then
               
               -- Set the Bill Plan to null on PTP
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_action_object_id,
                    gbv_Ref_PTPAssciatdPmntArngmnt,
                    null
               );
                              
               -- Set the Bill Plan to null on Polict Term
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_policy_term_id,
                    gbv_Ref_TermCurrentPmntArngmnt,
                    null
               );
               
          end if;
     
     end if;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_bill_plan_update;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_upd_billplan_profile_attr
--
--   %USAGE
--        % Call through Bill Plan updated job
--
--   %ALGORITHM
--        % Not Specified
--
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_billing_account_id               Billing Account ID
--   %PARAM    io_action_outcome_id                Action Outcome
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- discarded
/*procedure sp_upd_billplan_profile_attr
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_billing_account_id              in             object.object_id%type,     
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_upd_billplan_profile_attr';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_ultimate_customer_id             object.object_id%type;
     
     v_policy_id                        object.object_id%type;
     v_new_review_date                  date;
     v_current_term_id                  object.object_id%type;
     v_associated_bill_plan_id          object.object_id%type;
     v_bill_plan_ctf_id                 object.object_id%type;
     v_current_term_ppu_id              object.object_id%type;
     v_term_ctf_id                      object.object_id%type;
     v_pt_trx_id                        object.object_id%type;
     v_most_recent_ptp_id               object.object_id%type;
     v_new_bill_plan_id                 object.object_id%type;
     v_review_date                      object_bv_value.business_variable_value%type;

     v_datamart_tf                      char(1) := 'T';
     
     cursor c_customer_active_policies (in_customer_id in object.object_id%type)
     is
          
          select
              policy_id
          from
              dragon_policy  dp
          where
              dp.customer_id = in_customer_id
          and
              dp.policy_object_state_id not in (73, 36746); -- Cancelled, Expired

begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Billing Account ID:' || in_billing_account_id
          );

     end if;
     
     -- Get the Billing Account Review Date
     v_review_date := pkg_os_object_io.fn_object_bv_get
                      (
                           in_session_id,
                           in_transaction_id,
                           in_billing_account_id,
                           gbv_BAProfileReviewDate
                      );
               
     
     if pkg_os_object.fn_object_type_get (in_session_id, in_transaction_id, in_billing_account_id) = gObjType_BillingAccount then 
                              
          -- Ultimate customer id
          v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, in_billing_account_id, pkg_os_constant.gObjType_Customer);

          -- Get the policies under the customer
          for v_active_policy in c_customer_active_policies (v_ultimate_customer_id) loop
               
               v_policy_id := v_active_policy.policy_id;
               
               -- Get the current term
               v_current_term_id := pkg_db_functions.fn_get_policy_current_term
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_policy_id
                                    );
               
               -- Most current functional transaction associated with current term
               select nvl(max(pt.policy_trx_id), 0)
                 into v_pt_trx_id
                 from dragon_policy_trx pt
                where pt.policy_id = v_policy_id
                  and pt.policy_term_id = v_current_term_id
                  and (
                           (
                                pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                                and
                                pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id, pkg_cs_functions.g_ObjStateSet_PrcessedPending) = 'T'
                           )
                           or
                           (
                                pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                                and
                                pkg_os_policy_transaction_type.fn_transaction_type_in_set (policy_trx_type_id, pkg_cs_functions.g_PdTrxSet_All_Non_Floating  ) = 'T' --7846
                           )
                      );

               v_most_recent_ptp_id := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_pt_trx_id,
                                            212318 -- Coverage
                                       );
               
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Policy ID:' || v_policy_id ||
                         '.. PTP ID: '   || v_most_recent_ptp_id
                    );

               end if;
               
               -- get the associated bill plan and preferred CTF id
               v_associated_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_current_term_id,
                                                 gbv_Ref_TermCurrentPmntArngmnt
                                            );
                                           
               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Current term: ' || v_current_term_id ||
                         '.. Associated Bill Plan: ' || v_associated_bill_plan_id
                    );

               end if;
                                                     
               if v_associated_bill_plan_id is not null then
                    
                    -- Get the associate CTF
                    v_bill_plan_ctf_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_associated_bill_plan_id,
                                               gbv_Ref_PmntArrangementCTF
                                          ); 
                    
                    v_current_term_ppu_id := pkg_os_object_io.fn_object_bv_get
                                             (     
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_current_term_id,
                                                  gbv_Ref_TermPrefPmntProfile
                                             );
                                                      
                    v_term_ctf_id := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_current_term_ppu_id,
                                          gbv_PPUCashTransferProfUSed
                                     ); 
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. CTF associated with Bill Plan' || v_bill_plan_ctf_id ||
                              '.. CTF associated with Term: '    || v_term_ctf_id
                         );

                    end if; 
                    
                    if fn_get_billplan_profile_detail (in_session_id, in_transaction_id, v_bill_plan_ctf_id)
                       <>
                       fn_get_billplan_profile_detail (in_session_id, in_transaction_id, v_term_ctf_id) 
                    then
                         
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Profile changed for the policy. Initiating the bill plan update..' 
                              );

                         end if;
                                                   
                         -- Update the bill plan
                         sp_bill_plan_update
                         (
                              in_session_id,
                              in_transaction_id,
                              v_most_recent_ptp_id,
                              io_action_outcome_id
                         );
                         
                         v_new_bill_plan_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_current_term_id,
                                                    gbv_Ref_TermCurrentPmntArngmnt
                                               );
                         						 
                         -- Set Start Date
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_new_bill_plan_id,
                              gbv_PmntArrangementStartDate,
                              v_review_date
                         );
                         
                                               
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Bill plan updated successfully. New Bill Plan ID: ' || v_new_bill_plan_id
                              );

                         end if;
                         
                    end if;
               
               end if;
               
               pkg_db_payplan_modify.sp_ba_sched_payment_generate
               (
                    in_session_id,
                    in_transaction_id,
                    v_most_recent_ptp_id
               );                                   
                                   
               pkg_db_billing_modify.sp_billaccinstallment_create
               (
                    in_session_id, 
                    in_transaction_id, 
                    v_most_recent_ptp_id, 
                    io_action_outcome_id
               );
               
          end loop;
          
          -- Update the next review date
          -- Get all the payment profile usage object sorted based on the profile start date
          select min(profile_start_date)
            into v_new_review_date
            from dragon_pay_profile
            where billing_account_id = in_billing_account_id
              and trunc(profile_start_date) > trunc(sysdate);
                             
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '.. New review date: ' || v_new_review_date
               );

          end if;
                              
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gbv_BAProfileReviewDate, -- new addition to header
               to_char(v_new_review_date, 'YYYYMMDDHH24MISS')
          );
               
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_billing_account_id,
               gbv_BA_PrefPaymentProfile,
               v_current_term_ppu_id
          );
               
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_billing_account_id, v_datamart_tf);
          
     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_upd_billplan_profile_attr;*/

procedure sp_profileupd_existingbillplan
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_image_id                 in             object.object_id%type,
     in_bill_plan_id                    in             object.object_id%type
)
as

     v_procedure_name  constant         system_log.program_name%type := pkg_name||'sp_profileupd_existingbillplan';
     v_session_control                  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_policy_transaction_id            object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_ptp_pref_profile_ppu             object.object_id%type;
     v_ctf_id                           object.object_id%type;
     
begin

     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Bill Plan:' || in_bill_plan_id
          );

     end if;
     
     -- Policy Transaction ID
     v_policy_transaction_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_policy_image_id);

     -- Policy Term ID
     v_policy_term_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_policy_transaction_id, gbv_Ref_PTBelongsToPolicyTerm);
     
     -- Preferred Payment Profile
     v_ptp_pref_profile_ppu := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_term_id,
                                    gbv_Ref_TermPrefPmntProfile
                               );
                               
     -- CTF associated with PPU
     v_ctf_id := pkg_os_object_io.fn_object_bv_get
                 (
                      in_session_id, 
                      in_transaction_id, 
                      v_ptp_pref_profile_ppu, 
                      gbv_PPUCashTransferProfUSed
                 );
     
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_bill_plan_id,
          gbv_Ref_PmntArrangementCTF,
          v_ctf_id
     );

end sp_profileupd_existingbillplan;

function fn_get_duplicate_billplan_name
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type
)
return object_bv_value.business_variable_value%type
is
     v_profile_details           object_bv_value.business_variable_value%type;
     v_payplan_details           object_bv_value.business_variable_value%type;
     v_bill_plan_id              object.object_id%type;              
     v_return_value              object_bv_value.business_variable_value%type;
begin
     
     v_bill_plan_id := fn_get_duplicate_billplan_id
                       (
                            in_session_id,
                            in_transaction_id,
                            in_action_object_id,
                            v_profile_details,
                            v_payplan_details
                       );
                       
     v_return_value := pkg_os_object_io.fn_object_bv_get
                       (
                            in_session_id,
                            in_transaction_id,
                            v_bill_plan_id,
                            gbv_PaymentArrangementName
                       );
                       
     return v_return_value;

end fn_get_duplicate_billplan_name;

function fn_duplicate_billplan_tf
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type
)
return char
is
     v_profile_details           object_bv_value.business_variable_value%type;
     v_payplan_details           object_bv_value.business_variable_value%type;
     v_return_value              char(1);
begin
     
     v_return_value := fn_duplicate_billplan_tf
                       (
                            in_session_id,
                            in_transaction_id,
                            in_action_object_id,
                            v_profile_details,
                            v_payplan_details
                       );
                       
     return v_return_value;

end fn_duplicate_billplan_tf;


function fn_get_new_billplan_default_nm
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_action_object_id                in             object.object_id%type
)
return object_bv_value.business_variable_value%type
is
     v_profile_details           object_bv_value.business_variable_value%type;
     v_payplan_details           object_bv_value.business_variable_value%type;
     v_default_name              object_bv_value.business_variable_value%type;
begin
     
     v_default_name := fn_get_new_billplan_default_nm
                       (
                            in_session_id,
                            in_transaction_id,
                            in_action_object_id,
                            v_profile_details,
                            v_payplan_details                       
                       );
     
     return v_default_name;
     
end fn_get_new_billplan_default_nm;

-- OSPRODUCT-10484
procedure sp_set_ba_lock
(
     in_session_id                in             object.object_id%type,
     in_transaction_id            in             object.object_id%type,
     in_action_object_id          in             object.object_id%type,
     io_action_outcome_id         in out         outcome.outcome_id%type       
)
as

     v_procedure_name  constant   system_log.program_name%type := pkg_name || 'sp_set_ba_lock';
     v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_billing_account_id         object.object_id%type;
     v_bill_plan_enabled_tf       number;
     v_ptp_payer_list             pkg_os_object.t_object_list;
     v_payer_index                number;     
     v_multipayer_enabled_tf      number;
     v_ptp_payer_id               object.object_id%type;
     v_payer_entity_id            object.object_id%type;
     v_ultimate_customer_id       object.object_id%type;
     v_primary_entity_id          object.object_id%type;
     v_cust_billing_account_id    object.object_id%type;
     v_exchange_id                object.object_id%type;
     v_billing_acc_type_id        number;
     v_bill_plan_new_existing     char(1);
     v_lock_status                char(1);
     v_bill_method_noncust        char(1) := null; 
     v_message                    varchar2(500) := 'Could not acquire lock for payer(s) - ';
     
begin
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;
     
     v_bill_plan_enabled_tf := nvl ( pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id, in_action_object_id, gbv_PTPBillPlanEnabledTF), g_No);
     
     if v_bill_plan_enabled_tf = g_Yes then
          
          v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_action_object_id, pkg_db_multipayer.gbv_MultiPayerEnabled_PTP);
          
          if nvl(v_multipayer_enabled_tf, g_No) = g_Yes then
               
               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id              =>    in_session_id,
                    in_transaction_id          =>    in_transaction_id,
                    in_object_id               =>    in_action_object_id,
                    in_child_object_type_id    =>    pkg_db_constant.gobjType_PTPPayer,
                    in_object_list             =>    v_ptp_payer_list
               );
               
               v_payer_index := v_ptp_payer_list.first;
                         
               while v_payer_index is not null loop
                    
                    v_ptp_payer_id := v_ptp_payer_list(v_payer_index);
                         
                    -- OSPRODUCT-3351 Performance
                    begin
                         
                         select 
                              payer.billing_account_id
                         into
                              v_billing_account_id
                         from
                              dragon_ptp_payer payer
                         where
                              payer.ptp_payer_id = v_ptp_payer_id;
                                   
                    exception
                              
                         when no_data_found then
                              null;
                                   
                    end;
                              
                    if v_billing_account_id is null then
                              
                         v_payer_entity_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_ptp_payer_id,
                                                      pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                 );
                              
                         v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_payer_entity_id,
                                                      pkg_db_constant.gObjType_BillingAccount
                                                 );
                                                      
                    end if;
                    
                    -- Get BA type
                    v_billing_acc_type_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_billing_account_id,
                                                 pkg_db_billing_modify.gbv_BillingAccountType
                                             );
                                             
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Payer ID: ' || v_ptp_payer_id ||
                              ' Account Type ID: ' || v_billing_acc_type_id       
                         );

                    end if;
                                             
                    if v_billing_acc_type_id not in (g_BAAcctTypeCustomer, g_BAAcctTypeAgent) then
                                             
                         v_bill_plan_new_existing := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id, 
                                                          in_transaction_id, 
                                                          v_ptp_payer_id, 
                                                          gbv_PTPayerBillPlanNewExisting
                                                     );--32578948
                                                
                         -- Get the exchange
                         v_exchange_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_session_id,
                                               pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                                          );
                                                     
                         v_bill_method_noncust := nvl ( pkg_os_object_io.fn_object_bv_get
                                                  ( 
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_exchange_id,
                                                       gbv_ExchangeBillMethodNonCust-- added to pkg spec
                                                  ), g_Account); 
                         
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' New or Existing: ' || v_bill_plan_new_existing ||
                                   ' Billing Method: '  || v_bill_method_noncust       
                              );

                         end if;
                                             
                         if v_bill_plan_new_existing = gllv_PTPPANew
                            and 
                            v_bill_method_noncust = g_Account
                         then
                              
                              begin
                    
                                   pkg_db_object.sp_db_set_object_lock
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account_id,
                                        v_lock_status
                                   );
                                   
                                   if v_session_control.gLogging_Full then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             ' Lock Acquired.. '      
                                        );

                                   end if;
                                   
                              exception
                                   
                                   when others then
                                             
                                        io_action_outcome_id := pkg_os_constant.gOutcome_ObjectLocked;                                      
                                        v_message := v_message || ' ' || pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ptp_payer_id, 211882 );
                                        
                              end;

                         end if;
                         
                    end if;
                    
                    v_payer_index := v_ptp_payer_list.next (v_payer_index);
                    
               end loop;
          
          end if;
          
     end if;
     
     if io_action_outcome_id = pkg_os_constant.gOutcome_ObjectLocked then
          
          v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, in_action_object_id, pkg_os_constant.gObjType_Customer);

          -- Primary Entity ID
          v_primary_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_ultimate_customer_id, gbv_Ref_CustPrimaryEntity);

          -- Billing Account ID
          v_cust_billing_account_id := pkg_os_object_search.fn_object_11_child_get (in_session_id, in_transaction_id, v_primary_entity_id, gObjType_BillingAccount);          
               
          -- BV set
          v_message := v_message || ' for new Bill Plan setup. Either choose an existing bill plan or retry in some time.';
          
          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' Customer Account ID: ' || v_cust_billing_account_id     
               );

          end if;
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_cust_billing_account_id,
               32835148,
               v_message
          );
          
     end if;
     
exception
     
     when others then
          io_action_outcome_id := pkg_os_constant.gOutcome_ObjectLocked;
     
end sp_set_ba_lock;

begin
     
     null;

end pkg_db_payment_arrangement;
/