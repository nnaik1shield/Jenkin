CREATE OR REPLACE PACKAGE BODY pkg_db_late_process

-------------
-- $Workfile:   BASE_API.PKG_DB_LATE_PROCESS.PBK  $
-- $Revision:   1.19  $
--   $Author:   gkaur  $
--     $Date:   11 May 2015 13:00:04  $
-------------
AS
-----------------------------------------------------------------------------------------------------------------------------------------------------
--  package constants ...
-----------------------------------------------------------------------------------------------------------------------------------------------------

pkg_name  constant  system_log.program_name%type  := 'pkg_db_late_process.';
INCORRECT_SEQUENCE  EXCEPTION; --UTPRODUCT-4617
--PRAGMA EXCEPTION_INIT(INCORRECT_SEQUENCE, -68001);  --UTPRODUCT-4617

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure show_version
is
begin

     dbms_output.put_line('$Workfile:   BASE_API.PKG_DB_LATE_PROCESS.PBK  $');
     dbms_output.put_line('$Revision:   1.19  $');
     dbms_output.put_line('$Author:   gkaur  $');
     dbms_output.put_line('$Date:   11 May 2015 13:00:04  $');

exception
    when others then

        dbms_output.put_line(sqlerrm(sqlcode));

end show_version;
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- UTPRODUCT-4628
--
--   %NAME
--        fn_current_LP_policy_trx_get
--
--   %USAGE
--        Get the Policy Transaction ID of the transaction created by the Late Process 'Transaction Creation' action
--
--   %ASSUMPTIONS
--        Thre is a new xRef BV (intoduced in the UTPRODUCT-4628) -  33062048 Policy - xReference - _Reference_Current LateProcess Transaction 
--        This BV should be set in the 'init' action following every  Late Process 'Transaction Creation' action.
--        Rest this BV to NULL just before the call of Late Process 'Processing action' in the PKG_DB_LATE_PROCESS.sp_late_process
--
--   %ALGORITHM
--        Read the xRef BV 33062048 - Policy - xReference - _Reference_Current LateProcess Transaction 
--        The value should not be NULL.
--        If NULL 
--              1. write an ERROR message to the system log. DO NOT SPLAT.
--              2. For the backward compatibility - follow the 'old' logic - read the xRef BV 212298:  Policy - xReference - _Reference_New or Current Transaction 
--
--   %PARAM    in_policy_id   
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_current_LP_policy_trx_get
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_policy_id                  in   object.object_id%type,
     in_error_msg_tf               in   char default 'T',
     in_lp_trx_create_action_id    in   object.object_id%type default null -- for system log only
)
return object.object_id%type
as
     v_session_control        pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name         constant system_log.program_name%type        := pkg_name||'fn_current_LP_policy_trx_get';
     
     v_current_LP_policy_trx_id          object.object_id%type;
begin
 
     v_current_LP_policy_trx_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_PolRefCurrLateProcessTrx
                                   );
                                   
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... For Policy ID: '||in_policy_id||' xRef BV 33062048 _Reference_Current LateProcess Transaction = '|| v_current_LP_policy_trx_id
          );
     end if;
      
     if v_current_LP_policy_trx_id is null
     then
          if in_error_msg_tf = 'T'
          then
               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... ERROR: xRef BV 33062048 "Policy._Reference_Current LateProcess Transaction" is not set for policy ID ' || in_policy_id ||
                    '. Be sure to configure an Init rule to set this BV for an action that follows the ' ||
                    ' Late Proces Transaction Creation action ID: '||case when in_lp_trx_create_action_id is null
                                                                          then 'N/A'
                                                                          else to_char(in_lp_trx_create_action_id)
                                                                     end
               ); 
          end if;
           
          v_current_LP_policy_trx_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id,
                                             gbv_PolicyRefCurrentTrx
                                        );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... For Policy ID: '||in_policy_id||' xRef BV 212298 _Reference_New or Current Transaction= '|| v_current_LP_policy_trx_id
               );
          end if;                                        
     end if;
     
     return v_current_LP_policy_trx_id;
     
end fn_current_LP_policy_trx_get;

--OSPRODUCT-29007

procedure sp_load_db_relation_set_values
(
    in_session_id                            object.object_id%type,
    in_transaction_id                        object.object_id%type,
    in_business_relation_set_id              object.object_id%type
)
is
    cursor c_recon
    is
         select
             *
        from
              db_business_relationship_set_values db
          where
              db_business_relationshipset_id = in_business_relation_set_id;

begin

    g_db_business_relation_cache.delete;

     for c_trx_rec in c_recon
     loop

          select
              *
          into
              g_db_business_relation_cache(c_trx_rec.db_business_relationship_id)
          from
              db_business_relationship_set_values db
          where
              db.db_billing_trx_set_values_id = c_trx_rec.db_billing_trx_set_values_id;

     end loop;
end sp_load_db_relation_set_values;

--OSPRODUCT-29007
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        sp_late_process
--
--   %usage
--        Procedure for the late processes on the policy.
--
--   %algorithm
--        It checks the late profile and Profile instructions and updates the term billing status
--
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_policy_id                  policy id
--   %param    io_action_outcome_id          action outcome id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_late_process
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
as

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant  system_log.program_name%type  :=   pkg_name||'sp_late_process';

     v_datamart_tf                      char(1)                                 :=   'T';
     v_trigger_condition                char(1)                                 :=   'F';
     v_count                            number                                  :=    0;

     v_policy_term_list                 t_policy_term;
     v_new_billing_status_id            object_state.object_state_id%type;
     v_policy_term_id                   object.object_id%type;
     v_policy_current_trx_id            object.object_id%type;
     exception_more_true_count          exception;
     v_Fitem_AssociatedPolTrans         object.object_id%type;
     v_category_id                      object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_PolTerm_BillStatus_id            object.object_id%type;
     v_policy_term_idx                  object.object_id%type;
     v_product_id                       pd_product.pd_product_id%type;
     v_target_fitem_category            number;
     v_target_fitem_sub_cat             number;
     v_policytrx_trx_type               number;
     v_policytrx_state                  number;
     v_step_number                      number;
     v_TermLatePaymentCount             number;
     v_PolLatePaymentCount              number;
     v_AccLatePaymentCount              number;
     v_policy_image_id                  object.object_id%type;
     v_policy_billing_method            number;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_action_id                        action.action_id%type;
     v_out_action_id                    action.action_id%type;
     v_out_action_object_id             object.object_id%type;
     v_object_cache                     pkg_os_object_cache.t_object_cache;
     v_jurisdiction_id                  object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_policy_id, pkg_os_constant_bv.gbv_GenObjJurisdiction   );
     v_late_instr_details               db_late_profile_instr%rowtype;
     v_transaction_process_tf           db_late_profile_instr.transaction_process_tf%type;
     v_trx_process_action_id            action.action_id%type;
     v_last_action_performed_id         action.action_id%type;
     v_suspend_resume                   number; --LIOPRODUCT-55
     v_suspend_resume_set_id            number; --LIOPRODUCT-55
     v_policy_current_due               number; --OSPRODUCT-10394
     v_policy_past_due                  number; --OSPRODUCT-10394
     v_curr_date_of_interest            object_bv_value.business_variable_value%type; --OSPRODUCT-10394
     v_policy_current_date              date :=   pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );
     -- Arun - OSBILLING-6419
     v_policy_current_trx_id_temp       object.object_id%type;
     v_policy_term_pas_status           object_bv_value.business_variable_value%type; -- UTPRODUCT-4592
     v_valid_fitem_count                number; -- OSPRODUCT-1879
     -- Arun OSBILLING-7544
     exception_trans_create             exception;

     v_bv_table                         pkg_os_object_io.t_bv_table;--OSPRODUCT-5474
     v_policy_last_current_trx_id       object.object_id%type;--UTPRODUCT-4617
     v_trx_seq_number                   number;--UTPRODUCT-4617
     v_is_fitem_valid                   char(1); --UTPRODUCT-4688
     v_message_list                     pkg_os_message.t_message_list;--LXPRODUCT-374
     v_context_action_id                object.object_id%type;--LXPRODUCT-374
     v_context_object_id                object.object_id%type;--LXPRODUCT-374
     v_expression_id                    object.object_id%type;--OSPRODUCT-17909
     gbv_pt_exprxn_id                   business_variable.business_variable_id%type   :=   33396248;--OSPRODUCT-17909
     v_policy_term_id_valid_tirg       object.object_id%type;
     v_business_relation_set_id        object_bv_value.business_variable_value%type;  --OSPRODUCT-29006
     v_business_relation_check_tf      char(1) default 'F'; --  --OSPRODUCT-29006
     --
     -- Get the list of all the Late Profiles
     --
     cursor c_all_late_profiles
     (
          in_product_id in pd_product.pd_product_id%type
     )
     is
     select
          db_late_profile_id, db_business_relation_set
     from
          db_late_profile          --@@@ PM - Use an alias for table and use it for columns
     where
          pkg_os_product.fn_product_in_set(in_product_id,pd_product_set_id) = 'T' --need tab of 5 for all operators
     and
          pkg_os_jurisdiction.fn_jurisdiction_in_set( v_jurisdiction_id, jurisdiction_set_id ) = 'T'
     and
          active = 'T'
     and     -- @@@PM - Replace "pkg_db_functions.fn_get_policy_current_date" with a variable.
     -- Don't use functions in the where clause if the value isn't going to change within the query
     --     Better to store the value in a local variable and use it in the query.
          nvl( profile_effective_date ,to_date('01/01/0001','DD/MM/YYYY')) <=   v_policy_current_date
     and
          nvl( profile_expiration_date,to_date('31/12/9999','DD/MM/YYYY')) >=   v_policy_current_date
     and
          pkg_db_object.fn_evaluate_rule_set
          (
               in_session_id,
               in_transaction_id,
               gObjType_Policy,
               in_policy_id,
               apply_rule_set_id
          )  =    0
     order by
          db_late_profile_id asc
     ;

     --
     -- Get all the ordered late profile instructions to which we need to apply late processing
     --

     cursor c_target_late_profile_instr
     (
          in_late_profile_id in object.object_id%type
     )
     is
     select
          db_late_profile_instr_id
     from
          db_late_profile_instr a
     where
          db_late_profile_id     =    in_late_profile_id
      and
          nvl(active,'T') = 'T'
     order by
          sequence asc
     ;

     --
     -- Get the list of categories for the late Profile
     --

     -- UTPRODUCT-4688
     /*
     Cursor c_instr_category_list
     (
          in_late_profile_instr_id in object.object_id%type
     )
     is
          select
               b.db_fitem_category_id
         from
               db_fitem_category_set a,db_fitem_cat_set_values b, db_late_profile_instr c
          where
               a.db_fitem_category_set_id  =  b.db_fitem_category_set_id
          and
               c.fitem_category_set_id     =  a.db_fitem_category_set_id
          and
               c.db_late_profile_instr_id  =  in_late_profile_instr_id
          ;*/
     Cursor c_instr_category_list
     (
          in_category_set in number
     )
     is
     select
          b.db_fitem_category_id
     from
          db_fitem_cat_set_values b
     where
          b.db_fitem_category_set_id = in_category_set
     order by
          b.db_fitem_category_id
     ;

     --
     -- Get the distinct terms for the policy
     --

     cursor c_policy_terms
     is
     /*
     select
          policy_term_id
     from
          dragon_policy_term
     where
          policy_id          =    nvl(in_policy_id,policy_id)     -- @@@PM what does "in_policy_id" represent here ? Cursor input or the procedure input variable. Pass Policy ID as input param to cursor
     order by
          policy_term_id
     ;*/
     --OSBILLING-7156 start
     select
          policy_term_id
     from
          dragon_policy_term pt
     where
          pt.policy_id = in_policy_id --OSPRODUCT-12033
     and
          (
               (pt.outstanding_balance<> 0)
          or
               (
                    pt.outstanding_balance = 0
               and
                    pt.policy_term_billing_status <> 'Active' --OSPRODUCT-12364
               )
          )
     --and
          -- pt.policy_term_billing_method_id = 1 --direct bill only Policies
     --OSPRODUCT-11805
     and
          pkg_os_object.fn_object_state_get(in_session_id, in_transaction_id, pt.policy_term_id) <> pkg_os_policy_transaction.gState_PolicyTrxRolledback
     --OSPRODUCT-11805
     order by
           pt.policy_term_id;
     --OSBILLING-7156 end

     -- UTPRODUCT-5009
     type terms_tab                is table of c_policy_terms%rowtype;
     v_terms_tab                   terms_tab;
     type policy_terms_tab         is table of terms_tab index by varchar2(100);
     v_policy_terms_tab            policy_terms_tab;

     v_primary_insured_ba_id       object.object_id%type := pkg_db_functions.fn_get_policy_billing_account(in_session_id, in_transaction_id, in_policy_id); -- OSPRODUCT-3575
     -- UTPRODUCT-5009

     --
     -- Get the fitems to which we need to apply late processing
     --
     cursor c_target_fitem_equity --OSPRODUCT-18197
     (
          in_policy_term_id           in number,
          in_policy_term_pas_status   in number, -- UTPRODUCT-4592
          in_payer_billingaccount_id  in number  -- UTPRODUCT-5009
     )
     is
          select
               a.fitem_id,a.fitem_type_id,a.fitem_category_id ,a.fitem_sub_category_id, a.aging_status_id, a.fitem_business_relationship as fitem_business_relationship  --OSPRODUCT-12033,OSPRODUCT-29006
          from
               dragon_fitem a
          where
               a.policy_id         =    in_policy_id --OSPRODUCT-12033
          and
               a.policy_term_id    =    in_policy_term_id
          and
               a.aging_status_id is not null
          and
               nvl(fn_get_sch_withdrawal_resp(in_session_id,in_transaction_id,a.installment_id),'T') = 'T'
          and
              (
                    a.aging_status_id in (2,3)
               or
               
               (in_policy_term_pas_status = gPolTrm_PASStat_Cancel)-- UTPRODUCT-4592
              )
          and
               ( in_payer_billingaccount_id is null or ( a.billing_account_id = in_payer_billingaccount_id ))
          order by
               aging_status_id desc
     ;
     cursor c_target_fitem_nonequity --OSPRODUCT-18197
     (
          in_policy_term_id           in number,
          in_policy_term_pas_status   in number, -- UTPRODUCT-4592
          in_payer_billingaccount_id  in number  -- UTPRODUCT-5009
     )
     is
          select
               a.fitem_id,a.fitem_type_id,a.fitem_category_id ,a.fitem_sub_category_id,a.aging_status_id, a.fitem_business_relationship as fitem_business_relationship --OSPRODUCT-12033
          from
               dragon_fitem a
          where
               a.policy_id         =    in_policy_id --OSPRODUCT-12033
          and
               a.policy_term_id    =    in_policy_term_id
          and
               a.aging_status_id is not null
          and
               nvl(fn_get_sch_withdrawal_resp(in_session_id,in_transaction_id,a.installment_id),'T') = 'T'
          and
              (
                    a.aging_status_id = pkg_db_stmt.gAgingStatus_Past
                    or
                    (in_policy_term_pas_status = gPolTrm_PASStat_Cancel)-- UTPRODUCT-4592
              )
          and
               ( in_payer_billingaccount_id is null or ( a.billing_account_id = in_payer_billingaccount_id ))
          order by
               aging_status_id desc
     ;

     -- UTPRODUCT-5009
     type trgt_fitem_tab            is table of c_target_fitem_equity%rowtype;
     v_trgt_fitem_tab               trgt_fitem_tab;
     type term_termpayer_fitem_tab  is table of trgt_fitem_tab index by varchar2(100);
     v_term_termpayer_fitem_tab     term_termpayer_fitem_tab;
     v_term_termpayer_idx           varchar2(100);
     -- UTPRODUCT-5009

     -- UTPRODUCT-5009 Starts
     cursor cur_term_payer_lst
     (
          cp_policy_id              in number,
          cp_policy_term_id         in number,
          cp_multi_payer_tf         in char
     )
     is
     select
          dptp.payer_billing_account_id    payer_billing_account_id,
          'F'                              payer_rule_result_tf,
          'F'                              trigger_transaction_tf
     from
          dragon_policy_term_payer dptp
     where
          dptp.policy_id = cp_policy_id
     and
          dptp.policy_term_id =  cp_policy_term_id
     and
          cp_multi_payer_tf =  'T'
     union
     --
     --  The Primary Insured may be missing in the DRAGON_POLICY_TERM_PAYER.
     --  We need the Primary Insured Billing Account in the list of possible
     --  target accounts even if it is not a payer.
     --
     select
          v_primary_insured_ba_id          payer_billing_account_id,
          'F'                              payer_rule_result_tf,
          'F'                              trigger_transaction_tf
     from
          dual
     where
          cp_multi_payer_tf =  'T'
     union
     select
          to_number(null)         payer_billing_account_id,
          'T'                     payer_rule_result_tf,
          'F'                     trigger_transaction_tf
      from dual
      where
          cp_multi_payer_tf =  'F'
      ;

     type termpayer_tab           is table of cur_term_payer_lst%rowtype;
     v_termpayer_tab              termpayer_tab;
     type term_termpayer_tab      is table of termpayer_tab index by varchar2(100);
     v_term_termpayer_tab         term_termpayer_tab;
     v_billingacctrxset_id        object.object_id%type;
     v_object_parent_id           object.object_id%type;
     v_multipayer_enabled_tf      boolean;
     -- UTPRODUCT-5009 Ends.
     v_term_indx                       number;
     v_loop_term_payer_tab              termpayer_tab;
	 
begin
	 --OSPRODUCT-28929 Start
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_policy_id,
          gbv_LateProcess_PolicyTerm,
          null
                                                                                                                                       
     ); -- OSPRODUCT-28929 End
     
     -- UTPRODUCT-5009
     v_multipayer_enabled_tf := pkg_db_multipayer.fn_multipayer_mode_tf
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_id
                                );
     -- UTPRODUCT-5009

     ----OSBILLING7267---Above Code was commented---Late Process denotes LN1,LN2,PC,NPC activities suspensed
     -- There is no activity like gSuspend_LateProcess_Activity--

     if  pkg_db_suspension.fn_db_is_activity_suspended (in_session_id,in_transaction_id,in_policy_id,pkg_db_suspension.gsuspend_latenotice1_activity) = 1
     and pkg_db_suspension.fn_db_is_activity_suspended (in_session_id,in_transaction_id,in_policy_id,pkg_db_suspension.gsuspend_latenotice2_activity) = 1
     and pkg_db_suspension.fn_db_is_activity_suspended (in_session_id,in_transaction_id,in_policy_id,pkg_db_suspension.gsuspend_pendcancel_activity) = 1
     and pkg_db_suspension.fn_db_is_activity_suspended (in_session_id,in_transaction_id,in_policy_id,pkg_db_suspension.gsuspend_nonpaycancel_activity) = 1
     then
          io_action_outcome_id := g_outcome_lateprosuspended;
          return;
     end if;

     v_product_id := pkg_os_product.fn_object_product_get
                        (
                             in_session_id,
                             in_transaction_id,
                             in_policy_id
                        );

     if v_session_control.gLogging_Full     --- @@@PM - Merge this log statement with the one above
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Found Policy ID: '||in_policy_id||
               ' Product: '||v_product_id
          );
     end if;

     if v_product_id is null
     then

          raise no_data_found;

     end if;

     ----OSPRODUCT-1879--
     ---No need to enter any loops if there are no eligible FItems ---
     v_valid_fitem_count :=  pkg_cs_db_functions.fn_late_proc_fitem_count
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id,
                                   v_product_id
                              );

     if nvl(v_valid_fitem_count,1) > 0
     then


          for r_profiles in c_all_late_profiles (v_product_id)
		  loop

               --
               --   Loop through each late profile instruction
               --
               if v_session_control.gLogging_Full     --- @@@PM - Merge this log statement with the one above
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Late Profile ID: '|| r_profiles.db_late_profile_id
                    );
               end if;

               v_business_relation_set_id := r_profiles.db_business_relation_set;  --OSPRODUCT-29006

               for r_target_instr in c_target_late_profile_instr(r_profiles.db_late_profile_id)
               loop
                    if v_session_control.gLogging_Full     --- @@@PM - Merge this log statement with the one above
                    then
                         pkg_os_logging.sp_log
                         (
                               in_session_id,
                               in_transaction_id,
                               v_procedure_name,
                               ' Profile Instruction ID :' || r_target_instr.db_late_profile_instr_id
                         );
                    end if;

                    v_late_instr_details := fn_late_instr_row
                                            (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  r_profiles.db_late_profile_id,
                                                  r_target_instr.db_late_profile_instr_id
                                            );
                    if v_session_control.gLogging_Full     --- @@@PM - Merge this log statement with the one above
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Late Profile Instruction ID: '|| v_late_instr_details.db_late_profile_instr_id ||
                              '  db_suspend_resume :  '          ||  v_late_instr_details.db_suspend_resume       ||
                              '  db_suspend_resume_set_id : '    ||  v_late_instr_details.db_suspend_resume_set_id
                         );--LIOPRODUCT-55
                    end if;

                    if  not(v_policy_terms_tab.exists(in_policy_id))
                    then
                         open  c_policy_terms;
                         fetch c_policy_terms bulk collect into v_terms_tab;
                         close c_policy_terms;
                         v_policy_terms_tab(in_policy_id) := v_terms_tab;  -- Cached the record.

                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' Terms Load from : Database '
                              );
                         end if;
                    else

                         v_terms_tab := v_policy_terms_tab(in_policy_id);

                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' Terms Load from : Cache '
                              );
                         end if;
                    end if;

                    if v_terms_tab.count > 0
                    then
                         for v_terms_idx in v_terms_tab.first..v_terms_tab.last
                         loop
                              -- UTPRODUCT-5009 moved the below to payer loop
                              --v_is_fitem_valid :='F'; -- UTPRODUCT-4688

                              if nvl(v_policy_term_id, 0) <> v_terms_tab(v_terms_idx).policy_term_id
                              then

                                   v_policy_term_id         :=   v_terms_tab(v_terms_idx).policy_term_id;

                                   v_PolTerm_BillStatus_id   :=   pkg_os_object_io.fn_object_bv_get          -- -- @@@PM - Get from datamart (cursor)
                                                                 (
                                                                      in_session_id       => in_session_id,
                                                                      in_transaction_id   => in_transaction_id,
                                                                      in_object_id        => v_policy_term_id,
                                                                      in_bv_id            => gbv_PolicyTerm_BillingStatus
                                                                 );

                                   if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '......... Looping through all relevant Policy Terms' ||
                                             ' Considering Term ID: ' ||v_terms_tab(v_terms_idx).policy_term_id ||
                                             '.................. Current Policy Term Billing Status '||v_PolTerm_BillStatus_id
                                        );
                                   end if;

                              end if;

                              if   pkg_os_object.fn_object_state_in_set_tf
                                   (
                                        v_PolTerm_BillStatus_id,
                                        v_late_instr_details.current_billing_status_set_id
                                   )     =     'T'
                                   and
                                   (
                                   v_late_instr_details.eligibility_condition_id is null
                                   or
                                   pkg_os_exp.fn_evaluate_expression
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_term_id,
                                        v_late_instr_details.eligibility_condition_id
                                   )     =     'T'
                                   ) --OSPRODUCT-12033
                              then
                                   --UTPRODUCT-4688 moved here
                                   -- UTPRODUCT-4592
                                   v_policy_term_pas_status  := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_terms_tab(v_terms_idx).policy_term_id,
                                        gbv_PolicyTerm_PASStatus       -- 29706246 Term PAS Status
                                   );
                                   -- UTPRODUCT-4592

                                   --
                                   --   Loop through each category mentioned at late profile instruction
                                   --
                                   if v_session_control.gLogging_Full     --- @@@PM - Merge this log statement with the one above
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... Policy term current status is in the required set..'
                                        );
                                   end if;

                                   /*     for r_instr_category_list in c_instr_category_list (v_late_instr_details.fitem_category_set_id)--r_target_instr.db_late_profile_instr_id) --UTPRODUCT-4688
                                   loop

                                   v_category_id     :=     r_instr_category_list.db_fitem_category_id; */ --OSPRODUCT-12033

                                   -- UTPRODUCT-4688 moved up
                                   /*   -- UTPRODUCT-4592
                                   v_policy_term_pas_status  := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_terms_tab(v_terms_idx).policy_term_id,
                                        gbv_PolicyTerm_PASStatus       -- 29706246 Term PAS Status
                                   );
                                   -- UTPRODUCT-4592
                                   */

                                   --- @@@PM - Merge this log statement with the one above
                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '.. Category ID: '|| v_category_id ||
                                             ' - '||pkg_os_lookup.fn_lookup_list_text_get(FitemCategoryList, v_category_id)||
                                             '.. Looping through all relevant Target FItems'||
                                             ' for Policy : ' ||in_policy_id||
                                             ' for Product: '||v_product_id ||
                                             ' Policy Term PAS Status: ' ||v_policy_term_pas_status || -- UTPRODUCT-4592
                                             -- UTPRODUCT-5009 Starts.
                                             ' Instruction ID ' || v_late_instr_details.db_late_profile_instr_id ||
                                             ' Create Trx Per Payer (T/F)' || v_late_instr_details.create_trx_per_payer_tf ||
                                             ' Payer Eligibility Rule ' || v_late_instr_details.payer_eligibility_rule
                                            -- UTPRODUCT-5009 Ends.
                                        );

                                   end if;

                                   -- UTPRODUCT-5009 Starts.

                                   if NVL(v_late_instr_details.create_trx_per_payer_tf,'F')  ='T'
                                   and v_multipayer_enabled_tf
                                   Then
                                        if  not(v_term_termpayer_tab.exists(v_terms_tab(v_terms_idx).policy_term_id))
                                        then
                                             open cur_term_payer_lst (in_policy_id, v_terms_tab(v_terms_idx).policy_term_id,'T');
                                             fetch cur_term_payer_lst bulk collect into v_termpayer_tab;
                                             close cur_term_payer_lst;

                                             v_term_termpayer_tab(v_terms_tab(v_terms_idx).policy_term_id):= v_termpayer_tab;

                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' TermPayers Load from : Database '
                                                  );
                                             end if;
                                        else

                                             v_termpayer_tab := v_term_termpayer_tab(v_terms_tab(v_terms_idx).policy_term_id);

                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' TermPayers Load from : Cache '
                                                  );
                                             end if;
                                        end if;

                                   else
                                        if  not(v_term_termpayer_tab.exists(v_terms_tab(v_terms_idx).policy_term_id))
                                        then
                                             open  cur_term_payer_lst (in_policy_id, v_terms_tab(v_terms_idx).policy_term_id,'F');
                                             fetch cur_term_payer_lst bulk collect into v_termpayer_tab;
                                             close cur_term_payer_lst;

                                             v_term_termpayer_tab(v_terms_tab(v_terms_idx).policy_term_id):= v_termpayer_tab;

                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' TermPayers Load from : Database '
                                                  );
                                             end if;

                                        else
                                             v_termpayer_tab := v_term_termpayer_tab(v_terms_tab(v_terms_idx).policy_term_id);
                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' TermPayers Load from : Cache '
                                                  );
                                             end if;
                                        end if;

                                   end if;

                                   if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             ' Payer Count  : '|| v_termpayer_tab.count ||
                                             ' For term id : ' || v_terms_tab(v_terms_idx).policy_term_id
                                        );
                                   end if;
                                   -- UTPRODUCT-5009 Ends;

                                   -- UTPRODUCT-5009
                                   if v_termpayer_tab.count > 0
                                   then
                                        -- Start of loop for plsql v_termpayer_tab table
                                        for j in v_termpayer_tab.first..v_termpayer_tab.last
                                        loop

                                             v_is_fitem_valid :='F'; -- UTPRODUCT-5009

                                             if  nvl(v_late_instr_details.create_trx_per_payer_tf,'F')  = 'T'
                                             Then
                                                 if  v_late_instr_details.payer_eligibility_rule is  null
                                                 then

                                                      v_termpayer_tab(j).payer_rule_result_tf := 'T';

                                                 else

                                                      v_termpayer_tab(j).payer_rule_result_tf :=  pkg_os_exp.fn_evaluate_expression
                                                                                                   (
                                                                                                        in_session_id,
                                                                                                        in_transaction_id,
                                                                                                        v_termpayer_tab(j).payer_billing_account_id,
                                                                                                        v_late_instr_details.payer_eligibility_rule
                                                                                                   );
                                                 end if;

                                             elsif  nvl(v_late_instr_details.create_trx_per_payer_tf,'F')  = 'F'
                                             Then

                                                 v_termpayer_tab(j).payer_rule_result_tf := 'T';

                                             end if;


                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' Start Loop: TermPayer Intrantion : '|| j ||
                                                       ' Create Trx Per Payer(T/F)' || v_late_instr_details.create_trx_per_payer_tf ||
                                                       ' Payer Eligibility Rule ' || v_late_instr_details.payer_eligibility_rule||
                                                       ' Payer Billing Account ID ' || v_termpayer_tab(j).payer_billing_account_id ||
                                                       ' Payer Rule Result TF  '|| v_termpayer_tab(j).payer_rule_result_tf ||
                                                       ' Payer Trigger Transaction TF '|| v_termpayer_tab(j).trigger_transaction_tf
                                                  );
                                             end if;

                                             -- payer_rule_result_tf check start with true
                                             if NVL(v_termpayer_tab(j).payer_rule_result_tf,'F' ) = 'T'
                                             then

                                                  if NVL(v_late_instr_details.create_trx_per_payer_tf,'F')  ='T'
                                                  and v_multipayer_enabled_tf
                                                  Then
                                                      v_term_termpayer_idx := v_terms_tab(v_terms_idx).policy_term_id ||'~'|| v_termpayer_tab(j).payer_billing_account_id;
                                                  else
                                                      v_term_termpayer_idx := v_terms_tab(v_terms_idx).policy_term_id;
                                                  end if;

                                                  if  not(v_term_termpayer_fitem_tab.exists(v_term_termpayer_idx))
                                                  then
                                                       if nvl(pkg_os_product.fn_product_property_get(in_session_id,in_transaction_id,in_policy_id,22146), 'F') = 'T'
                                                       then
                                                            open c_target_fitem_equity
                                                                  (
                                                                       v_terms_tab(v_terms_idx).policy_term_id,
                                                                       v_policy_term_pas_status,
                                                                       v_termpayer_tab(j).payer_billing_account_id
                                                                  );
                                                            fetch c_target_fitem_equity bulk collect into v_trgt_fitem_tab;
                                                            close c_target_fitem_equity;
                                                       else
                                                            open c_target_fitem_nonequity
                                                                  (
                                                                       v_terms_tab(v_terms_idx).policy_term_id,
                                                                       v_policy_term_pas_status,
                                                                       v_termpayer_tab(j).payer_billing_account_id
                                                                  );
                                                            fetch c_target_fitem_nonequity bulk collect into v_trgt_fitem_tab;
                                                            close c_target_fitem_nonequity;
                                                       end if;--OSPRODUCT-18197
                                                       -- Cached the record.
                                                       v_term_termpayer_fitem_tab(v_term_termpayer_idx):= v_trgt_fitem_tab;

                                                       if v_session_control.gLogging_Full
                                                       then
                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 ' Target Fitem Load from : Database '
                                                            );
                                                       end if;
                                                  else

                                                       v_trgt_fitem_tab := v_term_termpayer_fitem_tab(v_term_termpayer_idx);

                                                       if v_session_control.gLogging_Full
                                                       then
                                                            pkg_os_logging.sp_log
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_procedure_name,
                                                                 ' Target Fitem Load from : Cache '
                                                            );
                                                       end if;
                                                  end if;

                                                  if v_trgt_fitem_tab.count >0
                                                  then

                                                       if v_business_relation_set_id is not null 
                                                       then 
                                                           sp_load_db_relation_set_values(in_session_id , in_transaction_id,v_business_relation_set_id);
                                                           v_business_relation_check_tf := 'T';
                                                       end if;

                                                       for fitem_idx in v_trgt_fitem_tab.first..v_trgt_fitem_tab.last
                                                       loop

                                                            if v_session_control.gLogging_Full
                                                            then
                                                                 pkg_os_logging.sp_log
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_procedure_name,
                                                                      '............ Considering Target FItem ID : '||v_trgt_fitem_tab(fitem_idx).fitem_id||
                                                                      ' FItem Type Set : '||v_late_instr_details.fitem_type_set_id||
                                                                      ' FItem Category Set : '||v_late_instr_details.fitem_category_set_id||
                                                                      ' SubCategory Set : '||v_late_instr_details.fitem_sub_category_set_id||
                                                                      ' Eligibility Condition : '||v_late_instr_details.eligibility_condition_id||
                                                                      ' Payer Billing Account ID ' || v_termpayer_tab(j).payer_billing_account_id --UTPRODUCT-5009
                                                                 );     -- @@@PM - Log FItem Type Set, FItem Category Set, SubCategory Set, eligibility_condition_id
                                                            end if;
                                                            if (v_business_relation_check_tf = 'T' and g_db_business_relation_cache.exists(v_trgt_fitem_tab(fitem_idx).FITEM_BUSINESS_RELATIONSHIP))
                                                               or
                                                               v_business_relation_check_tf = 'F'
                                                            then

                                                            if  /*(v_late_instr_details.eligibility_condition_id is null
                                                                or
                                                                pkg_os_exp.fn_evaluate_expression
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     r_target_fitem.fitem_id,
                                                                     v_late_instr_details.eligibility_condition_id
                                                                )     =     'T' )
                                                                and*/ --OSPRODUCT-12033
                                                                pkg_db_billing.fn_fitem_type_in_set
                                                                (
                                                                     v_trgt_fitem_tab(fitem_idx).fitem_type_id,
                                                                     v_late_instr_details.fitem_type_set_id
                                                                ) = 'T'
                                                            then
                                                                 --UTPRODUCT-4688

                                                                 -- @@@PM - Why not get Category from datamart ? same as FItem Type ?
                                                                 /*v_target_fitem_category     :=     pkg_os_object_io.fn_object_bv_get
                                                                                                         (
                                                                                                              in_session_id,
                                                                                                              in_transaction_id,
                                                                                                              r_target_fitem.fitem_id,
                                                                                                              pkg_db_object.gbv_fitem_category
                                                                                                         );*/

                                                                 v_target_fitem_category  :=   v_trgt_fitem_tab(fitem_idx).fitem_category_id;

                                                                 if pkg_db_billing.fn_fitem_category_in_set
                                                                    (
                                                                         v_target_fitem_category,
                                                                         v_late_instr_details.fitem_category_set_id
                                                                    )     =     'T'
                                                                 then

                                                                      if v_session_control.gLogging_Full
                                                                      then
                                                                           pkg_os_logging.sp_log     -- @@@PM - Merge this Log statement or remove
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_procedure_name,
                                                                                '............... Target fitem_id Category: '||v_target_fitem_category||
                                                                                ' exists in Category Set: '||v_late_instr_details.fitem_category_set_id
                                                                           );
                                                                      end if;

                                                                      -- @@@PM - Why not get Sub Category from datamart ? same as FItem Type ?
                                                                      /* v_target_fitem_sub_cat := pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           r_target_fitem.fitem_id,
                                                                           pkg_db_object.gbv_fitem_subcategory
                                                                      );*/

                                                                      v_target_fitem_sub_cat   :=   v_trgt_fitem_tab(fitem_idx).fitem_sub_category_id;

                                                                      if pkg_db_billing.fn_fitem_subcategory_in_set
                                                                      (
                                                                         v_target_fitem_sub_cat,
                                                                         v_late_instr_details.fitem_sub_category_set_id
                                                                      )     =     'T'
                                                                      then

                                                                           if v_session_control.gLogging_Full     -- @@@PM - Merge this Log statement or remove
                                                                           then
                                                                                pkg_os_logging.sp_log
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_procedure_name,
                                                                                     '.................. Target fitem_id Sub Category '||v_target_fitem_sub_cat||
                                                                                     ' exists in Sub Category Set: '||v_late_instr_details.fitem_sub_category_set_id
                                                                                );
                                                                           end if;
                                                                           --
                                                                           -- Get the policy transaction id
                                                                           --
                                                                           /*v_FItem_AssociatedPolTrans     :=     pkg_os_object_io.fn_object_bv_get
                                                                                                                 (
                                                                                                                      in_session_id       => in_session_id,
                                                                                                                      in_transaction_id   => in_transaction_id,
                                                                                                                      in_object_id        => r_target_fitem.fitem_id,
                                                                                                                      in_bv_id            => pkg_db_object.gbv_FItem_RefPolicyTrx
                                                                                                                 );*/

                                                                           if v_session_control.gLogging_Full
                                                                           then
                                                                                pkg_os_logging.sp_log
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_procedure_name,
                                                                                     '.................. FItem Associated Policy Transaction ID '||v_FItem_AssociatedPolTrans
                                                                                );
                                                                           end if;
                                                                           --
                                                                           -- Get the policy term id
                                                                           --
                                                                           /*v_policy_term_id      :=    pkg_os_object_io.fn_object_bv_get
                                                                                                       (
                                                                                                            in_session_id       => in_session_id,
                                                                                                            in_transaction_id   => in_transaction_id,
                                                                                                            in_object_id        => v_Fitem_AssociatedPolTrans,
                                                                                                            in_bv_id            => gbv_PolicyTrans_RefBelongsTo
                                                                                                       );*/

                                                                           v_policy_term_idx := v_policy_term_id;

                                                                           if v_session_control.gLogging_Full     -- @@@PM - Merge this Log statement or remove
                                                                           then
                                                                                pkg_os_logging.sp_log
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_procedure_name,
                                                                                     '.................. Policy Term ID '||v_policy_term_id||
                                                                                     ' Policy Term Index '||v_policy_term_idx
                                                                                );
                                                                           end if;

                                                                           --
                                                                           -- Get the policy term id
                                                                           --

                                                                           /*v_PolTerm_BillStatus_id     :=     pkg_os_object_io.fn_object_bv_get          -- -- @@@PM - Get from datamart (cursor)
                                                                                                              (
                                                                                                                   in_session_id       => in_session_id,
                                                                                                                   in_transaction_id   => in_transaction_id,
                                                                                                                   in_object_id        => v_policy_term_id,
                                                                                                                   in_bv_id            => gbv_PolicyTerm_BillingStatus
                                                                                                              );*/

                                                                           if v_session_control.gLogging_Full
                                                                           then
                                                                                pkg_os_logging.sp_log
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_procedure_name,
                                                                                     '.................. Current Policy Term Billing Status '||v_PolTerm_BillStatus_id
                                                                              );
                                                                           end if;

                                                                           --OSPRODUCT-1879
                                                                           --UTPRODUCT-4688
                                                                          /* if pkg_os_object.fn_object_state_in_set_tf
                                                                                                    (
                                                                                                         v_PolTerm_BillStatus_id,
                                                                                                         v_late_instr_details.current_billing_status_set_id
                                                                                                    )     =     'T' then
                                                                           */

                                                                           if (
                                                                                v_late_instr_details.trigger_condition_id is null
                                                                                or
                                                                                pkg_os_exp.fn_evaluate_expression
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_trgt_fitem_tab(fitem_idx).fitem_id,
                                                                                     v_late_instr_details.trigger_condition_id
                                                                                ) = 'T'
                                                                           )
                                                                           /* and
                                                                           pkg_os_object.fn_object_state_in_set_tf
                                                                           (
                                                                           v_PolTerm_BillStatus_id,
                                                                           v_late_instr_details.current_billing_status_set_id
                                                                           )     =     'T'*/
                                                                           then

                                                                                if v_session_control.gLogging_Full          -- @@@PM - Log trigger_condition_id and current_billing_status_set_id
                                                                                then
                                                                                     pkg_os_logging.sp_log
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_procedure_name,
                                                                                          '.................. Trigger Condition is True '||
                                                                                          ' Step Number: '||v_late_instr_details.sequence||'v_trgt_fitem_tab(fitem_idx).fitem_id'||v_trgt_fitem_tab(fitem_idx).fitem_id||'v_late_instr_details.trigger_condition_id'||v_late_instr_details.trigger_condition_id
                                                                                          ||'v_new_billing_status_id'||v_new_billing_status_id
                                                                                     );
                                                                                end if;

                                                                                v_is_fitem_valid              := 'T'; --UTPRODUCT-4688
                                                                                v_trigger_condition                     := 'T';
                                                                                v_step_number                           := v_late_instr_details.sequence;
                                                                                v_new_billing_status_id                 := v_late_instr_details.new_billing_status_id/*'Late'*/;
                                                                                v_fitem_id                              := v_trgt_fitem_tab(fitem_idx).fitem_id;
                                                                                v_policy_term_list( v_policy_term_idx ) := v_policy_term_id;
																				--OSPRODUCT-28929 Start
																				v_policy_term_id_valid_tirg             := v_policy_term_id;
																				
                                                                                pkg_os_object_io.sp_object_bv_set
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     in_policy_id,
                                                                                     gbv_LateProcess_PolicyTerm,
                                                                                     v_policy_term_id
                                                                                                                                  
                                                                                ); -- OSPRODUCT-28929 End
																				
                                                                                --v_FItem_AssociatedPolTrans              := v_FItem_AssociatedPolTrans;
                                                                                v_action_id                             := v_late_instr_details.action_id;
                                                                                v_transaction_process_tf                := v_late_instr_details.transaction_process_tf;
                                                                                v_trx_process_action_id                 := v_late_instr_details.transaction_process_action;
                                                                                v_suspend_resume                        := v_late_instr_details.db_suspend_resume; --LIOPRODUCT-55
                                                                                v_suspend_resume_set_id                 := v_late_instr_details.db_suspend_resume_set_id;  --LIOPRODUCT-55
                                                                                v_expression_id                         := v_late_instr_details.trigger_condition_id; --OSPRODUCT-17909 

                                                                                if v_session_control.gLogging_Full
                                                                                then
                                                                                     pkg_os_logging.sp_log
                                                                                     (
                                                                                          in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_procedure_name,
                                                                                          '.................. Current Billing Status is '||v_late_instr_details.current_billing_status_set_id||
                                                                                          ' New Billing Status will be : '||v_late_instr_details.new_billing_status_id||
                                                                                          ' Trigger Condition : '||v_trigger_condition||
                                                                                          ' Step Number : '||v_step_number||
                                                                                          ' Action Id : '||v_action_id ||
                                                                                          ' Suspend/resume : ' || v_suspend_resume || --LIOPRODUCT-55
                                                                                          ' Suspend/Resume set_id : ' || v_suspend_resume_set_id ||
                                                                                          ' v_transaction_process_tf ' || v_transaction_process_tf ||
																						  ' Late process Policy term id ' || v_policy_term_id  --OSPRODUCT-28929
                                                                                     );
                                                                                end if;

                                                                           end if; -- end of r_target_instr check
                                                                           -- end if; --- OSPRODUCT-1879 --UTPRODUCT-4688

                                                                      else

                                                                           if v_session_control.gLogging_Full
                                                                           then
                                                                                pkg_os_logging.sp_log
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_procedure_name,
                                                                                     '............... Discarding Target FItem ID: '||v_trgt_fitem_tab(fitem_idx).fitem_id||
                                                                                     ' due to Sub Category Set'
                                                                                );
                                                                           end if;

                                                                      end if; -- if fn_fitem_subcategory_in_set

                                                                  --UTPRODUCT-4688
                                                                 else

                                                                      if v_session_control.gLogging_Full
                                                                      then

                                                                           pkg_os_logging.sp_log
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_procedure_name,
                                                                                '............ Discarding Target FItem ID: '||v_trgt_fitem_tab(fitem_idx).fitem_id||
                                                                                ' due to Category Set'
                                                                           );

                                                                      end if;

                                                                 end if; -- end of pkg_db_billing.fn_fitem_category_in_set check

                                                            else

                                                                 if v_session_control.gLogging_Full
                                                                 then

                                                                      pkg_os_logging.sp_log
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_procedure_name,
                                                                           '......... Discarding Late Profile Instruction for FItem ID: '||v_trgt_fitem_tab(fitem_idx).fitem_id||
                                                                           ' due to eligibility condition failure or FItem Type Set'
                                                                      );

                                                                 end if;

                                                            end if; -- end of r_target_instr check

                                                            else
                                                               if v_session_control.gLogging_Full
                                                               then

                                                                    pkg_os_logging.sp_log
                                                                    (
                                                                         in_session_id,
                                                                         in_transaction_id,
                                                                         v_procedure_name,
                                                                         '...... Skipping as Late profiles Business relationship ' || r_profiles.DB_BUSINESS_RELATION_SET || ' and fitem business relationship ' || v_trgt_fitem_tab(fitem_idx).FITEM_BUSINESS_RELATIONSHIP ||'are not same ' 
                                                                    );

                                                               end if;

                                                            end if;

                                                            --UTPRODUCT-4688
                                                            if v_is_fitem_valid = 'T' then
                                                                 exit;
                                                            end if;

                                                       end loop; -- end of loop for v_trgt_fitem_tab(fitem_idx)
                                                  end if;
                                                  -- UTPRODUCT-5009 - Fitem

                                                  if v_is_fitem_valid = 'T' then

                                                      v_termpayer_tab(j).trigger_transaction_tf := 'T';

                                                  end if;

                                                  if v_session_control.gLogging_Full
                                                  then
                                                       pkg_os_logging.sp_log
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_procedure_name,
                                                            ' Fitem Valid TF: ' ||v_is_fitem_valid ||
                                                            ' Trigger Transaction (T/F)'||v_termpayer_tab(j).trigger_transaction_tf
                                                       );
                                                  end if;

                                             end if;
                                             -- payer_rule_result_tf check end with true

                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' End Loop: TermPayer Intrantion : '|| j ||
                                                       ' Create Trx Per Payer(T/F)' || v_late_instr_details.create_trx_per_payer_tf ||
                                                       ' Payer Eligibility Rule ' || v_late_instr_details.payer_eligibility_rule||
                                                       ' Payer Billing Account ID ' || v_termpayer_tab(j).payer_billing_account_id ||
                                                       ' Payer Rule Result TF  '|| v_termpayer_tab(j).payer_rule_result_tf ||
                                                       ' Payer Trigger Transaction TF '|| v_termpayer_tab(j).trigger_transaction_tf ||
                                                       ' Is fitem Valid (TF) ' || v_is_fitem_valid
                                                  );
                                             end if;

                                       end loop;
                                       -- end of loop for plsql v_termpayer_tab table

                                        if  (v_term_termpayer_tab.exists(v_terms_tab(v_terms_idx).policy_term_id))
                                        then
                                             -- Cached the record.
                                             v_term_termpayer_tab(v_terms_tab(v_terms_idx).policy_term_id):= v_termpayer_tab;
                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' TermPayers Load from : Refresh Cache '
                                                  );
                                             end if;
                                        end if;

                                   end if;
                                   -- UTPRODUCT-5009

                                   --UTPRODUCT-4688
                                   if v_is_fitem_valid = 'T' then
                                        exit;
                                   end if;

                                 --  end loop; -- end of loop for r_instr_category_list --OSPRODUCT-12033

                              end if; --term billing status used for profile instruction row

                         end loop; -- end of loop for v_terms_tab(v_terms_idx)
                    end if;

               end loop; -- end of loop for r_target_instr

               if v_trigger_condition = 'T'
			   then

                    v_count := v_count + 1;

               end if;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Count of Valid Trigger Conditions: '||v_count
                    );

               end if;

          end loop; -- end of loop for r_profiles check

     --  UTPRODUCT-5009 Starts.
     --  Outcome set to Ok, to overide the input outcome when the system calls
     --  late process.
     --
     if v_count > 0 AND io_action_outcome_id =  g_outcome_ActionNotImplemented
     then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_OK;

     end if;
     -- UTPRODUCT-5009 Ends.

     --
     -- Get the last action performed id @@@PM -- Add a comment on why is this needed ?
     --

     v_last_action_performed_id := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id,
                                             32046946          -- @@@PM - Use a global constant
                                        );
     --
     -- Get the current policy transaction id
     --
     v_policy_current_trx_id := fn_current_LP_policy_trx_get  -- UTPRODUCT-4628
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_id,
                                     in_error_msg_tf       => 'F' -- At this point the BV 33062048 Policy._Reference_Current LateProcess Transaction is not set,
                                                                  --  as the Transaction Creation ACtion has not invoked yet
                                );

     --
     -- Get the current policy transaction type
     --

     v_policytrx_trx_type := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id       => in_session_id,
                                  in_transaction_id   => in_transaction_id,
                                  in_object_id        => v_policy_current_trx_id,
                                  in_bv_id            => gbv_PolicyTrans_Trxtype
                             );

     --
     -- Get the current policy transaction state
     --
     v_policytrx_state := pkg_os_object_io.fn_object_bv_get
                          (
                               in_session_id       => in_session_id,
                               in_transaction_id   => in_transaction_id,
                               in_object_id        => v_policy_current_trx_id,
                               in_bv_id            => gbv_GenObj_ObjectState
                          );

     if v_session_control.gLogging_Full          -- @@@PM - Merge this log statement with the next one
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Current policy transaction id: '||v_policy_current_trx_id||
               ' transaction type: '||v_policytrx_trx_type||
               ' transaction state: '||v_policytrx_state
          );

     end if;

     v_policy_image_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_current_trx_id, /*v_FItem_AssociatedPolTrans,*/ /*MAGDEV-5028*/
                                        gbv_PolicyTrxRefCoverages
                                  );


     v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        gbv_PolicyBillingMethod
                                   );

     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Image ID: '||v_policy_image_id||
               ' Policy Billing Method: '||v_policy_billing_method||' - '||
               pkg_os_lookup.fn_lookup_list_text_get(PolicyBillingMethodList, v_policy_billing_method)
          );
     end if;

     --
     -- Get Ultimate Customer ID
     --
     /*
     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_ultimate_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id
                                   );

     */
     --
     -- instead of ultimate customer get parent of type customer as batch object is the ultimate parent for multiple quote upload workflow...
     --
     v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_os_constant.gObjType_Customer
                                   );

     --
     -- Get the Primary Customer Entity
     --
     v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ultimate_customer_id,
                                        pkg_base_customer.gbv_CustRefPrimaryEntity
                                   );

     --
     -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
     --
     v_billing_acc_cust_id := pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        gObjType_BillingAccount
                                   );

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log     -- @@@PM - Merge log stmts - Policy, PolicyTrx and CustomerEntity into 1
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Ultimate Customer ID: '||v_ultimate_customer_id||
               ' Primary Customer Entity ID: '||v_primary_entity_id||
               ' Customer Billing Account ID: '||v_billing_acc_cust_id ||
               ' v_last_action_performed_id: ' || v_last_action_performed_id
          );
     end if;

     v_TermLatePaymentCount := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_term_id,
                                             gbv_TermLatePaymentCount
                                        );

     v_PolLatePaymentCount := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id,
                                             gbv_PolLatePaymentCount
                                        );

     --LXPRODUCT-306
     /*   v_AccLatePaymentCount := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_acc_cust_id,
                                             gbv_AccLatePaymentCount
                                        );
     */

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Term Curent Late Payment Count: '||v_TermLatePaymentCount||
               ' Policy Curent Late Payment Count: '||v_PolLatePaymentCount
               --||
               --' Billing Account Curent Late Payment Count: '||v_AccLatePaymentCount LXPRODUCT-306
          );
     end if;

     if v_new_billing_status_id in (gPolicyTermLate,gPolicyTermLateFeeCharged)
     then
          v_TermLatePaymentCount :=   nvl(v_TermLatePaymentCount,0)+1;
          v_PolLatePaymentCount  :=   nvl(v_PolLatePaymentCount,0)+1;
         -- v_AccLatePaymentCount  :=   nvl(v_AccLatePaymentCount,0)+1; LXPRODUCT-306
     end if;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
              /* '...Payer Count: '||v_termpayer_tab.count ||*/
               ' Action ID  '||v_action_id ||
               ' Last performed Acton ID ' || v_last_action_performed_id
          );
     end if;

     -- UTPRODUCT-5009

     if    v_action_id is not null
     and  (v_last_action_performed_id is null or v_last_action_performed_id <> v_action_id)
     then
     --if   v_termpayer_tab.count > 0
      if v_term_termpayer_tab.count >0 -- KR
          then

-- for j in v_termpayer_tab.first..v_termpayer_tab.last
       v_term_indx := v_term_termpayer_tab.first; 
       
       
       while v_term_indx is not null 
       loop 
         
          v_termpayer_tab := v_term_termpayer_tab (v_term_indx); -- KR

              for j in v_termpayer_tab.first..v_termpayer_tab.last
              loop
                    if  nvl(v_termpayer_tab(j).trigger_transaction_tf,'F') =  'T'
                    then
                        if v_session_control.gLogging_Full
                        then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Processing Iteration for Payer Billing Account ID ' || v_termpayer_tab(j).payer_billing_account_id ||
                                   ' Payer Rule Result TF  '|| v_termpayer_tab(j).payer_rule_result_tf ||
                                   ' Payer Trigger Transaction TF  ' || v_termpayer_tab(j).trigger_transaction_tf
                              );
                         end if;
                   else
                        if v_session_control.gLogging_Full
                        then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Skipped Iteration for Payer Billing Account ID ' || v_termpayer_tab(j).payer_billing_account_id ||
                                   ' Payer Rule Result TF  '|| v_termpayer_tab(j).payer_rule_result_tf ||
                                   ' Payer Trigger Transaction TF ' || v_termpayer_tab(j).trigger_transaction_tf
                              );
                        end if;
                        -- continue for new iteration in loop v_termpayer_tab
                        continue;
                    end if;

                    if v_action_id is not null  --  and  v_policytrx_state <> gTrxState_Created -- Arun - OSBILLING-6419
                       and
                       (v_last_action_performed_id is null or v_last_action_performed_id <> v_action_id)
                    then

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Calling pkg_db_object.sp_process_action_mini for action id : '||v_action_id||
                                   ' action object id : '||in_policy_id||
                                   ' io_action_outcome_id : '||io_action_outcome_id
                              );
                         end if;

                         -- Arun OSBILLING-7544
                         /*
                         Added below Exception flow
                         For Cancellation transaction creation action workflow we are using OSPolicyTransactionCreateRule to validate any
                         incomplete transaction exists on the policy.
                         So it will throw an exception when some validation fails.
                         Handling that excpetion below and creating a task
                         Validation happens after a new policy transaction is created. Since we are handling that exception we also delete that new transaction created
                         The below code is mainly for cancellation tansaction only
                         */
                         begin
                              --UTPRODUCT-4617
                              v_policy_last_current_trx_id  :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id       => in_session_id,
                                                                      in_transaction_id   => in_transaction_id,
                                                                      in_object_id        => in_policy_id,
                                                                      in_bv_id            => gbv_PolicyRefCurrentTrx
                                                                 );

                              -- UTPRODUCT-5009 Start, Set the value at Policy object for LAte process Target Object
                              if  v_termpayer_tab(j).payer_billing_account_id is not null
                              then
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_Policy_LateProc_TarObject,
                                        v_termpayer_tab(j).payer_billing_account_id
                                   );
                              end if;
                              -- UTPRODUCT-5009 Ends.
                                        
/*                              v_policy_current_trx_id       :=   fn_current_LP_policy_trx_get -- UTPRODUCT-4628--OSPRODUCT-17909 
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_policy_id,
                                                                      in_lp_trx_create_action_id => v_action_id,
                                                                      in_error_msg_tf       => case when nvl(v_transaction_process_tf , 'F') = 'T' then 'T' else 'F' end  --LXPRODUCT-269
                                                                 );    
                              --OSPRODUCT-17909
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_current_trx_id,
                                   gbv_pt_exprxn_id,
                                   v_expression_id
                              );        */                                  
                                                                      
                              --  We expect the xRef BV 33062048 Policy._Reference_Current LateProcess Transaction  is set inside this flow   -- UTPRODUCT-4628
                              --
                              pkg_db_object.sp_process_action_mini  --LXPRODUCT-374
                              (
                                   in_session_id                    =>        in_session_id,
                                   in_transaction_id                =>        in_transaction_id,
                                   in_action_id                     =>        v_action_id,
                                   in_action_object_id              =>        in_policy_id,
                                   io_object_cache                  =>        v_object_cache,
                                   io_message_list                  =>        v_message_list,
                                   io_action_outcome_id             =>        io_action_outcome_id,
                                   in_context_action_id             =>        v_context_action_id,
                                   in_context_object_id             =>        v_context_object_id,
                                   out_action_id                    =>        v_out_action_id,
                                   out_action_object_id             =>        v_out_action_object_id
                              );
							  
							  --OSPRODUCT-28929 Start
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_id,
                                   gbv_LateProcess_PolicyTerm,
                                   null
                                                                                                                                       
                              ); -- OSPRODUCT-28929 End

                              -- UTPRODUCT-5009 Start, Set the value as null at Policy object for LAte process Target Object
                              if  v_termpayer_tab(j).payer_billing_account_id is not null
                              then
                                 pkg_os_object_io.sp_object_bv_set
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_policy_id,
                                      gbv_Policy_LateProc_TarObject,
                                      null
                                 );
                              end if;
                              -- UTPRODUCT-5009 Ends.

                              -- OSPRODUCT-6160 - Start
                              -- Renewal Late Process
                         
                              v_policy_current_trx_id       :=   fn_current_LP_policy_trx_get -- UTPRODUCT-4628--OSPRODUCT-17909 
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      in_policy_id,
                                                                      in_lp_trx_create_action_id => v_action_id,
                                                                      in_error_msg_tf       => case when nvl(v_transaction_process_tf , 'F') = 'T' then 'T' else 'F' end  --LXPRODUCT-269
                                                                 );  
                              --OSPRODUCT-17909
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_current_trx_id,
                                   gbv_pt_exprxn_id,
                                   v_expression_id
                              );   

                              --OSPRODUCT-29007
                               pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_current_trx_id,
                                   pkg_db_constant.gbv_PT_BusinessRelationShip,
                                   v_business_relation_set_id
                              );
                                                                 
                              if v_session_control.gLogging_Full
                              then

                                pkg_os_logging.sp_log
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     '... Calling pkg_cs_db_billing.sp_set_renewal_late_process: '
                                     || ' v_policy_term_list(v_policy_term_list.first) : '||v_policy_term_list(v_policy_term_list.first)||
                                     ' v_policy_current_trx_id : '||v_policy_current_trx_id||
                                     'v_policy_last_current_trx_id:'||v_policy_last_current_trx_id --UTPRODUCT-4617
                                );

                              end if;
                              -- OSPRODUCT-6160 - End

                              --OSPRODUCT-1757- Start
                              pkg_cs_db_billing.sp_custom_late_process
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_term_id, -- KR Smoke v_policy_term_list(1)
                                   v_policy_current_trx_id
                              );
                              --OSPRODUCT-1757 - End

                              -- Arun OSBILLING-7544 - Start
                         exception

                              when others 
                              then
								   --OSPRODUCT-28929 Start
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_LateProcess_PolicyTerm,
                                        null
                                                                                                                                            
                                   ); -- OSPRODUCT-28929 End

                                   -- v_policy_current_trx_id_temp := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_policy_id,'27919402.210356.28987309' );
                                   v_policy_current_trx_id_temp := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_session_id,210395); --session new object

                                   if v_policy_current_trx_id_temp is not null 
                                   then

                                        v_policytrx_trx_type := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id       => in_session_id,
                                                                              in_transaction_id   => in_transaction_id,
                                                                              in_object_id        => v_policy_current_trx_id_temp,
                                                                              in_bv_id            => gbv_PolicyTrans_Trxtype
                                                                         );

                                        if v_policytrx_trx_type = gtrxtype_cancellation
                                        then
                                           io_action_outcome_id := g_outcome_trxcancelnotprocd;
                                        end if;

                                        v_policytrx_state := pkg_os_object_io.fn_object_bv_get
                                                                         (
                                                                              in_session_id       => in_session_id,
                                                                              in_transaction_id   => in_transaction_id,
                                                                              in_object_id        => v_policy_current_trx_id_temp,
                                                                              in_bv_id            => gbv_GenObj_ObjectState
                                                                         );

                                        if v_session_control.gLogging_Full then

                                              pkg_os_logging.sp_log
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_procedure_name,
                                                   '... v_policytrx_state: '||v_policytrx_state||
                                                   ' v_policy_current_trx_id : '||v_policy_current_trx_id ||
                                                   ' object type: ' || pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id,v_policy_current_trx_id_temp )
                                              );

                                        end if;

                                        ---if v_policytrx_state =  gTrxState_Created and pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id,v_policy_current_trx_id_temp ) = pkg_os_policy_transaction.gObjType_PolicyTransaction
                                        if v_policytrx_state in (pkg_os_constant.gObjState_Created, gTrxState_Created) and pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id,v_policy_current_trx_id_temp ) = pkg_os_policy_transaction.gObjType_PolicyTransaction
                                        then
                                              /*  pkg_os_object.sp_object_delete
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     in_policy_id,
                                                     v_policy_current_trx_id_temp,
                                                     pkg_os_policy_transaction.gObjType_PolicyTransaction
                                                 );
                                              */

                                             -- OSPRODUCT-6160 - Start
                                             pkg_cs_db_billing.sp_lp_custom_error_handle
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policy_current_trx_id_temp,
                                                       io_action_outcome_id
                                                   );

                                            -- OSPRODUCT-6160 - End
                                             raise exception_trans_create;
                                        else
                                             pkg_os_logging.sp_log_error
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '... Error finding the correct policy transaction for deletion . The object  v_policy_current_trx_id_temp ' || v_policy_current_trx_id_temp ||
                                                  ' Error: ' ||sqlerrm
                                             );
                                             raise;
                                        end if;
                                   end if;
                              raise ;
                         end;
                         -- Arun OSBILLING-7544

                         pkg_db_object.sp_ba_object_bv_set--pkg_os_object_io.sp_object_bv_set--LXPRODUCT-374
                         (
                             in_session_id,
                             in_transaction_id,
                             in_policy_id,
                             gbv_PolLastActionPerformed,          -- @@@PM - Use Global Constant
                             v_action_id
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... After executing pkg_db_object.sp_process_action_mini for action id : '||v_action_id||
                                   ' out action id : '||v_out_action_id||
                                   'out action object id : '||v_out_action_object_id||
                                   ' io_action_outcome_id : '||io_action_outcome_id ||
								   ' Late Process Policy Term : '||v_policy_term_id  --OSPRODUCT-28929
                              );

                         end if;

                         --end if; -- OSPRODUCT-14928 Move it at beforr the loop purpose to include process logic too in IF condition.


                         --
                         -- Get the current policy transaction type
                         --
                         -- @@@PM - This  was already selected above
                         v_policytrx_trx_type := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                            in_session_id       => in_session_id,
                                                            in_transaction_id   => in_transaction_id,
                                                            in_object_id        => v_policy_current_trx_id,
                                                            in_bv_id            => gbv_PolicyTrans_Trxtype
                                                     );

                         --
                         -- Get the current policy transaction state
                         --

                         -- @@@PM - This  was already selected above
                         v_policytrx_state := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                        in_session_id       => in_session_id,
                                                        in_transaction_id   => in_transaction_id,
                                                        in_object_id        => v_policy_current_trx_id,
                                                        in_bv_id            => gbv_GenObj_ObjectState
                                                  );


                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '... Current policy transaction id: '||v_policy_current_trx_id||
                                    ' transaction type: '||v_policytrx_trx_type||
                                    ' transaction state: '||v_policytrx_state||
                                    ' v_transaction_process_tf : '||v_transaction_process_tf || -- UTPRODUCT-5009
                                    ' Payer ID '|| v_termpayer_tab(j).payer_billing_account_id     -- UTPRODUCT-5009
                              );
                         end if;

                         -- OSPRODUCT-8001
                         if v_transaction_process_tf = 'T' then

                              if  nvl
                                    (
                                          pkg_cs_db_billing.fn_lp_policy_trx_process_tf
                                          (
                                                in_session_id,
                                                in_transaction_id,
                                                v_policy_current_trx_id
                                          ),
                                          'T'
                                    ) = 'F'
                              then

                                    v_transaction_process_tf := 'F';

                              end if;

                         end if;
                         -- OSPRODUCT-8001

                         -- UTPRODUCT-5009 Starts
                         if  v_termpayer_tab(j).payer_billing_account_id is not null
                         and v_policytrx_state <> gTrxState_Processed
                         then
                              pkg_os_object_io.sp_object_bv_set
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_current_trx_id,
                                    gbv_FITrxSet_Ass_Payer,
                                    v_termpayer_tab(j).payer_billing_account_id
                              );

                         end if;
                         -- UTPRODUCT-5009 Starts

                         -- UTPRODUCT-4617 start
                         if v_transaction_process_tf = 'T' and v_policy_current_trx_id = v_policy_last_current_trx_id
                         then
                              v_trx_seq_number := pkg_os_object_io.fn_object_bv_get
                                                                   (
                                                                         in_session_id       => in_session_id,
                                                                         in_transaction_id   => in_transaction_id,
                                                                         in_object_id        => v_policy_current_trx_id,
                                                                         in_bv_id            => 32214598
                                                                   );



                              pkg_os_logging.sp_log_error
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '... Error encountered while processing Late Process transaction for policy id:'|| in_policy_id||
                                    ' transaction creation action is: ' ||v_action_id||
                                    '. 212298: _Reference_New or Current Transaction is same ('||v_policy_last_current_trx_id||
                                    ' ) before and after Late process transaction creation. for this transaction,  Transaction Type is:'||v_policytrx_trx_type||
                                    ' and state is :'||v_policytrx_state ||
                                    ' . Transaction Sequence number(32214598) is: '||v_trx_seq_number||
                                    ' Late Process failed and Policy Team has to look at the reason why Ref is returning incorrect value. After fixing the issue, failed job can be marked for retry so that it is picked again and processed.'


                              );

                              raise INCORRECT_SEQUENCE;

                         end if;
                         -- UTPRODUCT-4617 end
                         if v_transaction_process_tf = 'T' and v_policytrx_state <> gTrxState_Processed then -- OSBILLING-6061

                              --OSBilling-5169 Commneted below condition
                              --if v_policytrx_trx_type  in   (gTrxType_PendCancellation, gTrxType_RescPendCancel, gTrxType_Cancellation, gTrxType_Reinstatement)
                              --then

                              -- UTPRODUCT-4628
                              -- Before calling the Late Process 'Transaction Processing' action, reset the xRef BV 33062048 Policy._Reference_Current LateProcess Transaction
                              --
                              if v_session_control.gLogging_Full
                              then
                                    pkg_os_logging.sp_log
                                    (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '... Before calling the Late Process "Transaction Processing" action '||v_action_id||
                                          ', reset the xRef BV 33062048 Policy._Reference_Current LateProcess Transaction for policy ' || in_policy_id
                                    );
                              end if;

                              pkg_os_object_io.sp_object_bv_set
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_id,
                                    gbv_PolRefCurrLateProcessTrx,
                                    null
                              );
                              -- / UTPRODUCT-4628


                              if v_session_control.gLogging_Full
                              then

                                    pkg_os_logging.sp_log
                                    (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '... Calling pkg_db_object.sp_process_action_mini for action id : '||v_action_id||
                                          ' action object id : '||in_policy_id||
                                          ' io_action_outcome_id : '||io_action_outcome_id
                                    );

                              end if;


                              pkg_db_object.sp_process_action_mini --LXPRODUCT-374
                              (
                                    in_session_id                    =>        in_session_id,
                                    in_transaction_id                =>        in_transaction_id,
                                    in_action_id                     =>        v_trx_process_action_id,
                                    in_action_object_id              =>        v_policy_current_trx_id,
                                    io_object_cache                  =>        v_object_cache,
                                    io_message_list                  =>        v_message_list,
                                    io_action_outcome_id             =>        io_action_outcome_id,
                                    in_context_action_id             =>        v_context_action_id,
                                    in_context_object_id             =>        v_context_object_id,
                                    out_action_id                    =>        v_out_action_id,
                                    out_action_object_id             =>        v_out_action_object_id
                              );

                              if v_session_control.gLogging_Full
                              then

                                    pkg_os_logging.sp_log
                                    (
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          '... After executing pkg_db_object.sp_process_action_mini for action id : '||v_action_id||
                                          ' out action id : '||v_out_action_id||
                                          ' out action object id : '||v_out_action_object_id||
                                          ' io_action_outcome_id : '||io_action_outcome_id
                                    );

                              end if;

                              -- end if;
                              --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
                              -- ARUN - OSBILLING-5513 - Added for LateNotice2 transaction
                              --OSBILLING-6094--
                              /*if v_policytrx_trx_type  in   (gTrxType_PendCancellation, gTrxType_RescPendCancel, gTrxType_Cancellation, gTrxType_Reinstatement, 6140, 5146,6631,6731, gSetType_LateNotice2  ) --GCNA-1436 add FinalReminder type) --GCNA-2842 Added  6631 First Post Cancellation Reminder,6731 First Post Cancellation Reminder
                              then  */
                              --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
                              --- @@@PM - This state change must be happen if and only if the Outcome = OK

                              pkg_os_object_io.sp_object_bv_set
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_current_trx_id,
                                    pkg_os_constant_bv.gbv_GenObjObjectState,
                                    gTrxState_Processed
                              );

                               -- OSPRODUCT-6160 - Start
                            --- Set the process date on the policy transaction
                            pkg_os_object_io.sp_object_bv_set
                                 (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policy_current_trx_id,
                                          212161,
                                          to_char(sysdate,pkg_os_constant.DragonDateFormatDefault) /* UTPRODUCT-4610 */
                                 );
                               -- OSPRODUCT-6160 - End

                              v_policytrx_state   :=   gTrxState_Processed;
                              --end if; --as part of OSBILLING-3833
                              --OSBILLING-6094--

                         end if;

                         if v_policytrx_trx_type = gTrxType_PendCancellation and v_policytrx_state = gTrxState_Processed
                         then

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         elsif v_policytrx_trx_type = gTrxType_PendCancellation and v_policytrx_state = gTrxState_Created
                         then

                              io_action_outcome_id := g_outcome_TrxPendCanNotProcd;

                         elsif v_policytrx_trx_type = gTrxType_RescPendCancel and v_policytrx_state = gTrxState_Processed
                         then

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         elsif v_policytrx_trx_type = gTrxType_RescPendCancel and v_policytrx_state = gTrxState_Created
                         then

                              io_action_outcome_id := g_outcome_TrxRescindNotProcd;

                         elsif v_policytrx_trx_type = gSetType_LateNotice and v_policytrx_state = gTrxState_Processed --OSBILLING-5169 Late Notice
                         then

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         elsif v_policytrx_trx_type = g_TrxType_AutoWriteOff and v_policytrx_state = gTrxState_Processed --OSBILLING-6496
                         then

                              io_action_outcome_id   :=   pkg_os_constant.gOutcome_OK;
                         elsif v_policytrx_trx_type   =   gTrxType_Cancellation and v_policytrx_state = gTrxState_Processed
                         then

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         elsif v_policytrx_trx_type = gTrxType_Cancellation and (v_policytrx_state = gTrxState_Created or v_policytrx_state = PKG_DB_BILLING_PAYABLE.gBatchStatus_Created)  --OSPRODUCT-14525
                         then

                              io_action_outcome_id := g_outcome_TrxCancelNotProcd;

                         else

                              io_action_outcome_id := pkg_os_constant.gOutcome_OK;

                         end if;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                    in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    '... Action Outcome ID: '||io_action_outcome_id
                              );

                         end if;
                    end if; -- OSPRODUCT-14928 Move from above to include in  IF condition.
               end loop;

       v_term_indx := v_term_termpayer_tab.next(v_term_indx);
       
     
      end loop; --  v_term_termpayer_tab KR

          end if;
     end if;
      -- UTPRODUCT-5009

     if v_TermLatePaymentCount >= 1 then

          pkg_db_object.sp_ba_object_bv_set --- OSPRODUCT-21291
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               gbv_TermLatePaymentCount,
               v_TermLatePaymentCount
          );

          pkg_db_object.sp_ba_object_bv_set --- OSPRODUCT-21291
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               gbv_TermLatePaymentIndicator,
               1
          );

     end if;

     if v_PolLatePaymentCount >= 1 then

          pkg_db_object.sp_ba_object_bv_set --- OSPRODUCT-21291
          (
               in_session_id,
               in_transaction_id,
               in_policy_id,
               gbv_PolLatePaymentCount,
               v_PolLatePaymentCount
          );

          pkg_db_object.sp_ba_object_bv_set --- OSPRODUCT-21291
          (
               in_session_id,
               in_transaction_id,
               in_policy_id,
               gbv_PolLatePaymentIndicator,
               1
          );

     end if;

     /*LXPRODUCT-306
     if v_AccLatePaymentCount>= 1 then

          --Start OSPRODUCT-5474
          /*pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_cust_id,
               gbv_AccLatePaymentCount,
               v_AccLatePaymentCount
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_cust_id,
               gbv_AccLatePaymentIndicator,
               1
          );*/

       /*   v_bv_table.delete;

          v_bv_table ( gbv_AccLatePaymentCount         ).business_variable_value     :=   v_AccLatePaymentCount;
          v_bv_table ( gbv_AccLatePaymentIndicator     ).business_variable_value     :=   1;

          pkg_db_object.sp_ba_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_cust_id,
               v_bv_table
          );
          --End OSPRODUCT-5474

     end if;*/
     --LXPRODUCT-306
     --
     -- check the count and step number and update the billing status
     --

     if v_count > 1
     then

          raise exception_more_true_count;

     elsif v_count=1  and io_action_outcome_id in (pkg_os_constant.gOutcome_OK,g_outcome_transactionlate,g_outcome_TransactionWriteoff,g_outcome_TrxReinstateRequest)
     then

          v_policy_term_idx   :=   v_policy_term_list.first;

          while v_policy_term_idx is not null
          loop

               v_policy_term_id   :=   v_policy_term_list( v_policy_term_idx );

               --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
               if v_action_id is null
                  or
                  (
                       v_action_id is not null and v_policytrx_state not in (gTrxState_Created)
                       and
                       (v_last_action_performed_id is null or v_last_action_performed_id <> v_action_id)
                  )
               then

                    --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

                    --
                    -- Set the billing status on policy term id
                    --

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_policy_term_id,
                         gbv_PolicyTerm_BillingStatus,
                         v_new_billing_status_id
                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Updated New Billing Status: '||v_new_billing_status_id||
                              ' On Policy Term: '||v_policy_term_id
                         );

                    end if; --as part of OSBILLING-3833

               end if;

               v_policy_term_idx   :=   v_policy_term_list.next( v_policy_term_idx );

          end loop;

          v_policy_term_list.delete;

     end if;
     ---LIOPRODUCT-55 start. will read db late profile instr to fetch set and suspend or resume. fetch db_suspend_activity_set_val

     if  v_count >= 1
     then
          if v_suspend_resume = gSuspendResume_Suspend --suspend
          then
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name,'Calling sp_late_process_policy_suspend');
               end if;

               pkg_db_suspension.sp_late_process_policy_suspend
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    v_policy_term_id,
                    v_suspend_resume_set_id,
                    io_action_outcome_id
               );
          elsif v_suspend_resume = gSuspendResume_Resume --resume
          then
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log(in_session_id,in_transaction_id,v_procedure_name,'Calling sp_late_process_policy_resume');
               end if;

               pkg_db_suspension.sp_late_process_policy_resume
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    io_action_outcome_id
               );
          end if;
     end if;
     ---LIOPRODUCT-55 end

     /*OSPRODUCT-10394*/
     if v_count >= 1
     then
     --            if term status is Active and dues cleared
     --            and DOI is less than sysdate then recalculate

          --- Get policy current due
          v_policy_current_due := pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        pkg_db_constant.gbv_PolicyCurrentDue --31762946
                                  );

          --- Get policy past due
          v_policy_past_due := pkg_os_object_io.fn_object_bv_get
                               (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        pkg_db_constant.gbv_PolicyPastDue --31762846
                               );
          -- OSPRODUCT-13422
          /*v_curr_date_of_interest := pkg_os_object_io.fn_object_bv_get
                                     (
                                        in_session_id => in_session_id,
                                        in_transaction_id => in_transaction_id,
                                        in_object_id => in_policy_id,
                                        in_bv_id => pkg_db_date_of_interest.gv_policy_doi_bv
                                     );*/

          v_curr_date_of_interest := to_char( pkg_db_date_of_interest.fn_policy_doi_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_policy_id
                                              ), pkg_os_constant.DragonDateFormatDefault );

          -- end OSPRODUCT-13422

          if v_session_control.gLogging_Full
          then

             pkg_os_logging.sp_log
             (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  '... Policy Current Due: '||v_policy_current_due||
                  '... Policy Past Due: '||v_policy_past_due||
                  '... Policy Billing term status ID: '||v_new_billing_status_id||
                  '... Policy current Date of interest: '||v_curr_date_of_interest
             );

          end if;

          if v_new_billing_status_id = pkg_db_constant.gStatus_PolicyBillingTermActive  -- Active(43746)
             and v_policy_current_due <= 0
             and v_policy_past_due <= 0
             and v_curr_date_of_interest < to_number(to_char(sysdate,'YYYYMMDDHH24MISS'))
          then

               pkg_db_date_of_interest.sp_recalc_date_of_interest
               (
                    in_session_id       => in_session_id,
                    in_transaction_id   => in_transaction_id,
                    in_policy_id        => in_policy_id,
                    in_force_tf         => 1 -- OSPRODUCT-14577

               );

          end if;

     end if;
     /*OSPRODUCT-10394*/

     if v_count >= 1 then--OSBILLING-3142 check if there is any update needed in the datamart.

          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_current_trx_id, v_datamart_tf);

          pkg_os_datamart.sp_datamart_update_row          -- @@@PM - Make all datamart update stmts a one-liner as above
          (
               in_session_id,
               in_transaction_id,
               in_policy_id,
               v_datamart_tf
          );

          --OSPRODUCT-1879

          /*pkg_os_datamart.sp_datamart_update_row          -- @@@PM - Make all datamart update stmts a one-liner as above
          (
          in_session_id,
          in_transaction_id,
          v_FItem_AssociatedPolTrans,
          v_datamart_tf
          );*/

          --OSPRODUCT-1879

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               v_datamart_tf
          );

     end if;

     else

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'No valid fitems found to process'
          );

     end if;

     io_action_outcome_id   :=   pkg_os_constant.gOutcome_OK;

     end if; ---if v_valid_fitem_count > 0

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Valid Fitme count from CS function ' || v_valid_fitem_count ||
               'Action Outcome: ' || io_action_outcome_id
          );
     end if;

     --  UTPRODUCT-5009 Starts.
     --  Outcome set to Ok, to overide the input outcome when
     --  the system has the valid item or no valid triggers.
     --
     if  (v_valid_fitem_count =  0 or v_count  = 0)
     and io_action_outcome_id =  g_outcome_ActionNotImplemented
     then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_OK;

     end if;
     -- UTPRODUCT-5009 Ends.



exception
     --UTPRODUCT-4617
     when INCORRECT_SEQUENCE then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_InternalError;
          raise;

     when exception_more_true_count then

          io_action_outcome_id   :=   pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered exception_more_true_count: ' || v_count ||
               ' Error: ' ||sqlerrm
          );
      -- Arun OSBILLING-7544 - Start
     when exception_trans_create then

          if io_action_outcome_id <> g_outcome_trxcancelnotprocd then

              io_action_outcome_id := pkg_os_constant.goutcome_internalerror;

          end if;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered exception_trans_create: ' ||
               ' Error: ' ||sqlerrm
          );
     -- Arun OSBILLING-7544 - End

     when no_data_found then

          io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered no_data_found '||
               ' Error: ' ||sqlerrm || dbms_utility.format_error_backtrace
          );

          raise; -- OSBILLING-4002

     when others then

          io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered while executing the late process for Policy: ' || in_policy_id ||
               ' Error: ' ||sqlerrm ||
               ' '||dbms_utility.format_error_backtrace
          );

          raise;

end sp_late_process;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        sp_late_fee
--
--   %usage
--        Procedure to calculate the late fee on the policy.
--
--   %algorithm
--        Calculate the late fee based on the policy.
--
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_policy_transaction_id      Policy transaction id
--   %param    in_policy_id                  policy id
--   %param    io_action_outcome_id          action outcome id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_late_fee          -- @@@PM - rename procedure name
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type          -- @@@PM - remove nocopy
)
is

     v_procedure_name                   constant system_log.program_name%type   :=      pkg_name||'sp_late_fee';
     v_session_control                  pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_product_id                       pd_product.pd_product_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_billingacccounttrxset_id         object.object_id%type;
     v_debit_fitransaction_id           object.object_id%type;
     v_credit_fitransaction_id          object.object_id%type;
     v_current_fitransaction_id         object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_debit_id                   object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_agency_billing_acc_id            object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_fichangerefbelongsto_id          object.object_id%type;
     v_billing_acc_id                   object.object_id%type;  --OSPRODUCT-34738
     v_fichange_action                  object_bv_value.business_variable_value%type;
     v_fitem_effective_date             object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;

     v_datamart_tf                      char(1) := 'T';
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_policy_billing_method            number;
     v_target_fitem_balance_amt         float;
     v_late_fee                         number;
     v_late_fee_expression_val          number;
     v_late_fee_path_val                number;
     v_late_fee_val                     number;
     v_fitrx_ref_billing_account        number;
     v_parent_billing_account_id        number;
     v_FItemRefEntityBelongsTo          number;
     v_obj_type_id                      number;
     v_multipayer_enabled_tf            boolean;
     v_chk_latefee_assignment_tf        char(1);
     --r_billing_account_index            varchar2(100);
     v_policy_date                      date :=   pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );
                                                  
     v_current_date                     object_bv_value.business_variable_value%type := to_char
                                                                                        (
                                                                                             v_policy_date,
                                                                                             pkg_os_constant.DragonDateFormatDefault
                                                                                        );

     v_debit_trx_id                     object.object_id%type;
     v_info_fichange_id                 object.object_id%type;
     v_info_fichange_amount             number;
     v_pmt_batch_amt                    number;
     v_pmt_batch_amt_with_fee           number;
     v_aging_date_criteria              char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_policy_id,19446); -- 1: Billing Due Date, 2: Withdrawal Date
     v_cnt_fee number;
     v_cnt_fee_neg number;
     --OSPRODUCT-1632 Start
     v_ref_instalment_id                dragon_fichange.installment%type:= null;
     v_fee_due_date                     object_bv_value.business_variable_value%type;
     v_fee_withdrawal_date              object_bv_value.business_variable_value%type; -- UTPRODUCT-4853
     v_due_withdrawal_date              object_bv_value.business_variable_value%type; -- UTPRODUCT-4853
      --OSPRODUCT-1632 End
     v_bill_trx_set_type_id             object_bv_value.business_variable_value%type; --OSPRODUCT-3380
     v_FItem_Cat_Fee                    number;  --OSPRODUCT-3380
     v_total_balance                    number;
     v_count_bil_account                number := 1;
     r_billing_account_list             pkg_db_object.t_billing_account_list;
     v_billing_account_list             pkg_db_object.t_billing_account_list;
     v_billing_account_unique_list      pkg_db_object.t_billing_account_list;
     v_agency_account_type_id           object_bv_value.business_variable_value%type; --OSPRODUCT-34738
     v_fitem_relationship_id            object_bv_value.business_variable_value%type; --OSPRODUCT-34738
     v_bill_plan_enabled_tf             number; --OSPRODUCT-34738
     
     v_idx                              number;
     v_tgt_indx                         number;

     cursor c_due_fitem
     is
          select
               f.fitem_id,
               f.policy_id,
               f.policy_transaction_id,
               f.fitem_category_id,
               f.fitem_sub_category_id,
               f.due_date,
               f.policy_effective_date,
               f.balance               as balance_amt                -- balance amt - can be due or cash
          from
               dragon_fitem f
          where
               f.policy_id = in_policy_id
          and
               trunc(decode(v_aging_date_criteria,2,f.withdrawal_date,f.due_date)) <= trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,in_policy_id))
         and
               f.fitem_type_id = gFItemType_Debit
          and
               f.aging_status_id     =    3 --past due
          and
               f.balance >= 0.01
          order by
               f.fitem_id;
  -- OSBILLING-4454 - Added cursor so that it can be executed multiple times for different product id
     Cursor c_get_latefee
     (
       cp_product_id                       db_billing_fee.pd_product_id%type,
       cp_billing_trx_type_id              db_transaction_set_type.db_trxset_type_id%type  --OSPRODUCT-3380
     )
     is
           select
               pkg_os_exp.fn_evaluate_expression
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    fee_calculation_expression_id
               ) expression_fee,   --OSPRODUCT-3380
               pkg_os_object_io.fn_object_bv_path_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    fee_bv_path
                ) bv_path_fee,     --OSPRODUCT-3380
                fee_value,
                fitem_sub_category_id,
                db_business_relationship_set_id     ----OSPRODUCT-34738
          from
               db_billing_fee          --@@@PM - Please use alias for table and columns
          where
               active_tf = 'T'     --OSPRODUCT-3380
          and  --@@@PM - replace pkg_db_functions.fn_get_policy_current_date with a local variable
                    --nvl( fee_effective_date ,to_date('01/01/0001','DD/MM/YYYY')) <=   v_policy_date
               nvl(fee_effective_date, to_date('01/01/0001', 'DD/MM/YYYY')) <= nvl(v_policy_date,sysdate)
          and  --@@@PM - replace pkg_db_functions.fn_get_policy_current_date with a local variable
               --nvl( fee_expiration_date,to_date('31/12/9999','DD/MM/YYYY')) >=   v_policy_date
               nvl(fee_expiration_date, to_date('31/12/9999', 'DD/MM/YYYY')) >= nvl(v_policy_date,sysdate)
          and
          (
               (
                    pd_product_set_id is not null
               and
                    db_billing_trx_set_id is not null
               and
                    pkg_os_product.fn_product_in_set( cp_product_id , pd_product_set_id) ='T'
                    --pkg_os_product.fn_product_in_set (1,pd_product_set_id) = 'T'
               and
                    pkg_db_stmt_util.fn_billing_trx_type_in_set(cp_billing_trx_type_id,db_billing_trx_set_id) = 'T'
               )
               or -- This code only for BC   --OSPRODUCT-3380
               (
                    pd_product_id = cp_product_id
               and
                    pkg_os_policy_transaction_type.fn_transaction_type_in_set(5146,transaction_set_id) = 'T'          --@@@PM - Use global constant please.
               and
                    fitem_sub_category_id = gFItem_SubCat_LateFee
               )

          )
          and ( pkg_os_exp.fn_evaluate_expression                              --OSPRODUCT-34738 
                       (
                         in_session_id,
                         in_transaction_id,
                         --db_billing_trx_set_id,
                         in_policy_id,
                         db_billing_fee.apply_rule
                       ) = pkg_db_object.gdoc_processing_ApplyRule_T 
                       or   db_billing_fee.apply_rule is null
               );
       -- OSBILLING-4454 -  End
	   
	   /*cursor c_billing_account is
       
          select distinct
               f.billing_account_id
          from
               dragon_fitem f
          where
               f.policy_id = in_policy_id
          and     
               f.balance >= 0.01
          and
               f.aging_status_id in (2,3)
          order by
               f.billing_account_id;*/
               
     cursor c_billing_account
     is
          select
               distinct f.billing_account_id, account_type_id              
          from
               dragon_fitem f, dragon_billingaccount db
          where
               f.billing_account_id = db.billingaccount_id
          and
               f.policy_id = in_policy_id
          and
               nvl (pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_policy_id, 22146), 'F') = 'F'
          and
               f.fitem_type_id = pkg_db_object.gFItem_Debit
          and
               nvl(db.account_type_id, 1501) != 1501
          and
               f.aging_status_id = pkg_db_stmt.gAgingStatus_Past
          and
               f.balance > 0

          union

          select
               distinct f.billing_account_id, db.account_type_id
          from
               dragon_fitem f, dragon_billingaccount db
          where
               f.billing_account_id = db.billingaccount_id
          and
               f.policy_id = in_policy_id
          and
               nvl (pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_policy_id,22146), 'F') = 'T'
          and
               f.fitem_type_id = pkg_db_object.gFItem_Debit
          and
               nvl(db.account_type_id, 1501) != 1501
          and
               aging_status_id in (2,3)
          and
               balance > 0
          ;

begin
      v_obj_type_id := pkg_os_object.fn_object_type_get( in_session_id, in_transaction_id, in_policy_transaction_id );
     
     v_chk_latefee_assignment_tf := pkg_os_product.fn_product_property_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id,
                                             80248
                                        );
                                        
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Late Fee Transaction Creation Process for transaction: '||in_policy_transaction_id||' Type:'||v_obj_type_id
          );

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....Start sp_late_fee'||
               '...... in_session_id: '|| in_session_id ||
               '...... in_transaction_id: '|| in_transaction_id ||
               '...... in_policy_transaction_id: '|| in_policy_transaction_id ||
               '...... in_policy_id: '|| in_policy_id ||
               '...... Late fee detail: ' || v_chk_latefee_assignment_tf
          );

     end if;

     r_billing_account_list.delete;

     v_product_id     :=     pkg_os_product.fn_object_product_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_id
                             );

     -- OSBILLING-4454 -  First executing the cursor with actual Product_id
     -- If no row found then excuting the cursor with 'All' product id
      ---Logging 1----
      if v_session_control.gLogging_Full
         then

                 pkg_os_logging.sp_log
                 (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '......  in_policy_id: '|| in_policy_id ||
                 '......  v_product_id: '|| v_product_id ||
                 '......  v_policy_date: '|| v_policy_date
                  );

    end if;

    v_policy_image_id       :=   pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        gbv_PolicyTrxRefCoverages
                                  );



      if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... in_session_id test99: '||in_session_id||
               '...in_transaction_id: '||in_transaction_id||
         '...v_policy_image_id: '||v_policy_image_id||
               '....gbv_PolicyBillingMethod:  '|| gbv_PolicyBillingMethod
          );

     end if;


     v_policy_billing_method  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        gbv_PolicyBillingMethod
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Image ID: '||v_policy_image_id||
               ' Policy Billing Method: '||v_policy_billing_method||' - '||
               pkg_os_lookup.fn_lookup_list_text_get(PolicyBillingMethodList, v_policy_billing_method)
          );

     end if;

     --
     -- Get Ultimate Customer ID
     --

     /*
     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_ultimate_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id
                                   );
     */
     --
     -- instead of ultimate customer get parent of type customer as batch object is the ultimate parent for multiple quote upload workflow...
     --
     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_get_parent_of_type
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_os_constant.gObjType_Customer
                                   );

     --
     -- Get the Primary Customer Entity
     --

     v_primary_entity_id      :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ultimate_customer_id,
                                        pkg_base_customer.gbv_CustRefPrimaryEntity
                                   );

     --
     -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
     --

     v_billing_acc_cust_id    :=   pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        gObjType_BillingAccount
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Ultimate Customer ID: '||v_ultimate_customer_id||
               ' Primary Customer Entity ID: '||v_primary_entity_id||
               ' Customer Billing Account ID: '||v_billing_acc_cust_id
          );

     end if;


     --
     -- Is Policy Billing Method Agency Billed
     --

 --    if v_policy_billing_method = gBillingMethod_Agency
 --    then

          --
          -- Get the Producing Agency
          --

          v_producing_agency_id    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_image_id,
                                             pkg_os_constant_bv.gbv_GenObjProducingAgency
                                        );

          --
          -- Get the 1-1 child of the Partner of type Billing Account
          --

          v_agency_billing_acc_id  :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_producing_agency_id,
                                             gObjType_BillingAccount
                                        );

          v_agency_account_type_id         :=  pkg_os_object_io.fn_object_bv_get 
                                        (
                                             in_session_id, 
                                             in_transaction_id , 
                                             v_agency_billing_acc_id, 
                                             pkg_db_billing_modify.gbv_BillingAccountType
                                        );
                                        
          v_bill_plan_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                          ( 
                                               in_session_id, 
                                               in_transaction_id, 
                                               v_policy_image_id, 
                                               pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF --32704624
                                          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Producing Agency ID: '||v_producing_agency_id||
                    ' Producing Agency Billing Account ID: '||v_agency_billing_acc_id
               );

          end if;

          if nvl(v_bill_plan_enabled_tf, gBooleanNo) = gBooleanYes  --OSPRODUCT-34738
               then v_billing_acc_id := v_billing_acc_cust_id;
          else
               v_billing_acc_id := v_agency_billing_acc_id;                                                                              
          end if;

     --end if; -- end of v_policy_billing_method = gBillingMethod_Agency
  --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     v_current_date           :=   to_char
                                   (
                                        pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        ),
                                        pkg_os_constant.DragonDateFormatDefault
                                   );
  --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     v_writing_company_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_GenObj_RefWritingComp
                                   );

     v_carrier_billing_acc_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_writing_company_id,
                                        gbv_GenObj_ChildBillAcc
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... v_writing_company_id: '||v_writing_company_id ||
               '... Carrier Billing Account ID: '||v_carrier_billing_acc_id
          );

     end if;


    v_billingacccounttrxset_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        gbv_PolTrxRefBillingAccTrxSet
                                   );

     select                                                 --OSPRODUCT-34738 
          f.fitem_business_relationship  
     into 
          v_fitem_relationship_id 
     from 
          dragon_fitem  f 
     where 
          fitem_id in 
               (
               select 
                    min(fitem_id)  
               from 
                    dragon_fichange 
               where 
                    billingaccounttrxset_id = v_billingacccounttrxset_id 
               );

     v_bill_trx_set_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_billingacccounttrxset_id, pkg_db_stmt.gbv_FITrxSetBatchType);


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... v_billingacccounttrxset_id: '||v_billingacccounttrxset_id||
               ' :v_bill_trx_set_type_id :'||v_bill_trx_set_type_id
          );

     end if;

     --
     -- Set the Reference from BillingAccountTransactionSet to PolicyTransaction Object
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id, -- Billingaccnt trx id
          gbv_BillingAccTrxSetRefPolTxn, -- 32502146
          in_policy_transaction_id -- pol trx id

     );

     --OSPRODUCT-3380
     --
     -- Loop for eache DB_BILLING_ID.
     --
     for r_get_latefee in c_get_latefee (v_product_id,v_bill_trx_set_type_id)
     loop

          if r_get_latefee.expression_fee is not null --OSPRODUCT-3380
          then
               v_late_fee := r_get_latefee.expression_fee;

          elsif r_get_latefee.bv_path_fee is not null
          then

               v_late_fee := r_get_latefee.bv_path_fee;

          else

               v_late_fee := r_get_latefee.fee_value;

          end if;


          v_FItem_Cat_Fee := NVL(pkg_db_functions.fn_fitem_category_get(r_get_latefee.fitem_sub_category_id),gFItem_Cat_Fee);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ Late Fee Amount from db_billing_fee: '||v_late_fee||
                    ' late fee expression value : '||r_get_latefee.expression_fee||
                    ' late fee path value : '||r_get_latefee.bv_path_fee||
                    ' late fee constant value : '||r_get_latefee.fee_value         --@@@PM - print all 3 variables v_late_fee_expression_val, v_late_fee_path_val, v_late_fee_val
               );

          end if;
          --OSPRODUCT-3380

          v_target_fitem_balance_amt    :=   abs(v_late_fee);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Late Fee : '||v_late_fee||
                    ' Amount : '||v_target_fitem_balance_amt          --@@@PM - Log late fee value as well
               );

          end if;
	 
	     v_multipayer_enabled_tf := pkg_db_multipayer.fn_multipayer_mode_tf
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_policy_id
                                     );
												  
	     v_billing_account_list.delete;
		 
          if v_target_fitem_balance_amt > 0
          then

               --if v_policy_billing_method = gBillingMethod_Agency
              -- then
                    
                   -- v_billing_account_list(v_count_bil_account) := v_agency_billing_acc_id;
                    
               --else
                    
                    if v_chk_latefee_assignment_tf = 'T' and v_multipayer_enabled_tf
                    then
                         
                         for r_billing_account in c_billing_account
                         loop
                              
                              if( r_billing_account.account_type_id <> v_agency_account_type_id )
                              then
                                   v_billing_account_list(v_count_bil_account) := r_billing_account.billing_Account_id;
                                   v_count_bil_account := v_count_bil_account + 1;
                              end if;
                              
                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Billing acc added : '||r_billing_account.billing_Account_id
                                   );

                              end if;
                                                           
                         end loop;
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Before BA Count: '||v_billing_account_list.count
                              );

                         end if;
                         
                         pkg_cs_db_stmt.sp_get_late_payer_ba_list
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_id,
                              v_billingacccounttrxset_id,
                              in_policy_transaction_id,
                              v_billing_account_list
                         );
                         
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... After BA Count: '||v_billing_account_list.count
                              );

                         end if;
                    									
                    else
                         v_billing_account_list(v_count_bil_account)    :=   v_billing_acc_id;
                    end if;
                    
              -- end if;--OSPRODUCT-34738
			   
			   v_billing_account_unique_list.delete;
                         
               v_tgt_indx := v_billing_account_list.first;
                         
               while v_tgt_indx is not null
               loop
                              
                    if not v_billing_account_unique_list.exists(v_billing_account_list(v_tgt_indx))
                    then
                                   
                         v_billing_account_unique_list(v_billing_account_list(v_tgt_indx)) := v_billing_account_list(v_tgt_indx);
                                   
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... BA added to the unique list '||v_billing_account_list(v_tgt_indx)
                              );

                         end if;              
                              
                    else
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Skipping as already present in the list '||v_billing_account_list(v_tgt_indx)
                              );

                         end if;
                                                                
                    end if;
                              
                    v_tgt_indx := v_billing_account_list.next(v_tgt_indx);
                      
               end loop; 
               
               v_idx := v_billing_account_unique_list.first;
			while v_idx is not null 
			loop

                if v_session_control.gLogging_Full
                then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... v_fitrx_ref_billing_account : '||v_fitrx_ref_billing_account
               );

               end if;

               --
               -- Create new Debit FITransaction Object
               --

               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                    out_fitransaction_id               =>    v_debit_fitransaction_id,
                    in_fitrx_type                      =>    gFITrxType_Dr_Generate,
                    in_fitrx_ref_billing_account       =>    v_fitrx_ref_billing_account,
                    in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    in_policy_id,
                    in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                    in_fitrx_effective_date            =>    v_current_date,
                    in_fitrx_gl_date                   =>    v_current_date,
                    in_fitrx_process_date              =>    v_current_date,
                    in_fitrx_amount                    =>    v_late_fee,
                    in_fitrx_object_state              =>    gFITrxStatus_Processed
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... New FITransaction with their values have been Created for the Late Transaction: '||v_debit_fitransaction_id
                    );

               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                 in_session_id,
                 in_transaction_id,
                 v_billingacccounttrxset_id,
                 gbv_BillAcctTrxSet_CurrTrx,
                 v_debit_fitransaction_id
               );
               --
               -- Create new Credit FITransaction Object
               --
               --
               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                    out_fitransaction_id               =>    v_credit_fitransaction_id,
                    in_fitrx_type                      =>    gFITrxType_Cr_Generate,
                    in_fitrx_ref_billing_account       =>    v_carrier_billing_acc_id,
                    in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    in_policy_id,
                    in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                    in_fitrx_effective_date            =>    v_current_date,
                    in_fitrx_gl_date                   =>    v_current_date,
                    in_fitrx_process_date              =>    v_current_date,
                    --- 2017-04-05 Cheryl osbilling-3891 amount needs to be negative
                    in_fitrx_amount                    =>    v_late_fee * (-1),
                    in_fitrx_object_state              =>    gFITrxStatus_Processed
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... New Credit FITransaction with their values has been Created for the Late Transaction: '||v_credit_fitransaction_id
                    );

               end if;

               /*if v_policy_billing_method     =     gBillingMethod_Agency
               then

                    v_parent_billing_account_id     :=   v_agency_billing_acc_id;

               else

                    v_parent_billing_account_id     :=   v_billing_acc_cust_id;

               end if;*/
			   
			   v_parent_billing_account_id := v_billing_account_unique_list(v_idx);

                  --UTPRODUCT-4479
               pkg_os_object_io.sp_object_bv_set
               (
                 in_session_id,
                 in_transaction_id,
                 v_billingacccounttrxset_id,
                 gbv_BillAcctTrxSet_LateFee,
                 v_late_fee
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Creating Debit FItem...'
                    );

               end if;

               --
               -- Set the Effective Date to Current Date
               --
          --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start

               v_fitem_effective_date     :=     to_char
                                                 (
                                                      pkg_db_functions.fn_get_policy_current_date
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           in_policy_id
                                                       ),
                                                       pkg_os_constant.DragonDateFormatDefault
                                                 );


               v_FItemRefEntityBelongsTo  :=     pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_fitem_debit_id,
                                                      pkg_db_object.gbv_BillAcc_ParentObjectID
                                                 );

               --OSPRODUCT-1632 Start
               begin
 
                    select
                           max(dc.installment)
                    into
                           v_ref_instalment_id
                    from
                           dragon_fichange dc
                    where
                           dc.billingaccounttrxset_id=v_billingacccounttrxset_id
                    -- LXPRODUCT-425       
                    and 
                           dc.billing_account_id = pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_billingacccounttrxset_id) 
                    and
                           dc.installment_no = (select
                                                       max(dc.installment_no)
                                                  from
                                                       dragon_fichange dc
                                                  where
                                                       dc.billingaccounttrxset_id=v_billingacccounttrxset_id
                                                  -- LXPRODUCT-425  
                                                  and
                                                       dc.billing_account_id = pkg_os_object.fn_object_parent_get(in_session_id,in_transaction_id,v_billingacccounttrxset_id) 
                                               );
                    

               exception
                    when others then
                    v_ref_instalment_id:= null;
               end;
               v_fee_due_date           := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_ref_instalment_id,gbv_DateBillingDue);
               v_fee_withdrawal_date    := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_ref_instalment_id,pkg_db_stmt.gbv_install_withdrawal_date); -- UTPRODUCT-4853
               v_due_withdrawal_date    := case when nvl(v_aging_date_criteria,1) = 2 then v_fee_withdrawal_date else v_fee_due_date end;
               --OSPRODUCT-1632 End



          --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FItemRefEntityBelongsTo for the debit fitem will be set to ' || v_FItemRefEntityBelongsTo ||
                         ':Indatllment ID' ||v_ref_instalment_id  || -- OSPRODUCT-1632
                         ':Indatllment Due Date:' || v_fee_due_date ||              -- OSPRODUCT-1632
                         ':Indatllment withdrawal Date:' || v_fee_withdrawal_date   -- UTPRODUCT-4853
                    );
               end if;

               --
               -- Create FItem of type ? ?Debit? under Customer/Agency Billing Account
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                      =>   in_session_id,
                    in_transaction_id                  =>   in_transaction_id,
                    in_parent_object_id                =>   v_parent_billing_account_id,
                    out_fitem_id                       =>   v_fitem_debit_id,
                    in_fitem_debit_credit              =>   gFItemType_Debit,
                    in_fitem_category                  =>   v_FItem_Cat_Fee, --OSPRODUCT-3380
                    in_fitem_subcategory               =>   r_get_latefee.fitem_sub_category_id, --gFItem_SubCat_LateFee --OSPRODUCT-3380
                    in_fitem_effective_date            =>   v_fitem_effective_date,
                    in_fitem_billing_status            =>   gFItemBillStatus_Active,
                    in_fitem_processing_status         =>   pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefInstallment             =>   v_ref_instalment_id,  -- OSPRODUCT-1632
                    in_FItemRefPolicy                  =>   in_policy_id,
                    in_FItemRefPolicyTxn               =>   in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo         =>   v_FItemRefEntityBelongsTo,
                    in_FItemRefAssWithFItrx            =>   v_debit_fitransaction_id,
                    in_Fitem_LateFeeDueDate            =>   v_due_withdrawal_date,  -- -- UTPRODUCT-4853  v_fee_due_date -- v_fitem_effective_date -- OSPRODUCT-1632
                    in_Fitem_element_business_relation =>   v_fitem_relationship_id
               );

               --
               -- Set the Local Actual Due Date for debit Fitem -- OSBILLING-4318
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_debit_id,
                    pkg_db_object.gbv_FItem_LocalActualDueDate,
                    v_current_date
               );

               --OSPRODUCT-1632 Start
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_debit_id,
                    gbv_LateFeeDueDate,
                    v_due_withdrawal_date   -- UTPRODUCT-4853 -- v_fee_due_date
               );
               --OSPRODUCT-1632 End

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Created and Set values of Debit FItem Object ID: '||v_fitem_debit_id
                    );

               end if;

               if v_parent_billing_account_id is not null
               then
                    r_billing_account_list(r_billing_account_list.count     +     1)     :=     v_parent_billing_account_id;
               end if;


               v_FItemRefEntityBelongsTo  :=     pkg_os_object.fn_object_parent_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_carrier_billing_acc_id
                                                 );

               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FItemRefEntityBelongsTo for the credit fitem will be set to ' || v_FItemRefEntityBelongsTo
                    );
               end if;

               --
               -- Create FItem of type ? ?Credit? under Carrier Billing Account
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                      =>   in_session_id,
                    in_transaction_id                  =>   in_transaction_id,
                    in_parent_object_id                =>   v_carrier_billing_acc_id,
                    out_fitem_id                       =>   v_fitem_credit_id,
                    in_fitem_debit_credit              =>   gFItemType_Credit,
                    in_fitem_category                  =>   v_FItem_Cat_Fee, --gFItem_Cat_Fee, --OSPRODUCT-3380
                    in_fitem_subcategory               =>   r_get_latefee.fitem_sub_category_id,--gFItem_SubCat_LateFee, --OSPRODUCT-3380
                    in_fitem_effective_date            =>   v_fitem_effective_date,
                    in_fitem_billing_status            =>   gFItemBillStatus_Active,
                    in_fitem_processing_status         =>   pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefInstallment             =>   v_ref_instalment_id,  -- OSPRODUCT-1632
                    in_FItemRefPolicy                  =>   in_policy_id,
                    in_FItemRefPolicyTxn               =>   in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo         =>   v_FItemRefEntityBelongsTo,
                    in_FItemRefAssWithFItrx            =>   v_credit_fitransaction_id,
                    in_Fitem_LateFeeDueDate            =>   v_due_withdrawal_date  -- UTPRODUCT-4853 v_fee_due_date -- v_fitem_effective_date -- OSPRODUCT-1632
               );

               --
               -- Set the Local Actual Due Date for credit Fitem -- OSBILLING-4318
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_credit_id,
                    pkg_db_object.gbv_FItem_LocalActualDueDate,
                    v_current_date
               );

               --OSPRODUCT-1632 Start
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_credit_id,
                    gbv_LateFeeDueDate,
                    v_due_withdrawal_date -- UTPRODUCT-4853 v_fee_due_date
               );
               --OSPRODUCT-1632 End

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Created and Set values of Credit FItem Object ID: '||v_fitem_credit_id
                    );

               end if;

               if v_carrier_billing_acc_id is not null
               then

                    r_billing_account_list(r_billing_account_list.count     +     1)     :=     v_carrier_billing_acc_id;

               end if;



               v_fichange_process_date     :=     to_char
                                                  (
                                                       pkg_db_functions.fn_get_policy_current_date
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_policy_id
                                                       ),
                                                       pkg_os_constant.DragonDateFormatDefault
                                                  );

               v_fichange_action           :=     gFIChange_Create;

               v_debit_fichange_amount       :=        v_target_fitem_balance_amt;--r_target.balance;
               v_credit_fichange_amount      :=        v_target_fitem_balance_amt*(-1);--r_target.balance*(-1);


               v_sum_include                 :=       gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log          --@@@PM - Merge this log stmt with above
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date||
                         ' Debit FIChange amount: '||v_debit_fichange_amount||
                         ' And Credit FIChange amount: '||v_credit_fichange_amount||
                         ' FIChange Sum Include '||v_sum_include
                    );

               end if;

           v_fichangerefbelongsto_id       :=   pkg_os_object.fn_object_parent_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id ,
                                                       pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_fitem_debit_id,pkg_db_object.gbv_BillAcc_ParentObjectID)
                                                   );--OSBilling-5405
               --
               -- Call the FIChange Debit creation procedure
               --

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values'
                    );

               end if;

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                     => in_session_id,
                    in_transaction_id                => in_transaction_id,
                    in_parent_fitransaction_id       => v_debit_fitransaction_id,
                    out_fichange_id                  => v_debit_fichange_id,
                    in_fichange_action               => v_fichange_action,
                    in_fichange_action_delta         => v_debit_fichange_amount,
                    in_fichange_ref_fitem            => v_fitem_debit_id,
                    in_fichange_sum_include          => v_sum_include,
                    in_fichange_process_date         => v_fichange_process_date,
                    in_fichange_ref_pol              => in_policy_id,
                    in_fichange_ref_pol_trx          => in_policy_transaction_id,
                    in_fichange_belongs_to           => v_fichangerefbelongsto_id
               );













               --
               -- Update the Fitem Aging Status to Future Due
               --

               if pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,in_policy_id) > to_date(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem_debit_id,30792746),pkg_os_constant.DragonDateFormatDefault) --OSPRODUCT-11496
               then
                   pkg_os_object_io.sp_object_bv_set
                   (
                        in_session_id,
                        in_transaction_id,
                        v_fitem_debit_id,
                        gbv_FItem_Aging_Status,
                        gAgingStatus_Past    -- OSPRODUCT-1632
                   );
               else
                   pkg_os_object_io.sp_object_bv_set
                   (
                        in_session_id,
                        in_transaction_id,
                        v_fitem_debit_id,
                        gbv_FItem_Aging_Status,
                        PKG_DB_NIGHTLY_PROCESS.gAgingStatus_Current
                   );
               end if;



               --OSPRODUCT-1632 Start;
               -- Set the Fitem status as billed = true
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_debit_id,
                    gbv_FItem_Billed_TF,
                    pkg_os_constant.gBoolean_True
               );
               --OSPRODUCT-1632 End;

               --
               -- Update the Debit FIChange Datamart
               --

               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_debit_fichange_id, v_datamart_tf);

               --
               -- Update the Debit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_fitem_debit_id,v_datamart_tf);

               --
               -- Call the FIChange Credit creation procedure
               --

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values'
                    );

               end if;

                 v_fichangerefbelongsto_id       :=      pkg_os_object.fn_object_parent_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id ,
                                                       pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_fitem_credit_id,pkg_db_object.gbv_BillAcc_ParentObjectID)
                                                   );--OSBilling-5405



               pkg_db_object.sp_fichange_create
               (
                    in_session_id                    => in_session_id,
                    in_transaction_id                => in_transaction_id,
                    in_parent_fitransaction_id       => v_credit_fitransaction_id,
                    out_fichange_id                  => v_credit_fichange_id,
                    in_fichange_action               => v_fichange_action,
                    in_fichange_action_delta         => v_credit_fichange_amount,
                    in_fichange_ref_fitem            => v_fitem_credit_id,
                    in_fichange_sum_include          => v_sum_include,
                    in_fichange_process_date         => v_fichange_process_date,
                    in_fichange_ref_pol              => in_policy_id,
                    in_fichange_ref_pol_trx          => in_policy_transaction_id,
                    in_fichange_belongs_to           => v_fichangerefbelongsto_id
               );

               --
               -- Update the Credit FIChange Datamart
               --

               pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_credit_fichange_id,v_datamart_tf);

               --
               -- Update the Credit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_fitem_credit_id,v_datamart_tf);

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updated the datamarts of Debit Fichange,Debit Fitem,Credit FiChange and Credit Fitem'
                    );

				   end if;

				   --
				   -- Update the FITransaction Datamart
				   --

				   pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_debit_fitransaction_id,v_datamart_tf);

				   --
				   -- Update the Credit FITransaction Datamart
				   --

				   pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_credit_fitransaction_id,v_datamart_tf);
               
					-- LXPRODUCT-425
                    -- Update the Credit Installment Datamart
                    --

                    pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_ref_instalment_id,v_datamart_tf);
                    
                    v_idx := v_billing_account_unique_list.next(v_idx);
                    
               end loop;

          end if;


          /* OSBILLING-3525
          for r_due_item in c_due_fitem
          loop

               if v_debit_trx_id is null
               then

                    --
                    -- Create new Debit FITransaction Object
                    --
                    pkg_db_object.sp_fitransaction_create
                    (
                         in_session_id                      =>    in_session_id,
                         in_transaction_id                  =>    in_transaction_id,
                         in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                         out_fitransaction_id               =>    v_debit_trx_id,
                         in_fitrx_type                      =>    gFITrxType_Dr_Generate,
                         in_fitrx_ref_billing_account       =>    v_billing_acc_cust_id,
                         in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                         in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                         in_fitrx_ref_actionpolicy          =>    in_policy_id,
                         in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                         in_fitrx_effective_date            =>    v_current_date,
                         in_fitrx_gl_date                   =>    v_current_date,
                         in_fitrx_process_date              =>    v_current_date,
                         in_fitrx_object_state              =>    gFITrxStatus_Processed
                    );

               end if;

               v_fichange_process_date     :=     to_char
                                                  (
                                                       pkg_db_functions.fn_get_policy_current_date
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_policy_id
                                                       ),
                                                       pkg_os_constant.DragonDateFormatDefault
                                                  );

               v_fichange_action        :=   401; -- Info

               v_info_fichange_amount   :=   0;


               v_sum_include            :=   2; -- No

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log          --@@@PM - Merge this log stmt with above
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date||
                         ' Debit FIChange amount: '||v_debit_fichange_amount||
                         ' And Credit FIChange amount: '||v_credit_fichange_amount||
                         ' FIChange Sum Include '||v_sum_include
                    );

               end if;

               v_fichangerefbelongsto_id       :=      pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            r_due_item.fitem_id,
                                                            pkg_db_object.gbv_BillAcc_ParentObjectID
                                                       );

               --
               -- Call the FIChange creation procedure
               --
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values'
                    );

               end if;

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                    => in_session_id,
                    in_transaction_id                => in_transaction_id,
                    in_parent_fitransaction_id       => v_debit_trx_id,
                    out_fichange_id                  => v_info_fichange_id,
                    in_fichange_action               => v_fichange_action,
                    in_fichange_action_delta         => v_info_fichange_amount,
                    in_fichange_ref_fitem            => r_due_item.fitem_id,
                    in_fichange_sum_include          => v_sum_include,
                    in_fichange_process_date         => v_fichange_process_date,
                    in_fichange_ref_pol              => in_policy_id,
                    in_fichange_ref_pol_trx          => in_policy_transaction_id,
                    in_fichange_belongs_to           => v_fichangerefbelongsto_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_info_fichange_id,
                    32403946,
                    r_due_item.balance_amt
               );

               --
               -- Update the Info FIChange Datamart
               --
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_info_fichange_id, v_datamart_tf);

               v_target_fitem_balance_amt := nvl(v_target_fitem_balance_amt,0) + nvl(r_due_item.balance_amt,0);

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log          --@@@PM - Merge this log stmt with above
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Fitem Balance Amount : '||r_due_item.balance_amt||
                         ' And total target fitem balance amount : '||v_target_fitem_balance_amt
                    );

               end if;

          end loop;
          */ --OSBILLING-3525
          --OSbilling-4311
           v_pmt_batch_amt :=    pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_billingacccounttrxset_id,
                                      gbv_FITrxSetTotalAmount
                                 );

            v_pmt_batch_amt_with_fee := v_pmt_batch_amt + v_target_fitem_balance_amt;

            pkg_os_object_io.sp_object_bv_set
            (
                 in_session_id,
                 in_transaction_id,
                 v_billingacccounttrxset_id,
                 gbv_FITrxSetTotalAmount,
                 v_pmt_batch_amt_with_fee
            );
          /*pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billingacccounttrxset_id,
               gbv_FITrxSetTotalAmount,
               v_target_fitem_balance_amt
          );*/
          --OSbilling-4311
     end loop;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_debit_trx_id,
          29744046,
          in_policy_transaction_id
     );

     v_current_fitransaction_id    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billingacccounttrxset_id,
                                             gbv_BillAcctTrxSet_CurrTrx
                                        );

     if v_current_fitransaction_id is null
     then

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billingacccounttrxset_id,
               gbv_BillAcctTrxSet_CurrTrx,
               v_debit_fitransaction_id--OSbilling-4311
          );

     end if;

        --
    --- GCNA-882  Set mail flag
    --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );



      v_total_balance := pkg_os_object_io.fn_object_bv_get
                          (
                               in_session_id,
                               in_transaction_id,
                               pkg_os_object.fn_object_parent_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_billingacccounttrxset_id
                               ),
                               pkg_db_object.gbv_BillAcc_TotalBalance
                          );

      pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billingacccounttrxset_id,
               pkg_db_object.gbv_FITrxSet_BATotalBalance,
               v_total_balance--OSbilling-4311
          );


     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_debit_trx_id,v_datamart_tf);

     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_billingacccounttrxset_id,v_datamart_tf);


      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;

     --
     -- Invoke code to create GL Entries --OSPRODUCT-3425
     --
     pkg_db_gl_transaction.sp_search_gl_entries
     (
          in_session_id ,
          in_transaction_id ,
          v_billingacccounttrxset_id
     );

     io_action_outcome_id     :=     pkg_os_constant.gOutcome_OK;

end sp_late_fee;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_initialize_late_instr_cache
--
--   %USAGE
--        Initialize the late profile instruction cache with data from the db_late_profile_instr table based
--        on the late profile id passed in.  If no late profile id is passed in, the
--        cache will be populated with all possible profiles.
--
--   %ALGORITHM
--        select from the action table into g_action_cache.          --@@@PM - fix this sentence
--
--   %PARAM    in_late_profile_id   (defaulted to null) specifies the late profile data loaded into the cache.
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_initialize_late_instr_cache
(
     in_late_profile_id       in   db_late_profile.db_late_profile_id%type default null
)
as

     cursor c_late_instr
     is
          select
               *
          from
               db_late_profile_instr
          where
               (in_late_profile_id is null or db_late_profile_id  =    in_late_profile_id)
          order by
               sequence asc
          ;

begin

     for r_late_instr in c_late_instr loop

          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).db_late_profile_instr_id         := r_late_instr.db_late_profile_instr_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).db_late_profile_id               := r_late_instr.db_late_profile_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).fitem_category_set_id            := r_late_instr.fitem_category_set_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).fitem_sub_category_set_id        := r_late_instr.fitem_sub_category_set_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).sequence                         := r_late_instr.sequence;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).trigger_condition_id             := r_late_instr.trigger_condition_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).current_billing_status_set_id    := r_late_instr.current_billing_status_set_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).new_billing_status_id            := r_late_instr.new_billing_status_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).action_id                        := r_late_instr.action_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).fitem_type_set_id                := r_late_instr.fitem_type_set_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).eligibility_condition_id         := r_late_instr.eligibility_condition_id;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).active                           := r_late_instr.active;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).process_if_suspended             := r_late_instr.process_if_suspended;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).transaction_process_tf           := r_late_instr.transaction_process_tf;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).transaction_process_action       := r_late_instr.transaction_process_action;
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).db_suspend_resume                := r_late_instr.db_suspend_resume;--LIOPRODUCT-55
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).db_suspend_resume_set_id         := r_late_instr.db_suspend_resume_set_id;--LIOPRODUCT-55
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).create_trx_per_payer_tf          := r_late_instr.create_trx_per_payer_tf;       -- UTPRODUCT-5009
          g_outer_profile_cache(r_late_instr.db_late_profile_id).inner_instr_cache(r_late_instr.db_late_profile_instr_id).payer_eligibility_rule           := r_late_instr.payer_eligibility_rule;  -- UTPRODUCT-5009

     end loop;

end  sp_initialize_late_instr_cache;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_late_instr_row
--
--   %USAGE
--        Given an Late Profile ID return the metadata associated with that Late Profile. This call precludes the need to do continually
--        read from the metadata when in production.
--
--   %ALGORITHM
--        Not Specified.
--
--   %PARAM    in_late_profile_id   defines the late profile of the metadata to be returned.
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_late_instr_row
(
     in_session_id                 in   object.object_id%type,
     in_transaction_id             in   object.object_id%type,
     in_late_profile_id            in   db_late_profile.db_late_profile_id%type,
     in_late_profile_instr_id      in   db_late_profile_instr.db_late_profile_instr_id%type
)
return db_late_profile_instr%rowtype is

     v_procedure_name         constant system_log.program_name%type        := pkg_name||'fn_late_instr_row';
     v_late_instr_details     db_late_profile_instr%rowtype;
     v_session_control        pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(0, 0) ;     --@@@PM - Use in_session_id/in_transaction_id

begin

     --
     --   If the late profile passed in is null then log error and RAISE exception.
     --

     if in_late_profile_instr_id is null
     then

          pkg_os_logging.sp_log_error( in_session_id, in_transaction_id, v_procedure_name, 'Unable to find metadata associated with NULL Late Profile Instruction Id.' );
          raise no_data_found;

     end if;

     if v_session_control.gCaching_On
          and g_outer_profile_cache.exists(in_late_profile_id)
     then

          v_late_instr_details := g_outer_profile_cache( in_late_profile_id ).inner_instr_cache(in_late_profile_instr_id);

     else

          sp_initialize_late_instr_cache( in_late_profile_id );

          v_late_instr_details := g_outer_profile_cache( in_late_profile_id ).inner_instr_cache(in_late_profile_instr_id);

     end if;

     --
     --   Raise a fatal exception if unable to find metadata associated with late instruction ...
     --

     if not g_outer_profile_cache.exists( in_late_profile_id )
     then
          --@@PM - Why is this a fatal exception....if the late profile is not in cache, load it from MD table.
          -- It should be fatal exception, only if the late profile id is not in the MD table
          pkg_os_logging.sp_log_error( in_session_id, in_transaction_id, v_procedure_name, 'Unable to find metadata associated with Late Profile Instruction Id:'||in_late_profile_instr_id );
          raise no_data_found;

     end if;

     return v_late_instr_details;

end  fn_late_instr_row;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_validate_trigger_conditions
--
--
--   %USAGE
--       This function fire trigger conditions based on rule expression.
--
--
--   %ALGORITHM
--      This function fire trigger conditions based on rule expression and return output as T or F.
--
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_fitem_id                   Fitem ID
--   %PARAM    in_rule_expression_id         Rule ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_validate_trigger_conditions
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_fitem_id                   in             object.object_id%type,
     in_rule_expression_id         in             object.object_id%type          --@@@PM - Is this really a rule_id from the RULE table ? If not, please rename this parameter
)
return char
as

     v_session_control             pkg_os_session.r_dragon_session_control      :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant system_log.program_name%type        :=   pkg_name||'fn_validate_trigger_conditions';
     v_return_value                char                                         :=   'F';

     v_FItem_AssociatedPolTrans    object.object_id%type;
     v_policy_term_id              object.object_id%type;
     v_fitem_ref_partof            object_bv_value.business_variable_value%type;
     v_payplan_due_date            object_bv_value.business_variable_value%type;
     v_Ref_Ass_Policy              object_bv_value.business_variable_value%type;
     v_Ref_CurrPolPendCancellation object_bv_value.business_variable_value%type;
     v_target_cancellation_date    object_bv_value.business_variable_value%type;
     v_policy_term_pas_status      object_bv_value.business_variable_value%type;
     v_policy_date_cancellation    object_bv_value.business_variable_value%type;
     v_policy_current_date         date;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '|||||||||||| Entering in fn_validate_trigger_conditions Fitem ID: '||in_fitem_id||
              ' Rule ID: '||in_rule_expression_id
          );

     end if;

     --
     -- Get the Fitem Refernce Part of (PaymentPlanScheduledPaymentInstallment)
     --

     v_fitem_ref_partof     :=     pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitem_id,
                                        gbv_Fitem_RefPartOf
                                   );
     --
     -- Get the Fitem Due Date
     --

     v_payplan_due_date     :=     pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fitem_ref_partof,
                                        gbv_ScheduledPayInst_DueDate
                                   );

     --
     -- Get the Fitem Reference Associated policy
     --

     v_Ref_Ass_Policy       :=     pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_fitem_id,
                                        pkg_db_object.gbv_FItem_RefPolicy
                                   );

     v_policy_current_date    :=   pkg_db_functions.fn_get_policy_current_date
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_Ref_Ass_Policy
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.................. Fitem Reference Part Of (PaymentPlanScheduledPaymentInstallment) : '||v_fitem_ref_partof||
              ' Fitem Due Date: '||v_payplan_due_date||
              ' Fitem Reference Associated Policy: '||v_Ref_Ass_Policy
          );

     end if;

     --
     -- Get the Reference CurrentPolicyPendingCancellation
     --

     v_Ref_CurrPolPendCancellation     :=    pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_Ref_Ass_Policy,
                                                  gbv_Ref_CurrPolPendCancel
                                             );

     --
     -- Get the PolicyPendingCancellation Target Cancellation Date
     --

     v_target_cancellation_date       :=   pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_Ref_CurrPolPendCancellation,
                                                gbv_PolicyPenCan_TarCanceldate
                                           );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.................. Reference CurrentPolicyPendingCancellation : '||v_Ref_CurrPolPendCancellation||
              ' PolicyPendingCancellation Target Cancellation Date : '||v_target_cancellation_date
          );

     end if;

     --
     -- Get the Policy Cancellation Date
     --

     v_policy_date_cancellation     :=    pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_Ref_Ass_Policy,
                                               gbv_PolicyDateCancellation
                                          );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.................. Policy Cancellation Date : '||v_policy_date_cancellation
          );

     end if;

     --
     -- Get the policy transaction id
     --

     v_FItem_AssociatedPolTrans    :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id       => in_session_id,
                                             in_transaction_id   => in_transaction_id,
                                             in_object_id        => in_fitem_id,
                                             in_bv_id            => pkg_db_object.gbv_FItem_RefPolicyTrx
                                        );

     --
     -- Get the policy term id
     --

     v_policy_term_id              :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id       => in_session_id,
                                             in_transaction_id   => in_transaction_id,
                                             in_object_id        => v_Fitem_AssociatedPolTrans,
                                             in_bv_id            => gbv_PolicyTrans_RefBelongsTo
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.................. FItem Associated Policy Transaction ID '||v_FItem_AssociatedPolTrans||
               'Policy Term ID '||v_policy_term_id
          );

     end if;

     --
     -- Get the policy term PAS status
     --

     v_policy_term_pas_status      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id       => in_session_id,
                                             in_transaction_id   => in_transaction_id,
                                             in_object_id        => v_Fitem_AssociatedPolTrans,
                                             in_bv_id            => gbv_PolicyTerm_PASStatus
                                        );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.................. Policy Term PAS Status '||v_policy_term_pas_status
          );

     end if;

     --@@@PM - Please write some description for the following logic
     --@@@PM - Replace "pkg_db_functions.fn_get_policy_current_date" with a local variable
     if in_rule_expression_id = gRule_FItem_OvrDue
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) < v_policy_current_date
     then

          v_return_value := 'T';

     elsif in_rule_expression_id = gRule_FItem_NoOvrDue
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) >= v_policy_current_date
     then

          v_return_value := 'T';

     elsif in_rule_expression_id = gRule_FItem_MinDueLateNotice
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) < (
                                                                                         v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                               (
                                                                                                                             in_session_id, 
                                                                                                                             in_transaction_id,
                                                                                                    v_Ref_Ass_Policy,
                                                                                                    g_proptype_LP_MinOvrDueDays
                                                                                                )
                                                                                     )
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) > (
                                                                                         v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                               (
                                                                                                                             in_session_id, 
                                                                                                                             in_transaction_id,
                                                                                                    v_Ref_Ass_Policy,
                                                                                                    g_proptype_LP_NOICOvrDueDays
                                                                                               )
                                                                                     )
     then

          v_return_value := 'T';

     elsif in_rule_expression_id = gRule_FItem_MinDueNOIC
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) < (
                                                                                         v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                               (
                                                                                                                             in_session_id, 
                                                                                                                             in_transaction_id,
                                                                                                    v_Ref_Ass_Policy,
                                                                                                    g_proptype_LP_NOICOvrDueDays
                                                                                                )
                                                                                    )
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) > (
                                                                                         v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                               (
                                                                                                                             in_session_id, 
                                                                                                                             in_transaction_id,
                                                                                                    v_Ref_Ass_Policy,
                                                                                                    g_proptype_LP_NOCOvrDueDays
                                                                                                )
                                                                                     )

     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id          =     gRule_FItem_PASCancel
          and v_policy_term_pas_status    =     gPolTrm_PASStat_Cancel
     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id          =     gRule_FItem_DueAftrCancelDT
          and to_date(v_target_cancellation_date,pkg_os_constant.DragonDateFormatDefault) < v_policy_current_date
     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id             =     gRule_FItem_NoDueCancelReinst
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) >= v_policy_current_date
          and to_date(v_policy_date_cancellation,pkg_os_constant.DragonDateFormatDefault) >= (
                                                                                                  v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                                        (
                                                                                                                                        in_session_id, 
                                                                                                                                        in_transaction_id,
                                                                                                             v_Ref_Ass_Policy,
                                                                                                             g_proptype_LP_ReinstTolDueDays
                                                                                                         )
                                                                                             )

     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id         =     gRule_FItem_PASReinst
          and v_policy_term_pas_status   =     gPolTrm_PASStat_Reinstat
     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id         =     gRule_FItem_MinDueWriteOff
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) < (
                                                                                         v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                               (
                                                                                                                             in_session_id, 
                                                                                                                             in_transaction_id,
                                                                                                    v_Ref_Ass_Policy,
                                                                                                    g_proptype_LP_ColWrtOffDueDays
                                                                                                )
                                                                                    )
     then

          v_return_value   :=   'T';

     elsif in_rule_expression_id        =      gRule_FItem_MinDueCollection
          and to_date(v_payplan_due_date,pkg_os_constant.DragonDateFormatDefault) < (
                                                                                        v_policy_current_date  -  pkg_os_product.fn_product_property_get
                                                                                              (
                                                                                                                           in_session_id, 
                                                                                                                           in_transaction_id,
                                                                                                   v_Ref_Ass_Policy,
                                                                                                   g_proptype_LP_SentToColDueDays
                                                                                               )
                                                                                     )

     then

          v_return_value  :=    'T';

     else

          v_return_value  :=    'F';

     end if;

     return v_return_value;

exception
     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.................. Error encountered while executing the fn_validate_trigger_conditions for fitem ID ' || in_fitem_id ||
               ' Error: ' ||sqlerrm
          );

          return v_return_value;

end fn_validate_trigger_conditions;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_account_statement_create
--
--
--   %USAGE
--        This procedure is a wrapper for sp_statement_rollup_create() below, which creates a set of 'reconciliation' objects, that represent a
--        denormalized view of receivables.
--
--
--   %ALGORITHM
--   Given a Session ID, Transaction Id and BillingAccount ID
--   Get previous statement ID, if not null set the start date to previous statements end date
--        If previous statement ID is null get the start date from
--        minimum policy effective date of a policy related to this BillingAccount
--   If statement frequency is not selected, default to Daily
--   Based on Statement Frequency calculate the Billing End Date
--   Call procedure sp_statement_rollup_create based on Rollup Level captured on GUI
--   Set the Statement BVs
--   Update the Statement (BillingAccountTransactionSet) Datamart
--
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_transaction_id      Policy Transaction ID
--   %PARAM    in_policy_id                  Policy ID
--   %PARAM    io_action_outcome_id          Outcome ID
--   %PARAM    in_current_date_time          Current Date Time
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_account_statement_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type,     --@@@PM - remove nocopy
     in_current_date_time               in             date default null
)
as

     v_session_control                  pkg_os_session.r_dragon_session_control     := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name                   constant system_log.program_name%type       := pkg_name||'sp_account_statement_create';

     v_new_statement_id                 object.object_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;

     v_token_table                      pkg_os_token.t_string_table;

     v_statement_rollup_level           object_bv_value.business_variable_value%type;
     v_reconciliation_type_id           object_bv_value.business_variable_value%type;
     --v_billing_start_date               object_bv_value.business_variable_value%type;
     --v_billing_end_date                 object_bv_value.business_variable_value%type;
     v_today_date                       object_bv_value.business_variable_value%type;
     --v_policy_effective_date            object_bv_value.business_variable_value%type;
     v_policy_billing_method_id         object_bv_value.business_variable_value%type;
     --v_bill_to                          object_bv_value.business_variable_value%type := null;

     v_Policy_Stop_Late_Notice          object_bv_value.business_variable_value%type;

     v_token_index                      number;
     v_policy_rollup_tf                 char(1) := 'F';
     v_policy_trx_rollup_tf             char(1) := 'F';
     v_effective_date_rollup_tf         char(1) := 'F';
     v_due_date_rollup_tf               char(1) := 'F';
     v_statement_total_due              float   :=  0;
     v_datamart_tf                      char(1) := 'T';
     v_policy_term_id          object_bv_value.business_variable_value%type;

     v_entered_by                       varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');

begin

     if v_session_control.gLogging_Full
     then

        pkg_os_logging.sp_log
        (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '|||||| Entering Late Notice Generation for Policy ID: '||in_policy_id
        );

     end if;

     /*v_policy_effective_date        :=   pkg_os_object_io.fn_object_bv_get
                                         (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id,
                                             pkg_os_constant_bv.gbv_PolicyEffectiveDate
                                         );*/

     --@@@PM - Please see if the Billing Method and the associated code related to it can be written as a private procedure

     --
     --  SK: Code added to stop the late notices process in case policy is marked for Billing suspension and has got late notice set for stopped.
     --
     v_policy_term_id := pkg_db_functions.fn_get_policy_current_term
     (
          in_session_id,
          in_transaction_id,
          in_policy_id
     );
     v_Policy_Stop_Late_Notice:= pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          v_policy_term_id,
          32238246
     );

     if nvl(v_Policy_Stop_Late_Notice,0) != 1
     then

          v_policy_billing_method_id     :=   pkg_os_object_io.fn_object_bv_get
                                              (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_policy_id,
                                                  gbv_PolicyBillingMethod
                                              );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Policy Billing Method ID: '||v_policy_billing_method_id||
                         ' - '||pkg_os_lookup.fn_lookup_list_text_get(PolicyBillingMethodList, v_policy_billing_method_id)
                    );

               end if;

               if v_policy_billing_method_id     =     gBillingMethod_Direct
               then

                    /*v_bill_to                :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id,
                                                       gbv_PolicyBillTo
                                                  );*/

                    v_ultimate_customer_id   :=   pkg_os_object.fn_object_parent_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Ultimate Customer ID: '||v_ultimate_customer_id
                         );

                    end if;

                    --
                    -- Get the Primary Customer Entity
                    --

                    v_primary_entity_id     :=   pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_ultimate_customer_id,
                                                      pkg_base_customer.gbv_CustRefPrimaryEntity
                                                 );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Primary Customer Entity ID: '||v_primary_entity_id
                         );

                    end if;

                    --
                    -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
                    --

                    v_billing_account_id     :=   pkg_os_object_search.fn_object_11_child_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_primary_entity_id,
                                                       gObjType_BillingAccount
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Customer Billing Account ID: '||v_billing_account_id
                         );

                    end if;

               end if; -- if v_policy_billing_method_id = gBillingMethod_Direct

               if v_policy_billing_method_id     =     gBillingMethod_Agency
               then

                    --
                    -- Get the Producing Agency
                    --

                    v_producing_agency_id    :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id,
                                                       pkg_os_constant_bv.gbv_GenObjProducingAgency
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Producing Agency ID: '||v_producing_agency_id
                         );

                    end if;

                    --
                    -- Get the 1-1 child of the Partner of type Billing Account
                    --

                    v_billing_account_id     :=   pkg_os_object_search.fn_object_11_child_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_producing_agency_id,
                                                       gObjType_BillingAccount
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Producing Agency Billing Account ID: '||v_billing_account_id
                         );

                    end if;

               end if; --  if v_policy_billing_method_id = gBillingMethod_Agency

               v_writing_company_id       :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id,
                                                       gbv_GenObj_RefWritingComp
                                                  );

               v_carrier_billing_acc_id   :=      pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_writing_company_id,
                                                       gbv_GenObj_ChildBillAcc
                                                  );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Carrier Billing Account ID: '||v_carrier_billing_acc_id
                    );

               end if;

               --
               --   Get the Statement Rollup Level
               --

               v_statement_rollup_level   :=     pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_carrier_billing_acc_id,
                                                      gbv_BillingAcc_RollupLevel
                                                 );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Statement Rollup Level : '||v_statement_rollup_level
                    );

               end if;

               --
               --   As user can select multiple rollup levels, we need to tokenize the string
               --

               pkg_os_token.sp_tokenize_string
               (
                    v_statement_rollup_level,
                    ',',
                    v_token_table
               );

               v_token_index     :=    v_token_table.first;

               while v_token_index is not null loop

                    if v_token_table(v_token_index)     =     gStatementRollup_Policy
                    then

                         v_policy_rollup_tf   :=   'T';

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Statement Rollup on Policy : '||v_policy_rollup_tf
                              );

                         end if;

                    elsif v_token_table(v_token_index)   =     gStatementRollup_PolTrx
                    then

                         v_policy_trx_rollup_tf   :=   'T';

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Statement Rollup on PolicyTransaction : '||v_policy_trx_rollup_tf
                              );

                         end if;

                    elsif v_token_table(v_token_index)     =     gStatementRollup_EffDate
                    then

                         v_effective_date_rollup_tf   :=   'T';

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Statement Rollup on Policy Effective Date : '||v_effective_date_rollup_tf
                              );

                         end if;

                    elsif v_token_table(v_token_index)     =     gStatementRollup_DueDate
                    then

                         v_due_date_rollup_tf          :=   'T';

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Statement Rollup on Items Due Date : '||v_due_date_rollup_tf
                              );

                         end if;

                    end if; -- end of v_token_table(v_token_index)     =     gStatementRollup_Policy

                    v_token_index := v_token_table.next(v_token_index);

               end loop; -- end loop of v_token_index

               --
               -- Setting rollup at policy transaction level temporarily
               --

               v_policy_rollup_tf            :=   'F';
               v_policy_trx_rollup_tf        :=   'T';
               v_effective_date_rollup_tf    :=   'F';
               v_due_date_rollup_tf          :=   'F';

               select
                    sum(balance)
               into
                    v_statement_total_due
               from
                    dragon_fitem
               where
                    billing_account_id  =   v_billing_account_id
               and

                    fitem_type_id       =   gFItemType_Debit
               and
                    fitem_billed_tf is null
               ;

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjType_BillingAccountTrxSet,
                    v_billing_account_id,
                    v_new_statement_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Late Notice Object ID:'||in_policy_transaction_id          --@@@PM - Should this be v_new_statement_id ?
                    );

               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_FITrxSet_SetType,
                    gSetType_LateNotice
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_FITrxSet_EntryMethod,
                    gEntryMethod_System
               );

      pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_FITrxSetEnteredby,
        v_entered_by
               );

               v_reconciliation_type_id := gReconciliationLateNotice;

               sp_statement_rollup_create
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    v_billing_account_id,
                    v_new_statement_id,
                    --v_billing_start_date,
                    --v_billing_end_date,
                    v_policy_rollup_tf,
                    v_effective_date_rollup_tf,
                    v_policy_trx_rollup_tf,
                    v_due_date_rollup_tf,
                    v_reconciliation_type_id
               );

               v_today_date   :=   to_char
                                   (
                                        pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        ),
                                        pkg_os_constant.DragonDateFormatDefault
                                   );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_FITrxSet_CreationDate,
                    v_today_date
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    pkg_os_constant_bv.gbv_GenObjObjectState,
                    gBillingAccTrxSetProcesed
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_transaction_id,
                    gbv_FITrxRefRelatedFITrxSet,
                    v_new_statement_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_transaction_id,
                    gbv_PolTrxRefBillingAccTrxSet,
                    v_new_statement_id
               );

      --GCNA-1397 use policy date
               --v_external_batch_id :=        'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_new_statement_id), pkg_os_constant.DragonDateFormatDefault );
               --v_processing_date   :=        to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_new_statement_id), pkg_os_constant.DragonDateFormatDefault);
      v_external_batch_id := 'Batch'|| v_today_date;
      v_processing_date   := v_today_date;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_FITrxSetExternalBatchId,
                    v_external_batch_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    gbv_BillAccTrxSet_ProcessDate,
                    v_processing_date
               );
               --
               -- OSBILLING-767 Fetch and set the Accoutning Period for BillingAccounTTrxSet
               --
/* OSBILLING-3884
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_new_statement_id,
                    pkg_db_object.gbv_FITrxSet_AccntingPeriod,
                    pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,v_new_statement_id)
               );
              --
              -- OSBILLING-1816 : persist Billing Account Total Balance
              --

              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   v_new_statement_id,
                   pkg_db_object.gbv_FITrxSet_BATotalBalance,
                   pkg_os_object_io.fn_object_bv_get
                   (
                        in_session_id,
                        in_transaction_id,
                        pkg_os_object.fn_object_parent_get
                        (
                             in_session_id,
                             in_transaction_id,
                             v_new_statement_id
                        ),
                        pkg_db_object.gbv_BillAcc_TotalBalance
                   )
              );

 OSBILLING-3884 */
    --
    -- GCNA-882 Set mail flag at BATRxSe level
    --

          PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                   v_new_statement_id,
                    io_action_outcome_id
                 );

               --
               --   Update the Statement (BillingAccountTransactionSet) Datamart -- policytransaction
               --

               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_policy_transaction_id, v_datamart_tf);
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_new_statement_id, v_datamart_tf);

               io_action_outcome_id := pkg_os_constant.gOutcome_OK;
          else
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                         '|||||| This policy is marked to stop late notices' );

               end if;
               io_action_outcome_id := 22; --- Change the outcome to Billing Suspended
          end if;

end sp_account_statement_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_statement_rollup_create
--
--
--   %USAGE
--        This procedure creates a set of 'reconciliation' objects, that represent a de-normalized view of receivables.
--
--
--   %ALGORITHM
--   Given a Session ID, Transaction Id, BillingAccount ID, FItransactionSet ID, Billing Period
--   Start Date, Billing Period End Date, Rollup Levels and Reconciliation Type
--   Get all the children of type Rollup mapped with the Reconciliation Type
--   For each FItem under the given BillingAccount, which are due on and before Statement As Of
--   Date and of type Debit and with some balance, do the following
--        Evaluate Fitem with the Filter Rule if exists
--        If Filter Rule evaluates to True then
--             Intialize the Recon List Index with Policy Id concatenated with FItem Due Date
--             Initialize the Recon List
--             Based on FItem Sub-category, get the Recon ITem ID from DB_RECON_ITEM
--             Get Recon Item Map row based on FItem Sub-category and Recon Item ID
--             Set the Current Rollup with adding the BV Value of Recon Item Map to the previous value of Current Rollup
--             Add this FItem has having contributed to the rollup
--        else
--             Log Error Message
--   Loop through the v_recon_record_list, create an object for every instance, and populate BVs based on the sub-array.
--        Now, loop through the child_list, and create child objects which will be used
--   if the user wants to partially pay at a lower level.
--
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_id                  Policy ID
--   %PARAM    in_billing_account_id         Billing Account ID
--   %PARAM    in_fi_transaction_set_id      FITransactionSet ID
--   %PARAM    in_billing_period_start_date  Billing Period Start Date
--   %PARAM    in_billing_period_end_date    Billing Period End Date
--   %PARAM    in_policy_rollup_tf           Policy Rollup TF
--   %PARAM    in_policy_eff_date_rollup_tf  Policy Effective Date Rollup TF
--   %PARAM    in_policy_trx_rollup_tf       Policy Transaction Roll TF
--   %PARAM    in_due_date_rollup_tf         Due date Rollup TF
--   %PARAM    in_recon_type                 Reconciliation Rollup Type
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_statement_rollup_create
(
     in_session_id                      in        object.object_id%type,
     in_transaction_id                  in        object.object_id%type,
     in_policy_id                       in        object.object_id%type,
     in_billing_account_id              in        object.object_id%type,
     in_fi_transaction_set_id           in        object.object_id%type,
     --in_billing_period_start_date       in        varchar2,
     --in_billing_period_end_date         in        varchar2,
     in_policy_rollup_tf                in        char,
     in_policy_eff_date_rollup_tf       in        char,
     in_policy_trx_rollup_tf            in        char,
     in_due_date_rollup_tf              in        char,
     in_recon_type                      in        db_reconciliation.db_reconciliation_id%type
)
as

     v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name           constant system_log.program_name%type   := pkg_name||'sp_statement_rollup_create';
     v_aging_date_criteria      char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_policy_id,19446); -- 1: Billing Due Date, 2: Withdrawal Date

     cursor c_recon_item
     is
          select
               item_bv_id
          from
               db_recon_item
          where
               db_recon_id = in_recon_type;

     --
     --   Get all financial items that were due on or before the statement date ...
     --

     cursor c_fitem
     is
          select *
          from
               dragon_fitem
          where
               billing_account_id = in_billing_account_id
          and
               policy_id = in_policy_id
          and
               trunc(decode(v_aging_date_criteria,2,withdrawal_date,due_date)) <=  trunc
                                   (
                                        to_date
                                        (
                                             to_char
                                             (
                                                  pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  ),
                                                  pkg_os_constant.DragonDateFormatDefault
                                             ), pkg_os_constant.DragonDateFormatDefault
                                        )
                                   )
          and
               balance > 0
          and
               debit_credit = 'Debit'
          and
               fitem_billed_tf is null
          ;

     cursor c_recon_item_cat_map
     (
          in_db_reconciliation_id     db_reconciliation.db_reconciliation_id%type,
          in_fitem_subcategory_id     db_fitem_sub_category.db_fitem_sub_category_id%type
     )
     is
          select
               db_recon_item.db_recon_item_id
          from
               db_recon_item, db_recon_item_cat_map
          where
               db_recon_item.db_recon_item_id = db_recon_item_cat_map.db_recon_item_id
          and
               db_recon_item.db_recon_id = in_db_reconciliation_id
          and
               pkg_db_billing.fn_fitem_subcategory_in_set
               (
                    in_fitem_subcategory_id,
                    db_recon_item_cat_map.fitem_subcategory_set_id
               ) = 'T'
          ;

     v_db_reconciliation_row       db_reconciliation%rowtype;
     v_db_recon_item_row           db_recon_item%rowtype;
     v_db_recon_item_map_row       db_recon_item_cat_map%rowtype;

     v_recon_record_list           t_recon_record_list;
     v_recon_contributors_list     t_recon_contributors_list;
     v_recon_contributors          t_recon_contributors;
     v_recon_object_cache          t_recon_object_list;

     v_existing_recon_object_list  pkg_os_object.t_object_list;
     v_token_table                 pkg_os_token.t_string_table;

     v_recon_record_index          varchar2(100);
     v_recon_bv_index              varchar2(12);
     v_recon_contributors_index    varchar2(100);
     v_current_rollup              number;
     v_total_due                   number;
     v_existing_recon_object_index number;
     v_total_changes               number := 0;
     v_datamart_tf                 char(1) := 'T';

     v_recon_object_id             object.object_id%type;
     v_recon_contrib_object_id     object.object_id%type;

     v_policy_id                   object_bv_value.business_variable_value%type;
     v_policy_transaction_id       object_bv_value.business_variable_value%type;
     v_due_date                    object_bv_value.business_variable_value%type;
     v_policy_efective_date        object_bv_value.business_variable_value%type;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Creating Reconciliation Objects for BillingAccountID:'||in_billing_account_id||' ReconciliationTypeID:'|| in_recon_type
          );

     end if;

     --
     --   Get reconciliation type details
     --

     select
          *
     into
          v_db_reconciliation_row
     from
          db_reconciliation
     where
          db_reconciliation_id = in_recon_type;

     --
     --   A little basic reentrant stuff
     --

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Calling pkg_os_object_search.sp_object_children_of_type_get'
          );

     end if;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_fi_transaction_set_id,
          v_db_reconciliation_row.rollup_object_type_id,
          v_existing_recon_object_list
     );

     v_existing_recon_object_index   :=   v_existing_recon_object_list.first;

     while v_existing_recon_object_index is not null
     loop

          v_policy_id              :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_existing_recon_object_list( v_existing_recon_object_index ),
                                             gbv_Recon_RelatedPolicyID
                                        );

          v_policy_transaction_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_existing_recon_object_list( v_existing_recon_object_index ),
                                             gbv_Recon_RelatedPolicyTrxId
                                        );

          v_due_date               :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_existing_recon_object_list( v_existing_recon_object_index ),
                                             gbv_Recon_DueDate
                                        );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Deleting existing ReconObjectID:'||v_existing_recon_object_list( v_existing_recon_object_index )||
                    ' Using Index:'||v_policy_id||'-'||v_policy_transaction_id||'-'||v_due_date
               );
          end if;

          pkg_os_object.sp_object_delete
          (
               in_session_id,
               in_transaction_id,
               in_fi_transaction_set_id,
               v_existing_recon_object_list( v_existing_recon_object_index ),
               v_db_reconciliation_row.rollup_object_type_id,
               null,
               false
          );

          v_existing_recon_object_index   :=   v_existing_recon_object_list.next( v_existing_recon_object_index );

     end loop; -- end of while loop for v_existing_recon_object_index

     --
     --   Time to rock and roll - go through all the applicable fitems, and denormalize them
     --

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Time to rock and roll'          --@@PM - Where is the music ?
          );

     end if;

     for r_fitem in c_fitem loop

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Considering Fitem ID: '||r_fitem.fitem_id
               );

          end if;

          if   v_db_reconciliation_row.fitem_filter_rule is null
               or
               pkg_os_exp.fn_evaluate_expression
               (
                    in_session_id,
                    in_transaction_id,
                    r_fitem.fitem_id,
                    v_db_reconciliation_row.fitem_filter_rule
               ) = 'T'
          then

               select
                    decode(in_policy_rollup_tf,'F', '',r_fitem.policy_id)
                    ||'-'||
                    decode(in_policy_eff_date_rollup_tf,'F', '',to_char(r_fitem.policy_effective_date, pkg_os_constant.DragonDateFormatDefault ))
                    ||'-'||
                    decode(in_policy_trx_rollup_tf,'F', '',r_fitem.policy_transaction_id)
                    ||'-'||
                    decode(in_due_date_rollup_tf,'F', '',to_char(r_fitem.due_date, pkg_os_constant.DragonDateFormatDefault ))
               into
                    v_recon_record_index
               from
                    dual;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Recon Record Index '||v_recon_record_index
                    );

               end if;

               if  v_recon_record_list.exists( v_recon_record_index )     =     false
               then

                    --
                    --   Initialize record to zero
                    --

                    for r_recon_item in c_recon_item loop

                         v_recon_record_list( v_recon_record_index )( r_recon_item.item_bv_id ) := 0;

                    end loop;

               end if; -- end of v_recon_record_list check

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Sub Category ID '||r_fitem.fitem_sub_category_id
                    );

               end if;

               --
               --   Using the Sub-Category find the Reconciation-Item to which we should rollup
               --

               begin

                    for r_recon_item_cat_map in c_recon_item_cat_map( v_db_reconciliation_row.db_reconciliation_id,r_fitem.fitem_sub_category_id)
                    loop

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Found Recon Item ID '||r_recon_item_cat_map.db_recon_item_id
                              );

                         end if;

                         --
                         --   Get Recon Item Row based on  Recon Item ID
                         --

                         select
                              *
                         into
                              v_db_recon_item_row
                         from
                              db_recon_item
                         where
                              db_recon_item_id = r_recon_item_cat_map.db_recon_item_id
                         ;

                         --
                         --   Get Recon Item Map row based on Reconciliation type, Recon Item ID and FItem Sub-category
                         --

                         select
                              *
                         into
                              v_db_recon_item_map_row
                         from
                              db_recon_item_cat_map
                         where
                              db_recon_item_id = r_recon_item_cat_map.db_recon_item_id
                         and
                              pkg_db_billing.fn_fitem_subcategory_in_set(r_fitem.fitem_sub_category_id, fitem_subcategory_set_id) = 'T'
                         ;

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updating Index:'||v_recon_record_index
                              ||' BV-ID:'||v_db_recon_item_row.item_bv_id
                              ||' Adding Value:'||pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       r_fitem.fitem_id,
                                                       v_db_recon_item_map_row.fitem_bv_id
                                                  )
                         );

                         v_current_rollup    :=   nvl( v_recon_record_list( v_recon_record_index )( v_db_recon_item_row.item_bv_id ), 0 );

                         v_recon_record_list( v_recon_record_index )( v_db_recon_item_row.item_bv_id ) :=
                         v_current_rollup + nvl
                                            (
                                                 pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      r_fitem.fitem_id,
                                                      v_db_recon_item_map_row.fitem_bv_id
                                                  ), 0
                                             );

                    end loop; -- end of for loop for r_recon_item_cat_map

                    --
                    --   Add this FItem has having contributed to the rollup
                    --

                    v_recon_contributors_list( v_recon_record_index )( r_fitem.fitem_id ) := r_fitem.fitem_id;

               exception

                    when no_data_found then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Sub Category ID not present in DB_RECON_ITEM_CAT_MAP:'||r_fitem.fitem_sub_category_id
                         );

               end;

          end if; -- end of v_db_reconciliation_row check

     end loop; -- end of for loop for r_fitem

     --
     --   Loop through the v_recon_record_list, create an object for every instance, and populate BVs based on the sub-array.
     --   Now, loop through the child_list, and create child obhjects which will be used if the user wants to partially pay
     --   at a lower level.
     --

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Creating rollup objects ...'
          );

     end if;

     v_recon_record_index := v_recon_record_list.first;

     while v_recon_record_index is not null loop

          if v_recon_object_cache.exists( v_recon_record_index )
          then

               v_recon_object_id   :=   v_recon_object_cache( v_recon_record_index ).object_id;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Reusing Rollup ObjectID:'||v_recon_object_id||' for Index:'||v_recon_record_index
                    );

               end if;

          else

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    v_db_reconciliation_row.rollup_object_type_id,
                    in_fi_transaction_set_id,
                    v_recon_object_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Created Rollup ObjectID:'||v_recon_object_id||' for Index:'||v_recon_record_index
                    );

               end if;

          end if; -- end of v_recon_object_cache check

          v_recon_bv_index := v_recon_record_list( v_recon_record_index ).first;

          while v_recon_bv_index is not null loop

               v_token_table.delete;

               pkg_os_token.sp_tokenize_string
               (
                    v_recon_record_index,
                    '-',
                    v_token_table
               );

               v_policy_id              :=   v_token_table( v_token_table.first );
               v_policy_efective_date   :=   v_token_table( v_token_table.next( v_token_table.first ));
               v_policy_transaction_id  :=   v_token_table( v_token_table.next( v_token_table.next( v_token_table.first ) ));
               v_due_date               :=   v_token_table( v_token_table.next( v_token_table.next( v_token_table.next( v_token_table.first ) )));

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_object_id,
                    v_recon_bv_index,
                    v_recon_record_list( v_recon_record_index )( v_recon_bv_index )
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_object_id,
                    gbv_Recon_RelatedPolicyID,
                    v_policy_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_object_id,
                    gbv_Recon_RelatedPolicyTrxId,
                    v_policy_transaction_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_object_id,
                    gbv_Recon_DueDate,
                    v_due_date
               );


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Setting BVID:'||v_recon_bv_index
                         ||':'||v_recon_record_list( v_recon_record_index )( v_recon_bv_index )
                    );

               end if;

               v_recon_bv_index    :=   v_recon_record_list( v_recon_record_index ).next( v_recon_bv_index );

          end loop; -- end of while loop for v_recon_bv_index

          --
          --   Set the total due attribute
          --

          v_total_due         :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_recon_object_id,
                                        v_db_reconciliation_row.rollup_total_due_bv_id
                                   );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_recon_object_id,
               gbv_Recon_TotalDue,
               v_total_due
          );

          v_total_changes               :=   v_total_changes + v_total_due;


          --
          --   Now create contributor objects
          --

          v_recon_contributors          :=   v_recon_contributors_list( v_recon_record_index );
          v_recon_contributors_index    :=   v_recon_contributors.first;

          while v_recon_contributors_index is not null loop

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjTypeRollupMember,
                    v_recon_object_id,
                    v_recon_contrib_object_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_contrib_object_id,
                    gbv_RollupMember_Contributor,
                    v_recon_contributors_index
               );

               --
               --   Mark the Fitem as Billed and assign the Billed date
               --

               -- Commenting this step as this is now a separate native command
               /*
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_contributors_index,
                    gbv_FItem_Billed_TF, pkg_os_constant.gBoolean_True
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_recon_contributors_index,
                    gbv_FItem_Billed_Date,
                    to_char
                    (
                         pkg_db_functions.fn_get_policy_current_date
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_id
                         ),
                         pkg_os_constant.DragonDateFormatDefault
                    )
               );
               */
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_recon_contributors_index, v_datamart_tf);

               --
               --   Get the next contributor
               --

               v_recon_contributors_index    :=   v_recon_contributors.next( v_recon_contributors_index );

          end loop; -- end of while loop for v_recon_contributors_index

          --
          --   Get the next reconciliation record ...
          --

          v_recon_record_index     :=   v_recon_record_list.next( v_recon_record_index );

     end loop; -- end of while loop for v_recon_record_index

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_fi_transaction_set_id,
          gbv_FITrxSet_TotalChange,
          v_total_changes
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Setting the Total changes from Transactions: '||v_total_changes
          );

     end if;

end sp_statement_rollup_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        sp_noic_batch_create
--
--   %usage
--        Procedure to calculate the late fee on the policy.
--
--   %algorithm
--        Calculate the late fee based on the policy.
--
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_policy_transaction_id      Policy transaction id
--   %param    in_policy_id                  policy id
--   %param    io_action_outcome_id          action outcome id
--
-- 2015/08/17 Cheryl Dextradeur   osbilling-1238 - added the gbv_FITrxSetEnteredby
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_noic_batch_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type   :=      pkg_name||'sp_noic_batch_create';
     v_session_control                  pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_product_id                       pd_product.pd_product_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_billingacccounttrxset_id         object.object_id%type;
     v_debit_fitransaction_id           object.object_id%type;
     v_credit_fitransaction_id          object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_debit_id                   object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_agency_billing_acc_id            object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_fichangerefbelongsto_id          object.object_id%type;
     v_fichange_action                  object_bv_value.business_variable_value%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_fitem_effective_date             object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;

     v_datamart_tf                      char(1) := 'T';
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_policy_billing_method            number;
     v_target_fitem_balance_amt         float;
     v_late_fee                         number;
     v_late_fee_expression_val          number;
     v_late_fee_path_val                number;
     v_late_fee_val                     number;
     v_fitrx_ref_billing_account        number;
     v_parent_billing_account_id        number;
     v_FItemRefEntityBelongsTo          number;
     r_billing_account_list                 pkg_db_object.t_billing_account_list;

     v_set_type                         object_bv_value.business_variable_value%type;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_date_posted                      object_bv_value.business_variable_value%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     --r_billing_account_index            varchar2(100);
     v_policy_date                      date :=   pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );

     v_debit_trx_id                     object.object_id%type;
     v_info_fichange_id                 object.object_id%type;
     v_info_fichange_amount             number;
     v_pmt_batch_amt                    number;
     v_pmt_batch_amt_with_fee           number;
     v_aging_date_criteria              char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id, in_policy_id,19446); -- 1: Billing Due Date, 2: Withdrawal Date

     cursor c_due_fitem
     is
          select
               f.fitem_id,
               f.policy_id,
               f.policy_transaction_id,
               f.fitem_category_id,
               f.fitem_sub_category_id,
               f.due_date,
               f.policy_effective_date,
               f.balance               as balance_amt                -- balance amt - can be due or cash
          from
               dragon_fitem f
          where
               f.policy_id = in_policy_id
          and
               trunc(decode(v_aging_date_criteria,2,f.withdrawal_date,f.due_date)) <= trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,in_policy_id))
          and
               f.fitem_type_id = gFItemType_Debit
          and
               f.aging_status_id     =    3 --past due
          and



               f.balance >= 0.01;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering NOIC batch creation process for Policy Transction: '||in_policy_transaction_id
          );

     end if;

     r_billing_account_list.delete;


     v_product_id     :=     pkg_os_product.fn_object_product_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_id
                             );


     v_policy_image_id       :=   pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        gbv_PolicyTrxRefCoverages
                                  );


     v_policy_billing_method  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        gbv_PolicyBillingMethod
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Image ID: '||v_policy_image_id||
               ' Policy Billing Method: '||v_policy_billing_method||' - '||
               pkg_os_lookup.fn_lookup_list_text_get(PolicyBillingMethodList, v_policy_billing_method)
          );

     end if;

     --
     -- Get Ultimate Customer ID
     --

     /*
     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_ultimate_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id
                                   );

     */
     --
     -- instead of ultimate customer get parent of type customer as batch object is the ultimate parent for multiple quote upload workflow...
     --
     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_get_parent_of_type
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_os_constant.gObjType_Customer
                                   );

     --
     -- Get the Primary Customer Entity
     --

     v_primary_entity_id      :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ultimate_customer_id,
                                        pkg_base_customer.gbv_CustRefPrimaryEntity
                                   );

     --
     -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
     --

     v_billing_acc_cust_id    :=   pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        gObjType_BillingAccount
                                   );

     if v_billing_acc_cust_id is null
     then

          v_billing_acc_cust_id := pkg_db_functions.fn_get_policy_billing_account(in_session_id ,in_transaction_id ,in_policy_id );

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Ultimate Customer ID: '||v_ultimate_customer_id||
               ' Primary Customer Entity ID: '||v_primary_entity_id||
               ' Customer Billing Account ID: '||v_billing_acc_cust_id
          );

     end if;

     pkg_os_object.sp_object_create
     (
          in_session_id,
          in_transaction_id,
          gObjType_BillingAccountTrxSet,
          v_billing_acc_cust_id,
          v_billingacccounttrxset_id
     );

     --
     -- Set the Reference from PolicyTransaction to BillingAccountTransactionSet  Object
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_policy_transaction_id, -- pol trx id
          gbv_PolTrxRefBillingAccTrxSet, -- 31866546
          v_billingacccounttrxset_id -- Billingaccnt trx id
     );

     --
     -- Set the Reference from BillingAccountTransactionSet to PolicyTransaction Object
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id, -- Billingaccnt trx id
          gbv_BillingAccTrxSetRefPolTxn, -- 32502146
          in_policy_transaction_id -- pol trx id

     );

     --
     -- Set the Business Variables for BillingAccountTransactionSet
     --

     v_set_type          :=        4212;

     v_entry_method      :=        gentrymethod_system;
     --GCNA-1397 use policy date
     --v_date_posted       :=        to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_external_batch_id :=        'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_processing_date   :=        to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault);
     v_date_posted         := to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_external_batch_id   := 'Batch'||to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_processing_date     := to_char(v_policy_date, pkg_os_constant.DragonDateFormatDefault );

     v_bv_table.delete;

     v_bv_table ( gbv_FITrxSetBatchType                        ).business_variable_value     :=   v_set_type;
     v_bv_table ( gbv_FITrxSetEntryType                        ).business_variable_value     :=   v_entry_method;
     v_bv_table ( gbv_FITrxSetEnteredby                        ).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_bv_table ( gbv_FITrxSetDatePosted                       ).business_variable_value     :=   v_date_posted;
     v_bv_table ( gbv_FITrxSetExternalBatchId                  ).business_variable_value     :=   v_external_batch_id;
     v_bv_table ( gbv_BillAccTrxSet_ProcessDate                ).business_variable_value     :=   v_processing_date;
     v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState     ).business_variable_value     :=   gBillingAccTrxSetProcesed;
     v_bv_table ( gbv_FITrxSetTotalAmount                      ).business_variable_value     :=   0;
     v_bv_table ( gbv_FITrxSetTotalItems                       ).business_variable_value     :=   0;
     --
     -- OSBILLING-1816 : persist Billing Account Total Balance
     --
     v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                           (
                                                                                                in_session_id,
                                                                                                in_transaction_id,
                                                                                                pkg_os_object.fn_object_parent_get
                                                                                                (
                                                                                                     in_session_id,
                                                                                                     in_transaction_id,
                                                                                                     v_billingacccounttrxset_id
                                                                                                ),
                                                                                                pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                           );

     v_current_date           :=   to_char
                                   (
                                        pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        ),
                                        pkg_os_constant.DragonDateFormatDefault
                                   );

     v_writing_company_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_GenObj_RefWritingComp
                                   );

     v_carrier_billing_acc_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_writing_company_id,
                                        gbv_GenObj_ChildBillAcc
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Carrier Billing Account ID: '||v_carrier_billing_acc_id
          );

     end if;

      if v_session_control.gLogging_Full
      then

           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billingacccounttrxset_id
           );

      end if;

      pkg_os_object_io.sp_object_bv_set
      (
           in_session_id,
           in_transaction_id,
           v_billingacccounttrxset_id,
           v_bv_table
      );
     --
     -- OSBILLING-767 Fetch and set the Accoutning Period for BillingAccounTTrxSet
     --

/* OSBILLING-3884
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          pkg_db_object.gbv_FITrxSet_AccntingPeriod,
          pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,v_billingacccounttrxset_id)
     );
 OSBILLING-3884 */
     for r_due_item in c_due_fitem
     loop

          if v_debit_trx_id is null
          then

               --
               -- Create new Debit FITransaction Object
               --
               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                    out_fitransaction_id               =>    v_debit_trx_id,
                    in_fitrx_type                      =>    gFITrxType_Dr_Generate,
                    in_fitrx_ref_billing_account       =>    v_billing_acc_cust_id,
                    in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    in_policy_id,
                    in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                    in_fitrx_effective_date            =>    v_current_date,
                    in_fitrx_gl_date                   =>    v_current_date,
                    in_fitrx_process_date              =>    v_current_date,
                    in_fitrx_object_state              =>    gFITrxStatus_Processed
               );

          end if;

          --
           -- OSBILLING-767 Fetch and set the Accoutning Period for FItransaction
           --
           pkg_os_object_io.sp_object_bv_set
           (
               in_session_id,
               in_transaction_id,
               v_debit_trx_id,
               pkg_db_object.gbv_FITrx_AccntingPeriod,
               pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_debit_trx_id)
           );
          v_fichange_process_date     :=     to_char
                                             (
                                                  pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  ),
                                                  pkg_os_constant.DragonDateFormatDefault
                                             );

          v_fichange_action        :=   401; -- Info

          v_info_fichange_amount   :=   0;


          v_sum_include            :=   2; -- No

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date||
                    ' Debit FIChange amount: '||v_debit_fichange_amount||
                    ' And Credit FIChange amount: '||v_credit_fichange_amount||
                    ' FIChange Sum Include '||v_sum_include
               );

          end if;

             v_fichangerefbelongsto_id       :=   pkg_os_object.fn_object_parent_get
                                              (
                                                  in_session_id,
                                                  in_transaction_id ,
                                                  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, r_due_item.fitem_id,pkg_db_object.gbv_BillAcc_ParentObjectID)
                                              );--OSBilling-5405

          --
          -- Call the FIChange creation procedure
          --
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' ...... Create the FIChange object after collecting all the BV values'
               );

          end if;

          pkg_db_object.sp_fichange_create
          (
               in_session_id                     => in_session_id,
               in_transaction_id                => in_transaction_id,
               in_parent_fitransaction_id       => v_debit_trx_id,
               out_fichange_id                  => v_info_fichange_id,
               in_fichange_action               => v_fichange_action,
               in_fichange_action_delta         => v_info_fichange_amount,
               in_fichange_ref_fitem            => r_due_item.fitem_id,
               in_fichange_sum_include          => v_sum_include,
               in_fichange_process_date         => v_fichange_process_date,
               in_fichange_ref_pol              => in_policy_id,
               in_fichange_ref_pol_trx          => in_policy_transaction_id,
               in_fichange_belongs_to           => v_fichangerefbelongsto_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_info_fichange_id,
               32403946,
               r_due_item.balance_amt
          );

          --
          -- Update the Info FIChange Datamart
          --
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_info_fichange_id, v_datamart_tf);

          v_target_fitem_balance_amt := nvl(v_target_fitem_balance_amt,0) + nvl(r_due_item.balance_amt,0);

     end loop;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_debit_trx_id,
          29744046,
          in_policy_transaction_id
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_BillAcctTrxSet_CurrTrx,
          v_debit_trx_id
     );
     --OSbilling-4311
        --OSbilling-4311
    v_pmt_batch_amt :=   pkg_os_object_io.fn_object_bv_get
    (
         in_session_id,
         in_transaction_id,
         v_billingacccounttrxset_id,
         gbv_FITrxSetTotalAmount
    );

     v_pmt_batch_amt_with_fee := v_pmt_batch_amt + v_target_fitem_balance_amt;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_FITrxSetTotalAmount,
          v_pmt_batch_amt_with_fee
     );
     --OSBilling-4311
    /* pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_FITrxSetTotalAmount,
          v_target_fitem_balance_amt
     );*/
     --OSbilling-4311
     --
    --- GCNA-882  Set mail flag
    --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_debit_trx_id,v_datamart_tf);

/* OSBILLING-3884
     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_billingacccounttrxset_id,v_datamart_tf);
 OSBILLING-3884 */

     --
    --- GCNA-882  Set mail flag
    --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;

     io_action_outcome_id     :=     pkg_os_constant.gOutcome_OK;

end sp_noic_batch_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %name
--        sp_rescind_noic_batch_create
--
--   %usage
--        Procedure to calculate the late fee on the policy.
--
--   %algorithm
--        Calculate the late fee based on the policy.
--
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_policy_transaction_id      Policy transaction id
--   %param    in_policy_id                  policy id
--   %param    io_action_outcome_id          action outcome id
--
-- 2015/08/17 Cheryl Dextradeur   osbilling-1238 - added the gbv_FITrxSetEnteredby
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_rescind_noic_batch_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type   :=      pkg_name||'sp_rescind_noic_batch_create';
     v_session_control                  pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     --v_product_id                       pd_product.pd_product_id%type;
     --v_ultimate_customer_id             object.object_id%type;
     --v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_billingacccounttrxset_id         object.object_id%type;
     v_debit_fitransaction_id           object.object_id%type;
     v_credit_fitransaction_id          object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_debit_id                   object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_agency_billing_acc_id            object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_fichangerefbelongsto_id          object.object_id%type;
     v_fichange_action                  object_bv_value.business_variable_value%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_fitem_effective_date             object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;

     v_datamart_tf                      char(1) := 'T';
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_policy_billing_method            number;
     v_target_fitem_balance_amt         float;
     v_late_fee                         number;
     v_late_fee_expression_val          number;
     v_late_fee_path_val                number;
     v_late_fee_val                     number;
     v_fitrx_ref_billing_account        number;
     v_parent_billing_account_id        number;
     v_FItemRefEntityBelongsTo          number;
     r_billing_account_list                 pkg_db_object.t_billing_account_list;

     v_set_type                         object_bv_value.business_variable_value%type;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_date_posted                      object_bv_value.business_variable_value%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     --r_billing_account_index            varchar2(100);
     v_policy_date                      date :=   pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );

     v_noic_policy_trx_id               object.object_id%type;
     v_noic_batch_id                    object.object_id%type;

     v_fitrx_list                       pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_fitrx_indx                       number;

     v_fichange_list                    pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
     v_fichange_indx                    number;
     v_fitem_id                         object.object_id%type;
     v_debit_trx_id                     object.object_id%type;
     v_info_fichange_id                 object.object_id%type;
     v_info_fichange_amount             number;
     v_fitem_balance_amt                number;
     v_fitem_init_bal_amt               number;
     v_noic_trx_process_date            date;
     v_noic_batch_amount                number;
     v_payment_batch_id                 object.object_id%type;
     v_payment_batch_type               varchar2(100);
     v_payment_batch_amt                number;
     v_noic_batch_due_dt                object_bv_value.business_variable_value%type;
     v_noic_trx_process_dt              object_bv_value.business_variable_value%type;
     v_pmt_batch_amt_with_fee           number;
     v_pmt_batch_amt                    number;
     --OSPRODUCT-21861
     v_bord_policy                      object.object_id%type;
begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering NOIC batch creation process for Policy Transction: '||in_policy_transaction_id
          );

     end if;
     r_billing_account_list.delete;

     v_billing_acc_cust_id := pkg_db_functions.fn_get_policy_billing_account(in_session_id, in_transaction_id, in_policy_id);

     if v_billing_acc_cust_id is null
     then

          v_billing_acc_cust_id := pkg_db_functions.fn_get_policy_billing_account(in_session_id ,in_transaction_id ,in_policy_id );

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Customer Billing Account ID: '||v_billing_acc_cust_id
          );

     end if;

     pkg_os_object.sp_object_create
     (
          in_session_id,
          in_transaction_id,
          gObjType_BillingAccountTrxSet,
          v_billing_acc_cust_id,
          v_billingacccounttrxset_id
     );

     --
     -- Set the Reference from PolicyTransaction to BillingAccountTransactionSet  Object
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_policy_transaction_id, -- pol trx id
          gbv_PolTrxRefBillingAccTrxSet, -- 31866546
          v_billingacccounttrxset_id -- Billingaccnt trx id
     );


     --
     -- Set the Reference from BillingAccountTransactionSet to PolicyTransaction Object
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id, -- Billingaccnt trx id
          gbv_BillingAccTrxSetRefPolTxn, -- 32502146
             in_policy_transaction_id -- pol trx id

     );



     --
     -- Set the Business Variables for BillingAccountTransactionSet
     --

     v_set_type          :=        5046;

     -- UTPRODUCT-4370
     if  nvl( 
                pkg_os_object_io.fn_object_bv_get
                (
                     in_session_id,
                     in_transaction_id,
                     in_session_id,
                     pkg_os_constant_bv.gbv_SessionCreatedByUI_TF
                 ),
                 0
             )= pkg_os_constant.gBoolean_Yes
     then 
          v_entry_method      :=        gEntryMethod_Manual;
     else                  
          v_entry_method      :=        gentrymethod_system;
     end if;     
     -- / UTPRODUCT-4370
     
     --GCNA-1397 use policy date
     --v_date_posted       :=        to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_external_batch_id :=        'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_processing_date   :=        to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault);
     v_date_posted        := to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_external_batch_id  := 'Batch'||to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_processing_date    := to_char(v_policy_date, pkg_os_constant.DragonDateFormatDefault );

     v_bv_table.delete;

     v_bv_table ( gbv_FITrxSetBatchType                        ).business_variable_value     :=   v_set_type;
     v_bv_table ( gbv_FITrxSetEntryType                        ).business_variable_value     :=   v_entry_method;
     v_bv_table ( gbv_FITrxSetEnteredby                        ).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_bv_table ( gbv_FITrxSetDatePosted                       ).business_variable_value     :=   v_date_posted;
     v_bv_table ( gbv_FITrxSetExternalBatchId                  ).business_variable_value     :=   v_external_batch_id;
     v_bv_table ( gbv_BillAccTrxSet_ProcessDate                ).business_variable_value     :=   v_processing_date;
     v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState     ).business_variable_value     :=   gBillingAccTrxSetProcesed;
     v_bv_table ( gbv_FITrxSetTotalAmount                      ).business_variable_value     :=   0;
     v_bv_table ( gbv_FITrxSetTotalItems                       ).business_variable_value     :=   0;
     --
     -- OSBILLING-1816 : persist Billing Account Total Balance
     --

/* OSBILLING-3884
     v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance     ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                           (
                                                                                                in_session_id,
                                                                                                in_transaction_id,
                                                                                                pkg_os_object.fn_object_parent_get
                                                                                                (
                                                                                                     in_session_id,
                                                                                                     in_transaction_id,
                                                                                                     v_billingacccounttrxset_id
                                                                                                ),
                                                                                                pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                           );
 OSBILLING-3884 */
     v_current_date           :=   to_char
                                   (
                                        pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        ),
                                        pkg_os_constant.DragonDateFormatDefault
                                   );


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billingacccounttrxset_id
          );

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          v_bv_table
     );

      --
      -- OSBILLING-767 Fetch and set the Accoutning Period for BillingAccounTTrxSet
      --

/* OSBILLING-3884
      pkg_os_object_io.sp_object_bv_set
      (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          pkg_db_object.gbv_FITrxSet_AccntingPeriod,
          pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,v_billingacccounttrxset_id)
      );
 OSBILLING-3884 */
     -- OSPRODUCT-21861
     begin
          
     select
          dpt.policy_trx_id, trunc(dpt.policy_trx_process_date)
     into
          v_noic_policy_trx_id, v_noic_trx_process_date
     from
          dragon_policy_trx dpt
     where
          dpt.policy_id = in_policy_id
     and
          dpt.policy_trx_type_id in (4212,8646) --OSPRODUCT-2884
     and
          rownum = 1
     order by
          dpt.policy_trx_id desc;
               
     exception
          
          when no_data_found then
               
               -- Get the bord policy
               v_bord_policy := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_policy_id,
                                     32651648
                                );
                                
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Bord Policy: '|| v_bord_policy
                    );

               end if;
                                
                                
               if v_bord_policy is not null then
                    
                    select
                         dpt.policy_trx_id, trunc(dpt.policy_trx_process_date)
                    into
                         v_noic_policy_trx_id, v_noic_trx_process_date
                    from
                         dragon_policy_trx dpt
                    where
                         dpt.policy_id = v_bord_policy
                    and
                         dpt.policy_trx_type_id in (4212,8646) --OSPRODUCT-2884
                    and
                         rownum = 1
                    order by
                         dpt.policy_trx_id desc;
                         
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...NOIC Policy Trx: '|| v_noic_policy_trx_id
                         );

                    end if;
                    
               else
                    raise;
                         
               end if;                   
     
     end;
               

     v_noic_batch_id     :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_noic_policy_trx_id,
                                   gbv_PolTrxRefBillingAccTrxSet
                              );

     v_noic_batch_amount :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_noic_batch_id,
                                   gbv_FITrxSetTotalAmount
                              );

     v_noic_batch_due_dt :=   pkg_os_object_io.fn_object_bv_path_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_noic_batch_id,
                                   '29743646.29744046.30024012.30020712'
                              );

     -- Get FITransactions
     v_fitrx_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_noic_batch_id,
          gObjType_FITransaction,
          v_fitrx_list
     );

     v_fitrx_indx := v_fitrx_list.first;

     while (v_fitrx_indx is not null)
     loop

          if v_debit_trx_id is null
          then

               --
               -- Create new Debit FITransaction Object
               --
               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                    out_fitransaction_id               =>    v_debit_trx_id,
                    in_fitrx_type                      =>    gFITrxType_Dr_Generate,
                    in_fitrx_ref_billing_account       =>    v_billing_acc_cust_id,
                    in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    in_policy_id,
                    in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                    in_fitrx_effective_date            =>    v_current_date,
                    in_fitrx_gl_date                   =>    v_current_date,
                    in_fitrx_process_date              =>    v_current_date,
                    in_fitrx_object_state              =>    gFITrxStatus_Processed
               );

          end if;
       --
      -- OSBILLING-767 Fetch and set the Accoutning Period for FItransaction
      --
      pkg_os_object_io.sp_object_bv_set
      (
          in_session_id,
          in_transaction_id,
          v_debit_trx_id,
          pkg_db_object.gbv_FITrx_AccntingPeriod,
          pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_debit_trx_id)
      );


          -- Get FIChanges
          v_fichange_list.delete;
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               v_fitrx_list(v_fitrx_indx),
               gObjType_FIChange,
               v_fichange_list
          );

          v_fichange_indx := v_fichange_list.first;

          while (v_fichange_indx is not null)
          loop

               v_fitem_id          :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fichange_list(v_fichange_indx),
                                             gbv_FIChangeRefFItem
                                        );

               v_fitem_init_bal_amt :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_id,
                                             30749646 --initial amount
                                        );

               begin
               --UTPRODUCT-1508 start
                select
                    fic.billingaccounttrxset_id,
                    fi.FITEM_BATCH_TYPE_NAME
                into
                    v_payment_batch_id,
                    v_payment_batch_type
                from
                    dragon_fichange fic,
                    dragon_fitem fi
                where
                    fi.fitem_id = v_fitem_id
                and
                    fi.fitem_id = fic.fitem_id
                and
                    fic.running_total_fitem <= round(( v_fitem_init_bal_amt * pkg_os_product.fn_product_property_get ( in_session_id, in_transaction_id, in_policy_id, 15346 )) /100, 2)
                and
                    rownum = 1
                order by
                    fic.fichange_id;
               --UTPRODUCT-1508 end

               exception
               when no_data_found then

                  pkg_os_logging.sp_log( in_session_id, in_transaction_id, v_procedure_name, '...... No data found for FItem ID:'||v_fitem_id );
                  v_fichange_indx := v_fichange_list.next(v_fichange_indx);
                  continue; --move to next FIChange

               end;

               v_fitem_balance_amt :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             --
                                             -- v_fitem_id,
                                             -- 29710546 -- this is calculated amount and it is zero. It must be zero as far as we are processing the Rescind transaction ONLY if an fitem is satisfied.
                                             --
                                             v_fichange_list(v_fichange_indx),
                                             32403946 -- 'Amount For Type FYI' from corresponding NOIC batch fichange item.
                                                      -- This amount is a kind of balance snaphot of the fitem at the moment of NOIC creation
                                                      -- This amount is set in the sp_noic_batch_create
                                        );

               v_fichange_process_date     :=     to_char
                                                  (
                                                       pkg_db_functions.fn_get_policy_current_date
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_policy_id
                                                       ),
                                                       pkg_os_constant.DragonDateFormatDefault
                                                  );

               v_fichange_action        :=   401; -- Info

               v_info_fichange_amount   :=   0;


               v_sum_include            :=   2; -- No

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log          --@@@PM - Merge this log stmt with above
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date||
                         ' Debit FIChange amount: '||v_debit_fichange_amount||
                         ' And Credit FIChange amount: '||v_credit_fichange_amount||
                         ' FIChange Sum Include '||v_sum_include
                    );

               end if;

                 v_fichangerefbelongsto_id       :=      pkg_os_object.fn_object_parent_get
                                                        (
                                                            in_session_id,
                                                            in_transaction_id ,

                                                            pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_fitem_id,pkg_db_object.gbv_BillAcc_ParentObjectID)
                                                        );--OSBilling-5405

               --
               -- Call the FIChange creation procedure
               --
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values'
                    );

               end if;

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                    => in_session_id,
                    in_transaction_id                => in_transaction_id,
                    in_parent_fitransaction_id       => v_debit_trx_id,
                    out_fichange_id                  => v_info_fichange_id,
                    in_fichange_action               => v_fichange_action,
                    in_fichange_action_delta         => v_info_fichange_amount,
                    in_fichange_ref_fitem            => v_fitem_id,
                    in_fichange_sum_include          => v_sum_include,
                    in_fichange_process_date         => v_fichange_process_date,
                    in_fichange_ref_pol              => in_policy_id,
                    in_fichange_ref_pol_trx          => in_policy_transaction_id,
                    in_fichange_belongs_to           => v_fichangerefbelongsto_id
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_info_fichange_id,
                    32403946,
                    v_fitem_balance_amt
               );

               --
               -- Update the Info FIChange Datamart
               --
               pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_info_fichange_id, v_datamart_tf);

               v_target_fitem_balance_amt := nvl(v_target_fitem_balance_amt,0) + nvl(v_fitem_balance_amt,0);

               v_fichange_indx := v_fichange_list.next(v_fichange_indx);

          end loop;

          v_fitrx_indx := v_fitrx_list.next(v_fitrx_indx);

     end loop;

     v_payment_batch_amt :=   pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_payment_batch_id,
                                   gbv_FITrxSetTotalAmount
                              );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_debit_trx_id,
          29744046,
          in_policy_transaction_id
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_BillAcctTrxSet_CurrTrx,
          v_debit_trx_id
     );

     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_debit_trx_id,v_datamart_tf);
      --OSbilling-4311
      v_pmt_batch_amt :=    pkg_os_object_io.fn_object_bv_get
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_billingacccounttrxset_id,
                                 gbv_FITrxSetTotalAmount
                            );

       v_pmt_batch_amt_with_fee := v_pmt_batch_amt + v_target_fitem_balance_amt;

       pkg_os_object_io.sp_object_bv_set
       (
            in_session_id,
            in_transaction_id,
            v_billingacccounttrxset_id,
            gbv_FITrxSetTotalAmount,
            v_pmt_batch_amt_with_fee
       );
     --OSBilling-4311
    /* pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_FITrxSetTotalAmount,
          v_target_fitem_balance_amt
     );*/

     v_bv_table.delete;

     v_noic_trx_process_dt := to_char(v_noic_trx_process_date,pkg_os_constant.DragonDateFormatDefault);

     v_bv_table ( 32402046                        ).business_variable_value     :=   v_noic_trx_process_dt;
      -- OSBILLING - 7684   
     --  v_bv_table ( 32402146                        ).business_variable_value     :=   v_noic_batch_due_dt;
     v_bv_table ( 32402246                        ).business_variable_value     :=   v_payment_batch_type;
     v_bv_table ( 32402346                        ).business_variable_value     :=   v_payment_batch_amt;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billingacccounttrxset_id
          );

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          v_bv_table
     );

/*     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          32402046, --- NOIC Notice Date
          to_char(v_noic_trx_process_date,pkg_os_constant.DragonDateFormatDefault)
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          32402146, --- NOIC Due Date
          v_noic_batch_due_dt
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          32402246, --- Transaction For Rescind
          v_payment_batch_type
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          32402346, --- Transaction Amount to Rescind
          v_payment_batch_amt
     );*/
    --
    -- GCNA-882 Set mail flag at BATRxSe level
    --

          PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

/* OSBILLING-3884
     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_billingacccounttrxset_id,v_datamart_tf);
 OSBILLING-3884 */

     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if;

     io_action_outcome_id     :=     pkg_os_constant.gOutcome_OK;

end sp_rescind_noic_batch_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_policy_auto_cancel_hold
--
--   %USAGE
--   When user selects policies of NOIC Sent Status and process for Hold on Auto Cancel during Nightly Process
--   This process set Auto Cancel Hold
--
--   %ALGORITHM
--
--   1.   Get the list object from cache
--   2.   Loop through all selected elements
--   3.        Get the Policy Object ID for Object
--   4.        Get the Current Policy Term ID
--   5.        Set Auto Cancel Hold as Yes
--
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
--   in_action_object_id                in             object.object_id%type,
--   io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_policy_auto_cancel_hold
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     in_action_object_id                in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
as
     v_session_control                  pkg_os_session.r_dragon_session_control     :=    pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type     :=     pkg_name||'sp_policy_auto_cancel_hold';

     v_list_object_list                 pkg_os_object.t_object_list     :=     pkg_os_object.gnull_object_list;
     v_list_object_id                   object.object_id%type;
     v_selected_elements                varchar2(2000);
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_object_index                     number;
     v_list_object_index                number;
     v_object_type_id                   object_type.object_type_id%type;
     v_policy_object_id                 object.object_id%type;
     v_record_selected_cnt              number := 0;
     v_target_policy_term               object.object_id%type;

     v_datamart_tf                    char(1);

begin


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering to set auto cancel hold for selected multiple policies : '||in_action_object_id
          );

     end if;

     v_list_object_list.delete;

     pkg_os_object_cache_search.sp_obj_cache_objects_get
     (
          in_session_id,
          in_transaction_id,
          in_object_cache,
          pkg_os_constant.gobjType_List,
          v_list_object_list,
          'F'
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Get the list object from cache: '||v_list_object_list.count
          );

     end if;

     if v_list_object_list.count > 0
     then

          v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

          v_list_object_index      :=        v_list_object_list.first;

          while v_list_object_index is not null
          loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... List Object ID: '||v_list_object_id
                    );

               end if;

               v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_cache,
                                                       v_list_object_list(v_list_object_index),
                                                       pkg_os_constant_bv.gbv_ListElementsSelected
                                                  );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                         ' And element list: '||v_selected_elements
                    );

               end if;

               v_object_type_id         :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_cache,
                                                       v_list_object_list(v_list_object_index),
                                                       pkg_os_constant_bv.gbv_ListElementObjectType
                                                  );


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Object Type ID: '||v_object_type_id
                    );

               end if;

               v_selected_object_ids.delete;

               pkg_os_token.sp_tokenize_string
               (
                    v_selected_elements,
                    ',',
                    v_selected_object_ids
               );

               v_object_index           :=        v_selected_object_ids.first;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... v_object_index '||v_object_index
                    );

               end if;

               if v_object_index is null
               then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... User did not make any selection from the list.'
                         );

                    end if;

                    null;

               else

                    while v_object_index is not null
                    loop

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Get the policy Object ID for Object to be consider for auto cancel hold: '||in_session_id||
                                   '-'||in_transaction_id||
                                   '-'||pkg_os_constant_bv.gbv_ListElementObject||
                                   '-'||v_selected_object_ids( v_object_index )
                              );

                         end if;

                         v_policy_object_id       :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_object_cache,
                                                            v_selected_object_ids( v_object_index ),
                                                            pkg_os_constant_bv.gbv_ListElementObject
                                                       );

                         v_target_policy_term     :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_policy_object_id,
                                                            gbv_CurrentTermFromRolledDate   -- ref_Current Policy Term
                                                       );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Selected Policy Object ID: '||v_policy_object_id||
                                   'Policy Term ID: '||v_target_policy_term
                              );

                         end if;

                         if v_policy_object_id is not null
                         then

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_target_policy_term,
                                   32448031, -- Auto Cancel Hold
                                   1 --Yes
                              );

                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_object_id,
                                   v_datamart_tf
                              );

                              v_record_selected_cnt := v_record_selected_cnt + 1;

                         end if;

                         v_object_index := v_selected_object_ids.next( v_object_index );

                    end loop; -- for each selection ...

               end if; -- if the list contains one or more selections ...

               v_list_object_index         :=        v_list_object_list.next(v_list_object_index);

          end loop;

     end if; -- if able to find the list ...

     if v_record_selected_cnt = 0
     then

          io_action_outcome_id := 35546;

     else

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;

     end if;

exception

     when others
     then

          io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered ' || in_action_object_id ||
               ' Error: ' ||sqlerrm
          );

end sp_policy_auto_cancel_hold;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--   sp_pol_auto_cancel_hold_remove
--
--   %USAGE
--   When user selects policies of NOIC Sent Status and process for removing Hold on Auto Cancel during Nightly Process
--   This process set Auto Cancel Hold as No
--
--   %ALGORITHM
--
--   1.   Get the list object from cache
--   2.   Loop through all selected elements
--   3.        Get the Policy Object ID for Object
--   4.        Get the Current Policy Term ID
--   5.        Set Auto Cancel Hold as No
--
--
--   %PARAM
--   in_session_id                      in             object.object_id%type,
--   in_transaction_id                  in             object.object_id%type,
--   in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
--   in_action_object_id                in             object.object_id%type,
--   io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_pol_auto_cancel_hold_remove
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_object_cache                    in out         pkg_os_object_cache.t_object_cache,
     in_action_object_id                in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
as
     v_session_control                  pkg_os_session.r_dragon_session_control     :=    pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type     :=     pkg_name||'sp_pol_auto_cancel_hold_remove';

     v_list_object_list                 pkg_os_object.t_object_list     :=     pkg_os_object.gnull_object_list;
     v_list_object_id                   object.object_id%type;
     v_selected_elements                varchar2(2000);
     v_selected_object_ids              pkg_os_token.t_string_table;
     v_object_index                     number;
     v_list_object_index                number;
     v_object_type_id                   object_type.object_type_id%type;
     v_policy_object_id                 object.object_id%type;
     v_record_selected_cnt              number := 0;
     v_target_policy_term               object.object_id%type;

     v_datamart_tf                    char(1);

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering to remove auto cancel hold for selected multiple policies : '||in_action_object_id
          );

     end if;

     v_list_object_list.delete;

     pkg_os_object_cache_search.sp_obj_cache_objects_get
     (
          in_session_id,
          in_transaction_id,
          in_object_cache,
          pkg_os_constant.gobjType_List,
          v_list_object_list,
          'F'
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Get the list object from cache: '||v_list_object_list.count
          );

     end if;

     if v_list_object_list.count > 0
     then

          v_list_object_id         :=        v_list_object_list(v_list_object_list.first);

          v_list_object_index      :=        v_list_object_list.first;

          while v_list_object_index is not null
          loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... List Object ID: '||v_list_object_id
                    );

               end if;

               v_selected_elements      :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_cache,
                                                       v_list_object_list(v_list_object_index),
                                                       pkg_os_constant_bv.gbv_ListElementsSelected
                                                  );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Selected element list ID: '||pkg_os_constant_bv.gbv_ListElementsSelected  ||
                         ' And element list: '||v_selected_elements
                    );

               end if;

               v_object_type_id         :=        pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_object_cache,
                                                       v_list_object_list(v_list_object_index),
                                                       pkg_os_constant_bv.gbv_ListElementObjectType
                                                  );


               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Object Type ID: '||v_object_type_id
                    );

               end if;

               v_selected_object_ids.delete;

               pkg_os_token.sp_tokenize_string
               (
                    v_selected_elements,
                    ',',
                    v_selected_object_ids
               );

               v_object_index           :=        v_selected_object_ids.first;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... v_object_index '||v_object_index
                    );

               end if;

               if v_object_index is null
               then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... User did not make any selection from the list.'
                         );

                    end if;

                    null;

               else

                    while v_object_index is not null
                    loop

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Get the policy Object ID for Object to be consider for auto cancel hold: '||in_session_id||
                                   '-'||in_transaction_id||
                                   '-'||pkg_os_constant_bv.gbv_ListElementObject||
                                   '-'||v_selected_object_ids( v_object_index )
                              );

                         end if;

                         v_policy_object_id       :=   pkg_os_object_cache_io.fn_obj_cache_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_object_cache,
                                                            v_selected_object_ids( v_object_index ),
                                                            pkg_os_constant_bv.gbv_ListElementObject
                                                       );

                         v_target_policy_term     :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_policy_object_id,
                                                            gbv_CurrentTermFromRolledDate   -- ref_Current Policy Term
                                                       );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Selected Policy Object ID: '||v_policy_object_id||
                                   'Policy Term ID: '||v_target_policy_term
                              );

                         end if;

                         if v_policy_object_id is not null
                         then

                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_target_policy_term,
                                   32448031, --Auto Cancel Hold
                                   2 --No
                              );

                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_policy_object_id,
                                   v_datamart_tf
                              );

                              v_record_selected_cnt := v_record_selected_cnt + 1;

                         end if;

                         v_object_index := v_selected_object_ids.next( v_object_index );

                    end loop; -- for each selection ...

               end if; -- if the list contains one or more selections ...

               v_list_object_index         :=        v_list_object_list.next(v_list_object_index);

          end loop;

     end if; -- if able to find the list ...

     if v_record_selected_cnt = 0
     then

          io_action_outcome_id := 35546;

     else

          io_action_outcome_id := pkg_os_constant.gOutcome_OK;

     end if;

exception

     when others
     then

          io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Error encountered ' || in_action_object_id ||
               ' Error: ' ||sqlerrm
          );

end sp_pol_auto_cancel_hold_remove;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
--
--   %name
--        sp_finalrem_batch_create
--
--   %usage
--        Procedure to create Final Reminder batch for policy.
--
--   %algorithm
--        create Final Reminder batch for policy
--
--   %param    in_session_id                 user session id
--   %param    in_transaction_id             transaction id
--   %param    in_policy_transaction_id      Policy transaction id
--   %param    in_policy_id                  policy id
--   %param    io_action_outcome_id          action outcome id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_finalrem_batch_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out         outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type   :=      pkg_name||'sp_finalrem_batch_create';
     v_session_control                  pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_product_id                       pd_product.pd_product_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_billingacccounttrxset_id         object.object_id%type;
     v_debit_fitransaction_id           object.object_id%type;
     v_credit_fitransaction_id          object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_debit_id                   object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_agency_billing_acc_id            object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_fichangerefbelongsto_id          object.object_id%type;
     v_fichange_action                  object_bv_value.business_variable_value%type;
     v_current_date                     object_bv_value.business_variable_value%type;
     v_fitem_effective_date             object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;

     v_datamart_tf                      char(1) := 'T';
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_policy_billing_method            number;
     v_target_fitem_balance_amt         float;
     v_late_fee                         number;
     v_late_fee_expression_val          number;
     v_late_fee_path_val                number;
     v_late_fee_val                     number;
     v_fitrx_ref_billing_account        number;
     v_parent_billing_account_id        number;
     v_FItemRefEntityBelongsTo          number;
     r_billing_account_list             pkg_db_object.t_billing_account_list;

     v_set_type                         object_bv_value.business_variable_value%type;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_date_posted                      object_bv_value.business_variable_value%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     --r_billing_account_index            varchar2(100);
     v_policy_date                      date :=   pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  );

     v_debit_trx_id                     object.object_id%type;
     v_info_fichange_id                 object.object_id%type;
     v_info_fichange_amount             number;
     v_aging_date_criteria              char(1) := pkg_os_product.fn_product_property_get( in_session_id, in_transaction_id,in_policy_id,19446); -- 1: Billing Due Date, 2: Withdrawal Date

     cursor c_due_fitem
     is
          select
               f.fitem_id,
               f.policy_id,
               f.policy_transaction_id,
               f.fitem_category_id,
               f.fitem_sub_category_id,
               f.due_date,
               f.policy_effective_date,
               f.balance               as balance_amt                -- balance amt - can be due or cash
          from
               dragon_fitem f
          where
               f.policy_id = in_policy_id
          and
               trunc(decode(v_aging_date_criteria,2,f.withdrawal_date,f.due_date)) <= trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,in_transaction_id,in_policy_id))
          and
               f.fitem_type_id = gFItemType_Debit
          and
               f.aging_status_id     =    3 --past due
          and
               f.balance >= 0.01;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Final Reminder batch creation process for Policy Transction: '||in_policy_transaction_id
          );

     end if;
     r_billing_account_list.delete;

     v_product_id     :=     pkg_os_product.fn_object_product_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_policy_id
                             );


     v_policy_image_id       :=   pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        gbv_PolicyTrxRefCoverages
                                  );


     v_policy_billing_method  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        gbv_PolicyBillingMethod
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Image ID: '||v_policy_image_id||
               ' Policy Billing Method: '||v_policy_billing_method||' - '||
               pkg_os_lookup.fn_lookup_list_text_get(PolicyBillingMethodList, v_policy_billing_method)
          );

     end if;

     --
     -- Get Ultimate Customer ID
     --

     v_ultimate_customer_id   :=   pkg_os_object_search.fn_object_ultimate_parent_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id
                                   );

     --
     -- Get the Primary Customer Entity
     --

     v_primary_entity_id      :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_ultimate_customer_id,
                                        pkg_base_customer.gbv_CustRefPrimaryEntity
                                   );

     --
     -- Get the 1-1 child of the Primary Customer Entity of type Billing Account
     --

     v_billing_acc_cust_id    :=   pkg_os_object_search.fn_object_11_child_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_primary_entity_id,
                                        gObjType_BillingAccount
                                   );

     if v_billing_acc_cust_id is null
     then

          v_billing_acc_cust_id := pkg_db_functions.fn_get_policy_billing_account(in_session_id ,in_transaction_id ,in_policy_id );

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Ultimate Customer ID: '||v_ultimate_customer_id||
               ' Primary Customer Entity ID: '||v_primary_entity_id||
               ' Customer Billing Account ID: '||v_billing_acc_cust_id
          );

     end if;

     pkg_os_object.sp_object_create
     (
          in_session_id,
          in_transaction_id,
          gObjType_BillingAccountTrxSet,
          v_billing_acc_cust_id,
          v_billingacccounttrxset_id
     );

     --
     -- Set the Reference from PolicyTransaction to BillingAccountTransactionSet  Object
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_policy_transaction_id, -- pol trx id
          gbv_PolTrxRefBillingAccTrxSet, -- 31866546
          v_billingacccounttrxset_id -- Billingaccnt trx id
     );

     --
     -- Set the Reference from BillingAccountTransactionSet to PolicyTransaction Object
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id, -- Billingaccnt trx id
          gbv_BillingAccTrxSetRefPolTxn, -- 32502146
          in_policy_transaction_id -- pol trx id

     );

     --
     -- Set the Business Variables for BillingAccountTransactionSet
     --

     v_set_type          :=        6140; --Final Reminder batch type

     v_entry_method      :=        gentrymethod_system;
     --GCNA-1397 use policy date
     --v_date_posted       :=        to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_external_batch_id :=        'Batch'||to_char( pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault );
     --v_processing_date   :=        to_char(pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billingacccounttrxset_id), pkg_os_constant.DragonDateFormatDefault);
     v_date_posted         := to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_external_batch_id   := 'Batch'||to_char(v_policy_date, pkg_os_constant.dragondateformatdefault );
     v_processing_date     := to_char(v_policy_date, pkg_os_constant.DragonDateFormatDefault );

     v_bv_table.delete;

     v_bv_table ( gbv_FITrxSetBatchType                        ).business_variable_value     :=   v_set_type;
     v_bv_table ( gbv_FITrxSetEntryType                        ).business_variable_value     :=   v_entry_method;
     v_bv_table ( gbv_FITrxSetEnteredby                        ).business_variable_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_bv_table ( gbv_FITrxSetDatePosted                       ).business_variable_value     :=   v_date_posted;
     v_bv_table ( gbv_FITrxSetExternalBatchId                  ).business_variable_value     :=   v_external_batch_id;
     v_bv_table ( gbv_BillAccTrxSet_ProcessDate                ).business_variable_value     :=   v_processing_date;
     v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState     ).business_variable_value     :=   gBillingAccTrxSetProcesed;
     v_bv_table ( gbv_FITrxSetTotalAmount                      ).business_variable_value     :=   0;
     v_bv_table ( gbv_FITrxSetTotalItems                       ).business_variable_value     :=   0;


     v_current_date           :=   to_char
                                   (
                                        pkg_db_functions.fn_get_policy_current_date
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_id
                                        ),
                                        pkg_os_constant.DragonDateFormatDefault
                                   );

     v_writing_company_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        gbv_GenObj_RefWritingComp
                                   );

     v_carrier_billing_acc_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_writing_company_id,
                                        gbv_GenObj_ChildBillAcc
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Carrier Billing Account ID: '||v_carrier_billing_acc_id
          );

     end if;

      if v_session_control.gLogging_Full
      then

           pkg_os_logging.sp_log
           (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billingacccounttrxset_id
           );

      end if;

      pkg_os_object_io.sp_object_bv_set
      (
           in_session_id,
           in_transaction_id,
           v_billingacccounttrxset_id,
           v_bv_table
      );
     --
     -- OSBILLING-767 Fetch and set the Accoutning Period for BillingAccounTTrxSet
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          pkg_db_object.gbv_FITrxSet_AccntingPeriod,
          pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,v_billingacccounttrxset_id)
     );

     for r_due_item in c_due_fitem
     loop

          if v_debit_trx_id is null
          then

               --
               -- Create new Debit FITransaction Object
               --
               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                      =>    in_session_id,
                    in_transaction_id                  =>    in_transaction_id,
                    in_fitrx_parent_fitrxset_id        =>    v_billingacccounttrxset_id,
                    out_fitransaction_id               =>    v_debit_trx_id,
                    in_fitrx_type                      =>    gFITrxType_Dr_Generate,
                    in_fitrx_ref_billing_account       =>    v_billing_acc_cust_id,
                    in_fitrx_ref_associatedpolicy      =>    in_policy_id,
                    in_fitrx_ref_associatedpoltrx      =>    in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy          =>    in_policy_id,
                    in_fitrx_ref_actionpoltrx          =>    in_policy_transaction_id,
                    in_fitrx_effective_date            =>    v_current_date,
                    in_fitrx_gl_date                   =>    v_current_date,
                    in_fitrx_process_date              =>    v_current_date,
                    in_fitrx_object_state              =>    gFITrxStatus_Processed
               );

          end if;

          --
           -- OSBILLING-767 Fetch and set the Accoutning Period for FItransaction
           --
           pkg_os_object_io.sp_object_bv_set
           (
               in_session_id,
               in_transaction_id,
               v_debit_trx_id,
               pkg_db_object.gbv_FITrx_AccntingPeriod,
               pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_debit_trx_id)
           );
          v_fichange_process_date     :=     to_char
                                             (
                                                  pkg_db_functions.fn_get_policy_current_date
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_id
                                                  ),
                                                  pkg_os_constant.DragonDateFormatDefault
                                             );

          v_fichange_action        :=   401; -- Info

          v_info_fichange_amount   :=   0;


          v_sum_include            :=   2; -- No

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date||
                    ' Debit FIChange amount: '||v_debit_fichange_amount||
                    ' And Credit FIChange amount: '||v_credit_fichange_amount||
                    ' FIChange Sum Include '||v_sum_include
               );

          end if;

                 v_fichangerefbelongsto_id       :=      pkg_os_object.fn_object_parent_get
                                                        (
                                                            in_session_id,
                                                            in_transaction_id ,
                                                            pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, r_due_item.fitem_id,pkg_db_object.gbv_BillAcc_ParentObjectID)
                                                        );--OSBilling-5405

          --
          -- Call the FIChange creation procedure
          --
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' ...... Create the FIChange object after collecting all the BV values'
               );

          end if;

          pkg_db_object.sp_fichange_create
          (
               in_session_id                     => in_session_id,
               in_transaction_id                => in_transaction_id,
               in_parent_fitransaction_id       => v_debit_trx_id,
               out_fichange_id                  => v_info_fichange_id,
               in_fichange_action               => v_fichange_action,
               in_fichange_action_delta         => v_info_fichange_amount,
               in_fichange_ref_fitem            => r_due_item.fitem_id,
               in_fichange_sum_include          => v_sum_include,
               in_fichange_process_date         => v_fichange_process_date,
               in_fichange_ref_pol              => in_policy_id,
               in_fichange_ref_pol_trx          => in_policy_transaction_id,
               in_fichange_belongs_to           => v_fichangerefbelongsto_id
          );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_info_fichange_id,
               32403946,
               r_due_item.balance_amt
          );

          --
          -- Update the Info FIChange Datamart
          --
          pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_info_fichange_id, v_datamart_tf);

          v_target_fitem_balance_amt := nvl(v_target_fitem_balance_amt,0) + nvl(r_due_item.balance_amt,0);

     end loop;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_debit_trx_id,
          29744046,
          in_policy_transaction_id
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_BillAcctTrxSet_CurrTrx,
          v_debit_trx_id
     );

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billingacccounttrxset_id,
          gbv_FITrxSetTotalAmount,
          v_target_fitem_balance_amt
     );

     --
    --- GCNA-882  Set mail flag
    --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_debit_trx_id,v_datamart_tf);

     pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_billingacccounttrxset_id,v_datamart_tf);


     --
    --- GCNA-882  Set mail flag
    --

      PKG_CS_DB_BILLING.sp_set_mail_flag
               (
                    in_session_id,
                    in_transaction_id,
                    v_billingacccounttrxset_id,
                    io_action_outcome_id
                 );

     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;

     io_action_outcome_id     :=     pkg_os_constant.gOutcome_OK;

end sp_finalrem_batch_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_sch_withdrawal_resp
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_installment_id             in        object.object_id%type
)
return varchar2
as
     v_session_control        pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name         constant system_log.program_name%type        := pkg_name||'fn_get_sch_withdrawal_resp';
     
     v_org_sch_bats_id                  object.object_id%type;
     v_org_bats_make_pay_ws             object.object_id%type;
     v_int_service_request              object.object_id%type;
     v_int_service_response             object.object_id%type;
     v_reponse_make_pay_ws              object.object_id%type;
     v_make_payment_request_ws          object.object_id%type;
     v_payment_provider_batch_resp      object.object_id%type;
     v_response_code                    varchar2(10);
     v_trigger_lp                       varchar2(1) := 'T' ;
     v_check_sch_withdrawal_for_lp      char(1);
     v_exchange_id                      object.object_id%type;
     v_payment_integration_tf           number;
     v_bats_integration_status          char(1);
     v_policy_term                      object.object_id%type;

     v_payment_mode                     number;

     --v_installment_list                 pkg_os_object.t_object_list    :=  pkg_os_object.gnull_object_list;
     --v_installment_index                number;
begin
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' ......Inside Get Sch Withdrawal Req for Installment ID : ' || in_installment_id
          );

     end if;

     
     if in_installment_id is not null
     then

     
          if v_installment_list.EXISTS(in_installment_id)
          then

               return    v_installment_list(in_installment_id);
          else
               



















               v_policy_term  :=   pkg_os_object_search.fn_object_get_parent_of_type
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_installment_id,
                                        PKG_DB_CONSTANT.gObjType_PolicyTerm
                                   );
               v_payment_mode :=   pkg_os_object_io.fn_object_bv_path_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_term,
                                        '32251146.30013046.30010546'
                                   );















               if v_payment_mode not in (2,3)--Credit Card, EFT
               then
                    v_trigger_lp   :=   'T';
                    v_installment_list(in_installment_id)   :=   v_trigger_lp;
                    return v_trigger_lp;
               end if;
               
               v_check_sch_withdrawal_for_lp :=   pkg_os_product.fn_product_property_get
                                                  (
                                                       in_session_id, 
                                                       in_transaction_id,
                                                       null,
                                                       19548
                                                  ); --1 - True/Check  ; 0 - Skip/Dont Check - Default 0
                         
               v_exchange_id  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_session_id,
                                        PKG_DB_CONSTANT.gbv_UserSessionRefConnectedTo --210090
                                   );
               
               v_payment_integration_tf :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_exchange_id,
                                                  PKG_DB_AUTO_FUNDS_TRANSFER.gUsePayProviderIntegration --32855748
                                             );
               
               
               if   v_check_sch_withdrawal_for_lp = 1 and v_payment_integration_tf = 1
               then
               
                    v_org_sch_bats_id        :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_installment_id,
                                                       PKG_DB_AUTO_FUNDS_TRANSFER.gbv_SchPymtInst_CurrSchWithd --32880440 _Reference_Original Scheduled Withdrawal transaction
                                                  );
                                             
                    v_bats_integration_status     :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_org_sch_bats_id,
                                                            32981164--PKG_DB_AUTO_FUNDS_TRANSFER.v_batch_status --32981164;
                                                       );   
                    if v_session_control.gLogging_Full
                    then
                
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' ..v_org_sch_bats_id : ' || v_org_sch_bats_id || ' v_bats_integration_status : ' || v_bats_integration_status
                         );
                
                    end if;   
                    
                    if v_bats_integration_status  =    'R'  or  v_bats_integration_status is null
                    then
                         
                         v_payment_provider_batch_resp :=   pkg_os_object_search.fn_object_11_child_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_int_service_request,
                                                                 3366348 --ObjectType PaymentProviderBatchPaymentResponse                   
                                                            );
                                             
                         v_response_code     :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_payment_provider_batch_resp,
                                                       32822048 --Responce code
                                                  );   
                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' ..v_response_code from bv get : ' || v_response_code
                              );
                         end if;   
                         
                         if   v_response_code     is null
                         then
                              v_trigger_lp   :=   'F';
                         else
                              begin
                                   select
                                        nvl(TRIGGER_LATE_PROCESS,'T')
                                   into
                                        v_trigger_lp
                                   from
                                        db_receipt_reversal_codes
                                   where
                                        codepost = v_response_code
                                   and
                                        payment_type_id in (2,3)--(credit card)
                                   and
                                        rownum <= 1;
                              exception
                                   when others then
                                   v_trigger_lp   :=   'T';
                              end;
                         end if;
                     
                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' ..v_trigger_lp : ' || v_trigger_lp
                              );
                         end if;
                     
                         --CUSTOM CALL
                         v_trigger_lp   :=   nvl( pkg_cs_db_functions.fn_get_sch_withdrawal_resp
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_installment_id,
                                                       v_org_sch_bats_id
                                                  )
                                                  ,v_trigger_lp
                                                 );
               
                    else
                         v_trigger_lp   :=   'T';
                    end if;
               else
                    v_trigger_lp   :=   'T';
               end if;
               v_installment_list(in_installment_id)   :=   v_trigger_lp;
          end if;
     else
           if v_session_control.gLogging_Full
           then
                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     ' in_installment_id is null '
                );
           end if;  
     end if;
     return v_trigger_lp;                              
end fn_get_sch_withdrawal_resp;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End




--LXPRODUCT-306
-- This function will return the Account Late count for customer accounts 
-- If any other billing account is passed - it will return 0
--

function fn_get_ba_late_count
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_billing_account_id             in        object.object_id%type
)
return number
as
     v_session_control        pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name         constant system_log.program_name%type        := pkg_name||'fn_get_ba_late_count';
     v_late_count              number := 0;
     v_account_type_id         number ;

begin
     v_account_type_id         :=pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id , in_billing_account_id, pkg_db_billing_modify.gbv_BillingAccountType) ; 
     
     if v_account_type_id = pkg_db_billing_modify.gBillingAcType_Customer
     then

          select 
               sum(nvl(pkg_os_object_io.fn_object_bv_get(in_Session_id, in_transaction_id , p.policy_id,gbv_PolLatePaymentCount),0) )
          into
               v_late_count
          from 
               dragon_policy p 
          where 
               p.responsible_billing_account = in_billing_account_id;
          
          return v_late_count;
     else 
          return 0;

     end if;

end;


begin
























sp_initialize_late_instr_cache;

end pkg_db_late_process;
/
