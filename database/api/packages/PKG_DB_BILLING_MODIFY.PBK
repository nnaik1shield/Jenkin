create or replace package body pkg_db_billing_modify

-------------
-- $Workfile:   BASE_API.PKG_DB_BILLING_MODIFY.PBK  $

-- $Revision:   1.9  $
--   $Author:   dugupta  $
--     $Date:   10 Feb 2014 18:46:22  $
-------------
as

g_payer_list             PKG_DB_MULTIPAYER.t_payer_tab; --#MP  -- indexed by chosen payment plan ID
g_term_payer_list        PKG_DB_MULTIPAYER.t_payer_tab; --#MP  -- indexed by Customer/Partner ID

-----------------------------------------------------------------------------------------------------------------------------------------------------
--      Package Constants ...
-----------------------------------------------------------------------------------------------------------------------------------------------------

v_current_date                    object_bv_value.business_variable_value%type;
pkg_name                          constant  system_log.program_name%type         :=   'pkg_db_billing_modify.';

-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure show_version
is
begin

     dbms_output.put_line ('$Workfile:   BASE_API.PKG_DB_BILLING_MODIFY.sql  $');
     dbms_output.put_line ('$Revision:   1.8  $');
     dbms_output.put_line ('$Author:   gkaur  $');
     dbms_output.put_line ('$Date:   16 Jan 2014 16:27:00  $');

exception

     when others
     then
          dbms_output.put_line (sqlerrm (sqlcode));

end show_version;



-----------------------------------------------------------------------------------------------------------------------------------------------------
--
-- %NAME
--        sp_load_installment_cache
--
-- %USAGE
--        This procedure loads payment plan installments details
--
-- %ALGORITHM
--        This procedure loads payment plan installments details
--
-- %PARAM    in_session_id                      Session ID
-- %PARAM    in_transaction_id                  Transaction ID
-- %PARAM    in_chosen_payment_plan_id          Chosen Payment Plan ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_load_installment_cache
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_chosen_payment_plan_id          in             object.object_id%type
)
as

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_load_sched_payment_cache';

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_payment_index          number;
     v_installment_object_id            object.object_id%type;
     v_installment_num                  object_bv_value.business_variable_value%type;
     v_actual_due_date                  object_bv_value.business_variable_value%type;
     v_master_key                       varchar2(500);

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Caching existing PaymentPlanScheduledPaymentInstallment objects.'
          );

     end if;

     v_scheduled_payment_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_chosen_payment_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list,
          gbv_ScheduledPayment_num
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Number of PaymentPlanScheduledPayment objects found: '||v_scheduled_payment_list.count
          );

     end if;

   --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     if v_scheduled_payment_list.count > 0
     then
   --OSBILLING-3833 - Merged GCNA code in BaseDEV. End

     v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

     while v_scheduled_payment_index is not null loop

          if pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_scheduled_payment_list(v_scheduled_payment_index), gbv_ScheduledPaymentType ) = 1
          then

               v_installment_object_id     :=     pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gbv_ScheduledRefInstallment
                                                   );

               v_installment_num           :=     pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_installment_object_id,
                                                       gbv_installment_number
                                                   );


               v_master_key                  :=     trim(in_chosen_payment_plan_id||','||v_installment_num);

               g_AllInstallment_cache(v_master_key)     :=     v_installment_object_id;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updating Cache with Master Key: '||v_master_key ||
                         ' Cached PaymentPlanScheduledInstallment Object ID: '||g_AllInstallment_cache(v_master_key)
                    );

               end if;

          end if;

          v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

     end loop;     -- while v_scheduled_payment_index is not null loop

     end if;  -- if v_scheduled_payment_list.count > 0

end sp_load_installment_cache;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
-- %NAME
--        sp_load_schedule_element_cache
--
-- %USAGE
--        This procedure loads the ScheduledPaymentElement Cache based on input chosen payment plan.
--
-- %ALGORITHM
--        This procedure loads the ScheduledPaymentElement Cache based on input chosen payment plan.
--
-- %PARAM    in_session_id                      Session ID
-- %PARAM    in_transaction_id                  Transaction ID
-- %PARAM    in_chosen_payment_plan_id          Chosen Payment Plan ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_load_schedule_element_cache
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_chosen_payment_plan_id          in             object.object_id%type
)
as

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_load_schedule_element_cache';

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_payment_index          number;
     v_installment_id                   object.object_id%type;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_scheduled_element_index          number;
     v_billing_element_id               db_billing_element.db_billing_element_id%type;
     v_policy_image_id                  object.object_id%type;
     v_policy_transaction_id            object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_master_key                       varchar2(500);

begin

     v_policy_image_id           :=     pkg_os_object.fn_object_parent_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              in_chosen_payment_plan_id
                                        );

     v_policy_transaction_id     :=     pkg_os_object.fn_object_parent_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_policy_image_id
                                        );

     v_scheduled_payment_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_chosen_payment_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Found PaymentPlanScheduledPayment objects, count: '||v_scheduled_payment_list.count
          );

     end if;

     if v_scheduled_payment_list.count > 0
     then

          v_scheduled_payment_index := v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null loop


               v_installment_id      :=     pkg_os_object_io.fn_object_bv_get
                                            (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_scheduled_payment_list(v_scheduled_payment_index),
                                                   gbv_ScheduledRefInstallment
                                            );

               --
               -- Search for related ScheduledElements
               --

               v_scheduled_element_list.delete;

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_scheduled_payment_list(v_scheduled_payment_index),
                    gObjType_ScheduledElement,
                    v_scheduled_element_list
               );

               if v_scheduled_element_list.count > 0
               then

                    v_scheduled_element_index := v_scheduled_element_list.first;

                    while v_scheduled_element_index is not null loop

                         v_billing_element_id      :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_scheduled_element_list(v_scheduled_element_index),
                                                             gbv_billing_element_id
                                                        );

                         v_coverage_object_id      :=   pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_scheduled_element_list(v_scheduled_element_index),
                                                             gbv_ScheduledElementRefAsset
                                                        );

                         v_master_key              :=   v_policy_transaction_id||','||
                                                        v_scheduled_payment_list(v_scheduled_payment_index)||','||
                                                        v_installment_id||','||
                                                        v_coverage_object_id||','||
                                                        v_billing_element_id;

                         g_schedule_element_cache(trim(v_master_key)) :=     v_scheduled_element_list(v_scheduled_element_index);

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... CACHING ScheduledPaymentElement ID: '||v_scheduled_element_list(v_scheduled_element_index)||
                                   ' with Master Key: '||v_master_key ||
                                   ' :Cached Element:' || g_schedule_element_cache(v_master_key)
                              );

                         end if;

                         v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

                    end loop; -- end of while loop for v_scheduled_element_index

               end if; -- end of v_scheduled_element_list > 0

               v_scheduled_payment_index := v_scheduled_payment_list.next( v_scheduled_payment_index );

          end loop;   -- while v_scheduled_payment_index is not null loop

     end if;   -- if v_scheduled_payment_list.count > 0


end  sp_load_schedule_element_cache;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_payment_plan_name_get
--
--   %USAGE
--        This function returns the Payment Plan Name from payment_plan for a given payment plan id.
--
--   %ALGORITHM
--        This function returns the Payment Plan Name from payment_plan for a given payment plan id.
--
--   %PARAM     in_payment_plan_id         Payment Plan ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_payment_plan_name_get
(
     in_payment_plan_id                 in        number
)
return varchar2
is

     v_return_value                     payment_plan.payment_plan_name%type := null;

begin

     select
          payment_plan_name
     into
          v_return_value
     from
          payment_plan
     where
          payment_plan_id = in_payment_plan_id;

     return v_return_value;

end fn_payment_plan_name_get;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_curr_payplan_instalmnt_set
--
--   %USAGE
--        When changing payment plan, switch installment objects for old and new payment plans.
--
--   %ALGORITHM
--        For the given payment plan find all its installment objects and set the gbv_Install_IsCrrntPayPlanInst (33820646) BV.
--
--   %PARAM
--     in_chosen_pay_plan_id              in             object.object_id%type,
--     in_instalmnt_CrntPayPlan_TF        in             lookup_list_value.lookup_enum%type
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_curr_payplan_instalmnt_set
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     in_instalmnt_CrntPayPlan_TF        in             lookup_list_value.lookup_enum%type
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_curr_payplan_instalmnt_set';

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_payment_index          number;
     v_installment_object_id            object.object_id%type;

begin

    v_scheduled_payment_list.delete;

    pkg_os_object_search.sp_object_children_of_type_get
    (
         in_session_id,
         in_transaction_id,
         in_chosen_pay_plan_id,
         gObjType_ScheduledPayment,
         v_scheduled_payment_list,
         gbv_actual_due_date,
         false
         -- , gRule_Installment
    );

    if v_session_control.gLogging_Full
    then
        pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
             --
             '............ For all the '||v_scheduled_payment_list.count||' installment object(s) of the payment plan '|| in_chosen_pay_plan_id ||
             ' setting "Is this the current payment plan instalment" BV to '||in_instalmnt_CrntPayPlan_TF ||'...'
        );
    end if;

    if v_scheduled_payment_list.count > 0
    then

         v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

         while v_scheduled_payment_index is not null
         loop

              v_installment_object_id  :=        pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_scheduled_payment_list(v_scheduled_payment_index),
                                                      gbv_ScheduledRefInstallment
                                                 );

             pkg_os_object_io.sp_object_bv_set
             (
                  in_session_id,
                  in_transaction_id,
                  v_installment_object_id,
                  gbv_Install_IsCrrntPayPlanInst,
                  in_instalmnt_CrntPayPlan_TF
             );

             if v_session_control.gLogging_Full
             then
                 pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                      --
                      '............ Done for installment object '||v_installment_object_id ||
                      '. Scheduled Payment ID '||v_scheduled_payment_list(v_scheduled_payment_index)
                 );
             end if;

             v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

        end loop;
    end if;

end sp_curr_payplan_instalmnt_set;


------------------------------------------------------------------------------------------------



--   %NAME
--        sp_full_pay_disc_adj
--
--   %PARAM    in_session_id                      Session ID
--   %PARAM    in_transaction_id                  Transaction ID
--   %PARAM    in_credit_fitransaction_id
--   %PARAM    in_fi_transaction_id
--   %PARAM    in_FullPayDiscountDebitAmt
--   %PARAM    in_FullPayDiscDebitFitemId
--   %PARAM    in_master_policy_id
--   %PARAM    in_policy_transaction_id
--   %PARAM    in_FullPayDiscountCreditAmt
--   %PARAM    in_FullPayDiscCreditFitemId
--   %PARAM    in_PremiumDebitFitemId
--   %PARAM    in_PremiumCreditFitemId
------------------------------------------------------------------------------------------------

procedure sp_fullpay_discount_adj
(
     in_session_id                           in        object.object_id%type,
     in_transaction_id                       in        object.object_id%type,
     in_credit_fitransaction_id              in        object.object_id%type,
     in_fi_transaction_id                    in        object.object_id%type,
     in_FullPayDiscountDebitAmt              in        number,
     in_FullPayDiscDebitFitemId              in        object.object_id%type,
     in_master_policy_id                     in        object.object_id%type,
     in_policy_transaction_id                in        object.object_id%type,
     in_FullPayDiscountCreditAmt             in        number,
     in_FullPayDiscCreditFitemId             in        object.object_id%type,
     in_PremiumDebitFitemId                  in        object.object_id%type,
     in_PremiumCreditFitemId                 in        object.object_id%type
)
is
     --   OSBILLING-6566
     v_session_control        pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name         constant system_log.program_name%type      :=     pkg_name||'sp_full_pay_disc_adj';

     v_datamart_tf                      char(1)                  :=   'T';
     v_FullPayDiscDebitFiChangeId       object.object_id%type    :=   null; --OSBILLING-6566
     v_FullPayDiscCreditFiChangeId      object.object_id%type    :=   null; --OSBILLING-6566
     v_PremiumDebitFiChangeId           object.object_id%type    :=   null; --OSBILLING-6566
     v_PremiumCreditFiChangeId          object.object_id%type    :=   null; --OSBILLING-6566
begin
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' Settling Full Pay Discount for Inst'
               ||' in_FullPayDiscountCreditAmt: '  || in_FullPayDiscountCreditAmt
               ||' in_FullPayDiscDebitFitemId: '   || in_FullPayDiscDebitFitemId
               ||' in_FullPayDiscCreditFitemId: '  || in_FullPayDiscCreditFitemId
               ||' in_PremiumDebitFitemId: '       || in_PremiumDebitFitemId
               ||' in_PremiumCreditFitemId: '      || in_PremiumCreditFitemId
          );
     end if;

     if in_FullPayDiscountCreditAmt <> 0 or in_FullPayDiscountDebitAmt <> 0
     then
          --negative amount fichange to settle Fullpaydiscount
          pkg_db_object.sp_fichange_create
          (
              in_session_id                  =>  in_session_id,
              in_transaction_id              =>  in_transaction_id,
              in_parent_fitransaction_id     =>  nvl(in_credit_fitransaction_id,in_fi_transaction_id),
              out_fichange_id                =>  v_FullPayDiscDebitFiChangeId,
              in_fichange_action             =>  gFIChangeAction_Change,
              in_fichange_action_delta       =>  (-1) * in_FullPayDiscountDebitAmt,
              in_fichange_ref_fitem          =>  in_FullPayDiscDebitFitemId,
              in_fichange_sum_include        =>  gFIChange_Yes,
              in_fichange_ref_pol            =>  in_master_policy_id,
              in_fichange_ref_pol_trx        =>  in_policy_transaction_id
          );

           --negative amount fichange to settle Fullpaydiscount
          pkg_db_object.sp_fichange_create
          (
              in_session_id                  =>  in_session_id,
              in_transaction_id              =>  in_transaction_id,
              in_parent_fitransaction_id     =>  nvl(in_credit_fitransaction_id,in_fi_transaction_id),
              out_fichange_id                =>  v_FullPayDiscCreditFiChangeId,
              in_fichange_action             =>  gFIChangeAction_Change,
              in_fichange_action_delta       =>  (-1) * in_FullPayDiscountCreditAmt,
              in_fichange_ref_fitem          =>  in_FullPayDiscCreditFitemId,
              in_fichange_sum_include        =>  gFIChange_Yes,
              in_fichange_ref_pol            =>  in_master_policy_id,
              in_fichange_ref_pol_trx        =>  in_policy_transaction_id
          );

          pkg_db_object.sp_fichange_create
          (
              in_session_id                  =>  in_session_id,
              in_transaction_id              =>  in_transaction_id,
              in_parent_fitransaction_id     =>  nvl(in_credit_fitransaction_id,in_fi_transaction_id),
              out_fichange_id                =>  v_PremiumDebitFiChangeId,
              in_fichange_action             =>  gFIChangeAction_Change,
              in_fichange_action_delta       =>  in_FullPayDiscountDebitAmt,
              in_fichange_ref_fitem          =>  in_PremiumDebitFitemId,
              in_fichange_sum_include        =>  gFIChange_Yes,
              in_fichange_ref_pol            =>  in_master_policy_id,
              in_fichange_ref_pol_trx        =>  in_policy_transaction_id
          );

          pkg_db_object.sp_fichange_create
          (
              in_session_id                  =>  in_session_id,
              in_transaction_id              =>  in_transaction_id,
              in_parent_fitransaction_id     =>  nvl(in_credit_fitransaction_id,in_fi_transaction_id),
              out_fichange_id                =>  v_PremiumCreditFiChangeId,
              in_fichange_action             =>  gFIChangeAction_Change,
              in_fichange_action_delta       =>  in_FullPayDiscountCreditAmt,
              in_fichange_ref_fitem          =>  in_PremiumCreditFitemId,
              in_fichange_sum_include        =>  gFIChange_Yes,
              in_fichange_ref_pol            =>  in_master_policy_id,
              in_fichange_ref_pol_trx        =>  in_policy_transaction_id
          );

          --
          -- Update the FItem Datamart
          --

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_FullPayDiscDebitFitemId,
               v_datamart_tf
          );
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_PremiumDebitFitemId,
               v_datamart_tf
          );
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_FullPayDiscCreditFitemId,
               v_datamart_tf
          );
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               in_PremiumCreditFitemId,
               v_datamart_tf
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Updated the Datamart of FIChange and FItem Objects'
               );
          end if;
     end if;

end sp_fullpay_discount_adj;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_financial_trx_create
--
--   %USAGE
--          This procedure is the primary entry-point into this package.
--
--        For a particular policy transaction, this procedure creates the FITransaction and  FIChange Objects based on the chosen Payment Plan,
--        ScheduledPayment and ScheduledPaymentElements.
--
--          This also creates  Receivables under the appropriate BillingAccount
--
--   %ALGORITHM
--        This procedure creates a FITransaction and  FIChange Objects based on the chosen Payment Plan,
--        ScheduledPayment and ScheduledPaymentElements. This also creates the Receivables under the BillingAccount
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_trx_id              Policy Transaction ID
--   %PARAM    io_action_outcome_id          Action Outcome Id
--   %PARAM    in_current_date_time          Calling TimeStamp
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_validate_schedules
--
--   %USAGE
--          This procedure verifies whether schedules are generated .
--          for a new term transaction. If not, it will create schedules 
--
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_trx_id              Policy Transaction ID
--   %PARAM    io_action_outcome_id          Action Outcome Id
--   %PARAM    in_current_date_time          Calling TimeStamp
----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_validate_schedules
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_trx_id                   in             object.object_id%type,
     in_policy_image_id                 in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_scheduled_payment_list          in  out        pkg_os_object.t_object_list
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_validate_schedules';
     v_schedule_created_tf              char := 'F';
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_creator_poltrns          object.object_id%type;
     v_change_amount                    number ;
     v_trx_type                         number;
     v_new_term                         number;
     v_action_outcome_id                outcome.outcome_id%type;  --OSPRODUCT-15833
begin


     select 
        nvl(policy_trx_premium_chg ,0), pt.policy_trx_type_id
     into
        v_change_amount, v_trx_type
     from 
        dragon_policy_trx pt 
     where 
        pt.policy_trx_id= in_policy_trx_id;
      
     if v_change_amount <> 0 
     then

          if io_scheduled_payment_list.count > 0
          then
               
               v_scheduled_payment_index := io_scheduled_payment_list.first;

               while v_scheduled_payment_index is not null
               loop -- OSPRODUCT-11954
                                        
                    v_scheduled_element_list.delete;

                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         io_scheduled_payment_list(v_scheduled_payment_index),-- OSPRODUCT-10453
                         gObjType_ScheduledElement,
                         v_scheduled_element_list
                    );
                    
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... For Scheduled Payment Object ID: '||
                              io_scheduled_payment_list(v_scheduled_payment_index)
                              ||', number of PaymentPlanScheduledPaymentElement objects found: '
                              ||v_scheduled_element_list.count
                         );

                    end if;

                    v_scheduled_element_index := v_scheduled_element_list.first;
                                        
                    while v_scheduled_element_index is not null
                    loop
                                                  
                         v_element_creator_poltrns :=  pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_scheduled_element_list(v_scheduled_element_index),
                                                            gbv_ElementRefCreatorPolTrns
                                                        );

                         if v_element_creator_poltrns = in_policy_trx_id then
                              
                              v_schedule_created_tf := 'T';

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '......... For PaymentPlanScheduledPaymentElement Object ID: '
                                        ||v_scheduled_element_list(v_scheduled_element_index)
                                     
                                   );

                              end if;
                              
                              exit; --Exit the loop

                         end if; -- if the element in question created by the current transaction ...

                         v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

                    end loop; 

               v_scheduled_payment_index := io_scheduled_payment_list.next( v_scheduled_payment_index );
               end loop;

          end if;

          if v_schedule_created_tf = 'F' 
          then
               
               v_new_term := pkg_db_payplan_modify.fn_trx_starts_new_term(v_trx_type);
               
               if v_session_control.gLogging_Full
               then
                    
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Generating the schedule before binding' ||
                         ' Is this a New Term: ' || v_new_term
                    );
               
               end if;                    
                     
               pkg_db_payplan_modify.sp_payment_schedule_generate
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_image_id,
                    --pkg_os_constant.gBoolean_True,
                    v_new_term,
                    in_chosen_pay_plan_id,
                    sysdate,
                    null,
                    io_action_outcome_id => v_action_outcome_id -- OSPRODUCT-15833
                              
               );

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_chosen_pay_plan_id,
                    gObjType_ScheduledPayment,
                    io_scheduled_payment_list,
                    gbv_actual_due_date
               );

          end if;

     end if;

end sp_validate_schedules;

procedure sp_financial_trx_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_trx_id                   in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null,
     in_override_ba_id                  in             object.object_id%type default null
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_financial_trx_create';
     v_product_id                       db_payment_plan_detail.pd_product_id%type;
     v_filing_id                        db_payment_plan_detail.pd_filing_id%type;
     
     -- Billing Account
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_customer_billing_acc_id          object.object_id%type;
     v_agency_billing_acc_id            object.object_id%type := null;
     v_billing_account_id               object.object_id%type;
     
     -- Policy Tree
     v_master_policy_id                 object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_current_term                     object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_basis_transaction_id             object.object_id%type;
     v_basis_ptp_id                     object.object_id%type;     
     v_basis_trx_image_id               object.object_id%type;
     v_to_be_rb_trx_id                  object.object_id%type;
     v_rb_trx_coverages                 object.object_id%type;
     v_payer_id                         object.object_id%type;
     v_payer_billingacc_id              object.object_id%type; -- UTPRODUCT-5009
     
     -- Other
     v_policytrx_schd_pay_com           object.object_id%type    :=   null; --OSPRODUCT-2737
     v_fi_change_id                     object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_currency                         number; -- OSPRODUCT-12390
     
     -- Transaction specific
     v_policy_transaction_type          lookup_list_value.lookup_enum%type;
     v_policy_trx_effective_date        object_bv_value.business_variable_value%type;
     v_policy_transaction_sub_type      lookup_list_value.lookup_enum%type;
     v_transaction_installment_type     lookup_list_value.lookup_enum%type;
     v_rb_policy_transaction_type       lookup_list_value.lookup_enum%type;--OSBILLING-5525
     v_policy_trx_subtype_endr_type     lookup_list_value.lookup_enum%type; --OSBILLING-1537 change
     v_subtype_lookup_list_id           number := pkg_os_bv.fn_business_variable_row(gbv_PolicyTrx_EndSubType).lookup_list_id;
     v_type_lookup_list_id              number := pkg_os_bv.fn_business_variable_row(pkg_os_constant_bv.gbv_PolicyTranType).lookup_list_id;     
     -- [RR] New Dev
     v_policy_trx_rb_seq                number;
     v_policy_trx_rf_seq                number;
     v_policy_trx_generic_instance      number;
     v_policy_trx_object_state          number;
     v_policy_trx_seq_number            number;
           
     -- Payment Plan
     v_chosen_pay_plan_id               object.object_id%type;
     v_modified_pay_plan_id             object.object_id%type;--OSBILLING-7448
     v_mod_pay_plan_id                  object.object_id%type;
     v_chosen_payment_plan              object.object_id%type; 
     v_modified_payment_plan            object.object_id%type;
     v_earlier_payplan_id               object.object_id%type;
     v_basis_trx_chosenPayPlanId        object.object_id%type;
     v_basis_trx_chosenPayPlanMDId      object.object_id%type;
     v_basis_pay_plan                   object.object_id%type;
     
     -- Payment Plan MD
     v_basis_payplan_mdid               payment_plan.payment_plan_id%type;
     v_basis_pay_plan_md_row            pkg_db_payplan_modify.getPaymentPlanList%rowtype;
     v_payment_plan_md_id               payment_plan.payment_plan_id%type;     
     v_payment_plan_md_row              pkg_db_payplan_modify.getPaymentPlanList%rowtype;
     
     -- Batch
     v_billing_acc_trx_set_id           object.object_id%type;
     v_set_type                         object_bv_value.business_variable_value%type;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_date_posted                      object_bv_value.business_variable_value%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;
     v_billing_acc_trx_description      object_bv_value.business_variable_value%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_rollback_batrxset_id             object.object_id%type;
     v_fi_trx_debit_id                  object.object_id%type;
     v_fi_trx_credit_id                 object.object_id%type;
     v_fi_trx_withdrawal_id             object.object_id%type;
     v_element_creator_poltrns          object.object_id%type;--Durg28
     
     -- Installments
     v_installment_object_id            object.object_id%type;
     v_prev_installment_id              object.object_id%type;
     v_current_stub_id                  object.object_id%type;
     v_installment_count                number;
     v_scheduled_payment_count          number;
     v_remaining_installments           number := 0;
     v_installment_start_number         number;
     v_installment_type                 object_bv_value.business_variable_value%type;
     v_installment_number               object_bv_value.business_variable_value%type;
     v_installment_no_calculated        number    :=   0;
     v_installment_due_date             object_bv_value.business_variable_value%type;
     v_install_withdrawal_date          object_bv_value.business_variable_value%type;
     v_installment_issue_date           object_bv_value.business_variable_value%type;
     v_installment_actual_date          object_bv_value.business_variable_value%type;
     v_installment_actual_end           object_bv_value.business_variable_value%type;
     v_term_install_withdrwl_date       object_bv_value.business_variable_value%type;
     v_scheduled_payment_type           number;
     
     -- Policy level flags
     v_policy_billing_method            number;
     v_policy_payment_method            number;
     v_policy_number                    object_bv_value.business_variable_value%type;
     v_policy_billed_to                 number;
     v_preferred_payment_day            integer;     
     v_use_existing_plan                number;
     v_process_mod_PayPlan_ind          number;
     v_curr_mod_payplan_ind             number;
     v_process_modified_PayPlanInd      object.object_id%type := null;
     v_policy_financials_required       object_bv_value.business_variable_value%type; --OSBILLING-1866 change
     v_policyterm_billing_method        number;
     v_multipayer_enabled_tf            number;
     v_bill_plan_enabled_tf             number;
     
     -- List
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_remaining_inst_list              pkg_os_object.t_object_list;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_fichange_list                    pkg_os_object.t_object_list;
     v_term_pymntsch_list               pkg_os_object.t_object_list;
     v_payplan_list                     pkg_os_object.t_object_list;
     v_basis_payer_list                 pkg_db_multipayer.t_payer_tab;
     v_basis_payer_list1                pkg_db_multipayer.t_payer_tab; --OSBILLING-6782
     v_dm_value_table                   t_obj_column_value_tab;
     
     -- Index
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_remaining_inst_index             number;
     v_payplan_idx                      object.object_id%type;
     v_term_pymntsch_index              number;
     v_basis_idx                        long;
     v_idx                              long;
     
     -- Flag and count variables
     v_create_debit_trx                 char(1) := 'F';
     v_create_credit_trx                char(1) := 'F';
     v_create_debit_flag                number;
     v_create_credit_flag               number;
     v_datamart_tf                      char(1) := 'T';
     v_exists_tf                        boolean;
     v_override_process_tf              char := 'F';
     v_stub_sequence_number             number;
     v_tot_change_amount                number    :=   0;
     v_count_rec                        number    :=   0;
     v_financial_created_count          number; --VAULTDEV-10672

     -- Exceptions
     term_not_created                   EXCEPTION;
     fi_already_created                 EXCEPTION;
     
     -- Constant    
     gTrxSubType_CommissionAdj          constant PD_TRANSACTION_SUB_TYPE.PD_TRANSACTION_SUB_TYPE_id%type := 23;
     gChangeBillingMethod               constant lookup_list_value.lookup_enum%type                 :=  2;

     --OSPRODUCT-7172
     v_basis_multipayer_enabled_tf      number;
     
     -- OSPRODUCT-17647
     v_policytrxCostchange              number; 
     
	 -- OSPRODUCT-23559
     -- v_rollforward_trx_id               object.object_id%type; --LXPRODuct-502
	 

     -- Cursors
     cursor c_fichange (in_batrxset_id object.object_id%type , v_pt_to_be_rb_id  object.object_id%type )--OSBILLING-7068
     is
          select
               fic.fitem_id,fic.action_delta,fic.action,fic.sum_include_tf
          from
               dragon_fichange fic
          where
               fic.billingaccounttrxset_id = in_batrxset_id
          and
               fic.action_id = gFIChangeAction_Change
          and
               fic.policy_transaction_id = nvl(v_pt_to_be_rb_id,fic.policy_transaction_id) --OSBILLING-7068
		--OSPRODUCT-4664 Commented below
		--          and
		--               fic.installment is not null --OSPRODUCT-3703
     ;

     cursor c_fitem (in_batrxset_id object.object_id%type , v_pt_to_be_rb_id  object.object_id%type )--OSBILLING-7068
     is
          select
               fi.fitem_id,fi.initial_amount,fi.fitem_category_id,fi.fitem_type_id,fi.BILLING_ACCOUNT_ID,fi.fitem_sub_category_id,fi.billing_element_md_id --OSPRODUCT-3079
          from
               dragon_fitem fi
          where

               fi.creator_fitransactionset_id    = in_batrxset_id
               --  and
               --fi.fitem_type_id   = gFItem_Debit -- GCNA-2547
          and
               ( fi.fitem_sub_category_id =  gFItem_SubCat_PayChngCredit
               or
               fi.installment_id is null -- OSBILLING-5167
               )
          and
               fi.policy_transaction_id = nvl(v_pt_to_be_rb_id,fi.policy_transaction_id)--OSBILLING-7068
          ;

     cursor c_fitem_debit (in_installment_id object.object_id%type)
     is
          select
               *
          from
               dragon_fitem fi
          where
               fi.installment_id = in_installment_id
          -- OSPRODUCT-8770
          /*and
               fi.fitem_type_id = gFItem_Debit*/
     ;

     cursor c_ba_schd_payment_components (in_billing_account_id object.object_id%type, v_pt_id object.object_id%type)
     is
          select 
               dbp.ba_payment_component_id
          from 
               dragon_ba_paymentcomponent dbp
          where 
               dbp.billing_account_id = in_billing_account_id
          and
               dbp.POLICY_TRANSACTION_ID  =  v_pt_id --OSPRODUCT-2737
          ;

     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*v_sid varchar2(100);
     v_return number;
     v_name varchar2(100) := 'sp_financial_trx_create'; */
     -- End Debug code variables for profiling  
begin
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*select sys_context('USERENV','SID') into v_sid from dual;
     DBMS_HPROF.START_PROFILING('PLSHPROF_DIR',v_name||v_sid);*/
     -- End Debug code to start profiling
         
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. Entering the financial transaction creation process for Policy Transaction ID: '|| in_policy_trx_id
               /*|| ' Financials required:' ||v_policy_financials_required*/ -- [RR] commented as the bv get is commented
          );

     end if;
     
     -- VAULTDEV-10672
     -- @@@VG: What is this bullshit global doing here? --- creating a list of billing accounts that are impacted in this flow and updating datamart of these BAs
     --
     -- [RR] Moved to start
     g_billing_account_list.delete;
     
     -- Will popullate to use for Fitem DM update
     -- [RR] New dev
     v_dm_value_table.delete;

     --
     --   If there is no financial impact, for instance if there zero debits or credits, then simply exit gracefully ...
     --
     --OSBILLING 5615  start(commented the block below)
     /*
     if  v_policy_financials_required is not null and  v_policy_financials_required = pkg_os_constant.gBoolean_No
     then

          if v_session_control.gLogging_Full
            then

                 pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '|||||| Financial Transaction creation skipped'
                 );

            end if;
            --2017-09-19 Cheryl change out from ok to gOutcome_UserInputInvalid (using an existing outcome)
            -- to not do the post billing process
          io_action_outcome_id := pkg_os_constant.gOutcome_UserInputInvalid;

          return;

     end if;
     */
     --OSBILLING 5615  end  


     --
     -- VAULTDEV-10672 Keerthi 28/08 Verify whether the financials are already created for the input Policy Transaction
     --
     
     -- Get the batch
     -- [RR] Added block
     begin
          
          v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get  
                                      (
                                           in_session_id, 
                                           in_transaction_id, 
                                           in_policy_trx_id, 
                                           gbv_PolTrxRefBillingAccTrxSet 
                                      );


          if v_billing_acc_trx_set_id is not null
          then
               
               -- Verify if there are financials created for this BillingAccountTransactionSet alraedy
               select
                  count(1)
               into
                  v_financial_created_count
               from
                  dragon_fitem
               where
                  creator_fitransactionset_id = v_billing_acc_trx_set_id ;

               -- Check if the process flag is overridden
               v_override_process_tf := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_acc_trx_set_id,
                                             34200946
                                        );

               if v_financial_created_count > 0 and v_override_process_tf = 'F'
               then

                    if v_session_control.gLogging_Full
                    then

                           pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '|||||| Financials are already created for this policy Transaction '|| in_policy_trx_id ||
                                ' Financials creation is skipped'
                           );
                           -- OSBILLING 5615(raised the exception when financial already created)
                           raise fi_already_created ;
                           
                    end if;

                    -- Not to perform post billing process
                    io_action_outcome_id := pkg_os_constant.gOutcome_UserInputInvalid;

                    return;

               end if;
               
          end if;
          
          --[RR] Added the else condition to create a new batch.
          -- Being done later so moved here to restructure 
          /*else -- create a new batch

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjType_BillingAccountTrxSet,
                    v_billing_account_id,
                    v_billing_acc_trx_set_id
               );
               
               --
               -- Set the Reference from PolicyTransaction to BillingAccountTransactionSet  Object
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_trx_id, -- pol trx id
                    gbv_PolTrxRefBillingAccTrxSet, -- 31866546
                    v_billing_acc_trx_set_id -- Billingaccnt trx id
               );
               
               --
               -- Set the reference from BillingAccountTransactionSet to Policy Transaction via "Associated Policy Transaction" BV (32502146)
               --
               pkg_os_object_io.sp_object_bv_set
               (
                   in_session_id,
                   in_transaction_id,
                   v_billing_acc_trx_set_id,
                   gbv_Batrxset_RefAsscPolicyTrx,
                   in_policy_trx_id
               );
               
               if v_session_control.gLogging_Full then                

                   pkg_os_logging.sp_log
                   (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Created BillingAccountTransactionSet Object ID: '||v_billing_acc_trx_set_id
                   );

               end if;

          end if;*/
     
     end;
     
     -- Get transaction specific details
     -- [RR] Get from datamart, retrieved other values as well that are needed later
     begin
          
          -- [RR] Retrived to avaoid multiple BV gets
          v_basis_transaction_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_policy_trx_id,
                                         pkg_os_policy_transaction.gbv_PolicyTrxBasisTransaction
                                    );
          
          select
               pt.policy_trx_type_id,
               pt.Policy_trx_Subtype_Id,
               pt.ptp_id,
               to_char(pt.policy_trx_eff_date,pkg_os_constant.DragonDateFormatDefault),
               pt.policy_id,
               pt.policy_term_id,
               pt.policy_trx_rb_seq,
               pt.policy_trx_rf_seq,
               pt.policy_trx_generic_instance,
               pt.policy_trx_object_state_id,
               pt.policy_trx_seq_num
          into
               v_policy_transaction_type,
               v_policy_transaction_sub_type,
               v_policy_image_id,
               v_policy_trx_effective_date,
               v_master_policy_id,
               v_policy_term_id,
               v_policy_trx_rb_seq,
               v_policy_trx_rf_seq,
               v_policy_trx_generic_instance,
               v_policy_trx_object_state,
               v_policy_trx_seq_number
          from
               dragon_policy_trx pt
          where
               pt.policy_trx_id = in_policy_trx_id;
               
     exception
          
          when no_data_found then
               null;     
                                                  
     end;
     
     
     -- OSPRODUCT-3351 Added the block
     begin
          
          if v_policy_transaction_type is null then
          
               v_policy_transaction_type := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_policy_trx_id,
                                                            pkg_os_constant_bv.gbv_PolicyTranType
                                                       );
                                                  
          end if;
          
          if v_policy_transaction_sub_type is null then

               v_policy_transaction_sub_type := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_policy_trx_id,
                                                       gbv_PolicyTrx_EndSubType --26542407
                                                  );
                                                  
          end if;
          
          if v_policy_image_id is null then 
                                                      
               v_policy_image_id := pkg_os_object_io.fn_object_bv_get
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         in_policy_trx_id,
                                         gbv_PolicyTrxRefCoverages
                                    );
                               
          end if;
          
          if v_policy_trx_effective_date is null then  
                                         
               v_policy_trx_effective_date := pkg_os_object_io.fn_object_bv_get
                                              (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   in_policy_trx_id,
                                                   pkg_os_constant_bv.gbv_PolicyTranEffectiveDate
                                              );
                                         
          end if;
          
          if v_master_policy_id is null then
               
               v_master_policy_id := pkg_os_object_search.fn_object_get_parent_of_type
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          in_policy_trx_id,
                                          pkg_os_constant.gObjType_Policy
                                     );
                                
          end if;
          
          if v_policy_term_id is null then
                                          
               v_policy_term_id := pkg_os_object_io.fn_object_bv_get 
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_trx_id,
                                        gbv_PolicyTrxRefPolicyTerm
                                   );
                              
          end if;
          
          if v_session_control.gLogging_Full
          then
               
               pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '.. Transaction Details: ' 
                      || '.. Transaction Type: '            || v_policy_transaction_type
                      || '.. Transaction Sub type: '        || v_policy_transaction_sub_type
                      || '.. Policy Image ID: '             || v_policy_image_id
                      || '.. Policy Term ID: '              || v_policy_term_id --OSBILLING-6782
                      || '.. Master Policy ID: '            || v_master_policy_id 
                      || '.. Transaction Effective Date: '  || v_policy_trx_effective_date
                      
                 );
                 
          end if;
          
     end;
     
     -- [RR] Commented. Moved to datamart
     /*-- Transaction type
     v_policy_transaction_type := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          in_policy_trx_id,
          pkg_os_constant_bv.gbv_PolicyTranType
     );

     -- Transaction sub type
     v_policy_transaction_sub_type := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          in_policy_trx_id,
          gbv_PolicyTrx_EndSubType
     );*/

     if v_policy_transaction_type is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Transaction Type is NULL for Policy Transaction ID:'||in_policy_trx_id
          );

          raise no_data_found;

     end if;

     -- Get the policy image for rollback trx
     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
     then
          
          v_to_be_rb_trx_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_trx_id,
                                    pkg_os_policy_transaction.gbv_PolicyTrxRollsBckTrx
                               );
                               
          --[RR] Try getting from the datamart
          begin
               select
                    pt.ptp_id,
                    pt.policy_trx_type_id,
                    pt.policy_trx_subtype_id
               into
                    v_policy_image_id,
                    v_rb_policy_transaction_type,
                    v_policy_trx_subtype_endr_type
               from
                    dragon_policy_trx pt
               where
                    pt.policy_trx_id = v_to_be_rb_trx_id;
                    
          exception
               
               when no_data_found then
                    
                    -- OSPRODUCT-3351 Retrieval moved below
                    null;
                                                       
          end;
          
          -- OSPRODUCT-3351 Added block
          begin
               
               if v_policy_image_id is null then
          
                    v_policy_image_id := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_to_be_rb_trx_id,
                                              gbv_PolicyTrxRefCoverages
                                         );
                                         
               end if;
               
                                                                                     
               -- Get bill plan and multipayer flag
               -- OSPRODUCT-4311 Re-positioned to include Rollback transaction policy image
               begin
                    
                    v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                               ( 
                                                    in_session_id, 
                                                    in_transaction_id, 
                                                    v_policy_image_id, 
                                                    pkg_db_multipayer.gbv_MultiPayerEnabled_PTP --32704624
                                               ); 
                                               
                    v_bill_plan_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                               ( 
                                                    in_session_id, 
                                                    in_transaction_id, 
                                                    v_policy_image_id, 
                                                    pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF --32704624
                                               ); 
                                               
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                           (
                                in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '.. Bill Plan Enabled:  '  || v_bill_plan_enabled_tf ||
                                '.. Multipayer Enabled: '  || v_multipayer_enabled_tf
                           );

                    end if;
                                               
               end;
               
               
               if v_rb_policy_transaction_type is null then
                                         
                    v_rb_policy_transaction_type := pkg_os_object_io.fn_object_bv_get ---OSBILLING-5525
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_to_be_rb_trx_id,
                                                            pkg_os_constant_bv.gbv_PolicyTranType
                                                       );
                                                       
               end if;
               
               if v_policy_trx_subtype_endr_type is null then
                    
                    v_policy_trx_subtype_endr_type :=  pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_to_be_rb_trx_id,
                                                            gbv_PolicyTrx_EndSubType
                                                       ); --OSBILLING-5525
                                                       
               end if;
               
          end;
                                             
          -- [RR] Rewrritten to make more sense
          if v_session_control.gLogging_Full then               
            
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... For input policy trx '            || in_policy_trx_id   || 
                    '... Transaction to be rolled-back '   || v_to_be_rb_trx_id  ||
                    '... Policy Image to be rolled-back '  ||  v_policy_image_id || 
                    '... Transaction type of the the trx to be rolled-back ' || v_rb_policy_transaction_type ||
                    '... Subtype of the trx to be rolled-back '              || v_policy_trx_subtype_endr_type
               );

          end if;
		  
          /*-- LXPRODUCT-502
          -- OSPRODUCT-23559 Reverted
          if v_rb_policy_transaction_type  = pkg_db_object.gBillTrxType_Reinstatement
          then

              if v_session_control.gLogging_Full then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '... This is rollback of reinstatement so skipping financials '
                   );

              end if;

             return;


          elsif  v_rb_policy_transaction_type in (pkg_db_object.gBillTrxType_CancelInsured,pkg_db_object.gBillTrxType_CancelNonPay)
          then

              -- verify if this cancellation got reinstatement, if yes skip the financials and return
              if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, (pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_to_be_rb_trx_id ,gbv_PolTrxRefBillingAccTrxSet)) ,gbv_BillAccTrxSet_RefReinstmt ) is not null
                 or
                 pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_to_be_rb_trx_id ,gbv_PolTrxRefBillingAccTrxSet) is null -- Cancellation didnot create financials -- 21860
              then

                if v_session_control.gLogging_Full then

                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '... This is rollback of cancellation that is already reinstated  so skipping financials '
                     );

                end if;

                 return;

              end if;

          end if;*/
          -- LXPRODUCT-502
		  

     else
          
          -- Get bill plan and multipayer flag
       -- OSPRODUCT-4311 Re-positioned    
          begin
                    
               v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                          ( 
                                               in_session_id, 
                                               in_transaction_id, 
                                               v_policy_image_id, 
                                               pkg_db_multipayer.gbv_MultiPayerEnabled_PTP --32704624
                                          ); 
                                               
               v_bill_plan_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                          ( 
                                               in_session_id, 
                                               in_transaction_id, 
                                               v_policy_image_id, 
                                               pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF --32704624
                                          ); 
                                               
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           '.. Bill Plan Enabled:  '  || v_bill_plan_enabled_tf ||
                           '.. Multipayer Enabled: '  || v_multipayer_enabled_tf
                      );

               end if;
                                               
          end;
                               
          
          -- [RR] Moved to datamart retrival section   
          /*v_policy_image_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_trx_id,
                                    gbv_PolicyTrxRefCoverages
                               );

          v_policy_trx_subtype_endr_type := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_policy_trx_id,
                                                 gbv_PolicyTrx_EndSubType
                                            ); --OSBILLING-5525*/
          
          -- OSPRODUCT-3351 BV initialized
          v_policy_trx_subtype_endr_type := v_policy_transaction_sub_type;
          
          -- Get multipayer flag          
          -- OSPRODUCT-2093 start
          v_chosen_payment_plan := pkg_os_object_io.fn_object_bv_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_policy_image_id,
                                       gbv_PolicyRefChosenPlan
                                   );

          v_modified_payment_plan := nvl(pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            gbv_PolicyRefModPayPlan
                                        ), v_chosen_payment_plan);
                                        
                                        
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '..Chosen Pay Plan: ' || v_chosen_payment_plan ||
                    '..Modified Pay Plan: ' || v_modified_payment_plan
               );
          end if;
                                        
          --OSPRODUCT-2281
          --if nvl(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_image_id, 32704624), 2) = 2 then
          -- [RR] removed bv get. Retrieving the value at the beginning
          if nvl(v_multipayer_enabled_tf, g_No) = g_No then -- [RR] constant added to spec
               
               -- Policy is single payer   
               if v_modified_payment_plan is null
                  or
                  v_chosen_payment_plan = v_modified_payment_plan 
               then
               
                    pkg_os_object_io.sp_object_bv_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_policy_image_id,
                        gbv_PTP_ProcessModPayPlanInd,
                        g_No
                    );
                    
                    -- [RR] Setting the BV also to avoid BV get later if the code was in this block
                    v_process_modified_PayPlanInd := g_No;
                    
                    if v_session_control.gLogging_Full
                    then
                         
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. PTP Mod Pay Plan Indicator: ' || v_process_modified_PayPlanInd
                         );
                         
                    end if;
                    
               end if;
               
          end if;
          
     end if;
     
     -- Get policy details
     -- [RR] Get from datamart, retrieved other values as well that are needed later
     -- [RR] Commenting below bvs get as already retrieved
     -- v_policy_trx_subtype_endr_type :=  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_policy_trx_id,gbv_PolicyTrx_EndSubType);
     -- v_policy_trx_effective_date    :=  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_policy_trx_id,pkg_os_constant_bv.gbv_PolicyTranEffectiveDate);
     -- v_master_policy_id             :=  pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,in_transaction_id,in_policy_trx_id,pkg_os_constant.gObjType_Policy);
     -- v_policy_term_id               :=  pkg_os_object_io.fn_object_bv_get (in_session_id,in_transaction_id,in_policy_trx_id,gbv_PolicyTrxRefPolicyTerm);
     
     -- [RR] Getting below BVs from policy datamart
     -- v_product_id                   :=  pkg_os_product.fn_object_product_get(in_session_id,in_transaction_id,v_policy_image_id);
     -- v_policy_billing_method        :=  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_image_id,gbv_PolicyBillingMethod);
     -- v_policy_payment_method       :=  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_policy_image_id, gbv_PolicyPaymentMethod );
     -- v_ultimate_customer_id        :=  pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,in_transaction_id,v_policy_image_id,pkg_os_constant.gObjType_Customer);
     
     begin
          
          select
               p.customer_id,
               --p.responsible_billing_account, -- OSPRODUCT-3351 Do a BV get
               p.policy_down_payment_mode,
               p.Policy_Product_Id,
               --p.billing_method_id, -- OSPRODUCT-3351 Do a BV get
               p.policy_number
          into
               v_ultimate_customer_id,
               --v_billing_account_id,
               v_policy_payment_method,
               v_product_id,
               --v_policy_billing_method,
               v_policy_number       
          from
               dragon_policy p
          where
               p.policy_id = v_master_policy_id;
               
     exception
          
          when no_data_found then
               
               null;
     
     end;
     
     -- OSPRODUCT-3351 Get the Policy Billing Method
     if v_policy_billing_method is null then
     
          v_policy_billing_method := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policy_image_id,
                                          gbv_PolicyBillingMethod
                                     );
                                     
     end if;
     
     if v_policy_payment_method is null then
               
          v_policy_payment_method := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_policy_image_id, 
                                          gbv_PolicyPaymentMethod 
                                     );
                                
     end if;
     
     if v_ultimate_customer_id is null then
          
          v_ultimate_customer_id := pkg_os_object_search.fn_object_get_parent_of_type
                                    (
                                         in_session_id,
                                         in_transaction_id,
                                         v_policy_image_id,
                                         pkg_os_constant.gObjType_Customer
                                    );
                               
     end if;
     
     if v_product_id is null then
          
          v_product_id := pkg_os_product.fn_object_product_get
                          (
                               in_session_id, 
                               in_transaction_id, 
                               v_policy_image_id
                          );
     
     end if;     
     
     -- OSPRODUCT-3351 Get the Billing Account ID
     begin
          
          v_primary_entity_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_ultimate_customer_id,
                                      pkg_base_customer.gbv_CustRefPrimaryEntity
                                 );
                                 
          v_customer_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_primary_entity_id,
                                            gObjType_BillingAccount
                                       );
                                       
     end;
     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '.. Ultimate Customer ID:  '  || v_ultimate_customer_id
                 || '.. Billing Account ID: '          || v_customer_billing_acc_id
                 || '.. Billing Method: '              || v_policy_billing_method
                 || '.. Billed To: '                   || v_policy_billed_to
                 || '.. Product ID: '                  || v_product_id 
            );

     end if;
     
     -- end OSPRODUCT-3351
     
     -- [RR] added an additional condition on billing account id
     -- Ideally it should come from datamart, if not retrived then execute below code
                                                   
     
     -- [RR] OSPRODUCT-3351 Removed the condition for BA 
     if v_policy_billing_method = gBillingMethod_Agency
        or
        (
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
             and 
             v_policy_transaction_sub_type = gTrxSubType_CommissionAdj
        )
     then
               
          --
          -- Get the Producing Agency
          --
          v_producing_agency_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        pkg_os_constant_bv.gbv_GenObjProducingAgency
                                   );

          --
          -- Get the 1-1 child of the Partner of type Billing Account
          --

          v_agency_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_producing_agency_id,
                                            gObjType_BillingAccount
                                       );

          if v_agency_billing_acc_id is null then

               pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Agency Billing Account is NULL for Policy Transaction ID:'||in_policy_trx_id
               );

               raise no_data_found;

          elsif v_session_control.gLogging_Full
          then
                    
               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '... Producing Agency ID: '                     || v_producing_agency_id||
                   '... Producing Agency Billing Account ID: '     ||v_agency_billing_acc_id
               );

         end if;

         v_billing_account_id := v_agency_billing_acc_id;

     else

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Customer Billing Account ID: '||v_customer_billing_acc_id
               );

          end if;

          v_billing_account_id := v_customer_billing_acc_id;

     end if;    -- if Policy Billig Method is Agency Billed
     
               
      
     -- Get value from Policy Image
     -- [RR] Get values from policy image. Created a block to structure
     begin
          
          v_policy_billed_to :=  pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_image_id, 
                                      gbv_PolicyBillTo 
                                 );
                                     
          v_use_existing_plan := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_policy_image_id,
                                        gbv_PTPUseExistingSchedule --32575248 -- Durgesh2517 -- Use constant
                                   );          
     
          v_filing_id := pkg_os_product.fn_policy_filing_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_image_id,
                              v_product_id
                         );                   
          
          if v_process_modified_PayPlanInd is null then
                                       
               v_process_modified_PayPlanInd := pkg_os_object_io.fn_object_bv_get
                                                (
                                                     in_session_id,
                                                     in_transaction_id,
                                                     v_policy_image_id,
                                                     gbv_PTP_ProcessModPayPlanInd--31934046
                                                );
                                                
               if v_session_control.gLogging_Full
               then
                         
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. PTP Mod Pay Plan Indicator retrieved: ' || v_process_modified_PayPlanInd
                    );
                         
               end if;
                                                
          end if;
                                       
     end;
     
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '.. Ultimate Customer ID:  '  || v_ultimate_customer_id
                 || '.. Primary Entity ID: '      || v_primary_entity_id
                 || '.. Customer Billing Account ID: ' || v_customer_billing_acc_id
                 || '.. Billing Account ID: '          || v_billing_account_id
                 || '.. Billing Method: '              || v_policy_billing_method
                 || '.. Billed To: '                   || v_policy_billed_to
                 || '.. Product ID: '                  || v_product_id 
                 || '.. Filing ID; '                   || v_filing_id
                 || '.. Use existing plan: '           || v_use_existing_plan
                 || '.. Process Mod Pay Plan Indicator:' || v_process_modified_PayPlanInd
                 || '.. Multipayer Enabled?: '         || v_multipayer_enabled_tf
            );

     end if;
     
     -- [RR] New dev
     -- Prepare the list for Fitem dm update
     begin
          
          v_dm_value_table('POLICY_TRANSACTION_ID')       := in_policy_trx_id;
          --OSPRODUCT-15383
		--v_dm_value_table('POLICY_EFFECTIVE_DATE')       := to_date(v_policy_trx_effective_date,pkg_os_constant.DragonDateFormatDefault);
          v_dm_value_table('POLICY_TRX_TYPE_ID')          := v_policy_transaction_type;
          v_dm_value_table('POLICY_TRX_SUB_TYPE_ID')      := v_policy_transaction_sub_type;
          v_dm_value_table('POLICY_TRX_RB_SEQ')           := v_policy_trx_rb_seq;
          v_dm_value_table('POLICY_TRX_RF_SEQ')           := v_policy_trx_rf_seq;          
          -- OSPRODUCT-8756
          -- v_dm_value_table('POLICY_TRX_OBJECT_STATE')      := v_policy_trx_object_state;
          v_dm_value_table('POLICY_TRX_GENERIC_INSTANCE') := v_policy_trx_generic_instance;
          v_dm_value_table('POLICY_TRANSACTION_NUMBER')   := v_policy_trx_seq_number;
          v_dm_value_table('POLICY_TRX_SEQ_NUM')           := nvl(v_policy_trx_seq_number,v_policy_trx_generic_instance);
          v_dm_value_table('POLICY_ID')                    := v_master_policy_id;
          v_dm_value_table('PRODUCT_ID')                   := v_product_id;
          v_dm_value_table('POLICY_NO')                    := v_policy_number;
          v_dm_value_table('CUSTOMER_ID')                  := v_ultimate_customer_id;
          
     end;

     --
     --   @@@VG: Surely this is incorrect, because we should be looking for the policy level advanced date, no? -- this was done to keep policytrx process date and billng trx process date in sync
     --

     v_current_date := to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,in_policy_trx_id)),pkg_os_constant.DragonDateFormatDefault);  --OSBILLING-7829

     --
     -- Is Policy Billing Method Agency Billed OR Transaction Type is an Endorsement with Sub-Type Commission Adjustment.
     --
     -- @@@VG It is unclear why the second condition is needed here? --- for second condition : since commission adj can be done on both direct billed and agency billed policies, and financials will be picked from agency's account
     --
     
     --OSPRODUCT-2839
     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Reinstatement then
          
          for v_term_inst in (select installment_id from dragon_scheduled_installment where policy_term_id = v_policy_term_id) loop
               
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_term_inst.installment_id,
                    pkg_db_constant.gbv_InstallmentReinstateBalAmt, -- added the declaration in pkg_db_constant
                    null
               );
               
          end loop;
		  
          -- OSPRODUCT-23559 reverted
          -- verify if it is a rollforward of a reinstatement transaction and skip financials
          -- LXPRODUCT-502
          -- Get the rollforward refernce  , if this is not null then skip

          --v_rollforward_trx_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_trx_id , pkg_os_policy_transaction.gbv_PolicyTrxRollsFwdTrx);

          /*if v_rollforward_trx_id  is not null
             and
             (
                 nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_session_id, 32972548),0)= 0  -- not a BOR
                 or
                 pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_rollforward_trx_id ,gbv_PolTrxRefBillingAccTrxSet) is null -- 21860
             )

          then

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' This is a rollforwad of reinstatement transaction so skipping the financials '
                    );

               end if;
               
               return;

          end if;*/		  
          
     end if; 
	 -- LXPRODUCT-502
     -- OSPRODUCT-23559 Reverted
     /*if v_policy_transaction_type in  (pkg_db_object.gBillTrxType_CancelInsured,pkg_db_object.gBillTrxType_CancelNonPay)
     then

        v_rollforward_trx_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_policy_trx_id , pkg_os_policy_transaction.gbv_PolicyTrxRollsFwdTrx)  ;

        if    (pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, (pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_rollforward_trx_id, gbv_PolTrxRefBillingAccTrxSet)) ,gbv_BillAccTrxSet_RefReinstmt ) is not null
              and
              nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, in_session_id, 32972548),0)= 0  -- not a BOR
              )
              or
               (v_rollforward_trx_id is not null and pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id,v_rollforward_trx_id ,gbv_PolTrxRefBillingAccTrxSet) is null ) -- 21860
        then

                 if v_session_control.gLogging_Full
                 then

                      pkg_os_logging.sp_log
                      (
                           in_session_id,
                           in_transaction_id,
                           v_procedure_name,
                           ' This is a rollforwad of cancellation that is already reinstated , so skipping the financials '
                      );

                 end if;
                 return;
        end if;

     end if;*/

     --LXPRODUCT-502
	 

	/*       --OSPRODUCT-4664 start
      --OSBILLING-5525 start
     if (
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
             and
             v_rb_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
             and
             v_policy_trx_subtype_endr_type = gChangeBillingMethod
        )
     then

          if v_billing_account_id = v_customer_billing_acc_id
          then

               v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            pkg_os_object_io.fn_object_bv_get (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_policy_image_id,
                                                                     pkg_os_constant_bv.gbv_GenObjProducingAgency
                                                                     ),
                                            gObjType_BillingAccount
                                       );

          elsif v_billing_account_id  = v_agency_billing_acc_id
          then

               v_billing_account_id := v_customer_billing_acc_id;

          end if;

     end if;
     --OSBILLING-5525 end
     --OSPRODUCT-4664 start */

     --
     -- Override with in_override_ba_id - @@@VG: Why would we override? -- This was done for Life, where financials are created under policy cash account
     --
     if in_override_ba_id is not null then

         v_billing_account_id := in_override_ba_id;

     end if;

     if v_billing_account_id is null then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Billing Account is NULL for Policy Transaction ID:'||in_policy_trx_id
          );

          raise no_data_found;

     end if;
     
     --
     -- Create BillingAccountTransactionSet corresponding to this PolicyTransaction
     --
     
     begin
          -- [RR] Already retrieved at the beginning
          -- batch created and PT setup moved above
          if v_billing_acc_trx_set_id is null then

              -- UTPRODUCT-5009 Start 
              v_payer_billingacc_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_master_policy_id,
                                                pkg_db_late_process.gbv_Policy_LateProc_TarObject 
                                           );
               v_billing_account_id := nvl (v_payer_billingacc_id,  v_billing_account_id );          
               -- UTPRODUCT-5009 Ends
          
          
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjType_BillingAccountTrxSet,
                    v_billing_account_id,
                    v_billing_acc_trx_set_id
               );
               
               if v_session_control.gLogging_Full
               then
                    
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Created BillingAccountTransactionSet Object ID: '||v_billing_acc_trx_set_id ||
                         ' Billing Account ' ||v_billing_account_id ||        -- UTPRODUCT-5009
                         ' Payer Billing Account ' || v_payer_billingacc_id   -- UTPRODUCT-5009
                    );

               end if;

          end if;
          
          -- BV set up for batch     
          --
          -- Set the Reference from PolicyTransaction to BillingAccountTransactionSet  Object
          --
          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              in_policy_trx_id, -- pol trx id
              gbv_PolTrxRefBillingAccTrxSet, -- 31866546
              v_billing_acc_trx_set_id -- Billingaccnt trx id
          );

          --
          -- Set the reference from BillingAccountTransactionSet to Policy Transaction via "Associated Policy Transaction" BV (32502146)
          --
          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_billing_acc_trx_set_id,
              gbv_Batrxset_RefAsscPolicyTrx,
              in_policy_trx_id
          );
           
          -- Set the set type
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               gbv_FITrxSetBatchType,
               v_policy_transaction_type
          );

          v_billing_acc_trx_description := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_billing_account_id, 211882);

          if v_policy_trx_subtype_endr_type is not null then

               v_billing_acc_trx_description := v_billing_acc_trx_description || ' - ' || pkg_os_lookup.fn_lookup_list_text_get(v_subtype_lookup_list_id, v_policy_trx_subtype_endr_type) ;

          else

               v_billing_acc_trx_description := v_billing_acc_trx_description || ' - ' || pkg_os_lookup.fn_lookup_list_text_get(v_type_lookup_list_id, v_policy_transaction_type) ;

          end if;
     
     end;

     -- [RR] alreday retrieved
     /*v_use_existing_plan :=pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          v_policy_image_id,
          32575248
     );*/
     
     --
     --   For transaction types that create installments, we're setting the transaction type to be Installment, for those that may modify installments
     --   or create stubs, we're setting the type to be Stub. I am not entirely clear on WHY.
     --

     if (
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness
             or
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
             or
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NBRewrite
             or
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Reissue
             --or
             --v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback  --OSPRODUCT-7371
             or
             v_policy_transaction_type = gPolicyTrxType_PartialWith
             or
             v_policy_transaction_type = gPolicyTrxType_ServiceTrx
             --or
             --v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rewrite    --kirtan
        )
          /*or
          (
               v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
               and
               v_policy_trx_subtype_endr_type = gChangeBillingMethod

               -- @@@VG: Would change in payment plan not qualify? -- This condition was added to identify if current transaction is new term trx or not-- also gChangeBillingMethod condition will be removed with new design
          )*/
          --OSBILLING-7005
        and
        NVL(v_use_existing_plan,0) <>1
     then
          
          v_transaction_installment_type := gInstallmentType_Installment;

     else
          
          v_transaction_installment_type := gInstallmentType_Stub;

     end if;

     --OSPRODUCT-814
     -- [RR] Rewritten to make more sense
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.. Transaction Installment Type '||v_transaction_installment_type
          );

     end if;
     
     
     --
     --   Get the payment method from the term ...
     --
     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
        and
        v_policy_trx_subtype_endr_type = gChangeBillingMethod
     then
          
          v_policyterm_billing_method := nvl(pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               gbv_PolicyTermBillingMethod
          ), gBillingMethod_Direct);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Term Billing Method: '||v_policyterm_billing_method
               );

          end if;

     end if;

     --
     --   @@@VG: Why would policy-term EVER be null? -- earlier we were creating policyterm if it was null, now this is handled in core and we are just making sure that one exists for which installments would be created
     --
     if v_policy_term_id is null
        and
          (
               v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness
               or
               v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
               or
               v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NBRewrite
               or
               v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Reissue
               --or
               -- v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rewrite --kirtan
          )
     then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... No policy Term found for PolicyID: ' || v_master_policy_id
          );

          raise no_data_found;

     end if;

     --
     --   Set some term attributes. @@@VG: Is this the right place to be setting the PolicyTermType?-- we think setting term type should be removed and it should be handled by core
     --

     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
     then

          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_policy_term_id,
              gbv_PolicyTermType,
              pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_master_policy_id, pkg_os_constant_bv.gbv_PolicyTerm )
          );

     end if;
     
     -- Set the term billing status
     -- OSPRODUCT-17904
     if v_policy_transaction_type in (
                                          pkg_os_policy_transaction.gPolicyTrxType_Renewal,
                                          pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                                          pkg_os_policy_transaction.gPolicyTrxType_Rewrite,
                                          pkg_os_policy_transaction.gPolicyTrxType_NBRewrite
                                     )                                    
     then
          
          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_policy_term_id,
              gbv_PolicyTermBillStatus,
              gPolixyTerm_Active
          );
     
     end if;

     --
     --   @@@VG: This is odd - we are trying to fix a defect that was created earlier in the flow. -- we think we can get rid of this condition
     --
     --   Either way, we are apparently desperate to get the policy term.
     --

     if v_policy_term_id is null
         and
              v_policy_transaction_type <> pkg_os_policy_transaction.gPolicyTrxType_NewBusiness
         and
              v_policy_transaction_type <> pkg_os_policy_transaction.gPolicyTrxType_Renewal
         and
              v_policy_transaction_type <> pkg_os_policy_transaction.gPolicyTrxType_NBRewrite
         and
              v_policy_transaction_type <> pkg_os_policy_transaction.gPolicyTrxType_Reissue
         and
              v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rewrite
     then
          
          -- [RR} Commented below BV get as retrieved earlier          
          /* v_basis_transaction_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_trx_id,
                                        pkg_os_policy_transaction.gbv_PolicyTrxBasisTransaction
                                   );*/

         -- OSBILLING-6782 Starts
         if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
            and
            v_basis_transaction_id is null
         then --added if block for rollback trx type OSBILLING-6782
              
              -- [RR} Datamart
              begin
                   select
                        pt.policy_term_id
                   into
                        v_policy_term_id
                   from
                        dragon_policy_trx pt
                   where
                        pt.policy_trx_id = v_to_be_rb_trx_id;
              
              exception
                   
                   when no_data_found then

                        v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_to_be_rb_trx_id,
                                                  gbv_PolicyTrxRefPolicyTerm
                                            );
                                            
              end;
              
              -- [RR] Rewritten to make more sense
              if v_session_control.gLogging_Full
              then 

                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '.. Policy Term ID for rollback transaction: ' || v_policy_term_id
                    );

              end if;
              
         else
              
              -- [RR} Datamart
              begin
                   select
                        pt.policy_term_id
                   into
                        v_policy_term_id
                   from
                        dragon_policy_trx pt
                   where
                        pt.policy_trx_id = v_basis_transaction_id;
              
              exception
                   
                   when no_data_found then

                        v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_basis_transaction_id,
                                                 gbv_PolicyTrxRefPolicyTerm
                                            );
                                            
              end;
                                  
         -- OSBILLING-6782 Starts
         end if;
         -- OSBILLING-6782 Ends
             
         pkg_os_object_io.sp_object_bv_set
         (
              in_session_id,
              in_transaction_id,
              in_policy_trx_id,
              gbv_PolicyTrxRefPolicyTerm,
              v_policy_term_id
         );
         
         -- [RR] Rewritten to make more sense
         if v_session_control.gLogging_Full
         then

               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '..Recalculated policy term: '||v_policy_term_id
               );

         end if;

     end if;

     --
     --   If we're doing a transaction that either creates a new term, or modifies the billing method for an existing term ...
     --
     if  v_policy_transaction_type in
     (
         pkg_os_policy_transaction.gPolicyTrxType_Renewal,
         pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
         pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
         pkg_os_policy_transaction.gPolicyTrxType_Reissue,
         pkg_os_policy_transaction.gPolicyTrxType_Rewrite
     )
     or
     (
         v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
         and
         v_policy_trx_subtype_endr_type = gChangeBillingMethod
     )
     then

          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_policy_term_id,
              gbv_PolicyTermPaymentMethod,
              v_policy_payment_method
          );

          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_policy_term_id,
              gbv_PolicyTermBilledTo,
              v_policy_billed_to
          );

          v_billing_acc_trx_description := v_billing_acc_trx_description || ' - ' || 'New Installments';
          
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '.. Case of new installments : '||v_policy_term_id
               );

          end if;

     else

          v_billing_acc_trx_description := v_billing_acc_trx_description || ' - ' || 'Modify Installments';

          if v_session_control.gLogging_Full
          then --TempLog

               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... case of modify installments : '||v_policy_term_id
               );

          end if;

     end if; -- if we're doing a transaction that either creates a new term, or modifies the billing method for an existing term ...

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          gbv_BillAccTrxSet_Description,
          v_billing_acc_trx_description
     );

     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     --   Either set up a simple change withdrawal date transaction, or else create/ensure the existence of TermScheduledPayment objects ...
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	-- OSPRODUCT-14033
     g_term_payer_list.delete; 
     g_payer_list.delete;
     -- end OSPRODUCT-14033

     if v_policy_transaction_type = gChangeWithdrawal --6040 --if this is Change Withdrawal Date policy transaction
     then
          -- [RR] Not touched
          begin -- MPKR
               --
               --   @@@VG: Presumably, these are being set to 'F' because all we're doing is changing values on existing FITEMs?---Yes
               --

               
               
               v_create_debit_trx       := 'F';
               v_create_credit_trx      := 'F';

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '...... Created FITransaction Object for Withdrawal Date Update and set create debit/credit flags to False'
                    );

               end if;

               --
               --  Create the FITransaction for Withdrwal Date update transaction
               --

               v_fi_trx_withdrawal_id := pkg_os_object_search.fn_object_with_attribute_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_billing_acc_trx_set_id,
                                              gObjType_FITransaction,
                                              gbv_FITrxRefPolicyTxn,
                                              in_policy_trx_id
                                         );

               if v_fi_trx_withdrawal_id is null then

                    pkg_db_object.sp_fitransaction_create
                    (
                         in_session_id                   =>  in_session_id,
                         in_transaction_id               =>  in_transaction_id,
                         in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
                         in_fitrx_ref_billing_account    =>  v_billing_account_id,--OSBILLING-5405
                         out_fitransaction_id            =>  v_fi_trx_withdrawal_id,
                         in_fitrx_type                   =>  gFIUpdateWithdrawalTrxType,--4001,  --Withdrawal Date update FITransaction type
                         in_fitrx_ref_associatedpolicy   =>  v_master_policy_id,
                         in_fitrx_ref_associatedpoltrx   =>  in_policy_trx_id,
                         in_fitrx_ref_actionpolicy       =>  v_master_policy_id,
                         in_fitrx_ref_actionpoltrx       =>  in_policy_trx_id,
                         in_fitrx_effective_date         =>  v_policy_trx_effective_date,
                         in_fitrx_object_state           =>  gFITrxStatus_Processed
                    );

               end if;

               --
               -- Set the Withdrawal FITransaction Status to Processed
               --

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fi_trx_withdrawal_id,
                    pkg_os_constant_bv.gbv_GenObjObjectState,
                    gFITrxStatus_Processed
               );

               --
               -- Set the Processing Date for Withdrawal FI Transaction to Current Date
               --

               v_fi_trx_processing_date :=   to_char
               (
                    NVL(in_current_date_time,
                    pkg_os_time.fn_os_sysdate
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fi_trx_withdrawal_id
                    )),  --OSBILLING-7829
                    pkg_os_constant.DragonDateFormatDefault
               );

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fi_trx_withdrawal_id,
                    gbv_FITrxProcessDate,
                    v_fi_trx_processing_date
               );

               --
               -- Update the FITransaction Datamart for the Withdrawal Date update transaction
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fi_trx_withdrawal_id,
                    v_datamart_tf
               );

               --
               -- Get PolicyTermScheduledPaymentInstallment instances under the parent PolicyTerm
               --

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_policy_term_id,
                    gObjType_ScheduledInstallment,
                    v_term_pymntsch_list
               );

               v_term_pymntsch_index := v_term_pymntsch_list.first;
               

               if v_term_pymntsch_list.count > 0 -- @@@VG: Surely we should bleat loudly if this is zero?-- Yes, we should have else condtion while it may not be going in else anyway
               then

                    v_term_pymntsch_index    := v_term_pymntsch_list.first;

                    while v_term_pymntsch_index is not null loop

                         v_term_install_withdrwl_date  := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_term_pymntsch_list(v_term_pymntsch_index),
                              gbv_install_withdrawal_date
                         );

                         --
                         --   If the scheduled payment in consideration has a withdrawal date that is greater than the transaction effective date, then do things ...
                         --
                         --   @@@VG: We're not checking whether the scheduled payment in question belongs to the currently active payment plan ... so we should check the payment plan -- Yes
                         --   MD ID of each scheduled installement ...
                         --

                         if to_date(v_term_install_withdrwl_date,pkg_os_constant.DragonDateFormatDefault) > to_date(v_policy_trx_effective_date,pkg_os_constant.DragonDateFormatDefault)
                         then

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '............ Considering Term Scheduled Installment ID:'||v_term_pymntsch_list(v_term_pymntsch_index)||
                                        ' with Withdrawal date : '||v_term_install_withdrwl_date
                                   );

                              end if;

                              --
                              --   For each receivable due on, and associated with the current scheduled payment ...
                              --
                              
                              for v_fitem_debit in c_fitem_debit ( v_term_pymntsch_list(v_term_pymntsch_index))
                              loop

                                   pkg_db_object.sp_fichange_create
                                    (
                                        in_session_id                  =>  in_session_id,
                                        in_transaction_id              =>  in_transaction_id,
                                        in_parent_fitransaction_id     =>  v_fi_trx_withdrawal_id,
                                        out_fichange_id                =>  v_fi_change_id,
                                        in_fichange_action             =>  401,
                                        in_fichange_action_delta       =>  0,
                                        in_fichange_ref_fitem          =>  v_fitem_debit.fitem_id,
                                        in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                                        in_fichange_ref_pol            =>  v_master_policy_id,
                                        in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                                        in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)
                                    );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Creating FIChange of FYI type: ' || v_fi_change_id
                                        );

                                   end if;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id,
                                        gbv_FIChangeAmountFYI,--32403946,
                                        v_fitem_debit.initial_amount
                                   );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '............ Updating FIChange BV and appropriate FItem datamarts'
                                        );

                                   end if;

                                   ---
                                   --- Get preferred day from PolicyTransaction level
                                   ---

                                   v_preferred_payment_day := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_term_id, gbv_prefwithdrwal_day );

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id,
                                        gbv_comment,--29709946,
                                        'Preferred withdrawal date was updated to: ' || v_preferred_payment_day
                                   );

                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fitem_debit.fitem_id,
                                        v_datamart_tf
                                   );

                              end loop;
                              
                         end if;

                         v_term_pymntsch_index     :=     v_term_pymntsch_list.next(v_term_pymntsch_index);

                    end loop;     -- while v_term_pymntsch_index is not null loop

               end if;  -- if v_term_pymntsch_list.count > 0

          end; -- MPKR
          --
          --   End : Processing for Change Withdrawal Date transaction ---
          --
     else

          begin
		
               -- OSPRODUCT-14033
               --g_term_payer_list.delete; --OSBILLING-6782
               --g_payer_list.delete; --OSBILLING-6782
			-- OSPRODUCT-14033
               
               -- get list of payers from Policy Term Level. Need this for installments.
               pkg_db_multipayer.sp_policy_term_payers_get
               (
                    in_session_Id           =>    in_session_id,
                    in_transaction_id       =>    in_transaction_id,
                    in_ptp_object_id        =>    v_policy_image_id,
                    in_policy_term_id       =>    v_policy_term_id,
                    io_payer_list           =>    g_term_payer_list,             -- indexed list of payers. List of payer of payer records r_payer inedexed by  in_index_by.
                    in_print_list           =>    'Y',
                    in_index_by             =>    pkg_db_multipayer.g_PayerGet_idx_CustmrPartnr     -- Possible values: g_PayerGet_idx_ChosenPlan / g_PayerGet_idx_CustmrPartnr
               );

               --  get list of payers from Policy Image level
               pkg_db_multipayer.sp_ptp_payers_get
               (
                    in_session_id         => in_session_id,
                    in_transaction_id     => in_transaction_id,
                    in_ptp_object_id      => v_policy_image_id,
                    io_payer_list         => g_payer_list,           -- indexed by chosen pay plan ID
                    in_print_list         => 'Y'
               );
               
               -- [RR] Removed unnecessary logs 
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Term Payer Count: ' || g_term_payer_list.count ||
                         '.. PTP Payer Count: '  || g_payer_list.count  
                                                                                    
                                                                                                                                           
                    );

               end if;

               v_idx := g_payer_list.first;
               
               while v_idx is not null
               loop --loop of payers starts
                    
                    -- [RR] Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then 

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Considering Payer ID: ' || g_payer_list(v_idx).PTPayer_object_id
                         );

                    end if;

                    v_chosen_pay_plan_id := null; -- OSBILLING-6782
                    
                    -- [RR] Commented as value already retrieved
                    /*v_process_modified_PayPlanInd := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_policy_image_id,
                                                          gbv_PTP_ProcessModPayPlanInd--31934046
                                                     );*/

                    --
                    -- Get the details of Chosen Payment Plan
                    --
                    --OSBIILING-6201
                    if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
                    then

                         /* OSBILLING-6782 comment starts

                         v_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_to_be_rb_trx_id,
                                                           gbv_RefBasisCoverage
                                                      ),
                                                      gbv_PolicyRefChosenPlan
                                                 );
                         OSBILLING-6782 comment ends */

                         -- OSBILLING-6782 Starts
                         v_basis_ptp_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_to_be_rb_trx_id,
                                                gbv_RefBasisCoverage
                                           );
                                           
                         -- UTXPRODUCT-403                  
                         v_rb_trx_coverages := pkg_os_object_io.fn_object_bv_get  -- Endorsemetn PTP
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_to_be_rb_trx_id, -- Endorsement policy trx ID
                                               gbv_PolicyTrxRefCoverages
                                          ); 
                        -- UTXPRODUCT-403                                   
                                           
                         -- [RR] Rewritten to make more sense
                         if v_session_control.gLogging_Full
                         then --TempLog

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Basis PTP ID: '|| v_basis_ptp_id ||' for trx to be rolled back ' || v_to_be_rb_trx_id || ' now going to refill list of payers of basis ptp '
                                   || 'Rollback Coverage image id ' ||v_rb_trx_coverages  -- UTXPRODUCT-403 
                                                                                   
                              );

                         end if;
                         
                         --OSPRODUCT-7172
                         v_basis_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                                          (  
                                                               in_session_id, 
                                                               in_transaction_id, 
                                                               v_rb_trx_coverages, --v_basis_ptp_id,  -- UTXPRODUCT-403 
                                                               pkg_db_multipayer.gbv_MultiPayerEnabled_PTP --32704624
                                                          ); 
                                                          
--                         if nvl(v_multipayer_enabled_tf,g_No) = g_No then
                         if nvl(v_basis_multipayer_enabled_tf,g_No) = g_No then
                              
                              v_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_rb_trx_coverages, -- v_basis_ptp_id, -- UTXPRODUCT-403 
                                                           pkg_db_payplan_modify.gbv_PolicyRefChosenPlan
                                                      );
                                                      
                         else                                                      
                         
                              -- [RR] Replaced with datamart                         
                              begin
                                   
                                   select
                                        pp.ptp_payer_id
                                   into
                                        v_payer_id
                                   from
                                        dragon_ptp_payer pp
                                   where
                                        pp.ptp_id = v_rb_trx_coverages  -- v_basis_ptp_id  -- UTXPRODUCT-403 
                                   and
                                        pp.billing_account_id = g_payer_list(v_idx).PayerBillingAccount_id;
                                        
                                   v_chosen_pay_plan_id := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                v_payer_id,
                                                                pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan
                                                           );
                                                           
                                   /*-- [RR] Rewritten to make more sense                                                      
                                   if v_session_control.gLogging_Full
                                   then 

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '..For Rollback chosen pay plan id: '|| v_chosen_pay_plan_id 
                                                                                                                                                     
                                                                                
                                                                        
                                             
                                        );

                                   end if;*/
                                   
                              exception
                                   
                                   when no_data_found then
                                        null;
                                                           
                              end;
                              
                              -- OSPRODUCT-3235
                              -- Added the code to address case where datamart is not updated                              
                              if v_chosen_pay_plan_id is null then
                                   
                                   v_basis_payer_list1.delete; --empty list of basis ptp payers
                                   
                                   pkg_db_multipayer.sp_ptp_payers_get
                                   (
                                        in_session_id,
                                        in_transaction_id ,
                                        v_rb_trx_coverages, -- v_basis_ptp_id, -- UTXPRODUCT-403
                                        v_basis_payer_list1,
                                        'Y',
                                        pkg_db_multipayer.g_PayerGet_idx_BilingAccount
                                   );       

                                   if v_basis_payer_list1.exists(g_payer_list(v_idx).PayerBillingAccount_id)
                                   then

                                        v_chosen_pay_plan_id := v_basis_payer_list1(g_payer_list(v_idx).PayerBillingAccount_id).chosen_payment_plan;
                                        
                                        if v_session_control.gLogging_Full
                                        then --TempLog

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '.. Chosen Pay Plan ID: ' || v_chosen_pay_plan_id
                                             );

                                        end if;

                                   end if;
                                   -- OSBILLING-6782 Ends
                                   
                              end if;                                  
                              
                         end if;
                         
                         if v_session_control.gLogging_Full
                         then 

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..For Rollback chosen pay plan id: '|| v_chosen_pay_plan_id 
                              );

                         end if;

                    else
                         
                         v_chosen_pay_plan_id := g_payer_list(v_idx).chosen_payment_plan;
                         
                               v_modified_pay_plan_id   := g_payer_list(v_idx).modified_payment_plan;

                         --[RR] Rewrittent to make more sense
                         if v_session_control.gLogging_Full
                         then --TempLog

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Not a rollback trx. Chosen Pay Plan ID: ' || v_chosen_pay_plan_id
                              );

                         end if;
                         
                    end if;
                    
                    -- Set Pay Plan to Term
                    -- [RR] Moved to refactor
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_policy_term_id,
                         gbv_PolicyTermPayPlan,
                         v_chosen_pay_plan_id
                    );
                    
                    -- [RR] Commenting here we are anyway doing it at end after updating billing method
                    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_policy_term_id, v_datamart_tf);

                    v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_chosen_pay_plan_id,
                                                 pkg_os_constant_bv.gbv_PaymentPlanID
                                            );
                                            
                    -- [RR} Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Pay Plan MD ID: ' || v_payment_plan_md_id
                         );

                    end if;

                    v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_plan_md_id);

                    v_installment_count := greatest(nvl(v_payment_plan_md_row.num_instalments,1),1);
                    
                    -- Get the currency 
                    if g_payer_list(v_idx).PTPayer_object_id is not null then
                         
                         v_currency := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            nvl (g_payer_list(v_idx).PTPayer_object_id, v_policy_image_id),
                                            33076948
                                       ); -- OSPRODUCT-12390
                                       
                    else
                         
                         v_currency := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            33089848 -- Not the generic BV as PTP is storing the policy level currency
                                       ); -- OSPRODUCT-12390
                                       
                    end if;
                                  
                    if v_currency is null then
                         
                         -- Get the default currency 
                         v_currency := pkg_db_object.fn_default_currency_get
                                       (
                                            in_session_id,
                                            in_transaction_id
                                       );
                                       
                                       /*pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    in_session_id,
                                                    pkg_db_constant.gbv_UserSessionRefConnectedTo -- added to billing constant
                                               ),
                                            31908070
                                       ); -- OSPRODUCT-12390*/
                                       
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Exchange Currency: ' || v_currency            
                              );

                         end if;
                                       
                    end if;
                    
                    -- [RR} Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Payer ID: ' || g_payer_list(v_idx).PTPayer_object_id ||
                              '.. Chosen Pay Plan ID: ' || v_chosen_pay_plan_id ||
                              '.. Pay Plan MD ID: ' || v_payment_plan_md_id     ||
                              '.. Installement COunt: ' || v_installment_count  ||
                              '.. Currency: '  || v_currency              
                         );

                    end if;
                    
                    --    2017-04-11 Cheryl osbilling-3933 for every financial we want to keep the latest referemce
                    --                                     to the chosent payment plan
                    ------------------------- Durgesh Merged from GCNA GCNA-2211 17022017 -------------------------
                    /*          if     v_policy_transaction_type in
                        (
                             pkg_os_policy_transaction.gPolicyTrxType_Renewal,
                             pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                             pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
                             pkg_os_policy_transaction.gPolicyTrxType_Reissue,
                             pkg_os_policy_transaction.gPolicyTrxType_Rewrite
                        )
                    then*/
                    
                    --2017-04-11 Cheryl osbilling-3933
                    --
                    -- Set Payment Plan as Reference Chosen Payment Plan on policy
                    -- if this is the current term

                    v_current_term := pkg_os_object_io.fn_object_bv_get
                                     (
                                          in_session_id,
                                          in_transaction_id,
                                          v_master_policy_id,
                                          gbv_CurrentTermFromRolledDate 
                                     );
                                     
                    -- [RR] Rewritten to make more sense                   
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Current term based on rolled date: ' || v_current_term
                         );

                    end if;

                    if v_current_term = v_policy_term_id
                    then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_master_policy_id,
                              gbv_PolicyRefChosenPlan,
                              v_chosen_pay_plan_id
                         );

                         --     pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_master_policy_id, v_datamart_tf);
                    end if;
                    
                    ------------------------- Added GCNA-2211 -------------------------
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Populate g_scheduled_payment_list and scheduled_payment_list for payer entity '
                         );

                    end if;                           

                    g_scheduled_payment_list.delete;
				
				-- OSPRODUCT-13702
                    v_prev_installment_id := null;

                    g_payer_list(v_idx).scheduled_payment_list.delete; --#MP

                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                        in_session_id,
                        in_transaction_id,
                        v_chosen_pay_plan_id,
                        gObjType_ScheduledPayment,
                        g_scheduled_payment_list,
                        gbv_actual_due_date
                    );

                  -- [KR] For new term transaction,   verify whether the schedule was generated 
                    -- or not. If not generated, then generate  schedule update

                    if v_policy_transaction_type not in (pkg_os_policy_transaction.gPolicyTrxType_Rollback)
                       and
                       nvl(v_modified_pay_plan_id,v_chosen_pay_plan_id)  = v_chosen_pay_plan_id
                    then
                         pkg_db_billing_modify.sp_validate_schedules
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_trx_id,
                              v_policy_image_id,
                              v_chosen_pay_plan_id,
                              g_scheduled_payment_list

                         );
                    end if;
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. Scheduled Payment List Count: '||g_scheduled_payment_list.count
                                                                                     
                                                                                      
                                                                                    
                                                                        
                         );

                    end if;

                    -- UTPRODUCT-5004
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id,
                         pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan, --32705024,-- Durgesh2517 use constant
                         v_chosen_pay_plan_id -- To set the correct payment plan
                    );
                    -- UTPRODUCT-5004

                    --
                    --    For chosen payment plan get all the children of type Scheduled Payment  (we call it installment)
                    --    find all but those of type Stub, ie the search will return only installments of type 'Installment', the 'Stub' will be filtered out)
                    --    ... Loop1: Go through all the found Scheduled Payments and find their Elements
                    --    ... ... Nested Loop2: For every Element check the create_debit and create_credit flags.
                    --                      Accumulate debit and credit flags from all the elements of all the Installments into the two variables: v_create_debit_trx and v_create_credit_trx : if at least one element has the flag = 1, set the corresponding variable to TRUE ('T').
                    --

                    v_scheduled_payment_count := 0;

                    v_scheduled_payment_index := g_scheduled_payment_list.first;
                    
                    while v_scheduled_payment_index is not null
                    loop
                         
                         -- [RR] Retrieving to avoid multiple BV gets
                         v_scheduled_payment_type := pkg_os_object_io.fn_object_bv_get
                                                     ( 
                                                          in_session_id, 
                                                          in_transaction_id, 
                                                          g_scheduled_payment_list(v_scheduled_payment_index), 
                                                          gbv_ScheduledPaymentType 
                                                     );

                         if v_scheduled_payment_type = gInstallmentType_Installment then --Durgesh2517 use constant                  

                              v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              g_scheduled_payment_list(v_scheduled_payment_index),
                                                              gbv_ScheduledRefInstallment
                                                         );

                             if v_installment_object_id is null
                                or
                                v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
                             then

                                   --
                                   --  Create Installment Object as a child of Policy Term
                                   --
                                   pkg_os_object.sp_object_create
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       gObjType_ScheduledInstallment,
                                       v_policy_term_id,
                                       v_installment_object_id
                                   );
                                   
                                   --
                                   -- Set the Reference from PaymentPlanScheduledPayment to Installment Object
                                   --
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       g_scheduled_payment_list(v_scheduled_payment_index),
                                       gbv_ScheduledRefInstallment,
                                       v_installment_object_id
                                   );


                                   --
                                   -- Get the Instalment attributes                                   
                                   --
                                   v_installment_due_date         :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_billing_due_date);
                                   v_installment_issue_date       :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_billing_issue_date);
                                   v_installment_actual_date      :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_actual_due_date);
                                   v_installment_actual_end       :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_actual_end_date);
                                   v_install_withdrawal_date      :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_billing_withdr_date);
                                   
                                   -- [RR] using variable instead of BV get
                                   --v_installment_type             :=   pkg_os_object_io.fn_object_bv_get (in_session_id, in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_ScheduledPaymentType);
                                   v_installment_type             :=   v_scheduled_payment_type;
                                   v_installment_no_calculated    :=   pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,g_scheduled_payment_list(v_scheduled_payment_index),gbv_installement_no_calc);


                                   --
                                   -- Set the Installment BVs
                                   --
                                   v_bv_table.delete;
                                   v_bv_table ( gbv_installment_due_date                  ).business_variable_value     :=   v_installment_due_date;
                                   v_bv_table ( gbv_installment_issue_date                ).business_variable_value     :=   v_installment_issue_date;
                                   v_bv_table ( gbv_installment_actual_date               ).business_variable_value     :=   v_installment_actual_date;
                                   v_bv_table ( gbv_installment_actual_end                ).business_variable_value     :=   v_installment_actual_end;
                                   v_bv_table ( gbv_install_withdrawal_date               ).business_variable_value     :=   v_install_withdrawal_date;
                                   v_bv_table ( gbv_installment_type                      ).business_variable_value     :=   v_installment_type;
                                   v_bv_table ( gbv_installment_number                    ).business_variable_value     :=   to_number(v_installment_no_calculated);
                                   v_bv_table ( gbv_PrevInstallment                       ).business_variable_value     :=   v_prev_installment_id;
                                   v_bv_table ( gbv_Install_IsCrrntPayPlanInst            ).business_variable_value     :=   gInstalmnt_CrntPayPlan_True;
                                   v_bv_table ( gbv_Installment_PayPlan_MD_ID             ).business_variable_value     :=   v_payment_plan_md_id;
                                   v_bv_table ( gbv_Installment_BillMethodID              ).business_variable_value     :=   v_policy_billing_method;
                                   v_bv_table ( gbv_Ref_Bel_to_PayPlan_ID                 ).business_variable_value     :=   v_chosen_pay_plan_id;     -- OSBILLING-4478
                                   v_bv_table ( 33076948                                  ).business_variable_value     :=   v_currency; -- OSPRODUCT-12390
                                   v_bv_table ( pkg_db_multipayer.gbv_Installment_Ref_PTermPayer ).business_variable_value := g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id;
                                   --/#MP
                                   
                                   -- [RR] Added log
                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '.. Installment Attributes: ' ||
                                            '.. Due Date: ' || v_installment_due_date ||
                                            '.. Issue Date: ' || v_installment_issue_date ||
                                            '.. Actual Due Date: ' || v_installment_actual_date ||
                                            '.. Actual End Date: ' || v_installment_actual_end ||
                                            '.. Withdrawal Date: ' || v_install_withdrawal_date ||
                                            '.. Installment Type: ' || v_installment_type ||
                                            '.. Installment Number: ' || to_number(v_installment_no_calculated) ||
                                            '.. Previous Installment ID: ' || v_prev_installment_id || 
                                            '.. Is Current Pay Plan?: ' || gInstalmnt_CrntPayPlan_True ||
                                            '.. Pay Plan MD ID: ' || v_payment_plan_md_id ||
                                            '.. Billing Methodd: ' || v_policy_billing_method || 
                                            '.. Chosen Pay Plan: ' || v_chosen_pay_plan_id
                                        );

                                   end if;
                                   
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_installment_object_id,
                                        v_bv_table
                                   );

                                   --
                                   --  Set the Next Installment Reference for the previous Installment ID
                                   --
                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_prev_installment_id,
                                       gbv_NextInstallment,
                                       v_installment_object_id
                                   );

                                   if g_scheduled_payment_list.next( v_scheduled_payment_index ) is null
                                   then

                                       --
                                       --  Set the Next Installment Reference to null for the last Installment
                                       --

                                       pkg_os_object_io.sp_object_bv_set
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_installment_object_id,
                                            gbv_NextInstallment,
                                            null
                                       );

                                   end if;
                                   
                                   -- [RR] Added the datamart update. Saw that missing
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_installment_object_id,
                                        v_datamart_tf
                                   );

                              else
                                   --
                                   -- OSBILLING-4516
                                   -- Added this case to update the payment plan object ID to the instalment object when the user changes the premium amount.
                                   -- this updation will not be done case of the BTT and CPP transaction.
                                   --
                                   if  v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                                       and
                                       v_policy_transaction_sub_type
                                       not in
                                       (
                                            gTrxSubType_changeBilltype,
                                            gTrxSubType_changepayplan
                                       )
                                   then

                                       pkg_os_object_io.sp_object_bv_set
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_installment_object_id,
                                            gbv_Ref_Bel_to_PayPlan_ID,
                                            v_chosen_pay_plan_id
                                       );

                                       -- VAULTDEV-6645
                                       -- Set termpayer ref on term installments.
                                       pkg_os_object_io.sp_object_bv_set
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_installment_object_id,
                                            pkg_db_multipayer.gbv_Installment_Ref_PTermPayer,
                                            g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id
                                       );
                                            
                                       if v_session_control.gLogging_Full
                                       then

                                             pkg_os_logging.sp_log
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 '.. Set term payer ref on term installments: '||v_installment_object_id
                                             );

                                       end if;

                                   end if;

                              end if; -- if the scheudled payment object does not exist below the term, or we're renewing ... @@@VG what about rewrite?--- we think we can get rid of renewal condition

                              v_prev_installment_id := v_installment_object_id;

                              v_scheduled_payment_count := v_scheduled_payment_count + 1;

                         --UTPRODUCT-4446 start
                         
                         else
                              --
                              -- OSBILLING-4516
                              -- Added this case to update the payment plan object ID to the instalment object when the user changes the premium amount.
                              -- this updation will not be done case of the BTT and CPP transaction.
                              --
                              v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                              in_session_id,
                                                              in_transaction_id,
                                                              g_scheduled_payment_list(v_scheduled_payment_index),
                                                              gbv_ScheduledRefInstallment
                                                         );

                              if v_installment_object_id is not null then
                                   
                                   if  v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                                       and
                                       v_policy_transaction_sub_type
                                       not in
                                       (
                                            gTrxSubType_changeBilltype,
                                            gTrxSubType_changepayplan
                                       )
                                   then

                                       pkg_os_object_io.sp_object_bv_set
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_installment_object_id,
                                            gbv_Ref_Bel_to_PayPlan_ID,
                                            v_chosen_pay_plan_id
                                       );

                                       -- VAULTDEV-6645
                                       -- Set termpayer ref on term installments.
                                       pkg_os_object_io.sp_object_bv_set
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_installment_object_id,
                                            pkg_db_multipayer.gbv_Installment_Ref_PTermPayer,
                                            g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id
                                       );
                                                 
                                       if v_session_control.gLogging_Full
                                       then

                                             pkg_os_logging.sp_log
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 '.. Set term payer ref on term installments: '||v_installment_object_id
                                             );

                                       end if;

                                   end if;
                              end if;

                         end if;
                         --UTPRODUCT-4446 end
                          -- if the installment type is an installment, not a stub.
                         --OSPRODUCT-7371 end
                         
                         v_create_debit_trx         :=      'T';
                         v_create_credit_trx        :=      'T';
                         v_scheduled_payment_index  :=     g_scheduled_payment_list.next(v_scheduled_payment_index);

                    end loop;     -- while v_scheduled_payment_index is not null loop
                    
                    -- [RR] Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Create Debit: ' || v_create_debit_trx ||
                              '.. Create Credit: ' || v_create_credit_trx
                                                                                                                                    
                         );

                    end if;

                    g_payer_list(v_idx).scheduled_payment_list := g_scheduled_payment_list; -- #MP

                    v_idx := g_payer_list.next(v_idx); --#MP

               end loop; -- loop payers  -- #MP
               
          end;
          
     end if; -- For transaction types other than change withdrawal ...

     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     -- Create an FITransaction Object under PolicyTransaction for Debits Generation
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     if v_create_debit_trx = 'T'
     then

         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Create FITransaction Object for Debit Generation'
              );

         end if;

         --
         -- Create and setting values of FITransaction Object under PolicyTransaction for Debits Generation
         --          
         pkg_db_object.sp_fitransaction_create
         (
              in_session_id                   =>  in_session_id,
              in_transaction_id               =>  in_transaction_id,
              in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
              in_fitrx_ref_billing_account    =>  v_billing_account_id,--OSBILLING-5405
              out_fitransaction_id            =>  v_fi_trx_debit_id,
              in_fitrx_type                   =>  gFITrxType_Dr_Generate,
              in_fitrx_ref_associatedpolicy   =>  v_master_policy_id,
              in_fitrx_ref_associatedpoltrx   =>  in_policy_trx_id,
              in_fitrx_ref_actionpolicy       =>  v_master_policy_id,
              in_fitrx_ref_actionpoltrx       =>  in_policy_trx_id,
              in_fitrx_effective_date         =>  v_policy_trx_effective_date

          );

         if v_session_control.gLogging_Full
         then

            pkg_os_logging.sp_log
            (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '......... Created reference from FItransaction Object: '||v_fi_trx_debit_id||
                 ' to Policy Object ID:'||v_master_policy_id||
                 ' and to Policy Transaction Object: '||in_policy_trx_id
            );

         end if;

     else

         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '... Did not create FITransaction Object for Debit Generation because flag was False.'
              );

         end if;

     end if; -- end of v_create_debit_trx check


     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     -- Create an FITransaction Object under PolicyTransaction for Credit Generation
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     if v_create_credit_trx = 'T'
     then

         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Create FITransaction Object for Credit Generation'
              );

         end if;

         --
         -- Create and set values of FITransaction Object under PolicyTransaction for Credit Generation
         --
          
         pkg_db_object.sp_fitransaction_create
         (
              in_session_id                   =>  in_session_id,
              in_transaction_id               =>  in_transaction_id,
              in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
              in_fitrx_ref_billing_account    =>  v_billing_account_id,--OSBILLING-5405
              out_fitransaction_id            =>  v_fi_trx_credit_id,
              in_fitrx_type                   =>  gFITrxType_Cr_Generate,
              in_fitrx_ref_associatedpolicy   =>  v_master_policy_id,
              in_fitrx_ref_associatedpoltrx   =>  in_policy_trx_id,
              in_fitrx_ref_actionpolicy       =>  v_master_policy_id,
              in_fitrx_ref_actionpoltrx       =>  in_policy_trx_id,
              in_fitrx_effective_date         =>  v_policy_trx_effective_date

          );

          if v_session_control.gLogging_Full
          then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '......... Created reference from FItransaction Object '||v_fi_trx_credit_id||
                              ' to Policy Object '||v_master_policy_id||
                   ' and to Policy Transaction Object '||in_policy_trx_id
              );

          end if;

     else

         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '... Did not create FITransaction Object for Credit Generation ... because flag was False.'
              );

         end if;

     end if; -- end of v_create_credit_trx check

     v_bv_table.delete;

     if v_fi_trx_credit_id is not null
     then
          
          v_bv_table ( gbv_BillAccTrxSet_CurrTrx                    ).business_variable_value     :=   v_fi_trx_credit_id;

     else

          v_bv_table ( gbv_BillAccTrxSet_CurrTrx                    ).business_variable_value     :=   v_fi_trx_debit_id;

     end if;


     --GCNA-1253 set CurrentTransaction reference for Withdrawal change
     if v_fi_trx_withdrawal_id is not null
     then

          v_bv_table ( gbv_BillAccTrxSet_CurrTrx                    ).business_variable_value     :=   v_fi_trx_withdrawal_id;

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billing_acc_trx_set_id||
               ', Credit FITransaction: '||v_fi_trx_credit_id||
               ', Debit FITransaction: '||v_fi_trx_debit_id
          );

     end if;

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          v_bv_table
     );

     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     --   Create debits and credits ...
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     -- #MP
     
     v_idx := g_payer_list.first;
     
     -- OSBILLING-2281
     -- Get the current view before going into below loop
     -- [RR} Already retrieved
     v_curr_mod_payplan_ind := v_process_modified_PayPlanInd;
                               /*pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    v_policy_image_id,
                                    gbv_PTP_ProcessModPayPlanInd
                               );*/
     
     -- [RR] Log added
     if v_session_control.gLogging_Full then          

         pkg_os_logging.sp_log
         (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '.. Start creating debits and credits..' || 
              '..Pay Plan Modify Indicator: '|| v_curr_mod_payplan_ind 
         );

     end if;
     
     while v_idx is not null loop     
          
          --if PKG_DB_MULTIPAYER.fn_multipayer_mode_tf
          --   (
          --        in_session_id,
          --        in_transaction_id,
          --        v_policy_image_id
          --   )
          --then

          --
          -- Get the details of Chosen Payment Plan from Policy Image !!!!!
          --
          v_chosen_pay_plan_id     := g_payer_list(v_idx).chosen_payment_plan; -- #MP
          v_modified_pay_plan_id   := g_payer_list(v_idx).modified_payment_plan; -- #MP --OSBILLING-7448
          v_payment_plan_md_id     := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           v_chosen_pay_plan_id,
                                           pkg_os_constant_bv.gbv_PaymentPlanID
                                      );


          v_payment_plan_md_row    := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_plan_md_id);

          g_scheduled_payment_list := g_payer_list(v_idx).scheduled_payment_list;
          
          -- [RR] Rewritten to make more sense
          if v_session_control.gLogging_Full then          

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                                        
                   '.. Considering Payer ID: ' || g_payer_list(v_idx).PTPayer_object_id ||
                   '.. Chosen Pay Plan: '      || v_chosen_pay_plan_id                  ||
                   '.. Modified Pay Plan ID: ' || v_modified_pay_plan_id                ||
                   '.. Chosen Pay Plan MD ID: '|| v_payment_plan_md_id 
                                                                                           
                                                                                                                                
              );

          end if;
          
          -- OSPRODUCT-2281
          -- policy is multipayer and bill plan enabled
          /*if nvl(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_image_id, pkg_db_multipayer.gbv_MultiPayerEnabled_PTP), 2) = 1 --32704624
             and
             nvl(pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_policy_image_id, pkg_db_payment_arrangement.gbv_PTPBillPlanEnabledTF), 2) = 1 --32572348
             and
             nvl(v_curr_mod_payplan_ind,2) = 1 -- pay plan modify indicator is set*/
          -- [RR] Rewritten without BV get
          if nvl(v_multipayer_enabled_tf, g_No) = g_Yes --32704624
             and
             nvl(v_bill_plan_enabled_tf, g_No) = g_Yes --32572348
             and
             nvl(v_curr_mod_payplan_ind, g_No) = g_Yes -- pay plan modify indicator is set
          then 
               
               -- if the indicator is yes at least for 1 payer the payment plan is changed
               -- Below logic will set the flag to 2 when considering the payer for which the pay plan is not changed
               if v_modified_pay_plan_id is null
                  or 
                  v_chosen_pay_plan_id = v_modified_pay_plan_id
               then
                    
                    if v_session_control.gLogging_Full then          

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '. Updating indicator to No on PTP for the payer ' --OSBILLING-7448
                        );

                    end if;
               
                    pkg_os_object_io.sp_object_bv_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_policy_image_id,
                        gbv_PTP_ProcessModPayPlanInd,
                        g_No
                    );
                    
                    -- [RR] Resetting the variable as well to avoid BV get
                    v_process_modified_PayPlanInd := g_No;
                    
               else
                    
                    if v_session_control.gLogging_Full then          

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '. Updating indicator on PTP to Yes for the payer ' --OSBILLING-7448
                        );

                    end if;
                    
                    pkg_os_object_io.sp_object_bv_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_policy_image_id,
                        gbv_PTP_ProcessModPayPlanInd,
                        g_Yes
                    );
                    
                    -- [RR] Resetting the variable as well to avoid BV get
                    v_process_modified_PayPlanInd := g_Yes;
                    
               end if;
               
          end if;
          
          -- [RR] third BV present for indicator.
          -- v_process_mod_PayPlan_ind := v_process_modified_PayPlanInd;
          
          if v_session_control.gLogging_Full
          then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   'Modify Pay Plan Indicator from PTP: ' || v_process_modified_PayPlanInd ||
                   'PT Subtype: ' || v_policy_trx_subtype_endr_type
              );

          end if;
               
          if v_transaction_installment_type = gInstallmentType_Installment
          then
               
               begin
                    
                    --
                    --   Since this is true for transactions that create a new term ...
                    --
                    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    --
                    --   Determine the start installment number and the total number of remaining installments ..
                    --
                    ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    v_scheduled_payment_index := g_scheduled_payment_list.first;
                    
                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             'Count:' || g_scheduled_payment_list.count
                        );
                    end if;
                    
                    v_installment_number := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 g_scheduled_payment_list(v_scheduled_payment_index),
                                                 gbv_ScheduledPayment_num
                                            );

                    v_installment_start_number := v_installment_number;

                    v_remaining_installments := g_scheduled_payment_list.count;
                    
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. Installment Number: ' || v_installment_number ||
                             '.. Installment Start Number: ' || v_installment_start_number ||
                             '.. Remaining Installments:'    || v_remaining_installments
                         );

                    end if;

               end; -- processing of gInstallmentType_Installment
               
          else
               
               -- The v_transaction_installment_type is gInstallmentType_Stub...
               begin

                    --
                    --  This is a Stub, so calculate the remaining number of scheduled payments installments
                    --
                    v_scheduled_payment_index := g_scheduled_payment_list.first;

                    while v_scheduled_payment_index is not null loop

                        v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        g_scheduled_payment_list(v_scheduled_payment_index),
                                                        gbv_ScheduledRefInstallment
                                                   );

                        v_installment_actual_date := to_date
                        (
                             pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_installment_object_id,
                                  gbv_installment_due_date
                             ),pkg_os_constant.DragonDateFormatDefault
                        );

                        if v_session_control.gLogging_Full
                        then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '.. Scheduled Payment Installment ID: '||v_installment_object_id||
                                  '.. Installment Actual Due Date: '      ||v_installment_actual_date||
                                  '.. Policy Transaction Effective Date: '||v_policy_trx_effective_date
                             );

                        end if;

                        if v_installment_actual_date >= trunc(to_date(v_policy_trx_effective_date,pkg_os_constant.DragonDateFormatDefault))
                        then

                             v_installment_number := pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                g_scheduled_payment_list(v_scheduled_payment_index),
                                                                gbv_ScheduledPayment_num
                                                           );

                             v_remaining_inst_index := v_installment_number;

                             v_remaining_inst_list(v_remaining_inst_index) := v_installment_object_id;
                             
                             -- [RR] Log added
                             if v_session_control.gLogging_Full
                             then

                                   pkg_os_logging.sp_log
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '.. Installment Number: ' || v_installment_number 
                                   );

                             end if;

                        end if;

                        v_scheduled_payment_index := g_scheduled_payment_list.next(v_scheduled_payment_index);

                    end loop;     -- while v_scheduled_payment_index is not null loop

                    if v_remaining_inst_list.count > 0
                    then

                         v_installment_start_number := v_remaining_inst_list.first;

                    end if;

                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '...... Remaining Installment Count: '||v_remaining_inst_list.count||' First Installment Number:'||v_installment_start_number
                        );

                    end if;

                    if v_transaction_installment_type = gInstallmentType_Stub
                    then

                         ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                         --
                         --   If a stub, create a TermScheduledPayment for the stub ...
                         --
                         ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                         v_current_stub_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_chosen_pay_plan_id,
                              gbv_PaymentPlanCurrentStub
                         );

                         --
                         -- Check if a Current Stub exists for the Payment Plan
                         --

                         if v_current_stub_id is not null
                         then

                              if v_session_control.gLogging_Full
                              then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '... Current Stub exists, ID: '||v_current_stub_id||', so creating the PaymentPlanScheduledPaymentInstallment Object for Stub'
                                  );

                              end if;

                              if nvl(v_process_modified_PayPlanInd, pkg_os_constant.gBoolean_False ) = pkg_os_constant.gBoolean_False
                              then
                                   
                                   pkg_os_object.sp_object_create
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        gObjType_ScheduledInstallment,
                                        v_policy_term_id,
                                        v_installment_object_id
                                   );

                                   if v_session_control.gLogging_Full then                                   

                                        pkg_os_logging.sp_log
                                        (
                                           in_session_id,
                                           in_transaction_id,
                                           v_procedure_name,
                                           '...... Created PaymentPlanScheduledPaymentInstallment Object ID: '||v_installment_object_id
                                        );
                                        
                                   end if;

                                   --
                                   -- Set the Reference from the newly created Installment Object to PolicyTermPayer object
                                   --
                                   if v_session_control.gLogging_Full
                                   then
                                        
                                        pkg_os_logging.sp_log
                                        (
                                           in_session_id,
                                           in_transaction_id,
                                           v_procedure_name,
                                           '... Set the Reference from the newly created Installment Object to PolicyTermPayer object '|| g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id
                                        );
                                        
                                   end if;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                      in_session_id,
                                      in_transaction_id,
                                      v_installment_object_id,
                                      PKG_DB_MULTIPAYER.gbv_Installment_Ref_PTermPayer ,
                                      g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id
                                   );
                                   --
                                   -- Set the Reference from the current stub to the newly created Installment Object ...
                                   --

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                      in_session_id,
                                      in_transaction_id,
                                      v_current_stub_id,
                                      gbv_ScheduledRefInstallment,
                                      v_installment_object_id
                                   );

                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                           in_session_id,
                                           in_transaction_id,
                                           v_procedure_name,
                                           '... Set the Reference from PaymentPlanScheduledPayment to Installment Object'||
                                           ', Current Stub ID: '||v_current_stub_id||
                                           ', Chosen Pay Plan ID: '||v_chosen_pay_plan_id
                                        );

                                   end if;

                                   --
                                   -- Now decorate the newly created scheduled installment object ... First, Get the due date from ScheduledPayment object
                                   --
                                   v_installment_due_date := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_current_stub_id,
                                                                    gbv_billing_due_date
                                                                );
                                                                
                                   v_installment_issue_date := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_current_stub_id,
                                                                    gbv_billing_issue_date
                                                                );

                                   v_installment_actual_date := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_current_stub_id,
                                                                    gbv_actual_due_date
                                                                 );

                                   v_installment_actual_end := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_current_stub_id,
                                                                    gbv_actual_end_date
                                                               );

                                   v_install_withdrawal_date := pkg_os_object_io.fn_object_bv_get
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_current_stub_id,
                                                                     gbv_billing_withdr_date
                                                                );

                                   v_installment_type := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_current_stub_id,
                                                               gbv_ScheduledPaymentType
                                                           );

                                   v_installment_no_calculated := pkg_os_object_io.fn_object_bv_get
                                                                    (
                                                                         in_session_id,
                                                                         in_transaction_id,
                                                                         v_current_stub_id,
                                                                         gbv_installement_no_calc
                                                                    );
                                   v_bv_table.delete;

                                   v_bv_table ( gbv_installment_due_date).business_variable_value     :=   v_installment_due_date;
                                   v_bv_table ( gbv_installment_issue_date).business_variable_value     :=   v_installment_issue_date;
                                   v_bv_table ( gbv_installment_actual_date).business_variable_value     :=   v_installment_actual_date;
                                   v_bv_table ( gbv_installment_actual_end                        ).business_variable_value     :=   v_installment_actual_end;
                                   v_bv_table ( gbv_install_withdrawal_date ).business_variable_value     :=   v_install_withdrawal_date;
                                   v_bv_table ( gbv_installment_type).business_variable_value     :=   v_installment_type;
                                   v_bv_table ( gbv_installment_number).business_variable_value     :=   to_number(v_installment_no_calculated);
                                   v_bv_table ( gbv_Installment_PayPlan_MD_ID             ).business_variable_value     :=   v_payment_plan_md_id;
                                   v_bv_table ( gbv_Installment_BillMethodID              ).business_variable_value     :=   v_policy_billing_method;
                                   v_bv_table ( gbv_Ref_Bel_to_PayPlan_ID                 ).business_variable_value     :=   v_chosen_pay_plan_id;     -- OSBILLING-4478
                                   v_bv_table ( gbv_Install_IsCrrntPayPlanInst            ).business_variable_value     :=   gInstalmnt_CrntPayPlan_True;     -- OSBILLING-7074
                                   
                                   if v_session_control.gLogging_Full then                                                  

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '... Installment Due Date: '||v_installment_due_date||
                                             '... Installment Issue Date: '||v_installment_issue_date||
                                             '... Installment Actual Due Date: '||v_installment_actual_date||
                                             '... Installment End Date: '||v_installment_actual_end||
                                             '... Installment Withdrawal Date: '||v_install_withdrawal_date||
                                             '... Installment Number: '||v_installment_no_calculated
                                        );

                                   end if;

                                   pkg_os_object_io.sp_object_bv_set
                                   (
                                      in_session_id,
                                      in_transaction_id,
                                      v_installment_object_id,
                                      v_bv_table
                                   );

                                   if (v_policy_transaction_type = pkg_os_constant.gPolicyTran_Endorsement and (v_policy_transaction_sub_type = pkg_db_payplan_modify.gEndSubType_ILRDefPrem or v_policy_transaction_sub_type = pkg_db_payplan_modify.gEndSubType_PLRDefPrem )) -- Deferred Premium
                                   then

                                        v_stub_sequence_number := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_current_stub_id, pkg_db_payplan_modify.gbv_SchedPayment_Stub_Num );
                                        pkg_os_object_io.sp_object_bv_set( in_session_id, in_transaction_id, v_chosen_pay_plan_id, pkg_db_payplan_modify.gbv_PayPlan_DefStubsCount, v_stub_sequence_number );

                                   end if;


                                   ---
                                   --- Update the Dragon_PaymenyInstallment datamart
                                   ---
                                   pkg_os_datamart.sp_datamart_update_row
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     v_installment_object_id,
                                     v_datamart_tf
                                   );

                              end if; -- Modified payment False ...

                              --
                              --   @@@VG: The sole purpose of the code below appears to be to populate v_create_debit_trx and v_create_credit_trx which are not used any more ... so can we
                              --   whack it? -- we think we can have two new bvs for debit generation and credit generation at PT level and set that during paymentplan modify, and use that to determine for creation rather than creating it and deleting in the end
                              --

                              v_scheduled_element_list.delete;

                              pkg_os_object_search.sp_object_children_of_type_get
                              (
                                  in_session_id,
                                  in_transaction_id,
                                  v_current_stub_id,
                                  gObjType_ScheduledElement,
                                  v_scheduled_element_list
                              );

                              if v_session_control.gLogging_Full
                              then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '...... For Stub Object ID: '||
                                       v_current_stub_id
                                       ||', number of PaymentPlanScheduledPaymentElement objects found: '
                                       ||v_scheduled_element_list.count
                                  );

                              end if;

                              v_scheduled_element_index := v_scheduled_element_list.first;
                              
                              while v_scheduled_element_index is not null
                              loop
                                   
                                   v_element_creator_poltrns := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_scheduled_element_list(v_scheduled_element_index),
                                                                      gbv_ElementRefCreatorPolTrns
                                                                 );

                                   if v_element_creator_poltrns = in_policy_trx_id then

                                        v_create_debit_flag := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_scheduled_element_list(v_scheduled_element_index),
                                                                    gbv_create_debit_flag
                                                               );

                                        v_create_credit_flag := pkg_os_object_io.fn_object_bv_get
                                                                (
                                                                     in_session_id,
                                                                     in_transaction_id,
                                                                     v_scheduled_element_list(v_scheduled_element_index),
                                                                     gbv_create_credit_flag
                                                                );

                                        if v_session_control.gLogging_Full
                                        then

                                            pkg_os_logging.sp_log
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_procedure_name,
                                                 '......... For PaymentPlanScheduledPaymentElement Object ID: '
                                                 ||v_scheduled_element_list(v_scheduled_element_index)
                                                ||', create_debit_trx: '||v_create_debit_flag
                                                 ||', create_credit_trx: '||v_create_credit_flag
                                            );

                                        end if;

                                        if v_create_debit_flag   =   pkg_os_constant.gBoolean_True
                                        then

                                            v_create_debit_trx  :=  'T'; --- @@@VG: This entire thing seems useless since  v_create_debit_trx is not used below here. Should it be?

                                        end if;

                                        if v_create_credit_flag   =   pkg_os_constant.gBoolean_True
                                        then

                                            v_create_credit_trx  :=  'T';

                                        end if;

                                   end if; -- if the element in question created by the current transaction ...

                                   v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

                              end loop; -- For each payment element in the current stub.
                              
                         else

                              if v_session_control.gLogging_Full
                              then

                                  pkg_os_logging.sp_log
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       '... Current Stub does not exist. Do not create the PaymentPlanScheduledPaymentInstallment Object for the Stub.'
                                  );

                              end if;

                         end if; -- if v_current_stub_id is not null

                    end if; -- v_transaction_installment_type is a Stub, i.e. not a transaction that will set up a new schedule, but rather reuse an existing one.

               end; -- processing of gInstallmentType_Stub
               
          end if;
          
          -- [RR] Already retrieved
          /*v_process_mod_PayPlan_ind := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            gbv_PTP_ProcessModPayPlanInd
                                       );*/
          -- v_process_mod_PayPlan_ind := v_process_modified_PayPlanInd;--Durgesh2517 we should depricate one variable and use only one
          
          if not (  --OSPRODUCT-12423
             --nvl(v_rb_policy_transaction_type,0) = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
             nvl(v_policy_transaction_type,0) = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
             and
             nvl(v_policy_trx_subtype_endr_type,0) = gChangeBillingMethod
             ) 
             and  --OSPRODUCT-12423
             (
              nvl(v_process_modified_PayPlanInd,0) <> pkg_os_constant.gBoolean_Yes                 
                 or 
              nvl(v_policy_trx_subtype_endr_type,0) <> gEndorsement  --OSBILLING-7448
              or 
              v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback -- KR CPP --OSPRODUCT-1864
               )
          then
               
               sp_debit_credit_create
               (
                   in_session_id,
                   in_transaction_id,
                   v_master_policy_id,
                   v_policy_image_id,
                   v_policy_term_id,
                   in_policy_trx_id, -- check its value
                   v_product_id,
                   v_filing_id,
                   v_policy_trx_effective_date,
                   v_policy_billing_method,
                   v_agency_billing_acc_id,
                   v_fi_trx_debit_id,
                   gFITrxType_Dr_Generate,
                   --nvl(v_modified_pay_plan_id,v_chosen_pay_plan_id), --OSBILLING-7448
                   v_chosen_pay_plan_id,
                   v_payment_plan_md_row,
                   v_transaction_installment_type,
                   v_installment_start_number,
                   v_remaining_installments,
                   v_remaining_inst_list,
                   v_ultimate_customer_id,
                   v_installment_object_id,
                   v_tot_change_amount,
                   v_count_rec,
                   v_fi_trx_credit_id,
                   v_chosen_pay_plan_id, --VAULTDEV-6645
                   v_dm_value_table -- [RR] New dev (new parameter added to the signature)
               );
               
          end if;
          
          -- [RR] Rewritten to make more sense
          if v_session_control.gLogging_Full
          then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   'Debit Credit created' 
              );
              
          end if;
          
          v_idx := g_payer_list.next(v_idx); -- in the single payer mode, there is only record in the g_payer_list. So, we will exit after first interation.
     
     end loop;
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     -- Set the Debit and Credit FITransaction Status to Processed
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     if v_fi_trx_debit_id is not null then     
          
          v_bv_table.delete;
          ---Durgesh2517 align below list values to make it more readable
          v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState ).business_variable_value     :=   gFITrxStatus_Processed;
          v_bv_table ( gbv_FITrxProcessDate                     ).business_variable_value     :=   v_current_date;
          v_bv_table ( pkg_db_object.gbv_FITrx_AccntingPeriod   ).business_variable_value     :=                      pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_fi_trx_debit_id);

          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_fi_trx_debit_id,
              v_bv_table
          );
          
     end if;

     if v_fi_trx_credit_id is not null then
     
          v_bv_table.delete;
          ---Durgesh2517 align below list values to make it more readable
          v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState ).business_variable_value     :=   gFITrxStatus_Processed;
          v_bv_table ( gbv_FITrxProcessDate                     ).business_variable_value     :=   v_current_date;
          v_bv_table ( pkg_db_object.gbv_FITrx_AccntingPeriod   ).business_variable_value     :=   pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_fi_trx_credit_id);

          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_fi_trx_credit_id,
              v_bv_table
          );

     end if;

     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     -- Set the Debit and Credit FITransaction Status to Processed
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     
     if v_session_control.gLogging_Full
     then

         pkg_os_logging.sp_log
         (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              'Transaction type: '  || v_policy_transaction_type
         );
              
     end if;
     -- OSBILLING-650 , To cater to the change in payment plan for RollBack
     if v_policy_transaction_type in ( pkg_os_policy_transaction.gPolicyTrxType_Endorsement, pkg_os_policy_transaction.gPolicyTrxType_Rollback )
     then
          
          
          --VAULTDEV-6645
          /*
          v_mod_pay_plan_id   :=        pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_policy_image_id,
                                                 gbv_PolicyRefModPayPlan
                                            ); */
          -- OSPRODUCT-2281
          -- Policy is multipayer and bill plan is enabled
          -- Reverted to what it was for further processing
          if nvl(v_multipayer_enabled_tf, g_No) = g_Yes --32704624
             and
             nvl(v_bill_plan_enabled_tf, g_No) = g_Yes --32572348
          then
               
               pkg_os_object_io.sp_object_bv_set
               (
                   in_session_id,
                   in_transaction_id,
                   v_policy_image_id,
                   gbv_PTP_ProcessModPayPlanInd,
                   v_curr_mod_payplan_ind
               );
               
          end if;
          
          -- [RR] Removed BV get
          v_process_modified_PayPlanInd := v_curr_mod_payplan_ind;
          -- v_process_mod_PayPlan_ind     := v_curr_mod_payplan_ind;
          
          /*v_process_mod_PayPlan_ind := pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_image_id,
                                            gbv_PTP_ProcessModPayPlanInd
                                       );*/

          if v_session_control.gLogging_Full
          then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '.. Modified PayPlan ID : '||v_mod_pay_plan_id
                   ||' Process Indicator of Modified PayPlan : '||v_process_modified_PayPlanInd
                   ||' v_policy_transaction_type: '            || v_policy_transaction_type
                   ||' v_policy_trx_subtype_endr_type: '       || v_policy_trx_subtype_endr_type
              );

          end if;
         
          -- It is a rollback transation and create FIchanges to offset the created FIcanges

     end if;

     --
     --   there is a change in payment plan or in billing method ...
     --
     
     if v_process_modified_PayPlanInd = pkg_os_constant.gBoolean_Yes
        or
        (
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
             and
             v_policy_trx_subtype_endr_type = gChangeBillingMethod
        )
        or
        (
             v_rb_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
             and
             v_policy_trx_subtype_endr_type = gChangeBillingMethod
        )
     then

          if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
          then

               --
               --   If we're doing a rollback, then find the BATS that we are rolling back ...
               --

               v_rollback_batrxset_id := pkg_os_object_io.fn_object_bv_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_to_be_rb_trx_id,
                    gbv_PolTrxRefBillingAccTrxSet
               );

               if v_session_control.gLogging_Full  --OSBILLING-5525
               then

                    pkg_os_logging.sp_log
                        (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '..Policy Transaction ID : '|| v_rollback_batrxset_id ||
                         '..Original BATS for rollback : '|| v_rollback_batrxset_id
                        );

               end if;

               if (
                       v_rb_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
                       and
                       v_policy_trx_subtype_endr_type = gChangeBillingMethod
                  )

               then
                    
                    v_rollback_batrxset_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_rollback_batrxset_id,
                                                       31756446 -- to be converted to gVariable
                                                  );
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'This is Rollback of Change Billing Method. ' ||
                              'Plicy Transaction ID : '|| v_rollback_batrxset_id ||
                              'Rollback BATS now used : '|| v_rollback_batrxset_id
                         );
                         
                    end if;

               end if; --OSBILLING-5525
               --OSPRODUCT-4664 start
               --
               --   For each FICHANGE in the BATS rolled back ... @@@VG: What is this doing? We already created FICHANGEs above?
               --             
               /*for v_fichange in c_fichange(v_rollback_batrxset_id , v_to_be_rb_trx_id) --OSBILLING-7068
               loop

                    pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  (v_fichange.action_delta*-1),
                       in_fichange_ref_fitem          =>  v_fichange.fitem_id,
                       in_fichange_sum_include        =>  v_fichange.sum_include_tf,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );

                    -- Update the datamar of FIchange and fitem
                    pkg_os_datamart.sp_datamart_update_row
                    (
                       in_session_id,
                       in_transaction_id,
                       v_fichange.fitem_id,
                       v_datamart_tf
                    );

               end loop;*/ -- For each FICHANGE in the BATS rolled back
               
               --
               --   For each FITEM associated with the BATS we are rolling back, loop ...
               --               
/*               for v_fitem in c_fitem ( v_rollback_batrxset_id , v_to_be_rb_trx_id)--OSBILLING-7068
               loop

                    -- Create a reversal FITEM ...
                    -- [RR] Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. FItem: '|| v_fitem.fitem_id ||
                             '.. Billing Element MD ID: ' || v_fitem.billing_element_md_id
                        );

                   end if;
                   
                   pkg_db_object.sp_fitem_create
                    (
                        in_session_id                =>    in_session_id,
                        in_transaction_id            =>    in_transaction_id,
                        in_parent_object_id          =>    v_fitem.BILLING_ACCOUNT_ID,--v_customer_billing_acc_id, --VAULTDEV--6645
                        out_fitem_id                 =>    v_fitem_id,
                        in_fitem_debit_credit        =>    v_fitem.fitem_type_id,--gFItem_Credit,--VAULTDEV--6645
                        in_fitem_category            =>    v_fitem.fitem_category_id,--pkg_db_object.gFItem_Category_Premium,--VAULTDEV--6645
                        in_fitem_subcategory         =>    v_fitem.fitem_sub_category_id,--gFItem_SubCat_PayChngCredit, -- @@@VG: Flaming kludge, this should NOT be called a PayChngCredit ...--VAULTDEV--6645
                        in_fitem_effective_date      =>    v_policy_trx_effective_date,
                        in_fitem_billing_status      =>    gFItemBillStatus_Active,
                        in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                        in_fitem_bill_status_date    =>    to_char( NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_policy_image_id)),pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                        in_fitem_Earningstatus       =>    null,
                        in_fitem_earned_amount       =>    null,
                        in_fitem_unearned_amount     =>    null,
                        in_fitem_paid_amount         =>    null,
                        in_FItemRefInstallment       =>    null,
                        in_FItemRefPolicy            =>    v_master_policy_id,
                        in_FItemRefPolicyTxn         =>    in_policy_trx_id,
                        in_FitemRefPolicyTerm         =>   v_policy_term_id,
                        in_FItemRefCustomer          =>    v_ultimate_customer_id,
                        in_FItemRefEntityBelongsTo   =>    v_primary_entity_id,
                        in_FItemRefAssWithFItrx      =>    v_fi_trx_debit_id,
                        in_Fitem_billing_elt_md_id   =>    v_fitem.billing_element_md_id --OSPRODUCT-3079
                   );

                   --
                   -- Call the FIChange creation procedure with the input parameters identified hitherto
                   --
                   pkg_db_object.sp_fichange_create
                   (
                        in_session_id                  =>  in_session_id,
                        in_transaction_id              =>  in_transaction_id,
                        in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                        out_fichange_id                =>  v_fi_change_id,
                        in_fichange_action             =>  gFIChange_Create,
                        in_fichange_action_delta       =>  (v_fitem.initial_amount*-1),
                        in_fichange_ref_fitem          =>  v_fitem_id,
                        in_fichange_sum_include        =>  gFIChange_Yes,
                        in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                        in_fichange_ref_pol            =>  v_master_policy_id,
                        in_fichange_ref_pol_trx        =>  in_policy_trx_id,
                        in_fichange_belongs_to         =>  v_billing_acc_trx_set_id
                   );

                   If (v_fitem.fitem_category_id = gFItem_Cat_Commission and v_fitem.fitem_type_id = gFItem_Credit) 
                        or 
                        (v_fitem.fitem_category_id <> gFItem_Cat_Commission and v_fitem.fitem_type_id = gFItem_Debit) then  --OSPRODUCT-3703
                        -- Create a Fichange to close out the old Fitem and the new Fitem -- KR CPP  --OSPRODUCT-1864
                        pkg_db_object.sp_fichange_create
                        (
                            in_session_id                  =>  in_session_id,
                            in_transaction_id              =>  in_transaction_id,
                            in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                            out_fichange_id                =>  v_fi_change_id,
                            in_fichange_action             =>  gFIChangeAction_Change,--201,
                            in_fichange_action_delta       =>  v_fitem.initial_amount,
                            in_fichange_ref_fitem          =>  v_fitem_id,
                            in_fichange_sum_include        =>  gFIChange_Yes,
                            in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                            in_fichange_ref_pol            =>  v_master_policy_id,
                            in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                            in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                        );                    
                   end if;  --OSPRODUCT-3703                   
                   pkg_os_datamart.sp_datamart_update_row
                   (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_id,
                         v_datamart_tf
                   );
                    
               end loop;
               
               --
               --   For each FICHANGE in the BATS rolled back ... @@@VG: What is this doing? We already created FICHANGEs above?
               --
               for v_fichange in c_fichange (v_rollback_batrxset_id , v_to_be_rb_trx_id) --OSBILLING-7068
               loop

                    \*pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  v_fitem.initial_amount*-1,
                       in_fichange_ref_fitem          =>  v_fitem.fitem_id,
                       in_fichange_sum_include        =>  gFIChange_Yes,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );*\   
                    
                    pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  (v_fichange.action_delta*-1),
                       in_fichange_ref_fitem          =>  v_fichange.fitem_id,
                       in_fichange_sum_include        =>  v_fichange.sum_include_tf,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fichange.fitem_id,
                         v_datamart_tf
                    );

               end loop; -- for each FITEM in the BATS to be rolled back ...
               */
               --
               --   For each FICHANGE in the BATS rolled back ... @@@VG: What is this doing? We already created FICHANGEs above?
               --             
               for v_fichange in c_fichange(v_rollback_batrxset_id , v_to_be_rb_trx_id) --OSBILLING-7068
               loop

                    pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  (v_fichange.action_delta*-1),
                       in_fichange_ref_fitem          =>  v_fichange.fitem_id,
                       in_fichange_sum_include        =>  v_fichange.sum_include_tf,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );

                    -- Update the datamar of FIchange and fitem
                    pkg_os_datamart.sp_datamart_update_row
                    (
                       in_session_id,
                       in_transaction_id,
                       v_fichange.fitem_id,
                       v_datamart_tf
                    );

               end loop; -- For each FICHANGE in the BATS rolled back
                                                                     
               --
               --   For each FITEM associated with the BATS we are rolling back, loop ...
               --               
               for v_fitem in c_fitem ( v_rollback_batrxset_id , v_to_be_rb_trx_id)--OSBILLING-7068
               loop

                    -- Create a reversal FITEM ...
                    -- [RR] Rewritten to make more sense
                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '.. FItem: '|| v_fitem.fitem_id ||
                             '.. Billing Element MD ID: ' || v_fitem.billing_element_md_id
                        );

                   end if;
                          
                   pkg_db_object.sp_fitem_create
                    (
                        in_session_id                =>    in_session_id,
                        in_transaction_id            =>    in_transaction_id,
                        in_parent_object_id          =>    v_fitem.BILLING_ACCOUNT_ID,--v_customer_billing_acc_id, --VAULTDEV--6645
                        out_fitem_id                 =>    v_fitem_id,
                        in_fitem_debit_credit        =>    v_fitem.fitem_type_id,--gFItem_Credit,--VAULTDEV--6645
                        in_fitem_category            =>    v_fitem.fitem_category_id,--pkg_db_object.gFItem_Category_Premium,--VAULTDEV--6645
                        in_fitem_subcategory         =>    v_fitem.fitem_sub_category_id,--gFItem_SubCat_PayChngCredit, -- @@@VG: Flaming kludge, this should NOT be called a PayChngCredit ...--VAULTDEV--6645
                        in_fitem_effective_date      =>    v_policy_trx_effective_date,
                        in_fitem_billing_status      =>    gFItemBillStatus_Active,
                        in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                        in_fitem_bill_status_date    =>    to_char( NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_policy_image_id)),pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                        in_fitem_Earningstatus       =>    null,
                        in_fitem_earned_amount       =>    null,
                        in_fitem_unearned_amount     =>    null,
                        in_fitem_paid_amount         =>    null,
                        in_FItemRefInstallment       =>    null,
                        in_FItemRefPolicy            =>    v_master_policy_id,
                        in_FItemRefPolicyTxn         =>    in_policy_trx_id,
                        in_FitemRefPolicyTerm         =>   v_policy_term_id,
                        in_FItemRefCustomer          =>    v_ultimate_customer_id,
                        in_FItemRefEntityBelongsTo   =>    v_primary_entity_id,
                        in_FItemRefAssWithFItrx      =>    v_fi_trx_debit_id,
                        in_Fitem_billing_elt_md_id   =>    v_fitem.billing_element_md_id --OSPRODUCT-3079
                   );

                   --
                   -- Call the FIChange creation procedure with the input parameters identified hitherto
                   --
                   pkg_db_object.sp_fichange_create
                   (
                        in_session_id                  =>  in_session_id,
                        in_transaction_id              =>  in_transaction_id,
                        in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                        out_fichange_id                =>  v_fi_change_id,
                        in_fichange_action             =>  gFIChange_Create,
                        in_fichange_action_delta       =>  (v_fitem.initial_amount*-1),
                        in_fichange_ref_fitem          =>  v_fitem_id,
                        in_fichange_sum_include        =>  gFIChange_Yes,
                        in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault ),  --OSBILLING-7829
                        in_fichange_ref_pol            =>  v_master_policy_id,
                        in_fichange_ref_pol_trx        =>  in_policy_trx_id,
                        in_fichange_belongs_to         =>  v_billing_acc_trx_set_id
                   );
                     
                                                                                                        
                     
                                                   
                        -- Create a Fichange to close out the old Fitem and the new Fitem -- KR CPP  --OSPRODUCT-1864
                  -- Create a Fichange to close out the old Fitem and the new Fitem -- KR CPP 

                    pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  v_fitem.initial_amount,
                       in_fichange_ref_fitem          =>  v_fitem_id,
                       in_fichange_sum_include        =>  gFIChange_Yes,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );                    


                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_id,
                         v_datamart_tf
                    );

                    pkg_db_object.sp_fichange_create
                    (
                       in_session_id                  =>  in_session_id,
                       in_transaction_id              =>  in_transaction_id,
                       in_parent_fitransaction_id     =>  v_fi_trx_credit_id,
                       out_fichange_id                =>  v_fi_change_id,
                       in_fichange_action             =>  gFIChangeAction_Change,--201,
                       in_fichange_action_delta       =>  v_fitem.initial_amount*-1,
                       in_fichange_ref_fitem          =>  v_fitem.fitem_id,
                       in_fichange_sum_include        =>  gFIChange_Yes,
                       in_fichange_process_date       =>  to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id)), pkg_os_constant.DragonDateFormatDefault),  --OSBILLING-7829
                       in_fichange_ref_pol            =>  v_master_policy_id,
                       in_fichange_ref_pol_trx        =>  in_policy_trx_id ,
                       in_fichange_belongs_to         =>  pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_customer_billing_acc_id,gbv_BillingAccountParent)

                    );   


                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem.fitem_id,
                         v_datamart_tf
                    );

                    
               end loop;               
               --OSPRODUCT-4664 end
               --<OSBILLING-2090 Kostya>

               --
               --   Get the payment plan detailes of the basis transaction of the transaction that we're rolling back ... in other words, get the payment plan
               --   details that we will want to re-adopt ...
               --
               
               -- {RR} Already retrieved
               /*v_basis_trx_image_id := pkg_os_object_io.fn_object_bv_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_to_be_rb_trx_id, -- Endorsement policy trx ID
                    gbv_RefBasisCoverage
               );*/
               v_basis_trx_image_id := v_basis_ptp_id;
               

               --VAULTDEV-6645 start
               --get list of payers from Policy Image level
               --
               pkg_db_multipayer.sp_ptp_payers_get
               (
                    in_session_id         => in_session_id,
                    in_transaction_id     => in_transaction_id,
                    in_ptp_object_id      => v_basis_trx_image_id,
                    io_payer_list         => v_basis_payer_list,           -- indexed by chosen pay plan ID
                    in_print_list         => 'Y'
               );
               
               -- [RR] why cant we use the below list already prepared
               /*v_basis_payer_list1.delete; --empty list of basis ptp payers

               pkg_db_multipayer.sp_ptp_payers_get
               (
                    in_session_id,
                    in_transaction_id ,
                    v_basis_ptp_id,
                    v_basis_payer_list1,
                    'Y',
                    pkg_db_multipayer.g_PayerGet_idx_BilingAccount
               );*/
               --
               
               -- [RR] Alignment fix
               v_basis_idx := v_basis_payer_list.first;

               v_idx := g_payer_list.first;

               while v_idx is not null
               loop
               
                    -- 11530
                    v_chosen_pay_plan_id := g_payer_list(v_idx).chosen_payment_plan;
                    
                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '........g_payer_list(v_idx).PayerBillingAccount_id : '|| g_payer_list(v_idx).PayerBillingAccount_id ||
                             ' v_idx : ' || v_idx || ' v_basis_idx ' || v_basis_idx
                        );

                    end if;
                    
                    if v_policy_trx_subtype_endr_type <> gChangeBillingMethod --OSBILLING-7033 -- to be handled while handling cbm for MP
                    then

                         v_exists_tf := pkg_db_multipayer.fn_payer_exists
                                        (
                                             in_session_id,
                                             in_transaction_id ,
                                             g_payer_list(v_idx).PayerBillingAccount_id,
                                             v_basis_payer_list,
                                             v_basis_idx
                                        );

                    end if;
                    
                    v_basis_trx_chosenPayPlanId      :=  v_basis_payer_list(v_basis_idx).chosen_payment_plan;

                    v_basis_trx_chosenPayPlanMDId    := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_basis_trx_chosenPayPlanId,
                                                             gbv_PaymentPlanMDID
                                                        );

                    v_rb_trx_coverages := pkg_os_object_io.fn_object_bv_get  -- Endorsemetn PTP
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_to_be_rb_trx_id, -- Endorsement policy trx ID
                                               gbv_PolicyTrxRefCoverages
                                          );

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name, '... Creating financials for rollback transaction '||
                              ' Basis Transaction Image ID: '||v_basis_trx_image_id||
                              'v_policy_image_id:'||v_policy_image_id||
                              ' Chosen Pay Plan Reference:'||v_basis_trx_chosenPayPlanId||
                              ' Pay Plan MD ID:'||v_basis_trx_chosenPayPlanMDId||
                              ' payer:'||g_payer_list(v_idx).PTPayer_object_id
                         );

                    end if;

                    --
                    --  Get all Payment Plans of the transaction to be rolled back ...
                    --

                    if g_payer_list(v_idx).PTPayer_object_id is null
                         then
                           pkg_os_object_search.sp_object_children_of_type_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_image_id,
                              gObjType_PayPlan,
                              v_payplan_list
                         );
                    else

                         pkg_os_object_search.sp_object_children_of_type_get
                         (
                              in_session_id,
                              in_transaction_id,
                              g_payer_list(v_idx).PTPayer_object_id,
                              3348124,
                              v_payplan_list
                         );
                    end if;

                    --VAULTDEV--6645 ends

                    v_payplan_idx    :=    v_payplan_list.first;
                    v_basis_pay_plan :=    null;

                    --
                    --  Search for the basis transaction's payment plan among the Plans that belong to the Endorsement policy image
               
                    while v_payplan_idx is not null and v_basis_pay_plan is null loop

                         v_basis_payplan_mdid  := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_payplan_list(v_payplan_idx),
                              gbv_PaymentPlanMDID
                         );

                         if v_basis_payplan_mdid = v_basis_trx_chosenPayPlanMDId
                         then
                              v_basis_pay_plan := v_payplan_list(v_payplan_idx);  -- The v_basis_pay_plan belongs to the 'to-be-rolled back' Endorsement policy image.

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name, '...... Found basis pay plan for the to-be-rolled-back trx. Pay plan ID:'||v_basis_pay_plan );

                              end if;

                         end if;

                         v_payplan_idx    :=    v_payplan_list.next(v_payplan_idx);

                    end loop;
               
                    if v_basis_pay_plan is null then

                         pkg_os_logging.sp_log_error(in_session_id, in_transaction_id, v_procedure_name, '......Unable to find basis pay plan for the to-be-rolled-back trx ...' );

                         raise no_data_found;

                    end if;

                    v_basis_pay_plan_md_row    :=   pkg_db_payplan_modify.fn_payment_plan_row(v_basis_payplan_mdid);

                    -- The rollback trx is creating negating fitems for those ones from v_basis_pay_plan that belongs to the 'to-be-rolled back' Endorsement policy image.
                    --
                    if v_session_control.gLogging_Full
                    then

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             'KP test 3' 
                        );
                        
                    end if;
               
             if not (
             v_rb_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement --OSBILLING-5525
             and
             v_policy_trx_subtype_endr_type = gChangeBillingMethod
        )
                    and nvl(v_process_modified_PayPlanInd,0) <> pkg_os_constant.gBoolean_Yes    --OSPRODUCT-1864
                    then
                         sp_debit_credit_create
                         (
                             in_session_id,
                             in_transaction_id,
                             v_master_policy_id,
                             v_policy_image_id,
                             v_policy_term_id,
                             in_policy_trx_id,
                             v_product_id,
                             v_filing_id,
                             v_policy_trx_effective_date,
                             v_policy_billing_method,
                             v_agency_billing_acc_id,
                             v_fi_trx_debit_id,
                             gFITrxType_Dr_Generate,
                             v_basis_pay_plan,  -- BASIS PAY PLAN
                             v_basis_pay_plan_md_row, -- BASIS PAY PLAN MD ROW
                             v_transaction_installment_type,
                             v_installment_start_number,
                             v_remaining_installments,
                             v_remaining_inst_list,
                             v_ultimate_customer_id,
                             v_installment_object_id,
                             v_tot_change_amount,
                             v_count_rec,
                             v_fi_trx_credit_id ,            --OSBILLING-6156_TR
                             in_choosen_payplan_id    => v_basis_pay_plan,--VAULTDEV-6645
                             in_dm_value_table        => v_dm_value_table -- [RR] New dev
                         );
                         
                         if v_session_control.gLogging_Full
                         then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  'KP test 2' 
                             );
                        end if;
                        
                    end if;
               
                    --
                    -- Update the Instalment BV "Is this the current payment plan instalment" @@@VG: What does this do?
                    --
                    --   1. Set it False for 'to-be-rolled-back' payment plan
                    --
                    
                    sp_curr_payplan_instalmnt_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_chosen_pay_plan_id,
                        gInstalmnt_CrntPayPlan_False
                    );

                    --   2. Set it True for  the payemnt plan we are rolling back to
                    --
                    sp_curr_payplan_instalmnt_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_basis_trx_chosenPayPlanId,
                        gInstalmnt_CrntPayPlan_True
                    );
               
                    --VAULTDEV-6645 start
                    if g_payer_list(v_idx).PTPayer_object_id is null
                    then

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_term_id,
                              gbv_PolicyTermPayPlan,
                              v_basis_pay_plan -- To set the correct payment plan
                         );
                         
                    else
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              g_term_payer_list(g_payer_list(v_idx).PayerEntity_object_id).PTPayer_object_id,
                              pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan, --32705024,-- Durgesh2517 use constant
                              v_basis_pay_plan -- To set the correct payment plan
                         );
                         
                    end if;
                         
                    v_idx := g_payer_list.next(v_idx);

               end loop;
                     --VAULTDEV-6645 ends
          
          else

               --
               --   We are not a rollback ...
               --

               if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                  and
                  v_policy_trx_subtype_endr_type = gChangeBillingMethod
               then

                    v_mod_pay_plan_id := v_chosen_pay_plan_id;
                    /*v_fi_trx_debit_id := null;
                    v_fi_trx_credit_id := null;*/ --OSPRODUCT-11553

                    if v_policyterm_billing_method = gBillingMethod_Agency
                    then

                         --
                         --   We are currently an agency billed policy being endorsed to make us direct billed ...
                         --

                         --
                         -- Get the Producing Agency
                         --
                         -- [RR] Retrieving again but not sure if we can remove this
                         v_producing_agency_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_policy_image_id,
                                                       pkg_os_constant_bv.gbv_GenObjProducingAgency
                                                  );

                         --
                         -- Get the 1-1 child of the Partner of type Billing Account
                         --
                         v_agency_billing_acc_id := pkg_os_object_search.fn_object_11_child_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_producing_agency_id,
                                                         gObjType_BillingAccount
                                                    );
                                                    
                         --v_agency_billing_acc_id := v_billing_account_id;

                         if v_session_control.gLogging_Full
                         then

                            pkg_os_logging.sp_log
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_procedure_name,
                                 '... Producing Agency ID: '||v_producing_agency_id||
                                 ' Producing Agency Billing Account ID: '||v_agency_billing_acc_id
                            );

                         end if;

                    end if;

               end if;

               --VAULTDEV-6645 starts
               v_idx := g_payer_list.first;
               
               while v_idx is not null
               loop
                    
                    begin
                         
                         v_chosen_pay_plan_id := g_payer_list(v_idx).chosen_payment_plan; -- #MP

                         v_mod_pay_plan_id := g_payer_list(v_idx).modified_payment_plan; -- #MP
                         
                         v_basis_ptp_id := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                in_policy_trx_id,
                                                gbv_RefBasisCoverage --21912302-- Durgesh2517 Use constant
                                           );
                                           
                         -- [RR] Replaced with datamart get
                         
                         if nvl(v_multipayer_enabled_tf,g_No) = g_No then
                              
                              v_earlier_payplan_id := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_basis_ptp_id,
                                                           pkg_db_payplan_modify.gbv_PolicyRefChosenPlan
                                                      );
                                                      
                         else                                                      
                         
                              -- [RR] Replaced with datamart                         
                              begin                                   
                               
                                    select 
                                         pp.ptp_payer_id
                                    into
                                         v_payer_id
                                    from
                                         dragon_ptp_payer pp
                                    where
                                         pp.ptp_id = v_basis_ptp_id
                                    and 
                                         pp.billing_account_id = g_payer_list(v_idx).PayerBillingAccount_id;
                                    
                                    v_earlier_payplan_id := pkg_os_object_io.fn_object_bv_get
                                                               (
                                                                    in_session_id,
                                                                    in_transaction_id,
                                                                    v_payer_id,
                                                                    pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan
                                                               );
                                                               
                              exception 
                                   when no_data_found then
                                        null;
                                   
                                                      
                              end;
                              
                              --- OSPRODUCT-3235
                              -- If not found in the datamart
                              if v_earlier_payplan_id is null then
                              
                                   pkg_db_multipayer.sp_ptp_payers_get
                                    (
                                         in_session_id,
                                         in_transaction_id ,
                                         v_basis_ptp_id,
                                         v_basis_payer_list,
                                         'Y',
                                         pkg_db_multipayer.g_PayerGet_idx_BilingAccount
                                    );

                                   --OSBILLING-7175
                                   if v_basis_payer_list.exists(g_payer_list(v_idx).PayerBillingAccount_id) then

                                        v_earlier_payplan_id := v_basis_payer_list(g_payer_list(v_idx).PayerBillingAccount_id).chosen_payment_plan;

                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '... Payer: '||g_payer_list(v_idx).PTPayer_object_id||
                                                  ' Choosen Payment Plan: '||v_chosen_pay_plan_id||
                                                  ' Modified Payment Plan:'||v_mod_pay_plan_id||
                                                  ' Basis PTP ID :'||v_basis_ptp_id||
                                                  ' Payer Billing Account Id: '||g_payer_list(v_idx).PayerBillingAccount_id||
                                                  ' Basis Payer Payment plan:'||v_earlier_payplan_id
                                             );

                                        end if;
                                        
                                   end if;
                              
                              end if;
                              
                         end if;                                             
                          
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Payer: '||g_payer_list(v_idx).PTPayer_object_id||
                                   ' Choosen Payment Plan: '||v_chosen_pay_plan_id||
                                   ' Modified Payment Plan:'||v_mod_pay_plan_id||
                                   ' Basis PTP ID :'||v_basis_ptp_id||
                                   ' Payer Billing Account Id: '||g_payer_list(v_idx).PayerBillingAccount_id||
                                   ' Basis Payer Payment plan:' ||v_earlier_payplan_id
                              );

                         end if;
                         --OSBILLING-7175
                         
                    exception
                         
                         when others then
                              
                              if v_session_control.gLogging_Full then
                                   
                                   pkg_os_logging.sp_log
                                   (
                                      in_session_id,
                                      in_transaction_id,
                                      v_procedure_name,
                                      '..Payer: '|| g_payer_list(v_idx).PTPayer_object_id||
                                      'is added in current transaction only. So, no need to call sp_change_payplan_process:'
                                   );

                              end if;
                              
                              v_earlier_payplan_id := 0;
                              
                    end;
                    
                    --- CHANGE BILLING METHOD will not work for MULTIPAYER. This condition needs to be reviewed when working on cbm for MP.
                    --OSBIILING-6859
                    
                    if v_policyterm_billing_method is not null then
                         
                         v_mod_pay_plan_id := v_chosen_pay_plan_id;
                         v_earlier_payplan_id := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_basis_ptp_id,
                                                      gbv_PolicyRefChosenPlan--212021 --Durgesh2517 use constant
                                                 );

                    end if;

                    if (
                            v_mod_pay_plan_id is not null 
                            and 
                            v_mod_pay_plan_id <> v_chosen_pay_plan_id 
                       ) 
                       or
                       v_policyterm_billing_method is not null  ----OSBIILING-6859
                       
                    then

                        if v_session_control.gLogging_Full then                         

                            pkg_os_logging.sp_log
                            (
                                 in_session_id,
                                 in_transaction_id,
                                 v_procedure_name,
                                 '...Start Change Payplan Processing.. Term Billing Method: '||v_policyterm_billing_method
                            );

                        end if;
                        
                        -- Perf fix
                        -- OSPRODUCT-7817
                        sp_change_payplan_process
                        (
                             in_session_id                      =>             in_session_id,
                             in_transaction_id                  =>             in_transaction_id,
                             in_ptp_id                          =>             v_policy_image_id,
                             in_policy_transaction_id           =>             in_policy_trx_id,
                             in_product_id                      =>             v_product_id,
                             in_filing_id                       =>             v_filing_id,
                             in_policy_billing_method           =>             v_policy_billing_method,
                             in_ultimate_customer_id            =>             v_ultimate_customer_id,
                             in_customer_billing_acc_id         =>             v_customer_billing_acc_id,  --OSPRODUCT-6098
                             in_agency_billing_acc_id           =>             v_agency_billing_acc_id,  --OSPRODUCT-4664
                             in_billing_acc_trx_set_id          =>             v_billing_acc_trx_set_id,
                             in_policy_trx_effective_date       =>             v_policy_trx_effective_date,
                             in_master_policy_id                =>             v_master_policy_id,
                             in_policy_term_id                  =>             v_policy_term_id,
                             in_policy_transaction_type         =>             v_policy_transaction_type,
                             in_mod_pay_plan_id                 =>             v_mod_pay_plan_id,
                             in_fi_trx_debit_id                 =>             v_fi_trx_debit_id,
                             in_fi_trx_credit_id                =>             v_fi_trx_credit_id,
                             in_chosen_pay_plan_id              =>             v_chosen_pay_plan_id,
                             io_action_outcome_id               =>             io_action_outcome_id,
                             in_prior_billing_method_id         =>             v_policyterm_billing_method,
                             in_current_date_time               =>             in_current_date_time,
                             in_earlier_payment_plan_id         =>             v_earlier_payplan_id,--VAULTDEV-6645
                             in_dm_value_table                  =>             v_dm_value_table,
                             in_payer_billing_acc_id            =>             g_payer_list(v_idx).PayerBillingAccount_id -- OSPRODUCT-34206_2     


                        );
                         
                    end if;

                    --VAULTDEV-6645
                    --
                    -- Set Modified Payment Plan as Reference Chosen Payment Plan
                    --
                    if v_mod_pay_plan_id is not null then
                         
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              g_payer_list(v_idx).PTPayer_object_id,
                              pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan, --32705024,-- Durgesh2517 Use constant
                              v_mod_pay_plan_id
                         );
                         
                    end if;

                    v_idx := g_payer_list.next(v_idx);
                    
               end loop;
               --VAULTDEV-6645 ends
               
          end if; -- if not a rollback ...

     end if; -- suspicious if clause ...

     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     --
     --   Tie up loose ends ...
     --
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     --
     -- Set the Business Variables for BillingAccountTransactionSet
     --

     v_set_type          :=        v_policy_transaction_type;

     v_entry_method      :=        gBatchEntryMethod_System;

     v_date_posted       :=        v_current_date;

     v_external_batch_id :=        'Batch'||v_current_date;

     v_processing_date   := v_current_date;


     v_bv_table.delete;

     v_bv_table ( gbv_FITrxSetBatchType                        ).business_variable_value     :=   v_set_type;
     v_bv_table ( gbv_FITrxSetEnteredby                        ).business_variable_value     := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
     v_bv_table ( gbv_FITrxSetEntryType                        ).business_variable_value     :=   v_entry_method;
     v_bv_table ( gbv_FITrxSetDatePosted                       ).business_variable_value     :=   v_date_posted;
     v_bv_table ( gbv_FITrxSetExternalBatchId                  ).business_variable_value     :=   v_external_batch_id;
     v_bv_table ( gbv_BillAccTrxSet_ProcessDate                ).business_variable_value     :=   v_processing_date;
     v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState     ).business_variable_value     :=   gBatchStatus_Processed;
     v_bv_table ( gbv_FITrxSetTotalAmount                      ).business_variable_value     :=   v_tot_change_amount;
     v_bv_table ( gbv_FITrxSetTotalItems                       ).business_variable_value     :=   v_count_rec;


     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_billing_acc_trx_set_id,
          v_bv_table
     );
     
     if v_fi_trx_debit_id is not null then         

          pkg_os_object_search.sp_object_children_of_type_get
          (
                 in_session_id,
                 in_transaction_id,
                 v_fi_trx_debit_id,
                 gObjType_fichange,
                 v_fichange_list
          );

          if v_session_control.gLogging_Full then            

                 pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '... Found Fichange objects, count: '||v_fichange_list.count
                 );

          end if;

          if v_fichange_list.count = 0 then
              
               pkg_os_object.sp_object_delete
               (
                  in_session_id,
                  in_transaction_id,
                  v_billing_acc_trx_set_id,
                  v_fi_trx_debit_id,
                  gObjType_FITransaction
               );
               
          else
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Update the Debit FITransaction Datamart'
                    );

               end if;

               --
               -- Update the Debit FITransaction Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                   in_session_id,
                   in_transaction_id,
                   v_fi_trx_debit_id,
                   v_datamart_tf
               );
               
          end if;          

     end if;

     if v_fi_trx_credit_id is not null
     then
          
          -- OSBILLING-3349
          -- [RR] Check if we can use datamart. Although the child search path is configured
          pkg_os_object_search.sp_object_children_of_type_get
          (
              in_session_id,
              in_transaction_id,
              v_fi_trx_credit_id,
              gObjType_fichange,
              v_fichange_list
          );

          if v_session_control.gLogging_Full
          then
               
               pkg_os_logging.sp_log
               (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 '... Found Fichange objects, count: '||v_fichange_list.count
               );

          end if;

          if v_fichange_list.count = 0
          then
               
               pkg_os_object.sp_object_delete
                  (
                       in_session_id,
                       in_transaction_id,
                       v_billing_acc_trx_set_id,
                       v_fi_trx_credit_id,
                       gObjType_FITransaction
                  );
                  
          else
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Update the Credit FITransaction Datamart'
                    );

               end if;

               --
               -- Update the Credit FITransaction Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                   in_session_id,
                   in_transaction_id,
                   v_fi_trx_credit_id,
                   v_datamart_tf
               );

          end if;

     end if;

     -- OSBILLING-2281
     -- Moved the below code before DM update
     --
     --  Set the Term Billing Method from Policy Image
     --
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_policy_term_id,
          gbv_PolicyTermBillingMethod,
          v_policy_billing_method
     );

     --Set the Billed to for policy term
     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          v_policy_term_id,
          gbv_PolicyTermBilledTo,
          v_policy_billed_to
     );
     
     pkg_os_datamart.sp_datamart_update_row
     (
         in_session_id,
         in_transaction_id,
         v_policy_term_id,
         v_datamart_tf
     );
     
     --OSPRODUCT-2737 start
     -- [RR] Commented as retrieved earlier
     /*v_basis_transaction_id :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_trx_id,
                                        pkg_os_policy_transaction.gbv_PolicyTrxBasisTransaction
                                   );*/
                                     
     if v_basis_transaction_id is null 
     then 
          
          v_policytrx_schd_pay_com := pkg_os_object_io.fn_object_bv_get
                                                 (
                                                      in_session_id,
                                                      in_transaction_id,
                                                      v_master_policy_id,
                                                      pkg_db_constant.gbv_Ref_Derived_From
                                                 );   
          
     elsif v_policy_transaction_type in
          (
               pkg_os_policy_transaction.gPolicyTrxType_Renewal,
               pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
               pkg_os_policy_transaction.gPolicyTrxType_Reissue,
               pkg_os_policy_transaction.gPolicyTrxType_Rewrite
          )
     then
          v_policytrx_schd_pay_com := in_policy_trx_id;
          
     end if;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Basis Transaction ID: '   ||  v_basis_transaction_id  ||
               '... PolicyTrx Schd Pay Component: ' ||  v_policytrx_schd_pay_com
          );

     end if;
     
     if v_policytrx_schd_pay_com is not null
     then
          -- Update Billing Account Scheduled Payment Component Objects
          for v_ba_schd_payment_components in c_ba_schd_payment_components(v_billing_account_id,v_policytrx_schd_pay_com) --OSPRODUCT-2737
          loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Updating Billing Account Scheduled Payment Component object: ' || v_ba_schd_payment_components.ba_payment_component_id
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_ba_schd_payment_components.ba_payment_component_id,
                    v_datamart_tf
               );

          end loop;
     end if;
     --OSPRODUCT-2737 end
     
     
     --
     -- Update the BillingAccountTransactionSet Datamart
     --
     /*
     pkg_os_datamart.sp_datamart_update_row
     (
         in_session_id,
         in_transaction_id,
         v_billing_acc_trx_set_id,
         v_datamart_tf
     );*/ --OSBILLING-3884 This will happen as a part of common native command

     v_idx := g_term_payer_list.first;

     while v_idx is not null
     loop
          if v_session_control.gLogging_Full
          then
                pkg_os_logging.sp_log
                (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Payer Object ID: '||g_term_payer_list(v_idx).PTPayer_object_id
                );
                
          end if;
          
          -- OSPRODUCT-17647 Start
          v_policytrxCostchange := nvl(pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             gbv_PolicyCostchange  
                                        )
                                      ,0); 
     
         if v_session_control.gLogging_Full
         then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Calling:pkg_db_billing_payable.sp_set_payables_amount in Policcy Trx change amount >= ZERO'
               || ':Policy Trx ID:' || in_policy_trx_id ||
               ':Cahnge Amount:' || v_policytrxCostchange
          );

          end if;   
          -- OSPRODUCT-17647 End   
                                  
          
          -- OSPRODUCT-17647 Start
         /* if v_policytrxCostchange >= 0 
          then  */

               pkg_db_billing_payable.sp_set_payables_amount
               (
                    in_session_id,
                    in_transaction_id,
                    v_master_policy_id,
                    --'T', --OSPRODUCT-2085
                    --'F', --OSPRODUCT-2085
                    --'F', --OSPRODUCT-2085
                    io_action_outcome_id,
                    in_policy_trx_id,
                    v_billing_acc_trx_set_id, -- OSBILLING-3962
                    in_policy_term_payer_id => g_term_payer_list(v_idx).PTPayer_object_id
               );
          
          /*end if; */
          -- OSPRODUCT-17647 End

          v_idx := g_term_payer_list.next(v_idx);

     end loop;
     
     if g_billing_account_list.count   >   0
     then
               
           --OSBILLING-6669, commented below
           /* pkg_db_stmt_date.sp_set_nid_on_acctlist
           (
                in_session_id,
                in_transaction_id,
                g_billing_account_list
           );*/

          pkg_db_object.sp_update_billingaccount_dm
          (
              in_session_id,
              in_transaction_id,
              g_billing_account_list
          );

     end if ;

     g_scheduled_payment_list.delete;
     g_billing_account_list.delete;

     -- OSPRODUCT-15248
     -- Reset the Term payers status as per processed transaction. 
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              'Starting Payer Updation: Trx ID '||in_policy_trx_id||
              ':Trx Type:'   || v_policy_transaction_type||
              ':Trx Sub type:'  || v_policy_transaction_sub_type||
              ':Policy Image ID:'   || v_policy_image_id||
              ':v_basis_ptp_id:' || v_basis_ptp_id ||
              ':Policy Term ID:'              || v_policy_term_id ||
              ':Master Policy ID: '            || v_master_policy_id
         );

     end if;
     
     if v_policy_transaction_type = pkg_db_object.gbilltrxtype_rollback
     and v_basis_ptp_id is not null 
     then  
          pkg_db_multipayer.sp_term_payer_status_reset
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               v_basis_ptp_id
          );
     else 
          pkg_db_multipayer.sp_term_payer_status_reset
          (
               in_session_id,
               in_transaction_id,
               v_policy_term_id,
               v_policy_image_id
          );
     end if; 
     
     -- OSPRODUCT-15248

    
     -- LXPRODUCT-502
     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Reinstatement then
          
          -- Get the Cancellation BillingAccountTrxset and set the reference
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   ' Setting the reference from ' || pkg_os_object_io.fn_object_bv_get( in_session_id ,in_transaction_id,v_basis_transaction_id, gbv_PolTrxRefBillingAccTrxSet) -- 31866546
                   || ' to  '  || v_billing_acc_trx_set_id
              );

          end if;


          -- Set the reference from canellation to reinstatement
          pkg_os_object_io.sp_object_bv_set
          (
                  in_session_id,
                  in_transaction_id,
                  pkg_os_object_io.fn_object_bv_get( in_session_id ,in_transaction_id,v_basis_transaction_id, gbv_PolTrxRefBillingAccTrxSet), -- 31866546
                  gbv_BillAccTrxSet_RefReinstmt,
                  v_billing_acc_trx_set_id

          );

     end if;
     -- LXPRODUCT-502

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

     --raise no_data_found;
     
     -- Debug code, uncomment all such blocks to perform profiling (hprof)
     /*DBMS_HPROF.STOP_PROFILING();
     v_return:=DBMS_HPROF.ANALYZE('PLSHPROF_DIR',v_name||v_sid);*/
     -- End debug code to stop profiling and load results
     /*if v_session_control.gLogging_Full then                    

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.. hprof#'||v_return
          );

     end if;*/

                       
         
                
end sp_financial_trx_create;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_debit_credit_create
--
--   %USAGE
--        This procedure identifies the Change Amount for a PC Coverage ID and creates a FItem and  FIChange Object
--        based on the Payment Plan configuration.
--
--   %ALGORITHM
--        This procedure identifies the Change Amount for a PC Coverage ID and creates a FItem and  FIChange Object
--        based on the Payment Plan configuration.
--
--   %PARAM    in_session_id                      Session ID
--   %PARAM    in_transaction_id                  Transaction ID
--   %PARAM    in_master_policy_id                Master Policy ID
--   %PARAM    in_policy_image_id                 Policy Image ID
--   %PARAM    in_policy_term_id                  Policy Term ID
--   %PARAM    in_policy_transaction_id           Policy Transaction ID
--   %PARAM    in_product_id                      Product ID
--   %PARAM    in_filing_id                       Filing ID
--   %PARAM    in_policy_trx_effective_date       Policy Transaction Effective Date
--   %PARAM    in_policy_billing_method_id        Billing Method ID
--   %PARAM    in_agency_billing_account_id       Agency Billing Account ID
--   %PARAM    in_fi_transaction_id               FITransaction ID
--   %PARAM    in_fi_transaction_type_id          FITransaction Type ID
--   %PARAM    in_payplan_option_id               Payment Plan ID
--   %PARAM    in_payment_plan_row                Payment Plan Row
--   %PARAM    in_trx_installment_type            Transaction Installment Type ID
--   %PARAM    in_installment_start_num           Installment Start Num
--   %PARAM    in_installment_count               Installment Count
--   %PARAM    in_remaining_inst_list             Remaining Inst List
--   %PARAM    in_master_customer_id              Master Customer Id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_debit_credit_create
(
     in_session_id                      in        object.object_id%type,
     in_transaction_id                  in        object.object_id%type,
     in_master_policy_id                in        object.object_id%type,
     in_policy_image_id                 in        object.object_id%type,
     in_policy_term_id                  in        object.object_id%type,
     in_policy_transaction_id           in        object.object_id%type,
     in_product_id                      in        pd_product.pd_product_id%type,
     in_filing_id                       in        pd_filing.pd_filing_id%type,
     in_policy_trx_effective_date       in        varchar2,
     in_policy_billing_method           in        number,
     in_agency_billing_account_id       in        object.object_id%type default null,
     in_fi_transaction_id               in        object.object_id%type,
     in_fi_transaction_type_id          in        number,
     in_payplan_option_id               in        object.object_id%type,
     in_payment_plan_md_row             in        pkg_db_payplan_modify.getPaymentPlanList%rowtype,
     in_trx_installment_type            in        lookup_list_value.lookup_enum%type,
     in_installment_start_num           in        number,
     in_installment_count               in        number,
     in_remaining_inst_list             in        pkg_os_object.t_object_list,
     in_master_customer_id              in        object.object_id%type,
     in_installment_object_id           in        object.object_id%type default null,
     out_tot_change_amount              out       number,
     out_count_rec                      out       number,
     in_credit_fitransaction_id         in        object.object_id%type default null,
     in_choosen_payplan_id              in        object.object_id%type, --VAULTDEV-6645,
     --[RR] new dev
     in_dm_value_table                  in        t_obj_column_value_tab default gnull_obj_column_val_tab
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_debit_credit_create';
     --OSBILLING-1397 Commented and declared inside Package spec
     --gbv_billelt_ElementMD_ID constant business_variable.business_variable_id%type := 30790846;


     v_element_amount                   number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_remaining_inst_count             number;
     v_tot_change_amount                number := 0;
     v_count_rec                        number := 0;
     v_fi_change_amount                 number;
     v_datamart_tf                      char(1) := 'T';
     v_most_recent_fichange             object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_current_stub_id                  object.object_id%type;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_schduld_element_stub_list        pkg_os_object.t_object_list;
     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_index          number;
     v_scheduled_payment_index          number;
     v_schduld_element_stub_index       number;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_stub_actual_end_date             object_bv_value.business_variable_value%type;
     --r_billing_account_list             pkg_db_object.t_billing_account_list;
     v_coverage_object_id               object.object_id%type;
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_installment_object_id            object.object_id%type;
     v_element_creator_poltrns          object.object_id%type;
     v_choosen_payplan_id               object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);


     v_policy_transaction_type          object_bv_value.business_variable_value%type;
     v_policy_cost_change_in_trx        number;

     v_valid_tf                         object_bv_value.business_variable_value%type; --OSBILLING-3443

     v_created_fitem_id                 object.object_id%type;
     v_FullPayDiscountFlag              number    := 0 ;                    --OSBILLING-6566
     v_PremiumDebitFitemId              object.object_id%type    :=   null; --OSBILLING-6566
     v_PremiumCreditFitemId             object.object_id%type    :=   null; --OSBILLING-6566
     v_FullPayDiscDebitFitemId          object.object_id%type    :=   null; --OSBILLING-6566
     v_FullPayDiscCreditFitemId         object.object_id%type    :=   null; --OSBILLING-6566
     v_FullPayDiscountDebitAmt          number                   :=   null; --OSBILLING-6566
     v_FullPayDiscountCreditAmt         number                   :=   null; --OSBILLING-6566
     v_trx_to_be_rlbck_type_id          number                   :=   null; 
     v_trx_to_be_rlbck_subtype_id       number                   :=   null;
     v_to_be_rb_trx_id                  object.object_id%type;
     
     --Kiran start OSPRODUCT-29816 / 34066     
     v_fitem_list                       t_manual_added_fitem_list;
     v_fitem_index                      varchar2(50);     
     
     v_fitem_billing_element_id         number;
     --Kiran end OSPRODUCT-29816 / 34066  

begin
     
     -- [RR] Datamart get
     begin
               
          v_policy_transaction_type := in_dm_value_table('POLICY_TRX_TYPE_ID'); --[R} New dev
               
     exception
          
          when others then
               
               begin
                    select
                         pt.policy_trx_type_id
                    into
                         v_policy_transaction_type
                    from
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = in_policy_transaction_id;
               
               exception
                    when no_data_found then
                         null;
                         
               end;
                              
     end;
     
     -- [RR] fall back code
     if v_policy_transaction_type is null then

          v_policy_transaction_type := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_transaction_id,
                                             pkg_os_constant_bv.gbv_PolicyTranType
                                        );
                                        
     end if;

     v_policy_cost_change_in_trx := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_transaction_id,
                                             gbv_PolicyCostchange--31902746
                                        );  ---- Durgesh Added on 15-Feb-2014

     --r_billing_account_list.delete;

     -- #MP
     -- the following in_choosen_payplan_id is needed futher to be used in this condition while analysing if installment need to be created:
     --          ... ( in_trx_installment_type    =    gInstallmentType_Stub and ( in_payplan_option_id <> v_choosen_payplan_id))
     --
     --  as far as in_trx_installment_type = gInstallmentType_Stub in this condition, i will not take care of this now....
     --
     --  Skipping for #MP.
    -- / #MP
     
     -- [RR] Not in use 
     /* v_choosen_payplan_id := pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_image_id,
                                   pkg_db_payplan_modify.gbv_PolicyRefChosenPlan
                              );*/
                              
     --VAULTDEV-6645

     v_remaining_inst_count := in_remaining_inst_list.count;

     if v_session_control.gLogging_Full
     then
          
          pkg_os_logging.sp_log
          (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '... Entering Installment processing - the pure Stub Part: '
          ||' Trx instalmment type: '|| in_trx_installment_type
          ||' Remaining Inst Count: '|| v_remaining_inst_count
          ||' Payplan option ID: '|| in_payplan_option_id
          ||' Chosen Pay Plan: '|| in_choosen_payplan_id
          ||' Policy Cost Change: '|| v_policy_cost_change_in_trx
          );
     end if;

     --Kiran start OSPRODUCT-29816 / 34066
     v_fitem_list.delete;
     --Kiran end OSPRODUCT-29816 / 34066  

     if in_trx_installment_type = gInstallmentType_Stub
        or
        v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback -- <Kostya: osbilling-1851> Let Rollback Trx process a Stub
     then
          
          v_to_be_rb_trx_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_policy_transaction_id,
                                    pkg_os_policy_transaction.gbv_PolicyTrxRollsBckTrx
                               );
                               
          v_trx_to_be_rlbck_type_id := pkg_os_object_io.fn_object_bv_get ---OSBILLING-5525
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_to_be_rb_trx_id,
                                             pkg_os_constant_bv.gbv_PolicyTranType
                                        );
                    
          v_trx_to_be_rlbck_subtype_id := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_to_be_rb_trx_id,
                                                  gbv_PolicyTrx_EndSubType
                                             ); --OSBILLING-11530
          
          begin
               
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Processing the pure Stub Part ... '
                    );
               end if;

               v_installment_object_id := in_installment_object_id;

               v_schduld_element_stub_list.delete;

               v_current_stub_id    :=      pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 in_payplan_option_id,
                                                 gbv_PaymentPlanCurrentStub
                                             );

               v_stub_actual_end_date   :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_current_stub_id,
                                                 gbv_actual_end_date
                                             );

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    v_current_stub_id,
                    gObjType_ScheduledElement,
                    v_schduld_element_stub_list
               );

               if v_session_control.gLogging_Full
               then                                                                                            

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... For PaymentPlanScheduledPayment Object ID: '
                         ||v_current_stub_id
                         ||', number of PaymentPlanScheduledPaymentElement objects found: '
                         ||v_schduld_element_stub_list.count||
                         ', Stub End Date: '||v_stub_actual_end_date
                    );

               end if;
               
               
               if v_schduld_element_stub_list.count > 0
               then
                    
                    begin
                         
                         v_schduld_element_stub_index := v_schduld_element_stub_list.first;

                         while v_schduld_element_stub_index is not null
                         loop

                              v_schedule_element_id := v_schduld_element_stub_list(v_schduld_element_stub_index);

                              v_billing_element_md_id  :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_schedule_element_id,
                                                                 gbv_billing_element_id
                                                            );

                              v_coverage_object_id     :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_schedule_element_id,
                                                                 gbv_ScheduledElementRefAsset
                                                            );

                              v_element_amount         :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_schedule_element_id,
                                                                 gbv_element_amount
                                                            );


                              if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
                              then

                                   v_element_amount := v_element_amount * (-1);

                              end if;

                              v_element_debit_category :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_schedule_element_id,
                                                                 gbv_debit_category
                                                            );

                              v_element_debit_subcategory   :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_debit_sub_category
                                                                 );

                              v_element_credit_category     :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_credit_category
                                                                 );

                              v_element_credit_subcategory  :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_credit_sub_category
                                                                 );

                              v_create_debit_tf             :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_create_debit_flag
                                                                 );

                              v_create_credit_tf            :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_create_credit_flag
                                                                 );

                              v_element_creator_poltrns     :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_ElementRefCreatorPolTrns
                                                                 );

                              v_IncludeInPayScheduleTF      :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_IncludeInPayScheduleTF
                                                                 );

                              --- OSBILLING-3443--- check if element is valid or not for creating financial (default is true)
                              v_valid_tf                    :=   pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_ElementValidTF
                                                                 );


                              if nvl(v_valid_tf,pkg_os_constant.gBoolean_Yes) = pkg_os_constant.gBoolean_Yes
                              then

                              if v_create_debit_tf = 1 and v_IncludeInPayScheduleTF = 1
                              then

                                   v_tot_change_amount :=   nvl(v_tot_change_amount,0) + nvl(v_element_amount,0);

                              end if;
                              
                              sp_create_billing_item
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_product_id,
                                   in_filing_id,
                                   in_master_policy_id,
                                   in_policy_image_id,
                                   in_policy_transaction_id,
                                   in_master_customer_id,
                                   in_policy_trx_effective_date,
                                   in_fi_transaction_id,
                                   in_fi_transaction_type_id,
                                   in_policy_billing_method,
                                   in_agency_billing_account_id,
                                   v_schedule_element_id,
                                   v_installment_object_id,
                                   v_element_creator_poltrns,
                                   in_trx_installment_type,
                                   in_installment_count,
                                   in_installment_start_num,
                                   v_billing_element_md_id,
                                   v_coverage_object_id,
                                   v_element_amount,
                                   v_element_debit_category,
                                   v_element_debit_subcategory,
                                   v_element_credit_category,
                                   v_element_credit_subcategory,
                                   v_create_debit_tf,
                                   v_create_credit_tf,
                                   v_IncludeInPayScheduleTF,
                                   v_remaining_inst_count,
                                   null,
                                   in_payplan_option_id,
                                   v_fi_change_amount,
                                   in_policy_term_id,
                                   v_created_fitem_id,
                                   in_dm_value_table -- [RR] new dev
                              );

                              --OSBILLING-6566 start
                              if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Stub Debit :-> '
                                        ||' v_element_debit_subcategory: '   ||v_element_debit_subcategory
                                        ||' v_element_credit_subcategory: '  ||v_element_credit_subcategory
                                        ||' v_fi_change_amount: '            || v_fi_change_amount
                                        ||' v_created_fitem_id: '            || v_created_fitem_id
                                   );
                              end if;
                              
                              if ( v_element_debit_subcategory = pkg_db_object.gFitem_SubCat_Discount or v_element_credit_subcategory = pkg_db_object.gFitem_SubCat_Discount )
                              then
                                   v_FullPayDiscountFlag     := 1 ;
                                   v_FullPayDiscountDebitAmt := v_fi_change_amount ;
                                   v_FullPayDiscDebitFitemId := v_created_fitem_id;
                              end if;
                              
                              if ( v_element_debit_subcategory = 46746 or v_element_credit_subcategory =  46846)
                              then
                                   v_PremiumDebitFitemId := v_created_fitem_id;
                              end if;
                              --OSBILLING-6566 end

                              --Kiran start OSPRODUCT-34862                                                                              
                                             
                              if v_fitem_list.exists(v_created_fitem_id)then
                                 null;
                              else 
                                 v_fitem_index := v_billing_element_md_id|| ':' ||case when in_fi_transaction_type_id  = gFITrxType_Dr_Generate then 1 when in_fi_transaction_type_id = gFITrxType_Cr_Generate then 2 else 0 end|| ':'||v_installment_object_id;
                                 v_fitem_list(v_fitem_index) := v_created_fitem_id;  
                              end if;
                                             
                             if v_session_control.gLogging_Full  then
                                   pkg_os_logging.sp_log
                                   (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '... 1. v_fitem_index ->Fitem Billing ELement:Debit 601/Credit 602: Installment Object: '||v_fitem_index
                                            ||'... in_fi_transaction_id : '||in_fi_transaction_id||'... v_installment_object_id : '||v_installment_object_id
                                            ||'... in_installment_count : '||in_installment_count
                                            ||'v_schduld_element_stub_list(v_schduld_element_stub_index):'||v_schduld_element_stub_list(v_schduld_element_stub_index)
                                   );
                              end if; 
                              --Kiran end OSPRODUCT-34862

                              --OSBILLING-3004
                              if v_create_credit_tf = 1 and in_credit_fitransaction_id is not null
                              then
                                   
                                   sp_create_billing_item
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_product_id,
                                        in_filing_id,
                                        in_master_policy_id,
                                        in_policy_image_id,
                                        in_policy_transaction_id,
                                        in_master_customer_id,
                                        in_policy_trx_effective_date,
                                        in_credit_fitransaction_id,
                                        gFITrxType_Cr_Generate,
                                        in_policy_billing_method,
                                        in_agency_billing_account_id,
                                        v_schedule_element_id,
                                        v_installment_object_id,
                                        v_element_creator_poltrns,
                                        in_trx_installment_type,
                                        in_installment_count,
                                        in_installment_start_num,
                                        v_billing_element_md_id,
                                        v_coverage_object_id,
                                        v_element_amount,
                                        v_element_debit_category,
                                        v_element_debit_subcategory,
                                        v_element_credit_category,
                                        v_element_credit_subcategory,
                                        v_create_debit_tf,
                                        v_create_credit_tf,
                                        v_IncludeInPayScheduleTF,
                                        v_remaining_inst_count,
                                        null,
                                        in_payplan_option_id,
                                        v_fi_change_amount,
                                        in_policy_term_id,
                                        v_created_fitem_id,
                                        in_dm_value_table --[RR] new dev
                                   );

                                  --Kiran start OSPRODUCT-34862
    
                                  if v_fitem_list.exists(v_created_fitem_id)then
                                      null;
                                  else                                 
                                      v_fitem_index := v_billing_element_md_id|| ':' ||2|| ':'||v_installment_object_id;
                                      v_fitem_list(v_fitem_index) := v_created_fitem_id;
                                  end if;                                                                      
                                                 
                                  if v_session_control.gLogging_Full then
                                       pkg_os_logging.sp_log
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '... 2. v_fitem_index ->Fitem Billing ELement:Debit 601/Credit 602: Installment Object: '||v_fitem_index
                                            ||'... in_fi_transaction_id : '||in_fi_transaction_id||'... v_installment_object_id : '||v_installment_object_id
                                            ||'... in_installment_count : '||in_installment_count
                                            ||'v_schduld_element_stub_list(v_schduld_element_stub_index):'||v_schduld_element_stub_list(v_schduld_element_stub_index)
                                          );
                                  end if;
                                  --Kiran end OSPRODUCT-34862  

                              end if;
                              
                              --OSBILLING-6566 start
                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Stub Credit :-> '
                                        ||' v_element_debit_subcategory: '   ||v_element_debit_subcategory
                                        ||' v_element_credit_subcategory: '  ||v_element_credit_subcategory
                                        ||' v_fi_change_amount: '            || v_fi_change_amount
                                        ||' v_created_fitem_id: '            || v_created_fitem_id
                                   );
                                   
                              end if;
                              --Durgesh2517 use constant
                              if ( v_element_debit_subcategory = gFitem_SubCat_FullPayDiscount or v_element_credit_subcategory = gFitem_SubCat_FullPayDiscount )
                              then
                                   
                                   v_FullPayDiscountFlag          := g_Yes;
                                   v_FullPayDiscountCreditAmt     := v_fi_change_amount;
                                   v_FullPayDiscCreditFitemId     := v_created_fitem_id;
                                   
                              end if;
                              
                              if ( v_element_debit_subcategory = gFitem_SubCat_Premium or v_element_credit_subcategory =  gFitem_SubCat_PremiumRec )
                              then
                                   
                                   v_PremiumCreditFitemId := v_created_fitem_id;
                                   
                              end if;
                              --OSBILLING-6566 end

                         elsif nvl(v_valid_tf,pkg_os_constant.gBoolean_Yes) = pkg_os_constant.gBoolean_No --- OSBILLING-3443
                         then
                              sp_upd_commission_adjustment
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_master_policy_id,
                                   in_policy_transaction_id,
                                   v_schedule_element_id,
                                   v_installment_object_id
                              );
                              
                         end if;

                         v_schduld_element_stub_index := v_schduld_element_stub_list.next(v_schduld_element_stub_index);

                    end loop;
                         
                    if v_FullPayDiscountFlag = 1
                    then
                         sp_fullpay_discount_adj
                         (
                              in_session_id,
                              in_transaction_id,
                              in_credit_fitransaction_id,
                              in_fi_transaction_id,
                              v_FullPayDiscountDebitAmt,
                              v_FullPayDiscDebitFitemId,
                              in_master_policy_id,
                              in_policy_transaction_id,
                              v_FullPayDiscountCreditAmt,
                              v_FullPayDiscCreditFitemId,
                              v_PremiumDebitFitemId,
                              v_PremiumCreditFitemId
                         );
                              
                    end if;               
                         
               end;

               --Kiran start OSPRODUCT-34862  
                                                         
               sp_fitems_associate
               (
                       in_session_id,
                       in_transaction_id,
                       in_product_id,               
                       in_policy_image_id,
                       in_policy_transaction_id,
                       v_installment_object_id,
                       v_fitem_list                                                                 
               );
               --Kiran end OSPRODUCT-34862

               -- OSBILLING-3004
               pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_installment_object_id,v_datamart_tf);

          end if; -- if v_scheduled_element_list.count > 0
          
          end;
     
     else
          
          if v_session_control.gLogging_Full
          then
               
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Skipping the pure Stub Part'
               );
          
          end if;
          
     end if;

     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
           (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '... Entering Installment processing - the Installment Part and special Stubs: '||
            'in_trx_installment_type='||           in_trx_installment_type
            ||', v_remaining_inst_count='||          v_remaining_inst_count
            ||', in_payplan_option_id='||            in_payplan_option_id
            ||', in_choosen_payplan_id='||            in_choosen_payplan_id
            ||', v_policy_cost_change_in_trx='||     v_policy_cost_change_in_trx
           );
     end if;
     
     -- 11530
     -- For CPP rollbacks 
     -- installment type is stub 
     -- in_payplan_option_id = in_choosen_payplan_id
     -- and v_policy_cost_change_in_trx is 0
     -- So if remaining installment count is not > 0 the control will not go in below condition
     -- and required CPP rollback fitem will not be created
     -- 

     if ( 
          in_trx_installment_type = gInstallmentType_Installment
          or
          (
               in_trx_installment_type = gInstallmentType_Stub 
               and 
               v_remaining_inst_count > 0
          )
        )
        
        -- Adding this condition, as for a change in payplan, the fitems should be created
        -- for the new payplan at fresh
        or
        (
             in_trx_installment_type   = gInstallmentType_Stub
             and
             in_payplan_option_id     <> in_choosen_payplan_id
             -- and
             -- not v_policy_multipayer_mode -- only in Single Payer mode
        )
        or
        ( 
             v_remaining_inst_count = 0 
             and 
             v_policy_cost_change_in_trx<>0
        )  ---- Durgesh Added on 15-Feb-2014
        -- 11530
        -- For now CPP with Endorsement
        or
        (
             v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
             and
             v_trx_to_be_rlbck_subtype_id = gTrxSubType_changepayplan --CPP
        )
     then
          
          begin
                    
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Processing the Installment Part and special Stubs... '
                    );
               end if;

               v_scheduled_payment_list.delete;

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_payplan_option_id,
                    gObjType_ScheduledPayment,
                    v_scheduled_payment_list,
                    gbv_actual_due_date,
                    false,
                    gRule_Installment -- !!!VG - replace with an if statement ....
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.... Number of PaymentPlanScheduledPayment objects found:'||v_scheduled_payment_list.count
                         ||'  for chosen Payment plan: '||in_payplan_option_id
                    );

               end if;

               if v_scheduled_payment_list.count > 0
               then
                    
                    begin
                         
                         v_FullPayDiscountFlag         := 0 ;   --OSBILLING-6566
                         v_PremiumDebitFitemId         := null; --OSBILLING-6566
                         v_PremiumCreditFitemId        := null; --OSBILLING-6566
                         v_FullPayDiscDebitFitemId     := null; --OSBILLING-6566
                         v_FullPayDiscCreditFitemId    := null; --OSBILLING-6566
                         v_FullPayDiscountCreditAmt    := null; --OSBILLING-6566
                         v_FullPayDiscountDebitAmt     := null; --OSBILLING-6566
                         /*v_FullPayDiscDebitFiChangeId  := null; --OSBILLING-6566
                         v_FullPayDiscCreditFiChangeId := null; --OSBILLING-6566
                         v_PremiumDebitFiChangeId      := null; --OSBILLING-6566
                         v_PremiumCreditFiChangeId     := null; --OSBILLING-6566*/

                         v_scheduled_payment_index     :=    v_scheduled_payment_list.first;

                         while v_scheduled_payment_index is not null
                         loop

                              --v_scheduled_payment_count := v_scheduled_payment_count + 1;
                              
                              --Kiran start OSPRODUCT-29816 / 34066
                              v_fitem_list.delete;
                              --Kiran end OSPRODUCT-29816 / 34066

                              v_installment_object_id     :=     pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_scheduled_payment_list(v_scheduled_payment_index),
                                                                      gbv_ScheduledRefInstallment
                                                                  );

                              v_scheduled_element_list.delete;

                              pkg_os_object_search.sp_object_children_of_type_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_scheduled_payment_list(v_scheduled_payment_index),
                                   gObjType_ScheduledElement,
                                   v_scheduled_element_list
                              );

                              if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '...... For PaymentPlanScheduledPayment Object ID: '
                                        ||v_scheduled_payment_list(v_scheduled_payment_index)
                                        ||', number of PaymentPlanScheduledPaymentElement objects found: '
                                        ||v_scheduled_element_list.count
                                   );

                              end if;

                              if v_scheduled_element_list.count > 0
                              then

                                   v_scheduled_element_index := v_scheduled_element_list.first;
                                                                     
                                   while v_scheduled_element_index is not null loop

                                        v_schedule_element_id := v_scheduled_element_list(v_scheduled_element_index);

                                        v_billing_element_md_id  :=   pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_schedule_element_id,
                                                                                gbv_billing_element_id
                                                                           );

                                        v_coverage_object_id     :=   pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_schedule_element_id,
                                                                                gbv_ScheduledElementRefAsset
                                                                           );

                                        v_element_amount         :=   pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_schedule_element_id,
                                                                                gbv_element_amount
                                                                           );

                                        if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
                                        then

                                                  v_element_amount := v_element_amount * (-1);

                                        end if;


                                        v_element_debit_category :=   pkg_os_object_io.fn_object_bv_get
                                                                           (
                                                                                in_session_id,
                                                                                in_transaction_id,
                                                                                v_schedule_element_id,
                                                                                gbv_debit_category
                                                                           );

                                        v_element_debit_subcategory   :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_debit_sub_category
                                                                                );

                                        v_element_credit_category     :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_credit_category
                                                                                );

                                        v_element_credit_subcategory  :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_credit_sub_category
                                                                                );

                                        v_create_debit_tf             :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_create_debit_flag
                                                                                );

                                        v_create_credit_tf            :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_create_credit_flag
                                                                                );

                                        v_element_creator_poltrns     :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_ElementRefCreatorPolTrns
                                                                                );

                                        v_IncludeInPayScheduleTF      :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_IncludeInPayScheduleTF
                                                                                );


                                        --- OSBILLING-3443--- check if element is valid or not for creating financial (default is true)
                                        v_valid_tf                    :=   pkg_os_object_io.fn_object_bv_get
                                                                                (
                                                                                     in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_schedule_element_id,
                                                                                     gbv_ElementValidTF
                                                                                );


                                        if nvl(v_valid_tf,pkg_os_constant.gBoolean_Yes) = pkg_os_constant.gBoolean_Yes
                                        then

                                             if v_create_debit_tf = 1 and v_IncludeInPayScheduleTF = 1
                                             then

                                                  v_tot_change_amount :=   nvl(v_tot_change_amount,0) + nvl(v_element_amount,0);

                                             end if;

                                             sp_create_billing_item
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_product_id,
                                                  in_filing_id,
                                                  in_master_policy_id,
                                                  in_policy_image_id,
                                                  in_policy_transaction_id,
                                                  in_master_customer_id,
                                                  in_policy_trx_effective_date,
                                                  in_fi_transaction_id,
                                                  in_fi_transaction_type_id,
                                                  in_policy_billing_method,
                                                  in_agency_billing_account_id,
                                                  v_schedule_element_id,
                                                  v_installment_object_id,
                                                  v_element_creator_poltrns,
                                                  in_trx_installment_type,
                                                  in_installment_count,
                                                  in_installment_start_num,
                                                  v_billing_element_md_id,
                                                  v_coverage_object_id,
                                                  v_element_amount,
                                                  v_element_debit_category,
                                                  v_element_debit_subcategory,
                                                  v_element_credit_category,
                                                  v_element_credit_subcategory,
                                                  v_create_debit_tf,
                                                  v_create_credit_tf,
                                                  v_IncludeInPayScheduleTF,
                                                  v_remaining_inst_count,
                                                  null,
                                                  in_payplan_option_id,
                                                  v_fi_change_amount,
                                                  in_policy_term_id,
                                                  v_created_fitem_id,
                                                  in_dm_value_table --[RR] New dev
                                             );

                                             --OSBILLING-6566 start
                                             if v_session_control.gLogging_Full
                                             then
                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       ' Inst. Debit :-> '
                                                       ||' v_element_debit_subcategory: '   ||v_element_debit_subcategory
                                                       ||' v_element_credit_subcategory: '  ||v_element_credit_subcategory
                                                       ||' v_fi_change_amount: '          || v_fi_change_amount
                                                       ||' v_created_fitem_id: '          || v_created_fitem_id
                                                  );
                                             end if;

                                             if ( v_element_debit_subcategory = 55248 or v_element_credit_subcategory = 55248 )
                                             then
                                                  v_FullPayDiscountFlag     := 1 ;
                                                  v_FullPayDiscountDebitAmt := v_fi_change_amount ;
                                                  v_FullPayDiscDebitFitemId := v_created_fitem_id;
                                             end if;
                                             
                                             if ( v_element_debit_subcategory = 46746 or v_element_credit_subcategory =  46846)
                                             then
                                                  v_PremiumDebitFitemId := v_created_fitem_id;
                                             end if;
                                             --OSBILLING-6566 end                                             

                                             --Kiran start OSPRODUCT-29816 / 34066
                                             if v_fitem_list.exists(v_created_fitem_id)then
                                                null;
                                             else 
                                                v_fitem_index := v_billing_element_md_id|| ':' ||case when in_fi_transaction_type_id  = gFITrxType_Dr_Generate then 1 when in_fi_transaction_type_id = gFITrxType_Cr_Generate then 2 else 0 end|| ':'||v_installment_object_id;
                                                v_fitem_list(v_fitem_index) := v_created_fitem_id;  
                                             end if;                                            
                                             
                                            if v_session_control.gLogging_Full  then
                                                  pkg_os_logging.sp_log
                                                  (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_procedure_name,
                                                           '... 1. v_fitem_index ->Fitem Billing ELement:Debit 1/Credit 1: Installment Object: '||v_fitem_index                                                           
                                                  );
                                             end if; 
                                             --Kiran end OSPRODUCT-29816 / 34066

                                             -- OSBILLING-3004
                                             if v_create_credit_tf = 1 and in_credit_fitransaction_id is not null
                                             then

                                                  sp_create_billing_item
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_product_id,
                                                       in_filing_id,
                                                       in_master_policy_id,
                                                       in_policy_image_id,
                                                       in_policy_transaction_id,
                                                       in_master_customer_id,
                                                       in_policy_trx_effective_date,
                                                       in_credit_fitransaction_id,
                                                       gFITrxType_Cr_Generate,
                                                       in_policy_billing_method,
                                                       in_agency_billing_account_id,
                                                       v_schedule_element_id,
                                                       v_installment_object_id,
                                                       v_element_creator_poltrns,
                                                       in_trx_installment_type,
                                                       in_installment_count,
                                                       in_installment_start_num,
                                                       v_billing_element_md_id,
                                                       v_coverage_object_id,
                                                       v_element_amount,
                                                       v_element_debit_category,
                                                       v_element_debit_subcategory,
                                                       v_element_credit_category,
                                                       v_element_credit_subcategory,
                                                       v_create_debit_tf,
                                                       v_create_credit_tf,
                                                       v_IncludeInPayScheduleTF,
                                                       v_remaining_inst_count,
                                                       null,
                                                       in_payplan_option_id,
                                                       v_fi_change_amount,
                                                       in_policy_term_id,
                                                       v_created_fitem_id,
                                                       in_dm_value_table -- [RR] New dev
                                                  );

                                                --Kiran start OSPRODUCT-29816 / 34066
                                                
                                                if v_fitem_list.exists(v_created_fitem_id)then
                                                    null;
                                                else                                 
                                                    v_fitem_index := v_billing_element_md_id|| ':' ||2|| ':'||v_installment_object_id;
                                                    v_fitem_list(v_fitem_index) := v_created_fitem_id;
                                                end if;                                     
                                                     
                                                if v_session_control.gLogging_Full then
                                                     pkg_os_logging.sp_log
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_procedure_name,
                                                          '... 2. v_fitem_index ->Fitem Billing ELement:Debit 1/Credit 2: Installment Object: '||v_fitem_index                                                          
                                                     );
                                                end if;                                                                                    
                                                --Kiran end OSPRODUCT-29816 / 34066

                                             end if;
                                             
                                        elsif nvl(v_valid_tf,pkg_os_constant.gBoolean_Yes) = pkg_os_constant.gBoolean_No --- OSBILLING-3443
                                        then

                                             sp_upd_commission_adjustment
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_master_policy_id,
                                                  in_policy_transaction_id,
                                                  v_schedule_element_id,
                                                  v_installment_object_id
                                             );

                                        end if;

                                        --OSBILLING-6566 start
                                        if v_session_control.gLogging_Full
                                        then

                                             pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  ' Inst. Credit :-> '
                                                  ||' v_element_debit_subcategory: '     ||v_element_debit_subcategory
                                                  ||' v_element_credit_subcategory: '  ||v_element_credit_subcategory
                                                  ||' v_fi_change_amount: '            || v_fi_change_amount
                                                  ||' v_created_fitem_id: '            || v_created_fitem_id
                                             );
                                        end if;

                                        if ( v_element_debit_subcategory = 55248 or v_element_credit_subcategory = 55248)
                                        then
                                             v_FullPayDiscountFlag          := 1 ;
                                             v_FullPayDiscountCreditAmt    := v_fi_change_amount ;
                                             v_FullPayDiscCreditFitemId    := v_created_fitem_id;
                                        end if;                                        if ( v_element_debit_subcategory = 46746 or v_element_credit_subcategory =  46846)
                                        then
                                             v_PremiumCreditFitemId        := v_created_fitem_id;
                                        end if;
                                        --OSBILLING-6566 end

                                        v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );
                                   
                                   end loop;

                              end if; -- if v_scheduled_element_list.count > 0

                              -- OSBILLING-3004
                              
                              --Kiran start OSPRODUCT-29816 / 34066  
                              
                              sp_fitems_associate
                              (
                                      in_session_id,
                                      in_transaction_id,
                                      in_product_id,               
                                      in_policy_image_id,
                                      in_policy_transaction_id,
                                      v_installment_object_id,
                                      v_fitem_list                                                                 
                              );
                              --Kiran end OSPRODUCT-29816 / 34066

                              pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_installment_object_id,v_datamart_tf);

                              v_scheduled_payment_index := v_scheduled_payment_list.next(v_scheduled_payment_index);

                         end loop;     -- while v_scheduled_payment_index is not null loop
                         
                         --Create fiChange in case of Fullpaydiscount to settle the premium --OSBILLING-6566
                         if v_FullPayDiscountFlag = 1
                         then
                              sp_fullpay_discount_adj
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_credit_fitransaction_id,
                                   in_fi_transaction_id,
                                   v_FullPayDiscountDebitAmt,
                                   v_FullPayDiscDebitFitemId,
                                   in_master_policy_id,
                                   in_policy_transaction_id,
                                   v_FullPayDiscountCreditAmt,
                                   v_FullPayDiscCreditFitemId,
                                   v_PremiumDebitFitemId,
                                   v_PremiumCreditFitemId
                              );
                         end if;
                         
                    end;
                    
               end if;  -- if v_scheduled_payment_list.count > 0
                              
          end;
          
     else
          
          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
                 (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                     '... Skipping the Installment Part and special Stubs'
                  );
          end if;
          
     end if;

     /*if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;*/

     out_tot_change_amount   :=   v_tot_change_amount;
     out_count_rec           :=   v_count_rec;

end sp_debit_credit_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_category_in_set
--
--   %USAGE
--        This function returns 'T' if an FItem Category ID exists in a given FItem Category Set
--
--   %ALGORITHM
--        This function returns 'T' if an FItem Category ID exists in a given FItem Category Set.
--
--
--   %PARAM     in_fitem_category_id              Fitem Category ID
--   %PARAM     in_fitem_category_set_id          Fitem Category Set ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_fitem_category_in_set
(
     in_fitem_category_id               in        number,
     in_fitem_category_set_id           in        number
)
return char
is

     v_return_value                     char;

begin

     select
          decode( count(1), 0, 'F', 'T' )
     into
          v_return_value
     from
          db_fitem_cat_set_values
     where
          db_fitem_category_set_id = in_fitem_category_set_id
     and
          db_fitem_category_id = in_fitem_category_id;

     return v_return_value;

end fn_fitem_category_in_set;

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_type_in_set
--
--   %USAGE
--        This function returns 'T' if an FItem Type ID exists in a given FItem Type Set.
--
--   %ALGORITHM
--        This function returns 'T' if an FItem Type ID exists in a given FItem Type Set.
--
--
--   %PARAM     in_fitem_category_id              Fitem Type ID
--   %PARAM     in_fitem_category_set_id          Fitem Type Set ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_fitem_type_in_set
(
     in_fitem_type_id                   in        db_fitem_type.db_fitem_type_id%type,
     in_fitem_category_set_id           in        db_fitem_type_set.db_fitem_type_set_id%type
)
return char
is

     v_return_value                     char;

begin

     select
          decode( count(1), 0, 'F', 'T' )
     into
          v_return_value
     from
          db_fitem_type_set_values
     where
          fitem_type_set_id = in_fitem_category_set_id
     and
          fitem_type_id = in_fitem_type_id;

     return v_return_value;

end fn_fitem_type_in_set;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_fitem_subcategory_in_set
--
--   %USAGE
--        This function returns 'T' if an FItem Sub aentegory ID exists in a given FItem Sub Category Set.
--
--   %ALGORITHM
--        This function returns 'T' if an FItem Sub aentegory ID exists in a given FItem Sub Category Set.
--
--
--   %PARAM     in_fitem_subcategory_id           Fitem Category ID
--   %PARAM     in_fitem_subsubcategory_set_id    Fitem Category Set ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_fitem_subcategory_in_set
(
     in_fitem_subcategory_id            in        number,
     in_fitem_subcategory_set_id        in        number
)
return char
is

     v_return_value                     char;

begin

     select
          decode( count(1), 0, 'F', 'T' )
     into
          v_return_value
     from
          db_fitem_sub_cat_set_values
     where
          db_fitem_sub_category_set_id = in_fitem_subcategory_set_id
     and
          db_fitem_sub_category_id = in_fitem_subcategory_id;

     return v_return_value;

end fn_fitem_subcategory_in_set;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_billing_trx_type_in_set
--
--   %USAGE
--        This function returns 'T' if the given Billing Trx Type exists in the Billing Trx Type Set
--
--   %ALGORITHM
--        N/A
--
--
--   %PARAM     in_billing_trx_set_type_id                BillingTransactionSet Type ID
--   %PARAM     in_billing_trx_set_id                   Billing Transaction Set
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_billing_trx_type_in_set
(
     in_billing_trx_set_type_id          in        number,
     in_billing_trx_set_id                 in        number
)
return char
is

     v_return_value                     char;

begin

     select
          decode( count(1), 0, 'F', 'T' )
     into
          v_return_value
     from
          db_billing_trx_set_values
     where
          db_billing_trx_set_id = in_billing_trx_set_id
     and
          db_billing_trx_set_type_id = in_billing_trx_set_type_id;

     return v_return_value;

end fn_billing_trx_type_in_set;

-----------------------------------------------------------------------------------------------------------------------------------------------------


--
--   %NAME
--        sp_create_billing_item
--
--   %USAGE
--        This procedure identifies the Change Amount for a PC Coverage ID and creates a FItem and  FIChange Object
--        based on the Payment Plan configuration.
--
--   %ALGORITHM
--   This procedure identifies the Change Amount for a PC Coverage ID and creates a FItem and  FIChange Object
--   based on the Payment Plan configuration.
--
--
--   %PARAM    in_session_id                      Session ID
--   %PARAM    in_transaction_id                  Transaction ID
--   %PARAM    in_product_id                      Product ID
--   %PARAM    in_filing_id                       Filing ID
--   %PARAM    in_master_policy_id                Master Policy ID
--   %PARAM    in_policy_image_id                 Policy Image ID
--   %PARAM    in_policy_transaction_id           Policy Transaction ID
--   %PARAM    in_master_customer_id              Master Customer ID
--   %PARAM    in_policy_trx_effective_date       Policy Transaction Effective Date
--   %PARAM    in_fi_transaction_id               FITransaction ID
--   %PARAM    in_fi_transaction_type_id          FITransaction Type ID
--   %PARAM    in_billing_method_id               Billing Method ID
--   %PARAM    in_agency_billing_account_id       Agency Billing Account ID
--   %PARAM    in_installment_id                  Installment ID
--   %PARAM    in_trx_installment_type            Transaction Installment Type
--   %PARAM    in_installment_number              Installment Number
--   %PARAM    in_installment_start_num           Installment Start Number
--   %PARAM    in_coverage_object_id              Coverage Object ID
--   %PARAM    in_pay_plan_detail_row             Payment Plan Detail Row
--   %PARAM    in_billing_element_row             Billing Element Row
--   %PARAM    in_schedule_payment_id             Schedule Payment Id
--   %PARAM    in_bill_upfront_tf                 Bill Upfront TF
--   %PARAM    in_adjust_schedule_tf              Adjust Schedule TF
--   %PARAM    in_remaining_inst_count            Remaining Inst Count
--   %PARAM    in_rounding_precision              Rounding Precision
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_billing_item
(
     in_session_id                      in        object.object_id%type,
     in_transaction_id                  in        object.object_id%type,
     in_product_id                      in        pd_product.pd_product_id%type,
     in_filing_id                       in        pd_filing.pd_filing_id%type,
     in_master_policy_id                in        object.object_id%type,
     in_policy_image_id                 in        object.object_id%type,
     in_policy_transaction_id           in        object.object_id%type,
     in_master_customer_id              in        object.object_id%type,
     in_policy_trx_effective_date       in        varchar2,
     in_fi_transaction_id               in        object.object_id%type,
     in_fi_transaction_type_id          in        number,
     in_policy_billing_method_id        in        number,
     in_agency_billing_account_id       in        object.object_id%type,
     in_schedule_element_id             in        object.object_id%type,
     in_installment_object_id           in        object.object_id%type,
     in_element_pol_trans_id            in        object.object_id%type,
     in_trx_installment_type            in        lookup_list_value.lookup_enum%type,
     in_installment_count               in        number,
     in_installment_start_num           in        number,
     in_billing_element_md_id           in        db_billing_element.db_billing_element_id%type,
     in_coverage_object_id              in        object.object_id%type,
     in_element_amount                  in        number,
     in_element_debit_category          in        number,
     in_element_debit_subcategory       in        number,
     in_element_credit_category         in        number,
     in_element_credit_subcategory      in        number,
     in_create_debit_tf                 in        char,
     in_create_credit_tf                in        char,
     v_IncludeInPayScheduleTF           in        char,
     in_remaining_inst_count            in        number,
     in_rounding_precision              in        number default 5,
     in_chosen_payplan_id               in        object.object_id%type,
     out_fi_change_amount               out       number,
     in_policy_term_id                  in        number default null,
     out_fitem_id                       out       object.object_id%type,
     -- [RR] new dev
     in_dm_value_table                  in        t_obj_column_value_tab default gnull_obj_column_val_tab
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_create_billing_item';

     v_rounding_precision               number;
     v_element_name                     varchar2(500);
     v_element_asset_name               varchar2(100);
     v_element_category                 number;
     v_element_subcategory              number;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fichange_process_date            date;
     v_sum_include                      number;
     v_fichange_run_total               number;
     v_fitem_debit_credit               number;
     v_datamart_tf                      char(1) := 'T';

     v_billing_account_id               object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_most_recent_fichange             object.object_id%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_fitem_earning_status             object_bv_value.business_variable_value%type;
     v_fitem_unearned_amount            number;
     --r_billing_account_list             pkg_db_object.t_billing_account_list;
     v_policy_transaction_type          object_bv_value.business_variable_value%type;
     v_to_be_rb_trx_id                  object.object_id%type;
     v_installment_actual_date          date;
     v_trx_eff_date                     date;
     v_ultimate_temp_element_id         object.object_id%type;
     
     v_fitem_column_val_tab             t_obj_column_value_tab;
     v_policy_trx_sub_type_id           number;
     v_policy_number                    object_bv_value.business_variable_value%type;
     v_product_id                       number;
     v_policy_trx_rb_seq                number;
     v_policy_trx_rf_seq                number;
     v_policy_trx_generic_instance      number;
     v_policy_trx_object_state          number;
     v_partner_id                       object.object_id%type;
     v_account_number                   object_bv_value.business_variable_value%type;
     v_account_type_id                  object_bv_value.business_variable_value%type;
     v_account_holder_name              object_bv_value.business_variable_value%type;
     --Kiran start OSPRODUCT-32906
     v_element_business_relation        object_bv_value.business_variable_value%type;
     --Kiran end OSPRODUCT-32906 

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Coverage Object ID: '||in_coverage_object_id||
               ' for Billing Element ID: '||in_schedule_element_id||
               ' Element Amount '||in_element_amount||
               ' create debit tf '||in_create_debit_tf||
               ' create crdit tf '||in_create_credit_tf||
               ' in_fi_transaction_type_id '||in_fi_transaction_type_id
               || ' in_element_pol_trans_id: ' || in_element_pol_trans_id
               || ' in_policy_transaction_id: ' || in_policy_transaction_id
               || ' call stack ' || DBMS_UTILITY.format_call_stack
           );

     end if;

     /* v_policy_transaction_type    :=    pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_transaction_id,
                                             pkg_os_constant_bv.gbv_PolicyTranType
                                        );*/
                                        
     -- [RR] Datamart get               
     begin
                    
          v_policy_transaction_type := in_dm_value_table('POLICY_TRX_TYPE_ID'); --[RR] new dev           
          
     exception
          
          when others then
               
               begin
                    select
                         pt.policy_trx_type_id
                    into
                         v_policy_transaction_type
                    from
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_type;
                    
               exception
                    
                    when no_data_found then 
                         null;
                         
               end;
               
               
               
     end;
     
     -- [RR] fall back code  
     if v_policy_transaction_type is null then
          
           v_policy_transaction_type := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_transaction_id,
                                             pkg_os_constant_bv.gbv_PolicyTranType
                                        );
                                        
     end if;
     
     v_trx_eff_date := to_date
                        (
                            in_policy_trx_effective_date,
                            pkg_os_constant.DragonDateFormatDefault
                        );  
     
     if v_trx_eff_date is null then
          
          v_trx_eff_date := to_date
                            (
                                 pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_policy_transaction_id,
                                      pkg_os_policy_transaction.gbv_PolicyTrxEffectiveDate
                                 ),pkg_os_constant.DragonDateFormatDefault
                            );
          
          
     end if;

     if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
     then

          v_to_be_rb_trx_id := pkg_os_object_io.fn_object_bv_get
                               (
                                   in_session_id,
                                   in_transaction_id,
                                   in_policy_transaction_id,
                                   pkg_os_policy_transaction.gbv_PolicyTrxRollsBckTrx
                               );

          if v_session_control.gLogging_Full
          then
              pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... For the Rollback transaction '||in_policy_transaction_id
                    ||' the trx to be rolled back is '|| v_to_be_rb_trx_id
                    ||', the elemet policy trx is '|| in_element_pol_trans_id ||'. '
                    ||case when v_to_be_rb_trx_id = in_element_pol_trans_id
                           then ' Creating fitmes for the Rollback trx.'
                           else ' They do not match.'
                        end
               );
         end if;

     end if;

     --Keerthi, each time this proc is called , the list is deleted
     --g_billing_account_list.delete;

     if in_element_amount <> 0 
        and 
        in_element_amount is not null 
        and 
        ( 
             nvl(v_IncludeInPayScheduleTF, 2 )=1 
             or 
             in_create_credit_tf = 1 
        )
     then
          -- [RR] Fixed the alignment to make it readable
          begin

               if v_policy_transaction_type in
                  (
                       pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                       pkg_os_policy_transaction.gPolicyTrxType_Renewal,
                       pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
                       pkg_os_policy_transaction.gPolicyTrxType_Rewrite, --Mohtsham , merged MUSTDEV-16767 fix in base
                       pkg_os_policy_transaction.gPolicyTrxType_Reissue
                  )
                  or 
                  (
                       v_policy_transaction_type not in 
                       (  
                            pkg_os_policy_transaction.gPolicyTrxType_NewBusiness,
                            pkg_os_policy_transaction.gPolicyTrxType_Renewal,
                            pkg_os_policy_transaction.gPolicyTrxType_NBRewrite,
                            pkg_os_policy_transaction.gPolicyTrxType_Rewrite, --Mohtsham , merged MUSTDEV-16767 fix in base
                            pkg_os_policy_transaction.gPolicyTrxType_Reissue
                       )
                       and
                       in_policy_transaction_id = in_element_pol_trans_id
                  )
                  or 
                  (
                       v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
                       and 
                       v_to_be_rb_trx_id = in_element_pol_trans_id
                  )

               then


                    v_element_name      :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_schedule_element_id,
                                                  gbv_element_name
                                             );

                    v_element_asset_name     :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_schedule_element_id,
                                                       gbv_element_asset_name
                                                  );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Get the Billing Account from the Billing Account Path'
                         );

                    end if;

                    if in_fi_transaction_type_id = gFITrxType_Dr_Generate and in_create_debit_tf = 1
                    then

                         v_billing_account_id :=  pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_schedule_element_id,
                                                       gbv_ElementRefDebitBillAcc
                                                  );

                    elsif in_fi_transaction_type_id = gFITrxType_Cr_Generate and in_create_credit_tf = 1
                    then

                         v_billing_account_id :=  pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_schedule_element_id,
                                                       gbv_ElementRefCreditBillAcc
                                                  );

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '.. Billing Account for Element: '|| v_billing_account_id
                         );

                    end if;

                    if v_billing_account_id is not null
                    then
                         
                         g_billing_account_list(g_billing_account_list.count + 1) := v_billing_account_id;

                    end if;
                    
                    --Durgesh2517 why below logging is needed?
                    /*if v_billing_account_id is null
                    then

                         if v_session_control.gLogging_Full
                         then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Unable to find valid billing account for the billing element : '||v_element_name
                             );

                         end if;
                         
                    else
                          
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Billing Account for the Transaction : '||v_billing_account_id || ' for the billing element : ' || v_element_name
                              );

                         end if;

                    end if;*/

                    --
                    -- Get the parent entity id of billing account Object
                    --
                    v_billaccount_parent_id := pkg_os_object_io.fn_object_bv_get
                                               (
                                                    in_session_id,
                                                    in_transaction_id,
                                                    v_billing_account_id,
                                                    gbv_BillingAccountParent
                                               );


                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Parent entity of billing account '||v_billing_account_id||
                              ' - '||v_billaccount_parent_id
                         );

                    end if;

                    if in_fi_transaction_type_id = gFITrxType_Dr_Generate
                    then

                         v_element_category       :=   in_element_debit_category;
                         v_element_subcategory    :=   in_element_debit_subcategory;
                         v_fitem_debit_credit     :=   gFItem_Debit;
                         v_fitem_earning_status   :=   gFitem_EarningNotApplicable;
                         v_fitem_unearned_amount  :=   0;

                    elsif in_fi_transaction_type_id =  gFITrxType_Cr_Generate
                    then

                         v_element_category       :=   in_element_credit_category;
                         v_element_subcategory    :=   in_element_credit_subcategory;
                         v_fitem_debit_credit     :=   gFItem_Credit;
                         v_fitem_earning_status   :=   gFItem_Unearned;
                         v_fitem_unearned_amount  :=   in_element_amount*(-1);

                    end if;

                    --Kiran start OSPRODUCT-32906
                    v_element_business_relation := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_schedule_element_id,
                                                       PKG_DB_CONSTANT.gbv_ElementBusinessRelation
                                                    );
                    --Kiran end OSPRODUCT-32906
                                        
                    v_fitem_column_val_tab.delete;
                    
                    pkg_db_object.sp_fitem_create
                    (
                         in_session_id                =>    in_session_id,
                         in_transaction_id            =>    in_transaction_id,
                         in_parent_object_id          =>    v_billing_account_id,
                         out_fitem_id                 =>    v_fitem_id,
                         in_fitem_debit_credit        =>    v_fitem_debit_credit,
                         in_fitem_category            =>    v_element_category,
                         in_fitem_subcategory         =>    v_element_subcategory,
                         in_fitem_effective_date      =>    in_policy_trx_effective_date,
                         in_fitem_billing_status      =>    gFItemBillStatus_Active,
                         in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                         in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
                         in_fitem_Earningstatus       =>    v_fitem_earning_status,
                         in_fitem_earned_amount       =>    0,
                         in_fitem_unearned_amount     =>    v_fitem_unearned_amount,
                         in_fitem_paid_amount         =>    0,
                         in_FItemRefInstallment       =>    in_installment_object_id,
                         in_FItemRefPolicy            =>    in_master_policy_id,
                         in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
                         in_FitemRefPolicyTerm        =>    in_policy_term_id,
                         in_FItemRefCustomer          =>    in_master_customer_id,
                         in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
                         in_FItemRefAssWithFItrx      =>    in_fi_transaction_id,
                         in_FItemRefAssetpkg_db_object =>   in_coverage_object_id,
                         in_Fitem_billing_elt_md_id    =>   in_billing_element_md_id,--Kiran OSPRODUCT-32906. Added Comma
                         --Kiran start OSPRODUCT-32906
                         in_Fitem_element_business_relation =>   v_element_business_relation
                         --Kiran end OSPRODUCT-32906
                    );
                    
                    begin
                         
                         select
                              b.partner_object_id,
                              b.account_number,
                              b.account_type_id,
                              b.primary_contact_name
                         into
                              v_partner_id,
                              v_account_number,
                              v_account_type_id,
                              v_account_holder_name
                         from
                              dragon_billingaccount b
                         where
                              b.billingaccount_id = v_billing_account_id;
                              
                    exception
                         when no_data_found then
                              null;
                    end;
                    
                    if v_fitem_column_val_tab.count > 0 then
                    
                         begin
                              
                              if in_dm_value_table.count > 0 then
                                   
                                   begin
                                        
                                        v_fitem_column_val_tab('POLICY_TRANSACTION_ID') := in_dm_value_table('POLICY_TRANSACTION_ID');
                                        --OSPRODUCT-15383
								--v_fitem_column_val_tab('POLICY_EFFECTIVE_DATE') := in_dm_value_table('POLICY_EFFECTIVE_DATE');
                                        v_fitem_column_val_tab('POLICY_TRX_TYPE_ID')    := in_dm_value_table('POLICY_TRX_TYPE_ID');
                                        v_fitem_column_val_tab('POLICY_TRX_SUB_TYPE_ID') := in_dm_value_table('POLICY_TRX_SUB_TYPE_ID');
                                        v_fitem_column_val_tab('POLICY_TRX_RB_SEQ')      := in_dm_value_table('POLICY_TRX_RB_SEQ');
                                        v_fitem_column_val_tab('POLICY_TRX_RF_SEQ')      := in_dm_value_table('POLICY_TRX_RF_SEQ');
                                        v_fitem_column_val_tab('POLICY_TRX_GENERIC_INSTANCE') := in_dm_value_table('POLICY_TRX_GENERIC_INSTANCE');
                                        v_fitem_column_val_tab('POLICY_TRANSACTION_NUMBER')   := in_dm_value_table('POLICY_TRANSACTION_NUMBER');
                                        v_fitem_column_val_tab('POLICY_TRX_SEQ_NUM')          := in_dm_value_table('POLICY_TRX_SEQ_NUM');
                                        --8756
                                        --v_fitem_column_val_tab('POLICY_TRX_OBJECT_STATE')     := in_dm_value_table('POLICY_TRX_OBJECT_STATE');
                                        v_fitem_column_val_tab('POLICY_ID')                   := in_dm_value_table('POLICY_ID');
                                        v_fitem_column_val_tab('POLICY_NO')                   := in_dm_value_table('POLICY_NO');
                                        v_fitem_column_val_tab('PRODUCT_ID')                  := in_dm_value_table('PRODUCT_ID');
                                        v_fitem_column_val_tab('CUSTOMER_ID')                 := in_dm_value_table('CUSTOMER_ID');
                                   
                                   exception
                                        
                                        when others then
                                             v_fitem_column_val_tab('POLICY_TRANSACTION_ID')                 := in_policy_transaction_id;
                                             --OSPRODUCT-15383
									--v_fitem_column_val_tab('POLICY_EFFECTIVE_DATE')                 := to_date(in_policy_trx_effective_date, pkg_os_constant.DragonDateFormatDefault);
                                             v_fitem_column_val_tab('POLICY_TRX_TYPE_ID')                    := v_policy_transaction_type;
                                             v_fitem_column_val_tab('CUSTOMER_ID')                           := in_master_customer_id;
                                             v_fitem_column_val_tab('PRODUCT_ID')                            := in_product_id;
                                   end;
                                   
                              end if;
                              
                              v_fitem_column_val_tab('BILLING_ACCOUNT_ID')                    := v_billing_account_id;
                              
                              if in_policy_term_id is not null then                                   
                                   v_fitem_column_val_tab('POLICY_TERM_ID')                   := in_policy_term_id;                                   
                              end if;
                              
                              if v_partner_id is not null then
                                   v_fitem_column_val_tab('PARTNER_ID')                       := v_partner_id;
                              end if;
                              
                              if v_account_number is not null then
                                   v_fitem_column_val_tab('BILLING_ACCOUNT_NUMBER')           := v_account_number;
                              end if;
                              
                              if v_account_type_id is not null then
                                   v_fitem_column_val_tab('BILLING_ACCOUNT_TYPE_ID')          := v_account_type_id;
                              end if;
                              
                              if v_account_holder_name is not null then
                                   v_fitem_column_val_tab('ACCOUNT_HOLDER_NAME')              := v_account_holder_name;
                              end if;
                              
                              v_fitem_column_val_tab('INSTALLMENT_ID')                        := in_installment_object_id;                              
                              
                              v_fitem_column_val_tab('FITEM_BILLED_TF')                       := null;
                              v_fitem_column_val_tab('FITEM_SECURITY_STATUS')                 := null; 
                              v_fitem_column_val_tab('BILLING_ELEMENT_MD_ID')                 := in_billing_element_md_id;
                              v_fitem_column_val_tab('LEGACY_ID')                             := null;
                              v_fitem_column_val_tab('LEGACY_INSTALLMENT_NUM')                := null;
                              v_fitem_column_val_tab('LEGACY_OBJECT_ID')                      := null;
                              v_fitem_column_val_tab('LEGACY_FITEM_ID')                       := null;
                              v_fitem_column_val_tab('VALUE_STREAM')                          := null;
                              v_fitem_column_val_tab('CASH_ASSOCIATED_WITH')                  := null;
                              v_fitem_column_val_tab('CASH_ASSOCIATED_WITH_DETAILS')          := null;
                              v_fitem_column_val_tab('PRIORITY')                              := null;
                              v_fitem_column_val_tab('FITEM_ASSET_ID')                        := in_coverage_object_id;
                              
                              v_fitem_column_val_tab('BI_PROCESS_DATE')                       := null;
                              v_fitem_column_val_tab('AGENCY_DUE_DATE')                       := null;
                              v_fitem_column_val_tab('FITEM_BILLED_DATE')                     := null;
                              v_fitem_column_val_tab('AGING_STATUS_CHANGE_DATE')              := null;
                              v_fitem_column_val_tab('DATE_EFFECTIVE')                        := to_date(in_policy_trx_effective_date, pkg_os_constant.DragonDateFormatDefault);
                              v_fitem_column_val_tab('DISBURSEMENT_BATCH_ID')                 := null;
                              v_fitem_column_val_tab('RELATED_RECON_BATCH_ID')                := null;
                              v_fitem_column_val_tab('CURRENT_RECON_BATCH_ID')                := null;
                              v_fitem_column_val_tab('EARNING_STATUS')                        := v_fitem_earning_status;
                              v_fitem_column_val_tab('EARNED_AMOUNT')                         := 0;
                              v_fitem_column_val_tab('PAID_AMOUNT')                           := 0;
                              v_fitem_column_val_tab('UNEARNED_AMOUNT')                       := v_fitem_unearned_amount;                    
                         
                              v_fitem_column_val_tab('FITEM_CATEGORY_ID')                     := v_element_category;
                              v_fitem_column_val_tab('FITEM_SUB_CATEGORY_ID')                 := v_element_subcategory;                              
                              v_fitem_column_val_tab('FITEM_TYPE_ID')                         := v_fitem_debit_credit;
                              v_fitem_column_val_tab('AGING_STATUS_DAYS_ID')                  := null;
                              v_fitem_column_val_tab('AGING_STATUS_ID')                       := null;
                              v_fitem_column_val_tab('BILLING_METHOD_ID')                     := in_policy_billing_method_id;
                              v_fitem_column_val_tab('BATCH_SECURITY_STATUS')                 := null;
                              --Kiran start OSPRODUCT-32906
                              v_fitem_column_val_tab('FITEM_BUSINESS_RELATIONSHIP')           := v_element_business_relation;--pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_fitem_id, pkg_db_constant.gbv_FinancialBusinessRelation); --OSPRODUCT-32901
                              --Kiran end OSPRODUCT-32906                              
                         
                         exception
                              
                              when others then
                                   null;
                         
                         end;
                         
                    end if;
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Created and Set values of FItem Object ID: '||v_fitem_id||' Billing Elt MD ID:'||in_billing_element_md_id
                         );

                    end if;

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_id,
                         gbv_fitem_asset_name,
                         v_element_asset_name
                    );

                    ---- OSBILLING-3443---- Set Reference Created By Element on Fitem
                    v_ultimate_temp_element_id    :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            in_schedule_element_id,
                                                            pkg_os_constant_bv.gbv_Ultimate_Template
                                                       );

                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_id,
                         gbv_FItemCreatedByElement,
                         v_ultimate_temp_element_id--in_schedule_element_id
                    );
                    -- OSBILLING-3443
                    
                    -- [RR] Datamart get
                    begin
                         
                         select 
                              inst.actual_due_date 
                         into
                              v_installment_actual_date
                         from 
                              dragon_scheduled_installment inst
                         where
                              inst.installment_id = in_installment_object_id;
                    
                    exception 
                         when no_data_found then
                              null;
                    end;
                    
                    if v_installment_actual_date is null then
                         
                         v_installment_actual_date := to_date
                         (
                              pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_installment_object_id,
                                   gbv_installment_actual_date

                              ),pkg_os_constant.DragonDateFormatDefault
                         );
                         
                    end if;
                    
                    -- [RR] Retrieved from the datamart
                    /*v_trx_eff_date := to_date
                    (
                         pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_policy_transaction_id,
                              pkg_os_policy_transaction.gbv_PolicyTrxEffectiveDate
                         ),pkg_os_constant.DragonDateFormatDefault
                    );*/

                    -- set Local Actual Due date to the transaction effective date in case the actual due date is less then
                    -- transaction effective date

                    if ( v_installment_actual_date < v_trx_eff_date  )
                    then
                         
                         --set FItem local actual date as Policy Trx effective date
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitem_id,
                              gbv_FItemActualDueDate,--32014546 Commented hardcoded BV
                              to_char(v_trx_eff_date, pkg_os_constant.DragonDateFormatDefault)
                              -- [RR] Do not need a bv get again
                              --pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_policy_transaction_id, pkg_os_policy_transaction.gbv_PolicyTrxEffectiveDate)
                         );
                         
                         -- [RR] New dev
                         v_fitem_column_val_tab('ACTUAL_DUE_DATE') := v_trx_eff_date;
                    
                    end if;                   
                    
                    
                    /*if v_billing_account_id is not null
                    then

                         r_billing_account_list(r_billing_account_list.count + 1)     :=     v_billing_account_id;

                    end if;*/

                    --
                    -- Fetch FIChange Object Details
                    --

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Identifying values for FIChange'
                         );

                    end if;


                    --
                    -- Set the Processing Date to Current Date
                    --
                    /*
                    v_fichange_process_date :=    pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fi_change_id
                                                  );*/--OSBILLING-3004

                    v_fichange_action := gFIChange_Create;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... FIChange Action: '||v_fichange_action
                         );

                    end if;

                    --
                    -- Added to handle the debit/credit in single code
                    --

                    if in_fi_transaction_type_id = gFITrxType_Dr_Generate and in_create_debit_tf = 1
                    then

                         v_fichange_amount   :=   in_element_amount;
                         out_fi_change_amount :=   nvl(in_element_amount,0);

                    elsif in_fi_transaction_type_id = gFITrxType_Cr_Generate and in_create_credit_tf = 1
                    then

                         v_fichange_amount   :=   in_element_amount*(-1);

                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... FIChange Amount: '||v_fichange_amount
                         );

                    end if;

                    v_sum_include   :=   gFIChange_Yes;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... FIChange Sum Include: '||v_sum_include
                         );

                    end if;

                    --
                    -- Call the FIChange creation procedure with the input parameters identified hitherto
                    --
                    
                    if v_fichange_amount <> 0
                    then
                         
                         pkg_db_object.sp_fichange_create
                         (
                             in_session_id                  =>  in_session_id,
                             in_transaction_id              =>  in_transaction_id,
                             in_parent_fitransaction_id     =>  in_fi_transaction_id,
                             out_fichange_id                =>  v_fi_change_id,
                             in_fichange_action             =>  v_fichange_action,
                             in_fichange_action_delta       =>  v_fichange_amount,
                             in_fichange_ref_fitem          =>  v_fitem_id,
                             in_fichange_sum_include        =>  v_sum_include,
                             in_fichange_process_date       =>  v_current_date,--to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                             in_fichange_ref_pol            =>  in_master_policy_id,
                             in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                             in_fichange_belongs_to         =>  v_billaccount_parent_id
                         );


                         if v_session_control.gLogging_Full
                         then

                             pkg_os_logging.sp_log
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  ' ...... Create the FIChange object after collecting all the BV values'
                             );

                         end if;
                         
                         -- [RR] New dev
                         v_fitem_column_val_tab('CREATOR_FITRANSACTION_ID') := in_fi_transaction_id;
                         
                         --
                         -- Update the FItem Datamart
                         --
                         /*pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitem_id,
                              v_datamart_tf
                         );*/
                         
                         sp_fitem_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fitem_id,
                              v_fitem_column_val_tab
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Updated the Datamart of FIChange and FItem Objects'
                              );
                              
                         end if;
                         
                    end if;

               end if;               
               
          end;
          
     else

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Discarding the Billing Element ID: '||in_billing_element_md_id||
                    ' due to Final Change Amount: '|| in_element_amount
               );

          end if;

     end if; -- if v_element_amount <> 0 and v_element_amount is not null

     out_fitem_id :=  v_fitem_id ; --OSBILLING-6566
     out_fi_change_amount := v_fichange_amount ; --OSBILLING-6566

exception
     
     when no_data_found then     

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '  Error Msg: '||sqlerrm
          );

end sp_create_billing_item;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_create_carrier_billing_item
--
--   %USAGE
--        This procedure creates the billing items under carrier billing account.
--
--   %ALGORITHM
--        Not specified.
--
--
--   %PARAM    in_session_id                      Session ID
--   %PARAM    in_transaction_id                  Transaction ID
--   %PARAM    in_product_id                      Product ID
--   %PARAM    in_filing_id                       Filing ID
--   %PARAM    in_master_policy_id                Master Policy ID
--   %PARAM    in_policy_image_id                 Policy Image ID
--   %PARAM    in_policy_transaction_id           Policy Transaction ID
--   %PARAM    in_policy_trx_effective_date       Policy Transaction Effective Date
--   %PARAM    in_fi_transaction_id               FITransaction ID
--   %PARAM    in_fi_transaction_type_id          FITransaction Type ID
--   %PARAM    in_installment_id                  Installment ID
--   %PARAM    in_installment_count               Installment Count
--   %PARAM    in_installment_number              Installment Number
--   %PARAM    in_coverage_object_id              Coverage Object ID
--   %PARAM    in_billing_element_row             Billing Element Row
--   %PARAM    in_element_amount                  Billing Element Amount
--   %PARAM    in_carrier_billing_acc_id          Carrier Billing Account ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_carrier_billing_item
(
     in_session_id                      in        object.object_id%type,
     in_transaction_id                  in        object.object_id%type,
     in_product_id                      in        pd_product.pd_product_id%type,
     in_filing_id                       in        pd_filing.pd_filing_id%type,
     in_master_policy_id                in        object.object_id%type,
     in_policy_image_id                 in        object.object_id%type,
     in_policy_transaction_id           in        object.object_id%type,
     in_policy_trx_effective_date       in        varchar2,
     in_fi_transaction_id               in        object.object_id%type,
     in_fi_transaction_type_id          in        number,
     in_installment_id                  in        object.object_id%type,
     in_installment_count               in        number,
     in_installment_number              in        number,
     in_coverage_object_id              in        object.object_id%type,
     in_equivalent_type_tf              in        char,
     in_billing_element_row             in        db_billing_element%rowtype,
     in_element_amount                  in        number,
     in_carrier_billing_acc_id          in        object.object_id%type default null
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_create_carrier_billing_item';

     v_cov_total_amount                 number;
     v_cov_output                       number;
     v_billing_element_amount           number;
     v_element_name                     varchar2(500);
     v_element_amount                   number;
     v_element_create_debit             char(1);
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_create_credit            char(1);
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_category                 number;
     v_element_subcategory              number;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fichange_process_date            date;
     v_sum_include                      number;
     v_fichange_run_total               number;
     v_fitem_debit_credit               number;
     v_billing_account_path             varchar2(1000);
     v_billing_account_id               object.object_id%type;
     v_fitem_id                         object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_most_recent_fichange             object.object_id%type;

     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_datamart_tf                      char(1) := 'T';
     r_billing_account_list             pkg_db_object.t_billing_account_list;


begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering Coverage Object ID: '||in_coverage_object_id||
               ' for Billing Element ID: '||in_billing_element_row.db_billing_element_id||
               ' - Billing Element Name: '||in_billing_element_row.billing_element_name
          );

     end if;

     r_billing_account_list.delete;

     if in_carrier_billing_acc_id is not null
     then

        v_billing_account_id    :=      in_carrier_billing_acc_id;
        v_element_amount        :=      in_element_amount;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Carrier Billing Account for the Transaction'||v_billing_account_id
               );

          end if;
          if v_billing_account_id is not null
          then

               r_billing_account_list(r_billing_account_list.count + 1)     :=     v_billing_account_id;
          end if;


          -- Added by AJ on 11/01/2010 ( OSDEMO-3860)
          --
          -- Get the parent entity id of billing account Object
          --

          v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_billing_account_id,
                                             gbv_BillingAccountParent
                                        );


          if v_session_control.gLogging_Full then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Parent entity of billing account '||v_billing_account_id||
                    ' - '||v_billaccount_parent_id
               );

          end if;

          if in_fi_transaction_type_id = gFITrxType_Dr_Generate
          then

               v_element_category       :=   in_billing_element_row.debit_fitem_category;
               v_element_subcategory    :=   in_billing_element_row.debit_fitem_sub_category;
               v_fitem_debit_credit     :=   gFItem_Credit;

          elsif in_fi_transaction_type_id =  gFITrxType_Cr_Generate
          then

               v_element_category       :=   in_billing_element_row.credit_fitem_category;
               v_element_subcategory    :=   in_billing_element_row.credit_fitem_sub_category;
               v_fitem_debit_credit     :=   gFItem_Debit;

          elsif in_fi_transaction_type_id =  gFITrxType_Cash_Post
          then

               v_fitem_debit_credit     :=   gFItem_Debit;
               v_element_category       :=   gFItem_Category_Cash;

               v_element_subcategory    :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_fi_transaction_id,
                                                  gbv_FITrxCashSubCategoy
                                             );
          end if;

          pkg_db_object.sp_fitem_create
          (
               in_session_id                   =>    in_session_id,
               in_transaction_id               =>    in_transaction_id,
               in_parent_object_id             =>    v_billing_account_id,
               out_fitem_id                    =>    v_fitem_id,
               in_fitem_debit_credit           =>    v_fitem_debit_credit,
               in_fitem_category               =>    v_element_category,
               in_fitem_subcategory            =>    v_element_subcategory,
               in_fitem_effective_date         =>    in_policy_trx_effective_date,
               in_fitem_billing_status         =>    gFItemBillStatus_Active,
               in_fitem_processing_status      =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date       =>    in_policy_trx_effective_date,
               in_FItemRefInstallment          =>    in_installment_id,
               in_FItemRefPolicy               =>    in_master_policy_id,
               in_FItemRefPolicyTxn            =>    in_policy_transaction_id,
               in_FItemRefEntityBelongsTo      =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx         =>    in_fi_transaction_id,
               in_FItemRefAssetpkg_db_object   =>    in_coverage_object_id

          );

          if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '...... Created  and Set values for FItem Object ID: '||v_fitem_id
                 );

          end if;
          if v_billing_account_id is not null
          then
               r_billing_account_list(r_billing_account_list.count + 1)     :=     v_billing_account_id;
          end if;

          --
          -- Fetch FIChange Object Details
          --

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Identifying values for FIChange'
               );

          end if;

          --
          -- Set the Processing Date to Current Date
          --

          v_fichange_process_date :=    pkg_os_time.fn_os_sysdate
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fi_change_id
                                        );

          v_fichange_action          :=    gFIChange_Create;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... FIChange Action '||v_fichange_action
               );

          end if;

          --
          -- Added to handle the debit/credit in single code
          --

          if in_fi_transaction_type_id    = gFITrxType_Dr_Generate and in_billing_element_row.create_debit_tf = 'T'
          then

               v_fichange_amount    :=    v_element_amount*(-1);

          elsif in_fi_transaction_type_id = gFITrxType_Cr_Generate and in_billing_element_row.create_credit_tf = 'T'
          then

               v_fichange_amount    :=    v_element_amount;

          elsif in_fi_transaction_type_id = gFITrxType_Cash_Post
          then

               v_fichange_amount    :=    v_element_amount;

          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... FIChange Amount: '||v_fichange_amount
               );

          end if;

          v_sum_include   :=   gFIChange_Yes;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... FIChange Sum Include '||v_sum_include
               );

          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Set the Business Variables of FIChange'
               );

          end if;

          --
          -- Call the FIChange creation procedure with the input parameters identified
          --

          pkg_db_object.sp_fichange_create
          (
               in_session_id                  =>  in_session_id,
               in_transaction_id              =>  in_transaction_id,
               in_parent_fitransaction_id     =>  in_fi_transaction_id,
               out_fichange_id                =>  v_fi_change_id,
               in_fichange_action             =>  v_fichange_action,
               in_fichange_action_delta       =>  v_fichange_amount,
               in_fichange_ref_fitem          =>  v_fitem_id,
               in_fichange_sum_include        =>  v_sum_include,
               in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
               in_fichange_ref_pol            =>  in_master_policy_id,
               in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
               in_fichange_belongs_to         =>  v_billaccount_parent_id
          );

          if v_session_control.gLogging_Full
          then

                 pkg_os_logging.sp_log
                 (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       ' ...... Create the FIChange object after collecting all the BV values'
                 );

          end if;

          --
          -- Update the FIChange Datamart
          --
          /*pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fi_change_id,
               v_datamart_tf
          );*/-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


          --
          -- Update the FItem Datamart
          --

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_id,
               v_datamart_tf
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Updated the Datamart of FIChange and FItem Objects'
               );

          end if;

     end if;
     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;

     end sp_create_carrier_billing_item;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_bor_billtrx_create
--
--   %USAGE
--        This procedure creates a FITransactions for BOR Transaction
--
--   %ALGORITHM
--        Pass BOR Transaction ID, Old Agenecy ID, New Agency ID and Policy ID
--        Get the New Producing Agency, Old Agnecy and Carrier Billing Accounts
--        Loop Through each transactions having change amount not equal to 0 and coverage equal to final commission
--        Set the Old producer adjusted commission amount and New producer commission amount at BOR transaction
--        Create new Debit FITransaction Object under Old Angency Billing Account with offset amount
--        Create FItem of type ? ?Credit? under Carrier Billing Account with offset amount
--        Create new Credit FITransaction Object under New Angency Billing Account with onset amount
--        Create FItem of type ? ?Debit? under Carrier Billing Account with onset amount
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_transaction_id      BOR Transaction ID
--   %PARAM    in_old_agency_id              OLD Agency ID
--   %PARAM    in_new_agency_id              New Agency ID
--   %PARAM    in_policy_id                  Policy ID
--   %PARAM    io_action_outcome_id          Outcome ID
--   %PARAM    in_current_date_time          Current Date and Time
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_bor_billtrx_create
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,    /* BOR Trx IDD */
     in_old_agency_id                   in             object.object_id%type,
     in_new_agency_id                   in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_current_date_time               in             date default null
)
is

     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_bor_billtrx_create';

     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_product_id                       pd_product.pd_product_id%type;
     v_filing_id                        pd_filing.pd_filing_id%type;

     v_policy_id                        object.object_id%type;
     v_policy_trx_id                    object.object_id%type;
     v_ultimate_customer_id             object.object_id%type;
     v_primary_entity_id                object.object_id%type;
     v_billing_acc_cust_id              object.object_id%type;
     v_fitransaction_id                 object.object_id%type;
     v_fitem_credit_id                  object.object_id%type;
     v_fitem_debit_id                   object.object_id%type;
     v_fichange_id                      object.object_id%type;
     v_debit_fichange_id                object.object_id%type;
     v_credit_fichange_id               object.object_id%type;
     v_policy_payment_id                object.object_id%type;
     v_billaccount_Parent_id            object.object_id%type;
     v_batch_parent_billing_acc_id      object.object_id%type;
     v_usersession_exchange_id          object.object_id%type;
     v_exchange_sponsor_partner_id      object.object_id%type;
     v_carrier_billing_acc_id           object.object_id%type;
     v_old_agency_billing_acc_id        object.object_id%type;
     v_new_agency_billing_acc_id        object.object_id%type;
     v_producing_agency_id              object.object_id%type;

     v_fitem_effective_date             object_bv_value.business_variable_value%type;
     v_fichange_action                  object_bv_value.business_variable_value%type;
     v_fichange_process_date            object_bv_value.business_variable_value%type;
     v_sum_include                      object_bv_value.business_variable_value%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_batch_processing_date            object_bv_value.business_variable_value%type;
     v_object_state                     object_bv_value.business_variable_value%type;
     v_account_type                     object_bv_value.business_variable_value%type;
     v_batch_cash_apply_chk             object_bv_value.business_variable_value%type;
     v_batch_type                       object_bv_value.business_variable_value%type;
     v_fitrx_effective_date             object_bv_value.business_variable_value%type;

     v_fichange_amount                  number;
     v_debit_fichange_amount            number;
     v_credit_fichange_amount           number;
     v_counter                          number;
     v_batch_funded                     number;
     v_batch_total_amount               float;
     v_batch_posted_amount              float;
     v_target_fitem_balance_amt         float;
     v_total_items                      number   := 0;
     v_processed_items                  number   := 0;
     v_datamart_tf                      char(1) := 'T';
     r_billing_account_list                 pkg_db_object.t_billing_account_list;


     cursor c_getTransactions
     is

          select
               a.onset_written_amount, a.offset_written_amount
          from
               dragon_transaction_stats a
          where
               a.policy_transaction_id = in_policy_transaction_id
          and
               a.change_amount <> 0
          and
               a.coverage_id = gCoverage_FinalCommission
          ;

begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Entering BOR Transaction Creation Process for transaction: '||in_policy_transaction_id
          );

     end if;

     r_billing_account_list.delete;

     --
     -- Get the 1-1 child of the Partner of type Billing Account
     --

     v_new_agency_billing_acc_id   :=     pkg_os_object_search.fn_object_11_child_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               in_new_agency_id,
                                               gObjType_BillingAccount
                                          );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... New Producing Agency Billing Account ID: '||v_new_agency_billing_acc_id
          );

     end if;
     if v_new_agency_billing_acc_id is not null
     then
          r_billing_account_list(r_billing_account_list.count + 1)     :=     v_new_agency_billing_acc_id;
     end if;

     v_current_date                :=   to_char
                                        (
                                             nvl(in_current_date_time,
                                             pkg_os_time.fn_os_sysdate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_policy_transaction_id
                                             )),  --OSBILLING-7829
                                             pkg_os_constant.DragonDateFormatDefault
                                        );

     v_usersession_exchange_id     :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_session_id,
                                             gbv_UserSessionRefConnectedTO
                                        );

     v_exchange_sponsor_partner_id :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_usersession_exchange_id,
                                             gbv_ExchangeRefSponsorPartner
                                        );

     v_carrier_billing_acc_id      :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_exchange_sponsor_partner_id,
                                             gObjType_BillingAccount
                                        );

     if v_carrier_billing_acc_id is not null
     then
          r_billing_account_list(r_billing_account_list.count + 1)     :=     v_carrier_billing_acc_id;
     end if;

     v_old_agency_billing_acc_id   :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_old_agency_id,
                                             gObjType_BillingAccount
                                        );
     if v_old_agency_billing_acc_id is not null
     then
          r_billing_account_list(r_billing_account_list.count + 1)     :=     v_old_agency_billing_acc_id;
     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Carrier Billing Account ID: '||v_carrier_billing_acc_id
          );

     end if;

     for v_transaction in c_getTransactions
     loop

          --
          -- Set the Old producer adjusted commission amount at Policy transaction
          --

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id          => in_session_id,
               in_transaction_id      => in_transaction_id,
               in_object_id           => in_policy_transaction_id,
               in_bv_id               => gbv_PTOldProducerCommAmt,
               in_bv_value            => v_transaction.offset_written_amount
          );

          --
          -- Set the New producer commission amount at Policy transaction
          --

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id          => in_session_id,
               in_transaction_id      => in_transaction_id,
               in_object_id           => in_policy_transaction_id,
               in_bv_id               => gbv_PTNewProducerCommAmt,
               in_bv_value            => v_transaction.onset_written_amount
          );

          v_target_fitem_balance_amt    :=   abs(v_transaction.offset_written_amount);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Amount: '||v_target_fitem_balance_amt
               );

          end if;

          if v_target_fitem_balance_amt > 0
          then

               --
               -- Create new Debit FITransaction Object and set its values
               --

               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_fitrx_parent_fitrxset_id    =>  in_policy_transaction_id,
                    out_fitransaction_id           =>  v_fitransaction_id,
                    in_fitrx_type                  =>  gFITrxType_Dr_Generate,
                    in_fitrx_ref_billing_account   =>  v_old_agency_billing_acc_id,
                    in_fitrx_ref_associatedpolicy  =>  in_policy_id,
                    in_fitrx_ref_associatedpoltrx  =>  in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy      =>  in_policy_id,
                    in_fitrx_ref_actionpoltrx      =>  in_policy_transaction_id,
                    in_fitrx_effective_date        =>  v_current_date,
                    in_fitrx_gl_date               =>  v_current_date,
                    in_fitrx_process_date          =>  v_current_date,
                    in_fitrx_remaining_amount      =>  v_target_fitem_balance_amt,
                    in_fitrx_object_state          =>  gFITrxStatus_Processed
                );

                if v_session_control.gLogging_Full
                then

                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '...... New FITransaction Created for the BOR Transaction: '||v_fitransaction_id
                    );

               end if;

               --
               -- Set the Effective Date to Current Date
               --

               v_fitem_effective_date :=     to_char
                                             (    NVL(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_debit_id
                                                  )),  --OSBILLING-7829
                                                  pkg_os_constant.DragonDateFormatDefault
                                             );

               --
               -- Create FItem of type ? ?Debit? under Carrier Billing Account
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                =>    in_session_id,
                    in_transaction_id            =>    in_transaction_id,
                    in_parent_object_id          =>    v_old_agency_billing_acc_id,
                    out_fitem_id                 =>    v_fitem_debit_id,
                    in_fitem_debit_credit        =>    gFItem_Debit,
                    in_fitem_category            =>    gFItem_Cat_Commission,
                    in_fitem_effective_date      =>    v_fitem_effective_date,
                    in_fitem_billing_status      =>    gFItemBillStatus_Active,
                    in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefPolicy            =>    in_policy_id,
                    in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo   =>    v_old_agency_billing_acc_id,
                    in_FItemRefAssWithFItrx      =>    v_fitransaction_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Set BV Values for Debit Fitem Object ID: '||v_fitem_debit_id
                    );

               end if;
               if v_carrier_billing_acc_id is not null
               then
                    r_billing_account_list(r_billing_account_list.count + 1)     :=     v_carrier_billing_acc_id;
               end if;
               --
               -- Create FItem of type ? ?Credit? under Carrier Billing Account
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                =>    in_session_id,
                    in_transaction_id            =>    in_transaction_id,
                    in_parent_object_id          =>    v_carrier_billing_acc_id,
                    out_fitem_id                 =>    v_fitem_credit_id,
                    in_fitem_debit_credit        =>    gFItem_Credit,
                    in_fitem_category            =>    gFItem_Cat_Commission,
                    in_fitem_effective_date      =>    v_fitem_effective_date,
                    in_fitem_billing_status      =>    gFItemBillStatus_Active,
                    in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefPolicy            =>    in_policy_id,
                    in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo   =>    v_carrier_billing_acc_id,
                    in_FItemRefAssWithFItrx      =>    v_fitransaction_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Set BV Values for Credit Fitem Object ID: '||v_fitem_credit_id
                    );

               end if;
               if v_carrier_billing_acc_id is not null
               then
                    r_billing_account_list(r_billing_account_list.count + 1)     :=     v_carrier_billing_acc_id;
               end if;

               --
               -- Set the Processing Date to Current Date
               --

               v_fichange_process_date       :=        to_char
                                                       (
                                                            NVL(in_current_date_time,
                                                            pkg_os_time.fn_os_sysdate
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_fitransaction_id--v_debit_fichange_id
                                                            )),  --OSBILLING-7829
                                                            pkg_os_constant.DragonDateFormatDefault
                                                       );

               v_fichange_action             :=        gFIChange_Create;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date
                  );

               end if;

               v_debit_fichange_amount         :=        v_target_fitem_balance_amt;--r_target.balance;
               v_credit_fichange_amount        :=       v_target_fitem_balance_amt*(-1);--r_target.balance*(-1);

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Debit FIChange amount: '||v_debit_fichange_amount||
                         ' And Credit FIChange amount: '||v_credit_fichange_amount
                    );

               end if;

               v_sum_include            :=        gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ FIChange Sum Include '||v_sum_include
                  );

               end if;

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fitransaction_id,
                    out_fichange_id                =>  v_debit_fichange_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_debit_fichange_amount,
                    in_fichange_ref_fitem          =>  v_fitem_debit_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  v_fichange_process_date,
                    in_fichange_ref_pol            =>  in_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_carrier_billing_acc_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Created Debit FIChange Object ID: '||v_debit_fichange_id
                    );

               end if;

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fitransaction_id,
                    out_fichange_id                =>  v_credit_fichange_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_credit_fichange_amount,
                    in_fichange_ref_fitem          =>  v_fitem_credit_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  v_fichange_process_date,
                    in_fichange_ref_pol            =>  in_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_carrier_billing_acc_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Created Credit FIChange Object ID: '||v_credit_fichange_id
                     );

               end if;

               --
               -- Update the Debit FIChange Datamart
               --

               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_debit_fichange_id,
                    v_datamart_tf
               );*/-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


               --
               -- Update the Debit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_debit_id,
                    v_datamart_tf
               );

               --
               -- Update the Credit FIChange Datamart
               --

               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_credit_fichange_id,
                    v_datamart_tf
               );*/-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


               --
               -- Update the Credit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_credit_id,
                    v_datamart_tf
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Updated the datamarts of Debit Fichange,Debit Fitem,Credit FiChange and Credit Fitem'
                    );

               end if;

               --
               -- Update the FITransaction Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_datamart_tf
               );

          end if;

          v_target_fitem_balance_amt    :=   abs(v_transaction.onset_written_amount);

          if v_target_fitem_balance_amt > 0
          then

               --
               -- Create new Credit FITransaction Object
               --

               pkg_db_object.sp_fitransaction_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_fitrx_parent_fitrxset_id    =>  in_policy_transaction_id,
                    out_fitransaction_id           =>  v_fitransaction_id,
                    in_fitrx_type                  =>  gFITrxType_Cr_Generate,
                    in_fitrx_ref_billing_account   =>  v_new_agency_billing_acc_id,
                    in_fitrx_ref_associatedpolicy  =>  in_policy_id,
                    in_fitrx_ref_associatedpoltrx  =>  in_policy_transaction_id,
                    in_fitrx_ref_actionpolicy      =>  in_policy_id,
                    in_fitrx_ref_actionpoltrx      =>  in_policy_transaction_id,
                    in_fitrx_effective_date        =>  v_current_date,
                    in_fitrx_gl_date               =>  v_current_date,
                    in_fitrx_process_date          =>  v_current_date,
                    in_fitrx_remaining_amount      =>  v_target_fitem_balance_amt,
                    in_fitrx_object_state          =>  gFITrxStatus_Processed
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ New FITransaction Created for the BOR Transaction: '||v_fitransaction_id
                    );

               end if;

               --
               -- Set the Effective Date to Current Date
               --

               v_fitem_effective_date :=     to_char
                                             (
                                                  NVL(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_debit_id
                                                  )),  --OSBILLING-7829
                                                  pkg_os_constant.DragonDateFormatDefault
                                             );

               --
               -- Create FItem of type ? ?Debit?
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                =>    in_session_id,
                    in_transaction_id            =>    in_transaction_id,
                    in_parent_object_id          =>    v_carrier_billing_acc_id,
                    out_fitem_id                 =>    v_fitem_debit_id,
                    in_fitem_debit_credit        =>    gFItem_Debit,
                    in_fitem_category            =>    gFItem_Cat_Commission,
                    in_fitem_effective_date      =>    v_fitem_effective_date,
                    in_fitem_billing_status      =>    gFItemBillStatus_Active,
                    in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefPolicy            =>    in_policy_id,
                    in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo   =>    v_carrier_billing_acc_id,
                    in_FItemRefAssWithFItrx      =>    v_fitransaction_id
                );

                if v_session_control.gLogging_Full
                then

                     pkg_os_logging.sp_log
                     (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '............ Create object and Set BV Values for Debit Fitem Object ID: '||v_fitem_debit_id
                     );

                end if;

               --
               -- Create FItem of type ? ?Credit?
               --

               pkg_db_object.sp_fitem_create
               (
                    in_session_id                =>    in_session_id,
                    in_transaction_id            =>    in_transaction_id,
                    in_parent_object_id          =>    v_new_agency_billing_acc_id,
                    out_fitem_id                 =>    v_fitem_credit_id,
                    in_fitem_debit_credit        =>    gFItem_Credit,
                    in_fitem_category            =>    gFItem_Cat_Commission,
                    in_fitem_effective_date      =>    v_fitem_effective_date,
                    in_fitem_billing_status      =>    gFItemBillStatus_Active,
                    in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
                    in_FItemRefPolicy            =>    in_policy_id,
                    in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
                    in_FItemRefEntityBelongsTo   =>    v_new_agency_billing_acc_id,
                    in_FItemRefAssWithFItrx      =>    v_fitransaction_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Create Object and Set BV Values for Credit Fitem Object ID: '||v_fitem_credit_id
                    );

               end if;

               --
               -- Set the Processing Date to Current Date
               --

               v_fichange_process_date       :=        to_char
                                                       (
                                                            NVL(in_current_date_time,
                                                            pkg_os_time.fn_os_sysdate
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                  v_fitransaction_id-- v_debit_fichange_id
                                                            )),  --OSBILLING-7829
                                                            pkg_os_constant.DragonDateFormatDefault
                                                       );

               v_fichange_action             :=        gFIChange_Create;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ FIChange Action: '||v_fichange_action||' And FIChange process date: '||v_fichange_process_date
                     );

               end if;

               v_debit_fichange_amount         :=        v_target_fitem_balance_amt;--r_target.balance;
               v_credit_fichange_amount        :=        v_target_fitem_balance_amt*(-1);--r_target.balance*(-1);

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Debit FIChange amount: '||v_debit_fichange_amount||
                         ' And Credit FIChange amount: '||v_credit_fichange_amount
                    );

               end if;

               v_sum_include                   :=       gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ FIChange Sum Include '||v_sum_include
                    );

               end if;

               --
               -- Create Debit FIChange Object
               --

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fitransaction_id,
                    out_fichange_id                =>  v_debit_fichange_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_debit_fichange_amount,
                    in_fichange_ref_fitem          =>  v_fitem_debit_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  v_fichange_process_date,
                    in_fichange_ref_pol            =>  in_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_carrier_billing_acc_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Created Debit FIChange Object ID: '||v_debit_fichange_id
                    );

               end if;

               --
               -- Create Credit FIChange Object
               --

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fitransaction_id,
                    out_fichange_id                =>  v_credit_fichange_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_credit_fichange_amount,
                    in_fichange_ref_fitem          =>  v_fitem_credit_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  v_fichange_process_date,
                    in_fichange_ref_pol            =>  in_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_new_agency_billing_acc_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Created Credit FIChange Object ID: '||v_credit_fichange_id
                    );

               end if;

               --
               -- Update the Debit FIChange Datamart
               --

               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_debit_fichange_id,
                    v_datamart_tf
               );*/-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


               --
               -- Update the Debit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_debit_id,
                    v_datamart_tf
               );

               --
               -- Update the Credit FIChange Datamart
               --

               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_credit_fichange_id,
                    v_datamart_tf
               );*/-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


               --
               -- Update the Credit FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_credit_id,
                    v_datamart_tf
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Updated the data marts of Debit Fichange,Debit Fitem,Credit FiChange and Credit Fitem'
                    );

               end if;

               --
               -- Update the FITransaction Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitransaction_id,
                    v_datamart_tf
               );

          end if; -- end of v_target_fitem_balance_amt > 0

     end loop; -- end of for loop for v_transaction

     if  r_billing_account_list.count   >   0
     then

          pkg_db_object.sp_update_billingaccount_dm
          (
               in_session_id,
               in_transaction_id,
               r_billing_account_list
          );

     end if ;


     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_bor_billtrx_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_change_payplan_process
--
--   %USAGE
--          This procedure is the primary entry-point to process change in payplan during endorsement
--
--        For a particular policy transaction, this procedure creates the FITransaction and  FIChange Objects based on the chosen Payment Plan,
--        ScheduledPayment and ScheduledPaymentElements.
--
--          This also creates  Receivables under the appropriate BillingAccount
--
--   %ALGORITHM
--        This procedure creates a FITransaction and  FIChange Objects based on the chosen Payment Plan,
--        ScheduledPayment and ScheduledPaymentElements. This also creates the Receivables under the BillingAccount
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_ptp_id                     Policy Transaction ID
--   %PARAM    io_action_outcome_id          Action Outcome Id
--   %PARAM    in_current_date_time          Calling TimeStamp
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_change_payplan_process
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null,
     in_current_date_time               in             date default null, --VAULTDEV-6645
     in_earlier_payment_plan_id         in             object.object_id%type default null,
     in_delete_payer_tf                 in             char default 'F',
     in_dm_value_table                  in             t_obj_column_value_tab default gnull_obj_column_val_tab, -- OSPRODUCT-7817
     in_payer_billing_acc_id            in             object.object_id%type default null -- OSPRODUCT-34206_2
	 
)
is
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_change_payplan_process';
     v_primary_entity_id                object.object_id%type;
     v_producing_agency_id              object.object_id%type;
     v_billing_account_id               object.object_id%type;
     v_payment_plan_md_id               payment_plan.payment_plan_id%type;
     v_payment_plan_name                payment_plan.payment_plan_name%type;
     v_payment_plan_md_row              pkg_db_payplan_modify.getPaymentPlanList%rowtype;--OSPRODUCT-3108
     v_installment_count                number;
     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_installment_object_id            object.object_id%type;
     v_installment_due_date             object_bv_value.business_variable_value%type;
     v_bv_table                         pkg_os_object_io.t_bv_table;
     v_installment_issue_date           object_bv_value.business_variable_value%type;
     v_installment_actual_date          object_bv_value.business_variable_value%type;
     v_installment_withdrawal_date      object_bv_value.business_variable_value%type;
     v_installment_actual_end           object_bv_value.business_variable_value%type;
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     r_billing_account_list             pkg_db_object.t_billing_account_list;
     v_agent_due_date                   object_bv_value.business_variable_value%type;
     v_installment_num                  number;
     v_pol_applied_amount_tot           number;
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
     v_installment_type                 object_bv_value.business_variable_value%type;
     v_installment_no_calculated        number := 0;
     v_prev_installment_id              object.object_id%type;
     v_scheduled_payment_index          number;
     v_billing_acc_trx_set_id           object.object_id%type;
     v_transaction_installment_type     lookup_list_value.lookup_enum%type;
     v_fitransaction_list               pkg_os_object.t_object_list;
     v_fitransaction_index              number;
     v_fitrx_type                       object_bv_value.business_variable_value%type;
     v_fi_trx_debit_id                  object.object_id%type;
     v_remaining_inst_list              pkg_os_object.t_object_list;
     v_remaining_inst_index             number;
     v_remaining_installments           number := 0;
     v_installment_start_number         number;
     v_installment_number               object_bv_value.business_variable_value%type;
     v_current_stub_id                  object.object_id%type;
     v_tot_change_amount                number := 0;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_credit_tot_change_amount         number := 0;
     v_count_rec                        number := 0;
     v_credit_count_rec                 number := 0;
     v_set_type                         object_bv_value.business_variable_value%type;
     v_entry_method                     object_bv_value.business_variable_value%type;
     v_date_posted                      object_bv_value.business_variable_value%type;
     v_external_batch_id                object_bv_value.business_variable_value%type;
     v_processing_date                  object_bv_value.business_variable_value%type;
     v_datamart_tf                      char(1) := 'T';

     v_element_category                 number;
     v_element_subcategory              number;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fichange_process_date            date;
     v_sum_include                      number;
     v_fitem_id                         object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_fitem_debit_credit               number;
     v_cur_total_amount                 number;

     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;

     v_chsn_scheduled_payment_list      pkg_os_object.t_object_list;
     v_chsn_scheduled_payment_index     number;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_installment_object_id        object.object_id%type;
     v_policytrx_subtype_id             object_bv_value.business_variable_value%type;

     v_credit_billing_account           object.object_id%type;
     v_fi_trx_credit_id                 object.object_id%type;
     gbv_FItem_RefAsset                 constant business_variable.business_variable_id%type        :=   29719446;
     gbv_FItem_RefAssWithFItrx          constant business_variable.business_variable_id%type        :=   31758346;
     v_earlier_payment_plan             object.object_id%type;
     v_basisimage_id                    object.object_id%type;
     v_cur_total_amount_start           number;
     v_scheduled_payment_amount         number;
     --2017-04-11 Cheryl osbilling-3933
     v_current_term                     number;
     v_def_premium_stub_count           number;
     v_actual_due_date                  date;
     v_billing_acc_trx_description      object_bv_value.business_variable_value%type;


     v_mod_PaymentPlan_ID               object.object_id%type; -- OSBILLING-4363
     v_payment_method_id                object.object_id%type; -- OSBILLING-4363
     v_payer_list                       PKG_DB_MULTIPAYER.t_payer_tab;--VAULTDEV-6645
     v_exists_tf                        boolean;

     v_associated_payer                 object.object_id%type;
     v_idx                              long;
     v_policy_transaction_sub_type      object_bv_value.business_variable_value%type; -- OSBILLING-4765
     --OSPRODUCT-12737
     v_payment_schedule_balance         number:=0;
     v_installment_balance              number:=0;
     Schedule_not_balanced              exception;
     v_schedule_not_balanced            number:=0;												  

     cursor c_target_fitem
            (
               in_policy_id   in   number,
               in_installment_id in number,
               in_billing_account_id in number,
               in_billing_element_id in number default null
            )
     is
          select
               a.*
          from
               dragon_fitem a
          where
               a.policy_id = in_policy_id
          and
               a.installment_id = in_installment_id
          and
               a.fitem_type_id = gFItem_Debit
          and
               a.billing_account_id = in_billing_account_id
          and
          --OSBilling-1397: Needs refactoring keeping in mind Multicurrency logic
               a.balance > 0.01 -- cash is needed ...
          and
               ( a.billing_element_md_id = in_billing_element_id or in_billing_element_id is null )
          and
               a.fitem_sub_category_id not in (pkg_db_stmt.g_FItem_SubCat_InstFee_Pay, pkg_db_stmt.g_FItem_SubCat_InvFee_Rec)  -- Instalment Fee or Invoice Fee
          order by
               a.fitem_category_id;

     --
     -- Cursor to find out the Element ID which needs to be cleared out as a part of Payplan Change Credit
     --
     cursor c_target_element_id
     (
          in_payplan_id in number
     )
     is
          select
               distinct ( a.db_billing_element_id)
          from
               db_payment_plan_detail a
          where
               a.payment_plan_id = in_payplan_id;

begin


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Processing Change Pay Plan for Policy Image ID: '|| in_ptp_id ||
               ' Debit FITrx: ' || in_fi_trx_debit_id ||
               ' Credit FITrx: '|| in_fi_trx_credit_id||
               ' Chosen Payment Plan ID: '|| in_chosen_pay_plan_id||
               ' Modified Payment Plan ID: '|| in_mod_pay_plan_id ||
               ' Prior Billing Method: ' || in_prior_billing_method_id||
               ' Desired Billing Method: '|| in_policy_billing_method ||
               ' Delete Payer TF: '          || in_delete_payer_tf
          );

     end if;
     
     -- VAULTDEV-6645 starts
     if in_delete_payer_tf ='F' then

          --VAULTDEV-6645
          pkg_db_multipayer.sp_ptp_payers_get
          (
               in_session_id,
               in_transaction_id ,
               in_ptp_id,
               v_payer_list,
               'Y',
               pkg_db_multipayer.g_PayerGet_idx_ChosenPlan
          );

          v_exists_tf := pkg_db_multipayer.fn_payer_exists
                         (
                              in_session_id,
                              in_transaction_id ,
                              in_mod_pay_plan_id,
                              v_payer_list,
                              v_idx
                         );
                         
          -- OSPRODUCT-1113                         
          v_associated_payer := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_Session_id,
                                     in_transaction_id,
                                     v_payer_list(v_idx).PTPayer_object_id,
                                     32578848
                                );
          
     else
          
          v_associated_payer := null;
          
     end if;
     
     if v_session_control.gLogging_Full
     then
     
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Associated Payer: ' || v_associated_payer                          
          );
                                                                                                                                             
     end if;

     --
     -- Based on the Policy billing method, set the Billing account
     --

     if in_policy_billing_method = gBillingMethod_Agency then               

          v_billing_account_id  := in_agency_billing_acc_id;

     else

          v_billing_account_id  := in_customer_billing_acc_id;

     end if;    -- if Policy billing method

     --
     --   For transaction types that create installments, we're setting the transaction type to be Installment, for those that may modify installments
     --   or create stubs, we're setting the type to be Stub.
     --
     --   @@@VG: This is the second time we're doing this, why not pass it in?
     --

     if in_policy_transaction_type is not null
          and
          (
               in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness
               or
               in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
               or
               in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_NBRewrite
               or
               in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Reissue
               or
               (
                    in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement -- ## MS - This condition will be removed post Bill method change re-design.
                    and 
                    in_prior_billing_method_id is not null
               )

          )
     then

          v_transaction_installment_type := gInstallmentType_Installment;

     else

          v_transaction_installment_type := gInstallmentType_Stub;

     end if;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||||| Transaction Installment Type: ' || v_transaction_installment_type
          );

     end if;

     --
     -- OSBILLING-4765
     -- Get Transaciton Sub type
     --
     v_policy_transaction_sub_type := pkg_os_object_io.fn_object_bv_get
                                      (
                                           in_session_id,
                                           in_transaction_id,
                                           in_policy_transaction_id,
                                           gbv_PolicyTrx_EndSubType
                                      );


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...:Policy Transaction ID: '||in_policy_transaction_id||
               '...:Policy Transaction Type ID: ' || in_policy_transaction_type ||
               '...:Policy Transaction SubType ID: '  ||v_policy_transaction_sub_type
          );

     end if;
     --
     -- Get the details of the modified Payment plan
     --
     v_payment_plan_md_id := pkg_os_object_io.fn_object_bv_get
                             (
                                  in_session_id,
                                  in_transaction_id,
                                  in_mod_pay_plan_id,
                                  pkg_os_constant_bv.gbv_PaymentPlanID
                             );

     if v_session_control.gLogging_Full then            

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...New Payment Plan Object ID: ' || in_mod_pay_plan_id ||
               '...Payment Plan MD ID: '         || v_payment_plan_md_id
          );

     end if;

     v_payment_plan_md_row  := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_plan_md_id);

     v_installment_count    := greatest(nvl(v_payment_plan_md_row.num_instalments,1),1);

     --
     -- Loop through all the payment elements of the new payment plan and calculate the amount for the debit fitems
     --

     v_mod_scheduled_payment_list.delete;

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_mod_pay_plan_id,
          gObjType_ScheduledPayment,
          v_mod_scheduled_payment_list,
          gbv_ScheduledPayment_num
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Payment Plan ID: ' || in_mod_pay_plan_id ||
               '...... Found PaymentPlanScheduledPayment objects, count: '||v_mod_scheduled_payment_list.count ||
               '...... Pay Plan MD ID: '  || v_payment_plan_md_id               
          );

     end if;

     v_cur_total_amount   :=   0;
     --OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
     if v_mod_scheduled_payment_list.count > 0 then
     
          --OSBILLING-3833 - Merged GCNA code in BaseDEV. End
          v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.first;

          while v_mod_scheduled_payment_index is not null loop

               v_actual_due_date := to_date(pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                             gbv_actual_due_date
                                        ), pkg_os_constant.DragonDateFormatDefault);

               if v_actual_due_date is not null then                                                                                                                   

                    v_scheduled_payment_amount := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                       gbv_ScheduledPayCalAmount -- This is the debit amount sitting at the payment element level
                                                  );
                    
                    /*-- [RR] -- not required we can use a count variable instead if needs to be logged.
                    -- OSPRODUCT-7817
                    v_installment_number :=  pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                  gbv_ScheduledPayment_num
                                             );*/

                    v_cur_total_amount := v_cur_total_amount +  v_scheduled_payment_amount;

               end if;
               
               if v_session_control.gLogging_Full then                                       

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...Processing Installment Number:' ||v_installment_number ||
                         '...Installment Amount: '           ||v_scheduled_payment_amount || 
                         '...Cumulative Amount: '            ||v_cur_total_amount ||
                         '...Actual Due Date: '              ||v_actual_due_date
                    );

               end if;

               v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.next( v_mod_scheduled_payment_index );
                                                                                                                                        
          end loop;
          
     end if;

     --
     --  If the same payplan we do not need to create another set done in sp_financial_trx_create
     --

     if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
        and 
        in_prior_billing_method_id is not null -- We are changing the Billing Method
        and 
        in_chosen_pay_plan_id = in_mod_pay_plan_id
     then
          
          v_scheduled_payment_list.delete;
          
     else     
          
          v_scheduled_payment_list.delete;
          
          -- OSPRODUCT-7817
          -- [RR] list already retrieved duplicate
          /*pkg_os_object_search.sp_object_children_of_type_get
          (
              in_session_id,
              in_transaction_id,
              in_mod_pay_plan_id,
              gObjType_ScheduledPayment,
              v_scheduled_payment_list,
              gbv_ScheduledPayment_num
          );*/         
          
          v_scheduled_payment_list := v_mod_scheduled_payment_list;

          --
          -- Get payment plan ID -- OSBILLING-4363
          --
          -- [RR] BV get done . can be reused
          -- OSPRODUCT-7817
          /*v_mod_PaymentPlan_ID := pkg_os_object_io.fn_object_bv_get
                                  (
                                      in_session_id,
                                      in_transaction_id,
                                      in_mod_pay_plan_id,
                                      212015             -- 12015 Payment Plan ID
                                  );*/
                                  
          v_mod_PaymentPlan_ID := v_payment_plan_md_id;                               

         --
         -- Get payment plan ID -- OSBILLING-4363
         -- 27372305 Policy Billing Method
         v_payment_method_id := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_ptp_id,
                                     27372305 --27372305 Policy Billing Method
                                );

         if v_session_control.gLogging_Full
         then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Payment Plan ID: ' || in_mod_pay_plan_id ||
                    '...... Found PaymentPlanScheduledPayment objects, count: '||v_mod_scheduled_payment_list.count ||
                    '...... Pay Plan MD ID: '  || v_payment_plan_md_id ||
                    '...... Payment Method: '  || v_payment_method_id            
               );

         end if;

     end if;

     if v_scheduled_payment_list.count > 0
     then

          v_scheduled_payment_index := v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null loop

               if pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_scheduled_payment_list(v_scheduled_payment_index), gbv_ScheduledPaymentType ) = 1 then -- Installment                                      

                    v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gbv_ScheduledRefInstallment
                                                  );

                    if v_session_control.gLogging_Full then         

                        pkg_os_logging.sp_log
                        (
                             in_session_id,
                             in_transaction_id,
                             v_procedure_name,
                             '...... Scheduled Payment: ' || v_scheduled_payment_list(v_scheduled_payment_index) ||
                             '...... Installment Object: ' || v_installment_object_id
                        );

                    end if;

                    if v_installment_object_id is null
                       or
                       in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Renewal
                    then

                         --
                         --  Create Installment Object as a child of Policy Term
                         --
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              gObjType_ScheduledInstallment,
                              in_policy_term_id,
                              v_installment_object_id
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Created Installment Object ID: '||v_installment_object_id||
                                   ' as a child of Policy Term and for Scheduled Payment Object ID: '||v_scheduled_payment_list(v_scheduled_payment_index)
                              );

                         end if;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '............ Set the Reference from PaymentPlanScheduledPayment to Installment Object'
                              );

                         end if;

                         --
                         -- Set the Reference from PaymentPlanScheduledPayment to Installment Object
                         --
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_scheduled_payment_list(v_scheduled_payment_index),
                              gbv_ScheduledRefInstallment,
                              v_installment_object_id
                         );

                         --
                         -- Get the due date from ScheduledPayment object
                         --
                         v_installment_due_date := pkg_os_object_io.fn_object_bv_get
                                                   (
                                                        in_session_id,
                                                        in_transaction_id,
                                                        v_scheduled_payment_list(v_scheduled_payment_index),
                                                        gbv_billing_due_date
                                                   );
                                                   
                         --
                         -- Get the issue date from ScheduledPayment object
                         --

                         v_installment_issue_date := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_scheduled_payment_list(v_scheduled_payment_index),
                                                          gbv_billing_issue_date
                                                     );

                         --
                         -- Get Actual Due Date date from ScheduledPayment object
                         --
                         v_installment_actual_date := pkg_os_object_io.fn_object_bv_get
                                                      (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_scheduled_payment_list(v_scheduled_payment_index),
                                                           gbv_actual_due_date
                                                      );
                                                      
                         --
                         -- Get Withdrawal Date date from ScheduledPayment object                                                                   
                         --                                                      
                         v_installment_withdrawal_date := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_scheduled_payment_list(v_scheduled_payment_index),
                                                                 gbv_billing_withdr_date
                                                             );

                         --                               
                         -- Get Actual End Date date from ScheduledPayment object
                         --
                         v_installment_actual_end := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                           in_session_id,
                                                           in_transaction_id,
                                                           v_scheduled_payment_list(v_scheduled_payment_index),
                                                           gbv_actual_end_date
                                                     );
                                                     
                         --
                         -- Get Installment type from ScheduledPayment object
                         --                                                       
                         v_installment_type := pkg_os_object_io.fn_object_bv_get
                                               (
                                                   in_session_id,
                                                   in_transaction_id,
                                                   v_scheduled_payment_list(v_scheduled_payment_index),
                                                   gbv_ScheduledPaymentType
                                               );
                                               
                         --
                         -- Get the Installment Number
                         --
                         v_installment_no_calculated := pkg_os_object_io.fn_object_bv_get
                                                        (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_scheduled_payment_list(v_scheduled_payment_index),                                                                                                                                              
                                                             gbv_installement_no_calc
                                                        );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. Installment Issue Date: '       || v_installment_issue_date ||
                                   '.. Installment Due Date: '         || v_installment_due_date ||
                                   '.. Installment Actual Date: '      || v_installment_actual_date ||
                                   '.. Installment Withdrawal Date: '  || v_installment_withdrawal_date ||
                                   '.. Installment Type: '             || v_installment_type ||
                                   '.. Installment Number: '           || to_number(v_installment_no_calculated) ||
                                   '.. Previous Installment ID: '      || v_prev_installment_id ||
                                   '.. Pay Plan ID: '                  || v_mod_PaymentPlan_ID ||
                                   '.. Payment Method: '               || v_payment_method_id 
                              );

                         end if;
                         
                         -- Set the attributes
                         v_bv_table.delete;
                         v_bv_table ( gbv_installment_due_date             ).business_variable_value     :=   v_installment_due_date;
                         v_bv_table ( gbv_installment_issue_date           ).business_variable_value     :=   v_installment_issue_date;
                         v_bv_table ( gbv_installment_actual_date          ).business_variable_value     :=   v_installment_actual_date;
                         v_bv_table ( gbv_install_withdrawal_date          ).business_variable_value     :=   v_installment_withdrawal_date;
                         v_bv_table ( gbv_installment_actual_end           ).business_variable_value     :=   v_installment_actual_end;
                         v_bv_table ( gbv_installment_type                 ).business_variable_value     :=   v_installment_type;
                         v_bv_table ( gbv_installment_number               ).business_variable_value     :=   to_number(v_installment_no_calculated);
                         v_bv_table ( gbv_PrevInstallment                  ).business_variable_value     :=   v_prev_installment_id;
                         v_bv_table ( gbv_Installment_PayPlan_MD_ID        ).business_variable_value     :=   v_mod_PaymentPlan_ID;
                         v_bv_table ( gbv_Installment_BillMethodID         ).business_variable_value     :=   v_payment_method_id;
                         v_bv_table ( gbv_Ref_Bel_to_PayPlan_ID            ).business_variable_value     :=   in_mod_pay_plan_id;
                         v_bv_table (gbv_Install_IsCrrntPayPlanInst        ).business_variable_value     :=   gInstalmnt_CrntPayPlan_True;
                         
                         -- OSPRODUCT-1113
                         v_bv_table ( pkg_db_multipayer.gbv_Installment_Ref_PTermPayer).business_variable_value := v_associated_payer;
               
                         pkg_os_object_io.sp_object_bv_set
                          (
                               in_session_id,
                               in_transaction_id,
                               v_installment_object_id,
                               v_bv_table
                          );

                         --
                         --  Set the Next Installment Reference for the previous Installment ID
                         --
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_prev_installment_id,
                              gbv_NextInstallment,
                              v_installment_object_id
                         );

                         if v_scheduled_payment_list.next( v_scheduled_payment_index ) is null
                         then

                              --
                              --  Set the Next Installment Reference to null for the last Installment
                              --
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_installment_object_id,
                                   gbv_NextInstallment,
                                   null
                              );

                         end if;

                         ---
                         --- Update the Dragon_PaymenyInstallment datamart
                         ---
                         pkg_os_datamart.sp_datamart_update_row
                         (
                             in_session_id,
                             in_transaction_id,
                             v_installment_object_id,
                             v_datamart_tf
                         );

                    end if; -- if v_installment_object_id is null

                    v_prev_installment_id := v_installment_object_id;

               end if;

               v_scheduled_payment_index   :=      v_scheduled_payment_list.next( v_scheduled_payment_index );

          end loop; -- while v_scheduled_payment_index is not null loop

     end if; -- if v_scheduled_payment_list.count > 0

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......CACHE Loaded... Installment Object count: ' ||g_AllInstallment_cache.count||
               ' ScheduledPaymentElement Object count: '||g_schedule_element_cache.count
          );

     end if;

     v_remaining_inst_list.delete;

     --
     --  If the Scheduled Payment Type is "Installment", then
     --  Remaining installments will be total installments
     --

     v_remaining_installments := v_installment_count;

     if v_transaction_installment_type = gInstallmentType_Installment
     then

          v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.first;
          v_installment_start_number    := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                  gbv_ScheduledPayment_num
                                             );


     else
          --
          --  This is a Stub, so calculate the remaining number of scheduled payments installments
          --
          if v_scheduled_payment_list.count > 0
          then

               v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

               while v_scheduled_payment_index is not null loop

                    v_installment_object_id    :=      pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_scheduled_payment_list(v_scheduled_payment_index),
                                                            gbv_ScheduledRefInstallment
                                                       );

                    v_installment_actual_date  :=      to_date
                                                       (
                                                            pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_installment_object_id,
                                                                 gbv_installment_actual_date
                                                            ),pkg_os_constant.DragonDateFormatDefault
                                                       );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Scheduled Payment Installment ID: '||v_installment_object_id||
                              ' Actual Due Date: '||v_installment_actual_date||
                              ' Policy Transaction Effective Date: '||in_policy_trx_effective_date
                         );

                    end if;

                    if v_installment_actual_date > to_date(in_policy_trx_effective_date,pkg_os_constant.DragonDateFormatDefault)
                    then

                         v_installment_number     :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_scheduled_payment_list(v_scheduled_payment_index),
                                                            gbv_ScheduledPayment_num
                                                       );

                         v_remaining_inst_index   :=   v_installment_number;

                         v_remaining_inst_list(v_remaining_inst_index)  :=   v_installment_object_id;

                    end if;

                    v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

               end loop;     -- while v_scheduled_payment_index is not null loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Remaining Installment Count: '|| v_remaining_inst_list.count
                    );

               end if;

          end if;  -- if v_scheduled_payment_list.count > 0

          if v_remaining_inst_list.count > 0
          then

               v_installment_start_number     :=     v_remaining_inst_list.first;

         end if;

     end if;  -- if in v_transaction_installment_type = gInstallmentType_Installment

     /******************** Adding to create the stub installment object ************/

     if v_transaction_installment_type = gInstallmentType_Stub then     

          v_current_stub_id := pkg_os_object_io.fn_object_bv_get
                               (
                                    in_session_id,
                                    in_transaction_id,
                                    in_mod_pay_plan_id,
                                    gbv_PaymentPlanCurrentStub
                               );
                               
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Current Stub ID: '|| v_current_stub_id
               );

          end if;                                                                                                                                  

          if v_current_stub_id is not null then -- shouldnt it be 'is null'. For now leaving it as is                

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Creating the PaymentPlanScheduledPaymentInstallment Object for Stub ID: '|| v_current_stub_id
                    );

               end if;

               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjType_ScheduledInstallment,
                    in_policy_term_id,
                    v_installment_object_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Created PaymentPlanScheduledPaymentInstallment Object ID: '||v_installment_object_id
                    );

               end if;
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Set the Reference from PaymentPlanScheduledPayment to Installment Object'||
                         ', Current Stub ID: '    || v_current_stub_id||
                         ', Chosen Pay Plan ID: ' || in_mod_pay_plan_id
                    );

               end if;

               --
               -- Set the Reference from PaymentPlanScheduledPayment to Installment Object
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_current_stub_id,
                    gbv_ScheduledRefInstallment,
                    v_installment_object_id
               );              
                  
               --
               -- Get the due date from ScheduledPayment object
               --

               v_installment_due_date := pkg_os_object_io.fn_object_bv_get
                                         (
                                              in_session_id,
                                              in_transaction_id,
                                              v_current_stub_id,
                                              gbv_billing_due_date
                                         );                                              
                                               
               --              
               -- Get the issue date from ScheduledPayment object
               --
               v_installment_issue_date := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_current_stub_id,
                                                gbv_billing_issue_date
                                           );
                                              
               --
               -- Get Actual Due Date date from ScheduledPayment object
               --
               v_installment_actual_date := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_current_stub_id,
                                                 gbv_actual_due_date
                                            );
                                              

               --
               -- Get Actual End Date date from ScheduledPayment object
               --
               v_installment_actual_end := pkg_os_object_io.fn_object_bv_get
                                           (
                                                in_session_id,
                                                in_transaction_id,
                                                v_current_stub_id,
                                                gbv_actual_end_date
                                           );
                                           
               -- OSPRODUCT-11403
               v_installment_withdrawal_date :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_current_stub_id,
                                                       gbv_billing_withdr_date
                                                  );
               -- OSPRODUCT-11403                            
                                           
               --
               -- Get Installment Type from ScheduledPayment object
               --                                              
               v_installment_type := pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_current_stub_id,
                                             gbv_ScheduledPaymentType
                                         );
                                                                                            
               --                   
               -- Get the Installment Number
               --
               v_installment_no_calculated := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_current_stub_id,
                                                       gbv_installement_no_calc
                                                  );
                                              
               if v_session_control.gLogging_Full then              

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Installment Due Date: '        || v_installment_due_date ||
                         '... Installment Issue Date: '      || v_installment_issue_date ||
                         '... Installment Actual Date: '     || v_installment_actual_date ||
                         '... Installment Actual End Date: ' || v_installment_actual_end ||
                         '... Installment Withdrawal Date: ' || v_installment_withdrawal_date||
                         '... Installment Type: '            || v_installment_type ||
                         '... Installment Number: '          || to_number(v_installment_no_calculated) ||
                         '... Pay Plan ID: '                 || v_mod_PaymentPlan_ID ||
                         '... Associated Payer '             || v_associated_payer
                    );

               end if;

               v_bv_table.delete;             
               v_bv_table ( gbv_installment_due_date                        ).business_variable_value     :=   v_installment_due_date;
               v_bv_table ( gbv_installment_issue_date                      ).business_variable_value     :=   v_installment_issue_date;
               v_bv_table ( gbv_installment_actual_date                     ).business_variable_value     :=   v_installment_actual_date;
               v_bv_table ( gbv_install_withdrawal_date                     ).business_variable_value     :=   v_installment_withdrawal_date;--OSPRODUCT-11403
               --OSPRODUCT-2055 start
               if v_installment_actual_date > v_installment_due_date and in_policy_billing_method = gBillingMethod_Agency
               then
                         
                    v_bv_table ( gbv_installment_due_date             ).business_variable_value     :=   v_installment_actual_date;
                              
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_scheduled_payment_list(v_scheduled_payment_index),
                         gbv_billing_due_date,
                         v_installment_actual_date
                    );
                              
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Modified Installment Billing Due Date: '||v_installment_actual_date
                         );

                    end if;

               end if;
                         
               if v_installment_actual_date > v_installment_withdrawal_date and in_policy_billing_method = gBillingMethod_Agency
               then
                         
                    v_bv_table ( gbv_install_withdrawal_date             ).business_variable_value     :=   v_installment_actual_date;
                              
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_scheduled_payment_list(v_scheduled_payment_index),
                         gbv_billing_withdr_date,
                         v_installment_actual_date
                    );
                              
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '............ Modified Installment Withdrawal Due Date: '||v_installment_actual_date
                         );

                    end if;

               end if;
               --OSPRODUCT-2055 end            
               v_bv_table ( gbv_installment_actual_end                      ).business_variable_value     :=   v_installment_actual_end;
               v_bv_table ( gbv_installment_type                            ).business_variable_value     :=   v_installment_type;
               v_bv_table ( gbv_installment_number                          ).business_variable_value     :=   to_number(v_installment_no_calculated);
               v_bv_table ( gbv_Install_IsCrrntPayPlanInst                  ).business_variable_value     :=   gInstalmnt_CrntPayPlan_True;
               v_bv_table ( gbv_Installment_PayPlan_MD_ID                   ).business_variable_value     :=   v_mod_PaymentPlan_ID;
               v_bv_table ( gbv_Installment_BillMethodID                    ).business_variable_value     :=   v_payment_method_id;
               v_bv_table ( gbv_Ref_Bel_to_PayPlan_ID                       ).business_variable_value     :=   in_mod_pay_plan_id;                                 
               v_bv_table ( pkg_db_multipayer.gbv_Installment_Ref_PTermPayer).business_variable_value     :=   v_associated_payer;
               
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_installment_object_id,
                    v_bv_table
               );               
                         
               pkg_os_datamart.sp_datamart_update_row
               (
                     in_session_id,
                     in_transaction_id,
                     v_installment_object_id,
                     v_datamart_tf
               );

          else

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Current Stub do not exist. Do not create PaymentPlanScheduledPaymentInstallment Object.'
                    );

               end if;

           end if;

     end if;


     v_fi_trx_debit_id := in_fi_trx_debit_id;

     -- Start VAULTDEV-6645
     if in_earlier_payment_plan_id is null or in_earlier_payment_plan_id <>0
          then
     if v_fi_trx_debit_id is null
       and not (    in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
                    and
                    in_prior_billing_method_id is not null
                    and
                    in_chosen_pay_plan_id = in_mod_pay_plan_id
               )
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Create FITransaction Object for Debit Generation'
               );

          end if;

          --
          -- Create and setting values of FITransaction Object under PolicyTransaction for Debits Generation
          --

          pkg_db_object.sp_fitransaction_create
          (
               in_session_id                   =>  in_session_id,
               in_transaction_id               =>  in_transaction_id,
               in_fitrx_parent_fitrxset_id     =>  in_billing_acc_trx_set_id,
               out_fitransaction_id            =>  v_fi_trx_debit_id,
               in_fitrx_type                   =>  gFITrxType_Dr_Generate,
               in_fitrx_ref_associatedpolicy   =>  in_master_policy_id,
               in_fitrx_ref_associatedpoltrx   =>  in_policy_transaction_id,
               in_fitrx_ref_actionpolicy       =>  in_master_policy_id,
               in_fitrx_ref_actionpoltrx       =>  in_policy_transaction_id
           );

          if v_session_control.gLogging_Full
          then

             pkg_os_logging.sp_log
             (
                  in_session_id,
                  in_transaction_id,
                  v_procedure_name,
                  '......... Created reference from FItransaction Object: '||v_fi_trx_debit_id||
                  ' to Policy Object ID:'||in_master_policy_id||
                  ' and to Policy Transaction Object: '||in_policy_transaction_id
             );

          end if;

     end if;

     if v_fi_trx_debit_id is not null
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Calling the Debit creation process for Debit FITransaction for Payment Plan ID: '||in_mod_pay_plan_id
                    ||' MD Payment Plan ID: '||v_payment_plan_md_row.payment_plan_id
                    ||' Installment ID: '||v_installment_object_id
                    ||' Total Change Amount: '||v_tot_change_amount
                    ||' FITransaction ID: '||v_fi_trx_debit_id
               );

          end if;

          -- [RR] the dm list can be passed
               -- OSPRODUCT-7817
               sp_debit_credit_create
               (
                    in_session_id,
                    in_transaction_id,
                    in_master_policy_id,
                    in_ptp_id,
                    in_policy_term_id,
                    in_policy_transaction_id,
                    in_product_id,
                    in_filing_id,
                    in_policy_trx_effective_date,
                    in_policy_billing_method,
                    in_agency_billing_acc_id,
                    v_fi_trx_debit_id,
                    gFITrxType_Dr_Generate,
                    in_mod_pay_plan_id,
                    v_payment_plan_md_row,
                    v_transaction_installment_type,
                    v_installment_start_number,
                    v_remaining_installments,
                    v_remaining_inst_list,
                    in_ultimate_customer_id,
                    v_installment_object_id,
                    v_tot_change_amount,
                    v_count_rec,
                    in_choosen_payplan_id  =>  in_chosen_pay_plan_id, --VAULTDEV-6645
                    in_dm_value_table => in_dm_value_table -- OSPRODUCT-7817
                    
               );

     else

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ There is no change in Debits to create Debit FITransaction'
               );

          end if;

     end if;

     if in_fi_trx_credit_id is not null
     then

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Calling the Credit creation process for Credit FITransaction for Payment Plan ID: '||in_mod_pay_plan_id
                    ||' MD Payment Plan ID: '||v_payment_plan_md_row.payment_plan_id
                    ||' Installment ID: '||v_installment_object_id
                    ||' Total Credit Change Amount: '||v_credit_tot_change_amount
                    ||' FITransaction ID: '||in_fi_trx_credit_id
               );

          end if;

          -- [RR] the dm list can be passed
               -- OSPRODUCT-7817
               sp_debit_credit_create
               (
                    in_session_id,
                    in_transaction_id,
                    in_master_policy_id,
                    in_ptp_id,
                    in_policy_term_id,
                    in_policy_transaction_id,
                    in_product_id,
                    in_filing_id,
                    in_policy_trx_effective_date,
                    in_policy_billing_method,
                    in_agency_billing_acc_id,
                    in_fi_trx_credit_id,
                    gFITrxType_Cr_Generate,
                    in_mod_pay_plan_id,
                    v_payment_plan_md_row,
                    v_transaction_installment_type,
                    v_installment_start_number,
                    v_remaining_installments,
                    v_remaining_inst_list,
                    in_ultimate_customer_id,
                    v_installment_object_id,
                    v_credit_tot_change_amount,
                    v_credit_count_rec,
                    in_choosen_payplan_id  =>  in_chosen_pay_plan_id, --VAULTDEV-6645
                    in_dm_value_table => in_dm_value_table -- OSPRODUCT-7817
               );

     else

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '............ There is no change in Credits to create Credit FITransaction'
               );

          end if;

     end if;

     ----------------- Creating a paymentplan change credit of total amount------------


     if in_prior_billing_method_id is not null
       and in_prior_billing_method_id = gBillingMethod_Agency
       then
        if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Billing Account for the  credit Transaction : '||in_agency_billing_acc_id
                   ||'...... Prior billing method : '|| in_prior_billing_method_id
              );

         end if;

         --
         -- Get the parent entity id of billing account Object
         --

         v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_agency_billing_acc_id,
                                            gbv_BillingAccountParent
                                       );

         v_credit_billing_account := in_agency_billing_acc_id;
         if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Parent entity of billing account agency '||in_agency_billing_acc_id||
                   ' - '||v_billaccount_parent_id||
                   'v_credit_billing_account: ' || v_credit_billing_account
              );

         end if;
     else
         if v_session_control.gLogging_Full
         then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Billing Account for the Transaction : '||in_customer_billing_acc_id
              );

         end if;


         --
         -- Get the parent entity id of billing account Object
         --

         v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_customer_billing_acc_id,
                                            gbv_BillingAccountParent
                                       );

         v_credit_billing_account := in_customer_billing_acc_id;
         if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log
              (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '...... Parent entity of billing account '||in_customer_billing_acc_id||
                   ' - '||v_billaccount_parent_id||
                   'v_credit_billing_account: ' || v_credit_billing_account
              );

         end if;
     end if;
     --
     -- Call the FIChange creation procedure with the input parameters identified hitherto
     --

     -- need to create Billingaccounttransactionset under the old billing account

     v_billing_acc_trx_description := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_credit_billing_account, 211882);

     if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
        and
        in_prior_billing_method_id is not null -- so change billing method

     then
          --
          -- Create BillingAccountTransactionSet corresponding to this PolicyTransaction
          --
          v_billing_acc_trx_description := v_billing_acc_trx_description || ' - ' || 'Change Billing Method - Credit';

          pkg_os_object.sp_object_create
            (
                  in_session_id,
                  in_transaction_id,
                  gObjType_BillingAccountTrxSet,
                  v_credit_billing_account,
                  v_billing_acc_trx_set_id
             );

             if v_session_control.gLogging_Full
             then

                  pkg_os_logging.sp_log
                  (
                   in_session_id,
                   in_transaction_id,
                   v_procedure_name,
                   '... Created BillingAccountTransactionSet Object ID for change billing method: '||v_billing_acc_trx_set_id
                  );

             end if;

         v_entry_method      :=        gBatchEntryMethod_System;

         v_date_posted       :=        to_char( NVL(in_current_date_time, pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829

         v_external_batch_id :=        'Batch'||to_char( NVL(in_current_date_time,pkg_os_time.fn_os_sysdate( in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault );  --OSBILLING-7829

         v_processing_date   :=        to_char(NVL(in_current_date_time, pkg_os_time.fn_os_sysdate(in_session_id, in_transaction_id, v_billing_acc_trx_set_id)), pkg_os_constant.DragonDateFormatDefault);  --OSBILLING-7829



         v_bv_table.delete;

         v_bv_table ( gbv_FITrxSetEnteredby                        ).business_variable_value     := pkg_os_object_io.fn_object_bv_path_get(in_session_id ,in_transaction_id ,in_session_id ,'210086.211882');
         v_bv_table ( gbv_FITrxSetEntryType                        ).business_variable_value     :=   v_entry_method;
         v_bv_table ( gbv_FITrxSetDatePosted                       ).business_variable_value     :=   v_date_posted;
         v_bv_table ( gbv_FITrxSetExternalBatchId                  ).business_variable_value     :=   v_external_batch_id;
         v_bv_table ( gbv_BillAccTrxSet_ProcessDate                ).business_variable_value     :=   v_processing_date;
         v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState     ).business_variable_value     :=   gBatchStatus_Processed;
         --
         -- Persist Billing Account Total Balance
         --
         v_bv_table(pkg_db_object.gbv_FITrxSet_BATotalBalance      ).business_variable_value := pkg_os_object_io.fn_object_bv_get
                                                                                                (
                                                                                                     in_session_id,
                                                                                                     in_transaction_id,
                                                                                                     v_credit_billing_account,
                                                                                                     pkg_db_object.gbv_BillAcc_TotalBalance
                                                                                                );
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               v_bv_table
          );
          --
          -- Fetch and set the Accounting Period
          --
          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              v_billing_acc_trx_set_id,
              pkg_db_object.gbv_FITrxSet_AccntingPeriod,
              pkg_db_functions.fn_get_fitransset_acct_prd(in_session_id,in_transaction_id,v_billing_acc_trx_set_id)

          );

          -- Set the reference from BillingAccountTransactionSet to Policy Transaction via "Associated Policy Transaction" BV (32502146)
          --
           pkg_os_object_io.sp_object_bv_set
             (
                  in_session_id,
                  in_transaction_id,
                  v_billing_acc_trx_set_id,
                  32502146,
                  in_policy_transaction_id
             );


          -- Set the set type
          pkg_os_object_io.sp_object_bv_set
          (
             in_session_id,
             in_transaction_id,
             v_billing_acc_trx_set_id,
             gbv_FITrxSetBatchType,
             in_policy_transaction_type
          );

              --
              --  Created by batch
              --  since this is the second BATS we refer back to the 1st, the policy transaction refers to the 1st.

              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   v_billing_acc_trx_set_id,
                   pkg_db_object.gbv_FITrxSet_CreatedbyBatch, -- 31756346
                   in_billing_acc_trx_set_id
              );

              --
              --  Created the batch
              --  the first batch refers to the second batch, that it has created

              pkg_os_object_io.sp_object_bv_set
              (
                   in_session_id,
                   in_transaction_id,
                   in_billing_acc_trx_set_id,
                   pkg_db_object.gbv_FITrxSet_RefCreatedBatch, -- 31756446
                   v_billing_acc_trx_set_id
              );

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_billing_acc_trx_set_id,
               gbv_BillAccTrxSet_Description,
               v_billing_acc_trx_description
          );
          --update the datamart with new billing account transaction set
               -- OSPRODUCT-7817
               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    in_billing_acc_trx_set_id,
                    v_datamart_tf
               );
               */
         


              if v_session_control.gLogging_Full
              then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '...... Create change billing method FITransaction Object for Debit Generation'
                        || ' for new BATS: ' || v_billing_acc_trx_set_id
                   );

              end if;

              --
              -- Create and setting values of FITransaction Object under PolicyTransaction for Debits Generation
              --

              pkg_db_object.sp_fitransaction_create
              (
                   in_session_id                   =>  in_session_id,
                   in_transaction_id               =>  in_transaction_id,
                   in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
                   out_fitransaction_id            =>  v_fi_trx_debit_id,
                   in_fitrx_type                   =>  gFITrxType_Dr_Generate,
                   in_fitrx_ref_associatedpolicy   =>  in_master_policy_id,
                   in_fitrx_ref_associatedpoltrx   =>  in_policy_transaction_id,
                   in_fitrx_ref_actionpolicy       =>  in_master_policy_id,
                   in_fitrx_ref_actionpoltrx       =>  in_policy_transaction_id,
                   in_fitrx_effective_date         =>  in_policy_trx_effective_date

               );



              if v_session_control.gLogging_Full
              then

                 pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '......... Created reference from FItransaction Object: '||v_fi_trx_debit_id||
                      ' to Policy Object ID:'||in_master_policy_id||
                      ' and to Policy Transaction Object: '||in_policy_transaction_id
                 );

              end if;

              if v_session_control.gLogging_Full
              then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '...... Create FITransaction Object for Credit Generation'
                   );

              end if;

              --
              -- Create and set values of FITransaction Object under PolicyTransaction for Credit Generation
              --

              pkg_db_object.sp_fitransaction_create
              (
                   in_session_id                   =>  in_session_id,
                   in_transaction_id               =>  in_transaction_id,
                   in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
                   out_fitransaction_id            =>  v_fi_trx_credit_id,
                   in_fitrx_type                   =>  gFITrxType_Cr_Generate,
                   in_fitrx_ref_associatedpolicy   =>  in_master_policy_id,
                   in_fitrx_ref_associatedpoltrx   =>  in_policy_transaction_id,
                   in_fitrx_ref_actionpolicy       =>  in_master_policy_id,
                   in_fitrx_ref_actionpoltrx       =>  in_policy_transaction_id,
                   in_fitrx_effective_date         =>  in_policy_trx_effective_date

               );



          -- Set the fitem reference to the fitransaction
          pkg_os_object_io.sp_object_bv_set
          (
             in_session_id,
             in_transaction_id,
             v_fitem_id,
             gbv_FItem_RefAssWithFItrx,
             v_fi_trx_credit_id
          );


               if v_session_control.gLogging_Full
               then

                   pkg_os_logging.sp_log
                   (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '......... Created reference from FItransaction Object change billing method '||v_fi_trx_credit_id||
                                   ' to Policy Object '||in_master_policy_id||
                        ' and to Policy Transaction Object '||in_policy_transaction_id
                   );

               end if;

               if v_fi_trx_credit_id is not null
               then

                    v_bv_table ( gbv_BillAccTrxSet_CurrTrx).business_variable_value     :=   v_fi_trx_credit_id;

               else

                    v_bv_table ( gbv_BillAccTrxSet_CurrTrx).business_variable_value     :=   v_fi_trx_debit_id;

               end if;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Setting BV Values for BillingAccountTransactionSet Object ID: '||v_billing_acc_trx_set_id||
                         ', Credit FITransaction: '||v_fi_trx_credit_id||
                         ', Debit FITransaction: '||v_fi_trx_debit_id
                    );

               end if;

               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_acc_trx_set_id,
                    v_bv_table
               );

               --
               -- update the datamart with new billing account transaction set
               --

                pkg_os_datamart.sp_datamart_update_row
                (
                     in_session_id,
                     in_transaction_id,
                     v_billing_acc_trx_set_id,
                     v_datamart_tf
                );

         end if; -- end of v_create_debit_trx check

-- OSBILLING-767 Updating datamart of FIchange is part of sp_fichange_create


     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_fitem_id,
          v_datamart_tf
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Updated the Datamart of FIChange and FItem Objects'
          );

     end if;

     --VAULTDEV-6645
          if in_earlier_payment_plan_id is null
             then
           if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
               and
               in_prior_billing_method_id is not null -- so change billing method
               and
               in_chosen_pay_plan_id = in_mod_pay_plan_id
        then

          v_basisimage_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        21912302
                                   );

          v_earlier_payment_plan   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_basisimage_id,
                                             212021
                                        );

     elsif
           --
           -- OSBILLING-4516
           -- This is to provide the input parameter to reverse the billing impect for the earlier transaction in case of the CPP.
           --
               in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement   --OSBILLING-4516
           and
               in_prior_billing_method_id is null -- so change billing method
           and
               in_chosen_pay_plan_id <> in_mod_pay_plan_id
           and
               v_policy_transaction_sub_type in (gTrxSubType_changepayplan)  --  OSBILLING-4765
     then

          v_basisimage_id     :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_transaction_id,
                                        21912302
                                   );

          v_earlier_payment_plan   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_basisimage_id,
                                             212021
                                        );

                   end if;

              else
                    v_earlier_payment_plan := in_earlier_payment_plan_id;
              end if;

           if v_session_control.gLogging_Full
           then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... sp_create_reversal_offsets: '
               ||v_fi_trx_debit_id || ' - ' || v_fi_trx_credit_id
          );

          end if;
          --OSPRODUCT-12737 start
          -- Set the old chosen payment plan instalments 

          --Start Kiran changes OSPRODUCT-31717
         if v_session_control.gLogging_Full
           then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Kiran changes for Invoice: '
               ||v_earlier_payment_plan || ' ' ||in_earlier_payment_plan_id || ' ' ||v_basisimage_id
          );

          end if; 
         if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
               and v_policy_transaction_sub_type = gTrxSubType_changeBilltype
            then   
              sp_curr_payplan_instalmnt_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_earlier_payment_plan,
                    gInstalmnt_CrntPayPlan_False
               );
         else
         --End Kiran changes OSPRODUCT-31717   

          sp_curr_payplan_instalmnt_set
          (
               in_session_id,
               in_transaction_id,
               in_chosen_pay_plan_id,
               gInstalmnt_CrntPayPlan_False
          );

          --Start Kiran changes OSPRODUCT-31717
          end if; 
          --End Kiran changes OSPRODUCT-31717
          --OSPRODUCT-12737 end
  -- added 2016-03-21 Cheryl pmadev-648

       if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
         and in_prior_billing_method_id is not null -- so change billing method
       then
            sp_create_reversal_offsets
          (
               in_session_id                      =>             in_session_id,
               in_transaction_id                  =>             in_transaction_id,
               in_ptp_id                          =>             in_ptp_id,
               in_policy_transaction_id           =>             in_policy_transaction_id,
               in_product_id                      =>             in_product_id,
               in_filing_id                       =>             in_filing_id,
               in_policy_billing_method           =>             in_policy_billing_method,
               in_ultimate_customer_id            =>             in_ultimate_customer_id,
               in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
               in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
               in_billing_acc_trx_set_id          =>             v_billing_acc_trx_set_id,
               in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
               in_master_policy_id                =>             in_master_policy_id,
               in_policy_term_id                  =>             in_policy_term_id,
               in_policy_transaction_type         =>             in_policy_transaction_type,
               in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
               in_earlier_pay_plan_id             =>             v_earlier_payment_plan,
               in_fi_trx_debit_id                 =>             v_fi_trx_debit_id,--in_fi_trx_debit_id,
               in_fi_trx_credit_id                =>             v_fi_trx_credit_id,--in_fi_trx_credit_id,
               in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
               io_action_outcome_id               =>             io_action_outcome_id,
               in_prior_billing_method_id         =>             in_prior_billing_method_id,
               in_current_date_time               =>             in_current_date_time,
               in_delete_payer_tf                 =>             in_delete_payer_tf --VAULTDEV-6645
               );
               
               -- Starts UTPRODUCT-4330
               ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
               --
               -- Set the Debit and Credit FITransaction Status to Processed
               --
               ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
               if v_fi_trx_debit_id is not null then     
                    
                    v_bv_table.delete;

                    v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value    := gFITrxStatus_Processed;
                    v_bv_table ( gbv_FITrxProcessDate).business_variable_value                        := v_current_date;
                    v_bv_table ( pkg_db_object.gbv_FITrx_AccntingPeriod ).business_variable_value     := pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_fi_trx_debit_id);

                    pkg_os_object_io.sp_object_bv_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_fi_trx_debit_id,
                        v_bv_table
                    );
                    
                    -- Update the Debit FITransaction Datamart
                    pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_fi_trx_debit_id,v_datamart_tf);
                         
               end if;


              if v_fi_trx_credit_id is not null then
               
                    v_bv_table.delete;

                    v_bv_table ( pkg_os_constant_bv.gbv_GenObjObjectState).business_variable_value  :=  gFITrxStatus_Processed;
                    v_bv_table ( gbv_FITrxProcessDate).business_variable_value                      :=  v_current_date;
                    v_bv_table ( pkg_db_object.gbv_FITrx_AccntingPeriod ).business_variable_value   :=  pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_fi_trx_credit_id);

                    pkg_os_object_io.sp_object_bv_set
                    (
                        in_session_id,
                        in_transaction_id,
                        v_fi_trx_credit_id,
                        v_bv_table
                    );
                    
                    -- Update the Debit FITransaction Datamart
                    pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_fi_trx_credit_id,v_datamart_tf);
        
               end if;
              -- Ends UTPRODUCT-4330

          -- Moved this to sp_financial_trx_create

/*          pkg_os_object_io.sp_object_bv_set
          (
              in_session_id,
              in_transaction_id,
              in_policy_term_id,
              gbv_PolicyTermBillingMethod,
              in_policy_billing_method
          );   */

          --
          --  Set the Bill Method Change Flag to Yes
          --

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_policy_term_id,
               gbv_BillMethodChangeFlag,
               pkg_os_constant.gBoolean_Yes
          );

         else
               --OSPRODUCT-12737
               v_billing_acc_trx_set_id := pkg_os_object_io.fn_object_bv_get(in_session_id ,in_transaction_id,in_policy_transaction_id,gbv_PolTrxRefBillingAccTrxSet);
         --
         --  Change Payment Plan
         --
     
               --
               --  Check whether user is requesting a change payment plan from start of term
               --
               
               if pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id , in_ptp_id , pkg_dB_payplan_modify.gbv_ptp_cpp_term_start_ind) is null
               then
                    -- For Point in time change payment plan

                    sp_create_reversal_offsets
                    (
                         in_session_id                      =>             in_session_id,
                         in_transaction_id                  =>             in_transaction_id,
                         in_ptp_id                          =>             in_ptp_id,
                         in_policy_transaction_id           =>             in_policy_transaction_id,
                         in_product_id                      =>             in_product_id,
                         in_filing_id                       =>             in_filing_id,
                         in_policy_billing_method           =>             in_policy_billing_method,
                         in_ultimate_customer_id            =>             in_ultimate_customer_id,
                         in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                         in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                         in_billing_acc_trx_set_id          =>             v_billing_acc_trx_set_id,
                         in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                         in_master_policy_id                =>             in_master_policy_id,
                         in_policy_term_id                  =>             in_policy_term_id,
                         in_policy_transaction_type         =>             in_policy_transaction_type,
                         in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                         in_earlier_pay_plan_id             =>             v_earlier_payment_plan,
                         in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                         in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                         in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                         io_action_outcome_id               =>             io_action_outcome_id,
                         in_prior_billing_method_id         =>             in_prior_billing_method_id,
                         in_current_date_time               =>             in_current_date_time,
                         in_delete_payer_tf                 =>             in_delete_payer_tf, --VAULTDEV-6645
                         in_payer_billing_acc_id            =>             in_payer_billing_acc_id -- OSPRODUCT-34206_2						 

                    );

               else
               
                    sp_cpp_termstrt_createoffset
                    (
                         in_session_id                      =>             in_session_id,
                         in_transaction_id                  =>             in_transaction_id,
                         in_ptp_id                          =>             in_ptp_id,
                         in_policy_transaction_id           =>             in_policy_transaction_id,
                         in_product_id                      =>             in_product_id,
                         in_filing_id                       =>             in_filing_id,
                         in_policy_billing_method           =>             in_policy_billing_method,
                         in_ultimate_customer_id            =>             in_ultimate_customer_id,
                         in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                         in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                         in_billing_acc_trx_set_id          =>             v_billing_acc_trx_set_id,
                         in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                         in_master_policy_id                =>             in_master_policy_id,
                         in_policy_term_id                  =>             in_policy_term_id,
                         in_policy_transaction_type         =>             in_policy_transaction_type,
                         in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                         in_earlier_pay_plan_id             =>             v_earlier_payment_plan,
                         in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                         in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                         in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                         io_action_outcome_id               =>             io_action_outcome_id,
                         in_prior_billing_method_id         =>             in_prior_billing_method_id,
                         in_current_date_time               =>             in_current_date_time,
                         in_delete_payer_tf                 =>             in_delete_payer_tf --VAULTDEV-6645

                    );
                    
                    --OSPRODUCT-12737 start
                    if in_policy_billing_method = gBillingMethod_Direct then
                    v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.first;

                    while v_mod_scheduled_payment_index is not null loop

                         if v_session_control.gLogging_Full then     
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'Looping Scheduled Payment: ' || v_mod_scheduled_payment_list(v_mod_scheduled_payment_index)
                              );

                         end if;
                         v_payment_schedule_balance := pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                               gbv_InstallmentBalanceAmount
                                                          );

                         v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                         gbv_ScheduledRefInstallment
                                                    );
                         if v_session_control.gLogging_Full then     
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   'Scheduled Payment Balance: ' || v_payment_schedule_balance ||
                                   ' Related Installment: ' || v_installment_object_id
                              );

                         end if;
                         if v_installment_object_id is not null then
                              Select 
                                   dsi.balance_amount
                              into
                                   v_installment_balance
                              from
                                   dragon_scheduled_installment dsi 
                              where 
                                   dsi.installment_id = v_installment_object_id;
                         end if;
                                             
                         if v_payment_schedule_balance <> nvl(v_installment_balance,0) then
                              --UTXPRODUCT-315
                              pkg_os_logging.sp_log_error
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        ' Scheduled Payment: '|| v_mod_scheduled_payment_list(v_mod_scheduled_payment_index)
                                        ||' Installment id: ' || v_installment_object_id
                                        ||' Scheduled Payment Balance(pre processing): ' || v_payment_schedule_balance
                                        ||' Installment Balance ( post processing): ' || v_installment_balance
                                   );


                              v_schedule_not_balanced := 1;
                              

                         else
                               if v_session_control.gLogging_Full then     
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        'Balances are matching before and after change payment plan'
                                        || ' Scheduled Payment Balance: ' || v_payment_schedule_balance ||
                                        ' Installment Balance: ' || v_installment_balance
                                   );

                              end if;
                         end if;

                         v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.next(v_mod_scheduled_payment_index);
                    end loop;
                    --UTXPRODUCT-315 start
                    if  v_schedule_not_balanced = 1 then
                         raise Schedule_not_balanced;
                    end if;
                  end if;  
                    --UTXPRODUCT-315 end
               end if;
          v_def_premium_stub_count := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_chosen_pay_plan_id, pkg_db_payplan_modify.gbv_PayPlan_DefStubsCount );

          pkg_os_object_io.sp_object_bv_set( in_session_id, in_transaction_id, in_mod_pay_plan_id, pkg_db_payplan_modify.gbv_PayPlan_DefStubsCount, v_def_premium_stub_count );

        end if;

     ------------------------ end of paymentplan change credit -------------------------
     --OSPRODUCT-12737
     else

          -- Set the old chosen payment plan instalments 
          sp_curr_payplan_instalmnt_set
          (
               in_session_id,
               in_transaction_id,
               in_chosen_pay_plan_id,
               gInstalmnt_CrntPayPlan_False
          );
      end if;
     -- End VAULTDEV-6645


     --
     -- Set Modified Payment Plan as Reference Chosen Payment Plan
     --

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_ptp_id,
          gbv_PolicyRefChosenPlan,
          in_mod_pay_plan_id
     );

     ------------------------- Merged from GCNA Added GCNA-2211 17022017 -------------------------

     pkg_os_object_io.sp_object_bv_set
     (
          in_session_id,
          in_transaction_id,
          in_policy_term_id,
          gbv_PolicyTermPayPlan,
          in_mod_pay_plan_id
     );
     
     --OSPRODUCT-9161
     if v_associated_payer is not null then
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_associated_payer,
               pkg_db_multipayer.gbv_PTPPayer_Ref_ChosenPayPlan,
               in_mod_pay_plan_id
          );
     
     end if;
     --OSPRODUCT-9161
     
     pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_policy_term_id, v_datamart_tf);

    --2017-04-11 Cheryl osbilling-3933
    --
    -- Set Payment Plan as Reference Chosen Payment Plan on policy
    -- if this is the current term

    v_current_term := pkg_os_object_io.fn_object_bv_get
                  (
                    in_session_id,
                    in_transaction_id,
                    in_master_policy_id,
                    gbv_CurrentTermFromRolledDate );


     if v_current_term = in_policy_term_id
     then

          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               in_master_policy_id,
               gbv_PolicyRefChosenPlan,
               in_mod_pay_plan_id
          );

      --    pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_master_policy_id, v_datamart_tf);
     end if;

     ------------------------- Added GCNA-2211 -------------------------

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

     exception
     when no_data_found then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '|||Exception while processing : Policy TRX ID' || in_ptp_id || ' - ' ||
               sqlcode || ' : ' || SYS.DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || ' Stack:'||dbms_utility.format_error_stack
          );

     raise;
     when Schedule_not_balanced then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Balances are not matching before and after change payment plan transaction' 
          );

          raise;    
end sp_change_payplan_process;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        
--
--   %USAGE
--          This procedure is for Billing Account Installment Creation for Single and Multi-Payer Policy
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_action_object_id           Policy Image ID
--   %PARAM    io_action_outcome_id          Action Outcome Id
--   %PARAM    in_billingaccount_type_id     Customer
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_billaccinstallment_create
(
     in_session_id                       in             object.object_id%type,
     in_transaction_id                   in             object.object_id%type,
     in_action_object_id                 in             object.object_id%type, --Policy image or Policy Transaction
     io_action_outcome_id                in out nocopy  outcome.outcome_id%type,
     in_billingaccount_type_id           in             number default 201 -- Customer
)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_billaccinstallment_create';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_payment_profile                  object.object_id%type;
     v_cash_profile                     object.object_id%type;
     v_bill_acc_inst_id                 object.object_id%type;
     v_bill_acc_inst_comp_id            object.object_id%type;
     v_poltrx_eff_date                  object_bv_value.business_variable_value%type;
     v_pymntsch_withdrawal_date         date;
     v_installment_id                   object.object_id%type;
     v_term_pymntsch_list               pkg_os_object.t_object_list;
     v_term_pymntsch_index              number;
     v_billaccinst_index                number;
     v_payment_mode                     object_bv_value.business_variable_value%type;
     v_cash_pay_details                 object_bv_value.business_variable_value%type;
     v_cust_name                        object_bv_value.business_variable_value%type;
     v_label_name                       object_bv_value.business_variable_value%type;
     v_action_object_type               object_bv_value.business_variable_value%type;-- := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_action_object_id,210149); --get action object type
     v_payment_mode_id                  object_bv_value.business_variable_value%type;
     v_bill_payment_mode_id             object_bv_value.business_variable_value%type;
     v_bill_payment_profile             object.object_id%type;
     v_bill_cash_profile                object.object_id%type;
     v_payment_arrangement_id           object.object_id%type;
     v_bill_pay_arrangement             object.object_id%type;
     v_bill_cash_pay_details            object_bv_value.business_variable_value%type;
     v_bill_inst_fits                   char := 'F';
     v_comp_found_tf                    char;
     v_bv_table                         pkg_os_object_io.t_bv_table;

     v_pmnt_arngmnt_enable_tf           char := pkg_os_system_attribute.fn_get_system_attribute_value('Enable Payment Arrangement Workflow');

     v_datamart_tf   char(1) := 'T';
     v_billing_account_type_id          number;
     -- OSBILLING-4960
     v_PolicyMultiPayerEnabled          boolean;
     v_idx                              long; -- index for g_payer_list
     v_ptp_id                           object.object_id%type;
     v_term_payer                       object.object_id%type;
     v_term_payer_entity                object.object_id%type;
     --OSPRODUCT-834 starts
     v_multipayer_enabled_tf            char;
     v_ptp_payer_id                     object.object_id%type;
     v_associated_term_payer            object.object_id%type;
     v_asso_term_sched_intl_list        object_tt := new object_tt();
     v_index                            number;
     v_associated_term_schedule_id      object.object_id%type;
     v_action_object_id                 object.object_id%type;
     v_payer_list                       pkg_db_multipayer.t_payer_tab;
     v_action_object_type_id            object_type.object_type_id%type;
     v_no_payer_inst_found_tf           char := 'F';  --OSPRODUCT-20551
      
     --OSPRODUCT-834 ends

     cursor c_ba_instalment ( in_withdrawal_date date, in_billing_account_id object.object_id%type)
     is
     select
            *
     from
            dragon_ba_instalment db
     where
            db.billing_account_id = in_billing_account_id
     and
            trunc(db.withdrawal_date) = trunc(in_withdrawal_date); --VAULTDEV--10772 Core Upgrade Merge

     cursor c_ba_instalment_comp
            (
               in_instalment_id object.object_id%type,
               in_billing_account_id object.object_id%type,
               in_ba_instalment_id   object.object_id%type
            )
     is
     select
            *
     from
            dragon_ba_instalment_component bac
     where
            bac.billing_account_id         = in_billing_account_id
     and
            ( in_ba_instalment_id is null or bac.ba_instalment_id           = in_ba_instalment_id)
     and
           ( in_instalment_id is null or  bac.dragon_instalment_id = in_instalment_id);

     cursor c_ba_instal_delete (in_billing_account_id object.object_id%type)
     is
            select bi.ba_instalment_id from dragon_ba_instalment bi where billing_account_id = in_billing_account_Id
            minus
            select dbc.ba_instalment_id from Dragon_Ba_Instalment_Component dbc where dbc.billing_account_id = in_billing_account_Id;

     cursor c_term_installment (in_payer_id object.object_id%type)
     is
            select 
                term_inst.installment_id,
                term_inst.withdrawal_date 
            from
                 dragon_scheduled_installment term_inst
            where
                 term_inst.policy_term_id = v_policy_term_id
              and
                 (
                      in_payer_id is null
                      or
                      term_inst.payer_id = in_payer_id
                 );
begin
     
     v_action_object_type_id := pkg_os_object.fn_object_type_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id
                                );
     --
     -- Find the Policy Transaction object id
     --
     if ( v_action_object_type = pkg_os_constant.gobjType_PolicyTransaction)-- 629 ) --if action object is Policy Transaction
     then

          v_poltxn_id := in_action_object_id;

     else

          v_poltxn_id := pkg_os_object_search.fn_object_get_parent_of_type( in_session_id, in_transaction_id, in_action_object_id, pkg_os_constant.gobjtype_policytransaction );

     end if;
     begin
          select
               pt.ptp_id,
               pt.policy_term_id
          into
               v_ptp_id,
               v_policy_term_id          
          from          
               dragon_policy_trx pt
          where
               pt.policy_trx_id = v_poltxn_id;
               
     end;
    
     v_multipayer_enabled_tf := pkg_os_object_io.fn_object_bv_get
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     pkg_db_multipayer.gbv_MultiPayerEnabled_PTP
                                );
                                    
     if v_session_control.gLogging_Full then          

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Transaction Id:   '||v_poltxn_id||
               'Policy Transaction Policy: ' ||v_ptp_id||
               'Policy Term : '              ||v_policy_term_id
          );

     end if;
     --OSPRODUCT-834 ends
     
                                
     v_payer_list.delete;
                                
     if v_action_object_type_id = pkg_db_payment_arrangement.gObjType_PTPPayer then
          
          v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                  (
                                       in_session_id,
                                       in_transaction_id,
                                       pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            in_action_object_id,
                                            pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                       ),
                                       pkg_db_multipayer.gObjType_BillingAccount
                                  );

          v_payer_list(v_billing_account_id).ptpayer_object_id := in_action_object_id;

          v_payer_list(v_billing_account_id).PayerEntity_object_id := pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           in_action_object_id,
                                                                           pkg_db_multipayer.gbv_PTPPayer_Ref_CustmrPartnr
                                                                      );

          v_payer_list(v_billing_account_id).payerbillingaccount_id := pkg_os_object_search.fn_object_11_child_get
                                                                       (
                                                                            in_session_id,
                                                                            in_transaction_id,
                                                                            v_payer_list(v_billing_account_id).PayerEntity_object_id,
                                                                            pkg_db_multipayer.gObjType_BillingAccount
                                                                       );
                                                                           
     else
                              
          pkg_db_multipayer.sp_ptp_payers_get
          (
               in_session_id         => in_session_id,
               in_transaction_id     => in_transaction_id,
               in_ptp_object_id      => v_ptp_id,
               io_payer_list         => v_payer_list,           -- indexed by chosen pay plan ID
               in_print_list         => 'Y'
          );
     
     end if;
      
     v_idx := v_payer_list.first;

     while v_idx is not null
     loop
          
          -- get the entity object id
          -- OSPRODUCT-834 starts
          v_action_object_id := v_payer_list(v_idx).ptpayer_object_id;
          
          --OSPRODUCT-834 starts
          v_billing_account_id := v_payer_list(v_idx).PayerBillingAccount_id;
                                                                                                                                                                                                
          
          --v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_billing_account_id,gbv_BillingAccountType); -- BA type
          begin
               
               select
                    ba.account_type_id,
                    ba.partner_name
               into
                    v_billing_account_type_id,
                    v_cust_name
               from
                    dragon_billingaccount ba
               where
                    ba.billingaccount_id =  v_billing_account_id;
                    
          exception
               when others then
                    null;                   
                   
          end;
          
          -- UTPRODUCT-3822
          v_billing_account_type_id := pkg_os_object_io.fn_object_bv_get
                                   (
                                       in_session_id,
                                       in_transaction_id,
                                       v_billing_account_id,
                                       pkg_db_billing_modify.gbv_BillingAccountType
                                   ); -- BA type
          
          if v_session_control.gLogging_Full then          

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Entering for the Billing Account ID:' ||v_billing_account_id||
                    ' Action Object ID: '                      ||v_action_object_id||
                    ' Billing Account Type : '||v_billing_account_type_id
               );

          end if;

          if v_billing_account_id is not null and v_billing_account_type_id = in_billingaccount_type_id
          then

              -- Fetch the required details
               --OSPRODUCT-834 starts
               --
               -- Get the children of type TermPlanScheduledInstallment of the Policy Term in question
               --
               -- v_term_pymntsch_list.delete;
               -- OSPRODUCT-4319
               if v_multipayer_enabled_tf = pkg_db_multipayer.genum_Yes then --g_payer_list(v_idx).payer_type = pkg_db_payment_arrangement.gObjType_PTPPayer then-- if object type is payer
                                 
                    v_associated_term_payer := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_action_object_id, gbv_PTPayerAssociatedTerm);  --Policy term associated payer
                    v_payment_profile       := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_associated_term_payer, gbv_PTPayerPaymentProfile); ----payment profile reference
                    v_payment_arrangement_id:= pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_associated_term_payer, pkg_db_payment_arrangement.gbv_Ref_TermPayerPrefBillPlan);--Bill plan Payer                                     
                                        
               else
                    
                    v_associated_term_payer  := null;
                    v_payment_arrangement_id := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_term_id, pkg_db_payment_arrangement.gbv_Ref_TermCurrentPmntArngmnt);   ----Bill plan PTP                    
                    v_payment_profile        := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_policy_term_id, 32251146); ----payment profile reference
                                                          
               end if;
               
               v_cash_profile                := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_payment_profile, 30013046 ); -- reference to cashtransfer profile
               v_payment_mode_id             := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_cash_profile, 30010546 ); --get payment mode id
               v_payment_mode                := pkg_os_lookup.fn_lookup_list_text_get( 5390346 , v_payment_mode_id ); --get mode name
               -- end OSPRODUCT-4319
               
               v_cash_pay_details            := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_cash_profile, 32375746 );
                              
               -- v_cash_pay_details       := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_cash_profile, 32375746 );
               -- v_cash_pay_details       := substr(v_cash_pay_details, 5, length(v_cash_pay_details));
               -- OSBILLING - 7279 start
               if(v_payment_mode_id = 1) or (v_payment_mode_id= 2)--Bill Me  --OSBILLING-7706(added v_payment_mode_id=2 )
               then
                    v_cash_pay_details := '';
               else
                    v_cash_pay_details := substr(v_cash_pay_details, 5, length(v_cash_pay_details));
               end if;
               --OSBILLING -7279 end
               
               -- v_cust_name := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id,v_billing_account_id, '29704546.211882');
                              
               if v_session_control.gLogging_Full
               then
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... The required cash trasnfer profile details are retrieved for the billing account id : '||v_billing_account_id||
                         ' Prefered cash/transfer profile: ' || v_cash_profile ||
                         ' Payment Mode: '                   || v_payment_mode ||
                         ' Customer Name: '                  || v_cust_name    ||
                         ' Cash Pay Details: '               || v_cash_pay_details ||
                         ' Associated Payment Arrangement: ' || v_payment_arrangement_id||
                         ' payment Profile : '               || v_payment_profile ||
                         ' Associated_Term Payer ID '        || v_associated_term_payer -- OSPRODUCT-20551
                    );
               end if;


               for term_installment in c_term_installment (v_associated_term_payer) loop
                    --get Withdrawal Date of PolicyTermScheduledPaymentInstallment
                    
                    v_no_payer_inst_found_tf   := 'T';  -- OSPRODUCT-20551
                    
                    v_pymntsch_withdrawal_date := term_installment.withdrawal_date;
                    v_installment_id           := term_installment.installment_id;


                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Looping Policy Term Scheduled Inst ID: '
                              ||v_installment_id||
                              ' BillingAccountInstallmentComponent ID: '
                              ||v_bill_acc_inst_comp_id||
                              ' Withdrawal Date : '
                              ||v_pymntsch_withdrawal_date|| ':'||to_char (v_pymntsch_withdrawal_date,'DDMMYYYY') ||':'||
                              'v_billing_account_id'||
                              v_billing_account_id
                         );

                    end if;

                    v_label_name := '';
                    v_label_name := v_payment_mode || v_cash_pay_details || ', ' || v_cust_name || ', ' || v_pymntsch_withdrawal_date || ', $';

                    v_bill_acc_inst_id      := 0;
                    v_bill_acc_inst_comp_id := 0;

                    --
                    -- Loop through the  billing account installment objects for this Withdrawal date to identify if it can fit or clubbed with any existing request
                    --
                    for v_billaccinst_index in c_ba_instalment(v_pymntsch_withdrawal_date, v_billing_account_id) loop

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '..Entered installment loop'|| v_pymntsch_withdrawal_date ||',' ||v_billing_account_id
                              );

                         end if;

                         v_comp_found_tf := 'F';

                         v_bill_payment_profile  := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_billaccinst_index.ba_instalment_id, gbv_billaccinstpayprofile );
                         v_bill_cash_profile     := v_billaccinst_index.profile_id;
                         v_bill_payment_mode_id  := v_billaccinst_index.profile_mode_id;
                         v_bill_cash_pay_details := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_bill_cash_profile, 32375746 );
                         v_bill_cash_pay_details := substr(v_bill_cash_pay_details, 4, length(v_bill_cash_pay_details));
                         v_bill_pay_arrangement  := v_billaccinst_index.payment_arrangement_id;

                         v_bill_inst_fits  := 'F';

                         case
                              when v_payment_mode_id = paymentmode_EFT then -- 3 EFT

                                   begin

                                        if (
                                                v_cash_pay_details = v_bill_cash_pay_details
                                                and
                                                v_payment_mode_id = v_bill_payment_mode_id
                                                and
                                                -- 30011946 Account number
                                           pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTAccNumber ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTAccNumber ) -- Account number
                                                and
                                                (
                                                  (
                                                       -- 32377346 Country ID
                                                  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTCountryID ) = 1
                                                       and
                                                       -- 30011346 Routing number
                                                  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTRoutingNum ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile,pkg_db_payment_arrangement.gbv_CTFEFTRoutingNum )
                                                  )
                                                  or
                                                  (
                                                       -- 32377346 Country ID
                                                  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTCountryID  ) != 1
                                                       and
                                                  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile,pkg_db_payment_arrangement.gbv_CTFEFTBankID ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTBankID ) --bank ID
                                                       and
                                                  pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile,pkg_db_payment_arrangement.gbv_CTFEFTBankTransitNum ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFEFTBankTransitNum ) --bank transit Number

                                                  )
                                                )
                                                and
                                                (
                                                  v_pmnt_arngmnt_enable_tf = 'F'
                                                  or
                                                  (
                                                       v_payment_arrangement_id is not null
                                                       and
                                                       v_bill_pay_arrangement is not null
                                                       and
                                                       v_payment_arrangement_id = v_bill_pay_arrangement
                                                  )
                                                )
                                        )
                                        then

                                             v_bill_inst_fits := 'T';

                                        end if;

                                   end;

                              when v_payment_mode_id = paymentmode_CC then -- 2 CC

                                   begin
                                        if (
                                                v_cash_pay_details = v_bill_cash_pay_details
                                                and
                                                v_payment_mode_id = v_bill_payment_mode_id

                                                and
                                                -- 32835640 Card number
                                           pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardNumber ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardNumber )

                                                and
                                                -- Expiry year
                                           pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardExpYear ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardExpYear )
                                                and
                                                -- Expiry month
                                           pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardExpMonth ) = pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_bill_cash_profile, pkg_db_payment_arrangement.gbv_CTFCardExpMonth )
                                                and
                                                (
                                                  v_pmnt_arngmnt_enable_tf = 'F'
                                                  or
                                                  (
                                                       v_payment_arrangement_id is not null
                                                       and
                                                       v_bill_pay_arrangement is not null
                                                       and
                                                       v_payment_arrangement_id = v_bill_pay_arrangement
                                                  )
                                                )
                                        )
                                        then

                                             v_bill_inst_fits := 'T';

                                        end if;

                                   end;

                              else --Cheque
                                   begin
                                        if v_payment_mode_id = v_bill_payment_mode_id
                                           and
                                           (
                                             v_pmnt_arngmnt_enable_tf = 'F'
                                             or
                                             (
                                                  v_payment_arrangement_id is not null
                                                  and
                                                  v_bill_pay_arrangement is not null
                                                  and
                                                  v_payment_arrangement_id = v_bill_pay_arrangement
                                             )
                                           )
                                        then --if it's cheque payment mode then combining

                                             v_bill_inst_fits := 'T';

                                        end if;

                                   end;

                         end case;

                         if v_bill_inst_fits = 'T' then

                              v_bill_acc_inst_id :=v_billaccinst_index.ba_instalment_id; --we have the same withdrawal date and payment method, so no need to create new object

                              --update label name
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_bill_acc_inst_id,
                                   gbv_BillAccInstLabelName, --BillingAccountInstallemnt label BV id
                                   v_label_name
                              );

                              if v_session_control.gLogging_Full then

                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '... Found Billing Account Installment that fits: ' ||v_bill_acc_inst_id
                                   );

                              end if;

                              exit;

                         end if;

                    end loop; -- Term Instalments

                    --
                    --  Find out if there is already a BillingAccountInstalComponent for this instalment and clean them up
                    --
                    for c_bacomp_index in c_ba_instalment_comp (v_installment_id, v_billing_account_id,null)
                    loop

                         if v_bill_acc_inst_id is not null and c_bacomp_index.ba_instalment_id = v_bill_acc_inst_id
                         then

                              v_bill_acc_inst_comp_id := c_bacomp_index.ba_instalment_id;

                         else

                              --clear reference and variable
                              pkg_os_object_io.sp_object_bv_set
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   c_bacomp_index.ba_instalment_component_id,
                                   gbv_BillAccInstComp_RelInst, --bv id reference Related Installment
                                   null
                              );

                              --delete BillingAccountInstallemntComponent as it's not needed
                              pkg_os_object.sp_object_delete
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   c_bacomp_index.ba_instalment_id,
                                   c_bacomp_index.ba_instalment_component_id,
                                   gObjType_BillAccInstComponent
                              );

                         end if;

                    end loop;

                    --
                    -- If there is no BillingAccountInstalment found for this profile and withdrwal date, create one
                    --
                    if ( nvl( v_bill_acc_inst_id,0 ) = 0 and v_pymntsch_withdrawal_date is not null)
                    then

                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              gObjType_BillAccInst,  --BillingAccountInstallemnt object type,
                              v_billing_account_id,
                              v_bill_acc_inst_id
                         );

                         v_bv_table.delete;
                         v_bv_table ( gbv_BillAccInstWithDate         ).business_variable_value     :=   to_char(v_pymntsch_withdrawal_date,pkg_os_constant.dragondateformatdefault);
                         v_bv_table ( gbv_BillAccInstCashTrProfile    ).business_variable_value     :=   v_cash_profile;
                         v_bv_table ( gbv_billaccinstpayprofile       ).business_variable_value     :=   v_payment_profile;
                         v_bv_table ( gbv_BillAccInstLabelName        ).business_variable_value     :=   v_label_name;

                         if v_pmnt_arngmnt_enable_tf = 'T' then

                              v_bv_table ( gbv_BillAccInstPayArngmnt       ).business_variable_value     :=   v_payment_arrangement_id;

                         end if;

                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_bill_acc_inst_id,
                              v_bv_table
                         );

                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_bill_acc_inst_id, v_datamart_tf);

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Created new Billing Account Installment ID: '
                                   ||v_bill_acc_inst_id
                              );

                         end if;

                    end if;

                    --OSBILLING-4960 derive the term payer and associated entity
                    v_term_payer:=pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_installment_id,32726624);
                    v_term_payer_entity := pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_term_payer,32714824);

                    --
                    -- If there is no BillingAccountInstalmentComponenent found for this profile and withdrwal date, create one
                    --

                    -- OSBILLING-4960 Modified below condition to add check for entity.
                    if  nvl( v_bill_acc_inst_comp_id,0 ) = 0 and ( v_payer_list(v_idx).PayerEntity_object_id = v_term_payer_entity or v_term_payer is null ) then

                         --we don't have BillingAccountInstallemntComponent object, so will create new one
                         pkg_os_object.sp_object_create
                         (
                              in_session_id,
                              in_transaction_id,
                              gObjType_BillAccInstComponent, --BillingAccountInstallemntComponent object type,
                              v_bill_acc_inst_id,
                              v_bill_acc_inst_comp_id
                         );

                         --set reference
                         pkg_os_object_io.sp_object_bv_set
                         (
                              in_session_id,
                              in_transaction_id,
                              v_bill_acc_inst_comp_id,
                              gbv_BillAccInstComp_RelInst, --bv id reference Related Installment
                              v_installment_id
                         );

                         pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,v_bill_acc_inst_comp_id,v_datamart_tf);

                    end if;



               end loop;


               -- OSPRODUCT-20551
               if v_no_payer_inst_found_tf = 'F' 
               and v_associated_term_payer is not null
               then 
                    
                    sp_poltrm_payer_inst_upd
                    (
                         in_session_id,
                         in_transaction_id,
                         v_associated_term_payer,
                         io_action_outcome_id
                    );
               
               end if; 
               -- OSPRODUCT-20551
               
               --
               -- Find if there are any BAInstalment with no BAInstalComponenet, then we dont need them
               --
               for i_ba_insat_id in c_ba_instal_delete(v_billing_account_id)
               loop

                    --delete BillingAccountInstallemnt as it's not needed and move to next element in loop
                    pkg_os_object.sp_object_delete
                    (
                         in_session_id,
                         in_transaction_id,
                         v_billing_account_id,
                         i_ba_insat_id.ba_instalment_id,
                         gObjType_BillAccInst
                    );

               end loop;

          else
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Skipping this step as the billing account is not of type customer   '
                    );

               end if;

          end if;

          --OSBILLING-4960
          --This is to update the existing installment component datamart, for an instance when change payplan happens datamart update is needed.
          for r_bacomp_index in c_ba_instalment_comp (null, v_billing_account_id,null)
          loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '... Entering to update existing components..   '||r_bacomp_index.ba_instalment_component_id||r_bacomp_index.amount
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row(in_session_id,in_transaction_id,r_bacomp_index.ba_instalment_component_id,v_datamart_tf);

          end loop;
          v_idx := v_payer_list.next(v_idx); --#MP

     end loop; --OSBILLING-4960
     --VAULTDEV-10772 Core upgrade merge
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception
  when others then

       pkg_os_logging.sp_log_error
       (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '...... Exception '|| sqlerrm(sqlcode)
       );

end sp_billaccinstallment_create;

-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_billing_update_datamart
(
     in_session_id                       in             object.object_id%type,
     in_transaction_id                   in             object.object_id%type,
     in_action_object_id                 in             object.object_id%type, --Policy image or Policy Transaction
     io_action_outcome_id                in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_billing_update_datamart';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_billing_account_id               object.object_id%type;
     v_poltxn_id                           object.object_id%type;
      v_action_object_type               object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_action_object_id,210149); --get action object type
       v_datamart_tf   char(1) := 'T';

begin

      if ( v_action_object_type = 629 ) --if action object is Policy Transaction
      then
      v_poltxn_id := in_action_object_id;
      else
      v_poltxn_id := pkg_os_object_search.fn_object_get_parent_of_type( in_session_id, in_transaction_id, in_action_object_id, pkg_os_constant.gobjtype_policytransaction );
      end if;

-- get Billing Account
     v_billing_account_id     := pkg_os_object_io.fn_object_bv_path_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_poltxn_id,
                                      '31866546.29713046'
                                 );

  if v_session_control.gLogging_Full
              then

              pkg_os_logging.sp_log
              (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '.. Inside sp_billing_update_datamart Updating Billing Account : '
                      ||v_billing_account_id

              );

              end if;

--update billing account datamart
 pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                                   in_transaction_id,
                                                   v_billing_account_id,
                                                   v_datamart_tf);

--update billing account datamart


io_action_outcome_id := pkg_os_constant.gOutcome_OK;


exception
  when others then
  pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Exception '||
                    sqlerrm(sqlcode)
               );
end sp_billing_update_datamart;

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_create_reversal_offsets
--
--   %USAGE
--          This procedure will determine the offset for the reversals
--          and then create the fitems and fichange accordingly
--          it then uses this amount to apply to the corresponding fitems to reverse the balance
--          by creating the fichanges
--          Finally it reduces the balance on the offsetting fitem from what was applied
--
--          This also creates  Receivables under the appropriate BillingAccount
--
--   %ALGORITHM
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_ptp_id                     Policy Transaction ID
--   %PARAM    io_action_outcome_id          Action Outcome Id
--   %PARAM    in_current_date_time          Calling TimeStamp
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

procedure sp_create_reversal_offsets
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_earlier_pay_plan_id             in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null, -- used for billing method change
     in_current_date_time               in             date default null,
     in_delete_payer_tf                 in             char     default 'F', --VAULTDEV-6645
     in_payer_billing_acc_id            in             object.object_id%type default null -- OSPRODUCT-34206_2

)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_create_reversal_offsets';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_amount                   float:= 0;
     v_element_amount_total             float;
     v_element_amount_total_debit       float;
     v_element_amount_total_credit      float;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_element_category                 number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_creator_poltrns          object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_fi_change_amount                 number;
     v_PaymentPlan_md                   constant business_variable.business_variable_id%type        :=   212015;
     v_payment_md_id                    object.object_id%type;
     v_FITrxType_Generate               number;
     v_credit_billing_account           object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_debit_billing_account            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_fichange_action                  number;
     v_fichange_amount                  float;
     v_fitem_id                         object.object_id%type;
     v_fitem_id_hold                    object.object_id%type;
     v_sum_include                      number;
     v_fichange_process_date            date;
     v_fi_trx_id                        object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_installment_number               number;
     v_inst_actual_due_date             date;
     v_fitramsactopm_id                 object.object_id%type;
     v_cur_total_amount                 float;
     v_cur_total_amount_start           float;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;
     v_mod_installment_object_id        object.object_id%type;
     v_PolicyCurr_Term                  business_variable.business_variable_id%type;
     v_installment_object_id            object.object_id%type;
     v_installment_balance              float;
     v_pol_applied_amount_tot           float;
     v_payment_plan_md_row              pkg_db_payplan_modify.getPaymentPlanList%rowtype;--OSPRODUCT-3108
     v_billing_element_md_row           db_billing_element%rowtype;
     v_payable_earned_amount            float;
     v_category_applied_amount          float;
     v_category_total_applied           float;
     v_element_final_amount             float;
     v_stat_record                      dragon_transaction_stats%rowtype;
     v_element_coverage_id              number;
     v_installment_index                number := 0;
     v_installment_list                 t_AllInstallment;
     v_writing_company_id               object.object_id%type;
     v_writing_company_acc_id           object.object_id%type;
     v_bill_method_change_flag          business_variable.business_variable_id%type;
     v_fullpay_SubCat_id                object.object_id%type; --OSBILLING-7448
     --v_payplan_id                       object.object_id%type; --OSBILLING-7448
     v_modified_pay_plan_flag           number := 0;--OSBILLING-7448
     v_policy_transaction_sub_type      number := 0;--OSBILLING-7448
     v_pol_applied_amount_tota          float :=0;--OSBILLING-7448
     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           t_fitem_installment_tab; -- 7817
     v_fitem_installment_index          number;

     --Start Kiran changes OSPRODUCT-31717
     v_balance_amount                   dragon_scheduled_installment.balance_amount%type; 
     --End Kiran changes OSPRODUCT-31717

    cursor c_target_element_id
            (
               in_payplan_id   in   number
            )
     is
          select
               distinct ( a.db_billing_element_id)

          from
               db_payment_plan_detail a
          where
               a.payment_plan_id = in_payplan_id;

     cursor c_target_fitem
            (
               in_policy_id   in   number,
               in_billing_account_id in number,
               in_policy_term_id in number,
               in_installment_id in number,
               in_billing_element_id in number default null,
               in_fitem_id in number
            )
     is
          select
               *
          from
               dragon_fitem
          where
               policy_id =    in_policy_id
          and
               billing_account_id = in_billing_account_id
          and
               policy_term_id = in_policy_term_id
          and
               installment_id =    in_installment_id
          and
               balance   <>    0.00
          and
               due_date is not null
          and
               (billing_element_md_id = in_billing_element_id)
          and
               fitem_id <> in_fitem_id
          order by
               fitem_category_id;

     --
     --  Cursor for getting open Installments for a given Payment Plan and Billing Method
     --

     cursor c_getNonZeroInstallments
     (
          in_policy_id            in    object.object_id%type,
          in_policy_term_id       in    object.object_id%type,
          in_payment_plan_md_id   in    payment_plan.payment_plan_id%type,
          in_billing_method_id    in    number
     )
     is
          select
               *
          from
               dragon_scheduled_installment
          where
               policy_id = in_policy_id
          and
               policy_term_id = in_policy_term_id
          and
               payment_plan_md_id = in_payment_plan_md_id
          and
               billing_method_id = in_billing_method_id
          and
               billing_due_date is not null
          and
               balance_amount <> 0
          ;

begin

     -- get the payment plan sheduled payments
     
     v_fitem_installment_list.delete; -- 7817

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Arun 5551: '
               ||',in_prior_billing_method_id: '
               ||in_prior_billing_method_id
               ||',in_earlier_pay_plan_id: '
               ||in_earlier_pay_plan_id
               ||',in_chosen_pay_plan_id: '
               ||in_chosen_pay_plan_id
          );

     end if;

     v_scheduled_payment_list.delete;

     if in_prior_billing_method_id is not null
     then

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_earlier_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_earlier_pay_plan_id,
                                     v_PaymentPlan_md
                                   );

          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);


     elsif
          in_prior_billing_method_id is null -- OSBILLING-4516
     and
          in_earlier_pay_plan_id is not null
     /*and
          in_chosen_pay_plan_id = in_mod_pay_plan_id --Keerthi */
     then
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_earlier_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_earlier_pay_plan_id,
                                     v_PaymentPlan_md
                                   );
          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);


     else
          --
          -- 2016-08-10 Cheryl osbilling-2844 - because we create payplans changes
          --                                    based on the balance remaining we will
          --                                    use the new payment schedule to determine
          --                                    the element totals vs using the old and
          --                                    trying to subtract out the paid

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_mod_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_mod_pay_plan_id,
                                     v_PaymentPlan_md
                                   );

          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);



     end if; -- if in_prior_billing_method_id is not null

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... For PaymentPlanScheduledPayment Object ID: '
               ||v_scheduled_payment_list.count
               ||',in_earlier_pay_plan_id: '
               ||in_earlier_pay_plan_id
               || ', in_chosen_pay_plan_id '
               || in_chosen_pay_plan_id
               || ' modified plan: ' || in_mod_pay_plan_id
               || ' v_payment_md_id: '
               || v_payment_md_id
               || ' in_fi_trx_credit_id '
               || in_fi_trx_credit_id
               || 'in_fi_trx_debit_id '
               || in_fi_trx_debit_id
          );

     end if;

     --
     --  Before closing the old installments, create a list if installments with non-zero balance
     --
     v_installment_list.delete;

     for r_installment in c_getNonZeroInstallments
     (
          in_master_policy_id,
          in_policy_term_id,
          v_payment_md_id,
          in_prior_billing_method_id
     )
     loop

          v_installment_index := v_installment_index + 1;

          v_installment_list(v_installment_index) := r_installment.installment_id;

     end loop;

     --
     --  Get the Billing Method Change Flag to check if Billing Method was ever changed for this term
     --  Based on this, the amounts for offsetting the Payables is identified
     --

     v_bill_method_change_flag :=  pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_term_id,
                                        gbv_BillMethodChangeFlag
                                   );

     --
     --  Get the Writing Company
     --

     v_writing_company_id          :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_ptp_id,
                                             pkg_db_object.gbv_WritingCompany
                                        );

     v_writing_company_acc_id      :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_writing_company_id,
                                             gObjType_BillingAccount
                                        );
     --
     --  Loop through all Metadata Billing Elements mapped with the Payment Plan MD ID
     --  to identify the amount for creating the Offset
     --
     
     -- [RR] why a bv get in loop this will be same for all the elements
     -- OSPRODUCT-7817
     v_policy_transaction_sub_type      :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_policy_transaction_id,
                                                  gbv_PolicyTrx_EndSubType
                                             );
                    
     -- [RR] why a bv get in loop this will be same for all the elements
     -- OSPRODUCT-7817
     v_modified_pay_plan_flag           :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_ptp_id,
                                                  gbv_PTP_ProcessModPayPlanInd
                                             );

     for r_element_id in c_target_element_id( v_payment_md_id)
     loop

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Identifying the Total Element Amount for Billing Element ID: '
                    ||r_element_id.db_billing_element_id
                    ||' Element Name: '||pkg_db_functions.fn_get_fitem_element_name(in_session_id, in_transaction_id, r_element_id.db_billing_element_id)
               );

          end if;

          v_element_amount_total := 0;
          v_cur_total_amount_start := 0;
          v_cur_total_amount := 0;
          v_element_final_amount := 0;
          v_pol_applied_amount_tot := 0; -- KR 12/20
          v_pol_applied_amount_tota := 0; ---- KR 12/20

          if v_scheduled_payment_list.count > 0 -- loop thru each payment
          then

               v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

               while v_scheduled_payment_index is not null
               loop

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Considering PaymentPlanScheduledPayment Object ID: '
                              ||v_scheduled_payment_list(v_scheduled_payment_index)
                         );

                    end if;

                    v_inst_actual_due_date   :=   to_date(pkg_os_object_io.fn_object_bv_get
                                                  (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_scheduled_payment_list(v_scheduled_payment_index),
                                                  gbv_actual_due_date
                                                  ), pkg_os_constant.DragonDateFormatDefault);

                    v_installment_number := pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gbv_ScheduledPayment_num
                                                  );

                    if ( v_inst_actual_due_date is not null )
                       or
                       ( v_inst_actual_due_date is null and v_installment_number = pkg_db_payplan_modify.gILRDeferred_Premium_inst)
                    then
                         
                         -- [RR] we are doing a chold search below any way so we can use it
                         -- OSPRODUCT-7817                      
                         /*v_fullpay_SubCat_id := pkg_os_object_search.fn_object_with_attribute_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gObjType_ScheduledElement,
                                                       gbv_debit_sub_category,
                                                       PKG_DB_OBJECT.gFitem_SubCat_Discount
                                                  );*/ --OSBILLING-7448
                                                  
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Full pay subcategory id: ' || v_fullpay_SubCat_id
                              );

                         end if;

                         v_installment_object_id := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_scheduled_payment_list(v_scheduled_payment_index),
                                                          gbv_ScheduledRefInstallment
                                                     );

                         v_installment_balance := pkg_os_object_io.fn_object_bv_get
                                                     (
                                                          in_session_id,
                                                          in_transaction_id,
                                                          v_installment_object_id,
                                                          gbv_Installment_balance
                                                     );

                         --
                         --  Consider the Installment only if it has some balance
                         --

                         -- if v_installment_balance <> 0
                         --then

                         v_scheduled_element_list.delete;

                         -- Get the elements for the payment
                         pkg_os_object_search.sp_object_children_of_type_get
                         (
                              in_session_id,
                              in_transaction_id,
                              v_scheduled_payment_list(v_scheduled_payment_index),
                              gObjType_ScheduledElement,
                              v_scheduled_element_list
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '... Number of PaymentPlanScheduledPaymentElement objects found: '
                                   ||v_scheduled_element_list.count
                              );

                         end if;

                         if v_scheduled_element_list.count > 0
                         then

                              v_scheduled_element_index := v_scheduled_element_list.first;

                              while v_scheduled_element_index is not null loop

                                   -- Loop thru each element of the installnent to see if matches the element we are on
                                   if v_session_control.gLogging_Full
                                   then

                                        pkg_os_logging.sp_log
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '...... For PaymentPlanScheduledPaymenElement Objects : '
                                             ||v_scheduled_element_list(v_scheduled_element_index)
                                        );
                                   end if;

                                   -- v_schedule_element_id := v_scheduled_element_list(v_scheduled_element_index);                                                                                            
                                   -- OSPRODUCT-7817
                                   if v_fullpay_SubCat_id is null then
                                        
                                        if pkg_os_object_io.fn_object_bv_get
                                                                      (
                                                                           in_session_id,
                                                                           in_transaction_id,
                                                                           v_scheduled_element_list(v_scheduled_element_index),
                                                                           gbv_debit_sub_category
                                                                      ) = pkg_db_object.gFitem_SubCat_Discount 
                                        then
                                             
                                             v_fullpay_SubCat_id := v_scheduled_element_list(v_scheduled_element_index);
                                             
                                             if v_session_control.gLogging_Full
                                             then

                                                  pkg_os_logging.sp_log
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_procedure_name,
                                                       '...... Full pay subcategory id: ' || v_fullpay_SubCat_id
                                                  );

                                             end if;
                                        
                                        end if;
                                        
                                        /*v_fullpay_SubCat_id := pkg_os_object_search.fn_object_with_attribute_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_scheduled_payment_list(v_scheduled_payment_index),
                                                       gObjType_ScheduledElement,
                                                       gbv_debit_sub_category,
                                                       PKG_DB_OBJECT.gFitem_SubCat_Discount
                                                  );*/ --OSBILLING-7448
                                        
                                   end if;
                                   
                                   v_billing_element_md_id := pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 v_scheduled_element_list(v_scheduled_element_index),
                                                                 gbv_billing_element_id
                                                            );      
                                        
                                                                 
                                   -- OSPRODUCT-7817
                                   if v_billing_element_md_id = r_element_id.db_billing_element_id
                                   then
                                        -- moving out of the inner loop                                        

                                        -- they equal so need to add amount to total of element
                                        
                                        v_schedule_element_id := v_scheduled_element_list(v_scheduled_element_index); 
                                        
                                        v_element_amount := pkg_os_object_io.fn_object_bv_get
                                                                 (
                                                                      in_session_id,
                                                                      in_transaction_id,
                                                                      v_schedule_element_id,
                                                                      gbv_element_amount
                                                                 ); 
                                                                 
                                        -- OSPRODUCT-7817
                                        -- Removed BV gets

                                        v_element_amount_total := v_element_amount_total + v_element_amount;

                                   end if; -- if v_billing_element_md_id = r_element_id.db_billing_element_id

                                   v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

                              end loop;  --v_scheduled_element_index

                         end if; -- if v_scheduled_element_list.count > 0

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... For Billing Element ID: '||r_element_id.db_billing_element_id
                                   ||' Total Element Amount: '||v_element_amount_total
                              );

                         end if;

                         --else

                              /*if v_session_control.gLogging_Full
                              then

                                   pkg_os_logging.sp_log
                                   (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Zero balance amount, Skipping PaymentPlanScheduledPayment Object ID: '
                                   ||v_scheduled_payment_list(v_scheduled_payment_index)
                                   );

                              end if;*/

                         --end if; -- if v_installment_balance <> 0

                    end if;

                    v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

               end loop;     -- while v_scheduled_payment_index is not null loop

          end if;  -- if v_scheduled_payment_list.count > 0
          
          -- OSPRODUCT-7817
          if v_schedule_element_id is not null then
               --OSPRODUCT-7728 start
               v_billing_element_md_id := pkg_os_object_io.fn_object_bv_get
                                          (
                                               in_session_id,
                                               in_transaction_id,
                                               v_schedule_element_id,
                                               gbv_billing_element_id
                                          );  
               --OSPRODUCT-7728 end
               v_billing_element_md_row :=  pkg_db_payplan_modify.fn_billing_element_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_billing_element_md_id
               );
                                             
               v_element_debit_category :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_schedule_element_id,
                                                  gbv_debit_category
                                             );

               v_element_debit_subcategory   :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_debit_sub_category
                                                  );

               v_element_credit_category     :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_credit_category
                                                  );

               v_element_credit_subcategory  :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_credit_sub_category
                                                  );

               v_create_debit_tf             :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_create_debit_flag
                                                  );

               v_create_credit_tf            :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_create_credit_flag
                                                  );

               v_element_creator_poltrns     :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_ElementRefCreatorPolTrns
                                                  );

               v_IncludeInPayScheduleTF      :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_IncludeInPayScheduleTF
                                                  );

               v_coverage_object_id          :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_ScheduledElementRefAsset
                                                  );

               v_debit_billing_account       :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_ElementRefDebitBillAcc
                                                  );

               v_credit_billing_account      :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_ElementRefCreditBillAcc
                                                  );
                                                  
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '.. Debit Category ' || v_element_debit_category ||
                         '.. Debut Subcategory: ' || v_element_subcategory ||
                         '.. Credit Category: '   || v_element_credit_category ||
                         '.. Credit Subcategory: '|| v_element_credit_subcategory ||
                         '.. Create credit?: '       || v_create_credit_tf ||
                         '.. Create debit?: '        || v_create_debit_tf  ||
                         '.. Creator PT: '           || v_element_creator_poltrns ||
                         '.. Include in pmnt sch: '  || v_IncludeInPayScheduleTF ||
                         '.. Coverage object id: '   || v_coverage_object_id ||
                         '.. Debit billing acc: '    || v_debit_billing_account||
                         '.. Credit billing acc: '   || v_credit_billing_account ||
                         '.. Element amount: '       || v_element_amount
                    );

               end if;
                                                  
          end if;

          --
          --  Based on Element Type (Debit/Credit), identify the final amount for adjustment
          --

          if v_element_amount_total <> 0
          then

               --
               --  If the Billing Element is a receivable OR (receivable + payable), then check the applied amount
               --

               -- OSBILLING-5141

               /*if ( v_billing_element_md_row.create_debit_tf is not null and v_billing_element_md_row.create_debit_tf = 'T'
                    and (v_billing_element_md_row.debit_fitem_category not in (946,5746) or v_billing_element_md_row.debit_fitem_sub_category in (61746,61946,45646) ))



               then*/

               if (v_billing_element_md_row.billing_elem_calc_type is null or
                    v_billing_element_md_row.billing_elem_calc_type = 1) then



                    /*-- [RR] why a bv get in loop this will be same for all the elements
                    -- OSPRODUCT-7817 moved above
                    v_policy_transaction_sub_type      :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_policy_transaction_id,
                                                                 gbv_PolicyTrx_EndSubType
                                                            );
                    
                    -- [RR] why a bv get in loop this will be same for all the elements
                    v_modified_pay_plan_flag           :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                                 in_session_id,
                                                                 in_transaction_id,
                                                                 in_ptp_id,
                                                                 gbv_PTP_ProcessModPayPlanInd
                                                            );*/
                                                            
                    -- end OSPRODUCT-7817

                    if v_policy_transaction_sub_type = 1 and v_modified_pay_plan_flag = 1 --OSBILLING-7448
                    then
                         pkg_db_payplan_modify.sp_cash_applied_get
                         (
                              in_session_id,
                              in_transaction_id,
                              in_ptp_id,
                              in_policy_transaction_id,
                              v_billing_element_md_row.db_billing_element_id,
                              v_coverage_object_id,
                              v_payment_plan_md_row,
                              v_pol_applied_amount_tot,
                              'F',                                -- OSBILLING-4478
                              nvl(in_chosen_pay_plan_id,in_mod_pay_plan_id)--OSBILLING-7448--nvl(in_chosen_pay_plan_id,in_mod_pay_plan_id)              -- OSBILLING-4478
                         );
                    end if;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......in_policy_transaction_id  '||in_policy_transaction_id
                              ||' in_ptp_id '||in_ptp_id
                              ||' v_policy_transaction_sub_type '||v_policy_transaction_sub_type
                              ||' v_modified_pay_plan_flag '||v_modified_pay_plan_flag
                         );

                    end if;

                    --Start Kiran changes OSPRODUCT-31717
					-- Commented in_prior_billing_method_id = 2 for OSPRODUCT-32639 - Kiran
                    if  v_policy_transaction_sub_type = gTrxSubType_changeBilltype --and in_prior_billing_method_id = 2 
                         then 
                         
						if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_procedure_name,
                                        '.....CBM for Agency Billed to Direct Billed or Vice Versa'
                                   );
          
                              end if;
                              pkg_db_payplan_modify.sp_cash_applied_get
						(	
							in_session_id,
							in_transaction_id,
							in_ptp_id,
							in_policy_transaction_id,
							v_billing_element_md_row.db_billing_element_id,
							v_coverage_object_id,
							v_payment_plan_md_row,
							v_pol_applied_amount_tot,
							'T',                                -- OSBILLING-4478
							nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id)              -- OSBILLING-4478
						);                    

                    else 
                    --End Kiran changes OSPRODUCT-31717

                    pkg_db_payplan_modify.sp_cash_applied_get
                    (
                         in_session_id,
                         in_transaction_id,
                         in_ptp_id,
                         in_policy_transaction_id,
                         v_billing_element_md_row.db_billing_element_id,
                         v_coverage_object_id,
                         v_payment_plan_md_row,
                         v_pol_applied_amount_tota,
                         'F',       --OSPRODUCT-28098      --Made to 'F' due to OSPRODUCT-34206        -- OSBILLING-4478
                         nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id),--OSBILLING-7448--nvl(in_chosen_pay_plan_id,in_mod_pay_plan_id)              -- OSBILLING-4478
                         in_payer_billing_acc_id, -- OSPRODUCT-34206_2
                         in_current_inst_tf => 'T' -- OSPRODUCT-34206						 
                    );

                    --Start Kiran changes OSPRODUCT-31717
                    end if;
                    --End Kiran changes OSPRODUCT-31717

                    v_pol_applied_amount_tot := v_pol_applied_amount_tot + v_pol_applied_amount_tota;

                    if v_pol_applied_amount_tot is null
                    then
                         v_pol_applied_amount_tot := 0;
                    end if;

                    v_element_final_amount := v_element_amount_total - v_pol_applied_amount_tot;

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Final Billing Element Amount (Post cash-application adjustments):'


                              || v_element_final_amount
                              || ':Cash Applied :' || v_pol_applied_amount_tot
                         );

                    end if;

               else

                    --
                    --  When the Billing Element is either Payable only,
                    --  then identify the final amount by excluding the Earned Amount and any partially paid installment
                    --

                    --OSPRODUCT-2036 start
                    if v_policy_transaction_sub_type = 1 and v_modified_pay_plan_flag = 1 
                    then
                         v_payable_earned_amount := nvl(pkg_db_payplan_modify.fn_get_element_earned_amount
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_policy_transaction_id,
                                                         v_payment_md_id,
                                                         v_billing_element_md_row,
                                                         'F',                      
                                                         nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id) --nvl(in_chosen_pay_plan_id,in_mod_pay_plan_id) Changed with OSPRODUCT-11813     
                                                    ), 0 );
                    else
                    --OSPRODUCT-2036 end

                    --Start Kiran changes OSPRODUCT-31717
                         if  in_prior_billing_method_id = 2 then 
						if v_session_control.gLogging_Full
						then					
							pkg_os_logging.sp_log
							(
								in_session_id,
								in_transaction_id,
								v_procedure_name,
								'... Kiranchand in_prior_billing_method_id: '||in_prior_billing_method_id
								||', v_coverage_object_id: '||v_coverage_object_id
								||', v_pol_applied_amount_tot: '||v_pol_applied_amount_tot
							);
						end if;
												
						pkg_db_payplan_modify.sp_cash_applied_get
						(	
							in_session_id,
							in_transaction_id,
							in_ptp_id,
							in_policy_transaction_id,
							v_billing_element_md_row.db_billing_element_id,
							v_coverage_object_id,
							v_payment_plan_md_row,
							v_pol_applied_amount_tot,
							'T',                                -- OSBILLING-4478
							nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id)              -- OSBILLING-4478
						);
										 
						if v_pol_applied_amount_tot is null
						then
		
							v_pol_applied_amount_tot := 0;
		
						end if;
						
						v_payable_earned_amount:=v_pol_applied_amount_tot;
                         else
                         --End Kiran changes OSPRODUCT-31717

                         v_payable_earned_amount := nvl(pkg_db_payplan_modify.fn_get_element_earned_amount
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_policy_transaction_id,
                                                         v_payment_md_id,
                                                         v_billing_element_md_row,
                                                         'F',                       -- OSBILLING-4478
                                                        -- nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id)     -- OSBILLING-4478
                                                        null --OSPRODUCT-7136
                                                    ), 0 );
                         --Start Kiran changes OSPRODUCT-31717
                         end if;                    
                         --End Kiran changes OSPRODUCT-31717

                    end if;  --OSPRODUCT-2036

                    v_category_applied_amount :=   0;
                    v_category_total_applied  :=   0;

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Getting the applied amount for the PolicyTerm ID: '||in_policy_term_id
                              ||', Payment Plan MD ID: '||v_payment_md_id
                              ||', Billing Method ID: '||in_prior_billing_method_id
                         );

                    end if;

                    v_installment_index := v_installment_list.first;

                    while v_installment_index is not null
                    loop


                         v_category_applied_amount :=  pkg_db_payplan_modify.fn_get_cat_applied_amount
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_installment_list(v_installment_index),
                                                            v_billing_element_md_row.credit_fitem_category
                                                       );

                         v_category_total_applied      :=   v_category_total_applied + nvl(v_category_applied_amount, 0);

                         v_installment_index           :=   v_installment_list.next(v_installment_index);

                    end loop;


                    v_element_final_amount :=   (v_element_amount_total + v_payable_earned_amount) - v_category_total_applied; --KR 12/20

                  --  v_element_final_amount :=   (v_element_amount_total - v_payable_earned_amount) - v_category_total_applied; --KR 12/20

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Initial Element Amount: '||v_element_amount_total
                              ||', Earned Amount: '||v_payable_earned_amount
                              ||', Category level applied amount: '||v_category_total_applied
                              ||', Final Billing Element Amount (Post payable earning adjustments and category level applied amount):'
                              || v_element_final_amount
                         );

                    end if;

               end if; -- if ( v_billing_element_md_row.create_debit_tf is not null and v_billing_element_md_row.create_debit_tf = 'T' )

          end if; -- if v_element_amount_total <> 0

          if v_element_final_amount <> 0
          then

               --  we have an amount so create the fitem and fichange
               --  determine if this is going to be a debit or credit based on what it was before
               --  now we will do the opposite
               --  the element_amount is a positive for the credit amounts here (fitem is negative) and we want the amount to be positive so leave
               --  the debit amount we need to * -1


             /*  if   ( v_debit_billing_account is not null and v_credit_billing_account is not null )
                    or
                    ( v_debit_billing_account is not null and v_credit_billing_account is null )
               then*/

                   if   ( v_debit_billing_account is not null and v_credit_billing_account is not null and v_debit_billing_account <> v_writing_company_acc_id ) -- OSBILLING-5267
                    or
                    ( v_debit_billing_account is not null and v_credit_billing_account is null and  v_debit_billing_account <> v_writing_company_acc_id )
               then

                    -- OSBILLING-5238

                    v_FITrxType_Generate := gFItem_debit;
                    v_billing_account    := v_debit_billing_account;

                    v_fi_trx_id := in_fi_trx_debit_id;

                    v_element_category := v_element_debit_category;
                    v_element_subcategory := v_element_debit_subcategory;
                    --OSBILLING-5437 start
                    If v_credit_billing_account = v_writing_company_acc_id then
                       v_element_subcategory := v_element_credit_subcategory;
                    End If;
                    --OSBILLING-5437 end
                         -- End OSBILLING-5238

                    v_element_amount_total_debit := v_element_final_amount * (-1) ;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... For reverse_fitem_fichange for debit: '
                         ||'v_element_final_amount ' ||v_element_final_amount
                         ||', v_pol_applied_amount_tot: '||v_pol_applied_amount_tot
                         ||', element_amount: '||v_element_amount_total_debit
                         || ' v_debit_billing_account ' || v_debit_billing_account
                         || ' v_credit_billing_account ' || v_credit_billing_account
                         || ' v_create_debit_tf ' || v_create_debit_tf
                         || ' r_element_id.db_billing_element_id ' || r_element_id.db_billing_element_id
                         || ' v_create_credit_ft ' || v_create_credit_tf
                         || ' v_billing_account: ' || v_billing_account
                         );

                    end if;

                    --
                    --  Create the DEBIT FItem and associated FIChange if there is a balance
                    --

                    if (v_element_amount_total_debit <> 0 and (v_billing_element_md_row.billing_elem_calc_type is null

                          or v_billing_element_md_row.billing_elem_calc_type =1)
                          and v_billing_element_md_row.debit_fitem_category <> 5646)
                    then--OSBILLING-5141


                         if v_fullpay_SubCat_id is null --OSBILLING-7448 fullpaydiscount billing element is not present
                         then

                              sp_reversal_fitem_fichange -- 7817
                              (
                                   in_session_id                      =>             in_session_id,
                                   in_transaction_id                  =>             in_transaction_id,
                                   in_ptp_id                          =>             in_ptp_id,
                                   in_policy_transaction_id           =>             in_policy_transaction_id,
                                   in_product_id                      =>             in_product_id,
                                   in_filing_id                       =>             in_filing_id,
                                   in_policy_billing_method           =>             in_policy_billing_method,
                                   in_ultimate_customer_id            =>             in_ultimate_customer_id,
                                   in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                                   in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                                   in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                                   in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                                   in_master_policy_id                =>             in_master_policy_id,
                                   in_policy_term_id                  =>             in_policy_term_id,
                                   in_policy_transaction_type         =>             in_policy_transaction_type,
                                   in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                                   in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                                   in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                                   in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                                   in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                                   io_action_outcome_id               =>             io_action_outcome_id,
                                   in_prior_billing_method_id         =>             in_prior_billing_method_id,
                                   in_current_date_time               =>             in_current_date_time,
                                   in_FITrxType_Generate              =>             v_FITrxType_Generate,
                                   in_billing_account                 =>             v_billing_account,
                                   in_offset_billing_account          =>             v_writing_company_acc_id , -- Keerthi OSBILLING-5267 v_credit_billing_account,
                                   in_fi_trx_id                       =>             v_fi_trx_id,
                                   in_element_category                =>             v_element_category,
                                   in_element_subcategory             =>             v_element_subcategory,
                                   in_element_amount_total            =>             v_element_amount_total_debit,
                                   in_billing_element_id              =>             r_element_id.db_billing_element_id,
                                   in_create_debit_tf                 =>             v_create_debit_tf,
                                   in_create_credit_tf                =>             v_create_credit_tf,
                                   in_debit_run                       =>             1,
                                   io_fitem_installment_list          =>             v_fitem_installment_list  -- 7817  
                              );
                         else
                              sp_cs_reversal_fitem_fichange
                              (
                                   in_session_id                      =>             in_session_id,
                                   in_transaction_id                  =>             in_transaction_id,
                                   in_ptp_id                          =>             in_ptp_id,
                                   in_policy_transaction_id           =>             in_policy_transaction_id,
                                   in_product_id                      =>             in_product_id,
                                   in_filing_id                       =>             in_filing_id,
                                   in_policy_billing_method           =>             in_policy_billing_method,
                                   in_ultimate_customer_id            =>             in_ultimate_customer_id,
                                   in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                                   in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                                   in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                                   in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                                   in_master_policy_id                =>             in_master_policy_id,
                                   in_policy_term_id                  =>             in_policy_term_id,
                                   in_policy_transaction_type         =>             in_policy_transaction_type,
                                   in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                                   in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                                   in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                                   in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                                   in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                                   io_action_outcome_id               =>             io_action_outcome_id,
                                   in_prior_billing_method_id         =>             in_prior_billing_method_id,
                                   in_current_date_time               =>             in_current_date_time,
                                   in_FITrxType_Generate              =>             v_FITrxType_Generate,
                                   in_billing_account                 =>             v_billing_account,
                                   in_offset_billing_account          =>             v_writing_company_acc_id , -- Keerthi OSBILLING-5267 v_credit_billing_account,
                                   in_fi_trx_id                       =>             v_fi_trx_id,
                                   in_element_category                =>             v_element_category,
                                   in_element_subcategory             =>             v_element_subcategory,
                                   in_element_amount_total            =>             v_element_amount_total_debit,
                                   in_billing_element_id              =>             r_element_id.db_billing_element_id,
                                   in_create_debit_tf                 =>             v_create_debit_tf,
                                   in_create_credit_tf                =>             v_create_credit_tf,
                                   in_debit_run                       =>             1
                              );
                         end if;
                    end if;

               end if; -- if v_debit_billing_account is not null

               /*if v_credit_billing_account is not null and v_credit_billing_account <> v_writing_company_acc_id and v_debit_billing_account is null
               */

                   if ( v_credit_billing_account is not null and   v_debit_billing_account is null)
                or
                ( v_credit_billing_account is not null and v_debit_billing_account is not null and v_credit_billing_account <>  v_writing_company_acc_id and v_element_credit_category  in (5746, 946))  -- OSBILLING-5267
               then

                    v_FITrxType_Generate := gFItem_credit;

                    v_billing_account := v_credit_billing_account;

                    v_fi_trx_id := in_fi_trx_credit_id;

                    v_element_category := v_element_credit_category;

                    --OSBILLING-5437 start
/*                    if in_prior_billing_method_id is not null
                    then

                         v_element_subcategory := gFItem_SubCat_BillMethodCredit;

                    else

                         v_element_subcategory := gFItem_SubCat_PayChngCredit;

                    end if;*/
                    v_element_subcategory := v_element_credit_subcategory;
                    --OSBILLING-5437 end

                    v_element_amount_total_credit := v_element_final_amount;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... For reverse_fitem_fichange for credit: '
                              ||'v_element_final_amount  ' ||v_element_final_amount
                              ||', v_pol_applied_amount_tot: '||v_pol_applied_amount_tot
                              ||', element_amount: '||v_element_amount_total_credit
                              || ' v_debit_billing_account ' || v_debit_billing_account
                              || ' v_credit_billing_account ' || v_credit_billing_account
                              || ' v_create_debit_tf ' || v_create_debit_tf
                              || ' r_element_id.db_billing_element_id ' || r_element_id.db_billing_element_id
                         );

                    end if;

                    --
                    --  Create the CREDIT FItem and associated FIChange if there is a balance
                    --

                    if v_element_amount_total_credit <> 0
                    then

                         if v_fullpay_SubCat_id is null --OSBILLING-7448 fullpaydiscount billing element is not present
                         then
                              sp_reversal_fitem_fichange -- 7817
                              (
                                   in_session_id                      =>             in_session_id,
                                   in_transaction_id                  =>             in_transaction_id,
                                   in_ptp_id                          =>             in_ptp_id,
                                   in_policy_transaction_id           =>             in_policy_transaction_id,
                                   in_product_id                      =>             in_product_id,
                                   in_filing_id                       =>             in_filing_id,
                                   in_policy_billing_method           =>             in_policy_billing_method,
                                   in_ultimate_customer_id            =>             in_ultimate_customer_id,
                                   in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                                   in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                                   in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                                   in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                                   in_master_policy_id                =>             in_master_policy_id,
                                   in_policy_term_id                  =>             in_policy_term_id,
                                   in_policy_transaction_type         =>             in_policy_transaction_type,
                                   in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                                   in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                                   in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                                   in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                                   in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                                   io_action_outcome_id               =>             io_action_outcome_id,
                                   in_prior_billing_method_id         =>             in_prior_billing_method_id,
                                   in_current_date_time               =>             in_current_date_time,
                                   in_FITrxType_Generate              =>             v_FITrxType_Generate,
                                   in_billing_account                 =>             v_billing_account,
                                   in_offset_billing_account          =>             v_writing_company_acc_id, -- Keerthi OSBILLING-5287
                                   in_fi_trx_id                       =>             v_fi_trx_id,
                                   in_element_category                =>             v_element_category,
                                   in_element_subcategory             =>             v_element_subcategory,
                                   in_element_amount_total            =>             v_element_amount_total_credit,
                                   in_billing_element_id              =>             r_element_id.db_billing_element_id,
                                   in_create_debit_tf                 =>             v_create_debit_tf,
                                   in_create_credit_tf                =>             v_create_credit_tf,
                                   in_debit_run                       =>             0,
                                   io_fitem_installment_list          =>             v_fitem_installment_list -- 7817
                              );
                         else
                              sp_cs_reversal_fitem_fichange
                              (
                                   in_session_id                      =>             in_session_id,
                                   in_transaction_id                  =>             in_transaction_id,
                                   in_ptp_id                          =>             in_ptp_id,
                                   in_policy_transaction_id           =>             in_policy_transaction_id,
                                   in_product_id                      =>             in_product_id,
                                   in_filing_id                       =>             in_filing_id,
                                   in_policy_billing_method           =>             in_policy_billing_method,
                                   in_ultimate_customer_id            =>             in_ultimate_customer_id,
                                   in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                                   in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                                   in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                                   in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                                   in_master_policy_id                =>             in_master_policy_id,
                                   in_policy_term_id                  =>             in_policy_term_id,
                                   in_policy_transaction_type         =>             in_policy_transaction_type,
                                   in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                                   in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                                   in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                                   in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                                   in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                                   io_action_outcome_id               =>             io_action_outcome_id,
                                   in_prior_billing_method_id         =>             in_prior_billing_method_id,
                                   in_current_date_time               =>             in_current_date_time,
                                   in_FITrxType_Generate              =>             v_FITrxType_Generate,
                                   in_billing_account                 =>             v_billing_account,
                                   in_offset_billing_account          =>             v_writing_company_acc_id, -- Keerthi OSBILLING-5287
                                   in_fi_trx_id                       =>             v_fi_trx_id,
                                   in_element_category                =>             v_element_category,
                                   in_element_subcategory             =>             v_element_subcategory,
                                   in_element_amount_total            =>             v_element_amount_total_credit,
                                   in_billing_element_id              =>             r_element_id.db_billing_element_id,
                                   in_create_debit_tf                 =>             v_create_debit_tf,
                                   in_create_credit_tf                =>             v_create_credit_tf,
                                   in_debit_run                       =>             0
                              );
                         end if;

                    end if;

               end if; -- if v_credit_billing_account is not null

               ------------------------ End of clearing due amounts of chosen payplan with payplan change credit --------------

          end if;  --v_element_amount_total <> 0

     end loop;  -- elements
     
     -- 7817
     if v_fitem_installment_list.count > 0
     then

          v_fitem_installment_index := v_fitem_installment_list.first;

          while v_fitem_installment_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updating the Datamart for Installment ID: '
                         || v_fitem_installment_list(v_fitem_installment_index)
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_installment_list(v_fitem_installment_index),
                    v_datamart_tf
               );

               --Start Kiran changes OSPRODUCT-31717
               if nvl (v_policy_transaction_sub_type, 0) = gChangeBillingMethod
                    then
                    select --nvl(balance_amount,0)
                    --PMADEV-6907
                    nvl(pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, installment_id,pkg_db_payplan_modify.gbv_BusinessAmtCalculated),0)
                    into v_balance_amount
                    from dragon_scheduled_installment
                    where installment_id = v_fitem_installment_list(v_fitem_installment_index)
                    ;
                    
                    if v_balance_amount = 0 
                         then
                              pkg_os_object_io.sp_object_bv_set
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fitem_installment_list(v_fitem_installment_index),
                                        gbv_Install_IsCrrntPayPlanInst,
                                        gInstalmnt_CrntPayPlan_False
                                   );
                                         
                              if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '......Setting the current payment plan installment to false for installment_id - ' 
                                                  || v_fitem_installment_list(v_fitem_installment_index)
                                             );
                              end if;                                   
                    end if;-- if v_balance_amount = 0 
               end if;
               --End Kiran changes OSPRODUCT-31717

               v_fitem_installment_index := v_fitem_installment_list.next(v_fitem_installment_index);

          end loop;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Exception '||
               sqlerrm(sqlcode)
          );

          raise no_data_found;

end sp_create_reversal_offsets;

------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_reversal_fitem_fichange
--   %USAGE
--          This procedure will  create the fitems and fichange as passed in by sp_create_reversal_offsets
--          it then uses this amount to apply to the corresponding fitems to reverse the balance
--          by creating the fichanges
--          Finally it reduces the balance on the offsetting fitem from what was applied
--
--          This also creates  Receivables under the appropriate BillingAccount
--          parts of this code was originally under sp_change_payplan_process. Broke it out when using for change billing method as well
--
--   %ALGORITHM
--

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_reversal_fitem_fichange
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_earlier_pay_plan_id             in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null, -- used for billing method change
     in_current_date_time               in             date default null,
     in_FITrxType_Generate              in             number,
     in_billing_account                 in             object.object_id%type,
     in_offset_billing_account          in             object.object_id%type,
     in_fi_trx_id                       in             object.object_id%type,
     in_element_category                in             number,
     in_element_subcategory             in             number,
     in_element_amount_total            in             number,
     in_billing_element_id              in             number,
     in_create_debit_tf                 in             char,
     in_create_credit_tf                in             char,
     in_debit_run                       in             number,
     io_fitem_installment_list          in out         t_fitem_installment_tab -- 7817
)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_create_reversal_fitem_fichange';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_amount                   number;
     v_element_amount_total             number;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_element_category                 number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_creator_poltrns          object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_fi_change_amount                 number;
     v_PaymentPlan_md                   constant business_variable.business_variable_id%type        :=   212015;
     v_payment_md_id                    object.object_id%type;
     v_fitem_type                       number;
     v_offset_fitem_type                number;
     v_credit_billing_account           object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_debit_billing_account            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_offset_fitem_id                  object.object_id%type;
     v_offset_fi_change_id              object.object_id%type;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fitem_id                         object.object_id%type;
     v_fitem_id_hold                    object.object_id%type;
     v_sum_include                      number;
     v_fichange_process_date            date;
     v_fi_trx_id                        object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_installment_number               number;
     v_fitramsactopm_id                 object.object_id%type;
     v_cur_total_amount                 number;
     v_cur_total_amount_start           number;
     v_applied_amount                   number := 0;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;
     v_mod_installment_object_id        object.object_id%type;
     v_PolicyCurr_Term                  business_variable.business_variable_id%type;
     v_installment_object_id            object.object_id%type;
     v_debit_tf                         char(1) := '1';
     v_credit_tf                        char(1) := '2';
     v_debit_run                        number := 1;
     v_fitem_term_billing_method        number;
     v_fitem_rollup_id                  object.object_id%type;
     v_rollup_status_id                 object_state.object_state_id%type;
     v_fitem_recon_batch_id             object.object_id%type;
     v_recon_batch_status_id            object_state.object_state_id%type;
     v_fitem_recon_batch_list           t_fitem_installment_tab;
     v_fitem_recon_batch_index          number;

     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           t_fitem_installment_tab;
     v_fitem_installment_index          number;
     v_due_fitem_flag                   number;--OSBILLING-7448

      v_existing_fitem_change_tf  char := 'F'; -- [KR 12/20] 

     --Start Kiran changes OSPRODUCT-31717
     v_pol_trx_subtype_for_End          object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get ( in_session_id, in_transaction_id, in_policy_transaction_id, pkg_db_payplan_modify.gbv_PolicyTrx_SubType );
     --End Kiran changes OSPRODUCT-31717

     cursor c_target_fitem
            (
               in_policy_id   in   number,
               in_billing_account_id in number,
               in_policy_term_id in number,
               in_installment_id in number,
               in_billing_element_id in number default null,
               in_fitem_id in number
            )
     is
          select
               *
          from
               dragon_fitem a
          where
               policy_id =    in_policy_id
          and
               billing_account_id = in_billing_account_id
          and
               policy_term_id = in_policy_term_id
          and
               installment_id =    in_installment_id
          and
               balance   <>    0.00
          and
               (a.billing_element_md_id = in_billing_element_id)
          and
               a.fitem_id <> in_fitem_id
          and
               (
                    (a.fitem_type_id = gFItem_Credit and a.earning_status <> 'Earned')
                    or
                    a.fitem_type_id = gFItem_Debit
               )
          and 
               fitem_batch_type_id <> genum_Payables_Earning_Adjstm  --OSPRODUCT-7199
          --and a.billing_account_id <> in_offset_billing_account -- Keerthi OSBILLING-5267
          order by
               a.fitem_category_id;


begin

     --
     --  Cleanup Tasks
     --
     v_fitem_installment_list.delete;
     v_fitem_recon_batch_list.delete;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||------ Element MD ID: '||in_billing_element_id
               || ' Element Amount: '||in_element_amount_total
               || ' FItem/FItransaction Type: '|| in_FITrxType_Generate
               || ' Billing Account ID: '||  in_billing_account
               || ' Offset Billing Account ID: '|| in_offset_billing_account
               || ' Element Category ID: '|| in_element_category
               || ' Element Subcategory ID: '|| in_element_subcategory
               || ' Element Create Debit?(True=1 False=2) '|| in_create_debit_tf
               || ' Element Create Credit?(True=1 False=2) '|| in_create_credit_tf
               || ' FItransaction ID: '|| in_fi_trx_id
               || ' Earlier Payment Plan Object ID: '||in_earlier_pay_plan_id
               || ' Chosen Payment Plan Object ID: '||in_chosen_pay_plan_id
               || ' Modified Payment Plan Object ID: '||in_mod_pay_plan_id
               || ' Prior Billing Method (set only if we are changing Billing Method): ' || in_prior_billing_method_id
               || ' Desired Billing Method: '|| in_policy_billing_method

          );

     end if;

     --
     -- Get the Writing Company associated with the Policy
     --

     v_writing_company_id := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          in_ptp_id,
          pkg_db_object.gbv_WritingCompany
     );

     v_fitem_type    := in_FITrxType_Generate;
     v_billing_account := in_billing_account;
     v_element_amount_total := in_element_amount_total;

     --
     --  Get the parent entity id of billing account Object
     --

     v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account,
                                        gbv_BillingAccountParent
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Parent entity of billing account '||v_billing_account||
               ' - '||v_billaccount_parent_id
          );

     end if;

     if in_offset_billing_account is not null
     then

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_fitem_type = gFItem_Debit
          then

               v_offset_fitem_type := gFItem_Credit;

          else

               v_offset_fitem_type := gFItem_Debit;

          end if;

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    in_offset_billing_account,
               out_fitem_id                 =>    v_offset_fitem_id,
               in_fitem_debit_credit        =>    v_offset_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account),
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' created on Billing Account: '||v_billaccount_parent_id
                    ||' Offset FItem ID: '|| v_offset_fitem_id
                    ||' created on Billing Account: '||in_offset_billing_account
               );

          end if;

     else

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               out_offset_FItem_id          =>    v_offset_fitem_id, -- Added another parameter to create an offset on the Writing Company
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' Writing Company offset FItem ID: '|| v_offset_fitem_id
               );

          end if;

     end if;

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     --
     -- Handling the rollback
     --

     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then
          v_fichange_amount   :=   v_element_amount_total * (-1);
     else
          v_fichange_amount   :=   v_element_amount_total;

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for FItem ID: '||v_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  v_billaccount_parent_id
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --


     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
     in_session_id,
     in_transaction_id,
     v_fitem_id,
     v_datamart_tf
     );

     ------------------------------------------------------------------------------------------------------
     -- FIChange for Offset Account
     ------------------------------------------------------------------------------------------------------

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     -- OSBILLING-650 Added to cater to the rollback
     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then

          v_fichange_amount   :=   v_element_amount_total;

     else

          v_fichange_amount   :=   v_element_amount_total * (-1);

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for Offset FItem ID: '||v_offset_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_offset_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_offset_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  nvl(pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account), v_writing_company_id)
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --

     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_offset_fitem_id,
          v_datamart_tf
     );


     --
     --  Now create the PayPlan Change Credit or Billing Method Change Credit fitems
     --  and close the old outdated installments
     --

     v_cur_total_amount := v_element_amount_total;
     v_cur_total_amount_start:= v_cur_total_amount;

     --
     --  Get the MD ID from Modified Payment Plan if we are doing PayPlan Change
     --  or MD ID from earlier Payment Plan if we are doing Billing Method Change
     --

     v_scheduled_payment_list.delete;

     if in_prior_billing_method_id is not null
     then

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_earlier_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_earlier_pay_plan_id,
                                        v_PaymentPlan_md
                                   );
     else

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_chosen_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements
          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_chosen_pay_plan_id,
                                        v_PaymentPlan_md
                                   );
     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Payment Plan MD ID to be adjusted: '
               ||v_payment_md_id
          );

     end if;

     --
     --  Loop through the scheduled payments associated with previous Policy Image to close old installments
     --
     -- OSPRODUCT-7817
     select
          dpt.policy_term_billing_method_id
     into
          v_fitem_term_billing_method
     from
          dragon_policy_term dpt
     where
          dpt.policy_id = in_master_policy_id
     and
          dpt.policy_term_id = in_policy_term_id;

     v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

     while v_scheduled_payment_index is not null
     loop

          v_installment_object_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_scheduled_payment_list(v_scheduled_payment_index),
                                             gbv_ScheduledRefInstallment
                                        );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Starting clearing due amounts of Installment ID: '||v_installment_object_id
               );

          end if;
          
          -- [RR] query inside a loop
          -- 7817
          /*select
               dpt.policy_term_billing_method_id
          into
               v_fitem_term_billing_method
          from
               dragon_policy_term dpt
          where
               dpt.policy_id = in_master_policy_id
          and
               dpt.policy_term_id = in_policy_term_id;*/

          for r_target_fitem in    c_target_fitem
                                   (
                                   in_master_policy_id,
                                   v_billing_account,
                                   in_policy_term_id,
                                   v_installment_object_id,
                                   in_billing_element_id,
                                   v_fitem_id
                                   )
          loop

               ---------------------------------------------------------------------------------------
               -- Agency Bill Specific Handling
               ---------------------------------------------------------------------------------------

               --
               --  Mark the Rollup Items as Excluded if the financials are part of any Reconciliation
               --  while doing the Billing Method Change or Pay Plan Change on an Agency Billed policy.
               --
               v_fitem_recon_batch_id := null;
               v_fitem_rollup_id      := null;
               v_due_fitem_flag       := 1;
               begin

                    --
                    --  Check if the Policy is Agency Billed
                    --

                    if v_fitem_term_billing_method = gBillingMethod_Agency
                    then

                         --
                         --  Check if this Fitem is part of any Recon Statement
                         --

                         if r_target_fitem.current_recon_batch_id is not null
                         then

                              v_fitem_recon_batch_id := r_target_fitem.current_recon_batch_id;

                         elsif r_target_fitem.related_recon_batch_id is not null
                         then

                              v_fitem_recon_batch_id := r_target_fitem.related_recon_batch_id;

                         end if;

                         if v_fitem_recon_batch_id is not null
                         then

                              --
                              --  Get the status of the Recon Statement
                              --

                              select
                                   btrx.batch_status_id
                              into
                                   v_recon_batch_status_id
                              from
                                   dragon_billingaccounttrxset btrx
                              where
                                   btrx.billingaccounttrxset_id = v_fitem_recon_batch_id;

                              --
                              --  Proceed only if the Recon Statement is neither processed nor reversed
                              --

                              if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)
                              then

                                   --
                                   --  Get the Rollup in which this FItem is a rollup member
                                   --

                                   select
                                        ru.ru_id
                                   into
                                        v_fitem_rollup_id
                                   from
                                        dragon_rollup ru
                                   where
                                        ru.ru_parent_id = v_fitem_recon_batch_id
                                   and
                                        ru.ru_policy_id = r_target_fitem.policy_id
                                   and
                                        ru.ru_id in (select rum.rum_parent_id from dragon_rollup_member rum where rum.rum_ref_fitem = r_target_fitem.fitem_id);

                                   --
                                   --  Check the Rollup status
                                   --

                                   select
                                        ru.ru_object_state_id
                                   into
                                        v_rollup_status_id
                                   from
                                        dragon_rollup ru
                                   where
                                        ru.ru_id = v_fitem_rollup_id;

                                   --
                                   --  Proceed if the Rollup is neither Processed nor Excluded
                                   --

                                   if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)
                                   then

                                   --
                                   --  Mark the Rollup's Match Option to "Exclude Without Aging" and status to "Excluded"
                                   --

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_rollup_id,
                                             pkg_db_reconciliation.gbv_PaymentOption,
                                             pkg_db_reconciliation.gMatchOption_ExcludeWoutAging
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_rollup_id,
                                             pkg_os_constant_bv.gbv_GenObjObjectState,
                                             pkg_db_reconciliation.gStatus_MarkedExclude
                                        );

                                        --
                                        --  Check if this Rollup already exists in the list
                                        --  If not, then add it to the List
                                        --

                                        if v_fitem_recon_batch_list.exists(v_fitem_recon_batch_id)
                                        then

                                             if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '......... Recon Batch ID: '||v_fitem_recon_batch_id||' already exist in the list for Exclude Process'
                                             );

                                             end if;

                                        else

                                             v_fitem_recon_batch_list(v_fitem_recon_batch_id) := v_fitem_recon_batch_id;

                                        end if;

                                   end if; -- if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)

                              end if; --if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)

                         end if; -- if v_fitem_recon_batch_id is not null

                    end if; -- if v_fitem_term_billing_method = gBillingMethod_Agency

               exception
                    when others then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '|||Exception while processing Agency Billed handling for '||
                              'Term Billing Method: ' ||v_fitem_term_billing_method||
                              ', Recon Batch ID: '||v_fitem_recon_batch_id||
                              ', Recon Status: '||v_recon_batch_status_id||
                              ', Rollup ID: '||v_fitem_rollup_id||
                              ', Rollup Status: '||v_rollup_status_id||
                              sqlcode || ' : ' || SYS.DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || ' Stack:'||dbms_utility.format_error_stack
                         );

                         raise;

               end;

               -----------------------------------------------------------------------------------------------
               -- Common Handling
               -----------------------------------------------------------------------------------------------

               --
               --  Get the Installment ID from the Target FItem
               --

               select
                    installment_id
               into
                    v_fitem_installment_id
               from
                    dragon_fitem
               where
                    fitem_id = r_target_fitem.fitem_id;

               --
               --  Check if this Installment already exists in the list
               --  If not, then add it to the List
               --

               -- 7817
               if v_fitem_installment_id is not null
               then
                    
                    if io_fitem_installment_list.exists(v_fitem_installment_id)
                    then

                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Installment ID already exist in the list : '||v_fitem_installment_id
                              );

                         end if;

                    else

                         io_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;
                         
                         if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......... Installment ID added to the list : '||v_installment_object_id
                              );

                         end if;

                    end if;

                    /*if v_fitem_installment_list.exists(v_fitem_installment_id)
                    then

                         if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Housekeeping Task: Installment ID already exist in the list for Datamart Update : '||v_fitem_installment_id
                         );

                         end if;

                    else

                         v_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;

                    end if;*/
                    
                    -- end 7817

               end if;

               --
               -- Set the Processing Date to Current Date
               --

               v_fichange_process_date :=    NVL(in_current_date_time,
                                             pkg_os_time.fn_os_sysdate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_fi_change_id
                                             ));  --OSBILLING-7829

               v_fichange_action       :=    gFIChange_Change;

               v_fichange_amount   :=   r_target_fitem.balance*(-1);

               -- OSBILLING-650 To cater to rollback of change in paymentplan

               if ( in_policy_transaction_type  = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
               then
                    v_fichange_amount := (v_fichange_amount*-1);
               end if;

               v_sum_include   :=   gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Creating FIChange for Target FItem ID: '|| r_target_fitem.fitem_id
                         ||' FIChange Action to payoff the offset: '||v_fichange_action
                         || ' FIChange Amount in apply: '||v_fichange_amount
                         || ' Current Total before apply: ' || v_cur_total_amount
                    );

               end if;

               --
               -- Call the FIChange creation procedure with the input parameters identified hitherto
               --

              /* --VAULTDEV-6645
               if abs(v_cur_total_amount)< abs(v_fichange_amount)
                    then
                         v_fichange_amount :=v_cur_total_amount;
               end if;  */-- commented by rashmi

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  in_fi_trx_id,
                    out_fichange_id                =>  v_fi_change_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_fichange_amount,
                    in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                    in_fichange_ref_pol            =>  in_master_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_billaccount_parent_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Created FIChange object ID: ' || v_fi_change_id
                    );

               end if;

               --
               -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
               --

               --
               -- Update the FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    r_target_fitem.fitem_id,
                    v_datamart_tf
               );


               v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
               --v_applied_amount := v_applied_amount + v_fichange_amount;

                 v_existing_fitem_change_tf := 'T'; -- KR 12/20

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Current Total after apply: ' || v_cur_total_amount
                    );

               end if;
          end loop;-- instalemnt FItems

          --
          --  moved to the outerloop incase the total of fitems is zero
          --
          --Start Kiran changes OSPRODUCT-31717
          if nvl(v_pol_trx_subtype_for_End,0) not in (gChangeBillingMethod)
               then
          --End Kiran changes OSPRODUCT-31717
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_installment_object_id,
               gbv_Install_IsCrrntPayPlanInst,
               gInstalmnt_CrntPayPlan_False
          );
          --Start Kiran changes OSPRODUCT-31717
          end if;        
          --End Kiran changes OSPRODUCT-31717

          -- 7817          
          if v_installment_object_id is not null
          then
                    
               if io_fitem_installment_list.exists(v_installment_object_id)
               then

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Installment ID already exist in the list : '||v_installment_object_id
                         );

                    end if;

               else

                    io_fitem_installment_list(v_installment_object_id) := v_installment_object_id;
                    
                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Installment ID added to the list : '||v_installment_object_id
                         );

                    end if;
                    
               end if;
               
          end if;
          
          /*-- Datamart update of the installment 
          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_installment_object_id,
               v_datamart_tf
          );*/
          -- end 7817

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Could not find oustanding fitems to close. So, updating the CurrentPaymentPlan Installment Flag to false for Installment ID : '||v_installment_object_id
               );

          end if;

          v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

     end loop;     -- while v_scheduled_payment_index is not null loop


    if v_existing_fitem_change_tf = 'T'    -- KR 12/20
    then

     v_fichange_action       :=    gFIChange_Change;

     --
     -- Call the FIChange creation procedure with the input parameters identified hitherto
     --
     --                   if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
     --                      and in_prior_billing_method_id is not null -- so change billing method
     --                   then
     -- we are creating the offset of what was taken out

     v_cur_total_amount_start := (v_cur_total_amount_start + v_cur_total_amount) * (-1);

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Applied amount on FItem associated with old Installments. Now close the previously created Offset FItem (Change Credit): ' || v_fitem_id
               || ' with opposite Amount: ' || v_cur_total_amount_start
          );

     end if;

     if v_cur_total_amount_start <> 0 and v_due_fitem_flag = 1
     then

          pkg_db_object.sp_fichange_create
          (
               in_session_id                  =>  in_session_id,
               in_transaction_id              =>  in_transaction_id,
               in_parent_fitransaction_id     =>  in_fi_trx_id,
               out_fichange_id                =>  v_fi_change_id,
               in_fichange_action             =>  v_fichange_action,
               in_fichange_action_delta       =>  v_cur_total_amount_start,
               in_fichange_ref_fitem          =>  v_fitem_id,
               in_fichange_sum_include        =>  v_sum_include,
               in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
               in_fichange_ref_pol            =>  in_master_policy_id,
               in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
               in_fichange_belongs_to         =>  v_billaccount_parent_id
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' ...... Create the FIChange object after collecting all the BV values' || v_fi_change_id
               );

          end if;

          --
          -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
          --

          --
          -- Update the FItem Datamart
          --

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_id,
               v_datamart_tf
          );

       end if;

end if; --- KR 12/20 

     --
     --  Loop through all identified Recon Statements and call the Recon Exclude Process
     --

     if v_fitem_recon_batch_list.count > 0
     then

          v_fitem_recon_batch_index := v_fitem_recon_batch_list.first;

          while v_fitem_recon_batch_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Calling the Recon Exclude Process for Recon Batch ID: '
                         || v_fitem_recon_batch_list(v_fitem_recon_batch_index)
                    );

               end if;

               pkg_db_reconciliation.sp_exclude_recon_items
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_recon_batch_list(v_fitem_recon_batch_index),
                    io_action_outcome_id
               );

               v_fitem_recon_batch_index := v_fitem_recon_batch_list.next(v_fitem_recon_batch_index);

          end loop;

     end if;

     --
     --  Update the Datamart of all unique Installments associated with this Cash Apply process
     --
     
     -- [RR] Datamart update. Can be moved to the caller
     -- 7817
     /*if v_fitem_installment_list.count > 0
     then

          v_fitem_installment_index := v_fitem_installment_list.first;

          while v_fitem_installment_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updating the Datamart for Installment ID: '
                         || v_fitem_installment_list(v_fitem_installment_index)
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_installment_list(v_fitem_installment_index),
                    v_datamart_tf
               );

               v_fitem_installment_index := v_fitem_installment_list.next(v_fitem_installment_index);

          end loop;

     end if;*/
     -- end 7817

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;


exception
  when others then
  pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Exception '||
                    sqlerrm(sqlcode)
               );
raise;-- Keerthi Added  to find out the issue - 07/02
end sp_reversal_fitem_fichange;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_cs_reversal_fitem_fichange
--   %USAGE
--          This procedure will is custome proc for fullpay Discount handling and creates the fitems and fichange as passed in by sp_create_reversal_offsets
--          it then uses this amount to apply to the corresponding fitems to reverse the balance
--          by creating the fichanges
--          Finally it reduces the balance on the offsetting fitem from what was applied
--
--          This also creates  Receivables under the appropriate BillingAccount
--          parts of this code was originally under sp_change_payplan_process. Broke it out when using for change billing method as well
--
--   %ALGORITHM
--

-----------------------------------------------------------------------------------------------------------------------------------------------------


procedure sp_cs_reversal_fitem_fichange
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_earlier_pay_plan_id             in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null, -- used for billing method change
     in_current_date_time               in             date default null,
     in_FITrxType_Generate              in             number,
     in_billing_account                 in             object.object_id%type,
     in_offset_billing_account          in             object.object_id%type,
     in_fi_trx_id                       in             object.object_id%type,
     in_element_category                in             number,
     in_element_subcategory             in             number,
     in_element_amount_total            in             number,
     in_billing_element_id              in             number,
     in_create_debit_tf                 in             char,
     in_create_credit_tf                in             char,
     in_debit_run                       in             number

)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_cs_create_reversal_fitem_fichange';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_amount                   number;
     v_element_amount_total             number;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_element_category                 number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_creator_poltrns          object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_fi_change_amount                 number;
     v_PaymentPlan_md                   constant business_variable.business_variable_id%type        :=   212015;
     v_payment_md_id                    object.object_id%type;
     v_fitem_type                       number;
     v_offset_fitem_type                number;
     v_credit_billing_account           object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_debit_billing_account            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_offset_fitem_id                  object.object_id%type;
     v_offset_fi_change_id              object.object_id%type;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fitem_id                         object.object_id%type;
     v_fitem_id_hold                    object.object_id%type;
     v_sum_include                      number;
     v_fichange_process_date            date;
     v_fi_trx_id                        object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_installment_number               number;
     v_fitramsactopm_id                 object.object_id%type;
     v_cur_total_amount                 number;
     v_cur_total_amount_start           number;
     v_applied_amount                   number := 0;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;
     v_mod_installment_object_id        object.object_id%type;
     v_PolicyCurr_Term                  business_variable.business_variable_id%type;
     v_installment_object_id            object.object_id%type;
     v_debit_tf                         char(1) := '1';
     v_credit_tf                        char(1) := '2';
     v_debit_run                        number := 1;
     v_fitem_term_billing_method        number;
     v_fitem_rollup_id                  object.object_id%type;
     v_rollup_status_id                 object_state.object_state_id%type;
     v_fitem_recon_batch_id             object.object_id%type;
     v_recon_batch_status_id            object_state.object_state_id%type;
     v_fitem_recon_batch_list           t_fitem_installment_tab;
     v_fitem_recon_batch_index          number;
     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           t_fitem_installment_tab;
     v_fitem_installment_index          number;
     v_subcategory                      number;
     v_due_fitem_flag                   number;
     cursor c_target_fitem
            (
               in_policy_id   in   number,
               in_billing_account_id in number,
               in_policy_term_id in number,
               in_installment_id in number,
               v_subcategory in number,
               in_fitem_id in number
            )
     is
          select
               *
          from
               dragon_fitem a
          where
               policy_id =    in_policy_id
          and
               billing_account_id = in_billing_account_id
          and
               policy_term_id = in_policy_term_id
          and
               ((installment_id =    in_installment_id)
               or
               (v_subcategory = gFitem_SubCat_Premium and installment_id is null)
               )
          and
               balance   <>    0.00
          and
               ((a.billing_element_md_id = in_billing_element_id)
               or
               (a.FITEM_SUB_CATEGORY_ID = pkg_db_object.gFitem_SubCat_Discount and v_subcategory = gFitem_SubCat_Premium ))--OSBILLING-7448
          and
               a.fitem_id <> in_fitem_id
          and
               (
                    (a.fitem_type_id = gFItem_Credit and a.earning_status <> 'Earned')
                    or
                    a.fitem_type_id = gFItem_Debit
               )
          --and a.billing_account_id <> in_offset_billing_account -- Keerthi OSBILLING-5267
          order by
                a.BILLING_ELEMENT_MD_ID desc, a.fitem_category_id; --OSBILLING-7448


begin

     --
     --  Cleanup Tasks
     --
     v_fitem_installment_list.delete;
     v_fitem_recon_batch_list.delete;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||------ Element MD ID: '||in_billing_element_id
               || ' Element Amount: '||in_element_amount_total
               || ' FItem/FItransaction Type: '|| in_FITrxType_Generate
               || ' Billing Account ID: '||  in_billing_account
               || ' Offset Billing Account ID: '|| in_offset_billing_account
               || ' Element Category ID: '|| in_element_category
               || ' Element Subcategory ID: '|| in_element_subcategory
               || ' Element Create Debit?(True=1 False=2) '|| in_create_debit_tf
               || ' Element Create Credit?(True=1 False=2) '|| in_create_credit_tf
               || ' FItransaction ID: '|| in_fi_trx_id
               || ' Earlier Payment Plan Object ID: '||in_earlier_pay_plan_id
               || ' Chosen Payment Plan Object ID: '||in_chosen_pay_plan_id
               || ' Modified Payment Plan Object ID: '||in_mod_pay_plan_id
               || ' Prior Billing Method (set only if we are changing Billing Method): ' || in_prior_billing_method_id
               || ' Desired Billing Method: '|| in_policy_billing_method

          );

     end if;

     --
     -- Get the Writing Company associated with the Policy
     --

     v_writing_company_id := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          in_ptp_id,
          pkg_db_object.gbv_WritingCompany
     );

     v_fitem_type    := in_FITrxType_Generate;
     v_billing_account := in_billing_account;
     v_element_amount_total := in_element_amount_total;

     --
     --  Get the parent entity id of billing account Object
     --

     v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account,
                                        gbv_BillingAccountParent
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Parent entity of billing account '||v_billing_account||
               ' - '||v_billaccount_parent_id
          );

     end if;

     if in_offset_billing_account is not null
     then

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_fitem_type = gFItem_Debit
          then

               v_offset_fitem_type := gFItem_Credit;

          else

               v_offset_fitem_type := gFItem_Debit;

          end if;

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    in_offset_billing_account,
               out_fitem_id                 =>    v_offset_fitem_id,
               in_fitem_debit_credit        =>    v_offset_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account),
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' created on Billing Account: '||v_billaccount_parent_id
                    ||' Offset FItem ID: '|| v_offset_fitem_id
                    ||' created on Billing Account: '||in_offset_billing_account
               );

          end if;

     else

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               out_offset_FItem_id          =>    v_offset_fitem_id, -- Added another parameter to create an offset on the Writing Company
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' Writing Company offset FItem ID: '|| v_offset_fitem_id
               );

          end if;

     end if;

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     --
     -- Handling the rollback
     --

     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then
          v_fichange_amount   :=   v_element_amount_total * (-1);
     else
          v_fichange_amount   :=   v_element_amount_total;

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for FItem ID: '||v_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  v_billaccount_parent_id
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --


     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
     in_session_id,
     in_transaction_id,
     v_fitem_id,
     v_datamart_tf
     );

     ------------------------------------------------------------------------------------------------------
     -- FIChange for Offset Account
     ------------------------------------------------------------------------------------------------------

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     -- OSBILLING-650 Added to cater to the rollback
     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then

          v_fichange_amount   :=   v_element_amount_total;

     else

          v_fichange_amount   :=   v_element_amount_total * (-1);

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for Offset FItem ID: '||v_offset_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_offset_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_offset_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  nvl(pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account), v_writing_company_id)
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --

     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_offset_fitem_id,
          v_datamart_tf
     );
     select
          DEBIT_FITEM_SUB_CATEGORY
     into
          v_subcategory
     from
          db_billing_element
     where
          db_billing_element_id = in_billing_element_id;

     if v_subcategory <> pkg_db_object.gFitem_SubCat_Discount   --OSBILLING-7448
     then
          --
          --  Now create the PayPlan Change Credit or Billing Method Change Credit fitems
          --  and close the old outdated installments
          --

          v_cur_total_amount := v_element_amount_total;
          v_cur_total_amount_start:= v_cur_total_amount;

          --
          --  Get the MD ID from Modified Payment Plan if we are doing PayPlan Change
          --  or MD ID from earlier Payment Plan if we are doing Billing Method Change
          --

          v_scheduled_payment_list.delete;

          if in_prior_billing_method_id is not null
          then

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_earlier_pay_plan_id,
                    gObjType_ScheduledPayment,
                    v_scheduled_payment_list,
                    gbv_ScheduledPayment_num
               );

               -- get the md to use to select from the elements

               v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_earlier_pay_plan_id,
                                             v_PaymentPlan_md
                                        );
          else

               pkg_os_object_search.sp_object_children_of_type_get
               (
                    in_session_id,
                    in_transaction_id,
                    in_chosen_pay_plan_id,
                    gObjType_ScheduledPayment,
                    v_scheduled_payment_list,
                    gbv_ScheduledPayment_num
               );

               -- get the md to use to select from the elements
               v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_chosen_pay_plan_id,
                                             v_PaymentPlan_md
                                        );
          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Payment Plan MD ID to be adjusted: '
                    ||v_payment_md_id
               );

          end if;

          --
          --  Loop through the scheduled payments associated with previous Policy Image to close old installments
          --

          v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

          while v_scheduled_payment_index is not null
          loop

               v_installment_object_id  :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_scheduled_payment_list(v_scheduled_payment_index),
                                                  gbv_ScheduledRefInstallment
                                             );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Starting clearing due amounts of Installment ID: '||v_installment_object_id
                    );

               end if;

               select
                    dpt.policy_term_billing_method_id
               into
                    v_fitem_term_billing_method
               from
                    dragon_policy_term dpt
               where
                    dpt.policy_id = in_master_policy_id
               and
                    dpt.policy_term_id = in_policy_term_id;

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... in_master_policy_id ' || in_master_policy_id ||
                         ' v_billing_account ' || v_billing_account ||
                         ' in_policy_term_id ' || in_policy_term_id ||
                         ' v_installment_object_id ' || v_installment_object_id ||
                         ' in_billing_element_id ' || in_billing_element_id ||
                         ' v_fitem_id ' || v_fitem_id ||
                         ' v_subcategory ' || v_subcategory
                    );

               end if;


               for r_target_fitem in    c_target_fitem
                                        (
                                             in_master_policy_id,
                                             v_billing_account,
                                             in_policy_term_id,
                                             v_installment_object_id,
                                             v_subcategory,
                                             v_fitem_id
                                        )
               loop


                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '..... r_target_fitem ' || r_target_fitem.fitem_id
                         );

                    end if;


                    ---------------------------------------------------------------------------------------
                    -- Agency Bill Specific Handling
                    ---------------------------------------------------------------------------------------

                    --
                    --  Mark the Rollup Items as Excluded if the financials are part of any Reconciliation
                    --  while doing the Billing Method Change or Pay Plan Change on an Agency Billed policy.
                    --
                    v_fitem_recon_batch_id := null;
                    v_fitem_rollup_id      := null;
                    v_due_fitem_flag       := 1;
                    begin

                         --
                         --  Check if the Policy is Agency Billed
                         --

                         if v_fitem_term_billing_method = gBillingMethod_Agency
                         then

                              --
                              --  Check if this Fitem is part of any Recon Statement
                              --

                              if r_target_fitem.current_recon_batch_id is not null
                              then

                                   v_fitem_recon_batch_id := r_target_fitem.current_recon_batch_id;

                              elsif r_target_fitem.related_recon_batch_id is not null
                              then

                                   v_fitem_recon_batch_id := r_target_fitem.related_recon_batch_id;

                              end if;

                              if v_fitem_recon_batch_id is not null
                              then

                                   --
                                   --  Get the status of the Recon Statement
                                   --

                                   select
                                        btrx.batch_status_id
                                   into
                                        v_recon_batch_status_id
                                   from
                                        dragon_billingaccounttrxset btrx
                                   where
                                        btrx.billingaccounttrxset_id = v_fitem_recon_batch_id;

                                   --
                                   --  Proceed only if the Recon Statement is neither processed nor reversed
                                   --

                                   if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)
                                   then

                                        --
                                        --  Get the Rollup in which this FItem is a rollup member
                                        --

                                        select
                                             ru.ru_id
                                        into
                                             v_fitem_rollup_id
                                        from
                                             dragon_rollup ru
                                        where
                                             ru.ru_parent_id = v_fitem_recon_batch_id
                                        and
                                             ru.ru_policy_id = r_target_fitem.policy_id
                                        and
                                             ru.ru_id in (select rum.rum_parent_id from dragon_rollup_member rum where rum.rum_ref_fitem = r_target_fitem.fitem_id);

                                        --
                                        --  Check the Rollup status
                                        --

                                        select
                                             ru.ru_object_state_id
                                        into
                                             v_rollup_status_id
                                        from
                                             dragon_rollup ru
                                        where
                                             ru.ru_id = v_fitem_rollup_id;

                                        --
                                        --  Proceed if the Rollup is neither Processed nor Excluded
                                        --

                                        if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)
                                        then

                                        --
                                        --  Mark the Rollup's Match Option to "Exclude Without Aging" and status to "Excluded"
                                        --

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_fitem_rollup_id,
                                                  pkg_db_reconciliation.gbv_PaymentOption,
                                                  pkg_db_reconciliation.gMatchOption_ExcludeWoutAging
                                             );

                                             pkg_os_object_io.sp_object_bv_set
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_fitem_rollup_id,
                                                  pkg_os_constant_bv.gbv_GenObjObjectState,
                                                  pkg_db_reconciliation.gStatus_MarkedExclude
                                             );

                                             --
                                             --  Check if this Rollup already exists in the list
                                             --  If not, then add it to the List
                                             --

                                             if v_fitem_recon_batch_list.exists(v_fitem_recon_batch_id)
                                             then

                                                  if v_session_control.gLogging_Full then

                                                  pkg_os_logging.sp_log
                                                  (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_procedure_name,
                                                  '......... Recon Batch ID: '||v_fitem_recon_batch_id||' already exist in the list for Exclude Process'
                                                  );

                                                  end if;

                                             else

                                                  v_fitem_recon_batch_list(v_fitem_recon_batch_id) := v_fitem_recon_batch_id;

                                             end if;

                                        end if; -- if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)

                                   end if; --if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)

                              end if; -- if v_fitem_recon_batch_id is not null

                         end if; -- if v_fitem_term_billing_method = gBillingMethod_Agency

                    exception
                         when others then

                              pkg_os_logging.sp_log_error
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '|||Exception while processing Agency Billed handling for '||
                                   'Term Billing Method: ' ||v_fitem_term_billing_method||
                                   ', Recon Batch ID: '||v_fitem_recon_batch_id||
                                   ', Recon Status: '||v_recon_batch_status_id||
                                   ', Rollup ID: '||v_fitem_rollup_id||
                                   ', Rollup Status: '||v_rollup_status_id||
                                   sqlcode || ' : ' || SYS.DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || ' Stack:'||dbms_utility.format_error_stack
                              );

                              raise;

                    end;

                    -----------------------------------------------------------------------------------------------
                    -- Common Handling
                    -----------------------------------------------------------------------------------------------

                    --
                    --  Get the Installment ID from the Target FItem
                    --

                    select
                         installment_id
                    into
                         v_fitem_installment_id
                    from
                         dragon_fitem
                    where
                         fitem_id = r_target_fitem.fitem_id;

                    --
                    --  Check if this Installment already exists in the list
                    --  If not, then add it to the List
                    --

                    if v_fitem_installment_id is not null
                    then

                         if v_fitem_installment_list.exists(v_fitem_installment_id)
                         then

                              if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log
                              (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......... Housekeeping Task: Installment ID already exist in the list for Datamart Update : '||v_fitem_installment_id
                              );

                              end if;

                         else

                              v_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;

                         end if;

                    end if;

                    --
                    -- Set the Processing Date to Current Date
                    --

                    v_fichange_process_date :=    NVL(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fi_change_id
                                                  ));  --OSBILLING-7829

                    v_fichange_action       :=    gFIChange_Change;

                    v_fichange_amount   :=   r_target_fitem.balance*(-1);

                    -- OSBILLING-650 To cater to rollback of change in paymentplan

                    if ( in_policy_transaction_type  = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
                    then
                         v_fichange_amount := (v_fichange_amount*-1);
                    end if;

                    v_sum_include   :=   gFIChange_Yes;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Creating FIChange for Target FItem ID: '|| r_target_fitem.fitem_id
                              ||' FIChange Action to payoff the offset: '||v_fichange_action
                              || ' FIChange Amount in apply: '||v_fichange_amount
                              || ' Current Total before apply: ' || v_cur_total_amount
                         );

                    end if;

                    --
                    -- Call the FIChange creation procedure with the input parameters identified hitherto
                    --

                    --VAULTDEV-6645
                    /*if abs(v_cur_total_amount)< abs(v_fichange_amount)
                         then
                              v_fichange_amount :=v_cur_total_amount;
                    end if;*/  -- commented by rashmi

                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                  =>  in_session_id,
                         in_transaction_id              =>  in_transaction_id,
                         in_parent_fitransaction_id     =>  in_fi_trx_id,
                         out_fichange_id                =>  v_fi_change_id,
                         in_fichange_action             =>  v_fichange_action,
                         in_fichange_action_delta       =>  v_fichange_amount,
                         in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                         in_fichange_sum_include        =>  v_sum_include,
                         in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                         in_fichange_ref_pol            =>  in_master_policy_id,
                         in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                         in_fichange_belongs_to         =>  v_billaccount_parent_id
                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' ...... Created FIChange object ID: ' || v_fi_change_id
                         );

                    end if;

                    --
                    -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
                    --

                    --
                    -- Update the FItem Datamart
                    --

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         r_target_fitem.fitem_id,
                         v_datamart_tf
                    );


                    v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
                    --v_applied_amount := v_applied_amount + v_fichange_amount;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Current Total after apply: ' || v_cur_total_amount
                         );

                    end if;
               end loop;-- instalemnt FItems

               --
               --  moved to the outerloop incase the total of fitems is zero
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_installment_object_id,
                    gbv_Install_IsCrrntPayPlanInst,
                    gInstalmnt_CrntPayPlan_False
               );

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_installment_object_id,
                    v_datamart_tf
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Could not find oustanding fitems to close. So, updating the CurrentPaymentPlan Installment Flag to false for Installment ID : '||v_installment_object_id
                    );

               end if;

               v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

          end loop;     -- while v_scheduled_payment_index is not null loop

          v_fichange_action       :=    gFIChange_Change;

          --
          -- Call the FIChange creation procedure with the input parameters identified hitherto
          --
          --                   if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
          --                      and in_prior_billing_method_id is not null -- so change billing method
          --                   then
          -- we are creating the offset of what was taken out

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... v_cur_total_amount_start ' || v_cur_total_amount_start ||
                    ' v_cur_total_amount ' || v_cur_total_amount
               );

          end if;


          v_cur_total_amount_start := (v_cur_total_amount_start + v_cur_total_amount ) * (-1);

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Applied amount on FItem associated with old Installments. Now close the previously created Offset FItem (Change Credit): ' || v_fitem_id
                    || ' with opposite Amount: ' || v_cur_total_amount_start
               );

          end if;

          if v_cur_total_amount_start <> 0 and v_due_fitem_flag = 1
          then

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  in_fi_trx_id,
                    out_fichange_id                =>  v_fi_change_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_cur_total_amount_start,
                    in_fichange_ref_fitem          =>  v_fitem_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                    in_fichange_ref_pol            =>  in_master_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_billaccount_parent_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values' || v_fi_change_id
                    );

               end if;

               --
               -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
               --

               --
               -- Update the FItem Datamart
               --

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_id,
                    v_datamart_tf
               );

            end if;

          --
          --  Loop through all identified Recon Statements and call the Recon Exclude Process
          --

          if v_fitem_recon_batch_list.count > 0
          then

               v_fitem_recon_batch_index := v_fitem_recon_batch_list.first;

               while v_fitem_recon_batch_index is not null
               loop

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Calling the Recon Exclude Process for Recon Batch ID: '
                              || v_fitem_recon_batch_list(v_fitem_recon_batch_index)
                         );

                    end if;

                    pkg_db_reconciliation.sp_exclude_recon_items
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_recon_batch_list(v_fitem_recon_batch_index),
                         io_action_outcome_id
                    );

                    v_fitem_recon_batch_index := v_fitem_recon_batch_list.next(v_fitem_recon_batch_index);

               end loop;

          end if;

          --
          --  Update the Datamart of all unique Installments associated with this Cash Apply process
          --

          if v_fitem_installment_list.count > 0
          then

               v_fitem_installment_index := v_fitem_installment_list.first;

               while v_fitem_installment_index is not null
               loop

                    if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updating the Datamart for Installment ID: '
                              || v_fitem_installment_list(v_fitem_installment_index)
                         );

                    end if;

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_installment_list(v_fitem_installment_index),
                         v_datamart_tf
                    );

                    v_fitem_installment_index := v_fitem_installment_list.next(v_fitem_installment_index);

               end loop;

          end if;
     else
          if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '....Skipping as Billing Element ID: ' || in_billing_element_id
                         );

                    end if;
     end if;
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;


exception
  when others then
  pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Exception '||
                    sqlerrm(sqlcode)
               );
raise;-- Keerthi Added  to find out the issue - 07/02
end sp_cs_reversal_fitem_fichange;

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_bill_deferred_prem_upd
(
     in_session_id                       in             object.object_id%type,
     in_transaction_id                   in             object.object_id%type,
     in_action_object_id                 in             object.object_id%type, --BillingAccountTrxSet
     io_action_outcome_id                in out nocopy  outcome.outcome_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_bill_deferred_prem_upd';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_billing_account_id               object.object_id%type;
     v_policy_id                               object.object_id%type;
     v_policy_term_id                   object.object_id%type;
     v_fi_trx_def_prem_id                            object.object_id%type;
     v_fi_trx_processing_date           object_bv_value.business_variable_value%type;
     v_fi_change_id                                        object.object_id%type;
     v_installment_id                                   object.object_id%type;
     v_install_withdrawal_date          object_bv_value.business_variable_value%type;
     v_installment_due_date             object_bv_value.business_variable_value%type;
     v_policy_trx_id                                   object.object_id%type;
     v_policy_exp_date                                 object_bv_value.business_variable_value%type;
     v_retro_adj_year                   number;
     v_due_date                               object_bv_value.business_variable_value%type;
     v_policy_billing_method                  number;
     v_producing_agency_id              object.object_id%type;
     v_policy_canc_date                 object_bv_value.business_variable_value%type;

     v_datamart_tf   char(1) := 'T';

     cursor c_deferred_fitem
     is
          select
               *
          from
               dragon_fitem a
          where
               a.policy_id =    v_policy_id
          and
               a.billing_account_id = v_billing_account_id
          and
               a.policy_term_id = v_policy_term_id
          and
               a.balance   <>    0.00
          and
               a.fitem_type_id = gFItem_Debit
          and
               a.fitem_category_id = pkg_db_functions.gFitem_Category_DefPremium--5446
          order by
               a.fitem_id;

begin

  v_policy_trx_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      in_action_object_id,
                                      gbv_Batrxset_RefAsscPolicyTrx
                                 );

  v_policy_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, v_policy_trx_id);

  v_policy_term_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_trx_id,
                                      gbv_PolicyTrxRefPolicyTerm
                                 );

  v_policy_exp_date := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_term_id,
                                      gbv_PolicyTermExpDate
                                 );

  v_retro_adj_year :=   to_number(nvl(pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_trx_id,
                                      gbv_PolicyTrxRetroAdjYear
                                 ),0));

  v_policy_canc_date := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      v_policy_id,
                                      pkg_db_late_process.gbv_PolicyDateCancellation
                                 );

  v_due_date := NVL(v_policy_canc_date, v_policy_exp_date);

  v_policy_billing_method  :=   pkg_os_object_io.fn_object_bv_get
                                       (
                                            in_session_id,
                                            in_transaction_id,
                                            v_policy_id,
                                            gbv_PolicyBillingMethod
                                       );

  if v_policy_billing_method = gBillingMethod_Agency
  then
       v_producing_agency_id := pkg_os_object_io.fn_object_bv_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_policy_id,
                                                 pkg_os_constant_bv.gbv_GenObjProducingAgency
                                            );

    v_billing_account_id := pkg_os_object_search.fn_object_11_child_get
                                            (
                                                 in_session_id,
                                                 in_transaction_id,
                                                 v_producing_agency_id,
                                                 gObjType_BillingAccount
                                            );
  else
    v_billing_account_id := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_action_object_id);
  end if;

  if v_session_control.gLogging_Full
  then

    pkg_os_logging.sp_log
    (
        in_session_id,
        in_transaction_id,
        v_procedure_name,
        '...... Create FITransaction Object for Deferred Premium Date Update. Policy expiration date: ' || v_due_date ||
        ' Policy Term ID: ' || v_policy_term_id || 'Policy Id: ' || v_policy_id || 'Billing Account ID: ' || v_billing_account_id || 'Retro Adj Year: ' || v_retro_adj_year
    );

  end if;

  --
  -- Create and setting values of FITransaction Object under BillingTrxSet for Deferred Premium
  --
  pkg_db_object.sp_fitransaction_create
  (
    in_session_id                   =>  in_session_id,
    in_transaction_id               =>  in_transaction_id,
    in_fitrx_parent_fitrxset_id     =>  in_action_object_id,
    out_fitransaction_id            =>  v_fi_trx_def_prem_id,
    in_fitrx_type                   =>  gFITrxDefPremUpdTrxType, --Deferred Premium Update
    in_fitrx_ref_associatedpolicy   =>  v_policy_id,
    in_fitrx_ref_actionpolicy       =>  v_policy_id,
    in_fitrx_object_state           =>  gFITrxStatus_Processed
  );

  if v_session_control.gLogging_Full
  then

    pkg_os_logging.sp_log
    (
        in_session_id,
        in_transaction_id,
        v_procedure_name,
        '......... Created reference from FItransaction Object: '||v_fi_trx_def_prem_id||
        ' to Policy Object ID:'||v_policy_id
    );
  end if;

     if v_session_control.gLogging_Full
    then

        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '......... Calling the Deferred Premium creation process for Deferred Premium FITransaction'
        );

    end if;

     for r_deferred_fitem in c_deferred_fitem
     loop

          v_installment_id := pkg_os_object_io.fn_object_bv_get
                                 (
                                      in_session_id,
                                      in_transaction_id,
                                      r_deferred_fitem.fitem_id,
                                      gbv_FItemRefInstallment
                                 );

          v_installment_due_date   :=   pkg_os_object_io.fn_object_bv_get
                                                      (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_installment_id,
                                                            gbv_installment_due_date
                                                       );

          v_install_withdrawal_date :=  pkg_os_object_io.fn_object_bv_get
                                                          (
                                                               in_session_id,
                                                               in_transaction_id,
                                                               v_installment_id,
                                                               gbv_install_withdrawal_date
                                                           );
        if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '............ Installment ID: ' || v_installment_id || ' Billing Due Date: ' || v_installment_due_date
            );

        end if;
          v_installment_due_date        := to_char(add_months(to_date(v_due_date,pkg_os_constant.dragondateformatdefault),(v_retro_adj_year*12)),pkg_os_constant.dragondateformatdefault);
          v_install_withdrawal_date := v_installment_due_date;

       if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '............ New Billing Due Date: ' || v_installment_due_date
            );

        end if;

          --need to update installment due date and withdrawal date before creating FIChange
          pkg_os_object_io.sp_object_bv_set
        (
            in_session_id,
            in_transaction_id,
            v_installment_id,
            gbv_installment_due_date,
            v_installment_due_date
        );

          pkg_os_object_io.sp_object_bv_set
        (
            in_session_id,
            in_transaction_id,
            v_installment_id,
            gbv_install_withdrawal_date,
            v_install_withdrawal_date
        );

        if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '............ Updated Due Date: ' || v_installment_due_date
            );

        end if;

          pkg_db_object.sp_fichange_create
        (
            in_session_id                  =>  in_session_id,
            in_transaction_id              =>  in_transaction_id,
            in_parent_fitransaction_id     =>  v_fi_trx_def_prem_id,
            out_fichange_id                =>  v_fi_change_id,
            in_fichange_action             =>  gFIChange_Change,
            in_fichange_action_delta       =>  0,
            in_fichange_ref_fitem          =>  r_deferred_fitem.fitem_id,
            in_fichange_process_date       =>  to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id,v_fi_change_id), pkg_os_constant.DragonDateFormatDefault),
            in_fichange_ref_pol            =>  v_policy_id,
            in_fichange_belongs_to         =>  v_billing_account_id
        );

        if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                '............ Creating FIChange of FYI type: ' || v_fi_change_id
            );

        end if;

          pkg_os_object_io.sp_object_bv_set
        (
            in_session_id,
            in_transaction_id,
            v_fi_change_id,
            pkg_db_billing_modify.gbv_comment,
            'Due date and withdrawal date were updated to: ' || v_installment_due_date
        );

        pkg_os_datamart.sp_datamart_update_row
        (
            in_session_id,
            in_transaction_id,
            r_deferred_fitem.fitem_id,
            v_datamart_tf
        );

     end loop;

    --
    -- Set the Deferred Premium FITransaction Status to Processed
    --

    pkg_os_object_io.sp_object_bv_set
    (
        in_session_id,
        in_transaction_id,
        v_fi_trx_def_prem_id,
        pkg_os_constant_bv.gbv_GenObjObjectState,
        gFITrxStatus_Processed
    );

    --
    -- Set the Processing Date for Debit FI Transaction to Current Date
    --

    v_fi_trx_processing_date :=   to_char
    (
        pkg_os_time.fn_os_sysdate
        (
            in_session_id,
            in_transaction_id,
            v_fi_trx_def_prem_id
        ),
        pkg_os_constant.DragonDateFormatDefault
    );

    pkg_os_object_io.sp_object_bv_set
    (
        in_session_id,
        in_transaction_id,
        v_fi_trx_def_prem_id,
        gbv_FITrxProcessDate,
        v_fi_trx_processing_date
    );

    --
    -- Fetch and set the Accounting Period -- OSBILLING-767
    --
    pkg_os_object_io.sp_object_bv_set
    (
        in_session_id,
        in_transaction_id,
        v_fi_trx_def_prem_id,
        pkg_db_object.gbv_FITrx_AccntingPeriod,
        pkg_db_functions.fn_get_fitransaction_acct_prd(in_session_id,in_transaction_id,v_fi_trx_def_prem_id)
    );

    --
    -- Set current FITrx reference from BillTrxSet to new FITrx
    --
    /*pkg_os_object_io.sp_object_bv_set
    (
        in_session_id,
        in_transaction_id,
        in_action_object_id,
        gbv_BillAccTrxSet_CurrTrx,
        v_fi_trx_def_prem_id
    );*/

     if v_session_control.gLogging_Full
    then

        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '......... Processed Deferred Premium FITransaction ID: '||v_fi_trx_def_prem_id
        );

    end if;

     --
    -- Update the Deferred Premium FITransaction Datamart
    --

    pkg_os_datamart.sp_datamart_update_row
    (
        in_session_id,
        in_transaction_id,
        v_fi_trx_def_prem_id,
        v_datamart_tf
    );

  io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception
  when others then
  pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Exception '||
                    sqlerrm(sqlcode)
               );
end sp_bill_deferred_prem_upd;

-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_upd_commission_adjustment
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_policy_id                       in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_schedule_element_id             in             object.object_id%type,
     in_installment_object_id           in             object.object_id%type
)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_upd_commission_adjustment';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_ultimate_temp_element_id         object.object_id%type;
     v_valid_tf                         char(1);
     v_fitem_id                         object.object_id%type;
     v_fitem_balance                    number;
     v_billing_acc_trx_set_id           object.object_id%type;
     v_fi_trx_id                        object.object_id%type;
     v_policy_trx_effective_date        object_bv_value.business_variable_value%type;
     v_fichange_process_date            date;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_sum_include                      number;
     v_fi_change_id                     object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_element_category_id              object_bv_value.business_variable_value%type;
     v_datamart_tf                      char(1) := 'T';
     v_fitem_element_id                 object.object_id%type;
     v_element_amount                   number;

     cursor c_comm_fitem
     is
          select
               df.fitem_id
          from
               dragon_fitem df
          where
               df.policy_id = in_policy_id
          and
               df.fitem_category_id = gFItem_Cat_Commission
          and
               df.installment_id = in_installment_object_id;

begin

     if v_session_control.gLogging_Full
     then
         pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name, '||||||'
               ||' Offsetting Commission fitems related to payment schedule element: '||in_schedule_element_id
               ||' in_installment_object_id '||in_installment_object_id
          );

     end if;

     v_billing_acc_trx_set_id      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_transaction_id,
                                            gbv_PolTrxRefBillingAccTrxSet
                                        );

     v_policy_trx_effective_date   :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_transaction_id,
                                             pkg_os_constant_bv.gbv_PolicyTranEffectiveDate
                                        );

     v_element_category_id         :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_schedule_element_id,
                                             gbv_ElementCategory
                                        );

     v_element_amount              :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_schedule_element_id,
                                             gbv_element_amount
                                        );

     if v_session_control.gLogging_Full
     then
         pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... For PaymentPlanScheduledPaymentElement Object ID: '
               ||in_schedule_element_id
               ||', v_element_category_id : '
               ||v_element_category_id
               ||' v_element_amount : '
               ||v_element_amount
          );
     end if;

     if v_element_category_id = gFItem_Cat_Commission
     then

          v_valid_tf               :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_schedule_element_id,
                                             gbv_ElementValidTF
                                        );

          if v_session_control.gLogging_Full
          then
              pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... For Element Object ID: '
                    ||in_schedule_element_id
                    ||' v_valid_tf : '
                    ||v_valid_tf
               );
          end if;

          if v_valid_tf = pkg_os_constant.gBoolean_No
          then

               v_ultimate_temp_element_id    :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       in_schedule_element_id,
                                                       pkg_os_constant_bv.gbv_Ultimate_Template
                                                  );

               if v_session_control.gLogging_Full
               then
                   pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... For Element Object ID: '
                         ||in_schedule_element_id
                         ||', v_ultimate_temp_element_id : '
                         ||v_ultimate_temp_element_id
                    );
               end if;

               for r_comm_fitem in c_comm_fitem
               loop

                    v_fitem_element_id  :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  r_comm_fitem.fitem_id,
                                                  gbv_FItemCreatedByElement
                                             );

                    if v_session_control.gLogging_Full
                    then
                        pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... v_fitem_element_id : '
                              ||v_fitem_element_id
                         );
                    end if;

                    if v_fitem_element_id = v_ultimate_temp_element_id
                    then

                         v_fitem_id     :=   r_comm_fitem.fitem_id;

                    end if;

               end loop;

               v_fitem_balance               :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id,
                                                       gbv_fitem_amount_due
                                                  );

               v_billing_account             :=   pkg_os_object.fn_object_parent_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fitem_id
                                                  );

               v_billaccount_parent_id       :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_billing_account,
                                                       gbv_BillingAccountParent
                                                  );

               if v_fitem_balance <> 0
               then

                   --
                   -- Create and setting values of Commission Adjustment FITransaction Object
                   --
                   pkg_db_object.sp_fitransaction_create
                   (
                        in_session_id                   =>  in_session_id,
                        in_transaction_id               =>  in_transaction_id,
                        in_fitrx_parent_fitrxset_id     =>  v_billing_acc_trx_set_id,
                        out_fitransaction_id            =>  v_fi_trx_id,
                        in_fitrx_type                   =>  gFITrxType_Comm_Adjustment,
                        in_fitrx_ref_associatedpolicy   =>  in_policy_id,
                        in_fitrx_ref_associatedpoltrx   =>  in_policy_transaction_id,
                        in_fitrx_ref_actionpolicy       =>  in_policy_id,
                        in_fitrx_ref_actionpoltrx       =>  in_policy_transaction_id,
                        in_fitrx_effective_date         =>  v_policy_trx_effective_date
                    );

                    --
                    -- Set the Processing Date to Current Date
                    --
                    v_fichange_process_date :=    pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fi_change_id
                                                  );

                    v_fichange_action       :=    gFIChange_Change;

                    v_fichange_amount   :=   v_fitem_balance*(-1);

                    v_sum_include   :=   gFIChange_Yes;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Creating FIChange for Target FItem ID: '|| v_fitem_id
                              ||' FIChange Action to payoff the offset: '||v_fichange_action
                              || ' FIChange Amount in apply: '||v_fichange_amount
                         );

                    end if;

                    --
                    -- Call the FIChange creation procedure with the input parameters identified
                    --
                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                  =>  in_session_id,
                         in_transaction_id              =>  in_transaction_id,
                         in_parent_fitransaction_id     =>  v_fi_trx_id,
                         out_fichange_id                =>  v_fi_change_id,
                         in_fichange_action             =>  v_fichange_action,
                         in_fichange_action_delta       =>  v_fichange_amount,
                         in_fichange_ref_fitem          =>  v_fitem_id,
                         in_fichange_sum_include        =>  v_sum_include,
                         in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                         in_fichange_ref_pol            =>  in_policy_id,
                         in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                         in_fichange_belongs_to         =>  v_billaccount_parent_id
                    );

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_fitem_id,
                         v_datamart_tf
                    );

                   pkg_os_datamart.sp_datamart_update_row
                   (
                        in_session_id,
                        in_transaction_id,
                        v_fi_trx_id,
                        v_datamart_tf
                   );

               end if;

          end if;

     end if;

end sp_upd_commission_adjustment;
---------------------------------------------------------------------------------------------------------------------------------------------------

--OSBILLING-3833 - Merged GCNA code in BaseDEV. Start
---------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_create_policy_pilling_pref
--
--   %USAGE
--          This procedure is for creating policy billing preferences under policy, every time there is a change in pref this object will be created
--
--        This will have payment plan md id and withdrawal date as attributes
--
--          This also creates  Receivables under the appropriate BillingAccount
--
--   %ALGORITHM
--
--
--
--   %PARAM    in_session_id                 Session ID
--   %PARAM    in_transaction_id             Transaction ID
--   %PARAM    in_policy_id                  Policy Object ID,
--   %PARAM    io_action_outcome_id          Action Outcome Id
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_create_policy_pilling_pref
(
     in_session_id                       in             object.object_id%type,
     in_transaction_id                   in             object.object_id%type,
     in_policy_id                        in             object.object_id%type,
     in_policy_trx_id                    in             object.object_id%type,
     io_action_outcome_id                in out nocopy  outcome.outcome_id%type

)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_create_Policy_Billing_Pref';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_current_bill_preference          object.object_id%type;
     v_pol_bill_preference              object.object_id%type;
     v_current_pay_plan_md_id           payment_plan.payment_plan_id%type;
     v_current_withdrawal_day           integer;
     v_policy_transaction_type          object_bv_value.business_variable_value%type;
     v_trx_payplan_md_id                payment_plan.payment_plan_id%type;
     v_trx_withdrawal_day               integer;
     v_to_be_rb_trx_id                  object.object_id%type;
     v_policy_image_id                  object.object_id%type;
     v_chosen_pay_plan_id               object.object_id%type;
     v_policy_term_id                   object.object_id%type;


begin

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||| Inside creating policy pilling preference, Policy ID : ' || in_policy_id||
               ' Policy transaction ID '||in_policy_trx_id
          );

     end if;

     v_policy_transaction_type     :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             pkg_os_constant_bv.gbv_PolicyTranType
                                        );

     v_policy_term_id              :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             gbv_PolicyTrxRefPolicyTerm
                                        );


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '... Policy Transaction Type : ' || v_policy_transaction_type||
               ' Policy term id '||v_policy_term_id

          );

     end if;

     if v_policy_transaction_type not in (pkg_os_policy_transaction.gPolicyTrxType_CancelInsured, pkg_os_policy_transaction.gPolicyTrxType_CancelNonPay)
     then

          /*if v_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback
          then

               v_to_be_rb_trx_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             pkg_os_policy_transaction.gbv_PolicyTrxRollsBckTrx
                                        );

               v_policy_image_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_to_be_rb_trx_id,
                                             gbv_PolicyTrxRefCoverages
                                        );

          else*/

               v_policy_image_id   :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_policy_trx_id,
                                             gbv_PolicyTrxRefCoverages
                                        );

          --end if;

          v_chosen_pay_plan_id     :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_policy_image_id,
                                             gbv_PolicyRefChosenPlan
                                        );

          v_trx_payplan_md_id      :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_chosen_pay_plan_id,
                                             pkg_os_constant_bv.gbv_PaymentPlanID
                                        );

          if v_policy_transaction_type <> gChangeWithdrawal
          then

               v_trx_withdrawal_day     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_policy_image_id,
                                                  32178446
                                             );

          else

               v_trx_withdrawal_day     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_policy_term_id,
                                                  gbv_prefwithdrwal_day
                                             );

          end if;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '... Payplan MD ID : ' || v_trx_payplan_md_id||
                    ' Prefered withdrwal day '||v_trx_withdrawal_day


               );

          end if;

          v_current_bill_preference     :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_policy_id,
                                                  33914446
                                             );

          if v_current_bill_preference is null
          then

               --
               -- Create the policy billng preference object
               --
               pkg_os_object.sp_object_create
               (
                    in_session_id,
                    in_transaction_id,
                    gObjType_PolBillReference,
                    in_policy_id,
                    v_pol_bill_preference
               );

               --
               -- Set current policy billng preference from policy
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    in_policy_id,
                    33914446,
                    v_pol_bill_preference
               );

               --
               -- Set payplan md id
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_pol_bill_preference,
                    33909246,
                    v_trx_payplan_md_id
               );

               --
               -- Set current policy billng preference from policy
               --
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_pol_bill_preference,
                    33908846,
                    v_trx_withdrawal_day
               );

          else

               v_current_pay_plan_md_id      :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_current_bill_preference,
                                                       33909246
                                                  );

               v_current_withdrawal_day      :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_current_bill_preference,
                                                       33908846
                                                  );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Current Payplan MD ID : ' || v_current_pay_plan_md_id||
                         ' Current Prefered withdrwal day '||v_current_withdrawal_day


                    );

               end if;

               if v_policy_transaction_type <> gChangeWithdrawal
                    and
                    (    v_current_pay_plan_md_id <> v_trx_payplan_md_id
                         or
                         v_current_withdrawal_day <> v_trx_withdrawal_day
                    )

               then

                    --
                    -- Create the policy billng preference object
                    --
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         gObjType_PolBillReference,
                         in_policy_id,
                         v_pol_bill_preference
                    );

                    --
                    -- Set current policy billng preference from policy
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_policy_id,
                         33914446,
                         v_pol_bill_preference
                    );

                    --
                    -- Set payplan md id
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_pol_bill_preference,
                         33909246,
                         v_trx_payplan_md_id
                    );

                    --
                    -- Set current policy billng preference from policy
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_pol_bill_preference,
                         33908846,
                         v_trx_withdrawal_day
                    );

               elsif v_policy_transaction_type = gChangeWithdrawal
                    and
                    v_current_withdrawal_day <> v_trx_withdrawal_day
               then

                    --
                    -- Create the policy billng preference object
                    --
                    pkg_os_object.sp_object_create
                    (
                         in_session_id,
                         in_transaction_id,
                         gObjType_PolBillReference,
                         in_policy_id,
                         v_pol_bill_preference
                    );

                    --
                    -- Set current policy billng preference from policy
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         in_policy_id,
                         33914446,
                         v_pol_bill_preference

                    );

                    --
                    -- Set payplan md id
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_pol_bill_preference,
                         33909246,
                         v_current_pay_plan_md_id

                    );

                    --
                    -- Set current policy billng preference from policy
                    --
                    pkg_os_object_io.sp_object_bv_set
                    (
                         in_session_id,
                         in_transaction_id,
                         v_pol_bill_preference,
                         33908846,
                         v_trx_withdrawal_day
                    );

               end if;

          end if;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end sp_create_policy_pilling_pref;
--OSBILLING-3833 - Merged GCNA code in BaseDEV. End

procedure sp_fitem_datamart_update_row
(
     in_session_id                  in object.object_id%type,
     in_transaction_id              in object.object_id%type,
     in_object_id                   in object.object_id%type,
     in_obj_column_value_tab        in t_obj_column_value_tab
) as
     -- Kiran OSPRODUCT-29817 start
     v_session_control                  pkg_os_session.r_dragon_session_control :=   pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name                   constant system_log.program_name%type   :=   pkg_name||'sp_fitem_datamart_update_row';
     -- Kiran OSPRODUCT-29817 end
	 
     -- DEBIT_CREDIT
     v_debit_credit varchar2(50);

     -- CUSTOMER_ID
     v_customer_id number;

     -- PRODUCT_ID
     v_product_id number(38,0);

     -- BILLING_ACCOUNT_NUMBER
     v_billing_account_number varchar2(100);

     -- GENERIC_INSTANCE_NUMBER
     v_gen_instance_num number;

     -- FITEM_BILLED_DATE
     v_fitem_billed_date date;

     -- CASH_PAYMENT_DETAILS
     v_cash_pmnt_details varchar2(200);

     -- POLICY_TRX_GENERIC_INSTANCE
     v_policy_trx_gen_instance number;

     -- AGING_STATUS_DAYS
     v_aging_status_days varchar2(100);

     -- EXCHANGE_ID
     v_exchange_id number;

     -- DATE_EFFECTIVE
     v_date_effective date;

     -- FITEM_CURRENCY
     v_fitem_currency varchar2(100);

     -- DEFAULT_PAYMENT_PROFILE
     v_default_pmnt_profile varchar2(200);

     -- CREATION_DATE
     v_creation_date varchar2(20);

     -- FITEM_BILLED_TF
     v_fitem_billed_tf char(1);

     -- AGENCY_DUE_DATE
     v_agency_due_date date;

     -- AGING_STATUS_ID
     v_aging_status_id number;

     -- AGING_STATUS_CHANGE_DATE
     v_aging_status_change_date date;

     -- POLICY_TERM_ID
     v_policy_term_id number;

     -- ACTUAL_DUE_DATE
     v_actual_due_date date;

     -- FITEM_BATCH_TYPE_NAME
     v_fitem_batch_type_name varchar2(100);

     -- BILLING_ELEMENT_MD_ID
     v_billing_element_md_id number(38,0);

     -- ACCOUNTING_PERIOD
     v_accounting_period varchar2(100);

     -- LEGACY_INSTALLMENT_NUM
     v_legacy_installment_num number;

     -- POLICY_TRX_TYPE_ID
     v_policy_trx_type_id number;

     -- VALUE_STREAM
     v_value_stream number;

     -- BI_PROCESS_DATE
     v_bi_process_date date;

     -- COMPOSITE_SEARCH_KEY
     v_composite_search_key varchar2(4000);

     -- BALANCE
     v_balance number;

     -- BILLING_ACCOUNT_STATUS
     v_billing_account_status varchar2(100);

     -- POLICY_TRANSACTION_ID
     v_policy_transaction_id number;

     -- ENTITY_ID
     v_entity_id number;

     -- POLICY_EFFECTIVE_DATE
     v_policy_effective_date date;

     -- FITEM_TYPE_ID
     v_fitem_type_id number;

     -- ACCOUNT_HOLDER_NAME
     v_account_holder_name varchar2(200);

     -- FITEM_BATCH_CREATION_DATE
     v_fitem_batch_creation_date date;

     -- CREATOR_FITRANSACTION_ID
     v_creator_fitransaction_id number;

     -- CASH_ASSOCIATED_WITH_DETAILS
     v_cash_associated_with_details varchar2(100);

     -- OBJECT_SOURCE_DESC
     v_object_source_desc varchar2(30);

     -- LEGACY_OBJECT_ID
     v_legacy_object_id number(38,0);

     -- POLICY_CPA
     v_policy_cpa number;

     -- FITEM_BATCH_TYPE_ID
     v_fitem_batch_type_id number;

     -- SUB_CATEGORY
     v_sub_category varchar2(100);

     -- INSTALLMENT_NUMBER
     v_installment_number number;

     -- REPORTING_CURRENCY
     v_reporting_currency varchar2(100);

     -- DUE_AMOUNT_REPORTING_CURRENCY
     v_due_amt_reporting_currency number;

     -- DATE_BILLING_STATUS
     v_date_billing_status date;

     -- PROCESSING_STATUS
     v_processing_status varchar2(100);

     -- USER_ID
     v_user_id number;

     -- BILLING_ACCOUNT_ID
     v_billing_account_id number;

     -- DUE_DATE
     v_due_date date;

     -- AGING_STATUS
     v_aging_status varchar2(100);

     -- BATCH_SECURITY_STATUS
     v_batch_security_status varchar2(100);

     -- FITEM_TRANSACTION_TYPE_ID
     v_fitem_trx_type_id number;

     -- FITEM_ASSET_NAME
     v_fitem_asset_name varchar2(500);

     -- POLICY_TRX_SEQ_NUM
     v_policy_trx_seq_num number;

     -- POLICY_TRX_RF_SEQ
     v_policy_trx_rf_seq number;

     -- LEGACY_ID
     v_legacy_id varchar2(100);

     -- AGING_STATUS_DAYS_ID
     v_aging_status_days_id number;

     -- FITEM_ULTIMATE_OBJECT_ID
     v_fitem_ultimate_object_id number;

     -- CATEGORY
     v_category varchar2(100);

     -- POLICY_ID
     v_policy_id number;

     -- INITIAL_AMOUNT
     v_initial_amount number;

     -- CASH_ASSOCIATED_WITH
     v_cash_associated_with number;

     -- EARNED_AMOUNT
     v_earned_amount number;

     -- EARNING_STATUS
     v_earning_status varchar2(100);

     -- FITEM_SECURITY_STATUS
     v_fitem_security_status number;

     -- FITEM_DETAIL
     v_fitem_detail varchar2(200);

     -- POLICY_TRANSACTION_NUMBER
     v_policy_transaction_number number;

     -- POLICY_TRX_RB_SEQ
     v_policy_transaction_rb_seq number;

     -- FITEM_LAST_UPT_DATE
     v_fitem_last_upd_date date;

     -- LEGACY_FITEM_ID
     v_legacy_fitem_id number(38,0);

     -- FITEM_ASSET_ID
     v_fitem_asset_id number;

     -- SESSION_ID
     v_session_id number(38,0);

     -- BILLING_METHOD
     v_billing_method varchar2(100);

     -- POLICY_NO
     v_policy_number varchar2(50);

     -- DISBURSEMENT_BATCH_ID
     v_disb_batch_id number;

     -- WITHDRAWAL_DATE
     v_withdrawal_date date;

     -- POLICY_TRX_TYPE
     v_policy_trx_type varchar2(100);

     -- COMMISSION_PCT
     v_commission_pct number(12,2);

     -- RELATED_RECON_BATCH_ID
     v_related_recon_batch_id number;

     -- POLICY_TRX_SUB_TYPE_ID
     v_policy_trx_sub_type_id number(12,0);

     -- BILLING_ACCOUNT_TYPE_ID
     v_billing_account_type_id number;

     -- FITEM_ID
     v_fitem_id number(38,0);

     -- BILLING_STATUS
     v_billing_status varchar2(100);

     -- PARTNER_ID
     v_partner_id number;

     -- UNEARNED_AMOUNT
     v_unearned_amount number;

     -- INSURED_NAME
     v_insured_name varchar2(200);

     -- CURRENT_RECON_BATCH_ID
     v_current_recon_batch_id number;

     -- FITEM_OBJECT_STATE_ID
     v_fitem_object_state_id number(12,0);

     -- OBJECT_SOURCE
     v_object_source number(12,0);

     -- TRANSACTION_ID
     v_transaction_id number(38,0);

     -- BILLING_METHOD_ID
     v_billing_method_id number(12,0);

     -- PRIORITY
     v_priority number;

     -- FITEM_CATEGORY_ID
     v_fitem_category_id number;

     -- FITEM_SUB_CATEGORY_ID
     v_fitem_sub_category_id number;

     -- PAID_AMOUNT
     v_paid_amount number;

     -- CASH_PAYMENT_TYPE
     v_cash_payment_type varchar2(100);

     -- CREATOR_FITRANSACTIONSET_ID
     v_creator_fitransactionset_id number;

     -- FITEM_BATCH_CREATOR
     v_fitem_batch_creator varchar2(100);
     
     -- OSPRODUCT-8756
     -- POLICY_TRX_OBJECT_STATE
     -- v_policy_trx_object_state number;

     -- FITEM_ALLOCATION_ID
     v_fitem_allocation_id number;

     -- ULT_PARENT_ACCOUNT_ID
     v_ult_parent_account_id number(38,0);

     -- ULT_PARENT_ACCOUNT_NAME
     v_ult_parent_account_name varchar2(100);

     -- INSTALLMENT_ID
     v_installment_id number;

     -- Kiran OSPRODUCT-29817 start
     -- FITEM_BUSINESS_RELATIONSHIP
     v_fitem_business_relationship number;
     -- Kiran OSPRODUCT-29817 end	 

     v_count number := 0;

begin
     -- Kiran OSPRODUCT-29817 start

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Updating datamart for the  Object ID: '||in_object_id
                
          );   

     end if;
      -- Kiran OSPRODUCT-29817 end  
	  
     select count(1) into v_count from DRAGON_FITEM where fitem_id =  in_object_id;
     
     -- 1 Fitem ID
     v_fitem_id := in_object_id;
     
     -- 2 Policy Transaction ID
     begin
          
          v_policy_transaction_id := in_obj_column_value_tab('POLICY_TRANSACTION_ID');
          
     exception
          
          when others then
               
               v_policy_transaction_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.211343' );

     end;
     
     -- 3 Policy Transaction Number     
     begin
          
          v_policy_transaction_number := in_obj_column_value_tab('POLICY_TRANSACTION_NUMBER');
          
     exception
          
          when others then
               
               v_policy_transaction_number := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.32214598' );

     end;
     
     -- 4 Transaction generic instance numbr    
     begin
          
          v_policy_trx_gen_instance := in_obj_column_value_tab('POLICY_TRX_GENERIC_INSTANCE');
          
     exception
          
          when others then
               
               v_policy_trx_gen_instance := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.211662' );

     end;
     
     -- Calculated
     -- Transaction Sequence Number
     -- v_policy_trx_seq_num := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 9792246);
     -- Below is what the rule is doing
     -- 5 Rollback Transaction Number     
     begin
          
          v_policy_trx_seq_num := in_obj_column_value_tab('POLICY_TRX_SEQ_NUM');
          
     exception
          
          when others then
               
               v_policy_trx_seq_num := NVL(v_policy_transaction_number, v_policy_trx_gen_instance); 

     end;
     
     -- 6 Rollback Transaction Number     
     begin
          
          v_policy_transaction_rb_seq := in_obj_column_value_tab('POLICY_TRX_RB_SEQ');
          
     exception
          
          when others then
               
               v_policy_transaction_rb_seq := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.27919702.211662' );

     end;
     
     -- 7 Rollforward Transaction Number     
     begin
          
          v_policy_trx_rf_seq := in_obj_column_value_tab('POLICY_TRX_RF_SEQ');
          
     exception
          
          when others then
               
               v_policy_trx_rf_seq := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.27922805.211662' );

     end;
     
     -- 8 Transaction object state
     -- OSPRODUCT-8756
     /*begin
          
          v_policy_trx_object_state := in_obj_column_value_tab('POLICY_TRX_OBJECT_STATE');
          
     exception
          
          when others then
               
               v_policy_trx_object_state := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.210153' );

     end;*/
     
     -- 9 Transaction effective date
     begin
          
          v_policy_effective_date := in_obj_column_value_tab('POLICY_EFFECTIVE_DATE');-- null
          
     exception
          
          when others then
               
               --OSPRODUCT-15383
			/*
			begin
                    select
                         pt.policy_trx_eff_date
                    into
                         v_policy_effective_date
                    from 
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               */
			
               if v_policy_effective_date is null then
                    
                    v_policy_effective_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29721246.504' ),'YYYYMMDDHH24MISS');
               
               end if;

     end;
     
     -- 10 Transaction Type ID
     begin
          
          v_policy_trx_type_id := in_obj_column_value_tab('POLICY_TRX_TYPE_ID');
          
     exception
          
          when others then
               
               begin
                    select
                         pt.policy_trx_type_id
                    into
                         v_policy_trx_type_id
                    from 
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_policy_trx_type_id is null then
                    
                    v_policy_trx_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.212030' );
               
               end if;

     end;
     
     -- Calculated expression
     -- Checked the rule it relies on 2 BV. So didnt replaced it with DM get
     -- 11 Policy Trx Type   
     begin
          
          v_policy_trx_type := in_obj_column_value_tab('POLICY_TRX_TYPE');
          
     exception
          
          when others then
               
               v_policy_trx_type := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 10477546);

     end;
     
     -- 12 Transaction Sub Type ID
     begin
          
          v_policy_trx_sub_type_id := in_obj_column_value_tab('POLICY_TRX_SUB_TYPE_ID');
          
     exception
          
          when others then
               
               begin
                    select
                         pt.policy_trx_subtype_id
                    into
                         v_policy_trx_sub_type_id
                    from 
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_policy_trx_sub_type_id is null then
                    
                    v_policy_trx_sub_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.26542407' );

               end if;

     end;
     
     -- 13 Policy ID
     begin
          
          v_policy_id := in_obj_column_value_tab('POLICY_ID');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               /*begin
                    select
                         pt.policy_id
                    into
                         v_policy_id
                    from 
                         dragon_policy_trx pt
                    where
                         pt.policy_trx_id = v_policy_transaction_id;
                         
               exception
                    when no_data_found then
                         null;
               end;*/
               
               if v_policy_id is null then
                    
                    v_policy_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29721246.211343' );
               
               end if;

     end;
     
     -- 14 Policy number
     begin
          
          v_policy_number := in_obj_column_value_tab('POLICY_NO');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               begin
                    select
                         p.policy_number
                    into
                         v_policy_number
                    from 
                         dragon_policy p
                    where
                         p.policy_id = v_policy_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_policy_number is null then
                    
                    v_policy_number := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29721246.231' );
               
               end if;

     end;
     
     -- 15 Policy product ID
     begin
          
          v_product_id := in_obj_column_value_tab('PRODUCT_ID');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               begin
                    select
                         p.policy_product_id
                    into
                         v_product_id
                    from 
                         dragon_policy p
                    where
                         p.policy_id = v_policy_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_product_id is null then
                    
                    v_product_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29721246.211636' );
               
               end if;

     end;
     
     -- 16 Policy term ID
     begin
          
          v_policy_term_id := in_obj_column_value_tab('POLICY_TERM_ID');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               /*begin
                    select
                         p.policy_product_id
                    into
                         v_product_id
                    from 
                         dragon_policy p
                    where
                         p.policy_id = v_policy_id;
                         
               exception
                    when no_data_found then
                         null;
               end;*/
               
               if v_policy_term_id is null then
                    
                    v_policy_term_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32080346.211343' );
               
               end if;

     end;
     
     -- 17 Customer ID
     begin
          
          v_customer_id := in_obj_column_value_tab('CUSTOMER_ID');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               begin
                    select
                         p.customer_id
                    into
                         v_customer_id
                    from 
                         dragon_policy p
                    where
                         p.policy_id = v_policy_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_customer_id is null then
                    
                    v_customer_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id, '29721246.29252214.211343' );
     
               end if;
     end;        
     
     -- 18 Billing Account ID
     begin
          
          v_billing_account_id := in_obj_column_value_tab('BILLING_ACCOUNT_ID');
          
     exception
          
          when others then
               
               if v_billing_account_id is null then
                    
                    v_billing_account_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.211343' );
     
               end if;
     end;        
     
     -- 19 Partner ID
     begin
          
          v_partner_id := in_obj_column_value_tab('PARTNER_ID');
          
     exception
          
          when others then
               
               begin
                    select
                         b.partner_object_id
                    into
                         v_partner_id
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_partner_id is null then
                    
                    v_partner_id := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8233246);
     
               end if;
     end;        
     
     -- 20 Billing Account Number
     begin
          
          v_billing_account_number := in_obj_column_value_tab('BILLING_ACCOUNT_NUMBER');
          
     exception
          
          when others then
               
               begin
                    select
                         b.account_number
                    into
                         v_billing_account_number
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_billing_account_number is null then
                    
                    v_billing_account_number := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.29711246' );
     
               end if;
     end;        
     
     -- 21 Billing Account Type ID
     begin
          
          v_billing_account_type_id := in_obj_column_value_tab('BILLING_ACCOUNT_TYPE_ID');
          
     exception
          
          when others then
               
               begin
                    select
                         b.account_type_id
                    into
                         v_billing_account_type_id
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_billing_account_type_id is null then
                    
                    v_billing_account_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.29711346' );

     
               end if;
     end;
     
     -- 22 Billing Account Holder Name
     begin
          
          v_account_holder_name := in_obj_column_value_tab('ACCOUNT_HOLDER_NAME');
          
     exception
          
          when others then
               
               begin
                    select
                         b.primary_contact_name
                    into
                         v_account_holder_name
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;
               
               if v_account_holder_name is null then
                    
                    v_account_holder_name := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.29974846' );

               end if;
     end;
     
     -- 23 Ultimate Parent Account ID
     begin
          
          v_ult_parent_account_id := in_obj_column_value_tab('ULT_PARENT_ACCOUNT_ID');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               /*begin
                    select
                         b.ultimate_parent_id
                    into
                         v_ult_parent_account_id
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;*/
               
               if v_ult_parent_account_id is null then
                    
                    v_ult_parent_account_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.33866846.211343' );

               end if;
     end;
     
     -- 24 Ultimate Parent Account Name
     begin
          
          v_ult_parent_account_name := in_obj_column_value_tab('ULT_PARENT_ACCOUNT_NAME');
          
     exception
          
          when others then
               
               -- Check if DM can be used.
               /*begin
                    select
                         b.ultimate_parent_id
                    into
                         v_ult_parent_account_id
                    from 
                         dragon_billingaccount b
                    where
                         b.billingaccount_id = v_billing_account_id;
                         
               exception
                    when no_data_found then
                         null;
               end;*/
               
               if v_ult_parent_account_name is null then
                    
                    v_ult_parent_account_name := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704146.33866846.211882' );

               end if;
     end;
     
     -- 25 Insured Name
     begin
          
          v_insured_name := in_obj_column_value_tab('INSURED_NAME');
          
     exception
          
          when others then
               
               v_insured_name := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29721246.29252214.29253414.29382614' );
     
     end;
     
     -- 26 Entity ID
     begin
          
          v_entity_id := in_obj_column_value_tab('ENTITY_ID');
          
     exception
          
          when others then
               
               v_entity_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748546.211343' );
     
     end;
     
     -- 27 Installment ID
     begin
          
          v_installment_id := in_obj_column_value_tab('INSTALLMENT_ID');
          
     exception
          
          when others then
               
               v_installment_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704446.211343' );
     
     end;
     
     -- 28 Installment Number
     begin
          
          v_installment_number := in_obj_column_value_tab('INSTALLMENT_NUMBER'); 
          
     exception
          
          when others then
               
               begin
                    
                    select
                         si.installment_number
                    into
                         v_installment_number
                    from
                         dragon_scheduled_installment si
                    where
                         si.installment_id = v_installment_id;
                         
               exception
                    
                    when no_data_found then
                         null;
                         
               end;
               
               if v_installment_number is null then
                    
                    v_installment_number := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704446.29718346' );
               
               end if;
               
     end;
     
     -- 29 Installment Withdrawal Date
     begin
          
          v_withdrawal_date := in_obj_column_value_tab('WITHDRAWAL_DATE');
          
     exception
          
          when others then
               
               begin
                    
                    select
                         si.withdrawal_date
                    into
                         v_withdrawal_date
                    from
                         dragon_scheduled_installment si
                    where
                         si.installment_id = v_installment_id;
                         
               exception
                    
                    when no_data_found then
                         null;
                         
               end;
               
               if v_withdrawal_date is null then
                    
                    v_withdrawal_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29704446.32178946' ),'YYYYMMDDHH24MISS');
               
               end if;
               
     end;
     
     -- 30 Fitem          
     -- Generic Instance Number     
     begin
          
          v_gen_instance_num := in_obj_column_value_tab('GENERIC_INSTANCE_NUMBER');
          
     exception
          
          when others then
                       
               v_gen_instance_num := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'211662' ); -- static
     
     end;
     
     -- 31 Ultimate Template ID
     begin
          
          v_fitem_ultimate_object_id := in_obj_column_value_tab('FITEM_ULTIMATE_OBJECT_ID');
          
     exception
          
          when others then
                       
               v_fitem_ultimate_object_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'26725601' ); -- static
     
     end;
     
     -- 32 Accounting Period
     begin
          
          v_accounting_period := in_obj_column_value_tab('ACCOUNTING_PERIOD');
          
     exception
          
          when others then
                       
               v_accounting_period := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32133440' );
     
     end;
     
     -- 33 FITEM Billed TF
     begin
          
          v_fitem_billed_tf := in_obj_column_value_tab('FITEM_BILLED_TF');
          
     exception
          
          when others then
                       
               v_fitem_billed_tf := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29998046' );
     
     end;
     
     -- 34 FITEM Security Status
     begin
          
          v_fitem_security_status := in_obj_column_value_tab('FITEM_SECURITY_STATUS');
          
     exception
          
          when others then
                       
               v_fitem_security_status := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31882246' );
     
     end;
     
     -- 35 FITEM Billing element MD ID
     begin
          
          v_billing_element_md_id := in_obj_column_value_tab('BILLING_ELEMENT_MD_ID');
          
     exception
          
          when others then
                       
               v_billing_element_md_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32199046' );
     
     end;
     
     -- OSPRODUCT-12390
     -- Fitem Currency
     begin
          
          v_fitem_currency := in_obj_column_value_tab('FITEM_CURRENCY');
          
     exception
          
          when others then
               
               v_fitem_currency := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'33076948' );
     
     end;
     
     -- 36 FITEM Legacy ID
     begin
          
          v_legacy_id := in_obj_column_value_tab('LEGACY_ID');
          
     exception
          
          when others then
                       
               v_legacy_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32547346' );
     
     end;
     
     -- 37 FITEM Legacy Installation Number
     -- Discuss if we can use if else 
     --if v_legacy_id is not null then          
     begin
               
          v_legacy_installment_num := in_obj_column_value_tab('LEGACY_INSTALLMENT_NUM');
               
     exception
               
          when no_data_found then
                            
               v_legacy_installment_num := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32550846' );
          
     end;
     --end if;
     
     -- 38 FITEM Legacy Object ID
     begin
          
          v_legacy_object_id := in_obj_column_value_tab('LEGACY_OBJECT_ID');
          
     exception
          
          when others then
                       
               v_legacy_object_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'21783501' );
     
     end;
     
     -- 39 Legacy Fitem ID
     begin
          
          v_legacy_fitem_id := in_obj_column_value_tab('LEGACY_FITEM_ID');
          
     exception
          
          when others then
                       
               v_legacy_fitem_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32550646' );
     
     end;
     
     -- 40 Value Stream
     begin
          
          v_value_stream := in_obj_column_value_tab('VALUE_STREAM');
          
     exception
          
          when others then
                       
               v_value_stream := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32773148' );
     
     end;
     
     -- 41 Cash Associated with Batch
     begin
          
          v_cash_associated_with := in_obj_column_value_tab('CASH_ASSOCIATED_WITH');
          
     exception
          
          when others then
                       
               v_cash_associated_with := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31710846' );
     
     end;
     
     -- 42 Cash Associated with Batch Details
     begin
          
          v_cash_associated_with_details := in_obj_column_value_tab('CASH_ASSOCIATED_WITH_DETAILS');
          
     exception
          
          when others then
                       
               -- v_cash_associated_with_details := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31710846' );
               -- Mapped to same BV
               v_cash_associated_with_details := v_cash_associated_with;
     
     end;
     
     -- 43 Priority
     begin
          
          v_priority := in_obj_column_value_tab('PRIORITY');
          
     exception
          
          when others then
                       
               v_priority := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29744346' );
     
     end;
     
     -- 44 Fitem Object State ID
     begin
          
          v_fitem_object_state_id := in_obj_column_value_tab('FITEM_OBJECT_STATE_ID');
     
     exception
          
          when others then
               
               v_fitem_object_state_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'210153' );
     end;
     
     -- 45 Effective date
     begin
          
          v_date_effective := in_obj_column_value_tab('DATE_EFFECTIVE');
     
     exception
          
          when others then
               
               v_date_effective := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29710446' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 46 Agency due date
     begin
          v_agency_due_date := in_obj_column_value_tab('AGENCY_DUE_DATE');
     
     exception
          
          when others then
               
               v_agency_due_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32015646' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 47 Actual Due Date
     begin
          
          v_actual_due_date := in_obj_column_value_tab('ACTUAL_DUE_DATE');
     
     exception
          
          when others then
               
               v_actual_due_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32014846' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 48 BI Process Date
     begin
          
          v_bi_process_date := in_obj_column_value_tab('BI_PROCESS_DATE');
     
     exception
          
          when others then
               
               v_bi_process_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32803348' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 49 Fitem Billed Date
     begin
          
          v_fitem_billed_date := in_obj_column_value_tab('FITEM_BILLED_DATE');
     
     exception
          
          when others then
               
               v_fitem_billed_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29998146' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 50 Aging Status Change Date
     begin
          
          v_aging_status_change_date := in_obj_column_value_tab('AGING_STATUS_CHANGE_DATE');
     
     exception
          
          when others then
               
               v_aging_status_change_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'30750646' ),'YYYYMMDDHH24MISS');

     end;
     
     -- 51 Fitem Last Update date
     begin
          
          v_fitem_last_upd_date := in_obj_column_value_tab('FITEM_LAST_UPT_DATE');
     
     exception
          
          when others then
               
               v_fitem_last_upd_date := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'21686401' ),'YYYYMMDDHH24MISS');
     end;
     
     -- 52 Fitem Trx Type ID
     begin
          
          v_fitem_trx_type_id := in_obj_column_value_tab('FITEM_TRANSACTION_TYPE_ID');
          
     exception
          
          when others then
                       
               v_fitem_trx_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31758346.29708346' );
     
     end;
     
     -- 53 Fitem Batch Creator
     begin
          
          v_fitem_batch_creator := in_obj_column_value_tab('FITEM_BATCH_CREATOR');
     
     exception
          
          when others then
               
               v_fitem_batch_creator := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31758346.29703446.210150' );
     
     end;
     
     -- 54 Fitem Asset ID
     begin
          
          v_fitem_asset_id := in_obj_column_value_tab('FITEM_ASSET_ID');
     
     exception
          
          when others then
               
               v_fitem_asset_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29719446.211343' );
               
     end;
     
     -- 55 Fitem Asset Name
     begin
          
          v_fitem_asset_name := in_obj_column_value_tab('FITEM_ASSET_NAME');
     
     exception
          
          when others then
               
               v_fitem_asset_name := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29719446.211882' );
     
     end;
     
     -- 56 Fitem Batch Type ID
     begin
          
          v_fitem_batch_type_id := in_obj_column_value_tab('FITEM_BATCH_TYPE_ID');
     
     exception
          
          when others then
               
               v_fitem_batch_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31754446.29703746.29703446.29707346' );

     end;
     
     -- 57 Creator Fitransaction ID
     begin
          
          v_creator_fitransaction_id := in_obj_column_value_tab('CREATOR_FITRANSACTION_ID');
     
     exception
          
          when others then
               
               v_creator_fitransaction_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31754446.29703746.211343' );

     end;
     
     -- 58 Commission Pct
     begin
          
          v_commission_pct := in_obj_column_value_tab('COMMISSION_PCT');
     
     exception
          
          when others then
               
               v_commission_pct := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29748446.28555504.29428314' );

     end;
     
     -- 59 Disbursement Batch
     begin
          
          v_disb_batch_id := in_obj_column_value_tab('DISBURSEMENT_BATCH_ID');
     
     exception
          
          when others then
               
               v_disb_batch_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32005946.211343' );

     end;
     
     -- 60 Related Recon Batch ID
     begin
          
          v_related_recon_batch_id := in_obj_column_value_tab('RELATED_RECON_BATCH_ID');
     
     exception
          
          when others then
               
               v_related_recon_batch_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32719946.211343' );

     end;
     
     -- 61 Current Recon Batch ID
     begin
          v_current_recon_batch_id := in_obj_column_value_tab('CURRENT_RECON_BATCH_ID');
     
     exception
          
          when others then
               
               v_current_recon_batch_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32537646.211343' );

     end;
     
     -- 62 Creator Fitransaction set ID
     begin
          v_creator_fitransactionset_id := in_obj_column_value_tab('CREATOR_FITRANSACTIONSET_ID');
     
     exception
          
          when others then
               
               v_creator_fitransactionset_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31754446.29703746.29703446.211343' );

     end;
     
     -- 63 Fitem Allocation ID     
     begin
     
          v_fitem_allocation_id := in_obj_column_value_tab('FITEM_ALLOCATION_ID');
     
     exception
          
          when others then
               
               v_fitem_allocation_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31757946.211343' );

     end;
     
     -- 64 Policy Term PAS Status
     begin
          
          v_policy_cpa := in_obj_column_value_tab('POLICY_CPA');
     
     exception
          
          when others then               
               
               if v_policy_cpa is null then 
                    
                    v_policy_cpa := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32080346.29706246' );

               end if;
     end;
     
     -- 65 Cash Payment Details
     begin
          
          v_cash_pmnt_details := in_obj_column_value_tab('CASH_PAYMENT_DETAILS');
     
     exception
          
          when others then
               
               v_cash_pmnt_details := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'26725601.31758346.31820746' );

     end;
     
     -- 66 Fitem Batch Type Name
     begin
          
          v_fitem_batch_type_name := in_obj_column_value_tab('FITEM_BATCH_TYPE_NAME');
     
     exception
          
          when others then
               
               v_fitem_batch_type_name := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 9096446);
     end;
     
     -- 67 Fitem Details
     begin
          v_fitem_detail := in_obj_column_value_tab('FITEM_DETAIL');
     
     exception
          
          when others then
               
               v_fitem_detail := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 10461146);
     end;
     
     -- 68 Creation Date
     begin
          
          v_creation_date := in_obj_column_value_tab('CREATION_DATE');
     
     exception
          
          when others then
               
               v_creation_date := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8396146);

     end;
     
     -- 69 Due Date
     begin
          
          v_due_date := in_obj_column_value_tab('DUE_DATE');
     
     exception
          
          when others then
               
               v_due_date := to_date(pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 10431146),'YYYYMMDDHH24MISS');

     end;
     
     -- 70 Earning Status
     begin
          
          v_earning_status := in_obj_column_value_tab('EARNING_STATUS');
     
     exception
          
          when others then
               
               v_earning_status := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8949246);

     end;
     
     -- 71 Billing Status
     begin
          
          v_billing_status := in_obj_column_value_tab('BILLING_STATUS');
     
     exception
          
          when others then
               
               v_billing_status := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 9472746);

     end;
     
     -- 72 Balance Amount
     begin
          
          v_balance := in_obj_column_value_tab('BALANCE');
     
     exception
          
          when others then
               
               v_balance := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8268846);
     
     end;
     
     -- 73 Initial Amount
     begin
          
          v_initial_amount := in_obj_column_value_tab('INITIAL_AMOUNT');
     
     exception
          
          when others then
               
               v_initial_amount := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8680646);
     end;
     
     -- 74 Earned Amount
     begin
          
          v_earned_amount := in_obj_column_value_tab('EARNED_AMOUNT');
     
     exception
          
          when others then
               
               v_earned_amount := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8915346);
     end;
     
     -- 75 Unearned amount
     begin
          
          v_unearned_amount := in_obj_column_value_tab('UNEARNED_AMOUNT');
     
     exception
          
          when others then
               
               v_unearned_amount := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8915446);
     
     end;
     
     -- 76 Paid Amount
     begin
          
          v_paid_amount := in_obj_column_value_tab('PAID_AMOUNT');
     
     exception
          
          when others then
               
               v_paid_amount := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8915246);
     
     end;
     
     -- Display Value
     -- 77 Category ID
     begin
          
          v_fitem_category_id := in_obj_column_value_tab('FITEM_CATEGORY_ID');
     
     exception
          
          when others then
               
               v_fitem_category_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29710146' );
     
     end;
     
     -- 78 Category Display Name
     if v_fitem_category_id is not null then
          begin
               
               v_category := in_obj_column_value_tab('CATEGORY');
          
          exception
               
               when others then
                    
                    v_category := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8235746);
          
          end;
          
     end if;
     
     -- 79 Fitem Subcategory ID
     begin
          
          v_fitem_sub_category_id := in_obj_column_value_tab('FITEM_SUB_CATEGORY_ID');
     
     exception
          
          when others then
               
               v_fitem_sub_category_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29710246' );
     
     end;
     
     -- 80 Fitem Subcategory Display Name
     if v_fitem_sub_category_id is not null then
          begin
               
               v_sub_category := in_obj_column_value_tab('SUB_CATEGORY');
          
          exception
               
               when others then
                    
                    v_sub_category := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 9340146);
          
          end;
     end if;
     
     -- 81 Billing Method ID
     begin
          
          v_billing_method_id := in_obj_column_value_tab('BILLING_METHOD_ID');
     
     exception
          
          when others then
               
               begin
                    
                    select
                         pt.policy_term_billing_method_id
                    into
                         v_billing_method_id
                    from
                         dragon_policy_term pt
                    where
                         pt.policy_term_id = v_policy_term_id;
                         
               exception
                    
                    when no_data_found then                         
                         null;
                         
               end;
                    
               if v_billing_method_id is null then
                    
                    v_billing_method_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32080346.33820346' );
               
               end if;
               
     end;
     
     -- 82 Billing Method Display name
     if v_billing_method_id is not null then
          begin
               
               v_billing_method := in_obj_column_value_tab('BILLING_METHOD');
          
          exception
               
               when others then
                    
                    begin
                         
                         select
                              pt.policy_term_billing_method
                         into
                              v_billing_method
                         from
                              dragon_policy_term pt
                         where
                              pt.policy_term_id = v_policy_term_id;
                              
                    exception
                         
                         when no_data_found then                         
                              null;
                              
                    end;
                         
                    if v_billing_method is null then
                         
                         v_billing_method := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '32080346.33820346', null, v_billing_method_id, 'F', null);
                    
                    end if;
                    
          end;
          
     end if;
     
     -- 83 Aging Status Days ID
     begin
          
          v_aging_status_days_id := in_obj_column_value_tab('AGING_STATUS_DAYS_ID');
     
     exception
          
          when others then
               
               v_aging_status_days_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'32572240' );

     end;
     
     -- 84 Aging Status Days Display Name
     if v_aging_status_days_id is not null then
          
          begin
               
               v_aging_status_days := in_obj_column_value_tab('AGING_STATUS_DAYS');
          
          exception
               
               when others then
                    
                    v_aging_status_days := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '32572240', null, v_aging_status_days_id, 'F', null);

          end;
     
     end if;
     
     -- 85 Aging Status ID
     begin
          
          v_aging_status_id := in_obj_column_value_tab('AGING_STATUS_ID');
     
     exception
          
          when others then
               
               -- Replaced with BV get
               --v_aging_status_id := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, in_object_id, 8701046);
               v_aging_status_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'30750546' );
     
     end;
     
     -- 86 Aging Status Display Name
     if v_aging_status_id is not null then
          
          begin
               
               v_aging_status := in_obj_column_value_tab('AGING_STATUS');
          
          exception
               
               when others then
                    
                    v_aging_status := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '30750546', null, v_aging_status_id, 'F', null);
          
          end;
     
     end if;
     
     -- 87 Object Source
     begin
          
          v_object_source := in_obj_column_value_tab('OBJECT_SOURCE');
     
     exception
          
          when others then
               
               v_object_source := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'27926602' );
     
     end;
     
     -- 88 Object Source Display Name
     if v_object_source is not null then
          begin
               
               v_object_source_desc := in_obj_column_value_tab('OBJECT_SOURCE_DESC');
          
          exception
               
               when others then
                    
                    v_object_source_desc := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '27926602', null, v_object_source, 'F', null);
                    
          end;
     
     end if;
     
     -- 89 Debit Credit ID
     begin
          
          v_fitem_type_id := in_obj_column_value_tab('FITEM_TYPE_ID');
     
     exception
          
          when others then
               
               v_fitem_type_id := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'29710046' );

     end;
     
     -- 90 Debit Credit Display Name
     if v_fitem_type_id is not null then
          
          begin
               
               v_debit_credit := in_obj_column_value_tab('DEBIT_CREDIT');
          
          exception
               
               when others then
                    
                    v_debit_credit := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '29710046', null, v_fitem_type_id, 'F', null);

          end;
          
     end if;
     
     -- 91 Batch Security Status
     begin
          
          v_batch_security_status := in_obj_column_value_tab('BATCH_SECURITY_STATUS');
     
     exception
          
          when others then
               
               v_batch_security_status := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'31755646' );
               v_batch_security_status := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '31755646', null, v_batch_security_status, 'F', null);

     end;     
     
     -- 92 Cash Payment Type
     begin
          
          v_cash_payment_type := in_obj_column_value_tab('CASH_PAYMENT_TYPE');
     
     exception
          
          when others then
               
               v_cash_payment_type := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,'26725601.31758346.30744646' );
               v_cash_payment_type := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, in_object_id, '26725601.31758346.30744646', null, v_cash_payment_type, 'F', null);

     end;
	 
     -- Kiran OSPRODUCT-29817 start
     begin
            v_fitem_business_relationship := in_obj_column_value_tab ('FITEM_BUSINESS_RELATIONSHIP');            
      exception

          when others then
                v_fitem_business_relationship := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_object_id,PKG_DB_CONSTANT.gbv_FinancialBusinessRelation );
    end;       
     -- Kiran OSPRODUCT-29817 end
     
     if v_count <> 0 then

          -- Kiran OSPRODUCT-29817 start
          if v_session_control.gLogging_Full
          then
        
                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '...... Update datamart DRAGON_FITEM for the FITEM  Object ID: '||in_object_id
                        
                  );
        
          end if;
          -- Kiran OSPRODUCT-29817 end
		  
          update DRAGON_FITEM set
               DEBIT_CREDIT = v_debit_credit
               ,CUSTOMER_ID = v_customer_id
               ,PRODUCT_ID = v_product_id
               ,BILLING_ACCOUNT_NUMBER = v_billing_account_number
               ,GENERIC_INSTANCE_NUMBER = v_gen_instance_num
               ,FITEM_BILLED_DATE = v_fitem_billed_date
               ,CASH_PAYMENT_DETAILS = v_cash_pmnt_details
               ,POLICY_TRX_GENERIC_INSTANCE = v_policy_trx_gen_instance
               ,AGING_STATUS_DAYS = v_aging_status_days
               ,EXCHANGE_ID = v_exchange_id
               ,DATE_EFFECTIVE = v_date_effective
               ,FITEM_CURRENCY = v_fitem_currency
               ,DEFAULT_PAYMENT_PROFILE = v_default_pmnt_profile
               ,CREATION_DATE = v_creation_date
               ,FITEM_BILLED_TF = v_fitem_billed_tf
               ,AGENCY_DUE_DATE = v_agency_due_date
               ,AGING_STATUS_ID = v_aging_status_id
               ,AGING_STATUS_CHANGE_DATE = v_aging_status_change_date
               ,POLICY_TERM_ID = v_policy_term_id
               ,ACTUAL_DUE_DATE = v_actual_due_date
               ,FITEM_BATCH_TYPE_NAME = v_fitem_batch_type_name
               ,BILLING_ELEMENT_MD_ID = v_billing_element_md_id
               ,ACCOUNTING_PERIOD = v_accounting_period
               ,LEGACY_INSTALLMENT_NUM = v_legacy_installment_num
               ,POLICY_TRX_TYPE_ID = v_policy_trx_type_id
               ,VALUE_STREAM = v_value_stream
               ,BI_PROCESS_DATE = v_bi_process_date
               ,COMPOSITE_SEARCH_KEY = v_composite_search_key
               ,BALANCE = v_balance
               ,BILLING_ACCOUNT_STATUS = v_billing_account_status
               ,POLICY_TRANSACTION_ID = v_policy_transaction_id
               ,ENTITY_ID = v_entity_id
               ,POLICY_EFFECTIVE_DATE = v_policy_effective_date
               ,FITEM_TYPE_ID = v_fitem_type_id
               ,ACCOUNT_HOLDER_NAME = v_account_holder_name
               ,FITEM_BATCH_CREATION_DATE = v_fitem_batch_creation_date
               ,CREATOR_FITRANSACTION_ID = v_creator_fitransaction_id
               ,CASH_ASSOCIATED_WITH_DETAILS = v_cash_associated_with_details
               ,OBJECT_SOURCE_DESC = v_object_source_desc
               ,LEGACY_OBJECT_ID = v_legacy_object_id
               ,POLICY_CPA = v_policy_cpa
               ,FITEM_BATCH_TYPE_ID = v_fitem_batch_type_id
               ,SUB_CATEGORY = v_sub_category
               ,INSTALLMENT_NUMBER = v_installment_number
               ,REPORTING_CURRENCY = v_reporting_currency
               ,DUE_AMOUNT_REPORTING_CURRENCY = v_due_amt_reporting_currency
               ,DATE_BILLING_STATUS = v_date_billing_status
               ,PROCESSING_STATUS = v_processing_status
               ,USER_ID = v_user_id
               ,BILLING_ACCOUNT_ID = v_billing_account_id
               ,DUE_DATE = v_due_date
               ,AGING_STATUS = v_aging_status
               ,BATCH_SECURITY_STATUS = v_batch_security_status
               ,FITEM_TRANSACTION_TYPE_ID = v_fitem_trx_type_id
               ,FITEM_ASSET_NAME = v_fitem_asset_name
               ,POLICY_TRX_SEQ_NUM = v_policy_trx_seq_num
               ,POLICY_TRX_RF_SEQ = v_policy_trx_rf_seq
               ,LEGACY_ID = v_legacy_id
               ,AGING_STATUS_DAYS_ID = v_aging_status_days_id
               ,FITEM_ULTIMATE_OBJECT_ID = v_fitem_ultimate_object_id
               ,CATEGORY = v_category
               ,POLICY_ID = v_policy_id
               ,INITIAL_AMOUNT = v_initial_amount
               ,CASH_ASSOCIATED_WITH = v_cash_associated_with
               ,EARNED_AMOUNT = v_earned_amount
               ,EARNING_STATUS = v_earning_status
               ,FITEM_SECURITY_STATUS = v_fitem_security_status
               ,FITEM_DETAIL = v_fitem_detail
               ,POLICY_TRANSACTION_NUMBER = v_policy_transaction_number
               ,POLICY_TRX_RB_SEQ = v_policy_transaction_rb_seq
               ,FITEM_LAST_UPT_DATE = v_fitem_last_upd_date
               ,LEGACY_FITEM_ID = v_legacy_fitem_id
               ,FITEM_ASSET_ID = v_fitem_asset_id
               ,SESSION_ID = in_session_id
               ,BILLING_METHOD = v_billing_method
               ,POLICY_NO = v_policy_number
               ,DISBURSEMENT_BATCH_ID = v_disb_batch_id
               ,WITHDRAWAL_DATE = v_withdrawal_date
               ,POLICY_TRX_TYPE = v_policy_trx_type
               ,COMMISSION_PCT = v_commission_pct
               ,RELATED_RECON_BATCH_ID = v_related_recon_batch_id
               ,POLICY_TRX_SUB_TYPE_ID = v_policy_trx_sub_type_id
               ,BILLING_ACCOUNT_TYPE_ID = v_billing_account_type_id
               ,FITEM_ID = v_fitem_id
               ,BILLING_STATUS = v_billing_status
               ,PARTNER_ID = v_partner_id
               ,UNEARNED_AMOUNT = v_unearned_amount
               ,INSURED_NAME = v_insured_name
               ,CURRENT_RECON_BATCH_ID = v_current_recon_batch_id
               ,FITEM_OBJECT_STATE_ID = v_fitem_object_state_id
               ,OBJECT_SOURCE = v_object_source
               ,TRANSACTION_ID = in_transaction_id
               ,BILLING_METHOD_ID = v_billing_method_id
               ,PRIORITY = v_priority
               ,FITEM_CATEGORY_ID = v_fitem_category_id
               ,FITEM_SUB_CATEGORY_ID = v_fitem_sub_category_id
               ,PAID_AMOUNT = v_paid_amount
               ,CASH_PAYMENT_TYPE = v_cash_payment_type
               ,CREATOR_FITRANSACTIONSET_ID = v_creator_fitransactionset_id
               ,FITEM_BATCH_CREATOR = v_fitem_batch_creator
               -- OSPRODUCT-8756
               --,POLICY_TRX_OBJECT_STATE = v_policy_trx_object_state
               ,FITEM_ALLOCATION_ID = v_fitem_allocation_id
               ,ULT_PARENT_ACCOUNT_ID = v_ult_parent_account_id
               ,ULT_PARENT_ACCOUNT_NAME = v_ult_parent_account_name
               ,INSTALLMENT_ID = v_installment_id
			   ,FITEM_BUSINESS_RELATIONSHIP = v_fitem_business_relationship -- Kiran OSPRODUCT-29817			   
          where FITEM_ID = in_object_id;

     else
          -- Kiran OSPRODUCT-29817 start
          if v_session_control.gLogging_Full
          then
        
                  pkg_os_logging.sp_log
                  (
                       in_session_id,
                       in_transaction_id,
                       v_procedure_name,
                       '...... Insert record into datamart DRAGON_FITEM for the FITEM  Object ID: '||in_object_id
                        
                  );
        
          end if;
          -- Kiran OSPRODUCT-29817 end
		  
          insert into DRAGON_FITEM (
                DEBIT_CREDIT
               ,CUSTOMER_ID
               ,PRODUCT_ID
               ,BILLING_ACCOUNT_NUMBER
               ,GENERIC_INSTANCE_NUMBER
               ,FITEM_BILLED_DATE
               ,CASH_PAYMENT_DETAILS
               ,POLICY_TRX_GENERIC_INSTANCE
               ,AGING_STATUS_DAYS
               ,EXCHANGE_ID
               ,DATE_EFFECTIVE
               ,FITEM_CURRENCY
               ,DEFAULT_PAYMENT_PROFILE
               ,CREATION_DATE
               ,FITEM_BILLED_TF
               ,AGENCY_DUE_DATE
               ,AGING_STATUS_ID
               ,AGING_STATUS_CHANGE_DATE
               ,POLICY_TERM_ID
               ,ACTUAL_DUE_DATE
               ,FITEM_BATCH_TYPE_NAME
               ,BILLING_ELEMENT_MD_ID
               ,ACCOUNTING_PERIOD
               ,LEGACY_INSTALLMENT_NUM
               ,POLICY_TRX_TYPE_ID
               ,VALUE_STREAM
               ,BI_PROCESS_DATE
               ,COMPOSITE_SEARCH_KEY
               ,BALANCE
               ,BILLING_ACCOUNT_STATUS
               ,POLICY_TRANSACTION_ID
               ,ENTITY_ID
               ,POLICY_EFFECTIVE_DATE
               ,FITEM_TYPE_ID
               ,ACCOUNT_HOLDER_NAME
               ,FITEM_BATCH_CREATION_DATE
               ,CREATOR_FITRANSACTION_ID
               ,CASH_ASSOCIATED_WITH_DETAILS
               ,OBJECT_SOURCE_DESC
               ,LEGACY_OBJECT_ID
               ,POLICY_CPA
               ,FITEM_BATCH_TYPE_ID
               ,SUB_CATEGORY
               ,INSTALLMENT_NUMBER
               ,REPORTING_CURRENCY
               ,DUE_AMOUNT_REPORTING_CURRENCY
               ,DATE_BILLING_STATUS
               ,PROCESSING_STATUS
               ,USER_ID
               ,BILLING_ACCOUNT_ID
               ,DUE_DATE
               ,AGING_STATUS
               ,BATCH_SECURITY_STATUS
               ,FITEM_TRANSACTION_TYPE_ID
               ,FITEM_ASSET_NAME
               ,POLICY_TRX_SEQ_NUM
               ,POLICY_TRX_RF_SEQ
               ,LEGACY_ID
               ,AGING_STATUS_DAYS_ID
               ,FITEM_ULTIMATE_OBJECT_ID
               ,CATEGORY
               ,POLICY_ID
               ,INITIAL_AMOUNT
               ,CASH_ASSOCIATED_WITH
               ,EARNED_AMOUNT
               ,EARNING_STATUS
               ,FITEM_SECURITY_STATUS
               ,FITEM_DETAIL
               ,POLICY_TRANSACTION_NUMBER
               ,POLICY_TRX_RB_SEQ
               ,FITEM_LAST_UPT_DATE
               ,LEGACY_FITEM_ID
               ,FITEM_ASSET_ID
               ,SESSION_ID
               ,BILLING_METHOD
               ,POLICY_NO
               ,DISBURSEMENT_BATCH_ID
               ,WITHDRAWAL_DATE
               ,POLICY_TRX_TYPE
               ,COMMISSION_PCT
               ,RELATED_RECON_BATCH_ID
               ,POLICY_TRX_SUB_TYPE_ID
               ,BILLING_ACCOUNT_TYPE_ID
               ,FITEM_ID
               ,BILLING_STATUS
               ,PARTNER_ID
               ,UNEARNED_AMOUNT
               ,INSURED_NAME
               ,CURRENT_RECON_BATCH_ID
               ,FITEM_OBJECT_STATE_ID
               ,OBJECT_SOURCE
               ,TRANSACTION_ID
               ,BILLING_METHOD_ID
               ,PRIORITY
               ,FITEM_CATEGORY_ID
               ,FITEM_SUB_CATEGORY_ID
               ,PAID_AMOUNT
               ,CASH_PAYMENT_TYPE
               ,CREATOR_FITRANSACTIONSET_ID
               ,FITEM_BATCH_CREATOR
               --,POLICY_TRX_OBJECT_STATE -- OSPRODUCT-8756
               ,FITEM_ALLOCATION_ID
               ,ULT_PARENT_ACCOUNT_ID
               ,ULT_PARENT_ACCOUNT_NAME
               ,INSTALLMENT_ID
               ,FITEM_BUSINESS_RELATIONSHIP-- Kiran OSPRODUCT-29817			   
          ) values (
                v_debit_credit
               ,v_customer_id
               ,v_product_id
               ,v_billing_account_number
               ,v_gen_instance_num
               ,v_fitem_billed_date
               ,v_cash_pmnt_details
               ,v_policy_trx_gen_instance
               ,v_aging_status_days
               ,v_exchange_id
               ,v_date_effective
               ,v_fitem_currency
               ,v_default_pmnt_profile
               ,v_creation_date
               ,v_fitem_billed_tf
               ,v_agency_due_date
               ,v_aging_status_id
               ,v_aging_status_change_date
               ,v_policy_term_id
               ,v_actual_due_date
               ,v_fitem_batch_type_name
               ,v_billing_element_md_id
               ,v_accounting_period
               ,v_legacy_installment_num
               ,v_policy_trx_type_id
               ,v_value_stream
               ,v_bi_process_date
               ,v_composite_search_key
               ,v_balance
               ,v_billing_account_status
               ,v_policy_transaction_id
               ,v_entity_id
               ,v_policy_effective_date
               ,v_fitem_type_id
               ,v_account_holder_name
               ,v_fitem_batch_creation_date
               ,v_creator_fitransaction_id
               ,v_cash_associated_with_details
               ,v_object_source_desc
               ,v_legacy_object_id
               ,v_policy_cpa
               ,v_fitem_batch_type_id
               ,v_sub_category
               ,v_installment_number
               ,v_reporting_currency
               ,v_due_amt_reporting_currency
               ,v_date_billing_status
               ,v_processing_status
               ,v_user_id
               ,v_billing_account_id
               ,v_due_date
               ,v_aging_status
               ,v_batch_security_status
               ,v_fitem_trx_type_id
               ,v_fitem_asset_name
               ,v_policy_trx_seq_num
               ,v_policy_trx_rf_seq
               ,v_legacy_id
               ,v_aging_status_days_id
               ,v_fitem_ultimate_object_id
               ,v_category
               ,v_policy_id
               ,v_initial_amount
               ,v_cash_associated_with
               ,v_earned_amount
               ,v_earning_status
               ,v_fitem_security_status
               ,v_fitem_detail
               ,v_policy_transaction_number
               ,v_policy_transaction_rb_seq
               ,v_fitem_last_upd_date
               ,v_legacy_fitem_id
               ,v_fitem_asset_id
               ,in_session_id
               ,v_billing_method
               ,v_policy_number
               ,v_disb_batch_id
               ,v_withdrawal_date
               ,v_policy_trx_type
               ,v_commission_pct
               ,v_related_recon_batch_id
               ,v_policy_trx_sub_type_id
               ,v_billing_account_type_id
               ,v_fitem_id
               ,v_billing_status
               ,v_partner_id
               ,v_unearned_amount
               ,v_insured_name
               ,v_current_recon_batch_id
               ,v_fitem_object_state_id
               ,v_object_source
               ,in_transaction_id
               ,v_billing_method_id
               ,v_priority
               ,v_fitem_category_id
               ,v_fitem_sub_category_id
               ,v_paid_amount
               ,v_cash_payment_type
               ,v_creator_fitransactionset_id
               ,v_fitem_batch_creator
               --,v_policy_trx_object_state -- OSPRODUCT-8756
               ,v_fitem_allocation_id
               ,v_ult_parent_account_id
               ,v_ult_parent_account_name
               ,v_installment_id
               ,v_fitem_business_relationship-- Kiran OSPRODUCT-29817			   
          );

     end if;


exception
when others then
     pkg_os_logging.sp_log_error(in_session_id, in_transaction_id, 'sp_fitem_datamart_update_row', SQLERRM);
     raise;

end sp_fitem_datamart_update_row;

-- KR CR
procedure sp_cpp_termstrt_createoffset
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_earlier_pay_plan_id             in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null, -- used for billing method change
     in_current_date_time               in             date default null,
     in_delete_payer_tf                 in             char     default 'F' --VAULTDEV-6645

)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_cpp_termstrt_createoffset';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_amount                   float:= 0;
     v_element_amount_total             float;
     v_element_amount_total_debit       float;
     v_element_amount_total_credit      float;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_element_category                 number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_creator_poltrns          object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_fi_change_amount                 number;
     v_PaymentPlan_md                   constant business_variable.business_variable_id%type        :=   212015;
     v_payment_md_id                    object.object_id%type;
     v_FITrxType_Generate               number;
     v_credit_billing_account           object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_debit_billing_account            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_fichange_action                  number;
     v_fichange_amount                  float;
     v_fitem_id                         object.object_id%type;
     v_fitem_id_hold                    object.object_id%type;
     v_sum_include                      number;
     v_fichange_process_date            date;
     v_fi_trx_id                        object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_installment_number               number;
     v_inst_actual_due_date             date;
     v_fitramsactopm_id                 object.object_id%type;
     v_cur_total_amount                 float;
     v_cur_total_amount_start           float;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;
     v_mod_installment_object_id        object.object_id%type;
     v_PolicyCurr_Term                  business_variable.business_variable_id%type;
     v_installment_object_id            object.object_id%type;
     v_installment_balance              float;
     v_pol_applied_amount_tot           float;
     v_payment_plan_md_row              pkg_db_payplan_modify.getPaymentPlanList%rowtype; -- Arun - MUSTDEV-48737
     v_billing_element_md_row           db_billing_element%rowtype;
     v_payable_earned_amount            float;
     v_category_applied_amount          float;
     v_category_total_applied           float;
     v_element_final_amount             float;
     v_stat_record                      dragon_transaction_stats%rowtype;
     v_element_coverage_id              number;
     v_installment_index                number := 0;
     v_installment_list                 t_AllInstallment;
     v_writing_company_id               object.object_id%type;
     v_writing_company_acc_id           object.object_id%type;
     v_bill_method_change_flag          business_variable.business_variable_id%type;
     -- Arun - Start
     v_fullpay_SubCat_id                object.object_id%type; --OSBILLING-7448
     v_modified_pay_plan_flag           number := 0;
     v_policy_transaction_sub_type      number := 0;
     v_pol_applied_amount_tota          float;
     -- Arun - End
      v_existing_fitem_change_tf  char := 'F'; -- [KR 12/20]
      --OSPRODUCT-12737 start
      v_ptp_payer                        object.object_id%type;
      v_multipayer_enabled_tf            char;
      v_count                            number;
      v_billing_account_list             pkg_db_object.t_billing_account_list;
      v_billing_account_indx             number:=0;
      v_counter                          number:=0;
      v_installment_object_id1           object.object_id%type;
      v_new_scheduled_payment_list       pkg_os_object.t_object_list;
      v_new_scheduled_payment_indx       number:=0;
      v_current_flag                     object_bv_value.business_variable_value%type;
      --OSPRODUCT-12737 end
      v_fitem_debit_credit               number:=0;  --OSPRODUCT-14077
    cursor c_target_element_id
            (
               in_payplan_id   in   number
            )
     is
          select
               distinct ( a.db_billing_element_id)

          from
               db_payment_plan_detail a
          where
               a.payment_plan_id = in_payplan_id;


     --
     --  Cursor for getting open Installments for a given Payment Plan and Billing Method
     --

     cursor c_getNonZeroInstallments
     (
          in_policy_id            in    object.object_id%type,
          in_policy_term_id       in    object.object_id%type,
          in_payment_plan_md_id   in    payment_plan.payment_plan_id%type,
          in_billing_method_id    in    number
     )
     is
          select
               *
          from
               dragon_scheduled_installment
          where
               policy_id = in_policy_id
          and
               policy_term_id = in_policy_term_id
          and
               payment_plan_md_id = in_payment_plan_md_id
          and
               billing_method_id = in_billing_method_id
          and
               billing_due_date is not null
          and
               balance_amount <> 0
          ;
     --OSPRODUCT-12737 start
     cursor c_source_fitem(in_billing_Account_id object.object_id%type, in_writing_company_acc_id object.object_id%type)
       is
          select
               f.fitem_id,f.balance,f.billing_account_id
          from
               dragon_fitem f
          where
               f.policy_id =    in_master_policy_id
          and
               f.policy_term_id = in_policy_term_id
          and
               f.policy_transaction_id = in_policy_transaction_id
          and
               f.installment_id is null
          and
               f.balance   <>    0.00
          and
               f.creator_fitransactionset_id = in_billing_acc_trx_set_id
          and 
               (
                    f.billing_account_id = in_billing_Account_id
                    or 
                    (
                         in_billing_Account_id is null 
                         and 
                         f.billing_account_id <> in_writing_company_acc_id
                    )
               )
          order by
               f.fitem_category_id;
     cursor c_target_fitem 
     (
          in_billing_account_id object.object_id%type,
          in_payplan_flag       varchar2,
          in_fitem_debit_credit  number
     )
     is
          select
               f.fitem_id,f.balance,f.installment_id
          from
               dragon_fitem f, dragon_scheduled_installment dsi
          where
               f.policy_id =    in_master_policy_id
          and
               f.billing_account_id = in_billing_account_id
          and
               f.policy_term_id = in_policy_term_id
          and
               f.installment_id =  dsi.installment_id
          and
               dsi.policy_id = in_master_policy_id
          and
               upper(dsi.current_pay_plan_inst) = in_payplan_flag
          and
               ((in_fitem_debit_credit = gFitem_Debit and f.balance   < 0) or (in_fitem_debit_credit = gFitem_Credit and f.balance   > 0))
          and
               f.billing_element_md_id is not null
          and
               (
                    (
                    f.fitem_type_id = gFItem_Credit and f.earning_status <> 'Earned'
                    )
                    or
                    f.fitem_type_id = gFItem_Debit
               )
          order by
               f.installment_id,f.fitem_category_id;
          --OSPRODUCT-12737 end
begin
     -- PRODUCT-3926
     /*--
     -- 2016-08-10 Cheryl osbilling-2844 - because we create payplans changes
     --                                    based on the balance remaining we will
     --                                    use the new payment schedule to determine
     --                                    the element totals vs using the old and
     --                                    trying to subtract out the paid

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_mod_pay_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list,
          gbv_ScheduledPayment_num
     );

     -- get the md to use to select from the elements

     v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                              (
                                in_session_id,
                                in_transaction_id,
                                in_mod_pay_plan_id,
                                v_PaymentPlan_md
                              );

     v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);
     */
     
     
     if in_prior_billing_method_id is not null
     then

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_earlier_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_earlier_pay_plan_id,
                                     v_PaymentPlan_md
                                   );

          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);


     elsif
          in_prior_billing_method_id is null -- OSBILLING-4516
     and
          in_earlier_pay_plan_id is not null
     /*and
          in_chosen_pay_plan_id = in_mod_pay_plan_id --Keerthi */
     then
          -- [RR] again a child search for may be same payemnt plan
          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_earlier_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_earlier_pay_plan_id,
                                     v_PaymentPlan_md
                                   );
          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);


     else
          --
          -- 2016-08-10 Cheryl osbilling-2844 - because we create payplans changes
          --                                    based on the balance remaining we will
          --                                    use the new payment schedule to determine
          --                                    the element totals vs using the old and
          --                                    trying to subtract out the paid

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_mod_pay_plan_id,
               gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               gbv_ScheduledPayment_num
          );

          -- get the md to use to select from the elements

          v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                                   (
                                     in_session_id,
                                     in_transaction_id,
                                     in_mod_pay_plan_id,
                                     v_PaymentPlan_md
                                   );

          v_payment_plan_md_row := pkg_db_payplan_modify.fn_payment_plan_row(v_payment_md_id);



     end if; -- if in_prior_billing_method_id is not null

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... For PaymentPlanScheduledPayment Object ID: '
               ||v_scheduled_payment_list.count
               ||',in_earlier_pay_plan_id: '
               ||in_earlier_pay_plan_id
               || ', in_chosen_pay_plan_id '
               || in_chosen_pay_plan_id
               || ' modified plan: ' || in_mod_pay_plan_id
               || ' v_payment_md_id: '
               || v_payment_md_id
               || ' in_fi_trx_credit_id '
               || in_fi_trx_credit_id
               || 'in_fi_trx_debit_id '
               || in_fi_trx_debit_id
          );

     end if;

     --
     --  Before closing the old installments, create a list if installments with non-zero balance
     --
     v_installment_list.delete;

     for r_installment in c_getNonZeroInstallments
     (
          in_master_policy_id,
          in_policy_term_id,
          v_payment_md_id,
          in_prior_billing_method_id
     )
     loop

          v_installment_index := v_installment_index + 1;

          v_installment_list(v_installment_index) := r_installment.installment_id;

     end loop;

     --
     --  Get the Billing Method Change Flag to check if Billing Method was ever changed for this term
     --  Based on this, the amounts for offsetting the Payables is identified
     --



     --
     --  Get the Writing Company
     --

     v_writing_company_id          :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             in_ptp_id,
                                             pkg_db_object.gbv_WritingCompany
                                        );

     v_writing_company_acc_id      :=   pkg_os_object_search.fn_object_11_child_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_writing_company_id,
                                             gObjType_BillingAccount
                                        );
     --
     --  Loop through all Metadata Billing Elements mapped with the Payment Plan MD ID
     --  to identify the amount for creating the Offset
     --

     for r_element_id in c_target_element_id( v_payment_md_id)
     loop

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Identifying the Total Element Amount for Billing Element ID: '
                    ||r_element_id.db_billing_element_id
                    ||' Element Name: '||pkg_db_functions.fn_get_fitem_element_name(in_session_id, in_transaction_id, r_element_id.db_billing_element_id)
               );

          end if;

          v_element_amount_total := 0;
          v_cur_total_amount_start := 0;
          v_cur_total_amount := 0;
          v_element_final_amount := 0;
          v_pol_applied_amount_tot := 0; -- KR 12/20
          v_pol_applied_amount_tota := 0; ---- KR 12/20

          if v_scheduled_payment_list.count > 0 -- loop thru each payment
          then

               v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

               while v_scheduled_payment_index is not null
               loop

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Considering PaymentPlanScheduledPayment Object ID: '
                              ||v_scheduled_payment_list(v_scheduled_payment_index)
                         );

                    end if;



                    v_scheduled_element_list.delete;

                    -- Get the elements for the payment
                    pkg_os_object_search.sp_object_children_of_type_get
                    (
                         in_session_id,
                         in_transaction_id,
                         v_scheduled_payment_list(v_scheduled_payment_index),
                         gObjType_ScheduledElement,
                         v_scheduled_element_list
                    );


          if v_scheduled_element_list.count > 0
          then

               v_scheduled_element_index := v_scheduled_element_list.first;

               while v_scheduled_element_index is not null loop

                    -- Loop thru each element of the installnent to see if matches the element we are on
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... For PaymentPlanScheduledPaymenElement Objects : '
                              ||v_scheduled_element_list(v_scheduled_element_index)
                         );
                    end if;

                    v_schedule_element_id := v_scheduled_element_list(v_scheduled_element_index);

                    v_billing_element_md_id  :=   pkg_os_object_io.fn_object_bv_get
                                                  (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_schedule_element_id,
                                                  gbv_billing_element_id
                                                  );

                    if v_billing_element_md_id = r_element_id.db_billing_element_id
                    then

                         v_billing_element_md_row :=  pkg_db_payplan_modify.fn_billing_element_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_billing_element_md_id
                         );

                         -- they equal so need to add amount to total of element
                         v_element_amount         :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_element_amount
                                                       );

                         v_element_debit_category :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_schedule_element_id,
                                                       gbv_debit_category
                                                       );

                         v_element_debit_subcategory   :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_debit_sub_category
                                                            );

                         v_element_credit_category     :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_credit_category
                                                            );

                         v_element_credit_subcategory  :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_credit_sub_category
                                                            );

                         v_create_debit_tf             :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_create_debit_flag
                                                            );

                         v_create_credit_tf            :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_create_credit_flag
                                                            );

                         v_element_creator_poltrns     :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_ElementRefCreatorPolTrns
                                                            );

                         v_IncludeInPayScheduleTF      :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_IncludeInPayScheduleTF
                                                            );

                         v_coverage_object_id          :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_ScheduledElementRefAsset
                                                            );

                         v_debit_billing_account       :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_ElementRefDebitBillAcc
                                                            );

                         v_credit_billing_account      :=   pkg_os_object_io.fn_object_bv_get
                                                            (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_schedule_element_id,
                                                            gbv_ElementRefCreditBillAcc
                                                            );


                         v_element_amount_total := v_element_amount_total + v_element_amount;

                    end if; -- if v_billing_element_md_id = r_element_id.db_billing_element_id

                    v_scheduled_element_index := v_scheduled_element_list.next( v_scheduled_element_index );

               end loop;  --v_scheduled_element_index

          end if; -- if v_scheduled_element_list.count > 0

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... For Billing Element ID: '||r_element_id.db_billing_element_id
                    ||' Total Element Amount: '||v_element_amount_total
               );

          end if;

          v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

     end loop;     -- while v_scheduled_payment_index is not null loop

         end if;  -- if v_scheduled_payment_list.count > 0

          --
          --  Based on Element Type (Debit/Credit), identify the final amount for adjustment
          --

          if v_element_amount_total <> 0
          then

               --
               --  If the Billing Element is a receivable OR (receivable + payable), then check the applied amount
               --

               if (v_billing_element_md_row.billing_elem_calc_type is null or
                    v_billing_element_md_row.billing_elem_calc_type = 1) then

                    v_element_final_amount := v_element_amount_total - v_pol_applied_amount_tot;

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Final Billing Element Amount (Post cash-application adjustments):'


                              || v_element_final_amount
                              || ':Cash Applied :' || v_pol_applied_amount_tot
                         );

                    end if;

               else

                    --
                    --  When the Billing Element is either Payable only,
                    --  then identify the final amount by excluding the Earned Amount and any partially paid installment
                    --

                    --OSPRODUCT-2036 start
                    -- Arun XXXX
               
                   v_modified_pay_plan_flag           :=   pkg_os_object_io.fn_object_bv_get
                                                           (
                                                                in_session_id,
                                                                in_transaction_id,
                                                                in_ptp_id,
                                                                gbv_PTP_ProcessModPayPlanInd
                                                           );    
                                                                
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Arun 2222' 
                              || ' v_policy_transaction_sub_type ' || v_policy_transaction_sub_type
                              || ' v_modified_pay_plan_flag ' || v_modified_pay_plan_flag
                              || ' in_mod_pay_plan_id ' || in_mod_pay_plan_id
                              || ' in_chosen_pay_plan_id '  || in_chosen_pay_plan_id
                         );

                    end if;
                    
               
                    --f v_policy_transaction_sub_type = 1 and v_modified_pay_plan_flag = 1                    
                    if v_modified_pay_plan_flag = 1
                    then
                         v_payable_earned_amount := nvl(pkg_db_payplan_modify.fn_get_element_earned_amount
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_policy_transaction_id,
                                                         v_payment_md_id,
                                                         v_billing_element_md_row,
                                                         'F',
                                                         nvl(in_chosen_pay_plan_id,in_mod_pay_plan_id)
                                                    ), 0 );
                    else
                    --OSPRODUCT-2036 end
                         v_payable_earned_amount := nvl(pkg_db_payplan_modify.fn_get_element_earned_amount
                                                    (
                                                         in_session_id,
                                                         in_transaction_id,
                                                         in_policy_transaction_id,
                                                         v_payment_md_id,
                                                         v_billing_element_md_row,
                                                         'F',                       -- OSBILLING-4478
                                                         nvl(in_earlier_pay_plan_id,in_mod_pay_plan_id)     -- OSBILLING-4478
                                                    ), 0 );
                    end if;  --OSPRODUCT-2036

                    v_category_applied_amount :=   0;
                    v_category_total_applied  :=   0;

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Getting the applied amount for the PolicyTerm ID: '||in_policy_term_id
                              ||', Payment Plan MD ID: '||v_payment_md_id
                              ||', Billing Method ID: '||in_prior_billing_method_id
                         );

                    end if;

                    v_installment_index := v_installment_list.first;

                    while v_installment_index is not null
                    loop


                         v_category_applied_amount :=  pkg_db_payplan_modify.fn_get_cat_applied_amount
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_installment_list(v_installment_index),
                                                            v_billing_element_md_row.credit_fitem_category
                                                       );

                         v_category_total_applied      :=   v_category_total_applied + nvl(v_category_applied_amount, 0);

                         v_installment_index           :=   v_installment_list.next(v_installment_index);

                    end loop;


                    v_element_final_amount :=   (v_element_amount_total + v_payable_earned_amount) - v_category_total_applied; --KR 12/20

                  --  v_element_final_amount :=   (v_element_amount_total - v_payable_earned_amount) - v_category_total_applied; --KR 12/20

                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '... Initial Element Amount: '||v_element_amount_total
                              ||', Earned Amount: '||v_payable_earned_amount
                              ||', Category level applied amount: '||v_category_total_applied
                              ||', Final Billing Element Amount (Post payable earning adjustments and category level applied amount):'
                              || v_element_final_amount
                         );

                    end if;

               end if; -- if ( v_billing_element_md_row.create_debit_tf is not null and v_billing_element_md_row.create_debit_tf = 'T' )

          end if; -- if v_element_amount_total <> 0

          if v_element_final_amount <> 0
          then

               --  we have an amount so create the fitem and fichange
               --  determine if this is going to be a debit or credit based on what it was before
               --  now we will do the opposite
               --  the element_amount is a positive for the credit amounts here (fitem is negative) and we want the amount to be positive so leave
               --  the debit amount we need to * -1


               if   ( v_debit_billing_account is not null and v_credit_billing_account is not null and v_debit_billing_account <> v_writing_company_acc_id ) -- OSBILLING-5267
                    or
                    ( v_debit_billing_account is not null and v_credit_billing_account is null and  v_debit_billing_account <> v_writing_company_acc_id )
               then

                    v_FITrxType_Generate := gFItem_debit;
                    v_billing_account    := v_debit_billing_account;

                    v_fi_trx_id := in_fi_trx_debit_id;

                    v_element_category := v_element_debit_category;
                    v_element_subcategory := v_element_debit_subcategory;
                    --OSBILLING-5437 start
                    if v_credit_billing_account = v_writing_company_acc_id then
                       v_element_subcategory := v_element_credit_subcategory;
                    End If;
                    --OSBILLING-5437 end
                         -- End OSBILLING-5238

                    v_element_amount_total_debit := v_element_final_amount * (-1) ;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... For reverse_fitem_fichange for debit: '
                         ||'v_element_final_amount ' ||v_element_final_amount
                         ||', v_pol_applied_amount_tot: '||v_pol_applied_amount_tot
                         ||', element_amount: '||v_element_amount_total_debit
                         || ' v_debit_billing_account ' || v_debit_billing_account
                         || ' v_credit_billing_account ' || v_credit_billing_account
                         || ' v_create_debit_tf ' || v_create_debit_tf
                         || ' r_element_id.db_billing_element_id ' || r_element_id.db_billing_element_id
                         || ' v_create_credit_ft ' || v_create_credit_tf
                         || ' v_billing_account: ' || v_billing_account
                         );

                    end if;

                    --
                    --  Create the DEBIT FItem and associated FIChange if there is a balance
                    --

                    if (v_element_amount_total_debit <> 0 and (v_billing_element_md_row.billing_elem_calc_type is null

                          or v_billing_element_md_row.billing_elem_calc_type =1)
                          and v_billing_element_md_row.debit_fitem_category <> 5646)
                    then--OSBILLING-5141

                              sp_cpp_termstrt_fitem_fichnge
                              (
                              in_session_id                      =>             in_session_id,
                              in_transaction_id                  =>             in_transaction_id,
                              in_ptp_id                          =>             in_ptp_id,
                              in_policy_transaction_id           =>             in_policy_transaction_id,
                              in_product_id                      =>             in_product_id,
                              in_filing_id                       =>             in_filing_id,
                              in_policy_billing_method           =>             in_policy_billing_method,
                              in_ultimate_customer_id            =>             in_ultimate_customer_id,
                              in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                              in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                              in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                              in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                              in_master_policy_id                =>             in_master_policy_id,
                              in_policy_term_id                  =>             in_policy_term_id,
                              in_policy_transaction_type         =>             in_policy_transaction_type,
                              in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                              in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                              in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                              in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                              in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                              io_action_outcome_id               =>             io_action_outcome_id,
                              in_prior_billing_method_id         =>             in_prior_billing_method_id,
                              in_current_date_time               =>             in_current_date_time,
                              in_FITrxType_Generate              =>             v_FITrxType_Generate,
                              in_billing_account                 =>             v_billing_account,
                              in_offset_billing_account          =>             v_writing_company_acc_id , -- Keerthi OSBILLING-5267 v_credit_billing_account,
                              in_fi_trx_id                       =>             v_fi_trx_id,
                              in_element_category                =>             v_element_category,
                              in_element_subcategory             =>             v_element_subcategory,
                              in_element_amount_total            =>             v_element_amount_total_debit,
                              in_billing_element_id              =>             r_element_id.db_billing_element_id,
                              in_create_debit_tf                 =>             v_create_debit_tf,
                              in_create_credit_tf                =>             v_create_credit_tf,
                              in_debit_run                       =>             1
                              );

                    end if;

               end if; -- if v_debit_billing_account is not null
	       --OSPRODUCT-12737
               if v_billing_account is not null then
                    if not v_billing_account_list.exists(v_billing_account) then
                         v_billing_account_list(v_billing_account) := v_billing_account;
                    end if;               
               end if;
               /*if v_credit_billing_account is not null and v_credit_billing_account <> v_writing_company_acc_id and v_debit_billing_account is null
               */

               if ( v_credit_billing_account is not null and   v_debit_billing_account is null)
               or
               ( v_credit_billing_account is not null and v_debit_billing_account is not null and v_credit_billing_account <>  v_writing_company_acc_id and v_element_credit_category  in (5746, 946))  -- OSBILLING-5267
               then

                    v_FITrxType_Generate := gFItem_credit;

                    v_billing_account := v_credit_billing_account;

                    v_fi_trx_id := in_fi_trx_credit_id;

                    v_element_category := v_element_credit_category;


                    v_element_subcategory := v_element_credit_subcategory;
                    --OSBILLING-5437 end

                    v_element_amount_total_credit := v_element_final_amount;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... For reverse_fitem_fichange for credit: '
                              ||'v_element_final_amount  ' ||v_element_final_amount
                              ||', v_pol_applied_amount_tot: '||v_pol_applied_amount_tot
                              ||', element_amount: '||v_element_amount_total_credit
                              || ' v_debit_billing_account ' || v_debit_billing_account
                              || ' v_credit_billing_account ' || v_credit_billing_account
                              || ' v_create_debit_tf ' || v_create_debit_tf
                              || ' r_element_id.db_billing_element_id ' || r_element_id.db_billing_element_id
                         );

                    end if;

                    --
                    --  Create the CREDIT FItem and associated FIChange if there is a balance
                    --

                    if v_element_amount_total_credit <> 0
                    then

                              sp_cpp_termstrt_fitem_fichnge
                              (
                              in_session_id                      =>             in_session_id,
                              in_transaction_id                  =>             in_transaction_id,
                              in_ptp_id                          =>             in_ptp_id,
                              in_policy_transaction_id           =>             in_policy_transaction_id,
                              in_product_id                      =>             in_product_id,
                              in_filing_id                       =>             in_filing_id,
                              in_policy_billing_method           =>             in_policy_billing_method,
                              in_ultimate_customer_id            =>             in_ultimate_customer_id,
                              in_customer_billing_acc_id         =>             in_customer_billing_acc_id,
                              in_agency_billing_acc_id           =>             in_agency_billing_acc_id,
                              in_billing_acc_trx_set_id          =>             in_billing_acc_trx_set_id,
                              in_policy_trx_effective_date       =>             in_policy_trx_effective_date,
                              in_master_policy_id                =>             in_master_policy_id,
                              in_policy_term_id                  =>             in_policy_term_id,
                              in_policy_transaction_type         =>             in_policy_transaction_type,
                              in_mod_pay_plan_id                 =>             in_mod_pay_plan_id,
                              in_earlier_pay_plan_id             =>             in_earlier_pay_plan_id,
                              in_fi_trx_debit_id                 =>             in_fi_trx_debit_id,
                              in_fi_trx_credit_id                =>             in_fi_trx_credit_id,
                              in_chosen_pay_plan_id              =>             in_chosen_pay_plan_id,
                              io_action_outcome_id               =>             io_action_outcome_id,
                              in_prior_billing_method_id         =>             in_prior_billing_method_id,
                              in_current_date_time               =>             in_current_date_time,
                              in_FITrxType_Generate              =>             v_FITrxType_Generate,
                              in_billing_account                 =>             v_billing_account,
                              in_offset_billing_account          =>             v_writing_company_acc_id, -- Keerthi OSBILLING-5287
                              in_fi_trx_id                       =>             v_fi_trx_id,
                              in_element_category                =>             v_element_category,
                              in_element_subcategory             =>             v_element_subcategory,
                              in_element_amount_total            =>             v_element_amount_total_credit,
                              in_billing_element_id              =>             r_element_id.db_billing_element_id,
                              in_create_debit_tf                 =>             v_create_debit_tf,
                              in_create_credit_tf                =>             v_create_credit_tf,
                              in_debit_run                       =>             0
                              );


                    end if;

               end if; -- if v_credit_billing_account is not null

------------------------ End of clearing due amounts of chosen payplan with payplan change credit --------------
               --OSPRODUCT-12737
               if v_billing_account is not null then
                    if not v_billing_account_list.exists(v_billing_account) then
                         v_billing_account_list(v_billing_account) := v_billing_account;
                    end if;               
               end if;               
               
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Billing account : ' || v_billing_account
                    );

               end if;
          end if;  --v_element_amount_total <> 0

     end loop;  -- elements

     --OSPRODUCT-12737 start
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Multipayer Enabled Flag: ' ||v_multipayer_enabled_tf
               ||', Payer we are updating: '||v_ptp_payer
               ||', Modified Payment Plan: '||in_mod_pay_plan_id
               ||', Billing account count: ' || v_billing_account_list.count
               ||', Writing Company Billing Account Id: ' || v_writing_company_acc_id
               ||', Billing Account Transaction Set: ' || in_billing_acc_trx_set_id
          );

     end if;



     -- Till now we have closed out element wise balances from change pay plan credit to prior existing dues.
     -- In the following loop settle any dues left on prior endorsements across the billing elements
     v_billing_account_indx := v_billing_account_list.first;
     while v_billing_account_indx is not null loop

          for r_source_fitem in c_source_fitem(v_billing_account_list(v_billing_account_indx) , v_writing_company_acc_id )
          loop
               
               v_cur_total_amount := r_source_fitem.balance;
               v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  r_source_fitem.billing_account_id,
                                                  gbv_BillingAccountParent
                                             );
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Settling prior dues across billing elements: '
                         ||'Credit Fitem  ' || r_source_fitem.fitem_id
                         ||', Credit Balance: '|| r_source_fitem.balance
                    );

               end if;
               if v_cur_total_amount < 0 then
                    v_fitem_debit_credit := gFItem_Credit;
               else
                    v_fitem_debit_credit := gFItem_Debit;
               end if;
               
               for r_target_fitem in c_target_fitem(r_source_fitem.billing_account_id, 'NO', v_fitem_debit_credit) loop
                    
                    if v_cur_total_amount = 0 then
                         exit;
                    end if;
                    
                    v_fichange_amount   :=   r_target_fitem.balance*(-1);
     			
                    v_fichange_process_date :=    NVL(in_current_date_time,
                                                       pkg_os_time.fn_os_sysdate
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_fi_change_id
                                                       ));  --OSBILLING-7829

                    v_fichange_action       :=    gFIChange_Change;
                    	
                    if v_fichange_amount >0
                    then
     					
                         if v_cur_total_amount <= v_fichange_amount
                         then
     			  
                              v_fichange_amount := v_cur_total_amount;
     			  
                         else
     			  
                              v_fichange_amount := v_fichange_amount;
     			  
                         end if;
     						
                    else
     					
                         if v_cur_total_amount <= v_fichange_amount
                         then
     				
                              v_fichange_amount := v_fichange_amount;
     				
                         else
     				
                              v_fichange_amount := v_cur_total_amount;
     				
                         end if; 
     						
                    end if;					

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Settling Fitem  ' || r_target_fitem.fitem_id
                              ||', Debit Balance: '|| r_target_fitem.balance
                              ||', FIChange Amount: '||v_fichange_amount
                              ||', Installment: ' || r_target_fitem.installment_id
                         );

                    end if;

                    v_sum_include   :=   gFIChange_Yes;

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... FIChange Sum Include: '||v_sum_include
                         );

                    end if;

                    v_existing_fitem_change_tf := 'T'; -- KR CR
                    --
                    -- Call the FIChange creation procedure with the input parameters identified hitherto
                    --

                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                  =>  in_session_id,
                         in_transaction_id              =>  in_transaction_id,
                         in_parent_fitransaction_id     =>  v_fi_trx_id,
                         out_fichange_id                =>  v_fi_change_id,
                         in_fichange_action             =>  v_fichange_action,
                         in_fichange_action_delta       =>  v_fichange_amount,
                         in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                         in_fichange_sum_include        =>  v_sum_include,
                         in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                         in_fichange_ref_pol            =>  in_master_policy_id,
                         in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                         in_fichange_belongs_to         =>  r_source_fitem.billing_account_id
                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' ...... Create the FIChange object after collecting all the BV values'
                         );

                    end if;
     					
                    declare
          
                         -- BALANCE
                         v_dm_col_198546 number;
     						
                         -- FITEM_LAST_UPT_DATE
                         v_dm_col_417446 date;
     						
                         v_count         number;
     						
                    begin				
     					
                         select 
                              count(1) 
                         into 
                              v_count 
                         from 
                              DRAGON_FITEM 
                         where 
                              fitem_id = r_target_fitem.fitem_id;
     						
                         if v_count <> 0 then          
     					 
                              v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_target_fitem.fitem_id, 8268846);
     					 
                              v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
     					
                              update DRAGON_FITEM set               
                                   BALANCE = v_dm_col_198546
                                   ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                                   ,SESSION_ID = in_session_id               
                                   ,TRANSACTION_ID = in_transaction_id
                              where FITEM_ID = r_target_fitem.fitem_id;
     							
                              if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                             '|||||| Updating datamart for fitem:  ' || r_target_fitem.fitem_id);
                              end if;
     							
                         else
     							
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_target_fitem.fitem_id, v_datamart_tf);
     							
                         end if;
     					
                    end;
     					
                    v_existing_fitem_change_tf := 'T';

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updated the Datamart of FIChange and FItem Objects'
                         );

                    end if;

                    v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
                              
                    -- UTPRODUCT-4159
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '......v_cur_total_amount:'||v_cur_total_amount
                         );

                    end if;
                    -- 10/22 KR                         
                    declare
                              
                         -- INITIAL_AMOUNT
                         v_dm_col_338646 number;
                         -- BILLINGACCOUNTTRXSET_ID
                         v_dm_col_556646 number;
                         -- BALANCE_AMOUNT
                         v_dm_col_288919 number;
                         -- CURRENT_PAY_PLAN_INST
                         v_dm_col_557246 varchar2(10);
                                   
                         v_count         number;
               
                    begin

                         select count(1) into v_count from DRAGON_SCHEDULED_INSTALLMENT where installment_id = r_target_fitem.installment_id;

                         if v_count <> 0 then
                                   
                              v_dm_col_338646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.installment_id,'32080646' );
                              --v_dm_col_556646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'29704846.29728501.212298.31866546.211343' );
                              v_dm_col_288919 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.installment_id,'32080746' );

                              v_dm_col_557246 := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, r_target_fitem.installment_id, '33820646', null, v_dm_col_557246, 'F', null);
                       
                              update DRAGON_SCHEDULED_INSTALLMENT set
                                   BILLINGACCOUNTTRXSET_ID = v_dm_col_556646
                                   ,BALANCE_AMOUNT = v_dm_col_288919                              
                                   ,TRANSACTION_ID = in_transaction_id
                                   ,SESSION_ID = in_session_id
                              where INSTALLMENT_ID = r_target_fitem.installment_id;
                                        
                         else

                              pkg_os_datamart.sp_datamart_update_row
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   r_target_fitem.installment_id,
                                   v_datamart_tf
                              );
                                        
                         end if;
                         pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,r_target_fitem.installment_id, 21686401, to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id, r_target_fitem.installment_id), pkg_os_constant.dragondateformatdefault)); 
                    end;
                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updated the Datamart of Installment'
                         );

                    end if;
                    pkg_db_object.sp_fichange_create
                    (
                         in_session_id                  =>  in_session_id,
                         in_transaction_id              =>  in_transaction_id,
                         in_parent_fitransaction_id     =>  v_fi_trx_id,
                         out_fichange_id                =>  v_fi_change_id,
                         in_fichange_action             =>  201,
                         in_fichange_action_delta       =>  (-1)*v_fichange_amount,
                         in_fichange_ref_fitem          =>  r_source_fitem.fitem_id,
                         in_fichange_sum_include        =>  v_sum_include,
                         in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                         in_fichange_ref_pol            =>  in_master_policy_id,
                         in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                         in_fichange_belongs_to         =>  r_source_fitem.billing_account_id
                    );

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Created fichange on credit fitem'
                         );

                    end if;
               end loop;

               declare
          
                         -- BALANCE
                         v_dm_col_198546 number;
     						
                         -- FITEM_LAST_UPT_DATE
                         v_dm_col_417446 date;
     						
                         v_count         number;
     						
                    begin				
     					
                         select 
                              count(1) 
                         into 
                              v_count 
                         from 
                              DRAGON_FITEM 
                         where 
                              fitem_id = r_source_fitem.fitem_id;
     						
                         if v_count <> 0 then          
     					 
                              v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_source_fitem.fitem_id, 8268846);
     					 
                              v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_source_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
     					
                              update DRAGON_FITEM set               
                                   BALANCE = v_dm_col_198546
                                   ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                                   ,SESSION_ID = in_session_id               
                                   ,TRANSACTION_ID = in_transaction_id
                              where FITEM_ID = r_source_fitem.fitem_id;
     							
                              if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                             '|||||| Updating datamart for fitem:  ' || r_source_fitem.fitem_id);
                              end if;
     							
                         else
     							
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_source_fitem.fitem_id, v_datamart_tf);
     							
                         end if;
     					
                    end;
     					
                    v_existing_fitem_change_tf := 'T';

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updated the Datamart of FIChange and FItem Objects'
                         );

                    end if;
          end loop;

          v_billing_account_indx := v_billing_account_list.next(v_billing_account_indx);
     end loop;
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Settled everything from prior transactions.'
          );

     end if;

     v_billing_account_indx := v_billing_account_list.first;
     while v_billing_account_indx is not null loop
     
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......v_billing_account_indx in 2nd loop' || v_billing_account_indx
          );

     end if;
     -- In the following loop if we are still left with any credit, settle dues from current transaction.
     for r_source_fitem in c_source_fitem(v_billing_account_list(v_billing_account_indx), v_writing_company_acc_id)
     loop
          
          v_cur_total_amount := r_source_fitem.balance;
          v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             r_source_fitem.billing_account_id,
                                             gbv_BillingAccountParent
                                        );
          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Settling dues for current billing elements: '
                    ||'Credit Fitem  ' || r_source_fitem.fitem_id
                    ||', Credit Balance: '|| r_source_fitem.balance
               );

          end if;
          
          --associated element not null
          --installment sequence
          -- current payment plan BV
          if v_cur_total_amount < 0 then
               v_fitem_debit_credit := gFItem_Credit;
          else
               v_fitem_debit_credit := gFItem_Debit;
          end if;
          for r_target_fitem in c_target_fitem(r_source_fitem.billing_account_id, 'YES', v_fitem_debit_credit  ) loop

               if v_cur_total_amount = 0 then
                    exit;
               end if;
               
               v_fichange_amount   :=   r_target_fitem.balance*(-1);
			v_fichange_process_date :=    NVL(in_current_date_time,
                                                  pkg_os_time.fn_os_sysdate
                                                  (
                                                       in_session_id,
                                                       in_transaction_id,
                                                       v_fi_change_id
                                                  ));  --OSBILLING-7829

               v_fichange_action       :=    gFIChange_Change;	
               if v_fichange_amount >0
               then
					
                    if v_cur_total_amount <= v_fichange_amount
                    then
			  
                         v_fichange_amount := v_cur_total_amount;
			  
                    else
			  
                         v_fichange_amount := v_fichange_amount;
			  
                    end if;
						
               else
					
                    if v_cur_total_amount <= v_fichange_amount
                    then
				
                         v_fichange_amount := v_fichange_amount;
				
                    else
				
                         v_fichange_amount := v_cur_total_amount;
				
                    end if; 
						
               end if;					

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'Settling Fitem  ' || r_target_fitem.fitem_id
                         ||', Debit Balance: '|| r_target_fitem.balance
                         ||', FIChange Amount: '||v_fichange_amount
                         ||', Installment: ' || r_target_fitem.installment_id
                    );

               end if;

               v_sum_include   :=   gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... FIChange Sum Include: '||v_sum_include
                    );

               end if;

               v_existing_fitem_change_tf := 'T'; -- KR CR
               --
               -- Call the FIChange creation procedure with the input parameters identified hitherto
               --

               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fi_trx_id,
                    out_fichange_id                =>  v_fi_change_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_fichange_amount,
                    in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                    in_fichange_ref_pol            =>  in_master_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_billaccount_parent_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Create the FIChange object after collecting all the BV values'
                    );

               end if;
					
               declare
     
                    -- BALANCE
                    v_dm_col_198546 number;
						
                    -- FITEM_LAST_UPT_DATE
                    v_dm_col_417446 date;
						
                    v_count         number;
						
               begin				
					
                    select 
                         count(1) 
                    into 
                         v_count 
                    from 
                         DRAGON_FITEM 
                    where 
                         fitem_id = r_target_fitem.fitem_id;
						
                    if v_count <> 0 then          
					 
                         v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_target_fitem.fitem_id, 8268846);
					 
                         v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
					
                         update DRAGON_FITEM set               
                              BALANCE = v_dm_col_198546
                              ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                              ,SESSION_ID = in_session_id               
                              ,TRANSACTION_ID = in_transaction_id
                         where FITEM_ID = r_target_fitem.fitem_id;
							
                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                        '|||||| Updating datamart for fitem:  ' || r_target_fitem.fitem_id);
                         end if;
							
                    else
							
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_target_fitem.fitem_id, v_datamart_tf);
							
                    end if;
					
               end;
					
               v_existing_fitem_change_tf := 'T';

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updated the Datamart of FIChange and FItem Objects'
                    );

               end if;

               v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
                         
               -- UTPRODUCT-4159
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......v_cur_total_amount:'||v_cur_total_amount
                    );

               end if;
               -- 10/22 KR                         
               declare
                         
                    -- INITIAL_AMOUNT
                    v_dm_col_338646 number;
                    -- BILLINGACCOUNTTRXSET_ID
                    v_dm_col_556646 number;
                    -- BALANCE_AMOUNT
                    v_dm_col_288919 number;
                    -- CURRENT_PAY_PLAN_INST
                    v_dm_col_557246 varchar2(10);
                              
                    v_count         number;
          
               begin

                    select count(1) into v_count from DRAGON_SCHEDULED_INSTALLMENT where installment_id = r_target_fitem.installment_id;

                    if v_count <> 0 then
                              
                         v_dm_col_338646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.installment_id,'32080646' );
                         --v_dm_col_556646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'29704846.29728501.212298.31866546.211343' );
                         v_dm_col_288919 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.installment_id,'32080746' );

                         v_dm_col_557246 := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, r_target_fitem.installment_id, '33820646', null, v_dm_col_557246, 'F', null);
                  
                         update DRAGON_SCHEDULED_INSTALLMENT set
                              BILLINGACCOUNTTRXSET_ID = v_dm_col_556646
                              ,BALANCE_AMOUNT = v_dm_col_288919                              
                              ,TRANSACTION_ID = in_transaction_id
                              ,SESSION_ID = in_session_id
                         where INSTALLMENT_ID = r_target_fitem.installment_id;
                                   
                    else

                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              r_target_fitem.installment_id,
                              v_datamart_tf
                         );
                                   
                    end if;
                    pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,r_target_fitem.installment_id, 21686401, to_char(pkg_os_time.fn_os_sysdate(in_session_id,in_transaction_id, r_target_fitem.installment_id), pkg_os_constant.dragondateformatdefault)); 
     					     
               end;
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updated the Datamart of Installment'
                    );

               end if;
               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  v_fi_trx_id,
                    out_fichange_id                =>  v_fi_change_id,
                    in_fichange_action             =>  201,
                    in_fichange_action_delta       =>  (-1)*v_fichange_amount,
                    in_fichange_ref_fitem          =>  r_source_fitem.fitem_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                    in_fichange_ref_pol            =>  in_master_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_billaccount_parent_id
               );
               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Created fichange on credit fitem'
                    );

               end if;
          end loop;
                    declare
          
                         -- BALANCE
                         v_dm_col_198546 number;
     						
                         -- FITEM_LAST_UPT_DATE
                         v_dm_col_417446 date;
     						
                         v_count         number;
     						
                    begin				
     					
                         select 
                              count(1) 
                         into 
                              v_count 
                         from 
                              DRAGON_FITEM 
                         where 
                              fitem_id = r_source_fitem.fitem_id;
     						
                         if v_count <> 0 then          
     					 
                              v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_source_fitem.fitem_id, 8268846);
     					 
                              v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_source_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
     					
                              update DRAGON_FITEM set               
                                   BALANCE = v_dm_col_198546
                                   ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                                   ,SESSION_ID = in_session_id               
                                   ,TRANSACTION_ID = in_transaction_id
                              where FITEM_ID = r_source_fitem.fitem_id;
     							
                              if v_session_control.gLogging_Full
                              then
                                   pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                             '|||||| Updating datamart for fitem:  ' || r_source_fitem.fitem_id);
                              end if;
     							
                         else
     							
                              pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_source_fitem.fitem_id, v_datamart_tf);
     							
                         end if;
     					
                    end;
     					
                    v_existing_fitem_change_tf := 'T';

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '...... Updated the Datamart of FIChange and FItem Objects'
                         );

                    end if;
     end loop;
          v_billing_account_indx := v_billing_account_list.next(v_billing_account_indx);
     end loop;
     --OSPRODUCT-12737 end
     --raise no_data_found;
     
     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception

     when others then

          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Exception '||
               sqlerrm(sqlcode)
          );

          raise no_data_found;

end sp_cpp_termstrt_createoffset;

procedure sp_cpp_termstrt_fitem_fichnge
(
     in_session_id                      in             object.object_id%type,
     in_transaction_id                  in             object.object_id%type,
     in_ptp_id                          in             object.object_id%type,
     in_policy_transaction_id           in             object.object_id%type,
     in_product_id                      in             object.object_id%type,
     in_filing_id                       in             object.object_id%type,
     in_policy_billing_method           in             number,
     in_ultimate_customer_id            in             object.object_id%type,
     in_customer_billing_acc_id         in             object.object_id%type,
     in_agency_billing_acc_id           in             object.object_id%type,
     in_billing_acc_trx_set_id          in             object.object_id%type,
     in_policy_trx_effective_date       in             object_bv_value.business_variable_value%type,
     in_master_policy_id                in             object.object_id%type,
     in_policy_term_id                  in             object.object_id%type,
     in_policy_transaction_type         in             object_bv_value.business_variable_value%type,
     in_mod_pay_plan_id                 in             object.object_id%type,
     in_earlier_pay_plan_id             in             object.object_id%type,
     in_fi_trx_debit_id                 in             object.object_id%type,
     in_fi_trx_credit_id                in             object.object_id%type,
     in_chosen_pay_plan_id              in             object.object_id%type,
     io_action_outcome_id               in out nocopy  outcome.outcome_id%type,
     in_prior_billing_method_id         in             number default null, -- used for billing method change
     in_current_date_time               in             date default null,
     in_FITrxType_Generate              in             number,
     in_billing_account                 in             object.object_id%type,
     in_offset_billing_account          in             object.object_id%type,
     in_fi_trx_id                       in             object.object_id%type,
     in_element_category                in             number,
     in_element_subcategory             in             number,
     in_element_amount_total            in             number,
     in_billing_element_id              in             number,
     in_create_debit_tf                 in             char,
     in_create_credit_tf                in             char,
     in_debit_run                       in             number

)
is

     v_procedure_name                   constant system_log.program_name%type      :=     pkg_name||'sp_cpp_termstrt_fitem_fichnge';
     v_session_control                  pkg_os_session.r_dragon_session_control    :=     pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);

     v_scheduled_payment_list           pkg_os_object.t_object_list;
     v_scheduled_element_list           pkg_os_object.t_object_list;
     v_billing_account_id               object.object_id%type;
     v_poltxn_id                        object.object_id%type;
     v_schedule_element_id              object.object_id%type;
     v_coverage_object_id               object.object_id%type;
     v_datamart_tf                      char(1) := 'T';
     v_scheduled_payment_index          number;
     v_scheduled_element_index          number;
     v_element_amount                   number;
     v_element_amount_total             number;
     v_billing_element_md_id            db_billing_element.db_billing_element_id%type;
     v_element_category                 number;
     v_element_subcategory              number;
     v_element_debit_category           number;
     v_element_debit_subcategory        number;
     v_element_credit_category          number;
     v_element_credit_subcategory       number;
     v_element_creator_poltrns          object.object_id%type;
     v_IncludeInPayScheduleTF           char(1);
     v_create_debit_tf                  char(1);
     v_create_credit_tf                 char(1);
     v_fi_change_amount                 number;
     v_PaymentPlan_md                   constant business_variable.business_variable_id%type        :=   212015;
     v_payment_md_id                    object.object_id%type;
     v_fitem_type                       number;
     v_offset_fitem_type                number;
     v_credit_billing_account           object.object_id%type;
     v_billaccount_parent_id            object.object_id%type;
     v_debit_billing_account            object.object_id%type;
     v_billing_account                  object.object_id%type;
     v_writing_company_id               object.object_id%type;
     v_writing_co_billing_acc_id        object.object_id%type;
     v_offset_fitem_id                  object.object_id%type;
     v_offset_fi_change_id              object.object_id%type;
     v_fichange_action                  number;
     v_fichange_amount                  number;
     v_fitem_id                         object.object_id%type;
     v_fitem_id_hold                    object.object_id%type;
     v_sum_include                      number;
     v_fichange_process_date            date;
     v_fi_trx_id                        object.object_id%type;
     v_fi_change_id                     object.object_id%type;
     v_installment_number               number;
     v_fitramsactopm_id                 object.object_id%type;
     v_cur_total_amount                 number;
     v_cur_total_amount_start           number;
     v_applied_amount                   number := 0;
     v_chsn_installment_object_id       object.object_id%type;
     v_mod_scheduled_payment_list       pkg_os_object.t_object_list;
     v_mod_scheduled_payment_index      number;
     v_mod_installment_object_id        object.object_id%type;
     v_PolicyCurr_Term                  business_variable.business_variable_id%type;
     v_installment_object_id            object.object_id%type;
     v_debit_tf                         char(1) := '1';
     v_credit_tf                        char(1) := '2';
     v_debit_run                        number := 1;
     v_fitem_term_billing_method        number;
     v_fitem_rollup_id                  object.object_id%type;
     v_rollup_status_id                 object_state.object_state_id%type;
     v_fitem_recon_batch_id             object.object_id%type;
     v_recon_batch_status_id            object_state.object_state_id%type;
     v_fitem_recon_batch_list           t_fitem_installment_tab;
     v_fitem_recon_batch_index          number;

     v_fitem_installment_id             object.object_id%type;
     v_fitem_installment_list           t_fitem_installment_tab;
     v_fitem_installment_index          number;
     v_due_fitem_flag                   number;--OSBILLING-7448
     v_element_id                       number; -- UTPRODUCT-4159                                                                                 

      v_existing_fitem_change_tf  char := 'F'; -- [KR 12/20]

     cursor c_target_fitem
            (
               in_policy_id   in   number,
               in_billing_account_id in number,
               in_policy_term_id in number,
               in_installment_id in number,
               in_billing_element_id in number default null,
               in_fitem_id in number
            )
     is
          select
               *
          from
               dragon_fitem a
          where
               policy_id =    in_policy_id
          and
               billing_account_id = in_billing_account_id
          and
               policy_term_id = in_policy_term_id
          and
               installment_id =    in_installment_id
          and
               balance   <>    0.00
          and
               (a.billing_element_md_id = in_billing_element_id
               or
               in_billing_element_id is null) -- UTPRODUCT-4159
          and
               a.fitem_id <> in_fitem_id
		  and 
      		 a.fitem_batch_type_id != 2201 -- Payables Earning Adjustment Batch      --OSPRODUCT-30832
          and
               (
                    (a.fitem_type_id = gFItem_Credit and a.earning_status <> 'Earned')
                    or
                    a.fitem_type_id = gFItem_Debit
               )
          --and a.billing_account_id <> in_offset_billing_account -- Keerthi OSBILLING-5267
          order by
               a.priority; -- UTPRODUCT-4159


begin

     --
     --  Cleanup Tasks
     --
     v_fitem_installment_list.delete;
     v_fitem_recon_batch_list.delete;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '||||||------ Element MD ID: '||in_billing_element_id
               || ' Element Amount: '||in_element_amount_total
               || ' FItem/FItransaction Type: '|| in_FITrxType_Generate
               || ' Billing Account ID: '||  in_billing_account
               || ' Offset Billing Account ID: '|| in_offset_billing_account
               || ' Element Category ID: '|| in_element_category
               || ' Element Subcategory ID: '|| in_element_subcategory
               || ' Element Create Debit?(True=1 False=2) '|| in_create_debit_tf
               || ' Element Create Credit?(True=1 False=2) '|| in_create_credit_tf
               || ' FItransaction ID: '|| in_fi_trx_id
               || ' Earlier Payment Plan Object ID: '||in_earlier_pay_plan_id
               || ' Chosen Payment Plan Object ID: '||in_chosen_pay_plan_id
               || ' Modified Payment Plan Object ID: '||in_mod_pay_plan_id
               || ' Prior Billing Method (set only if we are changing Billing Method): ' || in_prior_billing_method_id
               || ' Desired Billing Method: '|| in_policy_billing_method

          );

     end if;

     --
     -- Get the Writing Company associated with the Policy
     --

     v_writing_company_id := pkg_os_object_io.fn_object_bv_get
     (
          in_session_id,
          in_transaction_id,
          in_ptp_id,
          pkg_db_object.gbv_WritingCompany
     );

     v_fitem_type    := in_FITrxType_Generate;
     v_billing_account := in_billing_account;
     v_element_amount_total := in_element_amount_total;

     --
     --  Get the parent entity id of billing account Object
     --

     v_billaccount_parent_id  :=   pkg_os_object_io.fn_object_bv_get
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_billing_account,
                                        gbv_BillingAccountParent
                                   );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Parent entity of billing account '||v_billing_account||
               ' - '||v_billaccount_parent_id
          );

     end if;

     if in_offset_billing_account is not null
     then

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_fitem_type = gFItem_Debit
          then

               v_offset_fitem_type := gFItem_Credit;

          else

               v_offset_fitem_type := gFItem_Debit;

          end if;

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    in_offset_billing_account,
               out_fitem_id                 =>    v_offset_fitem_id,
               in_fitem_debit_credit        =>    v_offset_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account),
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' created on Billing Account: '||v_billaccount_parent_id
                    ||' Offset FItem ID: '|| v_offset_fitem_id
                    ||' created on Billing Account: '||in_offset_billing_account
               );

          end if;

     else

          pkg_db_object.sp_fitem_create
          (
               in_session_id                =>    in_session_id,
               in_transaction_id            =>    in_transaction_id,
               in_parent_object_id          =>    v_billing_account,
               out_fitem_id                 =>    v_fitem_id,
               out_offset_FItem_id          =>    v_offset_fitem_id, -- Added another parameter to create an offset on the Writing Company
               in_fitem_debit_credit        =>    v_fitem_type,
               in_fitem_category            =>    in_element_category,
               in_fitem_subcategory         =>    in_element_subcategory,
               in_fitem_effective_date      =>    in_policy_trx_effective_date,
               in_fitem_billing_status      =>    gFItemBillStatus_Active,
               in_fitem_processing_status   =>    pkg_db_object.gFItemProcStatus_Processed,
               in_fitem_bill_status_date    =>    in_policy_trx_effective_date,
               in_fitem_Earningstatus       =>    null,
               in_fitem_earned_amount       =>    null,
               in_fitem_unearned_amount     =>    null,
               in_fitem_paid_amount         =>    null,
               in_FItemRefInstallment       =>    v_installment_object_id ,
               in_FItemRefPolicy            =>    in_master_policy_id,
               in_FItemRefPolicyTxn         =>    in_policy_transaction_id,
               in_FitemRefPolicyTerm        =>    in_policy_term_id,
               in_FItemRefCustomer          =>    in_ultimate_customer_id,
               in_FItemRefEntityBelongsTo   =>    v_billaccount_parent_id,
               in_FItemRefAssWithFItrx      =>    in_fi_trx_id,
               in_Fitem_billing_elt_md_id   =>    in_billing_element_id
          );

          if v_session_control.gLogging_Full
          then
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Created and Set values of FItem Object ID: '||v_fitem_id
                    ||' Writing Company offset FItem ID: '|| v_offset_fitem_id
               );

          end if;

     end if;

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     --
     -- Handling the rollback
     --

     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then
          v_fichange_amount   :=   v_element_amount_total * (-1);
     else
          v_fichange_amount   :=   v_element_amount_total;

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for FItem ID: '||v_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  v_billaccount_parent_id,
          in_billing_Account_id          =>  v_billing_account
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --


     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_fitem_id,
          v_datamart_tf
     );

     ------------------------------------------------------------------------------------------------------
     -- FIChange for Offset Account
     ------------------------------------------------------------------------------------------------------

     --
     -- Set the Processing Date to Current Date
     --

     v_fichange_process_date :=    NVL(in_current_date_time,
                                   pkg_os_time.fn_os_sysdate
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_fi_change_id
                                   ));  --OSBILLING-7829

     v_fichange_action       :=    gFIChange_Create;

     -- OSBILLING-650 Added to cater to the rollback
     if ( in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
     then

          v_fichange_amount   :=   v_element_amount_total;

     else

          v_fichange_amount   :=   v_element_amount_total * (-1);

     end if;

     v_sum_include   :=   gFIChange_Yes;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Creating FIChange for Offset FItem ID: '||v_offset_fitem_id
               ||' FIChange Sum Include: '||v_sum_include
               ||' FIChange Amount: '||v_fichange_amount
               ||' FIChange Action: '||v_fichange_action
          );

     end if;

     pkg_db_object.sp_fichange_create
     (
          in_session_id                  =>  in_session_id,
          in_transaction_id              =>  in_transaction_id,
          in_parent_fitransaction_id     =>  in_fi_trx_id,
          out_fichange_id                =>  v_offset_fi_change_id,
          in_fichange_action             =>  v_fichange_action,
          in_fichange_action_delta       =>  v_fichange_amount,
          in_fichange_ref_fitem          =>  v_offset_fitem_id,
          in_fichange_sum_include        =>  v_sum_include,
          in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
          in_fichange_ref_pol            =>  in_master_policy_id,
          in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
          in_fichange_belongs_to         =>  nvl(pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_offset_billing_account), v_writing_company_id),
          in_billing_account_id          =>  in_offset_billing_account
     );

     --
     -- Update the FIChange Datamart - This is done as part of pkg_db_object.sp_fichange_create
     --

     --
     -- Update the FItem Datamart
     --

     pkg_os_datamart.sp_datamart_update_row
     (
          in_session_id,
          in_transaction_id,
          v_offset_fitem_id,
          v_datamart_tf
     );


     --
     --  Now create the PayPlan Change Credit or Billing Method Change Credit fitems
     --  and close the old outdated installments
     --

     v_cur_total_amount := v_element_amount_total;
     v_cur_total_amount_start:= v_cur_total_amount;
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '......v_cur_total_amount_start: '||v_cur_total_amount_start
          );
     end if;
     --
     --  Get the MD ID from Modified Payment Plan if we are doing PayPlan Change
     --  or MD ID from earlier Payment Plan if we are doing Billing Method Change
     --

     v_scheduled_payment_list.delete;
     
     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_chosen_pay_plan_id,
          gObjType_ScheduledPayment,
          v_scheduled_payment_list,
          gbv_ScheduledPayment_num
     );

     -- get the md to use to select from the elements
     v_payment_md_id    :=    pkg_os_object_io.fn_object_bv_get
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   in_chosen_pay_plan_id,
                                   v_PaymentPlan_md
                              );


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Payment Plan MD ID to be adjusted: '
               ||v_payment_md_id
          );

     end if;

     --
     --  Loop through the scheduled payments associated with previous Policy Image to close old installments
     --

     v_scheduled_payment_index := v_scheduled_payment_list.first;

     while v_scheduled_payment_index is not null
     loop

          v_installment_object_id  :=   pkg_os_object_io.fn_object_bv_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_scheduled_payment_list(v_scheduled_payment_index),
                                             gbv_ScheduledRefInstallment
                                        );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Starting clearing due amounts of Installment ID: '||v_installment_object_id
               );

          end if;

          select
               dpt.policy_term_billing_method_id
          into
               v_fitem_term_billing_method
          from
               dragon_policy_term dpt
          where
               dpt.policy_id = in_master_policy_id
          and
               dpt.policy_term_id = in_policy_term_id;
               
          for r_target_fitem in c_target_fitem
                                   (
                                        in_master_policy_id,
                                        v_billing_account,
                                        in_policy_term_id,
                                        v_installment_object_id,
                                        in_billing_element_id,
                                        v_fitem_id
                                   )
          loop

               ---------------------------------------------------------------------------------------
               -- Agency Bill Specific Handling
               ---------------------------------------------------------------------------------------

               --
               --  Mark the Rollup Items as Excluded if the financials are part of any Reconciliation
               --  while doing the Billing Method Change or Pay Plan Change on an Agency Billed policy.
               --
               v_fitem_recon_batch_id := null;
               v_fitem_rollup_id      := null;
               v_due_fitem_flag       := 1;
               
               begin

                    --
                    --  Check if the Policy is Agency Billed
                    --

                    if v_fitem_term_billing_method = gBillingMethod_Agency
                    then

                         --
                         --  Check if this Fitem is part of any Recon Statement
                         --

                         if r_target_fitem.current_recon_batch_id is not null
                         then

                              v_fitem_recon_batch_id := r_target_fitem.current_recon_batch_id;

                         elsif r_target_fitem.related_recon_batch_id is not null
                         then

                              v_fitem_recon_batch_id := r_target_fitem.related_recon_batch_id;

                         end if;

                         if v_fitem_recon_batch_id is not null
                         then

                              --
                              --  Get the status of the Recon Statement
                              --

                              select
                                   btrx.batch_status_id
                              into
                                   v_recon_batch_status_id
                              from
                                   dragon_billingaccounttrxset btrx
                              where
                                   btrx.billingaccounttrxset_id = v_fitem_recon_batch_id;

                              --
                              --  Proceed only if the Recon Statement is neither processed nor reversed
                              --

                              if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)
                              then

                                   --
                                   --  Get the Rollup in which this FItem is a rollup member
                                   --

                                   select
                                        ru.ru_id
                                   into
                                        v_fitem_rollup_id
                                   from
                                        dragon_rollup ru
                                   where
                                        ru.ru_parent_id = v_fitem_recon_batch_id
                                   and
                                        ru.ru_policy_id = r_target_fitem.policy_id
                                   and
                                        ru.ru_id in (select rum.rum_parent_id from dragon_rollup_member rum where rum.rum_ref_fitem = r_target_fitem.fitem_id);

                                   --
                                   --  Check the Rollup status
                                   --

                                   select
                                        ru.ru_object_state_id
                                   into
                                        v_rollup_status_id
                                   from
                                        dragon_rollup ru
                                   where
                                        ru.ru_id = v_fitem_rollup_id;

                                   --
                                   --  Proceed if the Rollup is neither Processed nor Excluded
                                   --

                                   if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)
                                   then

                                   --
                                   --  Mark the Rollup's Match Option to "Exclude Without Aging" and status to "Excluded"
                                   --

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_rollup_id,
                                             pkg_db_reconciliation.gbv_PaymentOption,
                                             pkg_db_reconciliation.gMatchOption_ExcludeWoutAging
                                        );

                                        pkg_os_object_io.sp_object_bv_set
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_fitem_rollup_id,
                                             pkg_os_constant_bv.gbv_GenObjObjectState,
                                             pkg_db_reconciliation.gStatus_MarkedExclude
                                        );

                                        --
                                        --  Check if this Rollup already exists in the list
                                        --  If not, then add it to the List
                                        --

                                        if v_fitem_recon_batch_list.exists(v_fitem_recon_batch_id)
                                        then

                                             if v_session_control.gLogging_Full then

                                             pkg_os_logging.sp_log
                                             (
                                             in_session_id,
                                             in_transaction_id,
                                             v_procedure_name,
                                             '......... Recon Batch ID: '||v_fitem_recon_batch_id||' already exist in the list for Exclude Process'
                                             );

                                             end if;

                                        else

                                             v_fitem_recon_batch_list(v_fitem_recon_batch_id) := v_fitem_recon_batch_id;

                                        end if;

                                   end if; -- if v_rollup_status_id not in (pkg_db_cash_apply.gObjectState_Processed, pkg_db_reconciliation.gStatus_MarkedExclude)

                              end if; --if v_recon_batch_status_id not in (gBatchStatus_Processed, pkg_db_reversal.gFItrxSetRollbacked)

                         end if; -- if v_fitem_recon_batch_id is not null

                    end if; -- if v_fitem_term_billing_method = gBillingMethod_Agency

               exception
                    when others then

                         pkg_os_logging.sp_log_error
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              '|||Exception while processing Agency Billed handling for '||
                              'Term Billing Method: ' ||v_fitem_term_billing_method||
                              ', Recon Batch ID: '||v_fitem_recon_batch_id||
                              ', Recon Status: '||v_recon_batch_status_id||
                              ', Rollup ID: '||v_fitem_rollup_id||
                              ', Rollup Status: '||v_rollup_status_id||
                              sqlcode || ' : ' || SYS.DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || ' Stack:'||dbms_utility.format_error_stack
                         );

                         raise;

               end;

               -----------------------------------------------------------------------------------------------
               -- Common Handling
               -----------------------------------------------------------------------------------------------

               --
               --  Get the Installment ID from the Target FItem
               --

               select
                    installment_id
               into
                    v_fitem_installment_id
               from
                    dragon_fitem
               where
                    fitem_id = r_target_fitem.fitem_id;

               --
               --  Check if this Installment already exists in the list
               --  If not, then add it to the List
               --

               if v_fitem_installment_id is not null
               then

                    if v_fitem_installment_list.exists(v_fitem_installment_id)
                    then

                         if v_session_control.gLogging_Full then

                         pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '......... Housekeeping Task: Installment ID already exist in the list for Datamart Update : '||v_fitem_installment_id
                         );

                         end if;

                    else

                         v_fitem_installment_list(v_fitem_installment_id) := v_fitem_installment_id;

                    end if;

               end if;

               --
               -- Set the Processing Date to Current Date
               --

               v_fichange_process_date :=    NVL(in_current_date_time,
                                             pkg_os_time.fn_os_sysdate
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  v_fi_change_id
                                             ));  --OSBILLING-7829

               v_fichange_action       :=    gFIChange_Change;

               v_fichange_amount   :=   r_target_fitem.balance*(-1);

               -- Arun XXXX
               if v_fichange_amount >0
               then
               
                    if v_cur_total_amount <= v_fichange_amount
                    then
       
                         v_fichange_amount := v_cur_total_amount;
       
                    else
       
                         v_fichange_amount := v_fichange_amount;
       
                    end if;
                    
               else
                    if v_cur_total_amount <= v_fichange_amount
                    then
          
                         v_fichange_amount := v_fichange_amount;
          
                    else
          
                         v_fichange_amount := v_cur_total_amount;
          
                    end if;  
                    
              end if;
      

               -- OSBILLING-650 To cater to rollback of change in paymentplan

               if ( in_policy_transaction_type  = pkg_os_policy_transaction.gPolicyTrxType_Rollback)
               then
                     v_fichange_amount := (v_fichange_amount*-1);
               end if;

               v_sum_include   :=   gFIChange_Yes;

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Creating FIChange for Target FItem ID: '|| r_target_fitem.fitem_id
                         ||' FIChange Action to payoff the offset: '||v_fichange_action
                         || ' FIChange Amount in apply: '||v_fichange_amount
                         || ' Current Total before apply: ' || v_cur_total_amount
                    );

               end if;

               --
               -- Call the FIChange creation procedure with the input parameters identified hitherto
               --
               pkg_db_object.sp_fichange_create
               (
                    in_session_id                  =>  in_session_id,
                    in_transaction_id              =>  in_transaction_id,
                    in_parent_fitransaction_id     =>  in_fi_trx_id,
                    out_fichange_id                =>  v_fi_change_id,
                    in_fichange_action             =>  v_fichange_action,
                    in_fichange_action_delta       =>  v_fichange_amount,
                    in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                    in_fichange_sum_include        =>  v_sum_include,
                    in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                    in_fichange_ref_pol            =>  in_master_policy_id,
                    in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                    in_fichange_belongs_to         =>  v_billaccount_parent_id
               );

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         ' ...... Created FIChange object ID: ' || v_fi_change_id
                    );

               end if;


               --
               -- Update the FItem Datamart
               --
               -- RR 22/10
               /*pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    r_target_fitem.fitem_id,
                    v_datamart_tf
               );*/
               
               declare
     
                    -- BALANCE
                    v_dm_col_198546 number;
                    
                    -- FITEM_LAST_UPT_DATE
                    v_dm_col_417446 date;
                    
                    v_count         number;
                    
               begin
               
                    if v_session_control.gLogging_Full
                    then
                         pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                   '|||||| Updating datamart for fitem:  ' || r_target_fitem.fitem_id);
                    end if;
               
                    select count(1) into v_count from DRAGON_FITEM where fitem_id = r_target_fitem.fitem_id;
                    
                    if v_count <> 0 then          
                
                         v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_target_fitem.fitem_id, 8268846);
                
                         v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
               
                         update DRAGON_FITEM set               
                              BALANCE = v_dm_col_198546
                              ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                              ,SESSION_ID = in_session_id               
                              ,TRANSACTION_ID = in_transaction_id
                         where FITEM_ID = r_target_fitem.fitem_id;
                         
                    else
                         
                         pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_target_fitem.fitem_id, v_datamart_tf);
                         
                    end if;
               
               end;


               v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
               v_existing_fitem_change_tf := 'T'; -- KR 12/20

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Current Total after apply: ' || v_cur_total_amount
                    );

               end if;
               
          end loop;-- instalemnt FItems

          --
          --  moved to the outerloop incase the total of fitems is zero
          --
          
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_installment_object_id,
               gbv_Install_IsCrrntPayPlanInst,
               gInstalmnt_CrntPayPlan_False
          );
          
          declare
          
               -- INITIAL_AMOUNT
               v_dm_col_338646 number;
               -- BILLINGACCOUNTTRXSET_ID
               v_dm_col_556646 number;
               -- BALANCE_AMOUNT
               v_dm_col_288919 number;
               -- CURRENT_PAY_PLAN_INST
               v_dm_col_557246 varchar2(10);
               
               v_count         number;
          
          begin

               select count(1) into v_count from DRAGON_SCHEDULED_INSTALLMENT where installment_id = v_installment_object_id;

               if v_count <> 0 then
               
                    v_dm_col_338646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'32080646' );
                    --v_dm_col_556646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'29704846.29728501.212298.31866546.211343' );
                    v_dm_col_288919 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'32080746' );
                    v_dm_col_557246 := gInstalmnt_CrntPayPlan_False;
                    v_dm_col_557246 := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, v_installment_object_id, '33820646', null, v_dm_col_557246, 'F', null);
   
                    update DRAGON_SCHEDULED_INSTALLMENT set
                         INITIAL_AMOUNT = v_dm_col_338646
                         ,BILLINGACCOUNTTRXSET_ID = v_dm_col_556646
                         ,BALANCE_AMOUNT = v_dm_col_288919
                         ,CURRENT_PAY_PLAN_INST = v_dm_col_557246             
                         ,TRANSACTION_ID = in_transaction_id
                         ,SESSION_ID = in_session_id
                    where INSTALLMENT_ID = v_installment_object_id;
                    
               else

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_installment_object_id,
                         v_datamart_tf
                    );
                    
               end if;
          
          end;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Could not find oustanding fitems to close. So, updating the CurrentPaymentPlan Installment Flag to false for Installment ID : '||v_installment_object_id
               );

          end if;

          v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

     end loop;     -- while v_scheduled_payment_index is not null loop

     ------------  check if more amount is remaining and we can clear modified payment plan ------------
     if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Current Total: '|| v_cur_total_amount
               );
     end if;
     --OSPRODUCT-12737 start
/*     if v_cur_total_amount <> 0 -- Need to close commissions as well
     then

           pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... KR 2 ' || v_cur_total_amount
               );
          
               
          -- UTPRODUCT-4159
          if NVL(pkg_os_product.fn_product_property_get(in_session_id, in_transaction_id, in_product_id,  pkg_db_constant.gAdjustPaidAmountOption) ,1 )= 1
          then
               v_element_id := in_billing_element_id;
          else
               v_element_id := null;
                         
          end if;          
          v_mod_scheduled_payment_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
                 in_session_id,
                 in_transaction_id,
                 in_mod_pay_plan_id,
                 --in_chosen_pay_plan_id, -- Arun XXXX
                 gObjType_ScheduledPayment,
                 v_mod_scheduled_payment_list,
                 gbv_ScheduledPayment_num
          );

          if v_session_control.gLogging_Full
          then

                 pkg_os_logging.sp_log
                 (
                      in_session_id,
                      in_transaction_id,
                      v_procedure_name,
                      '...... Found PaymentPlanScheduledPayment objects, count: '||v_mod_scheduled_payment_list.count
                 );

          end if;

          if v_mod_scheduled_payment_list.count > 0
          then

               v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.first;

               while v_mod_scheduled_payment_index is not null
               loop

                    v_mod_installment_object_id  :=   pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_mod_scheduled_payment_list(v_mod_scheduled_payment_index),
                                                            gbv_ScheduledRefInstallment
                                                        );

                    --
                    -- Get Debit Fitems from chosen paymentplan installments
                    --
                   for r_target_fitem in    c_target_fitem
                                             (
                                             in_master_policy_id,
                                             v_billing_account,
                                             in_policy_term_id,
                                             v_mod_installment_object_id,
                                             v_element_id,
                                             v_fitem_id
                                             )
                    loop



                         --start creating fichange of type change

                         --
                         -- Fetch FIChange Object Details
                         --

                         if v_session_control.gLogging_Full
                         then

                              -- UTPRODUCT-4159    
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Identifying values for FIChange'||
                                   'fitem ID:'||r_target_fitem.fitem_id ||
                                   ' MD ID: '||r_target_fitem.billing_element_md_id||
                                   'v_element_id:'|| v_element_id
                                   
                                   
                              );

                         end if;

                         --
                         -- Set the Processing Date to Current Date
                         --

                         v_fichange_process_date :=    pkg_os_time.fn_os_sysdate
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_fi_change_id
                                                       );

                         v_fichange_action       :=    gFIChange_Change;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... FIChange Action: '||v_fichange_action
                              );

                         end if;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... r_target_fitem.balance: '|| r_target_fitem.balance
                              );

                         end if;
                         -- Arun XXXX
                         v_fichange_amount   :=   r_target_fitem.balance*(-1);
					\*
                         if v_cur_total_amount <= v_fichange_amount
                         then

                              v_fichange_amount := v_fichange_amount;
                              --v_fichange_amount := v_fichange_amount*(-1);

                         else

                              v_fichange_amount := v_cur_total_amount;

                         end if;
					*\
                         
                         if v_fichange_amount >0
                         then
                         
                              if v_cur_total_amount <= v_fichange_amount
                              then
                 
                                   v_fichange_amount := v_cur_total_amount;
                 
                              else
                 
                                   v_fichange_amount := v_fichange_amount;
                 
                              end if;
                              
                         else
                         
                              if v_cur_total_amount <= v_fichange_amount
                              then
                    
                                   v_fichange_amount := v_fichange_amount;
                    
                              else
                    
                                   v_fichange_amount := v_cur_total_amount;
                    
                              end if; 
                              
                         end if;                       

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... FIChange Amount: '||v_fichange_amount
                              );

                         end if;

                         v_sum_include   :=   gFIChange_Yes;

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... FIChange Sum Include: '||v_sum_include
                              );

                         end if;

                         v_existing_fitem_change_tf := 'T'; -- KR CR
                         --
                         -- Call the FIChange creation procedure with the input parameters identified hitherto
                         --

                         pkg_db_object.sp_fichange_create
                         (
                              in_session_id                  =>  in_session_id,
                              in_transaction_id              =>  in_transaction_id,
                              in_parent_fitransaction_id     =>  in_fi_trx_id,
                              out_fichange_id                =>  v_fi_change_id,
                              in_fichange_action             =>  v_fichange_action,
                              in_fichange_action_delta       =>  v_fichange_amount,
                              in_fichange_ref_fitem          =>  r_target_fitem.fitem_id,
                              in_fichange_sum_include        =>  v_sum_include,
                              in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
                              in_fichange_ref_pol            =>  in_master_policy_id,
                              in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
                              in_fichange_belongs_to         =>  v_billaccount_parent_id
                         );

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' ...... Create the FIChange object after collecting all the BV values'
                              );

                         end if;
                         -- RR 22/10
                         --
                         -- Update the FIChange Datamart
                         --
					\*
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_fi_change_id,
                              v_datamart_tf
                         );
					*\
                         --
                         -- Update the FItem Datamart
                         --
					\*
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              r_target_fitem.fitem_id,
                              v_datamart_tf
                         );*\
                         
                         
                         declare
     
                              -- BALANCE
                              v_dm_col_198546 number;
                              
                              -- FITEM_LAST_UPT_DATE
                              v_dm_col_417446 date;
                              
                              v_count         number;
                              
                         begin                    
                         
                              select count(1) into v_count from DRAGON_FITEM where fitem_id = r_target_fitem.fitem_id;
                              
                              if v_count <> 0 then          
                          
                                   v_dm_col_198546 := pkg_os_exp.fn_evaluate_expression( in_session_id, in_transaction_id, r_target_fitem.fitem_id, 8268846);
                          
                                   v_dm_col_417446 := to_date(pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, r_target_fitem.fitem_id,'21686401' ),'YYYYMMDDHH24MISS');
                         
                                   update DRAGON_FITEM set               
                                        BALANCE = v_dm_col_198546
                                        ,FITEM_LAST_UPT_DATE = v_dm_col_417446               
                                        ,SESSION_ID = in_session_id               
                                        ,TRANSACTION_ID = in_transaction_id
                                   where FITEM_ID = r_target_fitem.fitem_id;
                                   
                                   if v_session_control.gLogging_Full
                                   then
                                        pkg_os_logging.sp_log(in_session_id, in_transaction_id, v_procedure_name,
                                                  '|||||| Updating datamart for fitem:  ' || r_target_fitem.fitem_id);
                                   end if;
                                   
                              else
                                   
                                   pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, r_target_fitem.fitem_id, v_datamart_tf);
                                   
                              end if;
                         
                         end;
                         
                         v_existing_fitem_change_tf := 'T';

                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '...... Updated the Datamart of FIChange and FItem Objects'
                              );

                         end if;

                         v_cur_total_amount := v_cur_total_amount + (v_fichange_amount*-1);
                         
                         -- UTPRODUCT-4159
                         if v_session_control.gLogging_Full
                         then

                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '......v_cur_total_amount:'||v_cur_total_amount
                              );

                         end if;
          -- 10/22 KR                               
         declare
          
               -- INITIAL_AMOUNT
               v_dm_col_338646 number;
               -- BILLINGACCOUNTTRXSET_ID
               v_dm_col_556646 number;
               -- BALANCE_AMOUNT
               v_dm_col_288919 number;
               -- CURRENT_PAY_PLAN_INST
               v_dm_col_557246 varchar2(10);
               
               v_count         number;
          
          begin

               select count(1) into v_count from DRAGON_SCHEDULED_INSTALLMENT where installment_id = v_mod_installment_object_id;

               if v_count <> 0 then
               
                    v_dm_col_338646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_mod_installment_object_id,'32080646' );
                    --v_dm_col_556646 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_installment_object_id,'29704846.29728501.212298.31866546.211343' );
                    v_dm_col_288919 := pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, v_mod_installment_object_id,'32080746' );

                    v_dm_col_557246 := pkg_os_bv.fn_bv_path_display_value_get( in_session_id, in_transaction_id, v_mod_installment_object_id, '33820646', null, v_dm_col_557246, 'F', null);
   
                    update DRAGON_SCHEDULED_INSTALLMENT set
                         INITIAL_AMOUNT = v_dm_col_338646
                         ,BILLINGACCOUNTTRXSET_ID = v_dm_col_556646
                         ,BALANCE_AMOUNT = v_dm_col_288919                              
                         ,TRANSACTION_ID = in_transaction_id
                         ,SESSION_ID = in_session_id
                    where INSTALLMENT_ID = v_mod_installment_object_id;
                    
               else

                    pkg_os_datamart.sp_datamart_update_row
                    (
                         in_session_id,
                         in_transaction_id,
                         v_mod_installment_object_id,
                         v_datamart_tf
                    );
                    
               end if;
          
          end;                         
-- 10/22 KR
                         if v_cur_total_amount = 0
                         then

                              exit;

                         end if;

                    end loop;

                    v_mod_scheduled_payment_index := v_mod_scheduled_payment_list.next( v_mod_scheduled_payment_index );

                    -- UTPRODUCT-4159
                    if v_cur_total_amount = 0
                         then

                              exit;

                         end if;
               end loop;

          end if;

     end if;
*/
     ------------------------ End of clearing due amounts of chosen payplan with payplan change credit --------------
     --OSPRODUCT-12737 end   

  -- This is required as a consolidated amount proved some apply happened on the existing financials

    if v_existing_fitem_change_tf = 'T'    -- KR 12/20
    then
     v_fichange_action       :=    gFIChange_Change;

     --
     -- Call the FIChange creation procedure with the input parameters identified hitherto
     --
     --                   if in_policy_transaction_type = pkg_os_policy_transaction.gPolicyTrxType_Endorsement
     --                      and in_prior_billing_method_id is not null -- so change billing method
     --                   then
     -- we are creating the offset of what was taken out

     v_cur_total_amount_start := (v_cur_total_amount_start - v_cur_total_amount) * (-1);  --OSPRODUCT-12737

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... Applied amount on FItem associated with old Installments. Now close the previously created Offset FItem (Change Credit): ' || v_fitem_id
               || ' with opposite Amount: ' || v_cur_total_amount_start
          );

     end if;

     if v_cur_total_amount_start <> 0 -- and v_due_fitem_flag = 1 KR CR
     then

          pkg_db_object.sp_fichange_create
          (
               in_session_id                  =>  in_session_id,
               in_transaction_id              =>  in_transaction_id,
               in_parent_fitransaction_id     =>  in_fi_trx_id,
               out_fichange_id                =>  v_fi_change_id,
               in_fichange_action             =>  v_fichange_action,
               in_fichange_action_delta       =>  v_cur_total_amount_start,
               in_fichange_ref_fitem          =>  v_fitem_id,
               in_fichange_sum_include        =>  v_sum_include,
               in_fichange_process_date       =>  to_char(v_fichange_process_date, pkg_os_constant.DragonDateFormatDefault ),
               in_fichange_ref_pol            =>  in_master_policy_id,
               in_fichange_ref_pol_trx        =>  in_policy_transaction_id,
               in_fichange_belongs_to         =>  v_billaccount_parent_id
          );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    ' ...... Create the FIChange object after collecting all the BV values' || v_fi_change_id
               );

          end if;

          --
          -- Update the FItem Datamart
          --

          pkg_os_datamart.sp_datamart_update_row
          (
               in_session_id,
               in_transaction_id,
               v_fitem_id,
               v_datamart_tf
          );

       end if;
end if; --- KR 12/20
     --
     --  Loop through all identified Recon Statements and call the Recon Exclude Process
     --

     if v_fitem_recon_batch_list.count > 0
     then

          v_fitem_recon_batch_index := v_fitem_recon_batch_list.first;

          while v_fitem_recon_batch_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Calling the Recon Exclude Process for Recon Batch ID: '
                         || v_fitem_recon_batch_list(v_fitem_recon_batch_index)
                    );

               end if;

               pkg_db_reconciliation.sp_exclude_recon_items
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_recon_batch_list(v_fitem_recon_batch_index),
                    io_action_outcome_id
               );

               v_fitem_recon_batch_index := v_fitem_recon_batch_list.next(v_fitem_recon_batch_index);

          end loop;

     end if;

     --
     --  Update the Datamart of all unique Installments associated with this Cash Apply process
     --

     if v_fitem_installment_list.count > 0
     then

          v_fitem_installment_index := v_fitem_installment_list.first;

          while v_fitem_installment_index is not null
          loop

               if v_session_control.gLogging_Full then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... Updating the Datamart for Installment ID: '
                         || v_fitem_installment_list(v_fitem_installment_index)
                    );

               end if;

               pkg_os_datamart.sp_datamart_update_row
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_installment_list(v_fitem_installment_index),
                    v_datamart_tf
               );

               v_fitem_installment_index := v_fitem_installment_list.next(v_fitem_installment_index);

          end loop;

     end if;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;


exception
  when others then
  pkg_os_logging.sp_log_error
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... Exception '||
                    sqlerrm(sqlcode)
               );
raise;
end sp_cpp_termstrt_fitem_fichnge;

-- KR CR
----------------------------------------------------------------------------------------------
-- OSPRODUCT-20551 Start
procedure sp_poltrm_payer_inst_upd
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_termpayer_object_id        in             object.object_id%type,
     io_action_outcome_id          in out         outcome.outcome_id%type
)    
is

     v_session_control                      pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant system_log.program_name%type  := pkg_name||'sp_poltrm_payer_inst_upd';

     v_Choosen_TrmPayer_payplan_id          object.object_type_id%type;
     v_installment_object_id                object.object_id%type;     
     v_scheduled_payment_list               pkg_os_object.t_object_list;
     v_scheduled_payment_index              number;
     io_datamart_tf                         char(1);

begin
                              
     if v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Term Payer ID : ' ||in_termpayer_object_id
          );
     end if; 
                              
     v_Choosen_TrmPayer_payplan_id    := pkg_os_object_io.fn_object_bv_get
                                             (
                                                  in_session_id,
                                                  in_transaction_id,
                                                  in_termpayer_object_id,
                                                  32705024
                                             );
     
     if v_session_control.gLogging_Full
     then
          
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' TermPayer PayPlan ID : '|| v_Choosen_TrmPayer_payplan_id
          );
          
     end if; 
                              
     if  in_termpayer_object_id is not null 
     and v_Choosen_TrmPayer_payplan_id is not null 
     then 

          v_scheduled_payment_list.delete;

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               v_Choosen_TrmPayer_payplan_id,
               pkg_db_billing_modify.gObjType_ScheduledPayment,
               v_scheduled_payment_list,
               pkg_db_billing_modify.gbv_ScheduledPayment_num
          );
                                        
          if v_scheduled_payment_list.count > 0
          then

               v_scheduled_payment_index    :=    v_scheduled_payment_list.first;

               while v_scheduled_payment_index is not null loop

                    if pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_scheduled_payment_list(v_scheduled_payment_index), pkg_db_billing_modify.gbv_ScheduledPaymentType ) = 1
                    then

                         v_installment_object_id    := pkg_os_object_io.fn_object_bv_get
                                                       (
                                                            in_session_id,
                                                            in_transaction_id,
                                                            v_scheduled_payment_list(v_scheduled_payment_index),
                                                            pkg_db_billing_modify.gbv_ScheduledRefInstallment
                                                       );
                                                                                                                                                                                                    
                         pkg_os_object_io.sp_object_bv_set
                         (                                     
                              in_session_id,
                              in_transaction_id,
                              v_installment_object_id,
                              pkg_db_multipayer.gbv_installment_ref_ptermpayer, -- 32726624
                              in_termpayer_object_id
                         );
                         
                         pkg_os_object_io.sp_object_bv_set
                         (                                     
                              in_session_id,
                              in_transaction_id,
                              v_installment_object_id,
                              gbv_Ref_Bel_to_PayPlan_ID, -- 34001446
                              v_Choosen_TrmPayer_payplan_id
                         );
                                                                                                                                 
                         pkg_os_datamart.sp_datamart_update_row
                         (
                              in_session_id,
                              in_transaction_id,
                              v_installment_object_id,
                              io_datamart_tf 
                         );   
                                                                                                                                    
                         if v_session_control.gLogging_Full
                         then
                              pkg_os_logging.sp_log
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   '.. v_installment_object_id'|| v_installment_object_id||
                                   '..Set Associate payer '|| in_termpayer_object_id
                              );
                         end if; 
                                                       
                    end if;

                    v_scheduled_payment_index     :=     v_scheduled_payment_list.next(v_scheduled_payment_index);

               end loop;     -- while v_scheduled_payment_index is not null loop

          end if;  -- if v_scheduled_payment_list.count > 0
                                        
     end if;                               
                      
exception
     when others then

           null; 

end sp_poltrm_payer_inst_upd;
-- OSPRODUCT-20551 End
----------------------------------------------------------------------------------------------

--Kiran start OSPRODUCT-29816 / 34066
--   %NAME
--        sp_fitems_associate
--
--   %USAGE
--        Procedure to set the relationship between Fitems with given installment list and fitem list.
--
--   %ALGORITHM
--   1. Identify the records from DB_ELEMENT_ASSOCIATON table for a given product
--   2. For each installment identify the elements .
--      a. Prepare the index using element, Debit/Credit and installment.
--      b. Identify the FItem and Offset item using the indexes
--      c. Retrive the Fitem BV from metadata to set the relation between  Fitem and Offset item.
--      d. Set the relationship between  Fitem and Offset item.
--   3. end loop 
--
--   %PARAM    in_session_id                       Session Id
--   %PARAM    in_transaction_id                   Transaction Id
--   %PARAM    in_product_id                       Product Id
--   %PARAM    in_policy_image_id                  Policy Image Id
--   %PARAM    in_policy_trx_id                    Pollicy Transaction Id
--   %PARAM    in_instl_list                       Installments list
--   %PARAM    in_fitem_list                       Fitem contains Index as Md element, Debit/Credit value as 1/2 and installment
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
procedure sp_fitems_associate
(
     in_session_id                    in    object.object_id%type,
     in_transaction_id                in    object.object_id%type,
     in_product_id                    in    object.object_id%type,
     in_policy_image_id               in    object.object_id%type,
     in_policy_trx_id                 in    object.object_id%type,
     in_installment_object_id         in    object.object_id%type,
     in_fitem_list                    in    t_manual_added_fitem_list
) 
as
     v_procedure_name                 constant         system_log.program_name%type := pkg_name||'sp_fitems_associate';
     v_session_control                pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_fitem_index                    varchar2(100);
     v_offset_index                   varchar2(100);
     
     v_fitem_id                       number;
     v_offset_id                      number;
     
     v_fitem_bv_to_set_association    db_element_association.financial_bv_path%type;
     
     -- Cursor to identify the records from DB_ELEMENT_ASSOCIATON table for a given product
     cursor c_element_association 
     is
         select
              dea.db_element_association_id,
              dea.db_billing_element_id,
              dea.element_debit_credit,
              dea.db_billing_offset_element_id,
              dea.offset_debit_credit,
              dea.element_bv_path,
              dea.financial_bv_path
         from
              db_element_association dea
         where
              dea.pd_product_id = in_product_id
         and 
              active = 'T'
         order by
              dea.db_billing_element_id,
              dea.db_element_association_id; 
begin
	    
     if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'Fitems association started:'
               ||'... Fitems count:'||in_fitem_list.count               
          );
     end if;          
        
    
     if v_session_control.gLogging_Full then
         
           pkg_os_logging.sp_log
           (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
              '... Installment id: '||in_installment_object_id
           );
     end if;                         
     for v_element_association in  c_element_association
     loop
          --Preparing the index using element, Debit/Credit and installment.
          v_fitem_index  := v_element_association.db_billing_element_id||':'||v_element_association.element_debit_credit|| ':'||in_installment_object_id;
          v_offset_index := v_element_association.db_billing_offset_element_id||':'||v_element_association.element_debit_credit|| ':'||in_installment_object_id;
               
          if v_session_control.gLogging_Full then
          
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...... v_fitem_index ->Billing ELement:Debit 1/Credit 2: Installment Object:'||v_fitem_index||
                    '... v_offset_index ->Offset ELement:Debit 1/Credit 2: Installment Object:'||v_offset_index
               );
          end if;       
          --Identify the FItem and Offset item using the indexes        
          if in_fitem_list.exists(v_fitem_index) then
               v_fitem_id     := in_fitem_list(v_fitem_index);
          end if;
               
          if in_fitem_list.exists(v_offset_index) then
               v_offset_id    := in_fitem_list(v_offset_index); 
          end if;

          --Retrive the Fitem BV from metadata to set the relation between  Fitem and Offset item.
          v_fitem_bv_to_set_association := substr(v_element_association.financial_bv_path,1, instr( v_element_association.financial_bv_path, PKG_DB_CONSTANT.gObjType_FItem)-2);
               
          if v_session_control.gLogging_Full then
          
               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '......... Fitem association for :'||v_element_association.db_billing_element_id||
                    ' v_fitem_index:'||v_fitem_index||
                    ' v_offset_index:'||v_offset_index||
                    ' v_fitem_id: '||v_fitem_id||
                    ' v_offset_id: '||v_offset_id||
                    ' v_fitem_bv_to_set_association: '||v_fitem_bv_to_set_association
               );
          end if; 
               
          --Set the relationship between  Fitem and Offset item.
          if v_fitem_id is not null and v_offset_id is not null then
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_fitem_id,
                    v_fitem_bv_to_set_association,
                    v_offset_id
               );                            
               pkg_os_object_io.sp_object_bv_set
               (
                    in_session_id,
                    in_transaction_id,
                    v_offset_id,
                    v_fitem_bv_to_set_association,
                    v_fitem_id
               );  

               if v_session_control.gLogging_Full then
               
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Fitem association is done between the objects'||
                         ' v_fitem_id: '||v_fitem_id||
                         ' and v_offset_id: '||v_offset_id||
                         ' on the BV: '||v_fitem_bv_to_set_association
                    );
               end if;
          else
               if v_session_control.gLogging_Full then
               
                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '............ Fitem association is not done as the Fitems are not created'
                    );
               end if;                     
               
          end if;-- v_fitem_id is not null and v_offset_id is not null
                         
     end loop;-- end For loop - v_element_association          

end sp_fitems_associate;

--Kiran end OSPRODUCT-29816 / 34066
----------------------------------------------------------------------------------------------
begin

     pkg_db_payplan_modify.payment_plan_tab.delete;
     g_schedule_element_cache.delete;
     g_AllInstallment_cache.delete;

     for vPaymentPlanList in pkg_db_payplan_modify.getPaymentPlanList loop

          pkg_db_payplan_modify.payment_plan_tab(vPaymentPlanList.payment_plan_id)     :=   vPaymentPlanList;

     end loop;



end pkg_db_billing_modify;
/
