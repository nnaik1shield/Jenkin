CREATE OR REPLACE PACKAGE BODY PKG_PC_FUNCTIONS
-------------
-- $Workfile:   PKG_PC_FUNCTIONS.sql  $
-- $Revision: 60188 $
--   $Author: pmedapati@OSHQ.ONESHIELD.COM $
--     $Date: 2017-07-25 21:17:18 +0530 (Tue, 25 Jul 2017) $
-------------

AS

pkg_name constant   system_log.program_name%type  := 'pkg_pc_functions.';

procedure sp_underwriting_correct_app(in_session_id        in object.object_id%type,
                                in_transaction_id    in object.object_id%type,
                                in_policyquote_id    in object.object_id%type,
                                io_action_outcome_id in out outcome.outcome_id%type) as
----------------
  v_object_list            pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
  v_object_list_index           number := null;
  v_out_object_id          object.object_id%type;
  v_rule_type_id           number;
  v_relevant_flag          object_bv_value.business_variable_value%type;
  v_overridden_flag        object_bv_value.business_variable_value%type;
  v_forgiven_flag          object_bv_value.business_variable_value%type;
  gUWRuleType_HardStop     constant number := 13405;
  gbv_PolicyUWTriggerOveridden       constant business_variable.business_variable_id%type := 27370205;
  gbv_PolicyUWTriggerRelevant        constant business_variable.business_variable_id%type := 27372205;
  gbv_PolicyUWTriggerForgiven        constant business_variable.business_variable_id%type := 29021506;

begin

 --create an object 
 pkg_os_object.sp_object_create(in_session_id,in_transaction_id,3347948,in_policyquote_id,v_out_object_id);
   
    pkg_os_object_Search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_policyquote_id,
                                                        2240405,
                                                        v_object_list);

    v_object_list_index        := v_object_list.first;
     while v_object_list_index is not null loop
     
     v_rule_type_id := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_object_list( v_object_list_index ), 27489104 ); --27489104PolicyUnderwritingTriggerDetails - List - Underwriting Trigger Type
     
     if  v_rule_type_id = gUWRuleType_HardStop then-- gUWRuleType_HardStop then
       v_relevant_flag  := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_object_list( v_object_list_index ), gbv_PolicyUWTriggerRelevant );
               v_overridden_flag := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_object_list( v_object_list_index ), gbv_PolicyUWTriggerOveridden );
              -- v_forgiven_flag := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_object_list( v_object_list_index ), gbv_PolicyUWTriggerForgiven );

               if   v_relevant_flag = pkg_os_constant.gBoolean_True
                    and
                    (
                         v_overridden_flag is null
                         or
                         v_overridden_flag = pkg_os_constant.gBoolean_False
                    )
             /*   and
                   (
                         v_forgiven_flag is null
                         or
                         v_forgiven_flag = pkg_os_constant.gBoolean_False
                    )*/
                then
                  pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_object_list( v_object_list_index ),32626048,v_out_object_id  ); --PolicyUnderwritingTriggerDetails - xReference - _Reference_Correct Application
               end if;
     end if;
      v_object_list_index := v_object_list.next(v_object_list_index);

    end loop;
  --session new object
 pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,in_session_id,210395,v_out_object_id);
  io_action_outcome_id := pkg_os_constant.gOutcome_Ok;
END;
-----------------------------------------------------------------------------------------------------
procedure sp_validate_product
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_action_object_id           in        object.object_id%type,
     in_action_object_type_id      in        object.object_type_id%type,
     io_action_outcome_id          in out    outcome.outcome_id%type
) as
     pkg_name                      constant system_log.program_name%type := 'test';
     v_procedure_name              constant system_log.program_name%type := pkg_name||'sp_validate_product';
     gbv_SubmLinesIncluded         constant number(12) := 27354305;
     gbv_Program                   constant number(12) := 32633748;
     gbv_SubmTranType              constant business_variable.business_variable_id%type   := 4194;
     v_lines_list                  object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id, gbv_SubmLinesIncluded );
     v_program_list                object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id, gbv_Program );
     v_product_id                  pd_product.pd_product_id%type;
     v_program_table                 pkg_os_token.t_string_table;
     v_program_index                 number                                       := null;

     v_jurisdiction_id             jurisdiction.jurisdiction_id%type            := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id, 29482546 );
     v_trantype_id                 object.object_id%type    := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id,gbv_SubmTranType );
     v_exchange_id                 object.object_id%type    :=   pkg_os_wf_session.fn_exchange_get(in_session_id, in_transaction_id);

     v_writing_company_md_id       object.object_id%type;
     v_writing_company_id          object.object_id%type;
     v_exchange_sponsor_partner_id object.object_id%type;
     v_insurance_line              program.PROGRAM_INSURANCE_LINE_ID%type;
     v_product_value               outcome.outcome_id%type := 22;
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
/*
-- Store LOB in Policy.Policy Insurance Line
          -- OneShieldReference268060042276904Policy.Policy Insurance Line
          --
          pkg_os_object_io.sp_object_bv_set
          (
               in_session_id,
               in_transaction_id,
               v_new_policy_quote_id,
               26806004,
               v_program_table( v_program_index )
          );
*/

begin
pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'v_program_list: '
               ||v_program_list );

     pkg_os_token.sp_tokenize_string
     (
          v_program_list,
          ',',
          v_program_table
     );

     v_program_index := v_program_table.first;


     while v_program_index is not null loop
       if v_session_control.gLogging_Full then
         pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'in_action_object_id: '
               ||in_action_object_id
               ||' in_action_object_type_id:'
               ||in_action_object_type_id
               ||' v_program_table(v_program_index): '
               || v_program_table(v_program_index)
               ||'v_program_index:'||v_program_index
               ||'v_jurisdiction_id: '
               ||v_jurisdiction_id
               || 'eff date: '
               ||pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id, 4095 )
          );
         end if;

         --get insurance line from program
         if v_program_table(v_program_index) is not null then
         select PROGRAM_INSURANCE_LINE_ID into v_insurance_line from program where program_id=v_program_table(v_program_index) ;
         else
         v_insurance_line:=null;
         end if;
            --
          -- Get the product status
          --
          v_product_value :=       pkg_base_validate_product.fn_get_product_status
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_insurance_line,
                                        v_jurisdiction_id,
                                        v_exchange_id,
                                        pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_action_object_id, 4095 ) -- effective date   in   varchar2
                                   );
           --set submission lines included variable to  v_insurance_line
          pkg_os_object_io.sp_object_bv_set( in_session_id, in_transaction_id, in_action_object_id, gbv_SubmLinesIncluded,v_insurance_line );                                                  
          if v_product_value in (36046, 36146)
          then
               exit;
          end if;
          if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'v_product_value: '
               ||v_product_value

          );
          end if;
          --
          --   Onto the next product ...
          --
          v_program_index := v_program_table.next( v_program_index );

     end loop;


     io_action_outcome_id := v_product_value; --pkg_os_constant.gOutcome_OK;

end sp_validate_product;

-----------------------------UTPRODUCT-148-----------------------



--UTPRODUCT-363-- It checks the partner and partner parent circular relationship
function fnc_validate_cicular_relation(in_current_partner_id   object.object_id%type,in_parent_object_id   object.object_id%type
                                )
    return varchar2 is
    begin
         
    declare
    
    v_parent_tf   varchar2(100);  
    v_parent    object.object_id%type;
    type tb_object_list is table of varchar2(100) index by varchar2(100);
    v_tb_object_list   tb_object_list;
   
     
    function fn_parent_of_parent_get(in_current_partner_id   object.object_id%type,in_parent_object_id   object.object_id%type
                                )
    RETURN  varchar2
    is
      

    begin
        if in_current_partner_id is not null 
             then 
                    v_tb_object_list(in_current_partner_id) := in_current_partner_id;
        end if;
        
       
        v_parent := pkg_os_object.fn_object_parent_get(1,1, in_parent_object_id);
               

        if v_parent is null then
             return 'F';
        elsif   v_parent is not null and  v_tb_object_list.exists(v_parent) then
              return 'T';
        elsif v_parent is not null and not(v_tb_object_list.exists(v_parent)) then
               v_tb_object_list(v_parent) := v_parent;
               return  fn_parent_of_parent_get(null,v_parent );
        end if ;



        return 'F';

end fn_parent_of_parent_get;

   
          
            
    
    begin
         
          v_parent_tf:= fn_parent_of_parent_get(in_current_partner_id,in_parent_object_id);
          
     return v_parent_tf; 
           
     end;
   
end fnc_validate_cicular_relation;
--------------------------------------------------------
 function fn_check_notify_subscriber 
         (in_session_id object.object_id%type,
         in_transaction_id  object.object_id%type,
         in_subscriber_id  object.object_id%type)
return char
as

 v_master_entity_id        object.object_id%type;
 v_version_object_id       object.object_id%type;
 v_entity_version          object_bv_value.business_variable_value%type;
 v_cust_entity_id          object.object_id%type;
 v_cust_version            object_bv_value.business_variable_value%type;

begin

  v_master_entity_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, in_subscriber_id, 2871246 ); --get parent of type master entity
  v_version_object_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id,v_master_entity_id,'32210018.30000546');


v_entity_version :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id,v_version_object_id,'32234246');

--v_cust_entity_id :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id,v_version_object_id,'34040446');
v_cust_version :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id,in_subscriber_id,'32234246');


if nvl(v_cust_version,0)  < nvl(v_entity_version,0) then
  return 'T';
else
  return 'F';
end if;
exception when others then
  return 'F';
end;
---------------------------------------------------------------------------------------------------------------
--   %NAME
--        fn_get_associated_messageentity_object
--
--   %USAGE
--        This function will return an associated MessageEntity object for current ORM id
--
--   %ALGORITHM
--        Get list of all MessageEntity objects under UserSession_child_ExternalObjectCache
--        Loop in through each entity object and compare the ORM id with the current ORM id
--        Return the latest MessageEntity object for this ORM id
--
--
--   %PARAM    in_session_id                 Session Id
--   %PARAM    in_transaction_id             Transaction Id
--   %PARAM    in_orm_id                     ORM Id 
----------------------------------------------------------------------------------------------------------------

function fn_get_associated_messageentity_object
     (
          in_session_id      in object.object_id%type,
          in_transaction_id  in object.object_id%type,
          in_orm_id          in varchar2
     )
     return number
     is

          v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
          v_procedure_name          constant system_log.program_name%type := 'fn_get_associated_messageentity_object';
          
          v_messageentity_object_list        pkg_os_object.t_object_list;
          v_messageentity_object_list_index  number;
          v_messageentity_object_id          object.object_id%type;
          v_messageentity_orm_id             varchar2(500);
          
begin

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     ' |||||| Get associated message entity object for ORM id:'   ||   in_orm_id 
                );

          end if;
          
          -- Create list of message entity object IDs

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               in_session_id,
               3198846,                    --gObjMessageEntity
               v_messageentity_object_list
          );
          
          -- Loop through list of message entity object IDs and load information into arrays
          v_messageentity_object_list_index := v_messageentity_object_list.first;
          
          if v_messageentity_object_list_index is null
          then
             
             if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                          in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          ' |||||| No MessageEntity object found under UserSession' 
                     );

             end if;
             
          end if;

          while v_messageentity_object_list_index is not null loop

               v_messageentity_orm_id := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_messageentity_object_list( v_messageentity_object_list_index ), 32234146 );

               if v_messageentity_orm_id is not null and v_messageentity_orm_id = in_orm_id
               then

                    if v_session_control.gLogging_Full
                    then

                         pkg_os_logging.sp_log
                         (
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' Found MessageEntity object '  ||  v_messageentity_object_list( v_messageentity_object_list_index )    ||
                              ' for ORM Id '|| in_orm_id
                         );

                    end if;
                    
                    v_messageentity_object_id := v_messageentity_object_list( v_messageentity_object_list_index );

               end if;

               v_messageentity_object_list_index := v_messageentity_object_list.next( v_messageentity_object_list_index );

          end loop; -- For each MessageEntity object ...
          
          return v_messageentity_object_id;
          

end fn_get_associated_messageentity_object;
---------------------------------------



procedure sp_delete_policycust_objects(in_session_id number,
                                         in_transaction_id number,
                                         in_policyquote_id number,
                                         io_outcome_id     in out outcome.outcome_id%type)
  
   as
    v_policycustomer_id  object.object_id%type;
    v_primary_entity_id  object.object_id%type;
    v_policypersonal_id  object.object_id%type;
    v_policypam_id       object.object_id%type;
    v_driver_list        pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
    v_driver_index       number;
    v_vehicle_list       pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
    v_vehicle_index      number;
    v_driver_id          object.object_id%type;
    v_covered_driver_id  object.object_id%type;
    v_vehicle_first_id   object.object_id%type;
    v_vehicle_id         object.object_id%type;
    v_covered_vehicle_id object.object_id%type;
    v_policyquote_id     object.object_id%type;
    --v_delete_objects            number;
    v_source             object_bv_value.business_variable_value%type;
    v_lob_id             object_bv_value.business_variable_value%type;
  begin
  
    --v_delete_objects := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_session_id,32580948);
  
    --if nvl(v_delete_objects,2) = 1 then
    v_policyquote_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                          in_transaction_id,
                                                          in_policyquote_id,
                                                          212318);
    v_lob_id := pkg_os_object_io.fn_object_bv_get
                ( 
                  in_session_id, 
                  in_transaction_id, 
                  v_policyquote_id, 
                  211636    --Policy Product Definition ID
                );

   if v_lob_id = 57405 then                  --call only for Personal Auto

	    v_policycustomer_id := pkg_os_object_search.fn_object_11_child_get(in_session_id,
															 in_transaction_id,
															 v_policyquote_id,
															 383005);
	    
	    v_source := pkg_os_object_io.fn_object_bv_get(in_session_id,
											  in_transaction_id,
											  v_policycustomer_id,
											  gbv_serviceSource -- Object Source/Origin Type Mapped
											  );
	    
	    if (v_source = 'F') then
	    v_primary_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
													 in_transaction_id,
													 v_policycustomer_id,
													 29253414);
	  
	    v_policypersonal_id := pkg_os_object_search.fn_object_11_child_get(in_session_id,
															 in_transaction_id,
															 v_policyquote_id,
															 452);
	    v_policypam_id      := pkg_os_object_search.fn_object_11_child_get(in_session_id,
															 in_transaction_id,
															 v_policypersonal_id,
															 2265905);
	  
	    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
												 in_transaction_id,
												 v_policycustomer_id,
												 205, -- cus entity
												 v_driver_list);
	  
	    --
	    --   Loop thru the collection and delete objects
	    --
	    v_driver_index := v_driver_list.first;
	  
	    while v_driver_index is not null loop
	    
		 v_driver_id := v_driver_list(v_driver_index);
	    
		 if v_driver_id <> v_primary_entity_id then
	      
		   pkg_os_object.sp_object_delete(in_session_id,
								    in_transaction_id,
								    v_policycustomer_id,
								    v_driver_id,
								    205);
	      
		 end if;
		 v_driver_index := v_driver_list.next(v_driver_index);
	    
	    end loop;
	  
	    --get vehicles list
	    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
												 in_transaction_id,
												 v_policycustomer_id,
												 377401, -- vehicle
												 v_vehicle_list);
	  
	    --
	    --   Loop thru the collection and delete objects
	    --
	    v_vehicle_index := v_vehicle_list.first;
	  
	    while v_vehicle_index is not null loop
	    
		 v_vehicle_id := v_vehicle_list(v_vehicle_index);
		 if v_vehicle_first_id is null then
		   v_vehicle_first_id := v_vehicle_id;
		   pkg_os_object_io.sp_object_bv_set(in_session_id,
									  in_transaction_id,
									  v_vehicle_first_id,
									  1262,
									  null);
		   pkg_os_object_io.sp_object_bv_set(in_session_id,
									  in_transaction_id,
									  v_vehicle_first_id,
									  32521548,
									  null);
		 end if;
	    
		 if v_vehicle_id <> v_vehicle_first_id then
		   pkg_os_object.sp_object_delete(in_session_id,
								    in_transaction_id,
								    v_policycustomer_id,
								    v_vehicle_id,
								    377401);
	      
		 end if;
	    
		 v_vehicle_index := v_vehicle_list.next(v_vehicle_index);
	    end loop;
	    /*
	    pkg_os_object_io.sp_object_bv_set(in_session_id,
								   in_transaction_id,
								   in_session_id,
								   32580948,
								   null);
	    */
	    -- end if; --if indicator is Yes
	    end if;
    end if;
  end;


-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_check_unique_username_tf
--
--   %USAGE
--        Used to check if there is already an existing user with the same username.
--      If Agency Code is null, this function can be used for checking duplicate usernames in the Internal users list.
--
--   %ALGORITHM
--        Not Specified.
--
--   %PARAM    in_user_id           User ID
--   %PARAM    in_user_name         User Name
--   %PARAM    in_exchange_id       Exchange ID
--   %PARAM    in_agency_code       Agency Code
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_check_unique_username_tf
(
    in_user_id      in number,
    in_user_name        in varchar2,
    in_exchange_id  in number,
    in_agency_code  in varchar2 default '0'
)
return char
is

     v_return_value char(1) := null;

begin
     
     if lower(in_user_name) in ( 'super','dapuser') then -- there can be only one super user in the system
       select
        decode( count(1), 0, 'T', 'F' )
    into
        v_return_value
    from
        dragon_user
    where
        upper(username) = upper(in_user_name)
    and
        user_id <> in_user_id;
   
     else --the username should be unique within an agenc
     select
        decode( count(1), 0, 'T', 'F' )
    into
        v_return_value
    from
        dragon_user
    where
        upper(username) = upper(in_user_name)
        
    and   agency_code  = in_agency_code
     and
        user_id <> in_user_id;

     end if;
     
     return v_return_value;

end fn_check_unique_username_tf;

-----------------------------------------------------------------------------------------------------------------------------------------

--UTPRODUCT-994

--===================================================================================================================================================
--
--   sp_update_queue_object_detail
--
--   This procedure will create the new object for QueueObjectDetail and QueueObjectAsgmtDetail.
--   QueueObjectDetail object is having the information of queue and assigned task relationship.
--   QueueObjectAsgmtDetail object is having the information about detail of assignment.
--
--===================================================================================================================================================
procedure sp_update_queue_object_detail
(
     in_session_id            in object.object_id%type,
     in_transaction_id        in object.object_id%type,
     in_action_object_id      in object.object_id%type
) is

     v_session_control             pkg_os_session.r_dragon_session_control      := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_procedure_name              constant system_log.program_name%type        := pkg_name||'sp_update_queue_object_detail';
     v_queue_object_detail_id      object.object_id%type                        := null;
     v_queue_object_asgmt_id       object.object_id%type                        := null;

     out_queue_object_detail_id    object.object_id%type                        := null;

     out_queue_asgmt_object_id     object.object_id%type                        := null;
     v_queue_name                  dragon_queue_definition.queue_name%type;
     v_assignment_type_enum        dragon_queue_definition.assignment_type_enum%type;
     v_assignment_type             dragon_queue_definition.assignment_type%type;
     v_count                       integer;
     v_user_id                     object.object_id%type;
     v_user_name                   Queue_Object_Asgmt_Detail.Assigned_Dragon_User_Name%type;
     v_queue_id                    queue_object_detail.queue_id%type;
     v_pre_queue_id                queue_object_detail.queue_id%type;

     
begin

     begin    
       select qoad.queue_object_asgmt_id,qod.queue_object_detail_id,qod.queue_id into v_queue_object_asgmt_id,v_queue_object_detail_id,v_pre_queue_id 
          from queue_object_detail qod,queue_object_asgmt_detail qoad
          where qod.queue_object_detail_id=qoad.queue_object_detail_id
          and qod.assigned_object_id=in_action_object_id;
     exception when no_data_found then 
        v_queue_object_asgmt_id:=null;
        v_queue_object_detail_id:=null;
        v_pre_queue_id:=null;
     end;
     v_user_id := pkg_os_object_io.fn_object_bv_get
          (
               in_session_id,
               in_transaction_id,
               in_action_object_id,
               pkg_os_wf_task.gbv_TaskAssignedTo
          );
         if v_session_control.gLogging_Full 
           then
              pkg_os_logging.sp_log 
                ( 
                  in_session_id, 
                  in_transaction_id, 
                  v_procedure_name, 
                  '...... v_user_id:' || v_user_id );
           end if;


         v_queue_id := pkg_os_object_io.fn_object_bv_get
          (
          in_session_id,
          in_transaction_id,
          in_action_object_id,
          pkg_os_wf_task.gbv_assignedToQueue       
          );
          
  
               
           if v_session_control.gLogging_Full 
           then
              pkg_os_logging.sp_log 
                ( 
                  in_session_id, 
                  in_transaction_id, 
                  v_procedure_name, 
                  '...... v_queue_id:' || v_queue_id );
           end if;


          if ((v_queue_id is not null and v_pre_queue_id is null) or (v_queue_id is not null and v_pre_queue_id is not null
            and v_queue_id <>v_pre_queue_id))
          then
            
               v_queue_name := pkg_os_object_io.fn_object_bv_get
                                  (
               	                   in_session_id,
                                       in_transaction_id,
                                       v_queue_id,
                                       pkg_os_wf_task.gbv_QueueDefinitionName
                                   );
               
                v_assignment_type_enum := pkg_os_object_io.fn_object_bv_get
                                        (
                                              in_session_id,
                                              in_transaction_id,
                                              v_queue_id,
                                              pkg_os_wf_task.gbv_QueueAssignmentType
                                         );                                      
                                         
                 if v_assignment_type_enum=pkg_os_wf_task.g_QueueAssignmentTypePullEnum then
                      v_assignment_type := pkg_os_wf_task.g_QueueAssignmentTypePull;
                 elsif v_assignment_type_enum=pkg_os_wf_task.g_QueueAssignmentTypePushEnum then
                      v_assignment_type := pkg_os_wf_task.g_QueueAssignmentTypePush;
                 else
                      v_assignment_type:= null;    
                 end if;      
                 
                           
                           if v_session_control.gLogging_Full 
                           then
                              pkg_os_logging.sp_log 
                                ( 
                                  in_session_id, 
                                  in_transaction_id, 
                                  v_procedure_name, 
                                  '...... v_queue_name:' || v_queue_name );
                           end if;
          
                      
          if v_queue_object_detail_id is not null
          then 

               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_QueueId,v_queue_id);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_QueueName,v_queue_name);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_AssignmentStatus,pkg_os_wf_task.gAssignToQueue);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_AssignmentStatusEnum,pkg_os_wf_task.gAssignToQueueEnum);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentType,v_assignment_type);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentTypeEnum,v_assignment_type_enum);
             
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_detail_id,pkg_os_wf_task.gbv_AssignedObjectTypeId,pkg_os_wf_task.gobjType_Task);
               
               /*if v_user_id is not null
               then
               
               v_user_name := pkg_os_object_io.fn_object_bv_get
                                       (
               	                   in_session_id,
                                       in_transaction_id,
                                       v_user_id,
                                       gbv_Person_NameFirst
                                       ) || ' ' ||  
                                       pkg_os_object_io.fn_object_bv_get
                                       (
               	                   in_session_id,
                                       in_transaction_id,
                                       v_user_id,
                                       gbv_Person_NameLast
                                       );
                                       

               if v_session_control.gLogging_Full 
               then
                  pkg_os_logging.sp_log 
                    ( 
                      in_session_id, 
                      in_transaction_id, 
                      v_procedure_name, 
                      '...... v_user_name:' || v_user_name );
               end if;
              --pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_asgmt_id,gbv_AssignedUserId,v_user_id);
              -- pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_asgmt_id,gbv_AssignedUserName,v_user_name);
              -- pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentType,v_assignment_type);
              -- pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentTypeEnum,v_assignment_type_enum);
              -- pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_queue_object_asgmt_id,gbv_ReAssignmentDate,sysdate);
              
          end if;    */
          
          
     else                               

          if v_queue_id is not null
          then
          
                 
               pkg_os_object.sp_object_create(in_session_id,in_transaction_id,pkg_os_wf_task.gobjType_QueueObjectDetail,null,out_queue_object_detail_id);

               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_QueueId,v_queue_id);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_QueueName,v_queue_name);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_AssignedObjectId,in_action_object_id);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_AssignedObjectName,pkg_os_object.fn_object_type_name_get(in_session_id, in_transaction_id, in_action_object_id ));
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_AssignmentStatus,pkg_os_wf_task.gAssignToQueue);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_AssignmentStatusEnum,pkg_os_wf_task.gAssignToQueueEnum);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentType,v_assignment_type);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_assignmentTypeEnum,v_assignment_type_enum);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_object_detail_id,pkg_os_wf_task.gbv_AssignedObjectTypeId,pkg_os_wf_task.gobjType_Task);
               
               pkg_os_object.sp_object_create(in_session_id,in_transaction_id,pkg_os_wf_task.gobjType_QueueAsgmtObjDetail,null,out_queue_asgmt_object_id);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,pkg_os_wf_task.gbv_QueueObjectDetailId,out_queue_object_detail_id);
               pkg_os_object.sp_object_parent_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,out_queue_object_detail_id);
              /* if v_user_id is not null
               then
               
               v_user_name := pkg_os_object_io.fn_object_bv_get
                                       (
               	                   in_session_id,
                                       in_transaction_id,
                                       v_user_id,
                                       gbv_Person_NameFirst
                                       ) || ' ' ||  
                                       pkg_os_object_io.fn_object_bv_get
                                       (
               	                   in_session_id,
                                       in_transaction_id,
                                       v_user_id,
                                       gbv_Person_NameLast
                                       );
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,gbv_AssignedUserId,v_user_id);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,gbv_AssignedUserName,v_user_name);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,gbv_AssignmentActionEnum,g_AssignmentActionEnum);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,gbv_AssignmentActionName,g_AssignmentActionName);
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,out_queue_asgmt_object_id,gbv_ReAssignmentDate,sysdate);

             
               
               end if;     
          */
          end if;

     end if;
   end if;  

     
   exception
          when others then
               pkg_os_logging.sp_log_error
               (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Unable to populate task entry in Queue Dashboard(queue_object_detail)for task id:'||in_action_object_id
                );
               --  raise_application_error(-20016,'testing'||sqlerrm);
end sp_update_queue_object_detail;

----------------------------UTPRODUCT-1122----------------------
function fn_aplus_token_generator
(
          in_session_id object.object_id%type,
          in_transaction_id object.object_id%type,
          in_action_object_id object.object_id%type
) 
return varchar as

  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);

  v_procedure_name  varchar2(100) := pkg_name ||
                                       'fn_aplus_token_generator';
    v_customer_name	object_bv_value.business_variable_value%type	:= null;
    v_customer_dob	object_bv_value.business_variable_value%type	:= null;
    v_risk_address	object_bv_value.business_variable_value%type	:= null;
    v_mailing_address	object_bv_value.business_variable_value%type	:= null;
    v_billing_address	object_bv_value.business_variable_value%type	:= null;
    v_return_value object_bv_value.business_variable_value%type;
    
    v_bv_customer_entity_label object_bv_value.business_variable_value%type := '32635248.29253414.211882';
begin  

  v_customer_name     := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_action_object_id, v_bv_customer_entity_label);
  v_customer_dob      := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_action_object_id, '32635248.29253414.29241714');
  v_risk_address      := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_action_object_id, '32635248.29253414.29254014.211882');
  v_mailing_address   := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_action_object_id, '32635248.29253414.29254114.211882');
  v_billing_address   := pkg_os_object_io.fn_object_bv_path_get(in_session_id, in_transaction_id, in_action_object_id, '32635248.29253414.29254214.211882');

  select standard_hash( v_customer_name ||v_customer_dob || v_risk_address || v_mailing_address || v_billing_address , 'SHA1') into v_return_value from dual;

  return v_return_value;
end;

  -----------------------------------------------------------------------------------------------------------------------------------------
  /***********************************************************************************************************************************************
  -- UTPRODUCT-1059
  -- %NAME
  --        fn_get_policycancel_target_date
  --
  -- %USAGE
  --      Set Policy Cancellation Target date for a pending cancellation transaction.
  --      When Cancellation Transaction is created Transaction Effective date will be set with Target Cancel date.
  --
  -- %ALGORITHM
  --
  --     The target Cancellation date for Company Cancellation is calculated based on the primary jurisdiction, filing, policy term.
  --      If a UW decides to cancel the policy and the policy is New Business and within the UW Period (from pd_state_compliance),
  --    then the number of days needed for notification in the column Days During UW Period else the number of days needed for notification in the column Days After UW Period. 
  --    Target Cancel Date = current date + Days (above) + Mailing Days, adjusting when Sat/Sun/Hol. Restriction = Yes
  -- If no data found in compliance table, set Target Date to Transaction effective date
  
  *******************************************************************************************************************************************/
  function fn_get_policycancel_target_date(in_session_id     in object.object_id%type,
                                           in_transaction_id in object.object_id%type,
                                           in_pol_trx_id     in object.object_id%type

                                           )

   return date is
    v_policy_trx_id      object.object_id%type := in_pol_trx_id;
    v_policy_trx_type_id pd_transaction_type.pd_transaction_type_id%type;
    v_policy_id          object.object_id%type;
    v_jurisdiction_id    object_bv_value.business_variable_value%type;
    v_product_id         pd_product.pd_product_id%type;
    v_filing_id          pd_filing.pd_filing_id%type;
    v_program_id         program.program_id%type;
    v_target_cancel_date date;
    v_pol_eff_date       date;
    v_poltrx_eff_date    date;
    v_sys_curr_date      date;
    v_trx_mail_date      date; --UTPRODUCT-3770
    v_diff_of_days       integer := 0;
    v_uw_days            integer := 0;
    v_during_uw_days     integer := 0;
    v_after_uw_days      integer := 0;
    v_target_days        integer := 0;
    v_mailing_days       integer := 0;
    v_ssh_tf             char(1) := 'F';
    v_targetdate_ssh     date;
    v_user_working_hrs   number;  --LXPRODUCT-184
    v_days_counter       integer :=0; --LXPRODUCT-184

    v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'fn_get_policycancel_target_date';
    v_session_control pkg_os_session.r_dragon_session_control;

  begin

    v_policy_trx_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_trx_id,
                                                              pkg_os_constant_bv.gbv_PolicyTranType);
    v_policy_id          := pkg_os_object.fn_object_parent_get(in_session_id,
                                                               in_transaction_id,
                                                               in_pol_trx_id);
    v_product_id         := pkg_os_product.fn_object_product_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_policy_id);
    v_filing_id          := pkg_os_product.fn_object_adoption_filing_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_policy_id);
    v_sys_curr_date      := trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,
                                                                              in_transaction_id,
                                                                              v_policy_id));
    v_jurisdiction_id    := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_id,
                                                              pkg_os_constant_bv.gbv_GenObjJurisdiction); --primary risk Jurisdiction value
    v_program_id         := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_id,
                                                              pkg_os_constant_bv.gbv_GenObjProgram);
    v_pol_eff_date       := trunc(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_policy_id,
                                                                            pkg_os_constant_bv.gbv_PolicyEffectiveDate),
                                          'YYYYMMDDHH24MISS'));
    v_poltrx_eff_date    := trunc(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_policy_trx_id,
                                                                            pkg_os_constant_bv.gbv_PolicyTranEffectiveDate),
                                          'YYYYMMDDHH24MISS'));
 --UTPRODUCT-3770 Begin
    v_trx_mail_date      := trunc(to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_policy_trx_id,
                                                                            gbv_TrxMailDate),
                                          'YYYYMMDDHH24MISS'));
    -- Find the days between Policy effective date and ( mailing date or current date)
    v_diff_of_days := (nvl(v_trx_mail_date, v_sys_curr_date) - v_pol_eff_date );
    
  --UTPRODUCT-3770 End
  
    v_user_working_hrs   :=  pkg_base_calendar.fn_user_working_hours_get(in_session_id, in_transaction_id, v_policy_id);  --LIOPRODUCT-402

    -- Retrieve the compliance data from pd_state_compliance table to calculate total UW period days for the target cancel date
    begin
      select pc.days_uw_period,
             pc.days_during_uw_period,
             pc.days_after_uw_period,
             pc.mailing_days,
             pc.sat_sun_hol_tf
        into v_uw_days,
             v_during_uw_days,
             v_after_uw_days,
             v_mailing_days,
             v_ssh_tf

        from pd_state_compliance pc

       where pc.transaction_type_id = v_policy_trx_type_id
         and pc.Jurisdiction_id = v_jurisdiction_id
         and pc.pd_product_id in
             (v_product_id, pkg_os_constant.gDefaultProductID)
         and pc.pd_filing_id <= v_filing_id
         and (pc.last_pd_filing_id is null or
             pc.last_pd_filing_id >= v_filing_id)
         and (pc.program_id is null or pc.program_id = v_program_id)
         and (pc.program_set_id is null or
             pkg_os_program.fn_program_in_set(v_program_id,
                                               pc.program_set_id) = 'T');

    exception
      when no_data_found then
        --Set Target cancel date with  transaction effective and return the value
        v_target_cancel_date := v_poltrx_eff_date;

        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                ' No Data found in pd_state_compliance table for Policy  ' ||
                                v_policy_id ||
                                'New Business UW period days for the policy  ' ||
                                v_uw_days ||
                                ' Compliance Days During UW period           ' ||
                                v_during_uw_days ||
                                'Compliance Days after UW period           ' ||
                                v_after_uw_days ||
                                'Compliance Sat Sun Holiday Restriction applies TF ' ||
                                v_ssh_tf || 'System Current Date    ' ||
                                v_sys_curr_date ||
                                'Transaction Mailing Date ' || v_trx_mail_date ||
                                'Set Target Cancel Date to Transaction Effective  Date    ' ||
                                v_target_cancel_date);

        end if;

        return v_target_cancel_date;

    end;

    -- Calculate count of days to be applied to target cancel date. Check if days during UW priod or days after UW period applies and add mailing days to the target date

    if v_diff_of_days <= v_uw_days then
      v_target_days := v_during_uw_days + v_mailing_days;
    else
      v_target_days := v_after_uw_days + v_mailing_days;
    end if;

    -- Target Cancellation Date logic
    -- current date + Days (above) + Mailing Days, adjusting when Sat/Sun/Hol. Restriction = Yes

-- Target Cancellation Date logic
    -- current date + Days (above) + Mailing Days, adjusting when Sat/Sun/Hol. Restriction = Yes
	-- Check for Weekend & Holiday restriction flag and reset the v_target_cancel_date
	--LXPRODUCT-184 start
	if nvl(v_ssh_tf, 'F') = 'T' then
	
		v_target_cancel_date := (nvl(v_trx_mail_date, v_sys_curr_date)) ;
	
		while (v_days_counter < v_target_days)
			loop
               
	-- Check for Weekend & Holiday restriction flag and reset the v_target_cancel_date
	
				if (
					pkg_base_calendar.fn_is_holiday(in_session_id, in_transaction_id, v_policy_id, v_target_cancel_date) = 'T'
					or
					pkg_base_calendar.fn_total_event_duration_get(in_session_id, in_transaction_id, v_policy_id, v_target_cancel_date) >= v_user_working_hrs
					)
				then

					v_target_cancel_date := v_target_cancel_date + 1;

				else

					v_days_counter := v_days_counter+1;
					v_target_cancel_date := v_target_cancel_date + 1;
		
				end if;
	
			end loop;
	else
		--UTPRODUCT-3770
		v_target_cancel_date := ( (nvl(v_trx_mail_date, v_sys_curr_date)) + v_target_days);
		v_targetdate_ssh     := v_target_cancel_date; --Date before SSH applies
	end if;
   
    if nvl(v_ssh_tf, 'F') = 'T' then
      v_target_cancel_date := pkg_base_calendar.fn_get_next_available_day(in_session_id,
                                                                          in_transaction_id,
                                                                          v_policy_id,
                                                                          v_target_cancel_date); -- Include Saturday, Sunday and Holiday
                                                                        
     end if;

    -- Target Cancel date is before the Policy NB Effective date , set it with Policy Effective date
    
    --LXPRODUCT-184 End
    if v_target_cancel_date < v_pol_eff_date then
      v_target_cancel_date := v_pol_eff_date;
    end if;

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Calculating Target Cancel Date for Policy and Program ' ||
                            v_policy_id || ' ' || v_program_id ||
                            'Transaction type is                       ' ||
                            v_policy_trx_type_id ||
                            'System Current Date    ' ||  v_sys_curr_date ||
                            'Transaction Mailing Date ' || v_trx_mail_date ||
                            'New Business UW period days for the policy  ' ||
                            v_uw_days ||
                            ' Compliance Days During UW period           ' ||
                            v_during_uw_days ||
                            'Compliance Days after UW period           ' ||
                            v_after_uw_days ||
                            'Compliance Sat Sun Holiday Restriction applies TF ' ||
                            v_ssh_tf ||
                            'Target Cancel Date before SSH applies    ' ||
                            v_targetdate_ssh ||
                            'Target Cancel Date after SSH applies    ' ||
                            v_target_cancel_date);

    end if;
    return v_target_cancel_date;

  exception
    when others then

      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while calculating target cancel date ' ||
                                  '  Error Msg: ' || sqlerrm);

  end fn_get_policycancel_target_date;
  --------------------------------------------------------------------------------------------
  --UTPRODUCT-1186 start
   procedure sp_update_AssetPayerEntity(in_session_id       in object.object_id%type,
                                       in_transaction_id   in object.object_id%type,
                                       in_action_object_id in object.object_id%type

                                       ) is

    v_object_list     pkg_os_object.t_object_list;
    v_object_index    number;
    v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_update_AssetPayerEntity';
    v_objaddin_label             object_bv_value.business_variable_value%type;
    v_policybop_id               object.object_id%type;
	v_policycau_id				 object.object_id%type;
    v_policycom_id               object.object_id%type;
    v_assetpayer_interest_id     object.object_id%type;
    v_object_type_id             object_type.object_type_id%type;
    v_AssetPayerEntity_id        object.object_id%type;
    v_assetpayer_parent_id       object.object_id%type;
    v_ce_child_policycustomer_id object.object_id%type;
    v_ce_child_pc_ulti_id        object.object_id%type;
    v_ce_child_customer_id       object.object_id%type;
    v_customer_id                object.object_id%type;
    v_assetpayer_enum_id         object_type.object_type_id%type;
    v_assetpayer_int_type_id     object_type.object_type_id%type;

  begin


   /*v_policycom_id  := pkg_os_object_search.fn_object_11_child_get
                                           (
                                           in_session_id,
                                           in_transaction_id,
                                           in_action_object_id,
                                           gObjType_PolicyCommercial
                                            );
    v_policybop_id := pkg_os_object_search.fn_object_11_child_get
                                           (
                                           in_session_id,
                                           in_transaction_id,
                                           v_policycom_id,
                                           gObjType_PolicyBOP
                                            );*/
	---osproduct-29411 start
    pkg_os_object_search.sp_object_children_of_type_get
                                           (in_session_id,
                                           in_transaction_id,
                                           in_action_object_id, --PTP
                                           gObjType_PolicyBOP,
                                           v_object_list,
                                           null,
                                           true
                                           );
   
    if  v_object_list.first is not null then                                       
     v_policybop_id := v_object_list(v_object_list.first);
    end if;
  ---osproduct-29411 end    

	pkg_os_object_search.sp_object_children_of_type_get
											   (in_session_id,
											   in_transaction_id,
											   in_action_object_id, --PTP
											   gObjType_PolicyCAU,
											   v_object_list,
											   null,
											   true
											   );  
											   
	  if  v_object_list.first is not null then                                                                                 
		  v_policycau_id := v_object_list(v_object_list.first);
	  end if;  

    if v_policybop_id is not null then 
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_policybop_id, --policybop
                                                          gObjType_Assetpayer,
                                                          v_object_list,
                                                          null,
                                                          true
                                                     );
     elsif v_policycau_id is not null then
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_policycau_id, --policycau
                                                          gObjType_Assetpayer,
                                                          v_object_list,
                                                          null,
                                                          true
                                                          );     
														  
	 else
       pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --PTP
                                                        gObjType_Assetpayer,
                                                        v_object_list,
                                                        null,
                                                        true
                                                        );
     end if; 
       
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id || 'v_policybop_id    : ' ||
                            v_policybop_id || 'v_object_list.first    : ' ||
                            v_object_list.first|| 'v_object_list.count    : ' ||
                            v_object_list.count

                            );
    end if;
    v_object_index := v_object_list.first;

    while v_object_index is not null loop

      v_assetpayer_interest_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_object_list(v_object_index),
                                                                         gbv_AssetPayerInterest -- 32809248 -AssetPayer._Reference_AssetPayerInterest
                                                                         );
      v_object_type_id         := pkg_os_object.fn_object_type_get(in_session_id,
                                                                   in_transaction_id,
                                                                   v_assetpayer_interest_id);
      v_assetpayer_parent_id   := pkg_os_object.fn_object_parent_get(in_session_id,
                                                                     in_transaction_id,
                                                                     v_object_list(v_object_index));
      v_customer_id            := pkg_os_object_search.fn_object_ultimate_parent_get(in_session_id,
                                                                                     in_transaction_id,
                                                                                     v_object_list(v_object_index));

        if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_object_list(v_object_index)    : ' ||
                              v_object_list(v_object_index) ||
                              'v_assetpayer_interest_id    : ' ||
                              v_assetpayer_interest_id ||
                              'v_object_type_id    : ' ||
                              v_object_type_id ||
                              'v_assetpayer_parent_id    : ' ||
                              v_assetpayer_parent_id

                              );
      end if;
      --
      --Check v_assetpayer_interest_id object type
      --
      --1
      if v_object_type_id in (gObjType_PolicyBOPAdditionalInsured, gObjType_PolicyBOPLocationAdditionalInsured, gbv_PolicyGLAdditionalInsured,gObjType_PolicyCPPAdditionalInsured,gObjType_PolicyCPPLocationAdditionalInsured, gObjType_PolicyCPPLocationAdditionalInsured) then
        --(PolicyBOPAdditionalInsured,PolicyBOPLocationAdditionalInsured, PolicyGLAdditionalInsured )
        --
        --Check if selected entity reference is Customer Entity or Partner
        --
        if pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                  in_transaction_id,
                                                  v_assetpayer_interest_id,
                                                  gbv_InsuredAssoFinancialEntity) is not null then
          --Reference_Associated Financial Entity Partner

          v_AssetPayerEntity_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                          in_transaction_id,
                                                                          v_assetpayer_interest_id,
                                                                          gbv_InsuredAssoFinancialEntity);

        elsif pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                     in_transaction_id,
                                                     v_assetpayer_interest_id,
                                                     gbv_InsuredAssoCustomerEntity) is not null then
          --Reference_Customer Entity

          v_ce_child_policycustomer_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_assetpayer_interest_id,
                                                                                 gbv_InsuredAssoCustomerEntity);
          v_ce_child_pc_ulti_id        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_ce_child_policycustomer_id,
                                                                                 PKG_OS_CONSTANT_BV.gbv_Ultimate_Template);
          v_AssetPayerEntity_id        := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_customer_id, --customer
                                                                                            PKG_OS_CONSTANT.gObjType_CustomerEntity, --Customer Entity
                                                                                            PKG_OS_CONSTANT_BV.gbv_Ultimate_Template, --Ultimate template ID
                                                                                            v_ce_child_pc_ulti_id, --Utemplate of selected customer entity
                                                                                            false);
        end if;
        --
        --Set "GenericObject._Reference_AssetPayerEntity" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerEntity, --GenericObject._Reference_AssetPayerEntity
                                          v_AssetPayerEntity_id);
        v_assetpayer_enum_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_assetpayer_interest_id,
                                                                       gbv_AdditionalInsuredType);
        Select role_type_id
          into v_assetpayer_int_type_id
          from role_type
         where insured_type_id = v_assetpayer_enum_id;
        --
        --Set "32817948 - GenericObject - AssetPayerType" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerType, --32817948 - GenericObject - AssetPayerType
                                          v_assetpayer_int_type_id);
        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_AssetPayerEntity_id    : ' ||
                                v_AssetPayerEntity_id ||
                                'v_assetpayer_int_type_id    : ' ||
                                v_assetpayer_int_type_id || 'Loop 1    : '

                                );
        end if;

        --2
      elsif v_object_type_id in (gObjType_PolicyBOPAdditionalInterest, gObjType_PolicyBOPLocationAdditionalInterest, gbv_PolicyGLAdditionalInterest, gbv_PolicyGLAdditionalInterest, gbv_PolicyGLLocationAdditionalInterest, gbv_PolicyCFLocationAdditionalInterest, gObjType_PolicyCPPAdditionalInterest,gObjType_PolicyCPPLocationAdditionalInterest, gObjType_PolicyCAUAdditionalInterest ) then
        --(PolicyBOPAdditionalInterest, PolicyBOPLocationAdditionalInterest, PolicyGLAdditionalInterest, PolicyCFAdditionalInterest, PolicyGLLocationAdditionalInterest, PolicyCFLocationAdditionalInterest)
        --
        --Check if selected entity reference is Customer Entity or Partner
        --
        if pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                  in_transaction_id,
                                                  v_assetpayer_interest_id,
                                                  gbv_InterestAssoCustomerEntity) is not null then
          --32813848--Reference_Associated Customer Entity

          v_ce_child_policycustomer_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_assetpayer_interest_id,
                                                                                 gbv_InterestAssoCustomerEntity);
          v_ce_child_pc_ulti_id        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_ce_child_policycustomer_id,
                                                                                 PKG_OS_CONSTANT_BV.gbv_Ultimate_Template);
          v_AssetPayerEntity_id        := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_customer_id, --customer
                                                                                            PKG_OS_CONSTANT.gObjType_CustomerEntity, --Customer Entity
                                                                                            PKG_OS_CONSTANT_BV.gbv_Ultimate_Template, --Ultimate template ID
                                                                                            v_ce_child_pc_ulti_id, --Utemplate of selected customer entity
                                                                                            false

                                                                                            );

        elsif pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                     in_transaction_id,
                                                     v_assetpayer_interest_id,
                                                     gbv_InterestAssoFinancialEntity) is not null then
          --32694324--Reference_Associated Financial Entity

          v_AssetPayerEntity_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                          in_transaction_id,
                                                                          v_assetpayer_interest_id,
                                                                          gbv_InterestAssoFinancialEntity);

        end if;
        --
        --Set "GenericObject._Reference_AssetPayerEntity" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerEntity, --GenericObject._Reference_AssetPayerEntity
                                          v_AssetPayerEntity_id);
        v_assetpayer_enum_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_assetpayer_interest_id,
                                                                       gbv_AdditionalInterestType);
        Select role_type_id
          into v_assetpayer_int_type_id
          from role_type
         where interest_type_id = v_assetpayer_enum_id;
        --
        --Set "32817948 - GenericObject - AssetPayerType" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerType, --32817948 - GenericObject - AssetPayerType
                                          v_assetpayer_int_type_id);
        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_AssetPayerEntity_id    : ' ||
                                v_AssetPayerEntity_id ||
                                'v_assetpayer_int_type_id    : ' ||
                                v_assetpayer_int_type_id || 'Loop 1    : '

                                );
        end if;

        --3
      elsif v_object_type_id = gObjType_PolicyNamedInsured then
        --PolicyNamedInsured

        v_ce_child_policycustomer_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                               in_transaction_id,
                                                                               v_assetpayer_interest_id,
                                                                               gbv_PrimaryNamedInsuredEntity --29359313--PolicyNamedInsured._Reference_Named Insured Entity
                                                                               );
        v_ce_child_pc_ulti_id        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                               in_transaction_id,
                                                                               v_ce_child_policycustomer_id,
                                                                               PKG_OS_CONSTANT_BV.gbv_Ultimate_Template);
        v_AssetPayerEntity_id        := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                          in_transaction_id,
                                                                                          v_customer_id, --customer
                                                                                          PKG_OS_CONSTANT.gObjType_CustomerEntity, --Customer Entity
                                                                                          PKG_OS_CONSTANT_BV.gbv_Ultimate_Template, --Ultimate template ID
                                                                                          v_ce_child_pc_ulti_id, --Utemplate of selected customer entity
                                                                                          false

                                                                                          );
        --
        --Set "GenericObject._Reference_AssetPayerEntity" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerEntity, --GenericObject._Reference_AssetPayerEntity
                                          v_AssetPayerEntity_id);
        v_assetpayer_int_type_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_assetpayer_interest_id,
                                                                           gbv_PrimaryNamedInsuredType);
        --
        --Set "32817948 - GenericObject - AssetPayerType" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerType, --32817948 - GenericObject - AssetPayerType
                                          v_assetpayer_int_type_id);
        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_AssetPayerEntity_id    : ' ||
                                v_AssetPayerEntity_id ||
                                'v_assetpayer_int_type_id    : ' ||
                                v_assetpayer_int_type_id || 'Loop 3    : '

                                );
        end if;
        --4
      elsif v_object_type_id = gObjType_Partner then
        --Partner

        v_AssetPayerEntity_id := v_assetpayer_interest_id;
        --
        --Set "GenericObject._Reference_AssetPayerEntity" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerEntity, --GenericObject._Reference_AssetPayerEntity
                                          v_AssetPayerEntity_id);
        v_assetpayer_int_type_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_assetpayer_interest_id,
                                                                           gbv_PartnerRoleType);
        --
        --Set "32817948 - GenericObject - AssetPayerType" reference on parent of assetpayer objects
        --
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_assetpayer_parent_id,
                                          gbv_AssetPayerType, --32817948 - GenericObject - AssetPayerType
                                          v_assetpayer_int_type_id);
        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_AssetPayerEntity_id    : ' ||
                                v_AssetPayerEntity_id ||
                                'v_assetpayer_int_type_id    : ' ||
                                v_assetpayer_int_type_id || 'Loop 4    : '

                                );
        end if;

      end if;
      v_object_index := v_object_list.next(v_object_index);
    end loop;

  end sp_update_AssetPayerEntity;


  function fn_get_addinsuredinterest_list(in_session_id             in object.object_id%type,
                                          in_transaction_id         in object.object_id%type,
                                          in_object_id              in object.object_id%type,
                                          in_business_variable_id   in business_variable.business_variable_id%type,
                                          in_business_variable_path in varchar2,
                                          io_enum_list              in out nocopy pkg_os_lookup.t_enum_list,
                                          in_current_value          in varchar2
                                          
                                          ) return char as
  
    v_objaddin_id     object.object_id%type;
    v_objaddin_label  object_bv_value.business_variable_value%type;
    v_list_index      number;
    v_list_index1     number;
    v_object_list     pkg_os_object.t_object_list;
    v_object_index    number;
    v_object_index1   number;
    v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'fn_get_addinsuredinterest_list';-- OSPRODUCT-29368 / 29370 changed the name from fn_get_objaddinsured_list
    v_parent_object_id  object.object_id%type := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                                                   in_transaction_id,
                                                                                                   in_object_id,
                                                                                                   pkg_os_constant.gobjType_PolicyTrxPolicy);
    v_policybop_id      object.object_id%type;
    v_policycustomer_id object.object_id%type;
    v_ptp_pro_agency_id object.object_id%type;
    v_partner_type      varchar2(50);
    v_object_type_id    object_type.object_type_id%type;
    v_billing_method    number;
    v_direct_bill_type      constant  number(5) := 1;
    v_agency_bill_type      constant  number(5) := 2;
    
  v_ref_payer       object.object_id%type;
    -- kiran start OSPRODUCT-29368 / 29370
    v_ptp_agency_requires_billing     number        default PKG_OS_CONSTANT.gBoolean_No;    
    -- kiran End OSPRODUCT-29368 / 29370	
  
  begin
  
  
    if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_parent_object_id    : ' ||v_parent_object_id );
    end if;
    v_policybop_id      := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                             in_transaction_id,
                                                             v_parent_object_id,
                                                             '21761001.21761301');
    v_policycustomer_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                             in_transaction_id,
                                                             v_parent_object_id,
                                                             '27360105');
    v_ptp_pro_agency_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                  in_transaction_id,
                                                                  v_parent_object_id,
                                                                  '26590907');
    v_billing_method:= pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                  in_transaction_id,
                                                                  v_parent_object_id,
                                                                  '27372305'); --PolicyTransactionPolicy.Policy Billing Method
    
                                                                  
    v_list_index        := io_enum_list.count;
  
    v_list_index := v_list_index + 1;
  
    io_enum_list(v_list_index).object_id := in_object_id;
    -- kiran start OSPRODUCT-29368 / 29370
    
    v_ptp_agency_requires_billing	:= pkg_os_object_io.fn_object_bv_path_get
                                        (
                                            in_session_id,
                                            in_transaction_id,
                                            v_parent_object_id,
                                            '26590907.34920748'--Partner.Agency requires Y/N
                                        );                                                               
    -- kiran end OSPRODUCT-29368 / 29370
    
    if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'in_object_id    : ' ||in_object_id || 
                                'v_parent_object_id    : ' ||v_parent_object_id || 
                                'v_policycustomer_id    : ' ||v_policycustomer_id || 
                                'v_ptp_pro_agency_id    : ' ||v_ptp_pro_agency_id 
                                );
    end if;
     /*pkg_os_object_io.sp_object_bv_set
                        (
                             in_session_id,
                             in_transaction_id,
                             in_object_id,
                             32809248,
                             0
                        );*/
      
    if in_business_variable_path is null then
      io_enum_list(v_list_index).business_variable_path := in_business_variable_id;
    else
      io_enum_list(v_list_index).business_variable_path := in_business_variable_path;
    
    end if;
  
    io_enum_list(v_list_index).lookup_enum := 0;
    io_enum_list(v_list_index).lookup_text := '- Select -';
  
    if in_business_variable_id = 32812648 then
    
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          3347146,
                                                          v_object_list,
                                                          null,
                                                          true);
    
    elsif in_business_variable_id = 32812748 then
    
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          385,
                                                          v_object_list,
                                                          null,
                                                          true);
    
    elsif in_business_variable_id = 32813048 then
    
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          2313714,
                                                          v_object_list,
                                                          null,
                                                          true);
    
    elsif in_business_variable_id in (32813248, 32813848) then
      
      if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'start getting customer entity    : ' ||
                                in_object_id 
                                );
      end if;
    
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_policycustomer_id,
                                                          205,
                                                          v_object_list,
                                                          gbv_Generic_Instance_Number,
                                                          true,
                                                          10260948 --Exclude Primary Entity from the list
                                                          );
       if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'v_object_list.count    : ' ||
                                v_object_list.count 
                                );
      end if;                                                   
    
    -- kiran start OSPRODUCT-29368 / 29370
    --elsif in_business_variable_id = 32809248 and v_billing_method = v_direct_bill_type
    elsif in_business_variable_id = gbv_AssetPayerInterest and ( v_billing_method = v_direct_bill_type or
         ( v_billing_method = v_agency_bill_type and v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_Yes ))         
    -- kiran end OSPRODUCT-29368 / 29370 
      then
    
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          3347146, -- ObjectAdditionalInsured - OSPRODUCT-29368 / 29370
                                                          v_object_list,
                                                          null,
                                                          true,
                                                          10348748);
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          385,--ObjectAdditionalInterest - OSPRODUCT-29368 / 29370
                                                          v_object_list,
                                                          null,
                                                          true,
                                                          10348848);
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          2313714,--PolicyNamedInsured - OSPRODUCT-29368 / 29370
                                                          v_object_list,
                                                          null,
                                                          true);
	 -- kiran start OSPRODUCT-29368 / 29370
      if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log
          (
                 in_session_id,
                 in_transaction_id,
                 v_procedure_name,
                 ' v_object_list.count   : ' ||v_object_list.count ||
                 ' parent object id   : ' ||v_parent_object_id                                
          );
      end if;
      -- kiran end OSPRODUCT-29368 / 29370 														  
    
      --Set the agency in list
      -- kiran Start OSPRODUCT-29368 / 29370. 
      -- Below logic is commented.So uncommenting the below logic to execute only for inhouse agency
      -- Adding the agency to the payer list
      if  v_billing_method = v_agency_bill_type and v_ptp_agency_requires_billing = PKG_OS_CONSTANT.gBoolean_Yes then
          
          v_object_index1 := v_object_list.last;
          v_object_index1 := v_object_index1 + 1;
          
           v_ptp_pro_agency_id := pkg_os_object_io.fn_object_bv_get
                                  (
                                        in_session_id,
                                        in_transaction_id,
                                        v_parent_object_id,
                                        gbv_GenericProducingAgency--26590907
                                   );
     
           v_partner_type      :=   pkg_os_lookup.fn_lookup_list_text_get
                                    (
                                        5488048, -- Entity Role Lookup List ID
                                        pkg_os_object_io.fn_object_bv_path_get
                                        (
                                             in_session_id,
                                             in_transaction_id,
                                             v_parent_object_id,
                                             '26590907.32506748.34026746'  --PolicyTransactionPolicy._Reference_Producing Agency._Child_EntityRole.Entity Role
                                        ),
                                        in_session_id,
                                        in_transaction_id
                                    );
     
           --v_object_list(v_object_index1) := v_ptp_pro_agency_id;-- Kiran doubt. To avoid the Agency in the list
           if v_session_control.gLogging_Full then
                
              pkg_os_logging.sp_log
              (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    'After adding the Agency to the payer list -  v_object_list.count: ' ||
                    v_object_list.count
              );
           end if;
                
      end if;      
      -- kiran end OSPRODUCT-29368 / 29370 
    elsif in_business_variable_id = 32809248 and v_billing_method = v_agency_bill_type
          -- Kiran start OSPRODUCT-29368 / 29370.
          and nvl (v_ptp_agency_requires_billing, PKG_OS_CONSTANT.gBoolean_No) = PKG_OS_CONSTANT.gBoolean_No
          -- Kiran end OSPRODUCT-29368 / 29370.	
      then
    
     --Set the agency in list
      --v_object_index := 1;
    
      v_ptp_pro_agency_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                               in_transaction_id,
                                                               v_parent_object_id,
                                                               26590907);

      v_partner_type      :=   pkg_os_lookup.fn_lookup_list_text_get(5488048, -- Entity Role Lookup List ID
                                                                     pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                                               in_transaction_id,
                                                                                                               v_parent_object_id,
                                                                                                               '26590907.32506748.34026746' --PolicyTransactionPolicy._Reference_Producing Agency._Child_EntityRole.Entity Role
                                                                                                               ),
                                                                      in_session_id,
                                                                      in_transaction_id
                                                                        );
																		
      v_object_index := 1;                                                                  
      v_object_list(v_object_index) := v_ptp_pro_agency_id;
    
    end if;
       v_object_index := v_object_list.first;
    while v_object_index is not null loop
    
      v_objaddin_id    := v_object_list(v_object_index);
      v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id,
                                                           in_transaction_id,
                                                           v_objaddin_id);
      v_objaddin_label := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_objaddin_id,
                                                            pkg_os_constant_bv.gbv_GenObjLabel);
    
      v_list_index := v_list_index + 1;
      io_enum_list(v_list_index).object_id := in_object_id;
    
      if in_business_variable_path is null then
        io_enum_list(v_list_index).business_variable_path := in_business_variable_id;
      else
        io_enum_list(v_list_index).business_variable_path := in_business_variable_path;
      
      end if;
    
      io_enum_list(v_list_index).lookup_enum := v_object_list(v_object_index);
      If v_object_type_id = 63 then
        io_enum_list(v_list_index).lookup_text := v_partner_type || ' : ' ||
                                                  v_objaddin_label;
      else
        io_enum_list(v_list_index).lookup_text := v_objaddin_label;
      end if;
    
      v_object_index := v_object_list.next(v_object_index);

    end loop;
	
	--osproduct-28563

  --- OSPRODUCT-31049 Start --- don't add adhoc payer for agency billed policy ----    
    if (in_business_variable_id = 32809248 and NVL(v_billing_method,0) <> v_agency_bill_type) 
        or (in_business_variable_id <> 32809248)
    then

 --- OSPRODUCT-31049 End --- 
         
          v_ref_payer := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                          in_transaction_id,
                                                          v_parent_object_id,
                                                          34816648);
     if v_ref_payer is not null 
     then
          v_object_index := v_object_list.last;
          v_object_index := v_object_index + 1;
          
          v_object_list(v_object_index) := v_ref_payer;
          
          v_objaddin_id    := v_object_list(v_object_index);
     v_objaddin_label := 'Payer:'||pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_objaddin_id,
                                                            pkg_os_constant_bv.gbv_GenObjLabel);
      
       v_list_index := v_list_index + 1;
      io_enum_list(v_list_index).object_id := in_object_id;

      if in_business_variable_path is null then
        io_enum_list(v_list_index).business_variable_path := in_business_variable_id;
      else
        io_enum_list(v_list_index).business_variable_path := in_business_variable_path;

      end if;

      io_enum_list(v_list_index).lookup_enum := v_object_list(v_object_index);
     -- If v_object_type_id = 63 then
       -- io_enum_list(v_list_index).lookup_text := v_partner_type || ' : ' ||
                                           --       v_objaddin_label;
      --else
        io_enum_list(v_list_index).lookup_text := v_objaddin_label;
     -- end if;


          if v_session_control.gLogging_Full then
    
              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'After adding the Payer to the list v_object_list.count   : ' ||v_object_list.count ||
                                    ' v_parent_object_id    : ' ||v_parent_object_id 
                                   
                                    );
          end if;
        end if;  
          --osproduct-28563
       
	  end if;   --- OSPRODUCT-31049 don't add adhoc payer for agency billed policy ---   
		  
    return 'T';
  
  end fn_get_addinsuredinterest_list;

  --UTPRODUCT-1186 end
------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
--UTPRODUCT-1262 start
  procedure sp_add_insuredinterest_bop(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type
                                   
                                   ) is
  
    v_object_insured_list        pkg_os_object.t_object_list;
    v_object_insured_index       number;
    v_object_interest_list       pkg_os_object.t_object_list;
    v_object_interest_index      number;
    v_exist_object_list          pkg_os_object.t_object_list;
    v_exist_object_index         number;
    v_object_insured_info_list   pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_insured_info_index  number; --UTPRODUCT-1691
    v_object_interest_info_list  pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_interest_info_index number; --UTPRODUCT-1691
    v_info_object_type_id        object_type.object_type_id%type; --UTPRODUCT-1691
    v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                  in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_add_insuredinterest_bop';
    v_policybop_id        object.object_id%type;
    v_object_type_id      object_type.object_type_id%type;
    v_insured_type        number;
    v_insured_name        object.object_id%type;
    v_associated_property object.object_id%type;
    v_out_object_id       object.object_id%type;
    v_addLoc_parent_id    object.object_id%type;
    v_exist_insured_id    object.object_id%type;
    v_exist_interest_id   object.object_id%type;
  
	--lxproduct-248
    v_soft_delete_tf                                       boolean := false;
    v_hard_del_objects_install_tf                          number := pkg_os_constant.gBoolean_True;
    v_template_object_id                                   object.object_id%type ;
         v_exchange_id                                          object.object_id%type := pkg_os_wf_session.fn_exchange_get(in_session_id,in_transaction_id);
         
  begin
    
  
  --lxproduct-248
  v_hard_del_objects_install_tf := nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True);
   
  if nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True) = pkg_os_constant.gBoolean_True then

     v_soft_delete_tf := false;
     
     if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to HARD delete the objects. '
                                   
                              );

                         end if;

  else

     v_soft_delete_tf := true;

if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to SOFT delete the objects. '
                                   
                              );

                         end if;
  end if;


    --UTPRODUCT-1691 start
    --1.1 -- Delete the (3365448)ObjectAdditionalInsuredInformation and (10294848)ObjectAdditionalInterestInformation
    --       who's associated location is marked as "GenericDestroyed".
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInterestInformation
                                                        v_object_insured_info_list,
                                                        null,
                                                        true,
                                                        10306148 --10306148 - Rule to check location status
                                                        );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_info_list,
                                                        null,
                                                        true,
                                                        10305948 --10305948 - Rule to check location status
                                                        );
  
    v_object_insured_info_index  := v_object_insured_info_list.first;
    v_object_interest_info_index := v_object_interest_info_list.first;
  
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Selected information object list count  : ' ||
                            v_object_insured_info_list.count ||
                            '... Selected information object list count  : ' ||
                            v_object_interest_info_list.count);
    end if;
    --Insured information object deletion
    while v_object_insured_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Insured Information object where location is marked as destroyed     : ' ||
                              v_object_insured_info_list(v_object_insured_info_index));
      end if;
        --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_insured_info_list(v_object_insured_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248   
       
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_insured_info_list(v_object_insured_info_index),
                                     3365448,
                                     null,
                                     v_soft_delete_tf);	   
      v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
    end loop;
  
    --Interest information object deletion
    while v_object_interest_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Interest Information object where location is marked as destroyed     : ' ||
                              v_object_interest_info_list(v_object_interest_info_index));
      end if;
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_interest_info_list(v_object_interest_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

      end if;
       --lxproduct-248 				  
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_interest_info_list(v_object_interest_info_index),
                                     3365548,
                                     null, --lxproduct-248
                                     v_soft_delete_tf);--lxproduct-248						  
      v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
    end loop;
    --UTPRODUCT-1691 end
  
    --1.2
    -- Delete all the existing who's information object is deleted (PolicyBOPAdditionalInsured ,PolicyBOPLocationAdditionalInsured,PolicyBOPAdditionalInterest ,PolicyBOPLocationAdditionalInterest)
    -- 2240805,3363948,381501,380601
    -- Collect all the object of 3347146, 385(Objectadditionalinsured, Objectassitionalinterst)
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        3347146,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275348 --Created from ref on ObjectAdditionalInsured object is null
                                                        );
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        385,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275448 --Created from ref on ObjectAdditionalInterest object is null
                                                        );
  
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Total number of objects deleted    : ' ||
                            v_exist_object_list.count);
    end if;
  
    v_exist_object_index := v_exist_object_list.first;
  
    while v_exist_object_index is not null loop
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted object which do not have info object     : ' ||
                              v_exist_object_list(v_exist_object_index));
      end if;
    
		--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

      end if;
       --lxproduct-248		  
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_exist_object_list(v_exist_object_index),
                                     3347146,
                                     null, --lxproduct-248
                                     v_soft_delete_tf); --lxproduct-248						   
    
      v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
    end loop;
  
    --2.
    v_policybop_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             '21761001.21761301' -- 21761001.21761301 -- ptp to policybop
                                                             );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_insured_list,
                                                        null,
                                                        false,
                                                        10294648 --10274948 - Rule for Lastupddate -- 10294648--If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_insured_list.first    : ' ||
                            v_object_insured_list.first ||
                            'v_object_insured_list.count    : ' ||
                            v_object_insured_list.count ||
                            'v_policybop_id         : ' || v_policybop_id
                            
                            );
    end if;
    v_object_insured_index := v_object_insured_list.first;
    --3.
    --Insured object creation start
    while v_object_insured_index is not null loop
      --get existing object additional insured or policybop or policyboploacation level.
      v_exist_insured_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                   in_transaction_id,
                                                                   v_object_insured_list(v_object_insured_index),
                                                                   '32831148' -- 32831148 -- ObjectAdditionalInsuredInformation._Reference_created additional insured
                                                                   );
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Insured    : ' ||
                              v_exist_insured_id);
      end if;
      -- if 32831148, --32831148 --_Reference_created additional insured is not null then delete existing object
      if v_exist_insured_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_insured_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

      end if;
       --lxproduct-248		  
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_insured_id,
                                       3347146,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248						 
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      '32829348' -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                      );
      --get selected type information
      v_insured_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                               in_transaction_id,
                                                               v_object_insured_list(v_object_insured_index),
                                                               '32808848' -- 32808848 -- ObjectAdditionalInsuredInformation.Additional Insured - Type
                                                               );
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name
                              
                              );
      end if;
      if v_associated_property is null then
        --create an object of type 2240805 - PolicyBOPAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2240805,
                                       v_policybop_id,
                                       v_out_object_id);
      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policybop_id, --customer
                                                                                370901, --PolicyBOPLocation
                                                                                21805901, --PolicyBOPLocation_Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true);
        --create an object of type 3363948 - PolicyBOPLocationAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3363948,
                                       v_addLoc_parent_id,
                                       v_out_object_id);
      end if;
    
      --Set all the required BV's in new object either it is (PolicyBOPAdditionalInsured, PolicyBOPLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32808848, --32808848 --PolicyBOPAdditionalInsured.Additional Insured - Type
                                        v_insured_type);
      --Set 32833348 --_Reference_Created From on PolicyBOP and PolicyBOPLocation additional insured
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833348, --32833348 --_Reference_Created From
                                        v_object_insured_list(v_object_insured_index));
    
      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_insured_list(v_object_insured_index),
                                        32831148, --32808848 --_Reference_created additional insured
                                        v_out_object_id);
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name
                              
                              );
      end if;
    
      v_object_insured_index := v_object_insured_list.next(v_object_insured_index);
    end loop;
  
    --Insured object creation end
    ------------------------------------------------------------------------------------------------------------------------------------
    --4.
    --Interest object creation end
  
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_list,
                                                        null,
                                                        false,
                                                        10294848 --10275048 Rule for Lastupddate --10294848 --If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_interest_list.first    : ' ||
                            v_object_interest_list.first ||
                            'v_object_interest_list.count    : ' ||
                            v_object_interest_list.count ||
                            'v_policybop_id         : ' || v_policybop_id
                            
                            );
    end if;
    v_object_interest_index := v_object_interest_list.first;
  
    while v_object_interest_index is not null loop
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Interest list element    : ' ||
                              v_object_interest_list(v_object_interest_index));
      end if;
      --get existing object additional interest or policybop or policyboploacation level.
      v_exist_interest_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_object_interest_list(v_object_interest_index),
                                                                    '32831248' --32831248 --_Reference_created additional interest
                                                                    );
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Interest    : ' ||
                              v_exist_interest_id);
      end if;
      -- if 32831248, --32831248 --_Reference_created additional interest is not null then delete existing object
      if v_exist_interest_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_interest_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'hard delete'
                              
                              );
      end if;
      
      end if;
      
       --lxproduct-248	  
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_interest_id,
                                       385,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248						 
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '32829848' -- 32829848 -- _Reference_associated location
                                                                      );
      v_insured_type        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '29393514' -- 29393514 -- ObjectAdditionalInterest.Additional Interest - Type
                                                                      );
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name
                              
                              );
      end if;
      if v_associated_property is null then
        --create an object of type 381501 - PolicyBOPAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       381501,
                                       v_policybop_id,
                                       v_out_object_id);
      
      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policybop_id, --customer
                                                                                370901, --PolicyBOPLocation
                                                                                21805901, --PolicyBOPLocation_Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true
                                                                                
                                                                                );
        --create an object of type 380601 - PolicyBOPLocationAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       380601,
                                       v_addLoc_parent_id,
                                       v_out_object_id);
      
      end if;
    
      --Set all the required BV's in new object either it is (PolicyBOPAdditionalInsured, PolicyBOPLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        29393514, --29393514 ---- ObjectAdditionalInterest.Additional Interest - Type
                                        v_insured_type);
      --Set 32833248 --_Reference_Created From on PolicyBOP and PolicyBOPLocation additional interest
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833248, --32833248 --_Reference_Created From
                                        v_object_interest_list(v_object_interest_index));
      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_interest_list(v_object_interest_index),
                                        32831248, --32831248 --_Reference_created additional interest
                                        v_out_object_id);
    
      if v_session_control.gLogging_Full then
      
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name
                              
                              );
      end if;
    
      v_object_interest_index := v_object_interest_list.next(v_object_interest_index);
    end loop;
  
    --Insured object creation end
  
  end sp_add_insuredinterest_bop;
  --UTPRODUCT-1262 end
  ----------------------------------------------------------------------------------------------
  
  ----------------------------------------------------------------------------------------------
  --LIOPRODUCT-58 start
  procedure sp_add_insuredinterest_gl(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type,
                                   in_policycommercial_count number               ----LXPRODUCT-202

                                   ) is

    v_object_insured_list        pkg_os_object.t_object_list;
    v_object_insured_index       number;
    v_object_interest_list       pkg_os_object.t_object_list;
    v_object_interest_index      number;
    v_exist_object_list          pkg_os_object.t_object_list;
    v_exist_object_index         number;
    v_object_insured_info_list   pkg_os_object.t_object_list;
    v_object_insured_info_index  number;
    v_object_interest_info_list  pkg_os_object.t_object_list;
    v_object_interest_info_index number;
    v_info_object_type_id        object_type.object_type_id%type;
    v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                  in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_add_insuredinterest_gl';
    v_policygl_id        object.object_id%type;
    v_object_type_id      object_type.object_type_id%type;
    v_insured_type        number;
    v_insured_name        object.object_id%type;
    v_associated_property object.object_id%type;
    v_out_object_id       object.object_id%type;
    v_addLoc_parent_id    object.object_id%type;
    v_exist_insured_id    object.object_id%type;
    v_exist_interest_id   object.object_id%type;

		--lxproduct-248
    v_soft_delete_tf                                       boolean := false;
    v_hard_del_objects_install_tf                          number := pkg_os_constant.gBoolean_True;
    v_template_object_id                                   object.object_id%type ;
    v_exchange_id                                          object.object_id%type := pkg_os_wf_session.fn_exchange_get(in_session_id,in_transaction_id);
         
  begin
    
  
  --lxproduct-248
  v_hard_del_objects_install_tf := nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True);
   
  if nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True) = pkg_os_constant.gBoolean_True then

     v_soft_delete_tf := false;
     
     if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to HARD delete the objects. '
                                   
                              );

                         end if;

  else

     v_soft_delete_tf := true;

if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to SOFT delete the objects. '
                                   
                              );

                         end if;
  end if;
    --1.1 -- Delete the (3365448)ObjectAdditionalInsuredInformation and (10294848)ObjectAdditionalInterestInformation
    --       who's associated location is marked as "GenericDestroyed".
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInterestInformation
                                                        v_object_insured_info_list,
                                                        null,
                                                        true,
                                                        10306148 --10306148 - Rule to check location status
                                                        );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_info_list,
                                                        null,
                                                        true,
                                                        10305948 --10305948 - Rule to check location status
                                                        );

    v_object_insured_info_index  := v_object_insured_info_list.first;
    v_object_interest_info_index := v_object_interest_info_list.first;

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Selected information object list count  : ' ||
                            v_object_insured_info_list.count ||
                            '... Selected information object list count  : ' ||
                            v_object_interest_info_list.count);
    end if;
    --Insured information object deletion
    while v_object_insured_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Insured Information object where location is marked as destroyed     : ' ||
                              v_object_insured_info_list(v_object_insured_info_index));
      end if;
		 --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_insured_info_list(v_object_insured_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248		   
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_insured_info_list(v_object_insured_info_index),
                                     3365448,
                                     null, --lxproduct-248 
                                     v_soft_delete_tf);--lxproduct-248 						   
      v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
    end loop;

    --Interest information object deletion
    while v_object_interest_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Interest Information object where location is marked as destroyed     : ' ||
                              v_object_interest_info_list(v_object_interest_info_index));
      end if;
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_interest_info_list(v_object_interest_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248		  
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_interest_info_list(v_object_interest_info_index),
                                     3365548,
                                     null, --lxproduct-248
                                     v_soft_delete_tf); --lxproduct-248							   
      v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
    end loop;

    --1.2
    -- Delete all the existing who's information object is deleted (PolicyBOPAdditionalInsured ,PolicyBOPLocationAdditionalInsured,PolicyBOPAdditionalInterest ,PolicyBOPLocationAdditionalInterest)
    -- 2240805,3363948,381501,380601
    -- Collect all the object of 3347146, 385(Objectadditionalinsured, Objectassitionalinterst)
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        3347146,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275348 --**Created from ref on ObjectAdditionalInsured object is null
                                                        );
    /*pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        385,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275448 --Created from ref on ObjectAdditionalInterest object is null
                                                        );*/

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Total number of objects deleted    : ' ||
                            v_exist_object_list.count);
    end if;

    v_exist_object_index := v_exist_object_list.first;

    while v_exist_object_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted object which do not have info object     : ' ||
                              v_exist_object_list(v_exist_object_index));
      end if;

			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248		  
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_exist_object_list(v_exist_object_index),
                                     3347146,
                                     null, --lxproduct-248
                                     v_soft_delete_tf); --lxproduct-248						   

      v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
    end loop;

    --2.
    v_policygl_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             '34054646' -- Reference_Refers to PolicyGL
                                                             );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_insured_list,
                                                        null,
                                                        false,
                                                        10294648 --10274948 - Rule for Lastupddate -- 10294648--If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_insured_list.first    : ' ||
                            v_object_insured_list.first ||
                            'v_object_insured_list.count    : ' ||
                            v_object_insured_list.count ||
                            'v_policygl_id         : ' || v_policygl_id

                            );
    end if;
    v_object_insured_index := v_object_insured_list.first;
    --3.
    --Insured object creation start
    while v_object_insured_index is not null loop
      --get existing object additional insured or policygl or policyglloacation level.
      v_exist_insured_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                   in_transaction_id,
                                                                   v_object_insured_list(v_object_insured_index),
                                                                   '32831148' -- 32831148 -- ObjectAdditionalInsuredInformation._Reference_created additional insured
                                                                   );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Insured    : ' ||
                              v_exist_insured_id);
      end if;
      -- if 32831148, --32831148 --_Reference_created additional insured is not null then delete existing object
      if v_exist_insured_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_insured_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248	  
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_insured_id,
                                       3347146,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248								 
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      '32829348' -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                      );
      --get selected type information
      v_insured_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                               in_transaction_id,
                                                               v_object_insured_list(v_object_insured_index),
                                                               '32808848' -- 32808848 -- ObjectAdditionalInsuredInformation.Additional Insured - Type
                                                               );

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      if v_associated_property is null then
        --create an object of type 2242809 - PolicyGLAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2242809,
                                       v_policygl_id,
                                       v_out_object_id);
                                       
     /* else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policygl_id, --customer
                                                                                370901, --**PolicyBOPLocation
                                                                                21805901, --**PolicyBOPLocation_Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true);
        --create an object of type 3363948 - PolicyBOPLocationAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3363948,--**
                                       v_addLoc_parent_id,
                                       v_out_object_id); */
      end if;

      --Set all the required BV's in new object either it is (PolicyGLAdditionalInsured, PolicyGLLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32808848, --32808848 --PolicyGLAdditionalInsured.Additional Insured - Type
                                        v_insured_type);
      --Set 32833348 --_Reference_Created From on PolicyGL and PolicyGLLocation additional insured
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833348, --32833348 --_Reference_Created From
                                        v_object_insured_list(v_object_insured_index));

      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_insured_list(v_object_insured_index),
                                        32831148, --32808848 --_Reference_created additional insured
                                        v_out_object_id);

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;

      v_object_insured_index := v_object_insured_list.next(v_object_insured_index);
    end loop;

    --Insured object creation end
    ------------------------------------------------------------------------------------------------------------------------------------
    --4.
    --Interest object creation end
    if in_policycommercial_count = 1 then --LXPRODUCT-202
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_list,
                                                        null,
                                                        false,
                                                        10294848 --10275048 Rule for Lastupddate --10294848 --If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_interest_list.first    : ' ||
                            v_object_interest_list.first ||
                            'v_object_interest_list.count    : ' ||
                            v_object_interest_list.count ||
                            'v_policygl_id         : ' || v_policygl_id

                            );
    end if;
    v_object_interest_index := v_object_interest_list.first;

    while v_object_interest_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Interest list element    : ' ||
                              v_object_interest_list(v_object_interest_index));
      end if;
      --get existing object additional interest or policygl or policyglloacation level.
      v_exist_interest_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_object_interest_list(v_object_interest_index),
                                                                    '32831248' --32831248 --_Reference_created additional interest
                                                                    );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Interest    : ' ||
                              v_exist_interest_id);
      end if;
      -- if 32831248, --32831248 --_Reference_created additional interest is not null then delete existing object
      if v_exist_interest_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_interest_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248		  
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_interest_id,
                                       385,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248								 
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '32829848' -- 32829848 -- _Reference_associated location
                                                                      );
      v_insured_type        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '29393514' -- 29393514 -- ObjectAdditionalInterest.Additional Interest - Type
                                                                      );

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      if v_associated_property is null then
        --create an object of type 2193805 - PolicyGLAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2193805,
                                       v_policygl_id,
                                       v_out_object_id);

      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policygl_id, --customer
                                                                                2184605, --PolicyGLLocationLiabilityCoverage
                                                                                26378305, --PolicyGLLocationLiabilityCoverage - xReference - _Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true

                                                                                );
        --create an object of type 2193905 - PolicyGLLocationAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2193905,
                                       v_addLoc_parent_id,
                                       v_out_object_id);

      end if;

      --Set all the required BV's in new object either it is (PolicyGLAdditionalInsured, PolicyGLLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        29393514, --29393514 ---- ObjectAdditionalInterest.Additional Interest - Type
                                        v_insured_type);
      --Set 32833248 --_Reference_Created From on PolicyGL and PolicyGLLocation additional interest
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833248, --32833248 --_Reference_Created From
                                        v_object_interest_list(v_object_interest_index));
      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_interest_list(v_object_interest_index),
                                        32831248, --32831248 --_Reference_created additional interest
                                        v_out_object_id);

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;

      v_object_interest_index := v_object_interest_list.next(v_object_interest_index);
    end loop;
    end if; --LXPRODUCT-202
    --Insured object creation end

  end sp_add_insuredinterest_gl;
  
  procedure sp_add_insuredinterest_cf(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type

                                   ) is

    v_object_insured_list        pkg_os_object.t_object_list;
    v_object_insured_index       number;
    v_object_interest_list       pkg_os_object.t_object_list;
    v_object_interest_index      number;
    v_exist_object_list          pkg_os_object.t_object_list;
    v_exist_object_index         number;
    v_object_insured_info_list   pkg_os_object.t_object_list;
    v_object_insured_info_index  number;
    v_object_interest_info_list  pkg_os_object.t_object_list;
    v_object_interest_info_index number;
    v_info_object_type_id        object_type.object_type_id%type;
    v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                  in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_add_insuredinterest_cf';
    v_policycf_id        object.object_id%type;
    v_object_type_id      object_type.object_type_id%type;
    v_insured_type        number;
    v_insured_name        object.object_id%type;
    v_associated_property object.object_id%type;
    v_out_object_id       object.object_id%type;
    v_addLoc_parent_id    object.object_id%type;
    v_exist_insured_id    object.object_id%type;
    v_exist_interest_id   object.object_id%type;

		--lxproduct-248
    v_soft_delete_tf                                       boolean := false;
    v_hard_del_objects_install_tf                          number := pkg_os_constant.gBoolean_True;
    v_template_object_id                                   object.object_id%type ;
    v_exchange_id                                          object.object_id%type := pkg_os_wf_session.fn_exchange_get(in_session_id,in_transaction_id);
         
  begin
    
  
  --lxproduct-248
  v_hard_del_objects_install_tf := nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True);
   
  if nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True) = pkg_os_constant.gBoolean_True then

     v_soft_delete_tf := false;
     
     if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to HARD delete the objects. '
                                   
                              );

                         end if;

  else

     v_soft_delete_tf := true;

if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to SOFT delete the objects. '
                                   
                              );

                         end if;
  end if;
    --1.1 -- Delete the (3365448)ObjectAdditionalInsuredInformation and (10294848)ObjectAdditionalInterestInformation
    --       who's associated location is marked as "GenericDestroyed".
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInterestInformation
                                                        v_object_insured_info_list,
                                                        null,
                                                        true,
                                                        10306148 --10306148 - Rule to check location status
                                                        );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_info_list,
                                                        null,
                                                        true,
                                                        10305948 --10305948 - Rule to check location status
                                                        );

    v_object_insured_info_index  := v_object_insured_info_list.first;
    v_object_interest_info_index := v_object_interest_info_list.first;

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Selected information object list count  : ' ||
                            v_object_insured_info_list.count ||
                            '... Selected information object list count  : ' ||
                            v_object_interest_info_list.count);
    end if;
    --Insured information object deletion
    while v_object_insured_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Insured Information object where location is marked as destroyed     : ' ||
                              v_object_insured_info_list(v_object_insured_info_index));
      end if;
				--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_insured_info_list(v_object_insured_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248 		   
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_insured_info_list(v_object_insured_info_index),
                                     3365448,
                                     null, --lxproduct-248 
                                     v_soft_delete_tf); --lxproduct-248 								
      v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
    end loop;

    --Interest information object deletion
    while v_object_interest_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Interest Information object where location is marked as destroyed     : ' ||
                              v_object_interest_info_list(v_object_interest_info_index));
      end if;
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_interest_info_list(v_object_interest_info_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248 		   
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_interest_info_list(v_object_interest_info_index),
                                     3365548,
                                     null, --lxproduct-248 
                                     v_soft_delete_tf);--lxproduct-248 								   
      v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
    end loop;

    --1.2
    -- Delete all the existing who's information object is deleted (PolicyBOPAdditionalInsured ,PolicyBOPLocationAdditionalInsured,PolicyBOPAdditionalInterest ,PolicyBOPLocationAdditionalInterest)
    -- 2240805,3363948,381501,380601
    -- Collect all the object of 3347146, 385(Objectadditionalinsured, Objectassitionalinterst)
    /*pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        3347146,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275348 --**Created from ref on ObjectAdditionalInsured object is null
                                                        );*/
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        385,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275448 --Created from ref on ObjectAdditionalInterest object is null
                                                        );

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Total number of objects deleted    : ' ||
                            v_exist_object_list.count);
    end if;

    v_exist_object_index := v_exist_object_list.first;

    while v_exist_object_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted object which do not have info object     : ' ||
                              v_exist_object_list(v_exist_object_index));
      end if;

			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248 		   
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_exist_object_list(v_exist_object_index),
                                     3347146,
                                     null,--lxproduct-248 
                                     v_soft_delete_tf);--lxproduct-248 								   

      v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
    end loop;

    --2.
    v_policycf_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             '32995448'
                                                             );
    -- Get all ObjectAdditionalInsuredInformation object list
    /*pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_insured_list,
                                                        null,
                                                        false,
                                                        10294648 --10274948 - Rule for Lastupddate -- 10294648--If any value is updated in insured information object
                                                        );*/
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_insured_list.first    : ' ||
                            v_object_insured_list.first ||
                            'v_object_insured_list.count    : ' ||
                            v_object_insured_list.count ||
                            'v_policycf_id         : ' || v_policycf_id

                            );
    end if;
    v_object_insured_index := v_object_insured_list.first;
    --3.
    --Insured object creation start
    while v_object_insured_index is not null loop
      --get existing object additional insured or policycf or policycfloacation level.
      v_exist_insured_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                   in_transaction_id,
                                                                   v_object_insured_list(v_object_insured_index),
                                                                   '32831148' -- 32831148 -- ObjectAdditionalInsuredInformation._Reference_created additional insured
                                                                   );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Insured    : ' ||
                              v_exist_insured_id);
      end if;
      -- if 32831148, --32831148 --_Reference_created additional insured is not null then delete existing object
      if v_exist_insured_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_insured_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248		   
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_insured_id,
                                       3347146,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248								 
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      '32829348' -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                      );
      --get selected type information
      v_insured_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                               in_transaction_id,
                                                               v_object_insured_list(v_object_insured_index),
                                                               '32808848' -- 32808848 -- ObjectAdditionalInsuredInformation.Additional Insured - Type
                                                               );

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      /*if v_associated_property is not null then
        --create an object of type 2242809 - PolicyGLAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2242809,
                                       v_policygl_id,
                                       v_out_object_id);
      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policycf_id, --customer
                                                                                2191505, --**PolicyCFLocation
                                                                                26450005, --**PolicyCFLocation_Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true);
        --create an object of type 3363948 - PolicyBOPLocationAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3363948,--**
                                       v_addLoc_parent_id,
                                       v_out_object_id);
      end if;

      --Set all the required BV's in new object either it is (PolicyGLAdditionalInsured, PolicyGLLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32808848, --32808848 --PolicyGLAdditionalInsured.Additional Insured - Type
                                        v_insured_type);
      --Set 32833348 --_Reference_Created From on PolicyGL and PolicyGLLocation additional insured
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833348, --32833348 --_Reference_Created From
                                        v_object_insured_list(v_object_insured_index));

      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_insured_list(v_object_insured_index),
                                        32831148, --32808848 --_Reference_created additional insured
                                        v_out_object_id);

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;*/

      v_object_insured_index := v_object_insured_list.next(v_object_insured_index);
    end loop;

    --Insured object creation end
    ------------------------------------------------------------------------------------------------------------------------------------
    --4.
    --Interest object creation end

    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_list,
                                                        null,
                                                        false,
                                                        10294848 --10275048 Rule for Lastupddate --10294848 --If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_interest_list.first    : ' ||
                            v_object_interest_list.first ||
                            'v_object_interest_list.count    : ' ||
                            v_object_interest_list.count ||
                            'v_policygl_id         : ' || v_policycf_id

                            );
    end if;
    v_object_interest_index := v_object_interest_list.first;

    while v_object_interest_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Interest list element    : ' ||
                              v_object_interest_list(v_object_interest_index));
      end if;
      --get existing object additional interest or policycf or policycfloacation level.
      v_exist_interest_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_object_interest_list(v_object_interest_index),
                                                                    '32831248' --32831248 --_Reference_created additional interest
                                                                    );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Interest    : ' ||
                              v_exist_interest_id);
      end if;
      -- if 32831248, --32831248 --_Reference_created additional interest is not null then delete existing object
      if v_exist_interest_id is not null then
			--lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_interest_id,pkg_os_constant_bv.gbv_Template);
      
      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248 	   
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_interest_id,
                                       385,
                                       null, --lxproduct-248 
                                       v_soft_delete_tf); --lxproduct-248 							  
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '32829848' -- 32829848 -- _Reference_associated location
                                                                      );
      v_insured_type        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '29393514' -- 29393514 -- ObjectAdditionalInterest.Additional Interest - Type
                                                                      );

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      if v_associated_property is null then
        --create an object of type 2191105 - PolicyCFAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       2191105,
                                       v_policycf_id,
                                       v_out_object_id);

      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policycf_id, --customer
                                                                                2191505, --PolicyCFLocation
                                                                                26450005, --PolicyCFLocation - xReference - _Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true

                                                                                );
        --create an object of type 3377448 - PolicyCFLocationAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3377448,
                                       v_addLoc_parent_id,
                                       v_out_object_id);

      end if;

      --Set all the required BV's in new object either it is (PolicyCFAdditionalInsured, PolicyCFLocationAdditionalInsured)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        29393514, --29393514 ---- ObjectAdditionalInterest.Additional Interest - Type
                                        v_insured_type);
      --Set 32833248 --_Reference_Created From on PolicyCF and PolicyCFLocation additional interest
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833248, --32833248 --_Reference_Created From
                                        v_object_interest_list(v_object_interest_index));
      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_interest_list(v_object_interest_index),
                                        32831248, --32831248 --_Reference_created additional interest
                                        v_out_object_id);

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;

      v_object_interest_index := v_object_interest_list.next(v_object_interest_index);
    end loop;

    --Insured object creation end

  end sp_add_insuredinterest_cf;  
  
  --LIOPRODUCT-58 end
 ----------------------------------------------------------------------------------------------
  --UTPRODUCT-1262 start
  procedure sp_add_insuredinterest_cpp(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type

                                   ) is

    v_object_insured_list        pkg_os_object.t_object_list;
    v_object_insured_index       number;
    v_object_interest_list       pkg_os_object.t_object_list;
    v_object_interest_index      number;
    v_exist_object_list          pkg_os_object.t_object_list;
    v_exist_object_index         number;
    v_object_insured_info_list   pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_insured_info_index  number; --UTPRODUCT-1691
    v_object_interest_info_list  pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_interest_info_index number; --UTPRODUCT-1691
    v_info_object_type_id        object_type.object_type_id%type; --UTPRODUCT-1691
    v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                  in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_add_insuredinterest_cpp';
    v_policycpp_id        object.object_id%type;
    v_object_type_id      object_type.object_type_id%type;
    v_insured_type        number;
    v_insured_name        object.object_id%type;
    v_associated_property object.object_id%type;

    v_out_object_id       object.object_id%type;
    v_addLoc_parent_id    object.object_id%type;
    v_exist_insured_id    object.object_id%type;
    v_exist_interest_id   object.object_id%type;

     --lxproduct-248
    v_soft_delete_tf                                       boolean := false;
    v_hard_del_objects_install_tf                          number := pkg_os_constant.gBoolean_True;
    v_template_object_id                                   object.object_id%type ;
    v_exchange_id                                          object.object_id%type := pkg_os_wf_session.fn_exchange_get(in_session_id,in_transaction_id);

    v_associated_customer_entity object.object_id%type;
    v_associated_financial_entiy object.object_id%type;
    v_Mortgagee_Designation number ;
  begin


  --lxproduct-248
  v_hard_del_objects_install_tf := nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True);

  if nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True) = pkg_os_constant.gBoolean_True then

     v_soft_delete_tf := false;

     if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to HARD delete the objects. '

                              );

                         end if;

  else

     v_soft_delete_tf := true;

if v_session_control.gLogging_Full then

                              pkg_os_logging.sp_log_core
                              (
                                   in_session_id,
                                   in_transaction_id,
                                   v_procedure_name,
                                   ' The installation flag is set to SOFT delete the objects. '

                              );

                         end if;
  end if;
    --UTPRODUCT-1691 start
    --1.1 -- Delete the (3365448)ObjectAdditionalInsuredInformation and (10294848)ObjectAdditionalInterestInformation
    --       who's associated location is marked as "GenericDestroyed".
    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInterestInformation
                                                        v_object_insured_info_list,
                                                        null,
                                                        true,
                                                        10306148 --10306148 - Rule to check location status
                                                        );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_info_list,
                                                        null,
                                                        true,
                                                        10305948 --10305948 - Rule to check location status
                                                        );

    v_object_insured_info_index  := v_object_insured_info_list.first;
    v_object_interest_info_index := v_object_interest_info_list.first;

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Selected information object list count  : ' ||
                            v_object_insured_info_list.count ||
                            '... Selected information object list count  : ' ||
                            v_object_interest_info_list.count);
    end if;
    --Insured information object deletion
    while v_object_insured_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Insured Information object where location is marked as destroyed     : ' ||
                              v_object_insured_info_list(v_object_insured_info_index));
      end if;
               --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_insured_info_list(v_object_insured_info_index),pkg_os_constant_bv.gbv_Template);

      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_insured_info_list(v_object_insured_info_index),
                                     3365448,
                                     null,--lxproduct-248
                                     v_soft_delete_tf);--lxproduct-248
      v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
    end loop;

    --Interest information object deletion
    while v_object_interest_info_index is not null loop
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Interest Information object where location is marked as destroyed     : ' ||
                              v_object_interest_info_list(v_object_interest_info_index));
      end if;
          --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_interest_info_list(v_object_interest_info_index),pkg_os_constant_bv.gbv_Template);

      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_object_interest_info_list(v_object_interest_info_index),
                                     3365548,
                                     null, --lxproduct-248
                                     v_soft_delete_tf); --lxproduct-248
      v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
    end loop;
    --UTPRODUCT-1691 end

    --1.2
    -- Delete all the existing who's information object is deleted (PolicyBOPAdditionalInsured ,PolicyBOPLocationAdditionalInsured,PolicyBOPAdditionalInterest ,PolicyBOPLocationAdditionalInterest)
    -- 2240805,3363948,381501,380601
    -- Collect all the object of 3347146, 385(Objectadditionalinsured, Objectassitionalinterst)
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        3347146,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275348 --Created from ref on ObjectAdditionalInsured object is null
                                                        );
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        385,
                                                        v_exist_object_list,
                                                        null,
                                                        true,
                                                        10275448 --Created from ref on ObjectAdditionalInterest object is null
                                                        );

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Total number of objects deleted    : ' ||
                            v_exist_object_list.count);
    end if;

    v_exist_object_index := v_exist_object_list.first;

    while v_exist_object_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted object which do not have info object     : ' ||
                              v_exist_object_list(v_exist_object_index));
      end if;

          --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);

      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248
      pkg_os_object.sp_object_delete(in_session_id,
                                     in_transaction_id,
                                     in_action_object_id,
                                     v_exist_object_list(v_exist_object_index),
                                     3347146,
                                     null, --lxproduct-248
                                     v_soft_delete_tf); --lxproduct-248

      v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
    end loop;
     --old garbage object delete part end here
    --2.
    v_policycpp_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                             in_transaction_id,
                                                             in_action_object_id,
                                                             '21761001.26916207' -- 21761001.21761301 -- ptp to policycpp
                                                             );
    -- Get all ObjectAdditionalInsuredInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365448, --ObjectAdditionalInsuredInformation
                                                        v_object_insured_list,
                                                        null,
                                                        false,
                                                        10294648 --10274948 - Rule for Lastupddate -- 10294648--If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_insured_list.first    : ' ||
                            v_object_insured_list.first ||
                            'v_object_insured_list.count    : ' ||
                            v_object_insured_list.count ||
                            'v_policycpp_id         : ' || v_policycpp_id

                            );
    end if;
    v_object_insured_index := v_object_insured_list.first;
    --3.
    --Insured object creation start
    while v_object_insured_index is not null loop
      --get existing object additional insured or policybop or policyboploacation level.
      v_exist_insured_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                   in_transaction_id,
                                                                   v_object_insured_list(v_object_insured_index),
                                                                   '32831148' -- 32831148 -- ObjectAdditionalInsuredInformation._Reference_created additional insured
                                                                   );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Insured    : ' ||
                              v_exist_insured_id);
      end if;
      -- if 32831148, --32831148 --_Reference_created additional insured is not null then delete existing object
      if v_exist_insured_id is not null then
          --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_insured_id,pkg_os_constant_bv.gbv_Template);

      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_insured_id,
                                       3347146,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      '32829348' -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                      );
       --get associated customer entity 
       --328132483347146ObjectAdditionalInsured._Reference_Associated Customer Entity
    /* v_associated_customer_entity := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      '32813248' -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                      ); */
      --get selected type information
    /*  v_insured_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                               in_transaction_id,
                                                               v_object_insured_list(v_object_insured_index),
                                                               '32808848' -- 32808848 -- ObjectAdditionalInsuredInformation.Additional Insured - Type
                                                               ); */

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      if v_associated_property is null then
        --create an object of type 3347246 - PolicyCPPAdditionalInsured
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3347246,
                                       v_policycpp_id,
                                       v_out_object_id);
      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policycpp_id, --customer
                                                                                2191505, --PolicyCFLocation
                                                                                26450005, --PolicyCFLocation - xReference - _Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true);
        
        if v_addLoc_parent_id is null then 
          --create an object of type 3347246 - PolicyCPPAdditionalInsured
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         3347246,
                                         v_policycpp_id,
                                         v_out_object_id);        
        else
          --create an object of type 3380548 - policyCPPLocationAdditionalInsured
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         3380548,
                                         v_addLoc_parent_id,
                                         v_out_object_id);
    
        end if;
      end if;

     pkg_os_product_object_copy.sp_pd_object_update(in_session_id           => in_session_id,
                                                     in_transaction_id       => in_transaction_id,
                                                     in_action_object_id     => v_object_insured_list(v_object_insured_index),
                                                     in_action_id            => 3851748  ,
                                                     in_tgt_parent_object_id => v_out_object_id );
      --Set all the required BV's in new object either it is (ObjectAdditionalInsured type object, ObjectLocationAdditionalInsured type object)
    /*  pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32808848, --32808848 --ObjectAdditionalInsured.Additional Insured - Type
                                        v_insured_type); */
      --Set 32833348 --ObjectAdditionalInsured._Reference_Created From (ObjectAdditionalInsured type object, ObjectLocationAdditionalInsured type object)
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833348, --32833348 --_Reference_Created From
                                        v_object_insured_list(v_object_insured_index));

      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_insured_list(v_object_insured_index),
                                        32831148, --32808848 --_Reference_created additional insured
                                        v_out_object_id);

    /*  if v_associated_customer_entity is not null then
        --ObjectAdditionalInsured._Reference_Associated Customer Entity
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                       in_transaction_id,
                                       v_out_object_id,
                                       32813248,
                                       v_associated_customer_entity
                                       );   
      end if; */ 
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;

      v_object_insured_index := v_object_insured_list.next(v_object_insured_index);
    end loop;

    --Insured object creation end
    ------------------------------------------------------------------------------------------------------------------------------------
    --4.
    --Interest object creation end

    -- Get all ObjectAdditionalInterestInformation object list
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id, --ptp
                                                        3365548, --ObjectAdditionalInsuredInformation
                                                        v_object_interest_list,
                                                        null,
                                                        false,
                                                        10294848 --10275048 Rule for Lastupddate --10294848 --If any value is updated in insured information object
                                                        );
    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'in_action_object_id    : ' ||
                            in_action_object_id ||
                            'v_object_interest_list.first    : ' ||
                            v_object_interest_list.first ||
                            'v_object_interest_list.count    : ' ||
                            v_object_interest_list.count ||
                            'v_policycpp_id         : ' || v_policycpp_id

                            );
    end if;
    v_object_interest_index := v_object_interest_list.first;

    while v_object_interest_index is not null loop

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Interest list element    : ' ||
                              v_object_interest_list(v_object_interest_index));
      end if;
      --get existing object additional interest or policybop or policyboploacation level.
      v_exist_interest_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_object_interest_list(v_object_interest_index),
                                                                    '32831248' --32831248 --_Reference_created additional interest
                                                                    );
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Deleted Existing Interest    : ' ||
                              v_exist_interest_id);
      end if;
      -- if 32831248, --32831248 --_Reference_created additional interest is not null then delete existing object
      if v_exist_interest_id is not null then
          --lxproduct-248
      v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_interest_id,pkg_os_constant_bv.gbv_Template);

      if v_template_object_id  is null then -- It is a newly added object

                    v_soft_delete_tf := false;

       end if;
       --lxproduct-248
        --delete the old object insured
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       in_action_object_id,
                                       v_exist_interest_id,
                                       385,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248
      end if;
      --get selected associated address information
      v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '32829848' -- 32829848 -- _Reference_associated location
                                                                      );
      /*v_insured_type        := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      '29393514' -- 29393514 -- ObjectAdditionalInterest.Additional Interest - Type
                                                                      );*/

	    --32694324385ObjectAdditionalInterest._Reference_Associated Financial Entity
	    /*v_associated_financial_entiy := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      32694324  
                                                                      );*/
                                                                      
      --ObjectAdditionalInterest - List - Mortgagee Designation
     /* v_Mortgagee_Designation := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_interest_list(v_object_interest_index),
                                                                      32850548  
                                                                      ); */

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'v_associated_property    : ' ||
                              v_associated_property ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      if v_associated_property is null then
        --create an object of type 3380448 - PolicyCPPAdditionalInterest
        pkg_os_object.sp_object_create(in_session_id,
                                       in_transaction_id,
                                       3380448,
                                       v_policycpp_id,
                                       v_out_object_id);

      else
        v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_policycpp_id, --customer
                                                                                2191505, --PolicyCFLocation
                                                                                26450005, --PolicyCFLocation - xReference - _Reference_Covered Location
                                                                                v_associated_property, --v_associated_property
                                                                                true

                                                                                );
        if v_addLoc_parent_id is null then 
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         3380448,
                                         v_policycpp_id,
                                         v_out_object_id);          
        else
          --create an object of type 2250309 - policyCPPLocationAdditionalInterest
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         2250309,
                                         v_addLoc_parent_id,
                                         v_out_object_id);
	  
        end if;
      end if;

     pkg_os_product_object_copy.sp_pd_object_update(in_session_id           => in_session_id,
                                                     in_transaction_id       => in_transaction_id,
                                                     in_action_object_id     => v_object_interest_list(v_object_interest_index),
                                                     in_action_id            => 3847748  ,
                                                     in_tgt_parent_object_id => v_out_object_id );
      --Set all the required BV's in new object either it is (ObjectAdditionalInsured, OnjectLocationAdditionalInsured)
    /*  pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        29393514, --29393514 ---- ObjectAdditionalInterest.Additional Interest - Type
                                        v_insured_type); */
      --Set 32833248 --_Reference_Created From on PolicyBOP and PolicyBOPLocation additional interest
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32833248, --32833248 --_Reference_Created From
                                        v_object_interest_list(v_object_interest_index));
      --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_object_interest_list(v_object_interest_index),
                                        32831248, --32831248 --_Reference_created additional interest
                                        v_out_object_id);

     /* if v_associated_financial_entiy is not null then 
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                        in_transaction_id,
                                        v_out_object_id,
                                        32694324,  --_Reference_Associated Financial Entity
                                        v_associated_financial_entiy);     
      
      end if;

      pkg_os_object_io.sp_object_bv_set(in_session_id,
                                      in_transaction_id,
                                      v_out_object_id,
                                      32850548,  --ObjectAdditionalInterest - List - Mortgagee Designation
                                      v_Mortgagee_Designation);  */
                                      
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Set Insured type to   : ' || v_out_object_id ||
                              'v_insured_type    : ' || v_insured_type ||
                              'v_insured_name    : ' || v_insured_name

                              );
      end if;
      
      v_object_interest_index := v_object_interest_list.next(v_object_interest_index);
    end loop;

    --Insured object creation end

  end sp_add_insuredinterest_cpp;

  --UTPRODUCT-1262 end
  ---------------------------------------------------------------------------------------------- 

 
 procedure sp_add_insuredinterest(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type,
                                   outcome in out outcome.outcome_id%type
                                   ) is
    v_exist_object_list          pkg_os_object.t_object_list;
    v_exist_object_index         number;
    v_object_insured_info_list   pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_insured_info_index  number; --UTPRODUCT-1691
    v_object_interest_info_list  pkg_os_object.t_object_list; --UTPRODUCT-1691
    v_object_interest_info_index number; --UTPRODUCT-1691
   -- v_info_object_type_id        object_type.object_type_id%type; --UTPRODUCT-1691
    v_session_control            pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                  in_transaction_id);
    v_procedure_name constant system_log.program_name%type := 'sp_add_insuredinterest_cpp';

    v_associated_property object.object_id%type;

    v_out_object_id       object.object_id%type;
    v_addLoc_parent_id    object.object_id%type;
    v_exist_insured_id    object.object_id%type;
    v_exist_interest_id   object.object_id%type;

     --lxproduct-248
    v_soft_delete_tf                                       boolean := false;
    --v_hard_del_objects_install_tf                          number := pkg_os_constant.gBoolean_True;
    v_template_object_id                                   object.object_id%type ;
    v_exchange_id                                          object.object_id%type := pkg_os_wf_session.fn_exchange_get(in_session_id,in_transaction_id);


    v_ptp_id object.object_id%type;
    v_product_id  pd_product.pd_product_id%type;
    
    cursor c_additional_insured(in_product_id in pd_product.pd_product_id%type,in_program_id in program.program_id%type) is 
    select * from PD_ADDITIONAL_INSURED pai
    where PRODUCT_ID = in_product_id and 
    (pai.program_set_id is null or  pkg_os_program.fn_program_in_set(in_program_id , pai.program_set_id)='T') ;
    v_lob_id object.object_id%type;
    --v_location_bv business_variable.business_variable_id%type;

    cursor c_additional_interest(in_product_id in pd_product.pd_product_id%type,in_program_id in program.program_id%type) is 
    select * from PD_ADDITIONAL_INTEREST pai
    where PRODUCT_ID = in_product_id and 
    (pai.program_set_id is null or  pkg_os_program.fn_program_in_set(in_program_id , pai.program_set_id)='T') ;
    
    v_program_type  program.program_id%type ;
    v_asset_payer   varchar2(10);
    v_asset_payer_object_list  pkg_os_object.t_object_list;
    v_asset_payer_index integer;
    
    v_apply_asset_payer boolean := false;
    v_ptp_asset_payer   object.object_id%type;
    v_billing_method    business_variable.business_variable_id%type;
    v_payer_object object.object_id%type;
    
    v_asset_payer_apply_list   pkg_os_object.t_object_list;
    v_found boolean := false;
  begin
    
	
    --get PTP Object
    if pkg_os_object.fn_object_type_get(in_session_id     => in_session_id,
                                        in_transaction_id => in_transaction_id,
                                        in_object_id      => in_action_object_id) =2276904 then 
     
      v_ptp_id:= in_action_object_id;
    elsif  pkg_os_object.fn_object_type_get(in_session_id     => in_session_id,
                                        in_transaction_id => in_transaction_id,
                                        in_object_id      => in_action_object_id) =629 then 
      v_ptp_id := pkg_os_object_io.fn_object_bv_get(in_session_id => in_session_id,
                                                    in_transaction_id => in_transaction_id,
                                                    in_object_id => in_action_object_id,in_bv_id => 212318);
    else
      v_ptp_id :=pkg_os_product.fn_policy_object_get(in_session_id     => in_session_id,
                                          in_transaction_id => in_transaction_id,
                                          in_object_id      => in_action_object_id);
    end if;
    
    --get product id 
    v_product_id := pkg_os_product.fn_object_product_get(in_session_id     => in_session_id,
                                                         in_transaction_id => in_transaction_id,
                                                         in_object_id      => v_ptp_id);
    v_program_type := pkg_os_program.fn_object_program_get(in_session_id     => in_session_id,
                                                         in_transaction_id => in_transaction_id,
                                                         in_object_id      => v_ptp_id);
    --lxproduct-248
    --v_hard_del_objects_install_tf := nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True);

    if nvl(pkg_os_exchange.sp_exchange_row(v_exchange_id).hard_delete_objects_tf,pkg_os_constant.gBoolean_True) = pkg_os_constant.gBoolean_True then

       v_soft_delete_tf := false;

       if v_session_control.gLogging_Full then

                                pkg_os_logging.sp_log_core
                                (
                                     in_session_id,
                                     in_transaction_id,
                                     v_procedure_name,
                                     ' The installation flag is set to HARD delete the objects. '

                                );

       end if;

    else

       v_soft_delete_tf := true;
    end if;
    
    --UTPRODUCT-1691 start
    --1.1 -- Delete the (3365448)ObjectAdditionalInsuredInformation and (10294848)ObjectAdditionalInterestInformation
    --       who's associated location is marked as "GenericDestroyed".

    --Insured information object deletion  3365448(ObjectAdditionalInsuredInformation)
    pkg_os_object_search.sp_object_children_of_type_get(  in_session_id  => in_session_id,
                                                         in_transaction_id  => in_transaction_id,
                                                         in_object_id => v_ptp_id,
                                                         in_child_object_type_id => 3365448,
                                                         io_object_list  => v_object_insured_info_list,
                                                         in_sort_bv_id => null,
                                                         in_recurse_flag => false,
                                                         in_qualification_rule_id  => null,
                                                         in_exclude_deleted_objects_tf => true,
                                                         in_child_search_id  => null); 
      


    v_object_insured_info_index  := v_object_insured_info_list.first;
    
    while v_object_insured_info_index is not null loop
      --check eligible rule 
      -- delete object which have Reference_associated location as deleted
      if pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,
                                           v_object_insured_info_list(v_object_insured_info_index),10305948) = 'T' then
        if v_session_control.gLogging_Full then
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'Deleted Insured Information object where location is marked as destroyed     : ' ||
                                v_object_insured_info_list(v_object_insured_info_index));
        end if;
                 --lxproduct-248
        v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_insured_info_list(v_object_insured_info_index),pkg_os_constant_bv.gbv_Template);

        if v_template_object_id  is null then -- It is a newly added object

                      v_soft_delete_tf := false;

         end if;
         --lxproduct-248
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       v_ptp_id,
                                       v_object_insured_info_list(v_object_insured_info_index),
                                       3365548,
                                       null,--lxproduct-248
                                       v_soft_delete_tf);--lxproduct-248
        
      end if;
      
      v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
    end loop;

    --Interest information object deletion
    -- Get all ObjectAdditionalInterestInformation object list 3365548(ObjectAdditionalInterestInformation)
    pkg_os_object_search.sp_object_children_of_type_get(  in_session_id  => in_session_id,
                                                         in_transaction_id  => in_transaction_id,
                                                         in_object_id => v_ptp_id,
                                                         in_child_object_type_id =>  3365548,
                                                         io_object_list  => v_object_interest_info_list,
                                                         in_sort_bv_id => null,
                                                         in_recurse_flag => false,
                                                         in_qualification_rule_id  => null,
                                                         in_exclude_deleted_objects_tf => true,
                                                         in_child_search_id  => null);
                                                                                                                
    v_object_interest_info_index := v_object_interest_info_list.first;
    
    while v_object_interest_info_index is not null loop
      
      if pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,
                                           v_object_interest_info_list(v_object_interest_info_index),10306148) = 'T' then
        if v_session_control.gLogging_Full then
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'Deleted Interest Information object where location is marked as destroyed     : ' ||
                                v_object_interest_info_list(v_object_interest_info_index));
        end if;
            --lxproduct-248
        v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_interest_info_list(v_object_interest_info_index),pkg_os_constant_bv.gbv_Template);

        if v_template_object_id  is null then -- It is a newly added object

                      v_soft_delete_tf := false;

         end if;
         --lxproduct-248
        pkg_os_object.sp_object_delete(in_session_id,
                                       in_transaction_id,
                                       v_ptp_id,
                                       v_object_interest_info_list(v_object_interest_info_index),
                                       3365548,
                                       null, --lxproduct-248
                                       v_soft_delete_tf); --lxproduct-248
      end if; 
      v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
      
    end loop;
    
    --UTPRODUCT-1691 end

    --1.2
    -- Delete all the existing who's information object is deleted (PolicyBOPAdditionalInsured ,PolicyBOPLocationAdditionalInsured,PolicyBOPAdditionalInterest ,PolicyBOPLocationAdditionalInterest)
    -- 2240805,3363948,381501,380601
    -- Collect all the object of 3347146, 385(Objectadditionalinsured, Objectassitionalinterst)
    for l_additional_insured in c_additional_insured(v_product_id,v_program_type) loop

      if l_additional_insured.lob_applicable_rule is null or
         pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,v_ptp_id,l_additional_insured.lob_applicable_rule) = 'T' then 
       
        v_lob_id := pkg_os_object_search.fn_object_children_of_typ_last(in_session_id           => in_session_id,
                                                                in_transaction_id       => in_transaction_id,
                                                                in_object_id     => v_ptp_id,
                                                                in_child_object_type_id => l_additional_insured.lob_object_type,
                                                                in_child_search_id      => Null) ;
        if v_lob_id is null then 
          --throw exception for not getting LOB object
          Raise_Application_Error(-20001, 'Error getting Lob for additional insured configuration');
        end if;
        --3347146 (ObjectAdditionalInsured)  Get all children of type ObjectAdditionalInsured below LOB
        pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                            in_transaction_id,
                                                            v_lob_id,
                                                            3347146,
                                                            v_exist_object_list,
                                                            null,
                                                            true,
                                                            10275348 --Created from ref on ObjectAdditionalInsured object is null
                                                            );     
      
        v_exist_object_index := v_exist_object_list.first;

        while v_exist_object_index is not null loop

          if v_session_control.gLogging_Full then

            pkg_os_logging.sp_log(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  'Deleted object which do not have info object     : ' ||
                                  v_exist_object_list(v_exist_object_index));
          end if;

              --lxproduct-248
          v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);

          if v_template_object_id  is null then -- It is a newly added object

                        v_soft_delete_tf := false;

           end if;
           --lxproduct-248
          pkg_os_object.sp_object_delete(in_session_id,
                                         in_transaction_id,
                                         v_ptp_id,
                                         v_exist_object_list(v_exist_object_index),
                                         3347146,
                                         null, --lxproduct-248
                                         v_soft_delete_tf); --lxproduct-248

          v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
        end loop;
        
        v_object_insured_info_index := v_object_insured_info_list.first;
        --3. --Insured object creation start
        while v_object_insured_info_index is not null loop
          
          if pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,
              v_object_insured_info_list(v_object_insured_info_index),l_additional_insured.insured_information_applicable) = 'T' then
            --get existing assocaited  object additional insured 
            v_exist_insured_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_object_insured_info_list(v_object_insured_info_index),
                                                                         32831148 -- 32831148 -- ObjectAdditionalInsuredInformation._Reference_created additional insured
                                                                         );
            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'Deleted Existing Insured    : ' ||
                                    v_exist_insured_id);
            end if;
            -- if 32831148, --32831148 --_Reference_created additional insured is not null then delete existing object
            if v_exist_insured_id is not null then
                --lxproduct-248
            v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_insured_id,pkg_os_constant_bv.gbv_Template);

            if v_template_object_id  is null then -- It is a newly added object

                          v_soft_delete_tf := false;

             end if;
             --lxproduct-248
              --delete the old object insured
              pkg_os_object.sp_object_delete(in_session_id,
                                             in_transaction_id,
                                             v_ptp_id,
                                             v_exist_insured_id,
                                             3347146,
                                             null, --lxproduct-248
                                             v_soft_delete_tf); --lxproduct-248
            end if;
            --get selected associated address information
            v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_object_insured_info_list(v_object_insured_info_index),
                                                                            l_additional_insured.asset_bv_id -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                            );

            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'v_associated_property    : ' ||
                                    v_associated_property 
                                    );
            end if;
            if v_associated_property is null then
              --create an object of type 3347246 - PolicyCPPAdditionalInsured
              pkg_os_object.sp_object_create(in_session_id,
                                             in_transaction_id,
                                             l_additional_insured.lob_add_insured_object_type,
                                             v_lob_id,
                                             v_out_object_id);
            else
              /*select ore.reference_bv_id into v_location_bv from object_relationship ore where ore.object_type_id = l_additional_insured.lob_location_object_type
              and ore.related_object_type_id= 320 ;*/
              if l_additional_insured.customer_asset_relation_bv is not null then 
                v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                        in_transaction_id,
                                                                                        v_lob_id, 
                                                                                        l_additional_insured.lob_asset_object_type,
                                                                                        l_additional_insured.customer_asset_relation_bv, 
                                                                                        v_associated_property, --v_associated_property
                                                                                        true);
              else
                If pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,v_associated_property) = l_additional_insured.lob_asset_object_type then 
                  v_addLoc_parent_id := v_associated_property;
                else
                  v_addLoc_parent_id := null;
                end if;
              end if;
              
              if v_addLoc_parent_id is null then
                --create an object of type 3347246 - PolicyCPPAdditionalInsured
                pkg_os_object.sp_object_create(in_session_id,
                                               in_transaction_id,
                                               l_additional_insured.lob_add_insured_object_type,
                                               v_lob_id,
                                               v_out_object_id);
              else
                --create an object of type 3380548 - policyCPPLocationAdditionalInsured
                pkg_os_object.sp_object_create(in_session_id,
                                               in_transaction_id,
                                               l_additional_insured.asset_add_insured_type,
                                               v_addLoc_parent_id,
                                               v_out_object_id);

                --asset payer creation logic 35991448ObjectAdditionalInsured - Boolean - Additional Insured Asset Payer Flag
                v_asset_payer := pkg_os_object_io.fn_object_bv_get(in_session_id   ,
                                                                  in_transaction_id  ,
                                                                   v_object_insured_info_list(v_object_insured_info_index) ,
                                                                   35991448  );
                --check if flag is null
                if v_asset_payer is not null then
                  --get asset payer object below target

                  v_asset_payer_object_list.delete;
                  
                  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,in_transaction_id,v_addLoc_parent_id,3364248,v_asset_payer_object_list);
                  
                  v_asset_payer_index := v_asset_payer_object_list.first;
                  
                  while v_asset_payer_index is not null loop
                  
                    if nvl(v_asset_payer,2) = 1 then ---yes 
                       -- when no asset payer object below target create one
                       --32809248
                       /*if v_asset_payer_object is null then 
                          pkg_os_object.sp_object_create(in_session_id,
                                                   in_transaction_id,
                                                   3364248,
                                                   v_addLoc_parent_id,
                                                   v_asset_payer_object);
                       end if;*/
                       --set reference on asset payer
                       v_apply_asset_payer := true;
                       
                       pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248,v_out_object_id);
                      
                    elsif nvl(v_asset_payer,1) = 2 then ---No 
                      
                      --if v_asset_payer_object is not null then 
                        --reset the reference 
                         if pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248) = v_out_object_id then

                            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                     in_transaction_id,
                                                     v_asset_payer_object_list(v_asset_payer_index),
                                                     32809248,
                                                     null);
                          end if;
                     -- end if;
                                       
                    end if;
                    
                    v_asset_payer_index := v_asset_payer_object_list.next(v_asset_payer_index);
                    
                  end loop;
                
                end if; 
                
              end if;
              
            end if;

           pkg_os_product_object_copy.sp_pd_object_update(in_session_id           => in_session_id,
                                                           in_transaction_id       => in_transaction_id,
                                                           in_action_object_id     => v_object_insured_info_list(v_object_insured_info_index),
                                                           in_action_id            => l_additional_insured.object_copy_action_id  ,
                                                           in_tgt_parent_object_id => v_out_object_id );

            --Set 32833348 --ObjectAdditionalInsured._Reference_Created From (ObjectAdditionalInsured type object, ObjectLocationAdditionalInsured type object)
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_out_object_id,
                                              32833348, --32833348 --_Reference_Created From
                                              v_object_insured_info_list(v_object_insured_info_index));

            --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_object_insured_info_list(v_object_insured_info_index),
                                              32831148, --32808848 --_Reference_created additional insured
                                              v_out_object_id);


            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'Set Insured type to   : ' || v_out_object_id );
            end if;
            -----set the backup bv 
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_insured_info_list(v_object_insured_info_index), 32835548,
                                              pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                              v_object_insured_info_list(v_object_insured_info_index), 32808848)
                                              );
          
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_insured_info_list(v_object_insured_info_index), 32835648,
                                              pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                                v_object_insured_info_list(v_object_insured_info_index), 32830048)
                                              );        
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_insured_info_list(v_object_insured_info_index), 32835748,
                                        pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                          v_object_insured_info_list(v_object_insured_info_index), l_additional_insured.asset_bv_id)
                                        );   
         
            
          ---no change happen to additional insured 
          else ---check asset payer logic
            --asset payer creation logic
            v_found:= false;
            for v_index in 1 .. v_asset_payer_apply_list.count loop
               if v_asset_payer_apply_list(v_index) = v_object_insured_info_list(v_object_insured_info_index) then 
                  v_found:= true;
                  exit;
               end if;
            end loop;
            
            if v_found then 
              null;
            else
              
              v_asset_payer_apply_list(v_asset_payer_apply_list.count+1) := v_object_insured_info_list(v_object_insured_info_index);
              v_asset_payer := pkg_os_object_io.fn_object_bv_get(in_session_id   ,
                                                                in_transaction_id  ,
                                                                 v_object_insured_info_list(v_object_insured_info_index) ,
                                                                  35991448  );
              --check if flag is null
              if v_asset_payer is not null then
                --get asset payer object below target
                v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_object_insured_info_list(v_object_insured_info_index),
                                                                                l_additional_insured.asset_bv_id -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                                );
                v_out_object_id := pkg_os_object_io.fn_object_bv_GET(in_session_id,
                                                                                in_transaction_id,
                                                                                v_object_insured_info_list(v_object_insured_info_index),
                                                                                32831148 -- 32829348 -- ObjectAdditionalInsuredInformation._Reference_associated location
                                                                                );
                if v_associated_property is not null then
                  if l_additional_insured.customer_asset_relation_bv is not null then 
                    v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_lob_id, 
                                                                                            l_additional_insured.lob_asset_object_type,
                                                                                            l_additional_insured.customer_asset_relation_bv, 
                                                                                            v_associated_property, --v_associated_property
                                                                                            true);
                  else
                    If pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,v_associated_property) = l_additional_insured.lob_asset_object_type then 
                      v_addLoc_parent_id := v_associated_property;
                    else
                      v_addLoc_parent_id := null;
                    end if;                  
                  end if;
                  
                  if v_addLoc_parent_id is not null then 
                    
                    v_asset_payer_object_list.delete;
                    
                    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,in_transaction_id,v_addLoc_parent_id,3364248,v_asset_payer_object_list);
                        
                    v_asset_payer_index := v_asset_payer_object_list.first;
                        
                    while v_asset_payer_index is not null loop
                        
                      if nvl(v_asset_payer,2) = 1 then ---yes 
                         -- when no asset payer object below target create one
                         --32809248
                         /*if v_asset_payer_object is null then 
                            pkg_os_object.sp_object_create(in_session_id,
                                                     in_transaction_id,
                                                     3364248,
                                                     v_addLoc_parent_id,
                                                     v_asset_payer_object);
                         end if;*/
                         --set reference on asset payer
                         v_apply_asset_payer := true;
                         
                         pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248,v_out_object_id);
                            
                      elsif nvl(v_asset_payer,1) = 2 then ---No 
                            
                        --if v_asset_payer_object is not null then 
                          --reset the reference 
                           if pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248) = v_out_object_id then

                              pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                       in_transaction_id,
                                                       v_asset_payer_object_list(v_asset_payer_index),
                                                       32809248,
                                                       null);
                            end if;
                       -- end if;
                                             
                      end if;
                          
                      v_asset_payer_index := v_asset_payer_object_list.next(v_asset_payer_index);
                          
                    end loop;
                  
                  end if;
                
                end if;
                  
              end if; 
            end if;

                        
          end if;
          
          v_object_insured_info_index := v_object_insured_info_list.next(v_object_insured_info_index);
        end loop;
      end if; -- applicable rule ends
      
    end loop;  -----insured information logic ends 
    
    ---interest logic starts

    
    for l_additional_interest in c_additional_interest(v_product_id,v_program_type) loop

      v_exist_object_list.delete;
      
	  if  l_additional_interest.lob_applicable_rule is null or 
        pkg_os_exp.fn_evaluate_expression(in_session_id, in_transaction_id, v_ptp_id, l_additional_interest.lob_applicable_rule ) = 'T' then 
      
        v_lob_id := pkg_os_object_search.fn_object_children_of_typ_last(in_session_id           => in_session_id,
                                                                        in_transaction_id       => in_transaction_id,
                                                                        in_object_id            => v_ptp_id,
                                                                        in_child_object_type_id => l_additional_interest.lob_object_type,
                                                                        in_child_search_id      => Null );
        
        

        if v_lob_id is null then 
          --throw exception for not getting LOB object
           Raise_Application_Error(-20001, 'Error getting Lob for additional Interest configuration');
        end if;  
        -- 385(ObjectAdditionalInterest)
        pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                            in_transaction_id,
                                                            v_lob_id,
                                                            385,
                                                            v_exist_object_list,
                                                            null,
                                                            false,
                                                            10275448 --Created from ref on ObjectAdditionalInterest object is null
                                                            ); 

        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'Total number of objects deleted    : ' ||
                                v_exist_object_list.count);
        end if;

        v_exist_object_index := v_exist_object_list.first;

        while v_exist_object_index is not null loop

          if v_session_control.gLogging_Full then

            pkg_os_logging.sp_log(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  'Deleted object which do not have info object     : ' ||
                                  v_exist_object_list(v_exist_object_index));
          end if;

              --lxproduct-248
          v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_object_list(v_exist_object_index),pkg_os_constant_bv.gbv_Template);

          if v_template_object_id  is null then -- It is a newly added object

                        v_soft_delete_tf := false;

           end if;
           --lxproduct-248
          pkg_os_object.sp_object_delete(in_session_id,
                                         in_transaction_id,
                                         v_ptp_id,
                                         v_exist_object_list(v_exist_object_index),
                                         385,
                                         null, --lxproduct-248
                                         v_soft_delete_tf); --lxproduct-248

          v_exist_object_index := v_exist_object_list.next(v_exist_object_index);
        end loop;

        ----interest creation logic start
        v_object_interest_info_index := v_object_interest_info_list.first;

        while v_object_interest_info_index is not null loop
          
          if pkg_os_exp.fn_evaluate_expression(in_session_id,in_transaction_id,
                                                v_object_interest_info_list(v_object_interest_info_index),l_additional_interest.interest_information_applicable) = 'T' then
            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'Interest list element    : ' ||
                                    v_object_interest_info_list(v_object_interest_info_index));
            end if;
            --get existing object additional interest or policybop or policyboploacation level.
            v_exist_interest_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                          in_transaction_id,
                                                                          v_object_interest_info_list(v_object_interest_info_index),
                                                                          32831248 --32831248 --_Reference_created additional interest
                                                                          );
            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'Deleted Existing Interest    : ' ||
                                    v_exist_interest_id);
            end if;
            -- if 32831248, --32831248 --_Reference_created additional interest is not null then delete existing object
            if v_exist_interest_id is not null then
                --lxproduct-248
              v_template_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_exist_interest_id,pkg_os_constant_bv.gbv_Template);

              if v_template_object_id  is null then -- It is a newly added object

                            v_soft_delete_tf := false;

               end if;
               --lxproduct-248
                --delete the old object insured
                pkg_os_object.sp_object_delete(in_session_id,
                                               in_transaction_id,
                                               v_ptp_id,
                                               v_exist_interest_id,
                                               385,
                                               null, --lxproduct-248
                                               v_soft_delete_tf); --lxproduct-248
            end if;
            --get selected associated address information
            v_associated_property := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_object_interest_info_list(v_object_interest_info_index),
                                                                            l_additional_interest.asset_bv_id--'32829848' -- 32829848 -- _Reference_associated location
                                                                            );


            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'v_associated_property    : ' ||
                                    v_associated_property);
            end if;
            if v_associated_property is null then
              --create an object of type 3380448 - PolicyCPPAdditionalInterest
              pkg_os_object.sp_object_create(in_session_id,
                                             in_transaction_id,
                                             l_additional_interest.lob_add_interest_object_type,
                                             v_lob_id,
                                             v_out_object_id);

            else
              if l_additional_interest.customer_asset_relation_bv is not null then 
                v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                        in_transaction_id,
                                                                                        v_lob_id, 
                                                                                        l_additional_interest.lob_asset_object_type, 
                                                                                        l_additional_interest.customer_asset_relation_bv, 
                                                                                        v_associated_property, 
                                                                                        true
                                                                                        );
              else
                If pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,v_associated_property) = l_additional_interest.Lob_Asset_Object_Type then
                   v_addLoc_parent_id := v_associated_property;
                ELSE
                  v_addLoc_parent_id := null;
                END IF;
              end if;
              
              if v_addLoc_parent_id is null then
                pkg_os_object.sp_object_create(in_session_id,
                                               in_transaction_id,
                                               l_additional_interest.lob_add_interest_object_type,
                                               v_lob_id,
                                               v_out_object_id);
              else
                --create an object of type 2250309 - policyCPPLocationAdditionalInterest
                pkg_os_object.sp_object_create(in_session_id,
                                               in_transaction_id,
                                               l_additional_interest.asset_add_interest_type,
                                               v_addLoc_parent_id,
                                               v_out_object_id);
                --asset payer creation logic
                v_asset_payer := pkg_os_object_io.fn_object_bv_get(in_session_id   ,
                                                                  in_transaction_id  ,
                                                                   v_object_interest_info_list(v_object_interest_info_index)  ,
                                                                   35991548  );
                
                --CHECK IF ASSEPT PAYER IS APLICABLE
                IF v_asset_payer IS NOT NULL THEN 
                  --get asset payer object below target
                  v_asset_payer_object_list.delete;

                  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,in_transaction_id,v_addLoc_parent_id,3364248, v_asset_payer_object_list);

                  v_asset_payer_index := v_asset_payer_object_list.first;
                  
                  while v_asset_payer_index  is not null loop
                    
                    if nvl(v_asset_payer,2) = 1 then ---yes 
                       -- when no asset payer object below target create one
                       --32809248
                      /* if v_asset_payer_object is null then 
                          pkg_os_object.sp_object_create(in_session_id,
                                                   in_transaction_id,
                                                   3364248,
                                                   v_addLoc_parent_id,
                                                   v_asset_payer_object);
                       end if;*/
                       --set reference on asset payer
                       v_apply_asset_payer := true;
                       pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248,v_out_object_id);
                      
                    elsif nvl(v_asset_payer,1) = 2 then ---No 
                      
                      --if v_asset_payer_object is not null then 
                        --reset the reference if asset payer link to 
                       if pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248) = v_out_object_id then
 
                          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                   in_transaction_id,
                                                   v_asset_payer_object_list(v_asset_payer_index),
                                                   32809248,
                                                   null);
                       end if;
                      --end if;*/
                                          
                    end if;
                    
                     v_asset_payer_index := v_asset_payer_object_list.next(v_asset_payer_index);
                    
                  end loop;
                
                end if;

              end if;
     
           end if;

           pkg_os_product_object_copy.sp_pd_object_update(in_session_id           => in_session_id,
                                                           in_transaction_id       => in_transaction_id,
                                                           in_action_object_id     => v_object_interest_info_list(v_object_interest_info_index),
                                                           in_action_id            => l_additional_interest.object_copy_action_id  ,
                                                           in_tgt_parent_object_id => v_out_object_id );

            --Set 32833248 --_Reference_Created From on PolicyBOP and PolicyBOPLocation additional interest
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_out_object_id,
                                              32833248, --32833248 --_Reference_Created From
                                              v_object_interest_info_list(v_object_interest_info_index));
            --Set _Reference_created additional interest on ObjectAdditionalInterestInformation
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_object_interest_info_list(v_object_interest_info_index),
                                              32831248, --32831248 --_Reference_created additional interest
                                              v_out_object_id);



            if v_session_control.gLogging_Full then

              pkg_os_logging.sp_log(in_session_id,
                                    in_transaction_id,
                                    v_procedure_name,
                                    'Set Insured type to   : ' || v_out_object_id  );
            end if;
            ---set backup bv
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_interest_info_list(v_object_interest_info_index), 32835848,
                                              pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                              v_object_interest_info_list(v_object_interest_info_index), 29393514)
                                              );
          
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_interest_info_list(v_object_interest_info_index), 32835948,
                                              pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                                v_object_interest_info_list(v_object_interest_info_index), 32830148)
                                              );        
            pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id,v_object_interest_info_list(v_object_interest_info_index), 32836048,
                                        pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,
                                          v_object_interest_info_list(v_object_interest_info_index), l_additional_interest.asset_bv_id)
                                        );  
          ---no change happen on placeholder object 
          else ---check asset payer logic

            --asset payer creation logic
            v_found:= false;
            for v_index in 1 .. v_asset_payer_apply_list.count loop
               if v_asset_payer_apply_list(v_index) = v_object_interest_info_list(v_object_interest_info_index) then 
                  v_found:= true;
                  exit;
               end if;
            end loop;
            --asset payer creation logic
            if v_found then 
              null;
            else
              v_asset_payer_apply_list(v_asset_payer_apply_list.count+1) := v_object_interest_info_list(v_object_interest_info_index);
              v_asset_payer := pkg_os_object_io.fn_object_bv_get(in_session_id   ,
                                                                in_transaction_id  ,
                                                                 v_object_interest_info_list(v_object_interest_info_index) ,
                                                                 35991548  );                                                                         
              
              if v_asset_payer is not null then

                v_associated_property := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_object_interest_info_list(v_object_interest_info_index),
                                                                                32829848 -- 32829848 -- _Reference_associated location
                                                                                );              

                v_out_object_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_object_interest_info_list(v_object_interest_info_index),
                                                                                32831248 -- 32829848 -- _Reference_associated location
                                                                                );              

                if v_associated_property is not null then 
                  IF l_additional_interest.customer_asset_relation_bv IS NOT NULL THEN 
                  
                    v_addLoc_parent_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_lob_id, 
                                                                                            l_additional_interest.lob_asset_object_type, 
                                                                                            l_additional_interest.customer_asset_relation_bv, 
                                                                                            v_associated_property, 
                                                                                            true
                                                                                            );              
                  ELSE
                    If pkg_os_object.fn_object_type_get(in_session_id,in_transaction_id,v_associated_property) = l_additional_interest.lob_asset_object_type then
                      v_addLoc_parent_id := v_associated_property;
                    ELSE
                      v_addLoc_parent_id := NULL;
                    END IF;
                  END IF;   
                  --CHECK IF ASSEPT PAYER IS APLICABLE
                  IF v_addLoc_parent_id IS NOT NULL THEN 
                    --get asset payer object below target
                    v_asset_payer_object_list.delete;
                    
                    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,in_transaction_id,v_addLoc_parent_id,3364248, v_asset_payer_object_list);

                    v_asset_payer_index := v_asset_payer_object_list.first;
                        
                    while v_asset_payer_index  is not null loop
                          
                      if nvl(v_asset_payer,2) = 1 then ---yes 
                         -- when no asset payer object below target create one
                         --32809248
                        /* if v_asset_payer_object is null then 
                            pkg_os_object.sp_object_create(in_session_id,
                                                     in_transaction_id,
                                                     3364248,
                                                     v_addLoc_parent_id,
                                                     v_asset_payer_object);
                         end if;*/
                         --set reference on asset payer
                         v_apply_asset_payer:= true;
                         
                         pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248,v_out_object_id);
                            
                      elsif nvl(v_asset_payer,1) = 2 then ---No 
                            
                        --if v_asset_payer_object is not null then 
                          --reset the reference if asset payer link to 
                         if pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_asset_payer_object_list(v_asset_payer_index),32809248) = v_out_object_id then
                            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                                     in_transaction_id,
                                                     v_asset_payer_object_list(v_asset_payer_index),
                                                     32809248,
                                                     null);
                         end if;
                        --end if;*/
                                                
                      end if; --Assetpayer Yes/No logic end 
                      
                       v_asset_payer_index := v_asset_payer_object_list.next(v_asset_payer_index);
                          
                    end loop; -- end loop for all asset payer objects
                      
                  end if;
                  
                end if;
                
              end if;               
            END IF;

                       
          end if;
          
          v_object_interest_info_index := v_object_interest_info_list.next(v_object_interest_info_index);
          
        end loop;

      end if; -- applicable rule ends
      
    END LOOP; -- for loop end for additional interest config

    ---set asset payer flag at policy level
    if v_apply_asset_payer then 
      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Multi Payer is enabled');
      end if;
      --- get asset payer object below ptp
      v_billing_method := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_ptp_id,pkg_cs_post_nb.gPolicyBillingMethod);
      
      v_ptp_asset_payer := pkg_os_object_search.fn_object_11_child_get(in_session_id => in_session_id,
                                                                       in_transaction_id => in_transaction_id,
                                                                       in_parent_object_id => v_ptp_id,
                                                                       in_child_object_type_id => pkg_pc_functions.gObjType_Assetpayer); 
      if v_ptp_asset_payer is not null then 
        --328160483364248AssetPayer.Inherit from parent
         pkg_os_object_io.sp_object_bv_set(in_session_id, in_transaction_id, v_ptp_asset_payer,32816048,1); 
      end if;
      if v_billing_method is not null and v_ptp_asset_payer is not null then
         if v_billing_method = 1 then  ---Direct 
           -- get reference primary named insured
            v_payer_object := pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_ptp_id,PKG_BASE_SUBMISSION.gbv_RefPrimaryNamedInsured) ;
         elsif v_billing_method =2 then --Agency Bill
           ---get agency 
            v_payer_object := pkg_os_object_io.fn_object_bv_get( in_session_id,in_transaction_id,v_ptp_id,PKG_OS_CONSTANT_BV.gbv_GenObjProducingAgency );
         end if;

      if v_session_control.gLogging_Full then

        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              'Policy Billing Method : ' ||v_billing_method||
                              ' Associated Asset Payer Object:'|| v_payer_object);
      end if;
        if v_payer_object is not null then 
           --loop through all asset payers and  
           --get all AssetPayer objects below PTP 
           v_asset_payer_object_list.delete;
           
           pkg_os_object_search.sp_object_children_of_type_get(in_session_id,in_transaction_id,v_ptp_id,PKG_PC_FUNCTIONS.gObjType_Assetpayer,v_asset_payer_object_list);
           --loop through all asset payers
           for i in  v_asset_payer_object_list.first..v_asset_payer_object_list.last loop
             
             if pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_asset_payer_object_list(i),PKG_PC_SYSTEM_IDENTIFIER.gbv_Reference_AssetPayerInterest) is null then 
               
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(i),PKG_PC_SYSTEM_IDENTIFIER.gbv_Reference_AssetPayerInterest,v_payer_object);
               if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log(in_session_id,
                                      in_transaction_id,
                                      v_procedure_name,
                                      'Setting Asset Payer for  : ' ||v_asset_payer_object_list(i)||
                                      ' To:'|| v_payer_object);
               end if; 
                           
             elsif  v_billing_method =2 then --Agency Bill
               pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_asset_payer_object_list(i),PKG_PC_SYSTEM_IDENTIFIER.gbv_Reference_AssetPayerInterest,v_payer_object);
             end if;
           
           end loop;
        
        end if;
      
      end if; 
      
    end if;

  end  sp_add_insuredinterest;

 procedure sp_add_insuredinterest(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_object_id in object.object_id%type

                                   ) is
  v_program                                            number;
  v_policycommercial_count                             number; --LXPRODUCT-202
  v_object_policycommercial_list                       pkg_os_object.t_object_list; --LXPRODUCT-202
  v_outcome outcome.outcome_id%type;
  begin
     v_program :=  pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     211636); --30223101);

     if v_program = 102 then
       begin
         sp_add_insuredinterest_bop(in_session_id,
                                    in_transaction_id,
                                    in_action_object_id
                                    );
       end;
      elsif v_program = 2805 then
        begin
         sp_add_insuredinterest(in_session_id,
                                    in_transaction_id,
                                    in_action_object_id,
                                    v_outcome
                                    );
       end;
      else  --if v_program = 1948 then
          sp_add_insuredinterest(in_session_id,
                                    in_transaction_id,
                                    in_action_object_id,
                                    v_outcome
                                    );

      end if;

  end sp_add_insuredinterest;
----------------------------------------------------------------------------------------------
---------------------------------UTPRODUCT-1415-START---------------------------
  procedure sp_associate_named_cust_entity(in_session_id        in object.object_id%type,
                                           in_transaction_id    in object.object_id%type,
                                           in_object_id         in object.object_id%type,
                                           io_action_outcome_id in out outcome.outcome_id%type) is
  
    -- variable definitions
    v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'sp_associate_named_cust_entity'; -- procedure name
    v_policy_named_insured_id object.object_id%type; -- named insured object id
    v_customer_entity_id      object.object_id%type; -- customer entity id
    v_parent_id               object.object_id%type; -- parent customer object id
    v_ref_named_insured_entity   constant business_variable.business_variable_id%type := 29359313; -- reference to the customer entity
    v_ObjType_PolicyNamedInsured constant object.object_id%type := 2313714; -- policynamedinsured object type id
    v_entity_person_business_id  constant business_variable.business_variable_id%type := 29235814;
    v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id); -- bv distinguishing between person and business
    gBv_SessionNewObjectCreated constant business_variable.business_variable_id%type := 210395;
    v_customer_entity_role_id object.object_id%type; --UTPRODUCT-2140
  
  begin
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Entering procedure ' || v_procedure_name ||
                            '... NamedInsured OBJECT ID: ' || in_object_id);
    end if;
  
    -- get the parent of type PTP
    v_parent_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                     in_transaction_id,
                                                                     in_object_id,
                                                                     pkg_os_constant.gobjType_PolicyTrxPolicy);
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... parent object id: ' || v_parent_id);
    end if;
    -- get the last customer entity created
    v_customer_entity_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                   in_transaction_id,
                                                                   in_session_id,
                                                                   gBv_SessionNewObjectCreated);
    --UTPRODUCT-2140 start
    
    --UTPRODUCT-2846 start
     if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... set Customer Entity eliments from ' ||
                            in_object_id || ' for customer entity ' ||
                            v_customer_entity_id);
    end if;
    pkg_pc_procedures.sp_add_address_delpref(in_session_id,
                                             in_transaction_id,
                                             v_customer_entity_id);
    
    --UTPRODUCT-2846 start
  
    --Get Entity Role child  object
  
    v_customer_entity_role_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                        in_transaction_id,
                                                                        v_customer_entity_id,
                                                                        '32506748' -- CustomerEntity._Child_EntityRole                               
                                                                        );
    --
    --Set "34026746 - entity role"
    --
    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                      in_transaction_id,
                                      v_customer_entity_role_id,
                                      34026746, --entity role
                                      16346);
    --UTPRODUCT-2140 end
    -- get the last policy named insured created
    v_policy_named_insured_id := in_object_id;
  
    -- now associate the customer entity to the policy named insured
    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                      in_transaction_id,
                                      v_policy_named_insured_id,
                                      v_ref_named_insured_entity,
                                      v_customer_entity_id);
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... set a reference from named insured ' ||
                            in_object_id || ' to customer entity ' ||
                            v_customer_entity_id);
    end if;
  
    -- set the type of insured to business
    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                      in_transaction_id,
                                      v_customer_entity_id,
                                      v_entity_person_business_id,
                                      2);
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... set the insured type to business on the customer entity: ' ||
                            v_customer_entity_id);
    end if;
  
    -- set the outcome to success
    io_action_outcome_id := pkg_os_constant.gOutcome_Ok;
    
    --
    --Set "session new object"
    --
    pkg_os_object_io.sp_object_bv_set(in_session_id,
                                      in_transaction_id,
                                      in_session_id,
                                      gBv_SessionNewObjectCreated,
                                      v_customer_entity_id);
    
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '... Success - end of procedure  - ' ||
                            v_procedure_name);
    end if;
  
    -- exception handling
  exception
    when others then
      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '....Error ' || sqlerrm);
      io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;
  end sp_associate_named_cust_entity;
  --------------------------------UTPRODUCT-1415-END---------------------------  
---------------------------------UTPRODUCT-1415-START---------------------------
function fn_validate_namedinsured_entity_del
(
     in_session_id               in         object.object_id%type,
     in_transaction_id           in         object.object_id%type,
     in_object_id                in         object.object_id%type
   
)   return char as
  -- variable declaration
  v_object_list                  pkg_os_object.t_object_list;
  v_object_index                 number;
  v_associated_entity_id         object.object_id%type;
  v_return_value                 char := 'T';
  v_procedure_name               constant  system_log.program_name%type := pkg_name||'sp_associate_named_cust_entity'; -- procedure name
  v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;                  -- bv distinguishing between person and business
  v_ptp_id                       object.object_id%type        := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,in_transaction_id,in_object_id,pkg_os_constant.gobjType_PolicyTrxPolicy );
  
begin
      
     if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '... Entering procedure - ' || v_procedure_name||
         ' in_object_id : '||in_object_id
     );
     end if;
  --get list of all Named Insured objects
  pkg_os_object_search.sp_object_children_of_type_get
       (
        in_session_id  ,
        in_transaction_id ,
        v_ptp_id ,
        gObjType_PolicyNamedInsured,
        v_object_list,
        null,
        true
       );
  v_object_index := v_object_list.first;
  if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '... v_object_list.first : ' || v_object_list.first||
         ' v_ptp_id : '||v_ptp_id
     );
     end if;
  --start loop for all Named insured objects
  while v_object_index is not null loop
    --get 29359313 -- _Reference_Named Insured Entity
     v_associated_entity_id := pkg_os_object_io.fn_object_bv_path_get
                                ( 
                                in_session_id, 
                                in_transaction_id, 
                                v_object_list(v_object_index), 
                                '29359313'   -- 29359313 -- _Reference_Named Insured Entity
                                );
     if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '...In loop: v_associated_entity_id : '||v_associated_entity_id
     );
     end if;               
    --compare v_associated_entity_id with in_object_id
    if v_associated_entity_id = in_object_id then
    v_return_value := 'F';
    if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '...In loop : If True: v_return_value : '||v_return_value
     );
     end if; 
    end if;
    v_object_index := v_object_list.next( v_object_index);
    end loop;
  return v_return_value;

end fn_validate_namedinsured_entity_del;
--------------------------------UTPRODUCT-1415-END---------------------------
---------------------------------UTPRODUCT-1415-START---------------------------
function fn_primary_namedinsured_exist
(
     in_session_id               in         object.object_id%type,
     in_transaction_id           in         object.object_id%type,
     in_object_id                in         object.object_id%type
   
)   return char as
  -- variable declaration
  v_object_list                  pkg_os_object.t_object_list;
  v_object_index                 number;
  v_rol_id                       number;
  v_return_value                 char := 'T';
  v_counter                      number := 0;
  v_procedure_name               constant  system_log.program_name%type := pkg_name||'fn_primary_namedinsured_exist'; -- procedure name
  v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;                  -- bv distinguishing between person and business
  
begin
      
     if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '... Entering procedure - ' || v_procedure_name||
         ' in_object_id : '||in_object_id
     );
     end if;
     dbms_output.put_line('... Entering procedure - ' || v_procedure_name||' in_object_id : '||in_object_id) ;  
  --get list of all Named Insured objects
  pkg_os_object_search.sp_object_children_of_type_get
       (
        in_session_id  ,
        in_transaction_id ,
        in_object_id ,
        gObjType_PolicyNamedInsured,
        v_object_list,
        null,
        true
       );
  v_object_index := v_object_list.first;
  if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '... v_object_list.first : ' || v_object_list.first||
         ' v_ptp_id : '||in_object_id
     );
     end if;
   dbms_output.put_line('... v_object_list.first : ' || v_object_list.first||' v_ptp_id : '||in_object_id) ;   
  --start loop for all Named insured objects
  while v_object_index is not null loop
    --get 29359313.32506748.34026746 -- _Role in Policy
     v_rol_id := pkg_os_object_io.fn_object_bv_path_get
          ( 
          in_session_id, 
          in_transaction_id, 
          v_object_list(v_object_index), 
          '29359313.32506748.34026746'   -- 29359313.32506748.34026746 -- PolicyNamedInsured._Reference_Named Insured Entity._Child_EntityRole.Entity Role
          );
     if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '...In loop: v_rol_id : '|| v_rol_id
     );
     end if;
     dbms_output.put_line('...In loop: v_rol_id : '|| v_rol_id) ;               
    --compare v_rol_id against "Primary Named Insured" role
    if v_rol_id = 2146  then       -- 2146 - Primary Named Insured
    
    v_counter := v_counter + 1;
  
    if v_session_control.gLogging_Full then
     pkg_os_logging.sp_log
     (
         in_session_id,
         in_transaction_id,
         v_procedure_name,
         '...In loop : If True: v_counter : '||v_counter
     );
     end if;
     dbms_output.put_line('...In loop : If True: v_counter : '||v_counter) ;
    end if;
    v_object_index := v_object_list.next( v_object_index);
    end loop;
  -- Set the return as T if only one name insured with role as Primary Named Insured
  if v_counter = 1 then
      v_return_value := 'T';
     else
      v_return_value := 'F';  
    end if;
  
  return v_return_value;

end fn_primary_namedinsured_exist;
--------------------------------UTPRODUCT-1415-END---------------------------

---------------------------------------------------------------------------------------------------------------------------
function fn_get_policy_trx_outcome
(
     in_transaction_type_id         in     pd_transaction_type.pd_transaction_type_id%type
)
return number
is
     -- variable definitionso
      v_outcome                    outcome.outcome_id%type;
begin

    
     if in_transaction_type_id = g_TrxType_Audit
     then
          v_outcome := g_Outcome_TrxAudit;
     elsif in_transaction_type_id = g_TrxType_BOR
     then
          v_outcome := g_Outcome_TrxBOR;
     elsif in_transaction_type_id = g_TrxType_CancellationInsurd
     then
          v_outcome := g_Outcome_TrxCancellation;
     elsif in_transaction_type_id = g_TrxType_Cancellation
     then
          v_outcome := g_Outcome_TrxCancellation;
     elsif in_transaction_type_id = g_TrxType_Endorsement
     then
          v_outcome := g_Outcome_TrxEndorsement;
     elsif in_transaction_type_id = g_TrxType_Payment
     then
          v_outcome := g_Outcome_TrxPayment;
     elsif in_transaction_type_id = g_TrxType_SameDayVoid
     then
          v_outcome := g_Outcome_TrxVoid;
     elsif in_transaction_type_id = g_TrxType_Reinstatement
     then
          v_outcome := g_Outcome_TrxReinstatement;
     elsif in_transaction_type_id = g_TrxType_NonRenewal
     then
          v_outcome := g_Outcome_TrxNonrenewal;
     elsif in_transaction_type_id = g_TrxType_NonRenewalByMember
     then
          v_outcome := g_Outcome_TrxNonrenewal;
     elsif in_transaction_type_id = g_TrxType_EliminateNonRenewl
     then
          v_outcome := g_Outcome_TrxElmnatNonrenwl;
     elsif in_transaction_type_id = 14
     then
          v_outcome := g_Outcome_TrxNonrenewal;
     elsif in_transaction_type_id = g_TrxType_Rewrite
     then
          v_outcome := g_Outcome_TrxCancelRewrite;
     elsif in_transaction_type_id = g_TrxType_Renewal
     then
          v_outcome := g_Outcome_TrxRenewal;
     elsif in_transaction_type_id = g_TrxType_IntentToNonRenew
     then
          v_outcome := g_Outcome_TrxRenewalFlag;
     elsif in_transaction_type_id = g_TrxType_PendingCancelation
     then
          v_outcome := g_Outcome_TrxPendCancelation;
     elsif in_transaction_type_id = g_TrxType_NewBusinessRewrite
     then
          v_outcome := g_Outcome_TrxNewBusnesRewrte;
     elsif in_transaction_type_id = g_TrxType_Invoice
     then
          v_outcome := g_Outcome_TrxInvoice;
     elsif in_transaction_type_id = g_TrxType_RescindPenCancel
     then
          v_outcome := g_Outcome_TrxRescind;

     elsif in_transaction_type_id = g_TrxType_ChangeWithdrwDate
     then
          v_outcome := g_Outcome_TrxChgWithdrwDate;

  elsif in_transaction_type_id = g_TrxType_IssueFinalBonds
     then
          v_outcome := g_Outcome_TrxIssueFinalBonds;

  elsif in_transaction_type_id = g_TrxType_InstalmentOption
     then
          v_outcome := g_Outcome_TrxInstalmentOption;

  elsif in_transaction_type_id = g_TrxType_ReminderLetter
     then
          v_outcome := g_Outcome_TrxReminderLetter;
  elsif in_transaction_type_id = g_TrxType_ERPQuote
  then
       v_outcome := g_Outcome_TrxERPQuote;
  elsif in_transaction_type_id = g_TrxType_Loan
   then
          v_outcome := g_Outcome_TransactionLoan;
  elsif in_transaction_type_id = g_TrxType_Withdrawal
     then
          v_outcome := g_Outcome_TrxWithdrawal;
  elsif in_transaction_type_id = g_TrxType_Investment
     then
          v_outcome := g_Outcome_TrxInvestment;
  elsif in_transaction_type_id = g_TrxType_PolicySurrender
     then
          v_outcome := g_Outcome_TrxPolicySurrender;
  elsif in_transaction_type_id = g_TrxType_SrvcTransaction
     then
          v_outcome := g_Outcome_TrxPolicySrvcTrx;
  elsif in_transaction_type_id = g_TrxType_ClaimTransaction
    then
        v_outcome := g_Outcome_TrxPolicyClaim;
  elsif in_transaction_type_id = g_TrxType_ComplianceTrx
     then
          v_outcome := g_Outcome_TrxCompliance;
    elsif in_transaction_type_id = g_TrxType_ClaimSettlement
     then
          v_outcome := g_Outcome_TrxClaimSettlement;
    elsif in_transaction_type_id = g_TrxType_StatementReport
     then
          v_outcome := g_Outcome_TrxStatementReport;
     --/OSDEMO-15652  
     elsif in_transaction_type_id in ( g_TrxType_LateNotice, g_TrxType_LateNotice2,6631,6731)
     then
     v_outcome := g_Outcome_TrxLate;    
     	
     elsif in_transaction_type_id = g_TrxType_AutoWriteOff
     then
     v_outcome := g_Outcome_TrxAutoWriteOff;
     --/OSDEMO-15652   
     elsif in_transaction_type_id = g_TrxType_InspectionReport
     then
          v_outcome := g_Outcome_TrxInspectionReport;
     elsif in_transaction_type_id = g_TrxType_DoNotReinstate --UTPRODUCT-1244
     then
          v_outcome := g_Outcome_TrxDoNotReinstate;
     elsif in_transaction_type_id = g_TrxType_RescindDoNotReinstate --UTPRODUCT-1244
     then
          v_outcome := g_Outcome_TrxRescindDoNotReinstate;
		  
	--UTPRODUCT-1483
    elsif in_transaction_type_id = g_TrxType_RescindIntentToNonRenew 
     then
      v_outcome := g_Outcome_TrxRescindIntentToNonRenew;   
    elsif in_transaction_type_id = g_TrxType_PreRenewalNotice 
     then
      v_outcome := g_Outcome_TrxPreRenewalNotice;
	  
	 --UTPRODUCT-1486
    elsif in_transaction_type_id = g_TrxType_conditionalRenew 
     then
      v_outcome := g_Outcome_conditionalRenew;
      
    elsif in_transaction_type_id = g_TrxType_RescindConditionalRenew
     then
      v_outcome := g_Outcome_RescindConditionalRenew;
    else
      v_outcome := pkg_os_constant.gOutcome_InternalError;
    
    end if;

     return v_outcome;

end fn_get_policy_trx_outcome;

-----------------------------------------
---------------------------------UTPRODUCT-1510-START---------------------------

  function fn_check_child_objects(in_session_id     in object.object_id%type,
                                  in_transaction_id in object.object_id%type,
                                  in_object_id      in object.object_id%type,
                                  in_condition      in number
                                  
                                  ) return number as
    -- variable declaration
    v_object_list  pkg_os_object.t_object_list;
    v_object_index number;
    v_return_value number;
    v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'fn_check_child_objects'; -- procedure name
    v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id); -- bv distinguishing between person and business
  
  begin
  
    if in_condition = 1 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          380601, -- PolicyBOPLocationAdditionalInterest
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 2 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          381501, -- PolicyBOPAdditionalInterest
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 3 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          2240805, -- PolicyBOPAdditionalInsured
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 4 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3363948, -- PolicyBOPLocationAdditionalInsured
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 5 then
      --get list of all MessageEntitySubscriber
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3393546, -- MessageEntitySubscriber
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 6 then
      --get list of all MessageEntitySubscriber with partner
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3393546, -- MessageEntitySubscriber
                                                          v_object_list,
                                                          null,
                                                          true,
                                                          10610248);
    elsif in_condition = 7 then
      --get list of all MessageEntitySubscriber with customer
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3393546, -- MessageEntitySubscriber
                                                          v_object_list,
                                                          null,
                                                          true,
                                                          10610348);
    elsif in_condition = 8 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3347246, -- PolicyCPPAdditionalInsured
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 9 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3380548, -- policyCPPLocationAdditionalInsured
                                                          v_object_list,
                                                          null,
                                                          true);  
     elsif in_condition = 10 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          3380448, -- PolicyCPPAdditionalInterest
                                                          v_object_list,
                                                          null,
                                                          true);
    elsif in_condition = 11 then
      --get list of all Named Insured objects
      pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          2250309, -- policyCPPLocationAdditionalInterest
                                                          v_object_list,
                                                          null,
                                                          true);                                                                                                                                                                                                                        
    
    end if;
  
    v_return_value := v_object_list.count;
  
    return v_return_value;
  
  end fn_check_child_objects;
  --------------------------------UTPRODUCT-1510-END---------------------------	

-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        sp_create_integration_req_resp
--
--   %USAGE
--        This procedure will create the Integration Request /Response Object,which will be used by MT Command
--
--   %ALGORITHM
--        Not specified.
--
--   %PARAM    in_session_id            Session ID
--   %PARAM    in_transaction_id        Transaction ID
--   %PARAM    in_action_object_id             Address ID
--   %PARAM    io_outcome_id            Returned Outcome.
-------------------------------------------------------------------------------------------------------
procedure sp_create_integration_req_resp
(
    in_session_id       in      object.object_id%type,
    in_transaction_id   in      object.object_id%type,
    in_action_object_id in      object.object_id%type,
    io_outcome_id       in out  outcome.outcome_id%type,
    out_object_id       out     object.object_id%type
)
is
     v_procedure_name                constant    varchar2(100)   := pkg_name||'sp_create_integration_req_resp';
     v_session_control                 pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_integration_req_id            object.object_id%type;
     v_integration_resp_id            object.object_id%type;

Begin


     pkg_os_object.sp_object_create
          (
               in_session_id, -- session id
               in_transaction_id,
               gobj_Type_IntegrationReq,
               in_action_object_id, -- parent object id
               v_integration_req_id
          );
                    
   --  pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_integration_req_id,gbv_IntegReq_RequestObject,in_action_object_id);
          
     pkg_os_object.sp_object_create
          (
               in_session_id, -- session id
               in_transaction_id,
               gobj_Type_IntegrationRes,
               v_integration_req_id, -- parent object id
               v_integration_resp_id
          );
               
     if v_session_control.gLogging_Full then       
        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '||| Creating Integration Request Object :' || v_integration_req_id  ||
             ' Input Object is ' || in_action_object_id   ||
             ' Integration Response is ' ||v_integration_resp_id       
        ) ;
     end if;          
          
     
    -- pkg_os_object_io.sp_object_bv_set(in_session_id,in_transaction_id,v_integration_req_id,gbv_IntegReq_ResponseParentObj,in_action_object_id); 
     
     out_object_id := v_integration_req_id; 
     
     io_outcome_id := pkg_os_constant.gOutcome_OK;
exception
    when others then
        
        io_outcome_id := pkg_os_constant.gOutcome_InternalError;
        pkg_os_logging.sp_log_error
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'error.....'||sqlerrm || ' Error trace:' || dbms_utility.format_error_backtrace
        ) ;
end;
----------------------------------------UTPRODUCT-1695----------------------------------------			


----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_address_list_get
--
--   %USAGE
--        This function is required get the list of address and email for an entity.
--
--
--   %PARAM
--        in_session_id                 in                 object.object_id%type,
--        in_transaction_id             in                 object.object_id%type,
--        in_object_id                  in                 object.object_id%type
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_address_list_get
(
     in_session_id               in               object.object_id%type,
     in_transaction_id           in               object.object_id%type,
     in_object_id                in               object.object_id%type,
     in_business_variable_id     in               business_variable.business_variable_id%type,
     in_business_variable_path   in               varchar2,
     io_enum_list                in out nocopy    pkg_os_lookup.t_enum_list,
     in_current_value            in               varchar2

)
return char as

     v_list_index                  number ;
     v_object_list                 pkg_os_object.t_object_list;
     v_object_index                number;
     v_parent_entity_id            object.object_id%type;
     v_grand_parent_entity_id      object.object_id%type;
     v_address_list                pkg_os_object.t_object_list;
     v_address_index               number;
     v_session_control             pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
     v_procedure_name              constant system_log.program_name%type   :=      pkg_name||'fn_address_list_get';
     v_object_type                 number;
     v_delivery_method             number;
gObjType_Address                   constant object_type.object_type_id%type                       := 405;
gObjType_Email                     constant object_type.object_type_id%type                       := 2866246;
gEnum_DelMethod_Email              constant business_variable.business_variable_id%type           := 346;
gEnum_DelMethod_Mail               constant business_variable.business_variable_id%type           := 246;

begin

     v_delivery_method :=  pkg_os_object_io.fn_object_bv_get
                           (
                                in_session_id,
                                in_transaction_id,
                                in_object_id,
                                32902248
                           );
     if v_delivery_method is not null and v_delivery_method = gEnum_DelMethod_Mail
     then
         v_object_type  := gObjType_Address;

     elsif v_delivery_method is not null and v_delivery_method = gEnum_DelMethod_Email
     then
         v_object_type  := gObjType_Email;

     end if;

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               ' Starting processing initial io_enum_list.count: '|| io_enum_list.count||
               ' for delivery method: '||v_delivery_method||
               ' object type: '||v_object_type
          );

     end if;

     --
     -- get parent as expected input object is DocDeliveryPreference
     --
     
     v_parent_entity_id:= pkg_os_object_io.fn_object_bv_get(in_session_id,
          in_transaction_id,
          in_object_id,
           32813248);
           
     if v_parent_entity_id is null then
       v_parent_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
          in_transaction_id,
          in_object_id,
           32813948);
     end if;
     
     if v_parent_entity_id is null then
       v_parent_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
          in_transaction_id,
          in_object_id,
           32694324);
     end if;
     
     if v_parent_entity_id is null then
       v_parent_entity_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
          in_transaction_id,
          in_object_id,
           32813848);
     end if;
     
/*
     if    v_parent_entity_id is null then
       return null;
     end if;
*/   -- OSPRODUCT-19663 - Bogdan
    /* v_parent_entity_id := pkg_os_object.fn_object_parent_get
     (
          in_session_id,
          in_transaction_id,
          in_object_id
     );
*/
     v_address_list.delete;
     v_list_index := io_enum_list.count;
     v_list_index := v_list_index + 1;

     --
     -- initilize first values for select
     --
     io_enum_list( v_list_index ).lookup_enum        := 0;
     io_enum_list( v_list_index ).object_id          := in_object_id;
     io_enum_list( v_list_index ).lookup_text        := '- Select -';

     if in_business_variable_path is null
     then

          io_enum_list( v_list_index ).business_variable_path := in_business_variable_id;

     else

          io_enum_list( v_list_index ).business_variable_path := in_business_variable_path;

     end if;


     if    v_parent_entity_id is null then
       return 'T';
     end if; -- OSPRODUCT-19663 - Bogdan

     pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          v_parent_entity_id,
          v_object_type,
          v_address_list,
          null,
          false
     );

     --
     -- if unable to find address objects under parent then check under grand parent
     --
     if  v_address_list.count = 0
     then

          v_grand_parent_entity_id := pkg_os_object.fn_object_parent_get
          (
               in_session_id,
               in_transaction_id,
               v_parent_entity_id
          );

          pkg_os_object_search.sp_object_children_of_type_get
          (
               in_session_id,
               in_transaction_id,
               v_grand_parent_entity_id, --grand parent
               v_object_type,
               v_address_list,
               null,
               false
          );

     end if;


     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '...... v_parent_entity_id :' || v_parent_entity_id ||
               '...... v_grand_parent_entity_id :' || v_grand_parent_entity_id||
               ' io_enum_list.count: '|| io_enum_list.count ||
               ' v_address_list.count: '||v_address_list.count||
               ' io_enum_list( v_list_index ).lookup_enum: '||io_enum_list( v_list_index ).lookup_enum ||
               ' text: '||io_enum_list( v_list_index ).lookup_text
          );

     end if;


     v_list_index        := v_list_index+1;

     if v_address_list.count>0
     then

          v_address_index     := v_address_list.first;

          while v_address_index is not null
          loop

               if v_session_control.gLogging_Full
               then

                    pkg_os_logging.sp_log
                    (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         '...... v_address_index value:' || v_address_list(v_address_index) ||
                         '...... v_list_index :' || v_list_index

                    );

               end if;

               io_enum_list( v_list_index ).lookup_enum     := v_address_list(v_address_index);
               io_enum_list(v_list_index).object_id         := in_object_id;
               io_enum_list( v_list_index ).lookup_text     := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_address_list(v_address_index), pkg_os_constant_bv.gbv_GenObjLabel);

               if in_business_variable_path is null
               then

                    io_enum_list( v_list_index ).business_variable_path := in_business_variable_id;

               else

                    io_enum_list( v_list_index ).business_variable_path := in_business_variable_path;

               end if;

               v_list_index        := v_list_index + 1;
               v_address_index     := v_address_list.next(v_address_index);

          end loop;

     end if; --if v_address_list.count>0

     return 'T';

end fn_address_list_get;

--------------------------------------	

----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        SP_CREATE_UPDATE_USERIDENTITY
--
--   %USAGE
--        This procedure is used to create userIdentity for partner users and customer users. The UserIdentity object will be used
--        in authentication.
--
--
--   %PARAM
--        in_session_id                 in                 object.object_id%type,
--        in_transaction_id             in                 object.object_id%type,
--        in_action object_id           in                 object.object_id%type,
--        io_action_outcome_id          IN OUT   outcome.outcome_id%type 
-----------------------------------------------------------------------------------------------------------------------------------------------------

PROCEDURE SP_CREATE_UPDATE_USERIDENTITY
( in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_action_object_id    IN        object.object_id%type,
  io_action_outcome_id   IN OUT   outcome.outcome_id%type 
) IS 

    gObjectType_Customer       CONSTANT object_type.object_type_id%TYPE := 12;
    gObjectType_CustomerEntity    CONSTANT object_type.object_type_id%TYPE := 205;
	gObjType_DragonUser           CONSTANT object_type.object_type_id%TYPE := 309;
    gObjType_UserIdentityRole     CONSTANT object_type.object_type_id%TYPE := 3455408;
    gObjType_UserIdentity         CONSTANT object_type.object_type_id%TYPE := 3453508;
  
    gOutcome_NoUpdateInIDP          CONSTANT outcome.outcome_id%TYPE := 58748;    
    gOutcome_UserIdentityExists          CONSTANT outcome.outcome_id%TYPE := 58648;    

    gOutcome_OK                        constant	number(12) := 22;
    gBv_AssociatedEntity                CONSTANT business_variable.business_variable_id%type := 32778108;
    gBv_Dragon_associatedUserIdentityRole      CONSTANT business_variable.business_variable_id%type := 32778408;
    gBv_Customer_associatedUserIdentityRole    CONSTANT business_variable.business_variable_id%type := 32778308;
    gBv_UserIdentity             CONSTANT business_variable.business_variable_id%type := 32777808;
    gBv_ReferencePrimaryEntity          CONSTANT business_variable.business_variable_id%type := 29253414;
    gBv_CustomerEntityFirstName         CONSTANT business_variable.business_variable_id%type := 29240914;
	gBv_CustomerEntityLastName          CONSTANT business_variable.business_variable_id%type := 29241114;    
	gBV_CustomerEntityRefPreferredEmailObj CONSTANT business_variable.business_variable_id%type := 32681746;
    gBV_CustomerEntityRefPreferredEmail CONSTANT business_variable.business_variable_id%type := 30028946;

    gBV_CustomerEntityRefPreferredPhone CONSTANT business_variable.business_variable_id%type := 32980248;
    gBv_CustomerUserPhoneNumberObj        CONSTANT business_variable.business_variable_id%type := 32681846;

	--gBv_EmailEmailID                    CONSTANT business_variable.business_variable_id%type := 30028946;
	gBv_DragonUserFirstName             CONSTANT business_variable.business_variable_id%type := 5122;
	gBv_DragonUserLastName              CONSTANT business_variable.business_variable_id%type := 5124;
	gBv_DragonUserUsername              CONSTANT business_variable.business_variable_id%type := 10047;
	gBv_DragonUserEmailID               CONSTANT business_variable.business_variable_id%type := 211461;
    gBv_DragonUserPhoneNumberObj        CONSTANT business_variable.business_variable_id%type := 31687746;
    gBv_DragonUserPhoneNumber           CONSTANT business_variable.business_variable_id%type := 32980248;
    gBv_DragonUserActorType             CONSTANT business_variable.business_variable_id%type := 21689501;
    gBv_SessionNewObjectCreated         CONSTANT business_variable.business_variable_id%type := 210395;
    gBv_UserIdentity_Username           CONSTANT business_variable.business_variable_id%type := 32774508;
	gBv_UserIdentity_EmailID            CONSTANT business_variable.business_variable_id%type := 32774608;
    gBv_UserIdentity_PhoneNumber        CONSTANT business_variable.business_variable_id%type := 32774708;
    gBv_UserIdentity_FirstName          CONSTANT business_variable.business_variable_id%type := 32798708; 
    gBv_UserIdentity_LastName           CONSTANT business_variable.business_variable_id%type := 32798808; 
   -- gBv_UserIdentity_Predecessor        CONSTANT business_variable.business_variable_id%type := 32774708;
    gBv_UserIdentityRole_Role           CONSTANT business_variable.business_variable_id%type := 32776008;
    gBv_ObjStateActive                    number(12) := 75;
    gBv_ObjStateCreated                    number(12):=23;

 
 
    v_UserIdentity                      object.object_id%TYPE;
    v_UserIdentityRole                      object.object_id%TYPE;
	v_object_type_id      object_type.object_type_id%TYPE;
    v_ObjState_UserIdentity  number(12);
    v_updateFlag          BOOLEAN DEFAULT false; 
    v_associatedUserIdentityRole  object_type.object_type_id%TYPE;
    v_Parent_UserIdentity     object_type.object_type_id%TYPE;
    v_session_control	pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_procedure_name      CONSTANT system_log.program_name%TYPE := 'p_create_update_dragon_userIdentity';
    v_dragon_user         object.object_id%TYPE;
    v_primary_entity      object.object_id%TYPE;
    v_username_UserIdentity        object_bv_value.business_variable_value%type;  
    v_email_UserIdentity             object_bv_value.business_variable_value%type;
    v_FirstName_UserIdentity             object_bv_value.business_variable_value%type; 
    v_LastName_UserIdentity             object_bv_value.business_variable_value%type; 
    v_phoneNumber_UserIdentity       object_bv_value.business_variable_value%type;
    v_username_inObj        object_bv_value.business_variable_value%type;  
    v_email_inObj             object_bv_value.business_variable_value%type;
    v_emailObj_inObj             object_bv_value.business_variable_value%type;
    v_FirstName_inObj             object_bv_value.business_variable_value%type; 
    v_LastName_inObj             object_bv_value.business_variable_value%type; 
    v_phoneNumberObj_inObj       object.object_id%TYPE;
    v_phoneNumber_inObj       object_bv_value.business_variable_value%type;
    v_userRole                object_bv_value.business_variable_value%type;    -- For UserIdentityRole
    v_datamart_tf         CHAR(1) := null;
    v_outcome             outcome.outcome_id%TYPE;
    v_checkUIRreference   object_bv_value.business_variable_value%type;   -- to delete later
    v_billing_acc_id      object.object_id%type;  --OSPRODUCT-8702
    
    
BEGIN

        IF v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
          (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           '......Checking update user scenario'
          );
        end IF;

    -- Find the object_type of the in_action_object_id.
        v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_action_object_id);
    
    IF v_object_type_id = gObjType_DragonUser  
    Then
        IF v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
          (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           'Input object is DragonUser:'|| in_action_object_id
          );
         end IF;

    -- get the Dragon user attributes needed for UserIdentity object
                                                    
         v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_DragonUserEmailID);
                                                    
         v_username_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,    
												    in_transaction_id,
												    in_action_object_id,
												    gBv_DragonUserUsername);     
                                                  
         v_FirstName_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,      
												    in_transaction_id,
												    in_action_object_id,
												    gBv_DragonUserFirstName);
                                                    
         v_LastName_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_DragonUserLastName);                                                  
    
         v_phoneNumberObj_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_DragonUserPhoneNumberObj); 
                                                                                                  
        v_phoneNumber_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_phoneNumberObj_inObj,
												    gBv_DragonUserPhoneNumber);      
                                
        IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon email:'||v_email_inObj
            );
           end IF;  
           IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon First Name:'||v_FirstName_inObj
            );
           end IF;  
           IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon Last Name:'||v_LastName_inObj
            );
           end IF;
            IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon username:'||v_username_inObj
            );
           end IF;      
           IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon phone number:'||v_phoneNumber_inObj
            );
           end IF;   
        
    Else IF v_object_type_id <> gObjType_DragonUser 
    Then        
        IF v_object_type_id = gObjectType_Customer 
        THEN
            -- If the input object type is Customer then find the primary entity for the customer.
            v_primary_entity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_ReferencePrimaryEntity);
            IF v_session_control.gLogging_Full then
              pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Input object is Customer:'|| in_action_object_id ||' Associated primary entity :'||v_primary_entity
            );
           end IF;
           
        ELSE IF v_object_type_id = gObjectType_CustomerEntity 
        THEN
            -- If the input object type is CustomerEntity then it will be a primary entity.
          v_primary_entity := in_action_object_id;
        
            IF v_session_control.gLogging_Full then
             pkg_os_logging.sp_log
             (
             in_session_id,
             in_transaction_id,
            v_procedure_name,
            'Input object is CustomerEntity: '|| in_action_object_id
             );
            end IF;

        END IF;
        END IF;
        
        IF v_primary_entity is not null
        Then
        
           -- get the customer's attributes needed for UserIdentity object

            v_emailObj_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_primary_entity,
												    gBV_CustomerEntityRefPreferredEmailObj); 
            v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_emailObj_inObj,
												    gBV_CustomerEntityRefPreferredEmail);                                        
            v_FirstName_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_CustomerEntityFirstName);                                       
            v_LastName_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_CustomerEntityLastName);                                        
                                                    
            --get customer primary entity UIR for create/update case										
			v_associatedUserIdentityRole := pkg_os_object_io.fn_object_bv_get(in_session_id,     
												    in_transaction_id,
												    in_action_object_id,	
    											    gBv_Customer_associatedUserIdentityRole);
            --For create case
            if v_associatedUserIdentityRole is null	
            Then
                v_username_inObj := v_email_inObj;			
            Else 
            --get customer UI for update case	
                v_UserIdentity := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                        in_transaction_id,v_associatedUserIdentityRole,gObjType_UserIdentity);			
			
                v_username_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_UserIdentity,
												    gBv_UserIdentity_Username);
            End if;		
                                                    
             v_phoneNumberObj_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_primary_entity,
												    gBv_CustomerUserPhoneNumberObj); 
                                                                                                  
             v_phoneNumber_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_phoneNumberObj_inObj,
												    gBV_CustomerEntityRefPreferredPhone); 
        
        ELSE IF v_primary_entity is null
        Then
            IF v_session_control.gLogging_Full then
             pkg_os_logging.sp_log
             (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
            'Primary entity does not exist '||v_primary_entity
             );
            end IF;
        END IF;      
        END IF;      
    End IF;
    End IF;
    ------Identifying create/update scenario -------
    ----Find the associated UserIdentityRole of the in_object
    
    IF v_object_type_id = gObjType_DragonUser  
    Then
        v_associatedUserIdentityRole := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,	
    											    gBv_Dragon_associatedUserIdentityRole);
                                                        
    Else IF v_object_type_id = gObjectType_CustomerEntity 
    Then
         v_associatedUserIdentityRole := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,	
    											    gBv_Customer_associatedUserIdentityRole);
    END IF;
    END IF;
    
    IF v_associatedUserIdentityRole is not null
    Then
        v_UserIdentity := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                    in_transaction_id,v_associatedUserIdentityRole,gObjType_UserIdentity);
     ------Get the status of UserIdentity---------
        If v_UserIdentity is not null
        then
        v_ObjState_UserIdentity := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_UserIdentity, pkg_os_constant_bv.gbv_GenObjObjectState); 
        End if;
    End if;
    
  ----Main logic starts from here ------------------                                                     
IF v_associatedUserIdentityRole is not null and (v_ObjState_UserIdentity = gBv_ObjStateActive or v_ObjState_UserIdentity = gBv_ObjStateCreated)
    Then

            IF v_session_control.gLogging_Full then
             pkg_os_logging.sp_log
             (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
            'UserIdentityRole is not null and UserIdentity object state is Active '
             );
            end IF;

        ----get the Useridentity attributes to compare and check if update for IDP user is needed or not 
     
     v_username_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_UserIdentity,
												    gBv_UserIdentity_Username);
     v_email_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_UserIdentity,
												    gBv_UserIdentity_EmailID);
     v_phoneNumber_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
                            					    v_UserIdentity,
												    gBv_UserIdentity_PhoneNumber);                                            
     v_FirstName_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
                            					    v_UserIdentity,
												    gBv_UserIdentity_FirstName);                                                                                            
     v_LastName_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
                            					    v_UserIdentity,
												    gBv_UserIdentity_LastName);                                               
                                                    
         IF v_session_control.gLogging_Full then
             pkg_os_logging.sp_log
             (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
            'UserIdentity username : '|| v_username_UserIdentity || ' email: '|| v_email_UserIdentity ||' phone number: '|| v_phoneNumber_UserIdentity ||' First Name: '|| v_FirstName_UserIdentity ||' Last Name: '|| v_LastName_UserIdentity
             );
            end IF;                                    
        
      IF (v_username_UserIdentity <> v_username_inObj or lower(v_email_UserIdentity) <> lower(v_email_inObj) or nvl(v_phoneNumber_UserIdentity,0) <> v_phoneNumber_inObj or v_FirstName_UserIdentity <> v_FirstName_inObj or v_LastName_UserIdentity <> v_LastName_inObj) 
        THEN
          
         ------- IDP update is required as IDP user attributes are changed--------
             
         -------Set the BVs for the UserIdentity object---------------
         
                 if v_ObjState_UserIdentity = gBv_ObjStateCreated and v_username_UserIdentity <> v_email_inObj
                 then 
                          pkg_os_object_io.sp_object_bv_set(in_session_id,
		  	      						    in_transaction_id,
		  	      						    v_UserIdentity,
		  	      						    gBv_UserIdentity_Username,
		  	      						    v_email_inObj);             
                 else
                         pkg_os_object_io.sp_object_bv_set(in_session_id,
		  	      						    in_transaction_id,
		  	      						    v_UserIdentity,
		  	      						    gBv_UserIdentity_Username,
		  	      						    v_username_inObj);
                 end if;
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_EmailID,
									    v_email_inObj);
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_PhoneNumber,
									    v_phoneNumber_inObj);                     
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_FirstName,
									    v_FirstName_inObj);                         
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_LastName,
									    v_LastName_inObj);                       
       
          --------------------------- Update UserIdentity datamart ------------------------------

                pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_UserIdentity, v_datamart_tf);

                IF v_session_control.glogging_full THEN
                    pkg_os_logging.sp_log(in_session_id,
								  in_transaction_id,
								  v_procedure_name,
								  ' ||||||IDP update is required. Datamart update completed for user identity : ' || v_UserIdentity );
                END IF;
            IF v_session_control.gLogging_Full then
             pkg_os_logging.sp_log
             (
             in_session_id,
             in_transaction_id,
             v_procedure_name,
            'After datamart update -  UserIdentity username : '|| v_username_inObj || ' email: '|| v_email_inObj ||' phone number: '|| v_phoneNumber_inObj || ' First Name: '|| v_FirstName_inObj || ' Last Name: '|| v_LastName_inObj 
             );
             end IF;  
             
             
             v_outcome := gOutcome_OK;   
      ELSE 
         v_outcome := gOutcome_NoUpdateInIDP;
        
                IF v_session_control.glogging_full THEN
                    pkg_os_logging.sp_log(in_session_id,
							  in_transaction_id,
							  v_procedure_name,
							  ' |||||| IDP update is not required' 
							  );
                END IF;

      End IF;
                      																								 											 

																								   
	
											  

Else IF v_associatedUserIdentityRole is null 
Then    
                IF v_session_control.glogging_full THEN
                    pkg_os_logging.sp_log(in_session_id,
							  in_transaction_id,
							  v_procedure_name,
							  ' UserIdentityRole is null' 
							  );
                END IF;
            -- Find if any UserIdentity exists for the given email
             BEGIN
                select USER_IDENTITY_ID 
                into v_userIdentity
                from USER_IDENTITY 
                 where lower(EMAIL) = lower(v_email_inObj);
             EXCEPTION
             WHEN no_data_found THEN
				v_userIdentity := null;
             END;
        
        If v_UserIdentity is not null   --  and v_ObjState_UserIdentity = gBv_ObjStateActive    - handle two cases here v_ObjState_UserIdentity = and <> gBv_ObjStateActive 
        Then 
                  --Create child object UserIdentityRole and set the role 
                 pkg_os_object.sp_object_create(in_session_id,
									 in_transaction_id,
									 gObjType_UserIdentityRole,
									 v_userIdentity, --  parent object 
									 v_UserIdentityRole);

                 IF v_session_control.glogging_full THEN
                 pkg_os_logging.sp_log(in_session_id,
								  in_transaction_id,
								  v_procedure_name,
								  ' |||||| UserIdentityRole object ' || v_UserIdentityRole || ' created');
                 END IF;
                

                    -- Set it as the session new object 

                 pkg_os_object_io.sp_object_bv_set(in_session_id,
						    in_transaction_id,
						    in_session_id,
						    gBv_SessionNewObjectCreated,
						    v_UserIdentityRole); 

                ------------- Get the User role from the In_object -----------
                 IF v_object_type_id = gObjType_DragonUser  
                 Then
                    IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                     (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Input object is DragonUser:'|| in_action_object_id
                     );
                    END IF;
     
                  v_userRole := 3;   
                   
                 ELSE IF v_object_type_id = gObjectType_CustomerEntity
                 Then
                    IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                     (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Input object role is Customer:'|| in_action_object_id
                     );
                    END IF;
     
                   v_userRole := 2;    
                                  
                 End if;
                 End if;
                 --------- Set the UserRole-----------------
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_UserIdentityRole_Role,
									    v_userRole);
              
              
                 IF v_object_type_id = gObjType_DragonUser 
                 Then
                 ---------Set the reference assicociated entity from UserIdentityRole------
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_AssociatedEntity,
									    in_action_object_id);       --- Dragon User
                                        
                ---------Set the reference assicociated UserIdentityRole from DragonUser ------
                IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'Setting UserIdentity Role reference for DragonUser'
                       );
                 END IF;    
                pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    in_action_object_id,
									    gBv_Dragon_associatedUserIdentityRole,
									    v_UserIdentityRole);  
                                        
                v_checkUIRreference := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_Dragon_associatedUserIdentityRole);                       
            
           
                 IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'The set UserIdentity Role reference for DragonUser :'|| v_checkUIRreference
                       );
                 END IF; 
                 
                 ELSE IF v_object_type_id = gObjectType_CustomerEntity
                 Then 
                 ---------Set the reference assicociated entity from UserIdentityRole------
                  pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_AssociatedEntity,
									    v_primary_entity);       --- Customer Entity
                 ---------Set the reference assicociated UserIdentityRole from Customer Entity ------
                 IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'Setting UserIdentity Role reference for CustomerEntity'
                       );
                 END IF;    
                 pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    in_action_object_id,
									    gBv_Customer_associatedUserIdentityRole,
									    v_UserIdentityRole);  
                                        
                 v_checkUIRreference := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_primary_entity,
												    gBv_Customer_associatedUserIdentityRole);                       
                     
                 IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'The set UserIdentity Role reference for CustomerEntity :'|| v_checkUIRreference
                       );
                 END IF; 
                 
              END IF;                          
              END IF; 
              
                                       
                                        
            v_outcome := gOutcome_UserIdentityExists;
              
        Else If v_UserIdentity is null 
        Then
                IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                     (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'UserIdentity is null'
                     );
                    END IF;

                --------Create UserIdentity --------------------
                pkg_os_object.sp_object_create(in_session_id,
									 in_transaction_id,
									 gObjType_UserIdentity,
									 null, --  parent is null 
									 v_UserIdentity);

                IF v_session_control.glogging_full THEN
                    pkg_os_logging.sp_log(in_session_id,
								  in_transaction_id,
								  v_procedure_name,
								  ' |||||| UserIdentity object ' || v_UserIdentity || ' created');
                END IF;
                ------Set it as the session new object 

                pkg_os_object_io.sp_object_bv_set(in_session_id,
						    in_transaction_id,
						    in_session_id,
						    gBv_SessionNewObjectCreated,
						    v_UserIdentity); 
                    
                    -------Set the Bvs for the UserIdentity object---------------
         
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_Username,
									    v_username_inObj);
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_EmailID,
									    v_email_inObj);
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_PhoneNumber,
									    v_phoneNumber_inObj);                   
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_FirstName,
									    v_FirstName_inObj);                      
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentity,
									    gBv_UserIdentity_LastName,
									    v_LastName_inObj);                      
    
   
    
                    ------ Create child object UserIdentityRole and set the role -----------------------
                     pkg_os_object.sp_object_create(in_session_id,
									 in_transaction_id,
									 gObjType_UserIdentityRole,
									 v_userIdentity, --  parent object 
									 v_UserIdentityRole);

                    IF v_session_control.glogging_full THEN
                    	pkg_os_logging.sp_log(in_session_id,
								  in_transaction_id,
								  v_procedure_name,
								  ' |||||| UserIdentityRole object ' || v_UserIdentityRole || ' created');
                    END IF;

                  ----- Set it as the session new object 

                    pkg_os_object_io.sp_object_bv_set(in_session_id,
						    in_transaction_id,
						    in_session_id,
						    gBv_SessionNewObjectCreated,
						    v_UserIdentityRole); 

                 ------------------------- Get the User role from the In_object ------------------------------
                IF v_object_type_id = gObjType_DragonUser  
                Then
                    IF v_session_control.gLogging_Full then
                     pkg_os_logging.sp_log
                     (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Input object is DragonUser:'|| in_action_object_id
                     );
                    END IF;
     
                  v_userRole := 3;   
                   
                 ELSE IF v_object_type_id = gObjectType_CustomerEntity
                 Then
                    IF v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log
                     (
                     in_session_id,
                     in_transaction_id,
                     v_procedure_name,
                     'Input object role is Customer:'|| in_action_object_id
                     );
                    END IF;
     
                   v_userRole := 2;    
                                  
                 End if;
                 End if;
                 
                    --------- Set the UserRole-----------------
                     pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_UserIdentityRole_Role,
									    v_userRole);
              
              
                IF v_object_type_id = gObjType_DragonUser 
                Then
                    ---------Set the reference assicociated entity from UserIdentityRole------
                     pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_AssociatedEntity,
									    in_action_object_id);       --- Dragon User
                                        
                    ---------Set the reference assicociated UserIdentityRole from DragonUser ------
                    IF v_session_control.gLogging_Full then
                     pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'Setting UserIdentity Role reference for DragonUser'
                       );
                    END IF;    
                     pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    in_action_object_id,
									    gBv_Dragon_associatedUserIdentityRole,
									    v_UserIdentityRole);  
                                        
                    v_checkUIRreference := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_action_object_id,
												    gBv_Dragon_associatedUserIdentityRole);                       
            
           
                     IF v_session_control.gLogging_Full then
                         pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'The set UserIdentity Role reference for DragonUser :'|| v_checkUIRreference
                       );
                     END IF; 
                 
                ELSE IF v_object_type_id = gObjectType_CustomerEntity
                Then 
                     ---------Set the reference assicociated entity from UserIdentityRole------
                     pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    v_UserIdentityRole,
									    gBv_AssociatedEntity,
									    v_primary_entity);       --- Customer Entity
                    ---------Set the reference assicociated UserIdentityRole from Customer Entity ------
                    IF v_session_control.gLogging_Full then
                        pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'Setting UserIdentity Role reference for CustomerEntity'
                       );
                     END IF;    
                    pkg_os_object_io.sp_object_bv_set(in_session_id,
									    in_transaction_id,
									    in_action_object_id,
									    gBv_Customer_associatedUserIdentityRole,
									    v_UserIdentityRole);  
                                        
                     v_checkUIRreference := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_primary_entity,
												    gBv_Customer_associatedUserIdentityRole);                       
          
           
                    IF v_session_control.gLogging_Full then
                     pkg_os_logging.sp_log
                      (in_session_id,                     
                       in_transaction_id,
                       v_procedure_name,
                       'The set UserIdentity Role reference for CustomerEntity :'|| v_checkUIRreference
                       );
                    END IF; 
                 
                END IF;                          
                END IF; 
  
             --------------------------- Update UserIdentity datamart ------------------------------

			pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_UserIdentity, v_datamart_tf);

			IF v_session_control.glogging_full THEN
				pkg_os_logging.sp_log(in_session_id,
								  in_transaction_id,
								  v_procedure_name,
								  ' ||||||IDP update is required. Datamart updated for user identity :' || v_UserIdentity );
			END IF;

            v_outcome := gOutcome_OK;
            
        End If;
        End If;
    
End if;
End if;
--------------------------- Update DragonUser datamart ------------------------------

pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, in_action_object_id, v_datamart_tf);

IF v_session_control.glogging_full THEN
    pkg_os_logging.sp_log(in_session_id,
              in_transaction_id,
              v_procedure_name,
              ' ||||||Datamart updated for dragon user :' || in_action_object_id );
END IF;

v_billing_acc_id  :=  pkg_os_object_search.fn_object_11_child_get    --OSPRODUCT-8702 
                        (
                             in_session_id,
                             in_transaction_id,
                             in_action_object_id,
                             pkg_db_billing_modify.gObjType_BillingAccount
                        );
if v_billing_acc_id is not null  --OSPRODUCT-8702
then
     pkg_os_datamart.sp_datamart_update_row(in_session_id, in_transaction_id, v_billing_acc_id, v_datamart_tf);  
end if;    
	   	   
io_action_outcome_id := v_outcome;
  
END;

-----------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
  --UTPRODUCT-2140 start
  procedure sp_update_entityrole(
								in_session_id       in object.object_id%type,
                                 in_transaction_id   in object.object_id%type,
                                 in_action_object_id in object.object_id%type
                                 
                                 ) is
  
    v_object_insured_list   pkg_os_object.t_object_list;
    v_object_insured_index  number;
    v_object_interest_list  pkg_os_object.t_object_list;
    v_object_interest_index number;
    v_entity_role_list      pkg_os_object.t_object_list;
    v_entity_role_index     number;
    v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                             in_transaction_id);
    v_procedure_name            constant system_log.program_name%type := 'sp_update_entityrole';
    v_insured_entity_type_bv_id constant business_variable.business_variable_id%type := 32882848;
    v_insured_entity_type number;
    v_interest_entity_type_bv_id constant business_variable.business_variable_id%type := 32882748;
    v_interest_entity_type number;
    v_insured_associated_entity_bv_id  constant business_variable.business_variable_id%type := 32813248; --PolicyBOPAdditionalInsured._Reference_Associated Customer Entity
    v_interest_associated_entity_bv_id constant business_variable.business_variable_id%type := 32813848; --ObjectAdditionalInterest._Reference_Associated Customer Entity
    v_associated_entity_id   object_type.object_type_id%type;
    v_empty_entity_role_id   object_type.object_type_id%type;
    v_entity_role_id         object_type.object_type_id%type;
    v_object_type_id         object_type.object_type_id%type;
    v_update_entity_role_ind char := 'F';
    v_create_entity_role_ind char := 'F';
    v_role_id                number;
    v_relationship_id        number;
    v_insured_name           object.object_id%type;
    v_parent_object_id       object.object_id%type := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                                                        in_transaction_id,
                                                                                                        in_action_object_id,
                                                                                                        pkg_os_constant.gobjType_PolicyTrxPolicy);
    v_object_type_id         object_type.object_type_id%type;
    v_out_object_id          object_type.object_type_id%type;
    v_entity_business_person_bv_id constant business_variable.business_variable_id%type := 29235814; --CustomerEntity.Entity is Business or Person?
    v_entity_business_person number;
  
  Begin
  
    -- Get all ObjectAdditionalInsured type of object
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        v_parent_object_id,
                                                        3347146, --ObjectAdditionalInsured
                                                        v_object_insured_list,
                                                        null,
                                                        true,
                                                        10348748);
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '...Insured | in_action_object_id    : ' ||
                            in_action_object_id ||
                            ' v_object_insured_list.first    : ' ||
                            v_object_insured_list.first ||
                            ' v_object_insured_list.count    : ' ||
                            v_object_insured_list.count);
    end if;
    v_object_insured_index := v_object_insured_list.first;
  
    --1.
    --Insured object creation start
    while v_object_insured_index is not null loop
      --get existing object additional insured or policybop or policyboploacation level.
    
      --Check is object of belongs to entity or partner. If belongs to entity then go in if statement
      v_insured_entity_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_object_insured_list(v_object_insured_index),
                                                                      v_insured_entity_type_bv_id);
    
      if v_insured_entity_type = 205 then
        --  205 = CustomerEntity
      
        --Get associated Customer Entity
        v_associated_entity_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_object_insured_list(v_object_insured_index),
                                                                         v_insured_associated_entity_bv_id);
        --Get entity Entity is Business or Person? 
        v_entity_business_person := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_associated_entity_id,
                                                                           v_entity_business_person_bv_id);
      
        --Get all the Entity role objects of customer entity  
        pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                            in_transaction_id,
                                                            v_associated_entity_id,
                                                            3340048, --EntityRole Object type
                                                            v_entity_role_list,
                                                            null,
                                                            true);
        v_entity_role_index := v_entity_role_list.first;
        if v_entity_role_list.count = 1 then
        
          v_empty_entity_role_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_entity_role_list(v_entity_role_index),
                                                                           34026746);
        
        elsif v_entity_role_list.count > 1 then
        
          --Get all the Entity role(where Role = Additional Insured) objects of customer entity
          v_entity_role_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_associated_entity_id, --customerentity
                                                                                3340048, --EntityRole Object type
                                                                                34026746, --Entity Role BV
                                                                                16146, --Additional Insured role in ROLE TYPE table
                                                                                false);
        
        end if;
      
        --if Entity Role is null then set the indicator(v_create_entity_role_ind/v_update_entity_role_ind) = 'T'
        if v_empty_entity_role_id is null and v_entity_role_list.count = 1 then
          v_update_entity_role_ind := 'T';
        elsif v_empty_entity_role_id is not null and v_empty_entity_role_id !=16146 and
              v_entity_role_list.count = 1 then
          v_create_entity_role_ind := 'T';
        elsif v_entity_role_id is null and v_entity_role_list.count > 1 then
          v_create_entity_role_ind := 'T';
        end if;
      
        if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...Insured | v_empty_entity_role_id    : ' ||
                                v_empty_entity_role_id ||
                                ' v_entity_role_id    : ' ||
                                v_entity_role_id ||
                                ' v_entity_role_list.count    : ' ||
                                v_entity_role_list.count ||
                                ' v_update_entity_role_ind    : ' ||
                                v_update_entity_role_ind ||
                                ' v_create_entity_role_ind    : ' ||
                                v_create_entity_role_ind);
        end if;
      
        if v_update_entity_role_ind = 'T' then
        
          --
          --Set "34026746 --Entity Role BV"
          --
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_entity_role_list(v_entity_role_index),
                                            34026746, --Entity Role BV
                                            16146 --Additional Insured role in ROLE TYPE table
                                            );
        
          if v_entity_business_person = 1 then
            -- 1 = Individual , 2 = Business
            --
            --Set "32489948 --Relationship to Primary Entity"
            --
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_associated_entity_id,
                                              32489948, --Relationship to Primary Entity
                                              3000 --Additional Insured relationship in ORM_RELATION_TYPE table
                                              );
          end if;
        end if;
      
        --if v_insured_role = 'T' then create an object of type EntityRole under CustomerEntity and set the role as Additional Insured.
        --Also, set the relationship to primary insured bv as Additional Insured.     
        if v_create_entity_role_ind = 'T' then
        
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         3340048, --EntityRole Object type
                                         v_associated_entity_id,
                                         v_out_object_id);
        
          --
          --Set "34026746 --Entity Role BV"
          --
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_out_object_id,
                                            34026746, --Entity Role BV
                                            16146 --Additional Insured role in ROLE TYPE table
                                            );
        
          if v_entity_business_person = 1 then
            -- 1 = Individual , 2 = Business
            --
            --Set "32489948 --Relationship to Primary Entity"
            --
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_associated_entity_id,
                                              32489948, --Relationship to Primary Entity
                                              3000 --Additional Insured relationship in ORM_RELATION_TYPE table
                                              );
          end if;
        
        end if;
      end if;
    
      v_create_entity_role_ind := 'F';
      v_update_entity_role_ind := 'F';
      v_empty_entity_role_id   := NULL;
      v_entity_role_id         := NULL;
      v_object_insured_index   := v_object_insured_list.next(v_object_insured_index);
    end loop;
  
    v_entity_role_list.delete;
    --Interest start
  
    -- Get all ObjectAdditionalInterest type of object   
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        v_parent_object_id,
                                                        385, --ObjectAdditionalInterest
                                                        v_object_interest_list,
                                                        null,
                                                        true,
                                                        10348848);
  
    if v_session_control.gLogging_Full then
    
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '...Interest | in_action_object_id    : ' ||
                            in_action_object_id ||
                            ' v_object_interest_list.first    : ' ||
                            v_object_interest_list.first ||
                            ' v_object_interest_list.count    : ' ||
                            v_object_interest_list.count);
    end if;
    v_object_interest_index := v_object_interest_list.first;
  
    --2.
    --Interest object creation start
    while v_object_interest_index is not null loop
      --get existing object additional Interest or policybop or policyboploacation level.
    
      --Check is object of belongs to entity or partner. If belongs to entity then go in if statement
      v_interest_entity_type := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_object_interest_list(v_object_interest_index),
                                                                       v_interest_entity_type_bv_id);
    
      if v_interest_entity_type = 205 then
        --  205 = CustomerEntity
      
        --Get associated Customer Entity
        v_associated_entity_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_object_interest_list(v_object_interest_index),
                                                                         v_interest_associated_entity_bv_id);
        --Get entity Entity is Business or Person? 
        v_entity_business_person := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_associated_entity_id,
                                                                           v_entity_business_person_bv_id);
        --Get all the Entity role objects of customer entity  
        pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                            in_transaction_id,
                                                            v_associated_entity_id,
                                                            3340048, --EntityRole Object type
                                                            v_entity_role_list,
                                                            null,
                                                            true);
        v_entity_role_index := v_entity_role_list.first;
        if v_entity_role_list.count = 1 then
        
          v_empty_entity_role_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                           in_transaction_id,
                                                                           v_entity_role_list(v_entity_role_index),
                                                                           34026746);
        
        elsif v_entity_role_list.count > 1 then
        
          --Get all the Entity role(where Role = Additional Insured) objects of customer entity
          v_entity_role_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                in_transaction_id,
                                                                                v_associated_entity_id, --customerentity
                                                                                3340048, --EntityRole Object type
                                                                                34026746, --Entity Role BV
                                                                                16246, --Additional Interest role in ROLE TYPE table
                                                                                false);
        
        end if;
      
        --if Entity Role is null then set the indicator(v_create_entity_role_ind/v_update_entity_role_ind) = 'T'
        if v_empty_entity_role_id is null and v_entity_role_list.count = 1 then
          v_update_entity_role_ind := 'T';
        elsif v_empty_entity_role_id is not null and v_empty_entity_role_id !=16246 and
              v_entity_role_list.count = 1 then
          v_create_entity_role_ind := 'T';
        elsif v_entity_role_id is null and v_entity_role_list.count > 1 then
          v_create_entity_role_ind := 'T';
        end if;
      
        if v_session_control.gLogging_Full then
        
          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...Interest | v_empty_entity_role_id    : ' ||
                                v_empty_entity_role_id ||
                                ' v_entity_role_id    : ' ||
                                v_entity_role_id ||
                                ' v_entity_role_list.count    : ' ||
                                v_entity_role_list.count ||
                                ' v_update_entity_role_ind    : ' ||
                                v_update_entity_role_ind ||
                                ' v_create_entity_role_ind    : ' ||
                                v_create_entity_role_ind);
        end if;
      
        if v_update_entity_role_ind = 'T' then
        
          --
          --Set "34026746 --Entity Role BV"
          --
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_entity_role_list(v_entity_role_index),
                                            34026746, --Entity Role BV
                                            16246 --Additional Insured role in ROLE TYPE table
                                            );
        
          if v_entity_business_person = 1 then
            -- 1 = Individual , 2 = Business
            --
            --Set "32489948 --Relationship to Primary Entity"
            --
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_associated_entity_id,
                                              32489948, --Relationship to Primary Entity
                                              4000 --Additional Insured relationship in ORM_RELATION_TYPE table
                                              );
          end if;
        end if;
      
        --if v_create_entity_role_ind = 'T' then create an object of type EntityRole under CustomerEntity and set the role as Additional Interest.
        --Also, set the relationship to primary Interest bv as Additional Interest.     
        if v_create_entity_role_ind = 'T' then
        
          pkg_os_object.sp_object_create(in_session_id,
                                         in_transaction_id,
                                         3340048, --EntityRole Object type
                                         v_associated_entity_id,
                                         v_out_object_id);
        
          --
          --Set "34026746 --Entity Role BV"
          --
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_out_object_id,
                                            34026746, --Entity Role BV
                                            16246 --Additional Interest role in ROLE TYPE table
                                            );
          if v_entity_business_person = 1 then
            -- 1 = Individual , 2 = Business
            --
            --Set "32489948 --Relationship to Primary Entity"
            --
            pkg_os_object_io.sp_object_bv_set(in_session_id,
                                              in_transaction_id,
                                              v_associated_entity_id,
                                              32489948, --Relationship to Primary Entity
                                              4000 --Additional Interest relationship in ORM_RELATION_TYPE table
                                              );
          end if;
        end if;
      end if;
      v_create_entity_role_ind := 'F';
      v_update_entity_role_ind := 'F';
      v_empty_entity_role_id   := NULL;
      v_entity_role_id         := NULL;
      v_object_interest_index  := v_object_interest_list.next(v_object_interest_index);
    end loop;
  
  end sp_update_entityrole;
  --UTPRODUCT-2140 End
  -----------------------------------------------------------------------------------------------------------------------------------
	
procedure sp_update_objects_numeration
(
     in_session_id                       in          object.object_id%type,
     in_transaction_id                   in          object.object_id%type,
     in_parent_object_id          in        object.object_id%type,
     in_child_object_type_id      in        object.object_id%type,
     in_numeration_bv_id          in        object.object_id%type
)
as

    v_object_list               pkg_os_object.t_object_list;
    v_object_index              number;

begin

    pkg_os_object_search.sp_object_children_of_type_get
     (
          in_session_id,
          in_transaction_id,
          in_parent_object_id,
          in_child_object_type_id,
          v_object_list,
          211662--instance number
     );

    v_object_index := v_object_list.first;

    while v_object_index is not null loop

         pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_object_list( v_object_index ),
                                          in_numeration_bv_id,
                                          v_object_index);

         v_object_index := v_object_list.next( v_object_index );

    end loop;

end sp_update_objects_numeration;
----------------------------------------------------------	
FUNCTION FN_CHECK_FLAG_ON_USERIDENTITY 
(
in_session_id             IN   object.object_id%type, 
in_transaction_id         IN   object.object_id%type,
in_customerEntity_object  IN   object.object_id%type
)
RETURN VARCHAR2 AS


gBv_flagOnUserIdentity                      CONSTANT business_variable.business_variable_id%type := 32801908;
gObjType_UserIdentity                       CONSTANT object_type.object_type_id%TYPE := 3453508;
gBV_CustomerEntityRefPreferredEmailObj      CONSTANT business_variable.business_variable_id%type := 32681746;
gBV_CustomerEntityRefPreferredEmail         CONSTANT business_variable.business_variable_id%type := 30028946;
gBv_Customer_associatedUserIdentityRole     CONSTANT business_variable.business_variable_id%type := 32778308;

v_returnFlag_check char := 'F';
v_userIdentity                      object.object_id%TYPE;
v_userIdentityRole                  object.object_id%TYPE;
v_emailObj_inObj                    object_bv_value.business_variable_value%type;
v_email_inObj                       object_bv_value.business_variable_value%type;
v_ObjFlag_UserIdentity              object_bv_value.business_variable_value%type;

BEGIN

---get the customer entity details

v_emailObj_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_customerEntity_object,
												    gBV_CustomerEntityRefPreferredEmailObj); 

v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_emailObj_inObj,
												    gBV_CustomerEntityRefPreferredEmail);


v_userIdentityRole := pkg_os_object_io.fn_object_bv_get(in_session_id,     
												    in_transaction_id,
												    in_customerEntity_object,	
    											    gBv_Customer_associatedUserIdentityRole);

------Main Logic Starts From Here---------
           
    If v_userIdentityRole is not null
        then

            v_userIdentity := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                            in_transaction_id,
                                                                            v_userIdentityRole,
                                                                            gObjType_UserIdentity);	



            v_ObjFlag_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id, 
                                                                     in_transaction_id, 
                                                                     v_userIdentity, 
                                                                     gBv_flagOnUserIdentity); 

            if v_ObjFlag_UserIdentity is not null
                then
                    if v_ObjFlag_UserIdentity = 'T'
                        then
                            v_returnFlag_check := 'F';
                    else
                        v_returnFlag_check := 'T';  
                    end if;
              
            else
                v_returnFlag_check := 'F';  
            end if;



    Else 
           
           BEGIN
                select USER_IDENTITY_ID 
                into v_userIdentity
                from USER_IDENTITY 
                where lower(EMAIL) = lower(v_email_inObj) and rownum =1;
                EXCEPTION
                WHEN no_data_found THEN
				v_userIdentity := null;
            END; 

            if v_userIdentity is null
                then
                    v_returnFlag_check := 'T';                  
            else
                v_ObjFlag_UserIdentity := pkg_os_object_io.fn_object_bv_get(in_session_id, 
                                                                     in_transaction_id, 
                                                                     v_userIdentity, 
                                                                     gBv_flagOnUserIdentity);
                                                                    
                if v_ObjFlag_UserIdentity is not null
                then
                    if v_ObjFlag_UserIdentity = 'T'
                        then
                            v_returnFlag_check := 'F';
                    else
                        v_returnFlag_check := 'T';  
                    end if;
              
                else
                v_returnFlag_check := 'F';  
                end if;
              
            end if;

                
    End if;
        
  RETURN v_returnFlag_check;
  
END FN_CHECK_FLAG_ON_USERIDENTITY;


----------------------------------------------------------------------------------------------------------------------------------
 function fn_check_pto_against_task_due
( 
    task_assigned_to_id number,
    calender_start_date date,
    calender_end_date date
) return char
as
v_start_date date;
v_end_date date;
begin	
v_start_date := calender_start_date - interval '1' minute;
v_end_date :=   calender_end_date - interval '1' minute;
  for i in (select task_due_date from dragon_task where task_assigned_to_id= task_assigned_to_id and task_status='Incomplete' and
            Task_content_type = 'Task' )            
  loop
      if trunc(i.task_due_date) between v_start_date and v_end_date 
      then
        return 'F';
      end if;
  end loop;

return 'T';

exception when others then
           raise;
    
end fn_check_pto_against_task_due;

----------------------------------------------------------------------------------------------------------------------------------
--   UTPRODUCT-2579
--
--   %NAME
--        fn_get_content_type_name
--
--   %USAGE
--        This function returns the Content type name from ALL_US_0_CONTENT_TYPE 
--        given the enum id and context object type.
--        Additionally, we can provide the transaction type set.
--
--   %ALGORITHM
--        Return the count of transactions for the batch with status <> created.
--
--
--   %PARAM   in_object_id                         Object Id (Currently unused, but is meant to be used in future version)
--   %PARAM   in_enum_id                           Enum code
--   %PARAM   in_context_object_type_id            Context object type ID
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_get_content_type_name
(
  in_object_id              in object.object_id%type,
  in_enum_id                in all_us_0_content_type.enum_number%type,
  in_context_object_type_id in all_us_0_content_type.context_object_type_id%type
)
return all_us_0_content_type.display_text_ui%type
as
  v_display_text all_us_0_content_type.display_text_ui%type;
begin

  select AC.Display_Text_Ui
    into v_display_text
    from ALL_US_0_CONTENT_TYPE AC
   where AC.Enum_Number = in_enum_id
     AND AC.CONTEXT_OBJECT_TYPE_ID = in_context_object_type_id
     AND AC.Active_Tf = 'T';

  return v_display_text;
exception
  when others then
    return null;
end fn_get_content_type_name;
----------------------------------------------------------------------------------------------------------------------------------
function fn_check_actorrole_email_combination
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type,
  in_object_actorType IN  number
)
return varchar2 AS

gBv_DragonUserEmailID               CONSTANT business_variable.business_variable_id%type := 211461;
gBv_DragonUserEmailObj              CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID       CONSTANT business_variable.business_variable_id%type := 30028946;
gBv_DragonUserActorType             CONSTANT business_variable.business_variable_id%type := 21689501;
gBv_userIdentityChildCount          CONSTANT business_variable.business_variable_id%type := 32778008;
gBv_AssociatedEntity                CONSTANT business_variable.business_variable_id%type := 32778108;
gObjType_UserIdentityRole           CONSTANT object_type.object_type_id%TYPE             := 3455408;
gBv_UserIdentityRole_Role           CONSTANT business_variable.business_variable_id%type := 32776008;

v_returnFlag_check char := 'F';

v_object_type_id        object_type.object_type_id%TYPE;
v_email_inObj           object_bv_value.business_variable_value%type;
v_actorType_inObj       object_bv_value.business_variable_value%type;
v_userIdentity                      object.object_id%TYPE;
v_associatedEntity  object.object_id%TYPE;
v_associatedEntityActorType object_bv_value.business_variable_value%type;
v_userIdentityRole_Role number := 0;
v_email_Obj           object_bv_value.business_variable_value%type;

v_object_list    pkg_os_object.t_object_list;
v_object_index   number;



BEGIN

    -- Get the Dragon user attributes needed
    
    v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

    v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailID);
														
    if v_email_inObj is null then
            
         v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailObj);   
                                                        
                                                        
        v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_email_Obj,
                                                        gBv_DragonUserEmailObjEmailID);
            
            
        end if;

    v_actorType_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserActorType);

    -- Get the UserIdentity if exists from the dragon user's email
    
        BEGIN
                            select USER_IDENTITY_ID 
                            into v_userIdentity
                            from USER_IDENTITY 
                            where lower(EMAIL) = lower(v_email_inObj);
                            EXCEPTION
                            WHEN no_data_found THEN
                            v_userIdentity := null;
                        END; 
    
    -- Main logic starts from here
    
    if v_userIdentity is null 
        then 
            v_returnFlag_check := 'F';

    
        else 
            if v_userIdentity is not null 
                then

                -- Get the list of children UserIdentityRole objects from the UserIdentity found
                
                    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                                in_transaction_id,
                                                                v_userIdentity,
                                                                gObjType_UserIdentityRole,
                                                                v_object_list
                                                                );
                                                                
                    v_object_index := v_object_list.first;
                    
                --Iterate over each child UserIdentityRole to check its associated entity's actor type
                
                    while v_object_index is not null 
                        loop
                            
                            v_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_object_list(v_object_index),
                                                            gBv_AssociatedEntity);


                            v_userIdentityRole_Role := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_object_list(v_object_index),
                                                            gBv_UserIdentityRole_Role);



                            if v_userIdentityRole_Role = 3   -- UIR role is agency user
                                then
                                    v_associatedEntityActorType := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                        in_transaction_id,
                                                                        v_associatedEntity,
                                                                        gBv_DragonUserActorType);

                                        if in_object_actorType = v_associatedEntityActorType and v_associatedEntity <> in_object_id
                                            then
                                                v_returnFlag_check := 'T';
                                                RETURN v_returnFlag_check;
                                        end if;
                              
                            
                            end if; 


                            v_object_index := v_object_list.next(v_object_index);
        
                        end loop;
            
            end if;
    
    end if;
    
    RETURN v_returnFlag_check;

END fn_check_actorrole_email_combination;
----------------------------------------------------------------------------------------------------------------------------------

function fn_integration_service_cache_exists
(
  in_session_id              in object.object_id%type,
  in_service_id              in service.service_id%type,
  in_service_operation_id  in service_operation.service_operation_id%type,
  in_cache_key               in integration_service_cache.cache_key%type,
  in_cache_expiry_sec        in number default 0
)
return char is
  v_cache_count              number;
  v_cache_expiration         system_context.cache_expiration%type;
  v_service_name             system_context.service_name%type;
  v_service_operation_name   system_context.service_operation_name%type;
  v_cache_expiry_interval    number := 0;
  v_cache_expiry_magnitude   varchar(20) := '';
  v_cache_expiry_unit        varchar(10) := 'second';
  v_index                    number := 0;
begin

  select s.cache_expiration, s.service_name, s.service_operation_name
     into v_cache_expiration, v_service_name, v_service_operation_name    
    from system_context s
  where s.service_id = in_service_id
    and s.service_operation_id = in_service_operation_id;

  if in_cache_expiry_sec = 0 then  
    if v_cache_expiration is not null then
      begin
      -- parse string '0m' '0d' '0s' to respective unit and magnitude
      v_index := instr(v_cache_expiration, 'm');
      if v_index > 0 then
        v_cache_expiry_magnitude := substr(v_cache_expiration, 0, v_index - 1);
        v_cache_expiry_interval := to_number(v_cache_expiry_magnitude) * 30;
        v_cache_expiry_unit   := 'day';
      end if;
      
      v_index := instr(v_cache_expiration, 'd');
      if v_index > 0 then
        v_cache_expiry_magnitude := substr(v_cache_expiration, 0, v_index - 1);
        v_cache_expiry_interval := to_number(v_cache_expiry_magnitude);
        v_cache_expiry_unit   := 'day';
      end if;
      
      v_index := instr(v_cache_expiration, 's');
      if v_index > 0 then
        v_cache_expiry_magnitude := substr(v_cache_expiration, 0, v_index - 1);
        v_cache_expiry_interval := to_number(v_cache_expiry_magnitude);
        v_cache_expiry_unit   := 'second';
      end if;
      
      exception
      when others then
        v_cache_expiry_interval := 0;
      end;
    else
      v_cache_expiry_interval := 0;
    end if;
  else
    v_cache_expiry_interval := in_cache_expiry_sec;
  end if;

  select count(*)
  into v_cache_count
  from integration_service_cache
   where service_name = v_service_name
   and operation_name = v_service_operation_name
   and cache_key = in_cache_key
   and (v_cache_expiry_interval = 0 or
     creation_date >=
     sysdate +
     numtodsinterval(-1 * v_cache_expiry_interval, v_cache_expiry_unit));

  return case when v_cache_count = 0 then 'F' else 'T' end;

exception
  when others then
  return 'F';

end fn_integration_service_cache_exists;
----------------------------------------------------------------------------------------------------------------------------------
PROCEDURE sp_sync_useridentity_roles(in_session_id        IN object.object_id%type,
                                     in_transaction_id    IN object.object_id%type,
                                     in_action_object_id  IN object.object_id%type,
                                     io_action_outcome_id IN OUT outcome.outcome_id%type) IS

  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);
  v_procedure_name CONSTANT system_log.program_name%TYPE := 'sp_sync_useridentity_roles';
  v_dragon_user                  object.object_id%TYPE;
  v_datamart_tf                  CHAR(1) := 'T';
  v_object_list                  pkg_os_object.t_object_list;
  v_object_index                 number;
  v_associatedEntity             object.object_id%TYPE;
  v_emailObject_associatedEntity object.object_id%TYPE;
  v_customer                     object.object_id%TYPE;
  v_userIdentityRole_Role        number := 0;
  v_username_inObj               object_bv_value.business_variable_value%type;
  v_email_inObj                  object_bv_value.business_variable_value%type;
  v_phone_inObj                  object_bv_value.business_variable_value%type;
  v_phone_code_inObj             object_bv_value.business_variable_value%type;
  v_username_associatedEntity    object_bv_value.business_variable_value%type;
  v_email_associatedEntity       object_bv_value.business_variable_value%type;
  v_phone_associatedObject       object_bv_value.business_variable_value%type;
  v_phone_number                 object_bv_value.business_variable_value%type;
  v_phone_number_code            object_bv_value.business_variable_value%type;
  v_outcome                      outcome.outcome_id%TYPE;

BEGIN
  --Get the required variables from the UserIdentity object
  v_username_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        gBv_UserIdentity_Username);

  v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     gBv_UserIdentity_Email);
  --- UT-3131
  v_phone_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                     in_transaction_id,
                                                     in_action_object_id,
                                                     gBv_UserIdentity_PhoneNumber);

  v_phone_code_inObj := substr(v_phone_inObj, 1, length(v_phone_inObj) - 10);
  v_phone_inObj      := substr(v_phone_inObj, -10);

  --- UT-3131   
  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      in_action_object_id,
                                                      gObjType_UserIdentityRole,
                                                      v_object_list);

  v_object_index := v_object_list.first;

  --Iterate over each child UserIdentityRole object

  while v_object_index is not null loop
  
    v_userIdentityRole_Role := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_object_list(v_object_index),
                                                                 gBv_UserIdentityRole_Role);
  
    --Get the associated entity of the current UserIdentityRole
  
    v_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_object_list(v_object_index),
                                                            gBv_AssociatedEntity);
  
    if v_userIdentityRole_Role = 3 --If associated entity is DragonUser object
     then
    
      --Get the required variable values from the DragonUser object
    
      v_username_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_associatedEntity,
                                                                       gBv_DragonUserUsername);
    
      v_emailObject_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                          in_transaction_id,
                                                                          v_associatedEntity,
                                                                          gBv_DragonUserEmailObject);
    
      v_email_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_emailObject_associatedEntity,
                                                                    gbv_Email);
    
      --- UT-3131
    
      v_phone_associatedObject := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    v_associatedEntity,
                                                                    gBv_DragonUserPhoneObject);
    
      v_phone_number := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                          in_transaction_id,
                                                          v_phone_associatedObject,
                                                          gbv_PhoneNumber);
    
      v_phone_number_code := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                               in_transaction_id,
                                                               v_phone_associatedObject,
                                                               gBv_EntityPhoneNumberCode);
    
      --- UT-3131
      --Check if DragonUser objects username and email match with UserIdentity's email or not
    
      if (v_username_associatedEntity <> v_username_inObj OR
         lower(v_email_associatedEntity) <> lower(v_email_inObj) OR
         v_phone_number_code || v_phone_number <>
         v_phone_code_inObj || v_phone_inObj) then
      
        --Set the Username and email on DragonUser Objects
      
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_associatedEntity,
                                          gBv_DragonUserUsername,
                                          v_username_inObj);
      
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_emailObject_associatedEntity,
                                          gbv_Email,
                                          v_email_inObj);
        --- UT-3131                                                                
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_phone_associatedObject,
                                          gBv_EntityPhoneNumberCode,
                                          v_phone_code_inObj);
      
        pkg_os_object_io.sp_object_bv_set(in_session_id,
                                          in_transaction_id,
                                          v_phone_associatedObject,
                                          gbv_PhoneNumber,
                                          v_phone_inObj);
        --- UT-3131
        --update dragon user datamart
        pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                               in_transaction_id,
                                               v_associatedEntity,
                                               v_datamart_tf);
      
        v_outcome := gOutcome_OK;
      end if;
    
    else
      if v_userIdentityRole_Role = 2 --If associated entity is CustomerEntity
       then
        --Get the required variable values from the CustomerEntity object
      
        v_emailObject_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            v_associatedEntity,
                                                                            gbv_Ref_Active_Email);
      
        v_email_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_emailObject_associatedEntity,
                                                                      gbv_Email);
        --- UT-3131
      
        v_phone_associatedObject := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                      in_transaction_id,
                                                                      v_associatedEntity,
                                                                      gbv_Ref_Active_Phone);
      
        v_phone_number := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_phone_associatedObject,
                                                            gbv_PhoneNumber);
      
        v_phone_number_code := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_phone_associatedObject,
                                                                 gBv_EntityPhoneNumberCode);
      
        --- UT-3131
      
        --Check if CustomerEntity objects email match with UserIdentity's email or not
      
        if (lower(v_email_associatedEntity) <> lower(v_email_inObj) or
           v_phone_number_code || v_phone_number <>
           v_phone_code_inObj || v_phone_inObj) then
        
          --Set the email on CustomerEntity
        
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_emailObject_associatedEntity,
                                            gbv_Email,
                                            v_email_inObj);
          --- UT-3131                 
        
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_phone_associatedObject,
                                            gBv_EntityPhoneNumberCode,
                                            v_phone_code_inObj);
        
          pkg_os_object_io.sp_object_bv_set(in_session_id,
                                            in_transaction_id,
                                            v_phone_associatedObject,
                                            gbv_PhoneNumber,
                                            v_phone_inObj);
          --- UT-3131
          --update dragon user datamart
          v_customer := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                          in_transaction_id,
                                                                          v_associatedEntity,
                                                                          gObjectType_customer);
        
          pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                                 in_transaction_id,
                                                 v_customer,
                                                 v_datamart_tf);
        
          v_outcome := gOutcome_OK;
        end if;
      
      end if;
    
    end if;
  
    v_object_index := v_object_list.next(v_object_index);
  
  end loop;

  io_action_outcome_id := v_outcome;

END sp_sync_useridentity_roles;

----------------------------------------------------------------------------------------------------------------------------------
function fn_check_dragon_email_on_UserIdentity
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type
)
return varchar2 AS

gBv_DragonUserEmailID               CONSTANT business_variable.business_variable_id%type := 211461;
gBv_DragonUserEmailObj               CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID       CONSTANT business_variable.business_variable_id%type := 30028946;

gBv_DragonUserUsername              CONSTANT business_variable.business_variable_id%type := 10047; 

--v_returnFlag char := 'T';


v_email_inObj           object_bv_value.business_variable_value%type;
v_email_Obj           object_bv_value.business_variable_value%type;

v_userIdentity                      object.object_id%TYPE;
v_userIdentity_UserName object_bv_value.business_variable_value%type;



BEGIN

    -- Get the Dragon user attributes needed
    
    v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailID);


	if v_email_inObj is null then
            
         v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailObj);   
                                                        
                                                        
        v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_email_Obj,
                                                        gBv_DragonUserEmailObjEmailID);
            
            
        end if;

    -- Get the UserIdentity's Username if exists from the dragon user's email
   
        BEGIN
                            select USERNAME 
                            into v_userIdentity_UserName
                            from USER_IDENTITY 
                            where lower(EMAIL) = lower(v_email_inObj);
                            EXCEPTION
                            WHEN no_data_found THEN
                            v_userIdentity_UserName := null;
                        END; 
    
    -- Main logic starts from here
    
    if v_userIdentity_UserName is null 
        then 

         -- Set dragon user's email as username

                  return v_email_inObj;  

        else 
            if v_userIdentity_UserName is not null 
                then
                
                -- Set username on UserIdentity to DragonUser's username

                    return v_userIdentity_UserName;
                
            end if;
    
    end if; 
    
    --RETURN v_returnFlag;

END fn_check_dragon_email_on_UserIdentity;
----------------------------------------------------------------------------------------------------------------------------------
function fn_check_unique_username_in_useridentity
(
in_session_id                    IN   object.object_id%type, 
in_transaction_id                IN   object.object_id%type,
in_dragonuser_object             IN   object.object_id%type,
in_username                      IN   VARCHAR2
)
RETURN VARCHAR2 AS 
v_session_control	pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
v_procedure_name      CONSTANT system_log.program_name%TYPE := 'fn_check_unique_username_in_useridentity';

gObjType_UserIdentity                      CONSTANT object_type.object_type_id%TYPE := 3453508;
gBv_DragonUserEmailID                      CONSTANT business_variable.business_variable_id%type := 211461;
gBv_Dragon_associatedUserIdentityRole      CONSTANT business_variable.business_variable_id%type := 32778408;
gBv_DragonUserEmailObj               CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID       CONSTANT business_variable.business_variable_id%type := 30028946;

v_returnFlag_check char := 'F';
v_dragonuser_userIdentity           object.object_id%TYPE;
v_userIdentity                      object.object_id%TYPE;
v_associatedUserIdentityRole        object_type.object_type_id%TYPE;
v_email_inObj                       object_bv_value.business_variable_value%type;
v_email_UserIdentity                object_bv_value.business_variable_value%type;
v_email_Obj           object_bv_value.business_variable_value%type;

BEGIN 
                      
--Check if UIR reference is present
v_associatedUserIdentityRole := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_dragonuser_object,	
    											    gBv_Dragon_associatedUserIdentityRole);
                                                    

If v_associatedUserIdentityRole is not null
    then
    
        v_dragonuser_userIdentity := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                                    in_transaction_id,
                                                                                    v_associatedUserIdentityRole,
                                                                                    gObjType_UserIdentity);
                                        
        --Check if Username exist in UserIdentity                                            
        BEGIN
             select USER_IDENTITY_ID 
             into v_userIdentity
             from USER_IDENTITY 
             where lower(USERNAME) = lower(in_username);
             EXCEPTION
             WHEN no_data_found THEN
			 v_userIdentity := null;
        END;
                
          IF v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
          (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           'Input UI: '|| v_userIdentity
          );
         end IF;        
                       
        --If FN/LN is changed                               
        if v_dragonuser_userIdentity = v_userIdentity or v_userIdentity is null                      	
            then v_returnFlag_check := 'T';                                             
        else
            v_returnFlag_check := 'F';
        end if;
              
else
                                                    
        IF v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
          (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           'Input username: '|| in_username
          );
         end IF;  
         
        --Check if Username exist in UserIdentity  
        BEGIN
             select USER_IDENTITY_ID 
             into v_userIdentity
             from USER_IDENTITY 
             where lower(USERNAME) = lower(in_username);
             EXCEPTION
             WHEN no_data_found THEN
             v_userIdentity := null;
        END;
        
        IF v_session_control.gLogging_Full then
            pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'matched UI: '|| v_userIdentity
            );      
        end IF;     
        
        if v_userIdentity is null                                                    --Unique user
            then           
                v_returnFlag_check := 'T';                                
					 
            else
                v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_dragonuser_object,
												    gBv_DragonUserEmailID); 
                

				if v_email_inObj is null then
            
                 v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                in_transaction_id,
                                                                in_dragonuser_object,
                                                                gBv_DragonUserEmailObj);   
                                                                
                                                                
                v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                in_transaction_id,
                                                                v_email_Obj,
                                                                gBv_DragonUserEmailObjEmailID);
                    
                    
                end if;
				
        IF v_session_control.gLogging_Full then
            pkg_os_logging.sp_log
            (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            'Dragon email: '|| v_email_inObj
            );    
        end IF;  
        
                --Will create new role for existing email and username combination
                BEGIN                               
					 Select EMAIL
                     into v_email_UserIdentity 
					 from USER_IDENTITY 
					 where USER_IDENTITY_ID = v_userIdentity;
					 EXCEPTION
					 WHEN no_data_found THEN
					 v_email_UserIdentity := null;
                END;	
                
					 if lower(v_email_UserIdentity) like lower(v_email_inObj)
						then 
                            v_returnFlag_check := 'T';                             
					 else
                        v_returnFlag_check := 'F';  
                     End if;
                     
         End if;
                   
End if;
    RETURN v_returnFlag_check;
END fn_check_unique_username_in_useridentity;
----------------------------------------------------------------------------------------------------------------------------------
function fn_check_if_useridentity_exist
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type
) 
return varchar2 AS 

gBv_DragonUserEmailID               		CONSTANT business_variable.business_variable_id%type := 211461;
gBv_DragonUserEmailObj               		CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID       		CONSTANT business_variable.business_variable_id%type := 30028946;
gObjType_DragonUser                         CONSTANT object_type.object_type_id%TYPE := 309;
gObjType_CustomerEntity                     CONSTANT object_type.object_type_id%TYPE := 205;
gBV_CustomerEntityRefPreferredEmailObj      CONSTANT business_variable.business_variable_id%type := 32681746;
gBV_CustomerEntityRefPreferredEmail         CONSTANT business_variable.business_variable_id%type := 30028946;


v_returnFlag_check char := 'F';
v_email_inObj           object_bv_value.business_variable_value%type;
v_userIdentity                      object.object_id%TYPE;
v_email_Obj           object_bv_value.business_variable_value%type;
v_object_type_id        object_type.object_type_id%TYPE;

BEGIN
--Check the Object type
v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

if  v_object_type_id = gObjType_DragonUser
then
	-- Get the Dragon user attributes needed
	v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailID);

	if v_email_inObj is null then
            
        v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailObj);   
                                                        
                                                        
        v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_email_Obj,
                                                        gBv_DragonUserEmailObjEmailID);
            
            
    end if;
else
    if  v_object_type_id = gObjType_CustomerEntity
        then
            ---get the customer entity details

            v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    in_object_id ,
												    gBV_CustomerEntityRefPreferredEmailObj); 

            v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
												    in_transaction_id,
												    v_email_Obj,
												    gBV_CustomerEntityRefPreferredEmail);
    end if;
end if;
                                                        
--Search if UserIdentity object exist for User's email
                BEGIN
                    select USER_IDENTITY_ID 
                    into v_userIdentity
                    from USER_IDENTITY 
                    where lower(EMAIL) = lower(v_email_inObj);
                    EXCEPTION
                    WHEN no_data_found THEN
                    v_userIdentity := null;
                END; 
                  
--Set the flag to true if found else false

                if v_userIdentity is null 
                    then 
                        v_returnFlag_check := 'F'; 
                else
                    if v_userIdentity is not null
                        then
                            v_returnFlag_check := 'T';
                    end if;
                end if;
                        



  RETURN v_returnFlag_check;
END fn_check_if_useridentity_exist;
----------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-6811 start
function fn_concat_entity_role
( in_session_id     in        object.object_id%type, 
  in_transaction_id   in        object.object_id%type,
  in_object_id      in        object.object_id%type
)
return varchar2 AS
  v_return_value                varchar2(100);
  v_type_placeholder            varchar2(100);
  v_session_control             pkg_os_session.r_dragon_session_control :=      pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
  v_procedure_name              constant system_log.program_name%type   :=      pkg_name||'fn_concat_entity_role';

  v_object_list                 pkg_os_object.t_object_list;
  v_object_list_index           number;
  v_role                        number;          

begin
  -- Search all entity role objects
  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          gObjType_Entityrole,
                                                          v_object_list,
                                                          null,
                                                          true);
  
  v_object_list_index := v_object_list.first;
  
  while v_object_list_index is not null  loop
  
  v_type_placeholder := v_return_value;
  
  v_role := pkg_os_object_io.fn_object_bv_get(in_session_id,
                              in_transaction_id,
                              v_object_list(v_object_list_index),
                              gbv_EntityRoleType);
  
  Select role_type into v_return_value from role_type where role_type_id = v_role;
                            
  if v_type_placeholder is not null then 
  
  v_return_value :=  v_type_placeholder || ', ' ||  v_return_value;
  
  end if;

  v_object_list_index := v_object_list.next(v_object_list_index);
    end loop;
    
    return v_return_value;

end fn_concat_entity_role;
--OSPRODUCT-6811 end
----------------------------------------------------------------------------------------------------------------------------------
FUNCTION fn_check_unique_email_in_useridentity
(
in_session_id                    IN   object.object_id%type, 
in_transaction_id                IN   object.object_id%type,
in_associatedUserIdentityRole    IN   object.object_id%type,
in_emailID                       IN   VARCHAR2
)
RETURN VARCHAR2 AS 
v_session_control	pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
v_procedure_name      CONSTANT system_log.program_name%TYPE := 'fn_check_unique_email_in_useridentity';

gObjType_UserIdentity                      CONSTANT object_type.object_type_id%TYPE := 3453508;
gBv_DragonUserEmailID                      CONSTANT business_variable.business_variable_id%type := 211461;
gBv_Dragon_associatedUserIdentityRole      CONSTANT business_variable.business_variable_id%type := 32778408;

--gBv_DragonUserEmailObj                   CONSTANT business_variable.business_variable_id%type := 31687846;
--gBv_DragonUserEmailObjEmailID            CONSTANT business_variable.business_variable_id%type := 30028946;

v_returnFlag_check char := 'F';
v_dragonuser_userIdentity           object.object_id%TYPE;
v_userIdentity                      object.object_id%TYPE;
v_associatedUserIdentityRole        object_type.object_type_id%TYPE;

--v_email_inObj                     object_bv_value.business_variable_value%type;
--v_email_UserIdentity              object_bv_value.business_variable_value%type;
--v_email_Obj                       object_bv_value.business_variable_value%type;

BEGIN 
                      
--Check if UIR reference is present                                                   
 
If in_associatedUserIdentityRole is not null
    then
    
        v_dragonuser_userIdentity := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                                    in_transaction_id,
                                                                                    in_associatedUserIdentityRole,
                                                                                    gObjType_UserIdentity);
                                        
        --Check if email exist in UserIdentity                                            
        BEGIN
             select USER_IDENTITY_ID 
             into v_userIdentity
             from USER_IDENTITY 
             where lower(EMAIL) = lower(in_emailID); 
             EXCEPTION
             WHEN no_data_found THEN
			 v_userIdentity := null;
        END;
                
          IF v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
          (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           'Input UI: '|| v_userIdentity
          );
         end IF;        
                       
        --If UserIdentity found is related to current dragon user                             
        if v_dragonuser_userIdentity = v_userIdentity or v_userIdentity is null                      	
            then v_returnFlag_check := 'T';                                             
        else
            v_returnFlag_check := 'F';
        end if;
            
else         
      v_returnFlag_check := 'T';           
End if;
    RETURN v_returnFlag_check;
END fn_check_unique_email_in_useridentity;

----------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------
--UTPRODUCT-3664 start --OSPRODUCT-13212 modified 
function fn_check_del_pref_placeholder(in_session_id       in object.object_id%type,
                                         in_transaction_id in object.object_id%type,
                                         in_object_id      in object.object_id%type
                                         
                                         ) return char as
  v_object_list       pkg_os_object.t_object_list;
  v_object_index    number;
  v_return_value    char := 'T';
  v_DeliveryAddress   varchar2(300);
  v_procedure_name  constant system_log.program_name%type := pkg_name ||
                                                              'fn_check_del_pref_placeholder'; -- procedure name
  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id); -- bv distinguishing between person and business
  v_object_type_id             object_type.object_type_id%type;
  v_object_parent_id           object_type.object_type_id%type;                                                                                                     
  
begin

     
                                                                                                    
     v_object_parent_id :=       pkg_os_object.fn_object_parent_get(in_session_id,
                                                                    in_transaction_id,
                                                                    in_object_id);
     v_object_type_id :=       pkg_os_object.fn_object_type_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_object_parent_id);                                                                                                  

                                                                        
     if    v_object_type_id = gObjectType_customer then
     
     --get list of all delivery preference
     pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          v_object_parent_id,
                                                          gObjType_delpref, -- DocumentDeliveryPreference
                                                          v_object_list,
                                                          null,
                                                          true);
       
     else                                                            
  
    --get list of all delivery preference
     pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                          in_transaction_id,
                                                          in_object_id,
                                                          gObjType_delpref, -- DocumentDeliveryPreference
                                                          v_object_list,
                                                          null,
                                                          true);
     end if;                                                     
                                                          
                              
    v_object_index := v_object_list.first;
   
    while v_object_index is not null loop
      v_DeliveryAddress :=  pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                    in_transaction_id,
                                    v_object_list(v_object_index),
                                    gbv_DeliveryAddress);
      if v_DeliveryAddress in ('New Location', 'New Email Address') or v_DeliveryAddress is null
       then
       v_return_value  := 'F'; 
      end if;
           
      v_object_index   := v_object_list.next(v_object_index);
    end loop;                           
    
    return v_return_value;
    
end fn_check_del_pref_placeholder;
--UTPRODUCT-3664 end
----------------------------------------------------------------------------------------------------------------------------------
-- UTPRODUCT-3677
--
--   %NAME
--        fn_get_policy_trx_count_of_partner
--
--   %USAGE
--   Used to get the number of policy transaction made by a partner    
--
--   %ALGORITHM
--        Not Specified.
--
--   %PARAM    in_partner_id           Partner ID
--
----------------------------------------------------------------------------------------------------------------------------------
function fn_ivans_prt_policy_trx_count(in_partner_id in object.object_id%type)
  return number is
  v_policy_count number;
begin
  select count(trx.policy_id) policy_count
    into v_policy_count
    from dragon_policy_trx trx
   where trx.business_introducer_id = in_partner_id;

  return v_policy_count;
end fn_ivans_prt_policy_trx_count;
----------------------------------------------------------------------------------------------------------------------------------


procedure sp_del_empty_customer_address
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_action_object_id      in        object.object_id%type,
     io_action_outcome_id     in out    outcome.outcome_id%type
)
as

     v_procedure_name            constant system_log.program_name%type := pkg_name || 'sp_del_empty_customer_address';
     v_session_control           pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_policy_customer_id        object.object_id%type;
     v_address_list              pkg_os_object.t_object_list;
     v_address_index             number;
     v_parent_object_id          object.object_id%type;
     v_parent_object_type_id     object_type.object_type_id%type;
     v_rule_empty_address        number := 10737348;

begin
    if v_session_control.gLogging_Full 
     then
          pkg_os_logging.sp_log
                  ( in_session_id,
                    in_transaction_id, 
                    v_procedure_name,
                    '...Looking for empty CustomerEntity under:'||v_parent_object_id 
                   );
     end if;


       pkg_os_object_search.sp_object_children_of_type_get
         (
             in_session_id,
             in_transaction_id,
             in_action_object_id,
             pkg_os_constant.gObjType_CustomerAddress,
             v_address_list,
             null,
             true,
             v_rule_empty_address
          );



     if v_session_control.gLogging_Full then
          pkg_os_logging.sp_log
                ( 
                     in_session_id, 
                     in_transaction_id, 
                     v_procedure_name,
                    '..Total Empty CustomerAddress that needs to be deleted  : '||v_address_list.count );
     end if;

     v_address_index := v_address_list.first;

     while (v_address_index is not null)
     loop     
      ---       get parent of    customeraddress
               v_policy_customer_id :=  pkg_os_object_search.fn_object_get_parent_of_type( in_session_id,in_transaction_id,v_address_list(v_address_index), pkg_os_constant.gObjType_PolicyCustomer);

               pkg_os_object.sp_object_delete
                         (
                              in_session_id,
                              in_transaction_id,
                              v_policy_customer_id,
                              v_address_list(v_address_index),
                              pkg_os_constant.gObjType_CustomerAddress
                         );
                        
                      if v_session_control.gLogging_Full 
                      then
                              pkg_os_logging.sp_log
                                        ( 
                                                      in_session_id, 
                                                      in_transaction_id, 
                                                      v_procedure_name,
                                                     'Customer Address deleted is :'||v_address_list(v_address_index)
                                                      ||'for Policy customer: '||v_policy_customer_id 
                                          );
                        end if;   
                         
               --removing object change detail entry for the deleted address
                        
               delete from object_change where change_object_id = in_action_object_id and new_object_id = v_address_list(v_address_index);
     
                         
                         

               v_address_index := v_address_list.next(v_address_index);

     end loop;

     io_action_outcome_id := pkg_os_constant.gOutcome_OK;

exception
   when others then

       io_action_outcome_id := pkg_os_constant.gOutcome_InternalError;
       pkg_os_logging.sp_log_error
      (
           in_session_id,
           in_transaction_id,
           v_procedure_name,
           'error.....'||sqlerrm || ' error trace:' || dbms_utility.format_error_backtrace
       );


end sp_del_empty_customer_address;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_ba_type_by_enity_type_get
(
     in_session_id            in        object.object_id%type,
     in_transaction_id        in        object.object_id%type,
     in_role_type_id          in        role_type.role_type_id%type
)
return role_type.role_account_type_id%type
is
     v_procedure_name            constant system_log.program_name%type := pkg_name || 'fn_ba_type_by_enity_type_get';
     v_session_control           pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     
     v_ba_type_id                role_type.role_account_type_id%type;
begin
     select
          role_account_type_id
     into 
          v_ba_type_id
     from
          role_type
     where
          role_type_id = in_role_type_id
     ;
     
     if v_ba_type_id is null
        and 
        v_session_control.gLogging_Full
     then
          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'WARNING:  a billing account type is NULL for Entity Type '|| in_role_type_id
          );     
     end if;
     
     return v_ba_type_id;
     
exception
     when others then
          pkg_os_logging.sp_log_error
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               'ERROR: can not identify a billing account type for Entity Type '|| in_role_type_id
          );
     
     return NULL;
     
end fn_ba_type_by_enity_type_get;
-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--Start UTPRODUCT-3951
function fn_set_ptp_wholesalermanager(in_session_id     in object.object_id%type,
                                     in_transaction_id in object.object_id%type,
                                     in_ptp_id     in object.object_id%type)
  
   return number is
    
  v_ptp_wholesaler_agent              object.object_id%type;
  v_subm_producer_parent_agency       object.object_id%type;
  v_partner_agent                     object.object_id%type;
  v_wholesalermanager                 object.object_id%type;
  
    v_procedure_name constant system_log.program_name%type := pkg_name ||'fn_set_ptp_wholesalermanager';
    v_session_control pkg_os_session.r_dragon_session_control;
  
  begin
  
  v_ptp_wholesaler_agent := pkg_os_object_io.fn_object_bv_get
                        (in_session_id,
                        in_transaction_id,
                        in_ptp_id,
                        29418113);
          
--- Start OSPRODUCT-17110 ---       
  /*v_subm_producer_parent_agency := pkg_os_object_io.fn_object_bv_path_get
                        (in_session_id,
                        in_transaction_id,
                        in_ptp_id,'28555404.29606009.29428213.32885348');*/
                        
   v_subm_producer_parent_agency := pkg_os_object_io.fn_object_bv_path_get
                        (in_session_id,
                        in_transaction_id,
                        in_ptp_id,
                        32885348);
--- End OSPRODUCT-17110 ---  
  
   ---------Commented  for UTPRODUCT-4427  
    /* v_partner_agent := pkg_os_object_search.fn_object_with_attribute_get
                        ( 
                        in_session_id,
                        in_transaction_id,
                        v_ptp_wholesaler_agent, --partner
                        2346713, --PartnerAssociatedAgent
                        29417713, --PartnerAssociatedAgent - xReference - _Reference_Associated Partner
                        v_subm_producer_parent_agency, -- _Reference_Producer Parent Agency
                        false
                        ); */
	---------Commented  for UTPRODUCT-4427  

     select 
           a.assoc_agent_id 
     into 
           v_partner_agent 
     from 
           dragon_associated_agent a 
     where 
           a.assoc_agent_parent_producer_id= v_ptp_wholesaler_agent
     and 
           ref_associated_partner=v_subm_producer_parent_agency 
     and 
           assoc_agent_status_id = pkg_os_constant.gObjState_Alive 
     and 
           rownum=1;
						
    if v_partner_agent is not null 
    then 
        v_wholesalermanager := pkg_os_object_io.fn_object_bv_get
                                                (in_session_id,
                                                in_transaction_id,
                                                v_partner_agent,
                                                29417813 --Reference_Associate Manager
                                                );                
                            
        return  v_wholesalermanager;   
    end if;    
                          
  
  exception
    when others then
    
      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while setting wholesale manager on ptp ' ||
                                  '  Error Msg: ' || sqlerrm);
                                  
      return  v_wholesalermanager;  
    
  end fn_set_ptp_wholesalermanager;
--end UTPRODUCT-3951
-----------------------------------------------------------------------------------------------------------------------------------------------------
--begin UTPRODUCT-4200
 procedure sp_partner_assignment_init(in_session_id       in object.object_id%type,
                                   in_transaction_id   in object.object_id%type,
                                   in_action_id         in     action.action_id%type,
                                   in_action_object_id in object.object_id%type
                                   ) is

  v_procedure_name      constant system_log.program_name%type := pkg_name || 'sp_partner_assignment_init';
  v_session_control     pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
  v_product_id          pd_product.PD_PRODUCT_ID%type;
  v_program_id          program.PROGRAM_ID%type;
  v_filing_id           pd_filing.pd_filing_id%TYPE;
  v_expression_value    object_bv_value.business_variable_value%type;
  
  cursor c_partner_assignment (
        in_action_id in action.ACTION_ID%type, 
        in_product_id in pd_product.PD_PRODUCT_ID%type, 
        in_program_id in program.PROGRAM_ID%type, 
        in_filing_id in pd_filing.PD_FILING_ID%type
    ) is
    select 
        pa.SOURCE_RULE_ID,
        pa.TARGET_BV_PATH
    from 
        PARTNER_ASSIGNMENT pa
    where
        ACTION_ID = in_action_id
        and (pa.ACTIVE_TF is null or pa.ACTIVE_TF = 'T')
        and (pa.PD_PRODUCT_ID is null or pa.PD_PRODUCT_ID in (in_product_id, pkg_os_constant.gDefaultProductID))
        and (pa.PROGRAM_SET_ID is null or pkg_os_program.fn_program_in_set(in_program_id, pa.PROGRAM_SET_ID) = 'T')
        and (pa.PD_FILING_ID is null or pa.PD_FILING_ID <= in_filing_id)
        and (pa.LAST_PD_FILING_ID is null or pa.LAST_PD_FILING_ID >= in_filing_id)
    order by pa.SEQUENCE_NBR;
  
  begin 
    if v_session_control.gLogging_Full 
        then
            pkg_os_logging.sp_log( 
                in_session_id, 
                in_transaction_id, 
                v_procedure_name,
                'Partner Assignment initialization start. ' ||
                ' Action Id:' || in_action_id ||
                ' Action Object Id:' || in_action_object_id);
        end if;   

    v_product_id := pkg_os_product.fn_object_product_get(
                          in_session_id,
                          in_transaction_id,
                          in_action_object_id);

    v_program_id := PKG_OS_PROGRAM.fn_object_program_get(
                          in_session_id,
                          in_transaction_id,
                          in_action_object_id);

    v_filing_id := pkg_os_product.fn_object_adoption_filing_get(
                          in_session_id,
                          in_transaction_id,
                          in_action_object_id);

    for v_partner_assignment in c_partner_assignment(in_action_id, v_product_id, v_program_id, v_filing_id) loop

        v_expression_value := pkg_os_exp.fn_evaluate_expression( 
                                    in_session_id, 
                                    in_transaction_id, 
                                    in_action_object_id, 
                                    v_partner_assignment.SOURCE_RULE_ID);
        
        pkg_os_object_io.sp_object_bv_path_set( 
              in_session_id, 
              in_transaction_id, 
              in_action_object_id, 
              v_partner_assignment.TARGET_BV_PATH, 
              v_expression_value);

        if v_session_control.gLogging_Full 
            then
                pkg_os_logging.sp_log( 
                    in_session_id, 
                    in_transaction_id, 
                    v_procedure_name,
                    '... expression value: ' || v_expression_value || 
                    '; product id: ' || v_product_id || 
                    '; program id: ' || v_program_id || 
                    '; filing id: ' || v_filing_id);
            end if;   

    end loop;
  
  exception
    when others then
    
      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while setting VB Value via PARTNER_ASSIGNMENT ' ||
                                  '  Error Msg: ' || sqlerrm);
    
  end sp_partner_assignment_init;
--end UTPRODUCT-4200
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_pol_max_policy_num_get
(
         in_session_id                  object.object_id%type,
         in_transaction_id              object.object_id%type,
         in_policy_id                   object.object_id%type

)
return varchar2
is
       v_max_pol_num        varchar2(50);
begin

       if NVL( pkg_os_product.fn_product_property_get (in_session_id, in_transaction_id, in_policy_id, 18848) ,'False'  ) =  'True'
       then 

            select max(pt.POLICY_TRX_POLICY_NUMBER)
              into v_max_pol_num
              from dragon_policy_trx pt
             where pt.policy_id = in_policy_id
               and pt.policy_trx_object_state_id =
                   pkg_os_policy_transaction.gState_PolicyTrxProcessed;

       end if;
                 

return v_max_pol_num;

end fn_pol_max_policy_num_get;
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_pol_most_recnt_func_trx_get_old
(
         in_session_id                  object.object_id%type,
         in_transaction_id              object.object_id%type,
         in_policy_id                   object.object_id%type
) return number

is
  v_most_recent_trx_id number;
begin

    select
                     nvl(max(pt.policy_trx_id),0)
     into
                     v_most_recent_trx_id
     from
                     dragon_policy_trx pt
     where
                     pt.policy_id = in_policy_id
	and              pt.associated_ptp_id is not null       --child_PolicyTransaction_Policy
     and
     (
          (
                          pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                          and
                          pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id,35846) = 'T'               --g_ObjStateSet_PrcessedPending
          )
          or
          (
                          pt.policy_trx_object_state_id  = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                          and
                          pkg_os_policy_transaction_type.fn_transaction_type_in_set ( policy_trx_type_id , 7846  ) = 'T' --g_PdTrxSet_All_Non_Floating

          )
		or 
		(
         pt.object_source = 1
         and
         pkg_os_policy_transaction_type.fn_transaction_type_in_set ( policy_trx_type_id , 7846  ) = 'T' --g_PdTrxSet_All_Non_Floating
     ));
return v_most_recent_trx_id;

end fn_pol_most_recnt_func_trx_get_old;
--OSPRODUCT-13764
function fn_pol_most_recnt_func_trx_get
(
         in_session_id                  object.object_id%type,
         in_transaction_id              object.object_id%type,
         in_policy_id                   object.object_id%type
) return number

is

  v_most_recent_trx_id    number;
  
  v_object_source_id      object_bv_value.business_variable_value%type; 
  
  gbv_policy_ref_currtrx    constant number(12) := 212027;
  
   v_object_type_id     number    := pkg_os_object.fn_object_type_get(in_session_id,
                                                                   in_transaction_id,
                                                                   in_policy_id);
  
begin

	if v_object_type_id  = pkg_os_constant.gobjType_Policy then 
	
   v_most_recent_trx_id :=    pkg_os_policy_transaction.fn_policytx_closest_by_class
                  (
                  in_session_id,
                  in_transaction_id,
                  in_policy_id,
                  pkg_os_policy_transaction.gTrxClass_PremiumBearing,
                  '30000101010101',  -- some ridiculously high date, so that we can get latest ...
                  'F',
                  null               -- transaction-id to exclude.
                 );

 
      ----
    ---- Most Recent Trxn is null
    ----
      if v_most_recent_trx_id is null 
    then

      v_object_source_id :=  pkg_os_object_io.fn_object_bv_path_get( in_session_id, in_transaction_id, in_policy_id,pkg_pc_procedures.gbv_source   );

      ----
      ---- When Legacy Policy 
      ----
      if v_object_source_id = 1 
      then 

        v_most_recent_trx_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_policy_id,gbv_policy_ref_currtrx);

      end if;-- When Legacy Policy

    end if;---- Most Recent Trxn is null
	
	 end if; --if policy

return v_most_recent_trx_id;
end fn_pol_most_recnt_func_trx_get;
-----------------------------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-13989
function fn_pol_most_recnt_trx_term_get
(
         in_session_id                  object.object_id%type,
         in_transaction_id              object.object_id%type,
         in_term_id                   object.object_id%type
) return number

is
  v_most_recent_trx_id number;
  v_policy_id object.object_id%type := pkg_os_object.fn_object_parent_get(in_session_id, in_transaction_id, in_term_id);
  
begin

    select
                     nvl(max(pt.policy_trx_id),0)
     into
                     v_most_recent_trx_id
     from
                     dragon_policy_trx pt
     where
                pt.policy_term_id = in_term_id and
        policy_id = v_policy_id and
      ASSOCIATED_PTP_ID is not null --child_PolicyTransaction_Policy
     and
     (
          (
                          pt.policy_trx_type_id = pkg_os_policy_transaction.gPolicyTrxType_NewBusiness -- 9
                          and
                          pkg_os_object.fn_object_state_in_set_tf (pt.policy_trx_object_state_id,35846) = 'T' --g_ObjStateSet_PrcessedPending
          )
          or
          (
                          pt.policy_trx_object_state_id = pkg_os_policy_transaction.gState_PolicyTrxProcessed
                          and
                          pkg_os_policy_transaction_type.fn_transaction_type_in_set ( policy_trx_type_id , 7846 ) = 'T' --g_PdTrxSet_All_Non_Floating

          )
          or
          (
         pt.object_source = 1
         and
         pkg_os_policy_transaction_type.fn_transaction_type_in_set ( policy_trx_type_id , 7846 ) = 'T' --g_PdTrxSet_All_Non_Floating
     ));
return v_most_recent_trx_id;

end fn_pol_most_recnt_trx_term_get;
--end OSPRODUCT-13989


  --OSPRODUCT-15381
  function fn_most_latest_trx_term_get(in_session_id     object.object_id%type,
                                       in_transaction_id object.object_id%type,
                                       in_term_id        object.object_id%type)
    return number
  
   is
    v_most_recent_trx_id number;
  begin
  
    select nvl(max(pt.policy_trx_id), 0)
      into v_most_recent_trx_id
      from dragon_policy_trx pt
     where pt.policy_term_id = in_term_id
          
       and pkg_os_policy_transaction_type.fn_transaction_type_in_set(policy_trx_type_id,
                                                                     33148) = 'T';
    return v_most_recent_trx_id;
  
  end fn_most_latest_trx_term_get;
  --end OSPRODUCT-15381
-----------------------------------------------------------------------------------------------------------------------------------------------------
--LIOPRODUCT-517
function fn_get_actortype_user_cnt 
(
     in_session_id                   in         object.object_id%type,
     in_transaction_id               in         object.object_id%type,
     in_actor_type_set_id            in         object.object_id%type,
     in_partner_object_id            in         object.object_id%type
)
return number  
is
v_procedure_name constant system_log.program_name%type := pkg_name || 'fn_get_actortype_user_cnt';
v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                            in_transaction_id);
v_return                          number; 
BEGIN

select 

count(user_full_name) 
into 
      v_return
from
      dragon_user du
where   
      du.actor_type_id in 
      (select atsv.actor_type_id 
      from actor_type_set_values atsv 
      where actor_type_set_id=in_actor_type_set_id)
and 
      status_id = 75
and   
      partner_id = in_partner_object_id
and   
      user_full_name is not null;
      
        
  if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log
                         (
                         in_session_id,
                         in_transaction_id,
                         v_procedure_name,
                         'in_actor_type_set_id    : ' || in_actor_type_set_id ||
                         'in_partner_object_id    : ' || in_partner_object_id ||
                         'v_return    : ' || v_return
                         );
            end if;
      
   RETURN v_return;    
      
END fn_get_actortype_user_cnt;

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
--UTPRODUCT-4730 start
function fn_check_role_for_search(in_session_id            in object.object_id%type,
                                    in_transaction_id        in object.object_id%type,
                                    in_role_bv_values      in varchar2,
                                    in_indicator         in varchar2
                                    )
return char is
v_return_value char := 'F';
v_role_type_list pkg_os_token.t_string_table;
v_role_index number := null;
v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'fn_check_role_for_search'; -- procedure name
v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id); -- bv distinguishing between person and business

cursor rolet is select t.role_type from role_type t where t.role_object_type_id = gObjType_Partner;

begin
 pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          'in_role_bv_values: ' || in_role_bv_values);

pkg_os_token.sp_tokenize_string(in_role_bv_values, ',', v_role_type_list);

v_role_index := v_role_type_list.first;


 while v_role_index is not null loop

  if in_indicator = 'ALLPARTNERTYPE' then
    for i in rolet loop
      if TRIM(v_role_type_list(v_role_index)) = i.role_type then
      v_return_value := 'T';
      end if;
    end loop;
  end if;

  if in_indicator = 'BROKERONLY' then
  if TRIM(v_role_type_list(v_role_index)) = 'Broker' then
  v_return_value := 'T';
  end if;
  end if;
  
  if in_indicator = 'PAYER' then
  if lower(TRIM(v_role_type_list(v_role_index))) = 'payer' then
  v_return_value := 'T';
  end if;
  end if;
  
  
  v_role_index := v_role_type_list.next(v_role_index);
 end loop;
 
return  v_return_value;

end fn_check_role_for_search;
--UTPRODUCT-4730 end
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--  %NAME
--      fn_object_currency_get
--
--  %USAGE
--      Not Specified.
--
--  %ALGORITHM
--      Not Specified.
--
--  %PARAM     in_session_id    Session ID
--  %PARAM     in_transaction_id  Transaction ID
--  %PARAM     in_object_id      Object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_object_currency_get
(
     in_session_id      in       object.object_id%type,
     in_transaction_id  in       object.object_id%type,
     in_object_id       in       object.object_id%type
)
return currency.currency_id%type is

  v_procedure_name   constant    system_log.program_name%type := pkg_name || 'fn_object_currency_get';
  v_return_value                currency.currency_id%type;
  v_exchange_id                 exchange.exchange_id%type;

begin

       if in_object_id is null
       then
          v_exchange_id      := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_session_id, pkg_os_constant_bv.gbv_SessionExchange );
          v_return_value     := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_exchange_id, 31908070 );  -- Default exchange currency id
          
          if nvl(v_return_value, 0) = 0
          then
             v_return_value := 2746;      -- Defaulting currency to USD   
          end if;
          
          return v_return_value;
       end if;
       
       -- Get the currency id of the current object
       v_return_value      := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_object_id, 33076948 );    -- Currency ID BV of GenericObject
       
       if nvl(v_return_value, 0) <> 0
       then
          return v_return_value;
       else
            return fn_object_currency_get( in_session_id, in_transaction_id, pkg_os_object.fn_object_parent_get( in_session_id, in_transaction_id, in_object_id ));
       end if;

exception
     when others then
          pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while getting currency id. Defaulting currency to USD ' ||
                                  '  Error Msg: ' || sqlerrm);
          v_return_value := 2746;      -- Defaulting currency to USD 
          return v_return_value;

end  fn_object_currency_get;
----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
--OSPRODUCT-12207 start
function fn_check_existing_customer(in_session_id     in object.object_id%type,
                   in_transaction_id in object.object_id%type,
                   in_pt_id     in object.object_id%type)
  
   return char is
   
   v_procedure_name constant system_log.program_name%type := pkg_name ||'fn_check_existing_customer'; -- function name
   v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
   
   
  v_return_value      char := 'T';
  v_object_pol_list       pkg_os_object.t_object_list;
  v_object_pol_index      number;
  v_object_qt_list      pkg_os_object.t_object_list;
  v_object_qt_index     number;
  v_compare_ptp_id        object.object_id%type;
  v_ptp_id            object.object_id%type := pkg_os_object_io.fn_object_bv_get
                        ( 
                          in_session_id, 
                          in_transaction_id, 
                          in_pt_id, 
                          gbv_Ref_Coverages    
                        );
                        
  v_cust_entity_id     object.object_id%type := pkg_os_object_io.fn_object_bv_path_get
                        ( 
                          in_session_id, 
                          in_transaction_id, 
                          v_ptp_id, 
                          gbv_ptp_ChildprimaryEntity    
                        );
  v_lob_id              object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get
                                                                                    ( 
                                                                                      in_session_id, 
                                                                                      in_transaction_id, 
                                                                                      v_ptp_id, 
                                                                                      211636    --Policy Product Definition ID
                                                                                    );
  v_compare_lob_id      object_bv_value.business_variable_value%type;                                       
   
  v_entity_orm_id       object_bv_value.business_variable_value%type := pkg_os_object_io.fn_object_bv_get
                                                                                    ( 
                                                                                      in_session_id, 
                                                                                      in_transaction_id, 
                                                                                      v_cust_entity_id, 
                                                                                      32234146    --Entity Relationship Management - ID
                                                                                    );
                                          
  v_producing_agency     object.object_id%type := pkg_os_object_io.fn_object_bv_get
                            ( 
                            in_session_id, 
                            in_transaction_id, 
                            in_pt_id, 
                            gbv_GenericProducingAgency --26590907
                            ); --gBV_ProducingAgencyId);
                            
                          
   
   cursor c_orm_matching_cust(in_orm_id in varchar2, in_producing_agency in number)
    is
      select * from dragon_customer
      where ENTITY_RELATIONSHIP_MGMT_ID = in_orm_id
      and
        CUSTOMER_AGENCY_ID is not null
      and CUSTOMER_AGENCY_ID != in_producing_agency;
begin
  if v_session_control.gLogging_Full then

     pkg_os_logging.sp_log
     (
          in_session_id,
          in_transaction_id,
          v_procedure_name, '......Start - PT ID:'||in_pt_id||
           '...v_producing_agency'|| v_producing_agency||
           '...v_ptp_id'|| v_ptp_id||
           '...v_lob_id'|| v_lob_id||
           '...v_cust_entity_id'|| v_cust_entity_id||           
           '...v_entity_orm_id'|| v_entity_orm_id
      );
   end if;

  for i in c_orm_matching_cust(v_entity_orm_id, v_producing_agency) loop

    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                in_transaction_id,
                                i.customer_id,
                                gObjectType_policy,
                                v_object_pol_list,
                                null,
                                true
                                );
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                in_transaction_id,
                                i.customer_id,
                                gObjectType_qt,
                                v_object_qt_list,
                                null,
                                true
                                );
    
    v_object_pol_index := v_object_pol_list.first;
    while v_object_pol_index is not null loop
      v_compare_lob_id := pkg_os_object_io.fn_object_bv_get
                ( 
                  in_session_id, 
                  in_transaction_id, 
                  v_object_pol_list(v_object_pol_index), 
                  211636    --Policy Product Definition ID
                );
      if  v_lob_id  =  v_compare_lob_id then
      v_return_value := 'F';
      end if;
    v_object_pol_index := v_object_pol_list.next(v_object_pol_index);
    end loop;
    
    v_object_qt_index := v_object_qt_list.first;
    while v_object_qt_index is not null loop
      
      v_compare_ptp_id := pkg_os_object_io.fn_object_bv_get
                        ( 
                          in_session_id, 
                          in_transaction_id, 
                          v_object_qt_list(v_object_qt_index), 
                          gbv_Ref_Coverages    
                        );
      v_compare_lob_id := pkg_os_object_io.fn_object_bv_get
                ( 
                  in_session_id, 
                  in_transaction_id, 
                  v_compare_ptp_id, 
                  211636    --Policy Product Definition ID
                );
      if  v_lob_id  =  v_compare_lob_id then
      v_return_value := 'F';
      end if;
    v_object_qt_index := v_object_qt_list.next(v_object_qt_index);
    end loop;
  end loop;
  return v_return_value;
end fn_check_existing_customer;
--OSPRODUCT-12207 end

/***********************************************************************************************************************************************
  -- UTPRODUCT-1485
  -- %NAME
  --        fn_get_trxmailing_date
  --
  -- %USAGE
  --      Set  Transaction mailing date for a transaction to be used to mail the documents.
  --      Set this date during process WF
  --
  -- %ALGORITHM
  --
  --     Transaction mailing date = Policy current date 
                                 + Mailing days specified for the transaction type in complaince table (default is 0 days)
                                  + Sat/sun/Holiday restrictions(no data in pd_state_compliance then default is False)
   --     When No data found in compliance table , Transaction mailing date is set to system current date.
  *******************************************************************************************************************************************/
 
 function fn_get_trxmailing_date(in_session_id     in object.object_id%type,
                                 in_transaction_id in object.object_id%type,
                                 in_pol_trx_id     in object.object_id%type

                                           )

   return date is
   
    v_policy_trx_id      object.object_id%type ;
    v_policy_trx_type_id pd_transaction_type.pd_transaction_type_id%type;
    v_policy_id          object.object_id%type;
    v_jurisdiction_id    object_bv_value.business_variable_value%type;
    v_product_id         pd_product.pd_product_id%type;
    v_filing_id          pd_filing.pd_filing_id%type;
    v_program_id         program.program_id%type;
    v_target_cancel_date date;
    v_pol_eff_date       date;
    v_poltrx_eff_date    date;
    v_sys_curr_date      date;
    v_trx_mail_date      date; 
    v_trx_process_date   date;
    v_mailing_days       integer := 0;
    v_ssh_tf             char(1) := 'F';

   

    v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                              'fn_get_trxmailing_date';
    v_session_control pkg_os_session.r_dragon_session_control;

  begin
     
  
    v_policy_trx_id      := in_pol_trx_id;

    v_policy_trx_type_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_trx_id,
                                                              pkg_os_constant_bv.gbv_PolicyTranType);
    v_policy_id          := pkg_os_object.fn_object_parent_get(in_session_id,
                                                               in_transaction_id,
                                                               v_policy_trx_id);
    v_product_id         := pkg_os_product.fn_object_product_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_policy_id);
    v_filing_id          := pkg_os_product.fn_object_adoption_filing_get(in_session_id,
                                                                         in_transaction_id,
                                                                         v_policy_id);
    v_sys_curr_date      := trunc(pkg_db_functions.fn_get_policy_current_date(in_session_id,
                                                                              in_transaction_id,
                                                                              v_policy_id));
    v_jurisdiction_id    := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_id,
                                                              pkg_os_constant_bv.gbv_GenObjJurisdiction); --primary risk Jurisdiction value
    v_program_id         := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              v_policy_id,
                                                              pkg_os_constant_bv.gbv_GenObjProgram); 
                                                           
                                                              
  

    -- Retrieve the compliance data from pd_state_compliance table to calculate transaction mailing date
    begin
      select 
             pc.mailing_days,
             pc.sat_sun_hol_tf
        into 
             v_mailing_days,
             v_ssh_tf

        from pd_state_compliance pc

       where pc.transaction_type_id = v_policy_trx_type_id
         and pc.Jurisdiction_id = v_jurisdiction_id
         and pc.pd_product_id in
             (v_product_id, pkg_os_constant.gDefaultProductID)
         and pc.pd_filing_id <= v_filing_id
         and (pc.last_pd_filing_id is null or
             pc.last_pd_filing_id >= v_filing_id)
         and (pc.program_id is null or pc.program_id = v_program_id)
         and (pc.program_set_id is null or
             pkg_os_program.fn_program_in_set(v_program_id,
                                               pc.program_set_id) = 'T');

    exception
      when no_data_found then
        v_mailing_days := 0;
        v_ssh_tf := 'F' ;
        if v_session_control.gLogging_Full then

          pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                ' No Data found in pd_state_compliance table for Policy  ' ||
                                v_policy_id ||
                                'Set mailing days to 0  ' ||
                                v_mailing_days ||
                                ' Set compliance Sat Sun Holiday Restriction applies TF to True to include Sat/Sun/Holidays into the calculation ' ||
                                v_ssh_tf );

        end if;
       
    end;

    -- Calculate Transaction mailing date
    
      v_trx_mail_date := v_sys_curr_date +  v_mailing_days;
    
      if nvl(v_ssh_tf, 'F') = 'T' then
          v_trx_mail_date    := pkg_base_calendar.fn_get_next_available_day(in_session_id,
                                                                          in_transaction_id,
                                                                          v_policy_id,
                                                                          v_trx_mail_date); -- Include Saturday, Sunday and Holiday
                                                                          
       end if;

       

    if v_session_control.gLogging_Full then

      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            'Calculating Transaction Mailing Date for the Transaction ' ||
                              v_policy_trx_id  ||
                            'Transaction type is                       ' ||
                            v_policy_trx_type_id ||
                            'Transaction process Date    ' ||  v_sys_curr_date ||
                            'Transaction Mailing Date ' || v_trx_mail_date 
                            );

    end if;
    return v_trx_mail_date;

  exception
    when no_data_found then 
           pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... No data found exception while calculating Transaction Mailing Date,set date to current date ' ||
                                  '  Error Msg: ' || sqlerrm);
            v_trx_mail_date :=  v_sys_curr_date;
            
            return    v_trx_mail_date;                   
                                  
    when others then

      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while calculating Transaction Mailing Date,set date to current date ' ||
                                  '  Error Msg: ' || sqlerrm);
                                  
            v_trx_mail_date :=  v_sys_curr_date;
            
            return    v_trx_mail_date;  

  end fn_get_trxmailing_date;
  
----------------------------------------------------------------------------------------------------------------------------------------------------
----LXPRODUCT-175 Start

function fn_get_max_expiration_date(in_session_id     object.object_id%type,
                                    in_transaction_id object.object_id%type,
                                    in_policy_id      object.object_id%type)
  return varchar2 is

  v_policy_expiration_date   date;
  v_policy_cancellation_date date;
  v_max_exp_date             date;
  v_date_format              varchar2(50) := 'YYYYMMDDHH24MISS';

begin

    ---- get policy expiration date 

    v_policy_expiration_date := to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                          in_transaction_id,
                                                                          in_policy_id,
                                                                          gbv_PolicyExpirationDate), v_date_format);
    
    ---- get policy cancellation date 
    
    v_policy_cancellation_date := to_date(pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                            in_transaction_id,
                                                                            in_policy_id,
                                                                            gbv_PolicyCancellationDate),v_date_format);
    
    select max(case
                  when policy_trx_type_id in
                      (g_TrxType_NewBusiness,
                       g_TrxType_Rewrite,
                       g_TrxType_Cancellation,
                       g_TrxType_Endorsement,
                       g_TrxType_NewBusinessRewrite,
                       g_TrxType_ERPNewPolicy) 
	  			then
                       to_date(to_char(policy_trx_image_exp_date, v_date_format),v_date_format)
                  when policy_trx_type_id = g_TrxType_Renewal 
	  			then
                       decode(policy_trx_object_state_id,gObjState_Processed,to_date(to_char(policy_trx_image_exp_date, v_date_format),v_date_format),v_policy_expiration_date)
                  when policy_trx_type_id = g_TrxType_Reinstatement 
	  			then
                       v_policy_cancellation_date
					   WHEN policy_trx_type_id in (g_TrxType_NonRenewal,g_TrxType_EliminateNonRenewl)
                         THEN  to_date(to_char( POLICY_TRX_IMAGE_EFF_DATE, v_date_format),v_date_format)   
                         
                  else
                       v_policy_expiration_date
              end)
      into v_max_exp_date
      from dragon_policy_trx
     where policy_id = in_policy_id
       and policy_trx_object_state_id not in (g_ObjState_Rejected, gObjState_Rolledback); --- exclude rolledback/REJECTED trx
    
    return to_char(v_max_exp_date, v_date_format);

exception
  when others then
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                'fn_get_max_expiration_date',
                                SQLCODE || ' ' || SQLERRM);

	return null;

end fn_get_max_expiration_date;

----LXPRODUCT-175 End
----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------UTPRODUCT-4807----------
function fn_check_pending_trx
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type
)
return varchar2 AS
v_pending number;
begin
  select count(1) into v_pending
  from dragon_policy_trx
  where policy_id = in_object_id 
  and policy_trx_object_state_id not in ( 23 , 106 , 27502 , 34902 , 28905 ,57131 ,57231 ,57331 ,57431 , 65846 ,65246 );
  if v_pending > 0 then
    return 'T';
  else 
    return 'F';
  end if;
end;

function fn_check_compare_detail
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type
)
return varchar2 AS
v_count number;
begin
  pkg_os_logging.sp_log(in_session_id,in_transaction_id,'fn_check_compare_detail','object id:'||in_object_id);
  select count(1) into v_count
  from orm_object_change_detail
  where change_object_id = in_object_id;
  if v_count > 0 then
    return 'T';
  else 
    return 'F';
  end if;
end;
-----------------UTPRODUCT-4807 END---------

-----------------OSPRODUCT-13607 START---------
function fn_check_delpref_delivery_mode_email
     (
          in_session_id      in object.object_id%type,
          in_transaction_id  in object.object_id%type,
          in_object_id       in object.object_id%type -- CustomerEntity       
      )
return varchar2
is

    v_session_control    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_procedure_name     constant system_log.program_name%type   := 'fn_check_delpref_delivery_mode_email';          
    v_object_list        pkg_os_object.t_object_list;
    v_object_list_index  number;
    v_delivery_mode    number := 0;
          
begin

    if v_session_control.gLogging_Full
    then

        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            ' |||||| Get all the child delivery preference of the customer Entity id : '   ||   in_object_id 
        );

    end if;
    
    v_object_list.delete;
          
    pkg_os_object_search.sp_object_children_of_type_get
    (
        in_session_id,
        in_transaction_id,
        in_object_id,
        3144746,                    --DocumentDeliveryPreference
        v_object_list
    );
          
    v_object_list_index := v_object_list.first;
          
    if v_object_list_index is null
    then
             
        if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                ' |||||| No Delivery Preference found for the customer Entity' 
            );

        end if;
         return 'F';    
    end if;

    -- Loop through list of Delivery Preference and check the Delivery mode
    while v_object_list_index is not null 
    loop
        v_delivery_mode :=0;
        
        v_delivery_mode := pkg_os_object_io.fn_object_bv_get(
                              in_session_id,
                              in_transaction_id,
                              v_object_list( v_object_list_index ),
                              31707046);
        
        if NVL(v_delivery_mode,0) <> 346 --Email
        then
           return 'F';
        end if;
            if v_session_control.gLogging_Full
        then

            pkg_os_logging.sp_log
            (
                in_session_id,
                in_transaction_id,
                v_procedure_name,
                ' v_object_list( v_object_list_index ) ' ||v_object_list( v_object_list_index ) ||
                'v_delivery_mode '||v_delivery_mode
            );

        end if;
        v_object_list_index := v_object_list.next( v_object_list_index );

    end loop; -- For each Delivery Preference object ...
          
    return 'T';
          
end fn_check_delpref_delivery_mode_email;

-----------------OSPRODUCT-13607 END---------

function fn_validate_queue_assignment_type_tf(in_session_id      in object.object_id%type,
                                              in_transaction_id  in object.object_id%type,
                                              in_queue_id       in object.object_id%type,
                                              in_assignment_type number
                                       )
    return char is
  
    v_return_value char(1) := null;
  
  begin
  
  
  select decode(count(1), 0, 'T', 'F')
    into v_return_value
    from QUEUE_OBJECT_DETAIL       Q,
         DRAGON_TASK               T,
         QUEUE_OBJECT_ASGMT_DETAIL QOAD,
         DRAGON_QUEUE_DEFINITION   DQD
   WHERE Q.ASSIGNED_OBJECT_ID = T.TASK_ID
     AND Q.QUEUE_OBJECT_DETAIL_ID = QOAD.QUEUE_OBJECT_DETAIL_ID(+)
     AND Q.QUEUE_ID = DQD.QUEUE_DEFINITION_ID
     AND T.TASK_STATUS_ID in (2, 42346)
     AND Q.QUEUE_ID = in_queue_id 
     AND Q.ASSIGNMENT_STATUS_ENUM = 2 
     AND Q.ASSIGNMENT_TYPE_ENUM <> in_assignment_type;
  
    return v_return_value;
  
  end fn_validate_queue_assignment_type_tf;

  ---------------------------OSPRODUCT-12526 START----------------------------------------

function fn_get_policy_insurance_line
     (
          in_session_id      in object.object_id%type,
          in_transaction_id  in object.object_id%type,
          in_object_id       in object.object_id%type -- CustomerEntity       
      )
return varchar2
is

    v_session_control           pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_procedure_name            constant system_log.program_name%type   := 'fn_get_policy_insurance_line';          
    v_program                   program.program_id%type;
    v_return_insurance_line     program.program_insurance_line_id%type;
          
begin
        v_program := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_object_id, 30223101 );
        
        if v_program is not null then
          
          Begin
        
           select PROGRAM_INSURANCE_LINE_ID 
           into v_return_insurance_line 
           from program 
           where program_id=v_program ;
         
         exception 
           when others then
           v_return_insurance_line := null;
           end;
           
         else 
           v_return_insurance_line:= null;
         end if;

    if v_session_control.gLogging_Full
    then

        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            ' |||||| v_program : '   ||   v_program ||
            ' |||||| v_return_insurance_line ' ||v_return_insurance_line 
        );

    end if;
          
    return v_return_insurance_line;
          
end fn_get_policy_insurance_line;

----OSPRODUCT-14151 start -----------------------------------------------------------------------------------------

function fn_check_if_multi_useridentity_roles_exist
(in_session_id   IN              object.object_id%type, 
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type
) 
return varchar2 AS 

gBv_DragonUserEmailID                       CONSTANT business_variable.business_variable_id%type := 211461;
gBv_DragonUserEmailObj                      CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID               CONSTANT business_variable.business_variable_id%type := 30028946;
gObjType_DragonUser                         CONSTANT object_type.object_type_id%TYPE := 309;
gObjType_CustomerEntity                     CONSTANT object_type.object_type_id%TYPE := 205;
gBV_CustomerEntityRefPreferredEmailObj      CONSTANT business_variable.business_variable_id%type := 32681746;
gBV_CustomerEntityRefPreferredEmail         CONSTANT business_variable.business_variable_id%type := 30028946;
gBv_UserIdentityRole_Role                   CONSTANT business_variable.business_variable_id%type := 32776008;
gObjType_UserIdentityRole           CONSTANT    object_type.object_type_id%TYPE := 3455408;

v_returnFlag_check char := 'F';
v_email_inObj           object_bv_value.business_variable_value%type;
v_userIdentity                      object.object_id%TYPE;
v_email_Obj           object_bv_value.business_variable_value%type;
v_object_type_id        object_type.object_type_id%TYPE;
v_object_index                 number;
v_object_list                  pkg_os_object.t_object_list;
v_userIdentityRole_Role        number := 0;


BEGIN
--Check the Object type
v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

if  v_object_type_id = gObjType_DragonUser
then
    -- Get the Dragon user attributes needed
    v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailID);

    if v_email_inObj is null then
            
         v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailObj);   
                                                        
                                                        
        v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_email_Obj,
                                                        gBv_DragonUserEmailObjEmailID);
            
            
    end if;
else
    if  v_object_type_id = gObjType_CustomerEntity
        then
            ---get the customer entity details

            v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                in_transaction_id,
                                                                in_object_id ,
                                                                gBV_CustomerEntityRefPreferredEmailObj); 

            v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                in_transaction_id,
                                                                v_email_Obj,
                                                                gBV_CustomerEntityRefPreferredEmail);
    end if;
end if;
            
                                                        
--Search if UserIdentity object exist for User's email
                BEGIN
                    select USER_IDENTITY_ID 
                    into v_userIdentity
                    from USER_IDENTITY 
                    where lower(EMAIL) = lower(v_email_inObj);
                EXCEPTION
                    WHEN no_data_found THEN
                    v_userIdentity := null;
                END; 
                  
--Set the flag to true if found else false

                if v_userIdentity is null 
                    then 
                        v_returnFlag_check := 'F'; 
                else
                    if v_userIdentity is not null
                        then   --Check if the any UserIdentityRole is External or internal role 
                        -------------------------------------
                        pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      v_userIdentity,
                                                      gObjType_UserIdentityRole,
                                                      v_object_list);
                           
                         v_object_index := v_object_list.first;

                        --Iterate over each child UserIdentityRole object

                        while v_object_index is not null loop
                          
                           v_userIdentityRole_Role := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_object_list(v_object_index),
                                                                 gBv_UserIdentityRole_Role);
                           
                           if v_userIdentityRole_Role = 3 --If UserIdentityRole type is partner
                           then
                            v_returnFlag_check := 'T'; 
                           end if;  
                            v_object_index := v_object_list.next(v_object_index);
                        end loop;  
                         
                    end if;
                end if;
                        
  RETURN v_returnFlag_check;
END fn_check_if_multi_useridentity_roles_exist;

----OSPRODUCT-14151 End ------------------------------------------------------------------------------------

/***********************************************************************************************************************************************
  -- UTPRODUCT-4766
  -- %NAME
  --        fn_effective_renewal_exists_tf
  --
  -- %USAGE
  --     If renewal exists for policy that is in processed state and not yet effective from the current date
  --      then do not allow the user to create a non renewal transaction.Trigger a Validation rule on the UI.
  --      
  --
  -- %ALGORITHM
  --
  --    #1 Get recent Renewal transaction ID using Transaction sequence BV
  --    #2: If no RN exists then return 'T' else check if the renewal transaction is in processed state and effective date is not yet current
   --   #3: If not yet current RN processed transaction exists, return 'F' to trigger a validation rule                             
  ***************************************************************************************************************************************/

 function fn_effective_renewal_exists_tf (in_session_id      in object.object_id%type,
                                           in_transaction_id  in object.object_id%type,
                                           in_policy_id       in object.object_id%type

                                          ) 
  return char is 
  
 v_procedure_name constant system_log.program_name%type := pkg_name ||'fn_effective_renewal_exists_tf';
 v_session_control pkg_os_session.r_dragon_session_control; 
 v_noneffectiveRN_count   number         :=0;
 v_renewal_trx_id  object.object_id%type;
 v_policy_id   object.object_id%type    := in_policy_id;
  
 begin
     --get last Renewal transaction from the policy, using pd_property rule id 8477446 to get Renewal/non renewal transaction and 
      --to sort by Transaction Sequence BV ID32214598
        begin
          select  PKG_OS_UTILITY.fn_get_one_child_of_type ( in_session_id,in_transaction_id, v_policy_id , 629 , 8477446, 32214598 ) 
          into    v_renewal_trx_id 
          from    dual;
          exception
          when no_data_found then
             if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log(in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                        ' No Renewals for Policy  ' ||
                                        v_policy_id ||
                                        'Return T '
                                        );

              end if;
            return 'T';
          end;
          
     --Check if returned transaction is Renewal processed and the effective date is current
      begin
           select count(1) into v_noneffectiveRN_count
           from dragon_policy_trx dt 
           where dt.policy_trx_id = v_renewal_trx_id 
           and dt.policy_trx_type_id = 8 
           and ( trunc(dt.policy_trx_eff_date) > trunc(pkg_db_functions.fn_get_policy_current_date (0,0, v_policy_id)))
           and dt.policy_trx_object_state_id=106;  
           exception
           when no_data_found then
               
                if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log(in_session_id,
                                       in_transaction_id,
                                       v_procedure_name,
                                       ' No Data found when checking for processed and effective renewal for Policy  ' ||
                                        v_policy_id ||
                                        'Return T  '
                                       );

                end if;
            return 'T';
          end;  
  
  if v_noneffectiveRN_count > 0  then 
    
     if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                ' Processed and not effective renewal for Policy  ' ||
                                 v_policy_id ||
                                'Return F  ' );

           end if;
             
    return 'F';
  else 
  if v_session_control.gLogging_Full then

                 pkg_os_logging.sp_log(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                ' Processed and not effective renewal for Policy does not exist  ' ||
                                 v_policy_id ||
                                'Return T  ' );

           end if;
     return 'T';
  end if;
exception
    when no_data_found then 
           pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... No data found exception while checking for processed and effective renewal for the policy:  ' || v_policy_id ||
                                  '  Error message: ' || sqlerrm);
            
            return    'T';                   
                                  
    when others then

      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...... Exception while checking for processed and effective renewal for the policy:  ' || v_policy_id ||
                                  '  Error message: ' || sqlerrm);
                                  
          return    'T';  
end fn_effective_renewal_exists_tf ;
---test code by aman----------

----------------------------------------------------------------------------------------------------------------------------------
function fn_check_external_actorrole_email_combination
(in_session_id   IN              object.object_id%type,
  in_transaction_id  IN          object.object_id%type,
  in_object_id    IN        object.object_id%type,
  in_object_actorType IN  number
)
return varchar2 AS

gBv_DragonUserEmailID               CONSTANT business_variable.business_variable_id%type := 211461;
gBv_DragonUserEmailObj              CONSTANT business_variable.business_variable_id%type := 31687846;
gBv_DragonUserEmailObjEmailID       CONSTANT business_variable.business_variable_id%type := 30028946;
gBv_DragonUserActorType             CONSTANT business_variable.business_variable_id%type := 21689501;
gBv_userIdentityChildCount          CONSTANT business_variable.business_variable_id%type := 32778008;
gBv_AssociatedEntity                CONSTANT business_variable.business_variable_id%type := 32778108;
gObjType_UserIdentityRole           CONSTANT object_type.object_type_id%TYPE             := 3455408;
gBv_UserIdentityRole_Role           CONSTANT business_variable.business_variable_id%type := 32776008;

v_returnFlag_check char := 'F';

v_object_type_id        object_type.object_type_id%TYPE;
v_email_inObj           object_bv_value.business_variable_value%type;
v_actorType_inObj       object_bv_value.business_variable_value%type;
v_userIdentity                      object.object_id%TYPE;
v_associatedEntity  object.object_id%TYPE;
v_associatedEntityActorType object_bv_value.business_variable_value%type;
v_userIdentityRole_Role number := 0;
v_email_Obj           object_bv_value.business_variable_value%type;

v_object_list    pkg_os_object.t_object_list;
v_object_index   number;
v_ObjState_UserIdentityRole  number(12);
gBv_ObjStateTerminated       number(12) := 35113;



BEGIN

    -- Get the Dragon user attributes needed

    v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_object_id);

    v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailID);

    if v_email_inObj is null then

         v_email_Obj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserEmailObj);


        v_email_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_email_Obj,
                                                        gBv_DragonUserEmailObjEmailID);


        end if;

    v_actorType_inObj := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        in_object_id,
                                                        gBv_DragonUserActorType);

    -- Get the UserIdentity if exists from the dragon user's email

        BEGIN
                            select USER_IDENTITY_ID
                            into v_userIdentity
                            from USER_IDENTITY
                            where lower(EMAIL) = lower(v_email_inObj);
                            EXCEPTION
                            WHEN no_data_found THEN
                            v_userIdentity := null;
                        END;

    -- Main logic starts from here

    if v_userIdentity is null
        then
            v_returnFlag_check := 'F';


        else
            if v_userIdentity is not null
                then

                -- Get the list of children UserIdentityRole objects from the UserIdentity found

                    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                                in_transaction_id,
                                                                v_userIdentity,
                                                                gObjType_UserIdentityRole,
                                                                v_object_list
                                                                );

                    v_object_index := v_object_list.first;

                --Iterate over each child UserIdentityRole to check its associated entity's actor type

                    while v_object_index is not null
                        loop

                            v_associatedEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_object_list(v_object_index),
                                                            gBv_AssociatedEntity);


                            v_userIdentityRole_Role := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                            in_transaction_id,
                                                            v_object_list(v_object_index),
                                                            gBv_UserIdentityRole_Role);



                            if v_userIdentityRole_Role = 3   -- UIR role is agency user
                                then
                                    v_associatedEntityActorType := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                        in_transaction_id,
                                                                        v_associatedEntity,
                                                                        gBv_DragonUserActorType);
                                                                        
                                    v_ObjState_UserIdentityRole := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, v_object_list(v_object_index), pkg_os_constant_bv.gbv_GenObjObjectState);

                                        if in_object_actorType = v_associatedEntityActorType and v_associatedEntity <> in_object_id and v_ObjState_UserIdentityRole <> gBv_ObjStateTerminated
                                            then
                                                v_returnFlag_check := 'T';
                                                RETURN v_returnFlag_check;
                                        end if;


                            end if;


                            v_object_index := v_object_list.next(v_object_index);

                        end loop;

            end if;

    end if;

    RETURN v_returnFlag_check;

END fn_check_external_actorrole_email_combination;

--------------UTXPRODUCT-428-----------------------------------------------------------------------------------------------------------------------------
--
--	%NAME
--		fn_check_any_referencer_obj
--
--	%USAGE
--		This function checks if any object is being referred by another object under 
--      a specific parent in its hierarchy. It ignores the objects mentioned in pd attribute 26048.
--
--	%ALGORITHM
--		Not Specified.
--
--	%PARAM	in_session_id		        Session ID
--	%PARAM	in_transaction_id	        Transaction ID
--	%PARAM	in_relation_object_id		Object ID
--	%PARAM	in_parent_hiearchy_obj_id	Parent object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_check_any_referencer_obj(in_session_id             in object.object_id%type,
                                     in_transaction_id         in object.object_id%type,
                                     in_relation_object_id     in object.object_id%type,
                                     in_parent_hiearchy_obj_id in object.object_id%type)
  return char 
is

  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
  v_procedure_name constant system_log.program_name%type := 'fn_check_any_referencer_obj';

  v_referencer_list pkg_os_object_io.t_object_relation := pkg_os_object_io.t_object_relation();

  v_referencer_list_index              number;
  v_excluded_obj_type_flag             number;
  v_return_tf                          char(1) := 'F';
  v_qualifier_rule_tf                  char(1) := '';
  
  v_qualifier_rule_id                  rule.rule_id%type;
  v_referencer_object_state            object_state.object_state_id%type;
  v_referencer_obj_type_id             object_type.object_type_id%type;
  v_parent_object_type_id              object_type.object_type_id%type;
  v_parent_hiearchy_obj_id             object.object_id%type;
  v_referencing_object_type_id         object_type.object_type_id%type;
  

  v_excluded_types pkg_os_object_copy.t_object_type_list := pkg_os_object_copy.gnull_object_type_list;

  cursor check_exclude_Objt_type 
  is
    select 
          object_type_id,
          pd_object_qualifier_rule_id
      from 
          pd_attribute pd
     where 
         pd.pd_attribute_type_id = g_exclude_obj_pd_attribute_type
  ;

begin

  --
  -- Initialization
  --

  v_referencer_list.delete;
  v_referencer_obj_type_id := pkg_os_object.fn_object_type_get (in_session_id, in_transaction_id, in_relation_object_id);

  ---
  --- Construct the excluded' object-types based on the definition in  PD_ATTRIBUTE Table...
  ---
  for r_exclude_Objt_type in check_exclude_Objt_type 
  loop
  
       v_excluded_types(r_exclude_Objt_type.object_type_id) := r_exclude_Objt_type.pd_object_qualifier_rule_id;
      
  end loop;

  --
  -- Get all the Objects that refers the incoming Object ID via a 'Refers To' releationship
  --
  v_referencer_list := pkg_os_object_io.fn_object_ref_owners_get
                       (
                           in_session_id,
                           in_transaction_id,
                           in_relation_object_id,
                           null,
                           v_referencer_obj_type_id,
                           null
                       );

  if v_session_control.gLogging_Full 
  then
  
      pkg_os_logging.sp_log
      (
          in_session_id,
          in_transaction_id,
          v_procedure_name,
          '...The referencing Object Count : ' || v_referencer_list.count ||
          '...For Relation Object : '          || in_relation_object_id
      );
  
  end if;

  v_referencer_list_index := v_referencer_list.first;

  --
  -- Check for any valid references
  --
  while 
              v_referencer_list_index is not null 
         and 
              v_return_tf = 'F' 
  loop
  
        --
        -- Get the ObjectType for the  incoming Parent Object hiearchy Object
        --
      
        v_parent_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, in_parent_hiearchy_obj_id);
      
        --
        -- Get the parent on the Referencer Object hiearchy  matching the ObjectType of the incoming Parent Object hiearchy Objt
        --
        v_parent_hiearchy_obj_id     := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id, in_transaction_id, v_referencer_list(v_referencer_list_index).object_id, v_parent_object_type_id);
        v_referencing_object_type_id := pkg_os_object.fn_object_type_get(in_session_id, in_transaction_id, v_referencer_list(v_referencer_list_index).object_id);
      
        v_qualifier_rule_tf          := 'F';
        v_qualifier_rule_id          :=  null;
        
        --
        -- Get the the qualifying rule and evaluate it if present
        --  
        if v_excluded_types.exists(v_referencing_object_type_id) 
        then
      
            v_qualifier_rule_id  :=   v_excluded_types(v_referencing_object_type_id) ;

        end if;
  
        if v_qualifier_rule_id is null
        then
          
             v_qualifier_rule_tf := 'T';
        
        else
          
               v_qualifier_rule_tf  :=   pkg_os_exp.fn_evaluate_expression
                                         (
                                           in_session_id,
                                           in_transaction_id,
                                           v_referencer_list(v_referencer_list_index).object_id,
                                           v_qualifier_rule_id
                                         );
          
        end if;
  
  
        v_referencer_object_state := pkg_os_object_io.fn_object_bv_get(in_session_id, in_transaction_id, v_referencer_list(v_referencer_list_index) .object_id, gbv_generic_objectstate);
          
        if v_session_control.gLogging_Full 
        then
            
            pkg_os_logging.sp_log
          (
              in_session_id,
              in_transaction_id,
              v_procedure_name,
              '...Referencing Object ID: '                   || v_referencer_list(v_referencer_list_index).object_id || 
              '...Parent Object Type ID : '                  || v_parent_object_type_id ||
              '...Parent Object ID : '                       || v_parent_hiearchy_obj_id ||
              '...Referencing object qualifier rule: '       || v_qualifier_rule_id ||
              '...Referencing object qualifier rule value: ' || v_qualifier_rule_tf ||
              '...Referencing object state: '                || v_referencer_object_state
          );
            
        end if;
  
        --
        -- Check for parent hierarchy and referencer is not pointing to referencee
        --
        if 
               nvl(v_parent_hiearchy_obj_id, 0) =nvl(in_parent_hiearchy_obj_id, -1) 
           and 
               v_referencer_list(v_referencer_list_index).object_id <> in_relation_object_id 
        then
  
    
                if v_session_control.gLogging_Full 
                then
            
                      pkg_os_logging.sp_log
                      (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '...Referencing Object ID: ' || v_referencer_list(v_referencer_list_index).object_id || 
                        '...ReferencingObject type ID: ' || v_referencing_object_type_id ||
                        '...Excluded object count: ' || v_excluded_types.count
                      );
            
                end if;
                --
                -- Check for exclusion or the Object State  = Destroyed.
                --                    
          
                if (
                         v_excluded_types.exists(v_referencing_object_type_id) 
                     and
                         v_qualifier_rule_tf = 'T'
                    )
                   or
                   (   
                       v_referencer_object_state = pkg_os_constant.gobjstate_destroyed
                   )
                then
            
                        null;
            
                else
            
                      --
                      -- The Refercer Object is a valid reference under the Parent Object hiearchy
                      --
                      v_return_tf := 'T';
            
                end if; -- Check for exclusion or the Object State  = Destroyed.
    
        end if; -- Check for parent hierarchy and referencer is not pointing to referencee
  
        v_referencer_list_index := v_referencer_list.next(v_referencer_list_index);
  
  end loop; -- Check for any valid references

  if v_session_control.gLogging_Full 
  then
  
    pkg_os_logging.sp_log
    (
       in_session_id,
       in_transaction_id,
       v_procedure_name,
       '...Returning: ' || v_return_tf
     );
  
  end if;

  return v_return_tf;

exception

  when others then
  
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'Error while checking for referencer Objects :' ||
                                sqlerrm);
  
    raise;
  
end fn_check_any_referencer_obj;
-----------------------------------------------------------------------------------------------------------------------------------------------------
-- UTXPRODUCT-314
--
--	%NAME
--		fn_check_agent_association
--
--	%USAGE
--		This function returns T if there is any active association between the two partners.
--      Here the association can be between broker and wholesaler or Sub-agent and aggregator.
--
--	%ALGORITHM
--		Not Specified.
--
--	%PARAM	in_session_id		        Session ID
--	%PARAM	in_transaction_id	        Transaction ID
--	%PARAM	in_producing_agency_id		partner object ID
--	%PARAM	in_agent_parent_producer_id	partner parent object ID
--
-----------------------------------------------------------------------------------------------------------------------------------------------------
function fn_check_agent_association
(
   in_session_id                 in    object.object_id%type,
   in_transaction_id             in    object.object_id%type,
   in_producing_agency_id        in    object.object_id%type,
   in_agent_parent_producer_id   in    object.object_id%type
)
return char 
is

  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,in_transaction_id);
  v_procedure_name constant system_log.program_name%type := 'fn_check_agent_association';
  v_count          number := 0;
  v_return_tf      char;
  
begin

	select 
           count(1)
	  into 
           v_count
	  from 
           dragon_associated_agent
	 where 
           ref_associated_partner = nvl(in_producing_agency_id,0)
	   and 
           assoc_agent_parent_producer_id = nvl(in_agent_parent_producer_id,0)
	   and 
           assoc_agent_status_id = pkg_os_constant.gobjstate_alive;

	if v_count > 0 
    then
		v_return_tf := 'T';
	else
		v_return_tf := 'F';
	end if;
    
    return v_return_tf;
    
exception

	when others then
	
		pkg_os_logging.sp_log_error
		(
			in_session_id,
			in_transaction_id,
			v_procedure_name,
			'Error while checking for partner association :' || sqlerrm
		);
	
		raise;

end fn_check_agent_association;
-----------------------------------------------------------------------------------------------------------------------------------------------------
---- UTXPRODUCT-187 Start ----

function fn_object_bv_raw_get(in_session_id     in object.object_id%type,
                              in_transaction_id in object.object_id%type,
                              in_object_id      in object.object_id%type,
                              in_bv_id          in business_variable.business_variable_id%type
                              )
  return object_bv_value.business_variable_value%type is

  v_return_value object_bv_value.business_variable_value%type;
begin

  v_return_value := pkg_os_object_io.fn_object_bv_get(in_session_id     => in_session_id,
                                                      in_transaction_id => in_transaction_id,
                                                      in_object_id      => in_object_id,
                                                      in_bv_id          => in_bv_id,
                                                      in_get_raw_value  => true);

  return v_return_value;

end fn_object_bv_raw_get;

---- UTXPRODUCT-187 End ----
---------------------------------------------------------------------------------------------------------------------------------------------
---LXPRODUCT-463
---------------------------------------------------------------------------------------------------------------------------------------------
function fn_check_CustomerAddress_LocatedAt
         (in_session_id object.object_id%type,
         in_transaction_id  object.object_id%type,
         in_CustomerAddress_id  object.object_id%type)
return char
as


	    v_ref_list                    pkg_os_object_io.t_object_relation;

begin

						-- LXPRODUCT-463 26May2022 --skip check for any mailing or billing address if it is not referred by CustomerLocation object
						 --29254314CustomerLocation - xReference - _Reference_LocatedAt
						    
							v_ref_list:=pkg_os_object_io.fn_object_ref_owners_get(in_session_id,in_transaction_id,in_CustomerAddress_id ,29254314);
							
							if  v_ref_list.count = 0
                             then
							 	  return 'F';
								  
							else 
							    return 'T';
							 end if;

exception when others then
  return 'F';
end fn_check_CustomerAddress_LocatedAt;
---------------------------------------------------------------------------------------------------------------------------------------------
---LXPRODUCT-463
---------------------------------------------------------------------------------------------------------------------------------------------
function fn_check_active_duplicate_jobs
(
    in_session_id               in         object.object_id%type,
    in_transaction_id           in         object.object_id%type,
    in_async_job_def_id         in         object.object_id%type,
    in_job_object_id            in         object.object_id%type
) 
return char as
    
    v_procedure_name    constant system_log.program_name%type := pkg_name ||'fn_check_active_duplicate_jobs'; -- procedure name
    v_session_control   pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    
    v_return_value      char := 'T';
    v_count             number := 0;

begin
    
    BEGIN
        select 
            count(1)
        into 
            v_count
        from 
            async_job_status
        where
            async_job_definition_id = in_async_job_def_id
        and
            job_status not in (3,4)
        and
            job_object_id = in_job_object_id;
             
        EXCEPTION
        WHEN no_data_found 
        THEN
            v_count := 0;
    END;
    
    if v_count > 0
    then
        v_return_value := 'T';
    else
        v_return_value := 'F';
    end if;

    return v_return_value;

end fn_check_active_duplicate_jobs;
---------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_insurance_line_short_code
     (
          in_session_id      in object.object_id%type,
          in_transaction_id  in object.object_id%type,
          v_insurance_line   insurance_line.insurance_line_id%type
      )
return varchar2
is

    v_session_control               pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_procedure_name                constant system_log.program_name%type   := 'fn_get_insurance_line_short_code';
   -- v_insurance_line                insurance_line.insurance_line_id%type;
    v_return_short_insurance_line   insurance_line.insurance_line_short_name%type;

begin
        --v_program := pkg_os_object_io.fn_object_bv_get( in_session_id, in_transaction_id, in_object_id, 30223101 );

        if v_insurance_line is not null then

          Begin

           select INSURANCE_LINE_SHORT_NAME
           into v_return_short_insurance_line
           from insurance_line
           where insurance_line_id=v_insurance_line ;

         exception
           when others then
           v_return_short_insurance_line := null;
           end;

         else
           v_return_short_insurance_line:= null;
         end if;

    if v_session_control.gLogging_Full
    then

        pkg_os_logging.sp_log
        (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            ' |||||| v_insurance_line : '   ||   v_insurance_line ||
            ' |||||| v_return_short_insurance_line ' ||v_return_short_insurance_line
        );

    end if;

    return v_return_short_insurance_line;

end fn_get_insurance_line_short_code;
---------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
  --
  --  %NAME
  --    fn_check_address_against_orm_address
  --
  --  %USAGE
  --    Before Sync, compare the local address which is associated with customer entity to the address available in 
  --    ORM_ADDRESS_VERSION datamart and if both matches then return T(Considered that address is not changes on local object)
  --    else retun F
  --
  --  %ALGORITHM
  --   Not Specified.
  --
  --  %PARAM  in_session_id       Session ID
  --  %PARAM  in_transaction_id   Transaction ID
  --  %PARAM  in_object_id        Object ID --Customer Entity
-----------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
--UTPRODUCT2-10 start
function fn_check_address_against_orm_address
(
     in_session_id               in         object.object_id%type,
     in_transaction_id           in         object.object_id%type,
     in_object_id                in         object.object_id%type  -- customer entity

)   return char as
  -- variable declaration
    v_procedure_name               constant  system_log.program_name%type := pkg_name||'fn_check_address_against_orm_address'; -- procedure name
  v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;                  -- bv distinguishing between person and business
  v_return_value                 char := 'F';
  v_local_cust_add_id        object.object_id%type;
  v_local_cust_add_orm_id    varchar2(100);
  --Local address object values
  v_local_add_line1        varchar2(100);
  v_local_add_line2        varchar2(100);
  v_local_add_city         varchar2(100);
  v_local_add_state        varchar2(100); 
  v_local_add_zip            varchar2(100);
  v_local_add_country        varchar2(100);
  v_local_add_orm            varchar2(100);
  v_local_add_orm_ver        number; 
  --orm values
  v_orm_add_line1           varchar2(100);
  v_orm_add_line2           varchar2(100);
  v_orm_add_city            varchar2(100);
  v_orm_add_state           varchar2(100);  
  v_orm_add_zip             varchar2(100);
  v_orm_add_country         varchar2(100);
  v_region                  number;
    
begin
  v_local_cust_add_id := pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      in_object_id,
                      32944448 ); --32944448-Entity - xReference - _Reference_Associated Address
                        
  v_local_add_line1 := pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      29325214 ); --29325214Address - Text_100 - Address Line 1
  v_local_add_line2 := pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      210417 ); --29325214Address - Text_100 - Address Line 2
  v_local_add_city := pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      29326314 ); --29326314Address - Text_50 - Address City
  v_local_add_state := pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      210419 ); --210419Address - List - Address State/Province
  v_local_add_zip :=  pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      29327414 ); --29327414Address - ZIP Code - Address ZIP Code
  v_local_add_country :=  pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      210423 ); --210423Address - List - Address Country
  v_local_add_orm :=  pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      32234146 ); --32234146GenericObject - Text_100 - Entity Relationship Management - ID
  v_local_add_orm_ver :=  pkg_os_object_io.fn_object_bv_get
                      (
                      in_session_id, 
                      in_transaction_id, 
                      v_local_cust_add_id,
                      32234246 ); --32234246GenericObject - Text_100 - Entity Relationship Management - Version ID                                    
  begin--Adopted under UTDEVXAAS-3058
      SELECT 
      A.ADDRESS_LINE_1,A.ADDRESS_LINE_2,A.CITY, A.PROVINCE_ID ,A.ZIP_CODE,A.COUNTRY_ID  
      INTO
      v_orm_add_line1, v_orm_add_line2, v_orm_add_city, v_orm_add_state, v_orm_add_zip, v_orm_add_country
      FROM ORM_ADDRESS_VERSION A WHERE A.ORM_ID = v_local_add_orm and A.ORM_VERSION_ID = v_local_add_orm_ver;
  exception
          when others then
               v_region := 0;
  end;

   dbms_output.put_line(' v_local_add_line1 : '|| v_local_add_line1 || v_local_add_line2 || v_local_add_city ||v_local_add_state ||v_local_add_country||v_local_add_zip||
                        ' v_orm_add_line1 : '|| v_orm_add_line1 || v_orm_add_line2 || v_orm_add_city || v_orm_add_state || v_orm_add_country || v_orm_add_zip||
                        ' v_local_cust_add_id : '||v_local_cust_add_id);
   
  if  upper(v_local_add_line1) = upper(v_orm_add_line1) and 
    upper(NVL(v_local_add_line2,0)) = upper(NVL(v_orm_add_line2,0)) and
    upper(v_local_add_city) = upper(v_orm_add_city) and
    v_local_add_state = v_orm_add_state and
    v_local_add_zip = v_orm_add_zip and
    v_local_add_country = v_orm_add_country
  then 
  v_return_value := 'T';
  end if;
    
  return  v_return_value;                 

end fn_check_address_against_orm_address;
--UTPRODUCT2-10 end
--------------------------------------------------------------------------------------------------------------------------------------- 



-------------OSPRODUCT-20801




function fn_rescind_basis_image_get
(
     in_session_id                 in        object.object_id%type,
     in_transaction_id             in        object.object_id%type,
     in_policy_id                  in        object.object_id%type,
     in_transaction_class_id       in        number,
     in_effective_date             in        varchar2,
     in_after_tf                   in        char,
     in_exclude_transaction_id     in        object.object_id%type,
     out_transaction_id            out       object.object_id%type

)
return char
is
     v_base_trx_id                 object.object_id%type                   	:= null;
     v_POLICY_BOR          object_bv_value.business_variable_value%type;
  
     v_procedure_name              constant  system_log.program_name%type  := 'fn_rescind_basis_image_get';
     v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
    

begin
     out_transaction_id :=    pkg_os_policy_transaction.fn_policytx_closest_by_class
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        in_policy_id,
                                        in_transaction_class_id,
                                        in_effective_date,
                                        'F',
                                        in_exclude_transaction_id
                                   );
 
if out_transaction_id is null then
v_POLICY_BOR:=pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_policy_id,gRef_BORd_Policy);

          
            IF v_POLICY_BOR  IS NOT NULL THEN
             out_transaction_id:=   pkg_os_policy_transaction.fn_policytx_closest_by_class
                                   (
                                        in_session_id,
                                        in_transaction_id,
                                        v_POLICY_BOR,
                                        in_transaction_class_id,
                                        in_effective_date,
                                        in_after_tf,
                                        in_exclude_transaction_id
                                   );
                                   return 'T';
                                  
                else
                   return 'F';
                 end if;
                 else return 'F';
                 end if;
  
end fn_rescind_basis_image_get;
--------------------------------------------------------------------------------------------------------------------------------------- 


---------------OSPRODUCT-20801
--------------------------------------------------------------------------------------------------------------------------------------
function fn_get_no_of_processed_trxs
(
    in_session_id               in         object.object_id%type,
    in_transaction_id           in         object.object_id%type,
    in_object_id            in         object.object_id%type
) 
return number as
    
    v_procedure_name    constant system_log.program_name%type := pkg_name ||'fn_get_no_of_processed_trxs'; -- procedure name
    v_session_control   pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    
    v_return_value      number := 0;

begin
    
    BEGIN
        select 
            count(1)
        into 
            v_return_value
        from 
            dragon_policy_trx
        where
                        policy_id = in_object_id
            and         POLICY_TRX_OBJECT_STATE_ID = 106        --Processed
            and         POLICY_TRX_TYPE_ID <> 3902              --Not a rollback transaction
            and         pkg_os_policy_transaction_type.fn_transaction_type_in_set(POLICY_TRX_TYPE_ID   ,31148)='T';
             
        EXCEPTION
        WHEN others 
        THEN
            v_return_value := 0;
    END;
    
    if v_session_control.gLogging_Full 
       then
       
         pkg_os_logging.sp_log
         (
            in_session_id,
            in_transaction_id,
            v_procedure_name,
            '...Policy ID: ' || in_object_id ||
            '...Processed transactions count: ' || v_return_value
          );
  
  end if;
    
    return v_return_value;

end fn_get_no_of_processed_trxs;
--------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
--OSPRODUCT-12610 start
function fn_check_email_against_orm_email
(
     in_session_id               in         object.object_id%type,
     in_transaction_id           in         object.object_id%type,
     in_object_id                in         object.object_id%type  -- customer entity

)
return char
as
  -- variable declaration
  v_procedure_name              constant  system_log.program_name%type := pkg_name||'fn_check_email_against_orm_email'; -- procedure name
  v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);                  -- bv distinguishing between person and business
  v_return_value                char := 'T';
  v_object_email_index          number;
  v_object_email_list           pkg_os_object.t_object_list;
  --Local address object values
  v_local_email                 varchar2(100);
  v_local_email_orm             varchar2(100);
  v_local_phone                 number;
  v_count                       number := 0;
  --orm values
  v_orm_email                   varchar2(100);
  v_orm_phone                   number;
  v_region                      number;

begin

  --Get all CustomerEmail object
  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      in_object_id,
                                                      gObjType_CustomerEmail,
                                                      v_object_email_list,
                            null,
                            true,
                            12709548 );

  --Initialize index with first object of email list.
  v_object_email_index := v_object_email_list.first;
  


  --Start looping all the email list
  while v_object_email_index is not null loop

    --Get local email value
    v_local_email := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                       in_transaction_id,
                                                       v_object_email_list(v_object_email_index),
                                                       gbv_Email); --30028946 : E-mail - Email - Email Address
                                                       
    --Get email ORM value
    v_local_email_orm := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                           in_transaction_id,
                                                           v_object_email_list(v_object_email_index),
                                                           gbv_orm); --32234146 : GenericObject - Text_100 - Entity Relationship Management - ID
                                                      
    --If  email orm is not null then go in
    if v_local_email_orm is not null then

      --Get email value from ORM datamart
      begin

        SELECT a.email_address
          INTO v_orm_email
          FROM orm_master_email_address A
         WHERE A.ORM_ID = v_local_email_orm;

        --when both email value match then increment the count
        if to_char(upper(v_orm_email)) = to_char(upper(v_local_email)) then

          v_count := v_count + 1;

        end if;
		exception
             when others then
                  continue;

      end;

    end if;

    v_object_email_index := v_object_email_list.next(v_object_email_index);

  end loop;

  --
  --If count is equal to email list count means all the emails are same and nothing is changed
  --In multiple emails if any one is change then return value should be false. But, if all same then return True.
  --
   if v_object_email_list.count = 1 and  v_local_email_orm is null then 
       v_return_value      := 'T';
       else  
        If v_count != v_object_email_list.count then

          v_return_value := 'F';

        end if;
   end if;     

  return v_return_value;

end fn_check_email_against_orm_email;

function fn_check_phone_against_orm_phone
(
     in_session_id               in         object.object_id%type,
     in_transaction_id           in         object.object_id%type,
     in_object_id                in         object.object_id%type  -- customer entity

)
return char
as

  -- variable declaration
  v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                            'fn_check_phone_against_orm_phone'; -- procedure name
  v_session_control    pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                        in_transaction_id);
  v_return_value       char := 'T';
  v_object_phone_index number;
  v_object_phone_list  pkg_os_object.t_object_list;
  v_local_phone        varchar2(100);
  --Local address object values
  v_local_phone_orm    varchar2(100);
  v_count              number := 0;
  v_orm_phone          varchar2(100);
  --orm values
  v_region             number;

begin
  --Get all Customerphone object
  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      in_object_id,
                                                      gObjType_Customerphonenumber,
                                                      v_object_phone_list,
                            null,
                            true,
                            12709648 );

  --Initialize index with first object of phone list.
  v_object_phone_index := v_object_phone_list.first;

  --Start looping all the phone list
  while v_object_phone_index is not null loop
    --Get local phone value
    v_local_phone := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                       in_transaction_id,
                                             v_object_phone_list(v_object_phone_index)          ,
                                                       gbv_PhoneNumber); --30589146 : PhoneNumber - PhoneNumber - Phone Number

    --Get phone ORM value
    v_local_phone_orm := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                           in_transaction_id,
                                                           v_object_phone_list(v_object_phone_index),
                                                           gbv_orm); --32234146 : GenericObject - Text_100 - Entity Relationship Management - ID

    --If  phone orm is not null then go in

    if v_local_phone_orm is not null then

      --Get phone value from ORM datamart
      begin
        SELECT a.phone_number
          INTO v_orm_phone
          FROM orm_master_phone_number A
         WHERE A.ORM_ID = v_local_phone_orm;
        --when both phone value match then increment the count

        if v_orm_phone = v_local_phone then

          v_count := v_count + 1;

        end if;
		exception
             when others then
                  continue;

      end;

    end if;

    v_object_phone_index := v_object_phone_list.next(v_object_phone_index);

  end loop;
  --
  --If count is equal to phone list count means all the phones are same and nothing is changed
  --In multiple phones if any one is change then return value should be false. But, if all same then return True.
  --
  if v_object_phone_list.count = 1 and v_local_phone_orm is null then 
     v_return_value  := 'T';
     else
       If v_count != v_object_phone_list.count then

       v_return_value := 'F';

       end if;
   end if;    

  return v_return_value;

end fn_check_phone_against_orm_phone;
--OSPRODUCT-12610 end
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function fn_check_discard_can
(
     in_session_id                 in             object.object_id%type,
     in_transaction_id             in             object.object_id%type,
     in_action_object_id           in             object.object_id%type
)
return char
is

     v_procedure_name             constant system_log.program_name%type := '.sp_check_discard_can';
     v_session_control           pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;

     v_selected_items             varchar2(500);

     v_value_list                 pkg_os_token.t_string_table;
     v_value_list1                 pkg_os_token.t_string_table;

     v_current_list_id            object.object_id%type;
     v_object_id                  object.object_id%type;
     v_new_object_id                  object.object_id%type;

     v_datamart_tf                char := 'T';

     v_value_list_index           number;
     v_value_list_index1           number;

     v_policy_id                     object.object_id%type;
     v_PlcyUnResolvedRolbckTrxn_cnt  object.object_id%type;
     
     v_flag char;
     v_trx_type pd_transaction_type.pd_transaction_type_id%type;
     v_trx_type1 pd_transaction_type.pd_transaction_type_id%type;     
     v_reins_trx    object.object_id%type;
     v_rollfwd_flag number;
     v_basis_trx   object.object_id%type;
     v_template    object.object_id%type;
     cursor c_reins_trx is
     select policy_trx_id from dragon_policy_trx where policy_id = v_policy_id and policy_trx_type_id = 3
     and policy_trx_object_state_id = 27502;
begin
     v_flag := 'T';
     --
     --   Get the Current List ID ...
     --

     v_current_list_id  := pkg_os_object_io.fn_object_bv_get
                           (
                                   in_session_id,
                                   in_transaction_id,
                                   in_session_id,
                                   pkg_os_constant_bv.gbv_GenObjCurrentList
                           );
     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....Starting to set the Rolled Forward Flag for List ID : '||v_current_list_id
          );

     end if;
     --
     --   Get the Selected Items for the Current List ID ...
     --

     v_selected_items  := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id ,
                              v_current_list_id,
                              pkg_os_constant_bv.gbv_ListElementsSelected
                          );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '....ListElementsSelected: '|| v_selected_items
          );

     end if;

     pkg_os_token.sp_tokenize_string
     (
          v_selected_items,
          ',',
          v_value_list
     );

     pkg_os_token.sp_tokenize_string
     (
          v_selected_items,
          ',',
          v_value_list1
     );

     if v_session_control.gLogging_Full
     then

          pkg_os_logging.sp_log
          (
               in_session_id,
               in_transaction_id,
               v_procedure_name,
               '.... No. of Selected List Items : '||v_value_list.count
          );

     end if;

     if v_value_list.count >0
     then

          v_value_list_index := v_value_list.first;

     end if;


     while v_value_list_index is not null
     loop

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....List Element id: '||v_value_list(v_value_list_index)
               );

          end if;

          v_object_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id  ,
                              v_value_list(v_value_list_index),
                              pkg_os_constant_bv.gbv_ListElementObject
                         );

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....The selected Object ID: '|| v_object_id
               );

          end if;
          --
          --    Tell the rolled-back transaction that it has been rolled forward.   ...
          --

--find trx type
       v_trx_type := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_id,212030);
       if v_trx_type in (1,2) then
         v_flag := 'F';
          v_policy_id                       := pkg_os_object.fn_object_parent_get( in_session_id, in_transaction_id, v_object_id );
          
for r_reins in c_reins_trx
  loop
    --v_reins_trx := r_reins.policy_trx_id;
    v_template := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,r_reins.policy_trx_id,22605205);
    if v_template = v_object_id then
      v_reins_trx := r_reins.policy_trx_id;
      exit;
    end if;
end loop;
          
if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....v_reins_trx: '|| v_reins_trx
               );

          end if;
      v_rollfwd_flag := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_reins_trx,pkg_os_policy_transaction.gbv_PolicyTrxRolledFwd);
      if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '....v_rollfwd_flag: '|| v_rollfwd_flag
               );

          end if;
         if nvl(v_rollfwd_flag,2) = 1 then
           v_flag := 'T';
          exit;
          end if;

      if v_value_list1.count >0
         then

         v_value_list_index1 := v_value_list1.first;

       end if;


     while v_value_list_index1 is not null
     loop
       v_new_object_id := pkg_os_object_io.fn_object_bv_get
                         (
                              in_session_id,
                              in_transaction_id  ,
                              v_value_list1(v_value_list_index1),
                              pkg_os_constant_bv.gbv_ListElementObject
                         );
       v_trx_type1 := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_new_object_id,212030);
       if v_trx_type1 = 3 then
          v_basis_trx :=         pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_new_object_id,22605205);
          if v_basis_trx = v_object_id then
          v_flag := 'T';
          exit;
          end if;
        end if;
       v_value_list_index1 := v_value_list1.next( v_value_list_index1 );
     end loop;

          if v_session_control.gLogging_Full
          then

               pkg_os_logging.sp_log
               (
                    in_session_id,
                    in_transaction_id,
                    v_procedure_name,
                    '...Finished processing for the Object ID : '|| v_object_id
               );

          end if;
end if;
          v_value_list_index := v_value_list.next( v_value_list_index );

     end loop;
return v_flag;
exception when others then
  return 'T';
    
end;
---------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------  OSPRODUCT-22282 Start -------------------------------------

FUNCTION fn_check_trx_values_updated(in_session_id     IN dragon_session.user_session_id%TYPE,
                                     in_transaction_id IN dragon_transaction.transaction_id%TYPE,
                                     in_trx_id         IN object.object_id%TYPE)
  RETURN CHAR IS

  v_procedure_name constant system_log.program_name%type := 'fn_check_trx_values_updated';
  v_session_control           pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                               in_transaction_id);
  v_master_entity_id            object_type.object_type_id%TYPE;
  v_mail_addr_utemp_id          object.object_id%TYPE;
  v_master_mail_addr_utemp_id   object.object_id%TYPE;
  v_master_mail_addr_id         object.object_id%TYPE;
  v_existing_trx_addr           object.object_id%TYPE;
  v_master_customer_id          object.object_id%TYPE;
  v_generic_entity_list         pkg_os_object.t_object_list := pkg_os_object.gnull_object_list;
  v_object_index                NUMBER := NULL;
  v_updated_flag                CHAR := 'F';
  v_assoc_entity                object.object_id%type;
  v_assoc_entity_type_id        object_type.object_type_id%type;
  v_in_trx_type_id              object_type.object_type_id%type;
  v_generic_trx_id              object.object_id%type;
  v_enable_exoskeleton_modify   char := pkg_os_system_attribute.fn_get_system_attribute_value('ENABLE_EXOSKELETON_MODIFICATION');

BEGIN

IF NVL(v_enable_exoskeleton_modify,'F') = 'T'
THEN

  ---
  --- Get the transaction_type 
  ---
  v_in_trx_type_id := pkg_os_object.fn_object_type_get(in_session_id,
                                                       in_transaction_id,
                                                       in_trx_id);
                                                               
  ---
  --- Get the master customer ID of the PolicyTransaction/BillingAccountTransactionSet
  ---
    v_master_customer_id := pkg_os_object_search.fn_object_ultimate_parent_get(in_session_id,
                                                                               in_transaction_id,
                                                                               in_trx_id);
  ---
  --- Get the GenericTransaction ID present under the transaction
  ---

  v_generic_trx_id := pkg_os_object_search.fn_object_11_child_get(in_session_id,
                                                                  in_transaction_id,
                                                                  in_trx_id,
                                                                  gObjType_GenericTransaction);

  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '...Starting to check mailing address update for Object ID : ' ||
                          in_trx_id || ' w.r.t. GenericTransaction ID: ' ||
                          v_generic_trx_id);
  
  end if;

  ---
  --- Get all the GenericTransactionEntity objects under the GenericTransaction
  ---

  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      v_generic_trx_id,
                                                      gObjType_GenericTransactionEntity,
                                                      v_generic_entity_list,
                                                      NULL,
                                                      true,
                                                      false);
  v_object_index := v_generic_entity_list.first;

  ---
  --- Run the loop for each GenericTransactionEntity object
  ---

  WHILE v_object_index IS NOT NULL LOOP
  
    ---
    --- Get the value of the GenericTransactionEntity._Reference Associated Entity
    ---
    v_assoc_entity := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                        in_transaction_id,
                                                        v_generic_entity_list(v_object_index),
                                                        gbv_GenericEntityAssocEntity);
  
    ---
    --- Check the object type of the associated entity
    ---
  
    v_assoc_entity_type_id := pkg_os_object.fn_object_type_get(in_session_id,
                                                               in_transaction_id,
                                                               v_assoc_entity);
  
    if v_assoc_entity_type_id = pkg_os_constant.gObjType_CustomerEntity then
    
      ---
      --- Get the UTemplate ID for the mailing address associated with GenericTransactionEntity._Reference Associated Entity
      ---
    
      v_mail_addr_utemp_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                in_transaction_id,
                                                                pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                                                  in_transaction_id,
                                                                                                  v_assoc_entity,
                                                                                                  gbv_CustEntityMailingAddress),
                                                                gbv_RefUltimateTemplateID);
    
      ---
      --- Get the value of the GenericTransactionEntity._Reference Associated Master Entity
      ---
      v_master_entity_id := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                              in_transaction_id,
                                                                              v_master_customer_id,
                                                                              pkg_os_constant.gObjType_CustomerEntity,
                                                                              gbv_RefUltimateTemplateID,
                                                                              pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                                                                in_transaction_id,
                                                                                                                v_assoc_entity,
                                                                                                                gbv_RefUltimateTemplateID
                                                                                                                )
                                                                               );
   
      ---
      --- Get the UTemplate ID for the mailing address associated with GenericTransactionEntity._Reference Associated Master Entity
      ---
      v_master_mail_addr_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                 in_transaction_id,
                                                                 v_master_entity_id,
                                                                 gbv_CustEntityMailingAddress);
    
      v_master_mail_addr_utemp_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_master_mail_addr_id,
                                                                       gbv_RefUltimateTemplateID);
    
      IF (v_mail_addr_utemp_id <> v_master_mail_addr_utemp_id OR v_in_trx_type_id <> pkg_os_constant.gobjType_PolicyTransaction) THEN
      
        ---
        --- Check if the master entity's mailing address is already mapped to a GenericTransactionAddress object
        ---
      
        v_existing_trx_addr := pkg_os_object_search.fn_object_with_attribute_get(in_session_id,
                                                                                 in_transaction_id,
                                                                                 v_generic_trx_id,
                                                                                 gObjType_GenericTransactionAddress,
                                                                                 gBv_Reference_AssociatedAddress,
                                                                                 v_master_mail_addr_id,
                                                                                 false);
      
        ---
        --- If it's not existing address then set the flag value to 'T' which indicates that information has been updated on the transaction
        ---
        IF nvl(v_existing_trx_addr, 0) <= 0 THEN
        
          v_updated_flag := 'T';
        
          if v_session_control.gLogging_Full then
          
            pkg_os_logging.sp_log(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '...Return value: ' || v_updated_flag);
          
          end if;
        
          RETURN v_updated_flag;
        
        END IF;
      
      END IF;
    
    end if;
  
    v_object_index := v_generic_entity_list.next(v_object_index);
  END LOOP;

  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '...Return value: ' || v_updated_flag);
  
  end if;
  
  END IF;

  RETURN v_updated_flag;
  
  EXCEPTION
    WHEN OTHERS THEN
      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  'Exception occurred while modifying the exoskeleton.. ERROR: ' ||
                                  sqlerrm || ', STACK: ' ||
                                  dbms_utility.format_error_backtrace);
      raise;

END fn_check_trx_values_updated;
------------------------------------------------  OSPRODUCT-22282 End -------------------------------------

-------------------------------------  OSPRODUCT-23943 Start -------------------------------------------------------
function  fn_object_ref_owners_cnt_get
(
     in_session_id                in   object.object_id%type,
     in_transaction_id            in   object.object_id%type,
	 in_object_id			      in   object.object_id%type,
	 in_reference_bv_id		      in   business_variable.business_variable_id%type default null,
     in_relation_object_type_id   in   object_type.object_type_id%type default null,
     in_object_type_id            in   object_type.object_type_id%type default null
)
return number
is 
    v_procedure_name CONSTANT  system_log.program_name%TYPE := 'fn_object_ref_owners_cnt_get';
    v_session_control          pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                                in_transaction_id);
    v_referencer_list          pkg_os_object_io.t_object_relation := pkg_os_object_io.t_object_relation();
    v_referencer_cnt           number;

begin 

     if v_session_control.gLogging_Full 
     then
     
            pkg_os_logging.sp_log(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  '... Getting count of objects referencing object ID: ' || in_object_id||
                                  ' through the reference BV: '||in_reference_bv_id||
                                  ' having relation object type ID: '||in_relation_object_type_id||
                                  ' and object type ID:'||in_object_type_id);                
    end if;
            
    v_referencer_list := pkg_os_object_io.fn_object_ref_owners_get(in_session_id,
                                                                   in_transaction_id,
                                                                   in_object_id,
                                                                   in_reference_bv_id,
                                                                   in_relation_object_type_id,
                                                                   in_object_type_id);
          
    v_referencer_cnt := v_referencer_list.count;

    return NVL(v_referencer_cnt,0);

exception
    when others then
      pkg_os_logging.sp_log_error(in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  'Exception occurred while getting reference count for object ID: '||in_object_id||' .. ERROR: ' ||
                                  sqlerrm || ', STACK: ' ||
                                  dbms_utility.format_error_backtrace);
    raise;

end fn_object_ref_owners_cnt_get;
-------------------------------------  OSPRODUCT-23943 End -------------------------------------------------------

---------------------------------UTXPRODUCT-801 start--------------------
FUNCTION fn_call_object_valid_tf
(
   in_session_id            in     object.object_id%type,
     in_transaction_id        in     object.object_id%type,
     in_object_id             in     object.object_id%type,
     in_actor_id              in     actor_type.actor_type_id%type
)
return char as 
  v1 char(1);
  v2 pkg_os_message.t_message_list;
BEGIN
  v1 := pkg_os_object_security.fn_object_valid_tf(in_session_id,
                                            in_transaction_id,
                                            in_object_id,
                                            in_actor_id, v2);
                    
  RETURN v1;
  
END fn_call_object_valid_tf;
---------------------------------UTXPRODUCT-801 end--------------------

---------------------------------------------------------  OSPRODUCT-23645 Start -----------------------------------------------

FUNCTION fn_get_policy_state_list
(
   in_session_id     IN object.object_id%TYPE,
   in_transaction_id IN object.object_id%TYPE,
   in_ptp_id         IN object.object_id%TYPE
)
  
RETURN VARCHAR2 AS

    v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id);
    v_procedure_name              CONSTANT system_log.program_name%TYPE := 'fn_get_policy_state_list';
    v_jurisdiction_list           pkg_os_object.t_object_list;
    v_policy_customer_id          object.object_id%TYPE;
    v_state_code                  lookup_list_value.lookup_text%TYPE;
	v_state_id                    object_bv_value.business_variable_value%TYPE;
    v_return_state_list           VARCHAR2(500);
    v_index                       NUMBER;
  
BEGIN

  --- loop through all the customerjurisdiction objects under the policyCustomer.

  v_policy_customer_id := pkg_os_object_search.fn_object_11_child_get(in_session_id,
                                                                      in_transaction_id,
                                                                      in_ptp_id,
                                                                      gobjtypepolicycustomer);

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '... Getting state list for PolicyCustomer: ' ||
                          v_policy_customer_id || ' belonging to PTP ID: ' ||
                          in_ptp_id);
  end if;

  pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                      in_transaction_id,
                                                      v_policy_customer_id,
                                                      gobjtype_customerjurisdiction,
                                                      v_jurisdiction_list);

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '... Found state count: ' ||
                          v_jurisdiction_list.count);
  end if;

  v_index := v_jurisdiction_list.first;
  WHILE v_index IS NOT NULL LOOP
  
    --- For each item in the loop, find the state id 
  
    v_state_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                    in_transaction_id,
                                                    v_jurisdiction_list(v_index),
                                                    gbv_jurisdictionstatecode);
  
    --- Get the state code corresponding to the state id 
  
    v_state_code := pkg_os_lookup.fn_lookup_list_text_get(5365246,
                                                          v_state_id);
  
    --- Concatenate the state code in the output string by adding a comma.
    v_return_state_list := v_return_state_list || ', ' || v_state_code;
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            '...For loop object ID: ' ||
                            v_jurisdiction_list(v_index) ||
                            ' got State code: ' || v_state_code);
    end if;
  
    v_index := v_jurisdiction_list.next(v_index);
  
  END LOOP;

  v_return_state_list := trim (trim(',' FROM v_return_state_list));

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '...Returned state list: ' || v_return_state_list);
  end if;

  RETURN v_return_state_list;

EXCEPTION
  WHEN OTHERS THEN
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                'Exception accured while creating email object.. ERROR: ' ||
                                sqlerrm || ', STACK: ' ||
                                dbms_utility.format_error_backtrace);
    raise;
END fn_get_policy_state_list;

---------------------------------------------------------  OSPRODUCT-23645 End -----------------------------------------------

---------------------------------------------------------  OSPRODUCT-22881 Start ---------------------------------------------

/***
  Function fn_get_entity_OOO_message returns a valid message if the tasks are being 
  assigned to the user who will be on holiday on the task due dates. 
  Else it will return null message. 
    
  Algorithm:
  1. Iterate over the selected tasks in the session
  2. Check if the task due date falls on the holiday of the selected user. 
  3. If 2 returns true then build an appropriate message and return else return null.
*/
function fn_get_entity_OOO_message
(
       in_session_id        in                object.object_id%type,
       in_transaction_id    in                object.object_id%type,
       in_task_reassigned_user_id            in                object.object_id%type
) return varchar2
as
v_current_list_id              object.object_id%type;
v_selected_items               varchar2(500);
v_task_list                    pkg_os_token.t_string_table;
v_task_list_index              number;
v_numeric_task_due_date        number;       
v_task_due_date                date;
v_is_holiday                   char;
v_message                      varchar2(500);
v_user_name                    varchar2(500);
v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
v_procedure_name              constant system_log.program_name%type := pkg_name||'fn_get_entity_OOO_message';
     

begin    
  
     v_message := null;                             
        
     -- Get the due date of selected Lists from user_session current list
     v_current_list_id  := pkg_os_object_io.fn_object_bv_get
                           (
                                   in_session_id,
                                   in_transaction_id,
                                   in_session_id,
                                   pkg_os_constant_bv.gbv_GenObjCurrentList
                           );

     v_selected_items  := pkg_os_object_io.fn_object_bv_get
                          (
                                  in_session_id,
                                  in_transaction_id ,
                                  v_current_list_id,
                                  pkg_os_constant_bv.gbv_ListObjectsSelected
                          );
                          
     pkg_os_token.sp_tokenize_string
     (
          v_selected_items,
          ',',
          v_task_list
     );

     if v_task_list.count >0
     then
          v_task_list_index := v_task_list.first;
     end if;   
     
     v_is_holiday := 'F';
     
     while v_task_list_index is not null
     loop         
         
         v_numeric_task_due_date := pkg_os_object_io.fn_object_bv_get
                                    (
                                           in_session_id, 
                                           in_transaction_id, 
                                           v_task_list(v_task_list_index), 
                                           pkg_db_functions.gbv_Task_TaskDueDate -- task due date BV
                                    );
                                    
         v_task_due_date := to_date(TO_CHAR (to_timestamp(v_numeric_task_due_date, 'YYYYMMDDHH24MISS'), 'MM/DD/YYYY'), 'MM/DD/YYYY');
         
         
         if v_task_due_date is not null
         then
             v_is_holiday := pkg_base_calendar.fn_is_holiday 
                             ( 
                                   in_session_id , 
                                   in_transaction_id, 
                                   in_task_reassigned_user_id ,
                                   v_task_due_date
                             ) ;   
                             
             if v_session_control.gLogging_Full then
                  pkg_os_logging.sp_log
                  (
                        in_session_id,
                        in_transaction_id,
                        v_procedure_name,
                        '...v_task_due_date = ' || v_task_due_date ||
                        '...v_is_holiday = ' || v_is_holiday
                  );
             end if;
                             
             if v_is_holiday = 'T'
             then 
               v_user_name := pkg_os_object_io.fn_object_bv_get
                                    (
                                           in_session_id, 
                                           in_transaction_id, 
                                           in_task_reassigned_user_id, 
                                           pkg_os_constant_bv.gbv_GenObjLabel  -- get user object label
                                    );
                                    
               v_message := 'User '|| v_user_name || ' is out of office on '|| v_task_due_date|| '. The next available date is '|| 
                             pkg_base_calendar.fn_get_next_available_day ( in_session_id, in_transaction_id, in_task_reassigned_user_id, v_task_due_date) || '.';
                             
               return v_message;
                            
             end if;  
               
         end if;
         
         v_task_list_index := v_task_list.next(v_task_list_index);         
    
    end loop;
    
    return v_message;
                                    
end fn_get_entity_OOO_message;

---------------------------------------------------------  OSPRODUCT-22881 End -----------------------------------------------

------------------------------------------------ OSPRODUCT-26192 Start ---------------------------------------------------
function fn_get_current_effective_trx(in_session_id     in object.object_id%type,
                                      in_transaction_id in object.object_id%type,
                                      in_policy_id      in object.object_id%type,
                                      in_trx_set_id     in number default null)
  return object.object_id%type as

  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);
  v_procedure_name constant system_log.program_name%type := 'fn_get_current_effective_trx';

  v_policy_trx_id object.object_id%type;

begin

  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '....Calculating Current Effective transaction for policy: ' ||
                          in_policy_id || ' in_trx_set_id: ' ||
                          in_trx_set_id);
  end if;

  select policy_trx_id
    into v_policy_trx_id
    from (select policy_trx_id,
                 row_number() over(partition by policy_id order by policy_trx_eff_date desc, policy_trx_seq_num desc) row_cnt
            from dragon_policy_trx
           where policy_id = in_policy_id
             and trunc(policy_trx_eff_date) <= trunc(sysdate) 
             and policy_trx_object_state_id = gObjState_Processed 
             and (pkg_os_policy_transaction_type.fn_transaction_type_in_set(policy_trx_type_id,
                                                                            in_trx_set_id) = 'T' or
                 in_trx_set_id is null)
          )
   where row_cnt = 1;

  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          'Current Effective transaction for policy: ' ||
                          in_policy_id || ' is: ' || v_policy_trx_id);
  end if;

  return v_policy_trx_id;

exception
  when no_data_found then
  
    return null;
  
  when others then
  
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Exception while getting the current effective transaction.' ||
                                '  Error Msg: ' || sqlerrm);
    raise;
  
end fn_get_current_effective_trx;
------------------------------------------------ OSPRODUCT-26192 End ---------------------------------------------------
---------------------------------------------------------------------------------------------------
function fn_get_custEntity_transform (in_session_id             in object.object_id%type,
                                      in_transaction_id         in object.object_id%type,
                                      in_maps_to_object_id      in object.object_id%type,
                                      in_business_variable_id   in business_variable.business_variable_id%type
                                      )
  return object.object_id%type as

  v_session_control  pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);
  v_procedure_name   constant system_log.program_name%type := 'fn_get_custEntity_transform';
  
  v_mapsToObjectType                    object.object_type_id%type;
  v_customerEntity                      object.object_id%type;   
  v_customerEntity_orm_id               varchar2(100);
  v_policyTransaction_id                object.object_id%type;
  v_masterCustomer_id                   object.object_id%type;


begin

  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          '....Calculating Master Customer Entity based on the object: ' ||
                          in_maps_to_object_id || ' and Business variable id: ' ||
                          in_business_variable_id);
  end if;
   
      
     v_mapsToObjectType := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_maps_to_object_id, 210149);

     if v_mapsToObjectType = pkg_os_constant.gObjType_CustomerEntity
       then
           
       v_customerEntity := in_maps_to_object_id;
       
     else
       
       v_customerEntity := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_maps_to_object_id,gbv_PrimaryNamedInsuredEntity);
        
     end if;
           
   
   if in_business_variable_id = 34541848 
     then

      
       v_customerEntity_orm_id := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id, v_customerEntity, gbv_orm);
       
       v_policyTransaction_id := pkg_os_object_search.fn_object_get_parent_of_type(
                                                                                            in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_customerEntity,
                                                                                            pkg_os_constant.gobjType_PolicyTransaction
                                                                                            );
                                                                                                       
       v_masterCustomer_id := pkg_os_object_search.fn_object_get_parent_of_type(
                                                                                            in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_policyTransaction_id,
                                                                                            pkg_os_constant.gObjType_Customer
                                                                                   );  
                                                                                   
        v_customerEntity   := pkg_os_object_search.fn_object_with_attribute_get (
                                                                                            in_session_id,
                                                                                            in_transaction_id,
                                                                                            v_masterCustomer_id,
                                                                                            pkg_os_constant.gObjType_CustomerEntity,
                                                                                            gbv_orm,
                                                                                            v_customerEntity_orm_id
                                                                                  );                                                    
     
   end if;  
   
   
  if v_session_control.gLogging_Full then
  
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          ' v_mapsToObjectType: '||v_mapsToObjectType||
                          ' v_customerEntity: '||v_customerEntity||
                          ' v_customerEntity_orm_id: '||v_customerEntity_orm_id||
                          ' v_policyTransaction_id: '||v_policyTransaction_id||
                          ' v_masterCustomer_id: '||v_masterCustomer_id );
  end if;

  return v_customerEntity;

exception  
  when others then
  
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Exception while Calculating Master Customer Entity based on the object.' ||
                                '  Error Msg: ' || sqlerrm);
    raise;
  
end fn_get_custEntity_transform;
---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------
function fn_get_bw_property_id
(
    in_session_id            in     object.object_id%type,
    in_transaction_id        in     object.object_id%type,
    in_location_id           in     object.object_id%type
)
return  varchar2
as
     v_procedure_name        constant    system_log.program_name%type          :=   pkg_name||'.fn_get_bw_property_id';
     v_session_control   pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_orm_id            varchar2(100) := pkg_os_object_io.fn_object_bv_path_get(
                                                                                  in_session_id, 
                                                                                  in_transaction_id, 
                                                                                  in_location_id, 
                                                                                  '29254314.32234146'     --CustomerLocation._Reference_LocatedAt.Entity Relationship Management - ID               
                                                                                 ); 

     return_value                   varchar2(20);
     
     v_tpr_result_id                object.object_id%type;
     
     /*cursor getTPRObjectsList(in_location_id in object.object_id%type)
     is
       select 
            tpr_object_id,
            tpr_report_type
       from 
            DRAGON_TPR_REPORT tp
       where
            tpr_report_type in (14448, 18548, 18448)                             --RunProfile, RetrieveProfile, SearchProperty
       and 
            TPR_MASTER_REPORT_SUBJECT_ID = in_location_id            
  --     and
  --          tpr_report_status_id in (2, 10808)                                      -- Success and Duplicate                            
       order by
            tpr_object_id desc;*/

       cursor getTPRObjectsList
       is
        select tpr_object_id, 
               tpr_report_type_id as tpr_report_type
          from tpr_report tp
         where tpr_report_type_id in (14448, 18548, 18448)
           and tpr_object_id is not null
           and TPR_REPORT_DUP_CHECK_MATCH_STR = v_orm_id
         order by tpr_report_id desc;		

begin

    if v_session_control.gLogging_Full then
                pkg_os_logging.sp_log(
                                      in_session_id,
                                      in_transaction_id,
                                      v_procedure_name,
                                      ' |||||| Searching for property id for location: ' || in_location_id ||
                                      ' v_orm_id: ' || v_orm_id
                                      );
    end if;

    for vTPRId in getTPRObjectsList loop

        if v_session_control.gLogging_Full then
                pkg_os_logging.sp_log(
                                      in_session_id,
                                      in_transaction_id,
                                      v_procedure_name,
                                      ' |||||| TPR object id: ' || vTPRId.Tpr_Object_Id
                                      );
        end if;
        
        v_tpr_result_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                              in_transaction_id,
                                              vTPRId.Tpr_Object_Id,
                                              32520408);                                 --Reference ReportResults
                                              
         if v_tpr_result_id is not null
           then
             return_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id, 
                                                                     in_transaction_id,
                                                                     vTPRId.Tpr_Object_Id, 
                                                                     '32520408.34564248');   --ThirdPartyReport._Reference_Report Result.ThirdParty Reference ID
             if v_session_control.gLogging_Full then
                pkg_os_logging.sp_log(
                                      in_session_id,
                                      in_transaction_id,
                                      v_procedure_name,
                                      ' |||||| Property id is :' || return_value
                                      );
              end if;
             
             if return_value is not null
               then
                 return return_value;
             end if;
         
         else
             if vTPRId.tpr_report_type = 18448                                            --Search Property                        
              then
                  if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log(
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          ' |||||| Report type is Search Property'
                                          );
                  end if;
                 
                  
                  return_value := pkg_os_object_io.fn_object_bv_path_get(in_session_id, 
                                                                         in_transaction_id,
                                                                         vTPRId.Tpr_Object_Id, 
                                                                         '32520508.33665248.33646248.33654248.33676448');   --ThirdPartyReport._Reference_Report Order._Reference_Most_Recent_SearchProperties._Child_BetterviewResponse._Child_BetterviewResponse_Results.Property ID
                   
                   
                  if v_session_control.gLogging_Full then
                    pkg_os_logging.sp_log(
                                          in_session_id,
                                          in_transaction_id,
                                          v_procedure_name,
                                          ' |||||| Property id for search is :' || return_value
                                          );
                  end if;
                                                 
                   if return_value is not null
                     then
                       return return_value;
                   end if;
             
             end if;
                       
         end if;
         
    end loop; 
    
    if return_value is null                                                                    
      then
          if v_session_control.gLogging_Full then
            pkg_os_logging.sp_log(
                                  in_session_id,
                                  in_transaction_id,
                                  v_procedure_name,
                                  ' |||||| Property id for the location does not exist'
                                  );
          end if;
             
     end if;
     
     return return_value;


exception

    when others then

        pkg_os_logging.sp_log(
                              in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' |||||| Error while fetching property id for location ' || in_location_id
                              );

        return  return_value;

end fn_get_bw_property_id;
--------------------------------------------------------------------------------------------------
function fn_get_consent_flag(in_session_id     in object.object_id%type,
                             in_transaction_id in object.object_id%type,
                             in_object_id      in object.object_id%type)
  return varchar2 as
  v_flag_value varchar2(10) := pkg_os_system_attribute.fn_get_system_attribute_value('DISPLAY_THIRD_PARTY_REP_CONSENT_FLAG');
  v_procedure_name constant system_log.program_name%type := 'fn_get_consent_flag';
  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);

  v_masterCustomer_id object.object_id%type;
  v_primary_ce_id     object.object_id%type;
  v_default_flag      varchar2(10);
  v_UI_flag           varchar2(10);
  v_object_type_id    object_type.OBJECT_TYPE_ID%type;

begin

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          ' |||||| Getting TPR consent for object id: ' ||
                          in_object_id);
  end if;

  if nvl(v_flag_value, 'F') = 'T' then
  
    v_object_type_id := pkg_os_object.fn_object_type_get(in_session_id,
                                                         in_transaction_id,
                                                         in_object_id);
  
    if v_object_type_id = 205 then
      --CustomerEntity
      v_primary_ce_id := in_object_id;
      
    else
      v_masterCustomer_id := pkg_os_object_search.fn_object_get_parent_of_type(in_session_id,
                                                                               in_transaction_id,
                                                                               in_object_id,
                                                                               12);
    
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              v_procedure_name,
                              ' |||||| v_masterCustomer_id: ' ||
                              v_masterCustomer_id);
      end if;
    
      v_primary_ce_id := pkg_os_object_io.fn_object_bv_path_get(in_session_id,
                                                                in_transaction_id,
                                                                v_masterCustomer_id,
                                                                '29253414'); --Customer._Reference_Primary Entity  
    
    end if;
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            ' |||||| v_primary_ce_id: ' || v_primary_ce_id);
    end if;
  
    v_UI_flag := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                   in_transaction_id,
                                                   v_primary_ce_id,
                                                   34211748);
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            ' |||||| v_UI_flag: ' || v_UI_flag);
    end if;
  
    if nvl(v_UI_flag, 0) = '1' then
      return 'T';
    else
      return 'F';
    end if;
  
  else
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            v_procedure_name,
                            ' The consent flag is not displayed on UI so considering default consent as Yes: ');
    end if;
  
    return 'T';
  
  end if;

exception
  when others then
  
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Exception while getting the consent for ordering TPR reports.' ||
                                '  Error Msg: ' || sqlerrm);
    return 'F';
  
end fn_get_consent_flag;
---------------------------------------------------------------------------------------------------
function fn_check_reports_ordered(in_session_id     in object.object_id%type,
                                  in_transaction_id in object.object_id%type,
                                  in_object_id      in object.object_id%type)
  return varchar2 as
  v_procedure_name constant system_log.program_name%type := pkg_name ||
                                                            'fn_check_reports_ordered';
  v_session_control pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                     in_transaction_id);

  v_count number;

begin

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          'in_session_id: ' || in_session_id ||
                          'in_object_id: ' || in_object_id);
  end if;

  select count(1)
    into v_count
    from TPR_REPORT
   where USER_SESSION_ID = in_session_id
     and TPR_REPORT_POLICY_ID = in_object_id
     and TPR_REPORT_STATUS_ID = 0
     and TPR_REPORT_RELEVANT_TF = 'T';

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          v_procedure_name,
                          'v_count: ' || v_count);
  end if;

  if nvl(v_count, 0) = 0 then
    return 'F';
  else
    return 'T';
  end if;

exception

  when others then
  
    pkg_os_logging.sp_log_error(in_session_id,
                                in_transaction_id,
                                v_procedure_name,
                                '...... Error while checking the ordered report count ' ||
                                in_session_id || ' : ' || in_object_id ||
                                ' : ' || '  Error Msg: ' || sqlerrm);
  
    return 'F';
  
end fn_check_reports_ordered;
----------------------------------------------------------------------------------------------------------
function fn_chk_order_eligiblity
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_master_cust_loc_id             in     object.object_id%type
)
return number
as
     v_procedure_name        constant    system_log.program_name%type          :=   pkg_name||'.fn_chk_order_eligiblity';
     v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_count                 number := 0;
begin
    select 
           count(1)
    into 
           v_count
    from 
           report_order_attribute_vw
    where 
           tpr_report_type = 20448
     AND 
           tpr_master_report_subject_id = in_master_cust_loc_id;
           
           
            if v_session_control.gLogging_Full then
                          pkg_os_logging.sp_log(
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                ' |||||| in_master_cust_loc_id '||in_master_cust_loc_id ||
                                                 ' |||||| v_count '||v_count 
                                                );
            end if;       
                              
     return v_count;
  
end fn_chk_order_eligiblity;

----------------------------------------------------------------------------------------------------------
function fn_chk_eligble_docs_to_render
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_policy_trx_id                  in     object.object_id%type
)
return number
as
     v_procedure_name        constant    system_log.program_name%type          :=   pkg_name||'fn_chk_eligble_docs_to_render';
     v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_count                 number := 0;
begin
    select 
           count(1)
    into 
           v_count
    from 
           Dragon_objectdocument
    where 
           document_parent_type_id=629
     AND 
           document_parent_id = in_policy_trx_id
           
     AND   NVL(DOCUMENT_RENDERING_STATUS_ENUM,0) <> 7;
           
           
            if v_session_control.gLogging_Full then
                          pkg_os_logging.sp_log(
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                ' |||||| in_policy_trx_id '||in_policy_trx_id ||
                                                 ' |||||| v_count '||v_count 
                                                );
            end if;       
                              
     return v_count;
  
end fn_chk_eligble_docs_to_render;

--------------------------OSPRODUCT-32433 Start--------------
/*
Function fn_partner_agreement_validity() is used to check if the agreement being passed
  to function as parameter is being used by any active policiesa and checks if 
  the user entered termination date is outside the policy term of active policy using 
  that agreement.
  */
function fn_partner_agreement_validity
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_agreement_id                   in     object.object_id%type
)
return varchar2
as
       v_session_control       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
       v_count                        number := 0;
       v_agreement_id                 object.object_id%type;
       v_partner_id                   object.object_id%type;
       v_agreement_termination_date   number;
       v_policy_effective_date        number;
       v_pol_eff_dt                   date default null;
begin
          
     select partner_agreement_id, partner_id
       into v_agreement_id, v_partner_id
       from dragon_partner_agreement
      where partner_agreement_id = in_agreement_id;
     
     v_agreement_termination_date := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                              in_transaction_id,
                                                              in_agreement_id,
                                                              30804146);
     
     if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(
                              in_session_id,
                              in_transaction_id,
                              'fn_partner_agreement_validity',
                              ' |||||| in_agreement_id: '||in_agreement_id ||
                              ' |||||| v_partner_id: '||v_partner_id||
                              ' |||||| v_agreement_termination_date: '||v_agreement_termination_date
                              );
      end if;  
      
      Select count(*)
        into v_count
        from dragon_policy
       where policy_partner_id = v_partner_id
         and policy_object_state_id not in (73,36746,20415) --Cancelled, Expired, Rewritten
       order by policy_effective_date desc;
     
     if v_count > 0 then
       select policy_effective_date
         into v_pol_eff_dt
         from (Select *
                 from dragon_policy
                where policy_partner_id = v_partner_id
                  and policy_object_state_id not in (73,36746,20415) --Cancelled, Expired, Rewritten
                order by policy_effective_date desc)
        where rownum = 1;
      end if;
        
     v_policy_effective_date := to_number(to_char(v_pol_eff_dt, 'yyyymmddhh24miss'));
     
     if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(
                              in_session_id,
                              in_transaction_id,
                              'fn_partner_agreement_validity',
                              ' |||||| v_policy_effective_date: '||v_policy_effective_date ||
                              ' |||||| v_pol_eff_dt: '||v_pol_eff_dt
                              );
      end if;  
     
     if v_pol_eff_dt is null then
       return 'T';
     elsif v_agreement_termination_date > v_policy_effective_date then
        return 'T';
     else
       return 'F';
     end if;
end fn_partner_agreement_validity;

/*  OSPRODUCT-32433
Function fn_partner_agrmt_policy_quote_count() is used to check if the 
  agreement id being passed as parameter to the function is being used by any of
  the active policies or quotes present in the system.
  If any active policies or quotes are found, returns T else F.
*/

function fn_partner_agrmt_policy_quote_count
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_agreement_id                   in     object.object_id%type
)
  return varchar2 as
  v_session_control   pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id,
                                                                                                       in_transaction_id);
  v_count             number := 0;
  v_agr_eff_dt        date;
  v_agr_exp_dt        date;
  v_agr_writing_comp  object.object_id%type;
  v_agr_juri_id       object.object_id%type;
  v_partner_id        object.object_id%type;
  v_agreement_id      object.object_id%type;
  v_agreement_product object.object_id%type;
begin

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          'fn_partner_agreement_policy_quote_count',
                          ' |||||| in_agreement_id: ' || in_agreement_id);
  end if;

  Select Agreement_Effective_Dt,
         Agreement_Termination_Dt,
         Agreement_Writing_Company,
         Agreement_Jurisdiction_Id,
         partner_id
    into v_agr_eff_dt,
         v_agr_exp_dt,
         v_agr_writing_comp,
         v_agr_juri_id,
         v_partner_id
    from Dragon_Partner_Agreement
   where partner_agreement_id = in_agreement_id;

  if v_session_control.gLogging_Full then
    pkg_os_logging.sp_log(in_session_id,
                          in_transaction_id,
                          'fn_partner_agreement_policy_quote_count',
                          ' |||||| v_agr_eff_dt: ' || v_agr_eff_dt ||
                          ' |||||| v_agr_exp_dt: ' || v_agr_exp_dt ||
                          ' |||||| v_agr_writing_comp: ' ||
                          v_agr_writing_comp || ' |||||| v_agr_juri_id: ' ||
                          v_agr_juri_id);
  end if;

  begin
    Select partner_agreement_id
      into v_agreement_id
      from dragon_partner_agreement
     where partner_id = v_partner_id
       and Agreement_Effective_Dt = v_agr_eff_dt
       and Agreement_Termination_Dt = v_agr_exp_dt
       and Agreement_Writing_Company = v_agr_writing_comp
       and Agreement_Jurisdiction_Id = v_agr_juri_id
       and agreement_status_id = 75;
  exception
    when no_data_found then
      return 'F';
  end;

  if v_agreement_id is not null then
    v_agreement_product := pkg_os_object_search.fn_object_11_child_get(in_session_id,
                                                                       in_transaction_id,
                                                                       v_agreement_id,
                                                                       382705);
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            'fn_partner_agreement_policy_quote_count',
                            ' |||||| v_agreement_product: ' ||
                            v_agreement_product ||
                            ' |||||| v_agreement_id: ' || v_agreement_id);
    end if;
  
    Select count(*)
      into v_count
      from dragon_policy
     where partner_agreement_id = v_agreement_product
       and policy_object_state_id not in (73, 36746, 20415); --Cancelled, Expired, Rewritten
  
    if v_session_control.gLogging_Full then
      pkg_os_logging.sp_log(in_session_id,
                            in_transaction_id,
                            'fn_partner_agreement_policy_quote_count',
                            ' |||||| Found Policies: ' || v_count);
    end if;
  
    if v_count = 0 then
    
      Select count(*)
        into v_count
        from dragon_policy_quote
       where partner_agreement_id = v_agreement_product
         and policyquote_object_state_id NOT IN (67, 23005, 40446); --Bound,Rejected,Lapsed
    
      if v_session_control.gLogging_Full then
        pkg_os_logging.sp_log(in_session_id,
                              in_transaction_id,
                              'fn_partner_agreement_policy_quote_count',
                              ' |||||| Found Quotes: ' || v_count);
      end if;
    
      if v_count > 0 then
        return 'T';
      else
        return 'F';
      end if;
    else
      return 'T';
    end if;
  end if;

end fn_partner_agrmt_policy_quote_count;


-------------------------OSPRODUCT-32433 End-----------------


----------------------------------------------------------------------------------------------------------
function fn_get_report_order_attr
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_master_cust_loc_id             in     object.object_id%type,
    in_policy_id                      in     object.object_id%type
)
return varchar2
as
     v_procedure_name               constant    system_log.program_name%type          :=   pkg_name||'.fn_get_report_order_attr';
     v_session_control              pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_workflow_attr_obj_id         object.object_id%type;
begin
    select 
           report_order_id
    into 
           v_workflow_attr_obj_id
    from 
           report_order_attribute_vw
    where 
           tpr_report_type = 20448
     AND 
           tpr_master_report_subject_id = in_master_cust_loc_id
     AND   
           policy_id =  in_policy_id ;
           
           
           if v_session_control.gLogging_Full then
                          pkg_os_logging.sp_log(
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                ' |||||| in_master_cust_loc_id '||in_master_cust_loc_id ||
                                                ' |||||| in_policy_id '||in_policy_id || 
                                                ' |||||| v_workflow_attr_obj_id '||v_workflow_attr_obj_id 
                                                );
            end if; 
                              
     return v_workflow_attr_obj_id;
  
end fn_get_report_order_attr;


--------------------------------------
function fn_set_tpr_report_id
(
    in_session_id            in     object.object_id%type,
    in_transaction_id        in     object.object_id%type,
    in_tpr_report_object_id           in     object.object_id%type
)
return varchar2
as
     v_procedure_name        constant    system_log.program_name%type          :=   pkg_name||'.fn_set_tpr_report_id';
     v_tpr_report_id    object.object_id%type;
begin
  /*select tr.tpr_report_id
    into v_tpr_report_id
    from tpr_report tr
   where tr.tpr_report_type_id = 22448
     AND tr.tpr_object_id = in_tpr_report_object_id;*/

	select max(tr.tpr_report_id)
		into v_tpr_report_id
		from tpr_report tr
	   where tr.tpr_report_type_id = 22448
		 and tr.tpr_report_status_id = 1201
		 AND tr.tpr_report_policy_id = in_tpr_report_object_id;
     
	 if v_tpr_report_id is null then
			v_tpr_report_id := pkg_os_object_io.fn_object_bv_get(in_session_id,
                                                                    in_transaction_id,
                                                                    in_session_id,
                                                                    PKG_OS_CONSTANT_BV.gbv_SessionObjectOfInterest);
	else
		  pkg_os_object_io.sp_object_bv_set
					   (
							in_session_id,
							in_transaction_id,
							in_session_id,
							pkg_os_constant_bv.gbv_SessionObjectOfInterest,
							v_tpr_report_id     
					   );
    end if;
	
     return v_tpr_report_id;
  
end  ;
--------------------------------------

procedure sp_get_executor_session_id
    (
        in_session_id                     in     object.object_id%type,
        in_transaction_id                 in     object.object_id%type,
        in_action_object_id               in     object.object_id%type
        
    )
    as
    v_executor_session_id varchar2(20);
    v_object_type object_type.OBJECT_TYPE_ID%type;
    begin
      v_object_type := pkg_os_object.fn_object_type_get(in_session_id     => in_session_id,
                                                        in_transaction_id =>in_transaction_id ,
                                                        in_object_id      => in_action_object_id);
      if v_object_type = pkg_os_async.gObjType_DragonAsyncAction then 
        v_executor_session_id := pkg_os_object_io.fn_object_bv_get(in_session_id => in_session_id,in_transaction_id => in_transaction_id,
                                 in_object_id => in_action_object_id,in_bv_id => pkg_os_dap.gbv_Ref_ExecutorSession);
      else
       select executor_user_session_id
       into v_executor_session_id
       from async_job_status where job_id=in_action_object_id;
     end if;
       pkg_os_object_io.sp_object_bv_set(in_session_id,
                                         in_transaction_id,
                                         in_session_id,
                                         pkg_os_constant_bv.gbv_SessionObjectOfInterest,
                                         v_executor_session_id);
    
                              pkg_os_logging.sp_log(
                                                    in_session_id,
                                                    in_transaction_id,
                                                    'sp_get_executor_Session_id',
                                                    ' |||||| in_action_object_id'||in_action_object_id ||
                                                    ' |||||| v_executor_session_id '||v_executor_session_id 
                                                    );
    
    
end sp_get_executor_session_id;
------------------------------------------
------------OSPRODUCT-30828:START----------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_get_cnt_rolled_back_trxn
--
--   %USAGE
--         Get the count of Number of rolled-back transactions that have not been rolled forward for policy
--
--   %ALGORITHM
--        Given an action id, this procedure:
--              1.Get the list of Policy transactions for using the policy passed.
--              2.Loop over the list of policy transactions and check the object state.
--              3.If the object state is rolled back, check the value of BV "PolicyTransaction.Transaction Rolled Forward?".
--              4.If it is not Yes(1), keep a count variable and keep increment.
--
--
--   %PARAMS
--        in_session_id
--        in_transaction_id
--        in_policy_id
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_get_cnt_rolled_back_trxn
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_policy_id                      in     object.object_id%type
)
return number
as
     v_procedure_name                        constant    system_log.program_name%type          :=   pkg_name||'fn_get_cnt_rolled_back_trxn';
     v_session_control                       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_count                                 number := 0;
     v_policy_trx_list                       pkg_os_object.t_object_list;
     v_policy_trx_index                      number;
     v_policy_trx_obj_state                  object.object_state_id%type;
     v_policy_trx_rollfwd_flg                number;
begin
    
     if v_session_control.gLogging_Full then
              pkg_os_logging.sp_log(
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '|||||| Getting count of Number of rolled-back transactions that have not been rolled forward for policy: '||in_policy_id
                                    );
     end if;
     
     
     pkg_os_object_search.sp_object_children_of_type_get
                                    (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_id,
                                            pkg_os_constant.gobjType_PolicyTransaction,
                                            v_policy_trx_list
                                     );
     
     if v_session_control.gLogging_Full then
              pkg_os_logging.sp_log(
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '|||||| Looping over the eligible policy transactions : '||v_policy_trx_list.count
                                    );
     end if;
                                     
     v_policy_trx_index := v_policy_trx_list.first;
     
     while v_policy_trx_index is not null loop
             
              v_policy_trx_obj_state := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_policy_trx_list(v_policy_trx_index),
                                                             pkg_os_constant_bv.gbv_GenObjObjectState
                                                          );
                                                          
              if v_session_control.gLogging_Full then
                
                  pkg_os_logging.sp_log(
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                '|||||| Object state for the policy transaction id : '||v_policy_trx_list(v_policy_trx_index)||' is: '||v_policy_trx_obj_state
                                        );
              end if;
              
              if v_policy_trx_obj_state = pkg_os_policy_transaction.gState_PolicyTrxRolledback then
                                        
                      v_policy_trx_rollfwd_flg := pkg_os_object_io.fn_object_bv_get
                                                         (
                                                             in_session_id,
                                                             in_transaction_id,
                                                             v_policy_trx_list(v_policy_trx_index),
                                                             pkg_os_policy_transaction.gbv_PolicyTrxRolledFwd
                                                         );   
                      
                      if v_session_control.gLogging_Full then
                
                                pkg_os_logging.sp_log(
                                                              in_session_id,
                                                              in_transaction_id,
                                                              v_procedure_name,
                                                              '|||||| Roll forwarded flag is : '||v_policy_trx_rollfwd_flg
                                                      );
                      end if;
                      
                      if nvl(v_policy_trx_rollfwd_flg, 0) <> pkg_os_constant.gBoolean_True then
                                   
                           v_count := v_count + 1;
                           
                      end if;  
                
              end if;
              
              v_policy_trx_index := v_policy_trx_list.next(v_policy_trx_index);
              
     end loop;
  return v_count;
end fn_get_cnt_rolled_back_trxn;

/* Deprecate*/
function fn_partner_agreement_policy_quote_count
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_agreement_id                   in     object.object_id%type,
    in_partner_agreement_product_id   in     object.object_id%type
)
return varchar2
as
begin 

return 'T';

end;

------------OSPRODUCT-32008:START----------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------
--
--   %NAME
--        fn_trx_to_be_roll_back
--
--   %USAGE
--         If there are eligible transaction to be rolled back due to OOS transaction return T else return F
--
--   %ALGORITHM
--              1.Get the list of Policy transactions using the policy passed.
--              2.Loop over the list of policy transactions and check if the input rule evaluates to True.
--              3. return true if the input rule evaluates to true for even a single policy transaction passed
--
--
--   %PARAMS
--        in_session_id
--        in_transaction_id
--        in_policy_id
--        in_rule_id
-----------------------------------------------------------------------------------------------------------------------------------------------------

function fn_trx_to_be_roll_back
(
    in_session_id                     in     object.object_id%type,
    in_transaction_id                 in     object.object_id%type,
    in_policy_id                      in     object.object_id%type,
    in_rule_id                        in     object.object_id%type
)
return char
as
     v_procedure_name                        constant    system_log.program_name%type          :=   pkg_name||'fn_trx_to_be_roll_back';
     v_session_control                       pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
     v_return                                char := 'T';
     v_policy_trx_list                       pkg_os_object.t_object_list;
     v_policy_trx_index                      number;
     v_policy_trx_obj_state                  object.object_state_id%type;
     v_policy_trx_rollfwd_flg                number;
begin
    
     if v_session_control.gLogging_Full then
              pkg_os_logging.sp_log(
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '|||||| Getting count of the eligible transactions to be rolled back due to OOS transaction: '||in_policy_id
                                    );
     end if;
     
     
     pkg_os_object_search.sp_object_children_of_type_get
                                    (
                                            in_session_id,
                                            in_transaction_id,
                                            in_policy_id,
                                            pkg_os_constant.gobjType_PolicyTransaction,
                                            v_policy_trx_list
                                     );
     
     if v_session_control.gLogging_Full then
              pkg_os_logging.sp_log(
                                            in_session_id,
                                            in_transaction_id,
                                            v_procedure_name,
                                            '|||||| Looping over the eligible policy transactions : '||v_policy_trx_list.count
                                    );
     end if;
                                     
     v_policy_trx_index := v_policy_trx_list.first;
     
     while v_policy_trx_index is not null loop
              
             if v_session_control.gLogging_Full then
                
                  pkg_os_logging.sp_log(
                                                in_session_id,
                                                in_transaction_id,
                                                v_procedure_name,
                                                '|||||| Executing rule for the policy transaction id : '||v_policy_trx_list(v_policy_trx_index)
                                        );
              end if;
               
              if pkg_os_exp.fn_evaluate_expression( 
                                                        in_session_id, 
                                                        in_transaction_id, 
                                                        v_policy_trx_list(v_policy_trx_index), 
                                                        in_rule_id) = 'T' 
              then 
                
                     return v_return;
                
              end if;
                                                          
              v_policy_trx_index := v_policy_trx_list.next(v_policy_trx_index);
              
     end loop;
  
  v_return := 'F';   
  return v_return;
  
end fn_trx_to_be_roll_back;


-----------------OSPRODUCT-33333:START-----------------
---------------------------------------------------------------------------------------------------------------
--   %NAME
--        fn_propsec_uwques_disp
--
--   %USAGE
--        
--
--   %ALGORITHM
--       
--
--
--   %PARAM    in_session_id                 Session Id
--   %PARAM    in_transaction_id             Transaction Id
--   %PARAM    in_policycpp                  policycpp
----------------------------------------------------------------------------------------------------------------
function fn_propsec_uwques_disp
(
       in_session_id        in     object.object_id%type,
       in_transaction_id    in     object.object_id%type,
       in_policycpp       in     object.object_id%type
) return char
as
  v_session_control             pkg_os_session.r_dragon_session_control := pkg_os_session.fn_session_control_get(in_session_id, in_transaction_id) ;
  v_procedure_name              constant system_log.program_name%type := pkg_name||'fn_propsec_uwques_disp';

  v_prop_lob_ind        business_variable.business_variable_id%type;
  v_object_list             pkg_os_object.t_object_list;
  v_object_list_index       number;
  v_return          char := 'F';
begin                              
   v_prop_lob_ind := pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,in_policycpp,gbv_prop_lob_ind);
  --Fetching BV
  --Fetching PolicyCPP's Commercial Fire/Property Line of Business Indicator BV using pkg_os_object_io.fn_object_bv_get
  --Checking if BV's LOOKUP VALUE is 'Yes', IF it is yes, we proceed forward, ELSE we return 'F'
   if  NVL(v_prop_lob_ind,2) = 2 THEN
   return v_return;
   ELSE
   v_object_list.DELETE;
  -- GETTING CHILD OBJECTS 
  -- Get all child objects starting from PolicyCPP of type PolicyCFBuildingCoverage 
  -- And maintaing a list
   pkg_os_object_Search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_policycpp,
                                                        gobj_policycfbc,
                                                        v_object_list);
  v_object_list_index :=  v_object_list.FIRST;
  -- ITERATING THROUGH THE LOOP
  -- Returning 'T' if even one of the instances return true (replicating BOOLEAN - ANY AGGREGATION)  
  -- Returning 'F' If no instances are found having value as 'T'
  WHILE v_object_list_index IS NOT NULL LOOP
  If pkg_os_object_io.fn_object_bv_get(in_session_id,in_transaction_id,v_object_list(v_object_list_index),gbv_prop_loc_buil_ind) = 1 then 
  v_return := 'T'; 
  return v_return;
  end if;
  v_object_list_index := v_object_list.NEXT(v_object_list_index);
  END LOOP;
  END IF;
  return v_return;                          
end fn_propsec_uwques_disp;
-----------------OSPRODUCT-33333:END-------------------
PROCEDURE SP_UPDATE_ASSET_PAYER_DM(in_session_id       in object.object_id%type,
                                 in_transaction_id   in object.object_id%type,
                                 in_action_object_id in object.object_id%type,
                                 io_action_outcome_id in out outcome.outcome_id%type)
as
  v_asset_payer_object_list  pkg_os_object.t_object_list;
  io_datamart_tf             char(1);
begin
  
    pkg_os_object_search.sp_object_children_of_type_get(in_session_id,
                                                        in_transaction_id,
                                                        in_action_object_id,
                                                        PKG_PC_FUNCTIONS.gObjType_Assetpayer,
                                                        v_asset_payer_object_list);    
   if v_asset_payer_object_list.count >0 then 

    for i in  v_asset_payer_object_list.first..v_asset_payer_object_list.last loop
        pkg_os_datamart.sp_datamart_update_row(in_session_id,
                                               in_transaction_id,
                                               v_asset_payer_object_list(i),
                                               io_datamart_tf);
    end loop;     
   
   end if;
   
   io_action_outcome_id := pkg_os_constant.gOutcome_OK;

end SP_UPDATE_aSSET_PAYER_DM;

END PKG_PC_FUNCTIONS;
/
